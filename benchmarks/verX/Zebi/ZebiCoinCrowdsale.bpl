// Boogie program verifier version 2.4.1.10503, Copyright (c) 2003-2014, Microsoft.
// Command Line Options: /print:ZebiCoinCrowdsale.bpl /pretty:1 /noVerify /noinfer __SolToBoogieTest_out.bpl

// spec_01
// LTLProperty: <>(started(*, old(owner_Ownable[token_ZCrowdsale[this]]) == this))

// spec_03
// #LTLProperty: [](!finished(*, old(withinRefundPeriod_ZCrowdsale[this]) != withinRefundPeriod_ZCrowdsale[this] && msg.sender != owner_Ownable[this]))

type Ref = int;

type ContractName = int;

var null: Ref;

var Ownable: ContractName;

var ERC20Basic: ContractName;

var ERC20: ContractName;

var SafeMath: ContractName;

var BasicToken: ContractName;

var StandardToken: ContractName;

var MintableToken: ContractName;

var ZebiCoin: ContractName;

var ZCrowdsale: ContractName;

var ZebiCoinCrowdsale: ContractName;

var ZebiCoinTempMgr: ContractName;

var ZebiMainCrowdsale: ContractName;

function {:smtdefined "x"} ConstantToRef(x: int) : Ref;

function BoogieRefToInt(x: Ref) : int;

function {:bvbuiltin "mod"} modBpl(x: int, y: int) : int;

function keccak256(x: int) : int;

function abiEncodePacked1(x: int) : int;

function _SumMapping_VeriSol(x: [Ref]int) : int;

function abiEncodePacked2(x: int, y: int) : int;

function abiEncodePacked1R(x: Ref) : int;

function abiEncodePacked2R(x: Ref, y: int) : int;

function {:smtdefined "((as const (Array Int Int)) 0)"} zeroRefIntArr() : [Ref]int;

function {:smtdefined "((as const (Array Int Int)) 0)"} zeroIntIntArr() : [int]int;

function {:smtdefined "((as const (Array Int Bool)) false)"} zeroRefBoolArr() : [Ref]bool;

function {:smtdefined "((as const (Array Int Bool)) false)"} zeroIntBoolArr() : [int]bool;

function {:smtdefined "((as const (Array Int Int)) 0)"} zeroRefRefArr() : [Ref]Ref;

function {:smtdefined "((as const (Array Int Int)) 0)"} zeroIntRefArr() : [int]Ref;

function nonlinearMul(x: int, y: int) : int;

function nonlinearDiv(x: int, y: int) : int;

function nonlinearPow(x: int, y: int) : int;

var Balance: [Ref]int;

var DType: [Ref]ContractName;

var Alloc: [Ref]bool;

var balance_ADDR: [Ref]int;

var M_Ref_int_balances0: [Ref][Ref]int;

var sum_balances0: [Ref]int;

var M_Ref_int_allowed1: [Ref][Ref]int;

var M_Ref_Ref_allowed1: [Ref][Ref]Ref;

var sum_allowed1: [Ref]int;

var M_Ref_int_contribution2: [Ref][Ref]int;

var sum_contribution2: [Ref]int;

var M_Ref_bool_cancelledList3: [Ref][Ref]bool;

var sum_cancelledList3: [Ref]int;

var M_Ref_bool_preSaleCancelledList4: [Ref][Ref]bool;

var sum_preSaleCancelledList4: [Ref]int;

var M_Ref_int_noncsAllocations5: [Ref][Ref]int;

var sum_noncsAllocations5: [Ref]int;

var M_Ref_int_preSaleRefunds6: [Ref][Ref]int;

var sum_preSaleRefunds6: [Ref]int;

var M_Ref_int_mainContribution7: [Ref][Ref]int;

var sum_mainContribution7: [Ref]int;

var M_Ref_bool_mainCancelledList8: [Ref][Ref]bool;

var sum_mainCancelledList8: [Ref]int;

var M_Ref_int_goldListContribution9: [Ref][Ref]int;

var sum_goldListContribution9: [Ref]int;

var M_Ref_bool_goldList10: [Ref][Ref]bool;

var sum_goldList10: [Ref]int;

var M_Ref_bool_kycAcceptedList11: [Ref][Ref]bool;

var sum_kycAcceptedList11: [Ref]int;

var M_Ref_int_preSaleRefundsInMainSale12: [Ref][Ref]int;

var sum_preSaleRefundsInMainSale12: [Ref]int;

var Length: [Ref]int;

var revert: bool;

var gas: int;

var now: int;

procedure {:inline 1} FreshRefGenerator__success() returns (newRef: Ref);
  modifies Alloc;



var {:access "this.owner=owner_Ownable[this]"} owner_Ownable: [Ref]Ref;

procedure {:inline 1} Ownable_Ownable_NoBaseCtor__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance, owner_Ownable;



procedure {:constructor} {:public} {:inline 1} Ownable_Ownable(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, owner_Ownable;



implementation Ownable_Ownable(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} transferOwnership_Ownable(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, newOwner_s54: Ref);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, owner_Ownable;



implementation transferOwnership_Ownable(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, newOwner_s54: Ref)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call transferOwnership_Ownable__fail(this, msgsender_MSG, msgvalue_MSG, newOwner_s54);
        assume revert || gas < 0;
    }
    else
    {
        call transferOwnership_Ownable__success(this, msgsender_MSG, msgvalue_MSG, newOwner_s54);
        assume !revert && gas >= 0;
    }
}



procedure {:inline 1} ERC20Basic_ERC20Basic_NoBaseCtor__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance;



procedure {:inline 1} ERC20Basic_ERC20Basic(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance;



implementation ERC20Basic_ERC20Basic(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} totalSupply_ERC20Basic(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: int);



procedure {:public} {:inline 1} balanceOf_ERC20Basic(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, who_s67: Ref)
   returns (__ret_0_: int);



procedure {:public} {:inline 1} transfer_ERC20Basic(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, to_s76: Ref, value_s76: int)
   returns (__ret_0_: bool);



procedure {:inline 1} ERC20_ERC20_NoBaseCtor__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance;



procedure {:inline 1} ERC20_ERC20(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance;



implementation ERC20_ERC20(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} allowance_ERC20(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    owner_s96: Ref, 
    spender_s96: Ref)
   returns (__ret_0_: int);



procedure {:public} {:inline 1} transferFrom_ERC20(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    from_s107: Ref, 
    to_s107: Ref, 
    value_s107: int)
   returns (__ret_0_: bool);



procedure {:public} {:inline 1} approve_ERC20(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    spender_s116: Ref, 
    value_s116: int)
   returns (__ret_0_: bool);



procedure {:inline 1} SafeMath_SafeMath_NoBaseCtor__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance;



procedure {:inline 1} SafeMath_SafeMath(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance;



implementation SafeMath_SafeMath(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call SafeMath_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:inline 1} sub_SafeMath__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, a_s145: int, b_s145: int)
   returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} add_SafeMath__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, a_s169: int, b_s169: int)
   returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} BasicToken_BasicToken_NoBaseCtor__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, Alloc;



procedure {:inline 1} BasicToken_BasicToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, Alloc;



implementation BasicToken_BasicToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



var {:access "this.balances[i0]=M_Ref_int_balances0[balances_BasicToken[this]][i0]"} {:sum "sum(this.balances)=sum_balances0[balances_BasicToken[this]]"} balances_BasicToken: [Ref]Ref;

var {:access "this.totalSupply_=totalSupply__BasicToken[this]"} totalSupply__BasicToken: [Ref]int;

procedure {:public} {:inline 1} totalSupply_BasicToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas;



implementation totalSupply_BasicToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := totalSupply_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := totalSupply_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} transfer_BasicToken(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _to_s249: Ref, 
    _value_s249: int)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, sum_balances0, M_Ref_int_balances0;



implementation transfer_BasicToken(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _to_s249: Ref, 
    _value_s249: int)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := transfer_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s249, _value_s249);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := transfer_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s249, _value_s249);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} balanceOf_BasicToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _owner_s261: Ref)
   returns (balance_s261: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas;



implementation balanceOf_BasicToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _owner_s261: Ref)
   returns (balance_s261: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call balance_s261 := balanceOf_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s261);
        assume revert || gas < 0;
    }
    else
    {
        call balance_s261 := balanceOf_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s261);
        assume !revert && gas >= 0;
    }
}



procedure {:inline 1} StandardToken_StandardToken_NoBaseCtor__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance, allowed_StandardToken, M_Ref_Ref_allowed1, M_Ref_int_allowed1, Alloc;



procedure {:inline 1} StandardToken_StandardToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, Alloc, allowed_StandardToken, M_Ref_Ref_allowed1, M_Ref_int_allowed1;



implementation StandardToken_StandardToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



var {:access "this.allowed[i0][i1]=M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][i0]][i1]"} {:sum "sum(this.allowed)=sum_allowed1[allowed_StandardToken[this]]"} allowed_StandardToken: [Ref]Ref;

procedure {:public} {:inline 1} transferFrom_StandardToken(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _from_s358: Ref, 
    _to_s358: Ref, 
    _value_s358: int)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, M_Ref_Ref_allowed1, M_Ref_int_allowed1, sum_allowed1, sum_balances0, M_Ref_int_balances0, Alloc;



implementation transferFrom_StandardToken(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _from_s358: Ref, 
    _to_s358: Ref, 
    _value_s358: int)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := transferFrom_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s358, _to_s358, _value_s358);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := transferFrom_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s358, _to_s358, _value_s358);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} approve_StandardToken(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _spender_s386: Ref, 
    _value_s386: int)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, M_Ref_Ref_allowed1, M_Ref_int_allowed1, sum_allowed1, Alloc;



implementation approve_StandardToken(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _spender_s386: Ref, 
    _value_s386: int)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := approve_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s386, _value_s386);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := approve_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s386, _value_s386);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} allowance_StandardToken(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _owner_s402: Ref, 
    _spender_s402: Ref)
   returns (__ret_0_: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, M_Ref_Ref_allowed1, M_Ref_int_allowed1, sum_allowed1, Alloc;



implementation allowance_StandardToken(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _owner_s402: Ref, 
    _spender_s402: Ref)
   returns (__ret_0_: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := allowance_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s402, _spender_s402);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := allowance_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s402, _spender_s402);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} increaseApproval_StandardToken(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _spender_s443: Ref, 
    _addedValue_s443: int)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, M_Ref_Ref_allowed1, M_Ref_int_allowed1, sum_allowed1, Alloc;



implementation increaseApproval_StandardToken(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _spender_s443: Ref, 
    _addedValue_s443: int)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := increaseApproval_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s443, _addedValue_s443);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := increaseApproval_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s443, _addedValue_s443);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} decreaseApproval_StandardToken(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _spender_s503: Ref, 
    _subtractedValue_s503: int)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, M_Ref_Ref_allowed1, M_Ref_int_allowed1, sum_allowed1, Alloc;



implementation decreaseApproval_StandardToken(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _spender_s503: Ref, 
    _subtractedValue_s503: int)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := decreaseApproval_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s503, _subtractedValue_s503);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := decreaseApproval_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s503, _subtractedValue_s503);
        assume !revert && gas >= 0;
    }
}



procedure {:inline 1} MintableToken_MintableToken_NoBaseCtor__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance, mintingFinished_MintableToken, transferAllowed_MintableToken;



procedure {:inline 1} MintableToken_MintableToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, Alloc, allowed_StandardToken, M_Ref_Ref_allowed1, M_Ref_int_allowed1, owner_Ownable, mintingFinished_MintableToken, transferAllowed_MintableToken;



implementation MintableToken_MintableToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call MintableToken_MintableToken__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



var {:access "this.mintingFinished=mintingFinished_MintableToken[this]"} mintingFinished_MintableToken: [Ref]bool;

var {:access "this.transferAllowed=transferAllowed_MintableToken[this]"} transferAllowed_MintableToken: [Ref]bool;

procedure {:public} {:inline 1} mint_MintableToken(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _to_s584: Ref, 
    _amount_s584: int)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0;



implementation mint_MintableToken(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _to_s584: Ref, 
    _amount_s584: int)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := mint_MintableToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s584, _amount_s584);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := mint_MintableToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s584, _amount_s584);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} finishMinting_MintableToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, mintingFinished_MintableToken;



implementation finishMinting_MintableToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := finishMinting_MintableToken__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := finishMinting_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} resumeMinting_MintableToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, mintingFinished_MintableToken;



implementation resumeMinting_MintableToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := resumeMinting_MintableToken__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := resumeMinting_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} burn_MintableToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s661: Ref)
   returns (success_s661: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, sum_balances0, M_Ref_int_balances0, totalSupply__BasicToken;



implementation burn_MintableToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s661: Ref)
   returns (success_s661: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call success_s661 := burn_MintableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s661);
        assume revert || gas < 0;
    }
    else
    {
        call success_s661 := burn_MintableToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s661);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} startTransfer_MintableToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, transferAllowed_MintableToken;



implementation startTransfer_MintableToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call startTransfer_MintableToken__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call startTransfer_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} endTransfer_MintableToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, transferAllowed_MintableToken;



implementation endTransfer_MintableToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call endTransfer_MintableToken__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call endTransfer_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} transfer_MintableToken(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _to_s704: Ref, 
    _value_s704: int)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, sum_balances0, M_Ref_int_balances0;



implementation transfer_MintableToken(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _to_s704: Ref, 
    _value_s704: int)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := transfer_MintableToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s704, _value_s704);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := transfer_MintableToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s704, _value_s704);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} transferFrom_MintableToken(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _from_s730: Ref, 
    _to_s730: Ref, 
    _value_s730: int)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, M_Ref_Ref_allowed1, M_Ref_int_allowed1, sum_allowed1, sum_balances0, M_Ref_int_balances0, Alloc;



implementation transferFrom_MintableToken(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _from_s730: Ref, 
    _to_s730: Ref, 
    _value_s730: int)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := transferFrom_MintableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s730, _to_s730, _value_s730);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := transferFrom_MintableToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s730, _to_s730, _value_s730);
        assume !revert && gas >= 0;
    }
}



procedure {:inline 1} ZebiCoin_ZebiCoin_NoBaseCtor__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance, name_ZebiCoin, symbol_ZebiCoin, decimals_ZebiCoin;



procedure {:inline 1} ZebiCoin_ZebiCoin(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, Alloc, allowed_StandardToken, M_Ref_Ref_allowed1, M_Ref_int_allowed1, owner_Ownable, mintingFinished_MintableToken, transferAllowed_MintableToken, name_ZebiCoin, symbol_ZebiCoin, decimals_ZebiCoin;



implementation ZebiCoin_ZebiCoin(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call ZebiCoin_ZebiCoin__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call ZebiCoin_ZebiCoin__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



var {:access "this.name=name_ZebiCoin[this]"} name_ZebiCoin: [Ref]int;

var {:access "this.symbol=symbol_ZebiCoin[this]"} symbol_ZebiCoin: [Ref]int;

var {:access "this.decimals=decimals_ZebiCoin[this]"} decimals_ZebiCoin: [Ref]int;

var {:access "this.token=token_ZCrowdsale[this]"} token_ZCrowdsale: [Ref]Ref;

var {:access "this.tokenDecimals=tokenDecimals_ZCrowdsale[this]"} tokenDecimals_ZCrowdsale: [Ref]int;

var {:access "this.startTime=startTime_ZCrowdsale[this]"} startTime_ZCrowdsale: [Ref]int;

var {:access "this.endTime=endTime_ZCrowdsale[this]"} endTime_ZCrowdsale: [Ref]int;

var {:access "this.minTransAmount=minTransAmount_ZCrowdsale[this]"} minTransAmount_ZCrowdsale: [Ref]int;

var {:access "this.mintedTokensCap=mintedTokensCap_ZCrowdsale[this]"} mintedTokensCap_ZCrowdsale: [Ref]int;

var {:access "this.contribution[i0]=M_Ref_int_contribution2[contribution_ZCrowdsale[this]][i0]"} {:sum "sum(this.contribution)=sum_contribution2[contribution_ZCrowdsale[this]]"} contribution_ZCrowdsale: [Ref]Ref;

var {:access "this.cancelledList[i0]=M_Ref_bool_cancelledList3[cancelledList_ZCrowdsale[this]][i0]"} {:sum "sum(this.cancelledList)=sum_cancelledList3[cancelledList_ZCrowdsale[this]]"} cancelledList_ZCrowdsale: [Ref]Ref;

var {:access "this.wallet=wallet_ZCrowdsale[this]"} wallet_ZCrowdsale: [Ref]Ref;

var {:access "this.withinRefundPeriod=withinRefundPeriod_ZCrowdsale[this]"} withinRefundPeriod_ZCrowdsale: [Ref]bool;

var {:access "this.ETHtoZCOrate=ETHtoZCOrate_ZCrowdsale[this]"} ETHtoZCOrate_ZCrowdsale: [Ref]int;

var {:access "this.weiRaised=weiRaised_ZCrowdsale[this]"} weiRaised_ZCrowdsale: [Ref]int;

var {:access "this.stopped=stopped_ZCrowdsale[this]"} stopped_ZCrowdsale: [Ref]bool;

procedure {:inline 1} ZCrowdsale_ZCrowdsale_NoBaseCtor__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s914: int, 
    _endTime_s914: int, 
    _ETHtoZCOrate_s914: int, 
    _wallet_s914: Ref, 
    _minTransAmount_s914: int, 
    _mintedTokensCap_s914: int);
  modifies Balance, tokenDecimals_ZCrowdsale, startTime_ZCrowdsale, endTime_ZCrowdsale, minTransAmount_ZCrowdsale, mintedTokensCap_ZCrowdsale, contribution_ZCrowdsale, M_Ref_int_contribution2, sum_contribution2, cancelledList_ZCrowdsale, M_Ref_bool_cancelledList3, wallet_ZCrowdsale, withinRefundPeriod_ZCrowdsale, ETHtoZCOrate_ZCrowdsale, weiRaised_ZCrowdsale, stopped_ZCrowdsale, revert, token_ZCrowdsale, Alloc, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, allowed_StandardToken, M_Ref_Ref_allowed1, M_Ref_int_allowed1, owner_Ownable, mintingFinished_MintableToken, transferAllowed_MintableToken, name_ZebiCoin, symbol_ZebiCoin, decimals_ZebiCoin;



procedure {:constructor} {:public} {:inline 1} ZCrowdsale_ZCrowdsale(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s914: int, 
    _endTime_s914: int, 
    _ETHtoZCOrate_s914: int, 
    _wallet_s914: Ref, 
    _minTransAmount_s914: int, 
    _mintedTokensCap_s914: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, owner_Ownable, tokenDecimals_ZCrowdsale, startTime_ZCrowdsale, endTime_ZCrowdsale, minTransAmount_ZCrowdsale, mintedTokensCap_ZCrowdsale, contribution_ZCrowdsale, M_Ref_int_contribution2, sum_contribution2, cancelledList_ZCrowdsale, M_Ref_bool_cancelledList3, wallet_ZCrowdsale, withinRefundPeriod_ZCrowdsale, ETHtoZCOrate_ZCrowdsale, weiRaised_ZCrowdsale, stopped_ZCrowdsale, token_ZCrowdsale, Alloc, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, allowed_StandardToken, M_Ref_Ref_allowed1, M_Ref_int_allowed1, mintingFinished_MintableToken, transferAllowed_MintableToken, name_ZebiCoin, symbol_ZebiCoin, decimals_ZebiCoin;



implementation ZCrowdsale_ZCrowdsale(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s914: int, 
    _endTime_s914: int, 
    _ETHtoZCOrate_s914: int, 
    _wallet_s914: Ref, 
    _minTransAmount_s914: int, 
    _mintedTokensCap_s914: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call ZCrowdsale_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, _startTime_s914, _endTime_s914, _ETHtoZCOrate_s914, _wallet_s914, _minTransAmount_s914, _mintedTokensCap_s914);
        assume revert || gas < 0;
    }
    else
    {
        call ZCrowdsale_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, _startTime_s914, _endTime_s914, _ETHtoZCOrate_s914, _wallet_s914, _minTransAmount_s914, _mintedTokensCap_s914);
        assume !revert && gas >= 0;
    }
}



procedure {:inline 1} FallbackMethod_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance, gas, revert, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9;



procedure {:public} {:inline 1} finishMint_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, mintingFinished_MintableToken;



implementation finishMint_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := finishMint_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := finishMint_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} resumeMint_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, mintingFinished_MintableToken;



implementation resumeMint_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := resumeMint_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := resumeMint_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} startTransfer_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, transferAllowed_MintableToken;



implementation startTransfer_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call startTransfer_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call startTransfer_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} endTransfer_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, transferAllowed_MintableToken;



implementation endTransfer_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call endTransfer_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call endTransfer_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} transferTokenOwnership_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s989: Ref);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, owner_Ownable;



implementation transferTokenOwnership_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s989: Ref)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call transferTokenOwnership_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, owner_s989);
        assume revert || gas < 0;
    }
    else
    {
        call transferTokenOwnership_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, owner_s989);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} viewCancelledList_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1001: Ref)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas;



implementation viewCancelledList_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1001: Ref)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := viewCancelledList_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, participant_s1001);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := viewCancelledList_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, participant_s1001);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} buyTokens_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, beneficiary_s1067: Ref);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, Balance, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9;



implementation buyTokens_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, beneficiary_s1067: Ref)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call buyTokens_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, beneficiary_s1067);
        assume revert || gas < 0;
    }
    else
    {
        call buyTokens_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, beneficiary_s1067);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} getTokenAmount_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, weiAmount_s1082: int)
   returns (__ret_0_: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas;



implementation getTokenAmount_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, weiAmount_s1082: int)
   returns (__ret_0_: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := getTokenAmount_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, weiAmount_s1082);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := getTokenAmount_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, weiAmount_s1082);
        assume !revert && gas >= 0;
    }
}



procedure {:inline 1} forwardFunds_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0;



procedure {:public} {:inline 1} enableRefundPeriod_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, withinRefundPeriod_ZCrowdsale;



implementation enableRefundPeriod_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call enableRefundPeriod_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call enableRefundPeriod_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} disableRefundPeriod_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, withinRefundPeriod_ZCrowdsale;



implementation disableRefundPeriod_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call disableRefundPeriod_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call disableRefundPeriod_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} emergencyStop_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, stopped_ZCrowdsale;



implementation emergencyStop_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call emergencyStop_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call emergencyStop_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} release_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, stopped_ZCrowdsale;



implementation release_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call release_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call release_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} viewContribution_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1145: Ref)
   returns (__ret_0_: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas;



implementation viewContribution_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1145: Ref)
   returns (__ret_0_: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := viewContribution_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, participant_s1145);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := viewContribution_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, participant_s1145);
        assume !revert && gas >= 0;
    }
}



procedure {:inline 1} validPurchase_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas;



procedure {:public} {:inline 1} refund_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, sum_contribution2, M_Ref_int_contribution2, sum_balances0, M_Ref_int_balances0, totalSupply__BasicToken, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale;



implementation refund_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call refund_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call refund_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} forcedRefund_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s1308: Ref);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, sum_contribution2, M_Ref_int_contribution2, sum_balances0, M_Ref_int_balances0, totalSupply__BasicToken, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale;



implementation forcedRefund_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s1308: Ref)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call forcedRefund_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, _from_s1308);
        assume revert || gas < 0;
    }
    else
    {
        call forcedRefund_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, _from_s1308);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} takeEth_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance;



implementation takeEth_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call takeEth_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call takeEth_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} withdraw_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _value_s1337: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0;



implementation withdraw_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _value_s1337: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call withdraw_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, _value_s1337);
        assume revert || gas < 0;
    }
    else
    {
        call withdraw_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, _value_s1337);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} addCancellation_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s1355: Ref)
   returns (success_s1355: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, M_Ref_bool_cancelledList3;



implementation addCancellation_ZCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s1355: Ref)
   returns (success_s1355: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call success_s1355 := addCancellation_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, _participant_s1355);
        assume revert || gas < 0;
    }
    else
    {
        call success_s1355 := addCancellation_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, _participant_s1355);
        assume !revert && gas >= 0;
    }
}



procedure {:inline 1} ZebiCoinCrowdsale_ZebiCoinCrowdsale_NoBaseCtor__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s1382: int, 
    _endTime_s1382: int, 
    _rate_s1382: int, 
    _wallet_s1382: Ref, 
    _minTransAmount_s1382: int, 
    _mintedTokensCap_s1382: int);
  modifies Balance;



procedure {:constructor} {:public} {:inline 1} ZebiCoinCrowdsale_ZebiCoinCrowdsale(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s1382: int, 
    _endTime_s1382: int, 
    _rate_s1382: int, 
    _wallet_s1382: Ref, 
    _minTransAmount_s1382: int, 
    _mintedTokensCap_s1382: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, owner_Ownable, tokenDecimals_ZCrowdsale, startTime_ZCrowdsale, endTime_ZCrowdsale, minTransAmount_ZCrowdsale, mintedTokensCap_ZCrowdsale, contribution_ZCrowdsale, M_Ref_int_contribution2, sum_contribution2, cancelledList_ZCrowdsale, M_Ref_bool_cancelledList3, wallet_ZCrowdsale, withinRefundPeriod_ZCrowdsale, ETHtoZCOrate_ZCrowdsale, weiRaised_ZCrowdsale, stopped_ZCrowdsale, token_ZCrowdsale, Alloc, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, allowed_StandardToken, M_Ref_Ref_allowed1, M_Ref_int_allowed1, mintingFinished_MintableToken, transferAllowed_MintableToken, name_ZebiCoin, symbol_ZebiCoin, decimals_ZebiCoin;



implementation ZebiCoinCrowdsale_ZebiCoinCrowdsale(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s1382: int, 
    _endTime_s1382: int, 
    _rate_s1382: int, 
    _wallet_s1382: Ref, 
    _minTransAmount_s1382: int, 
    _mintedTokensCap_s1382: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call ZebiCoinCrowdsale_ZebiCoinCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, _startTime_s1382, _endTime_s1382, _rate_s1382, _wallet_s1382, _minTransAmount_s1382, _mintedTokensCap_s1382);
        assume revert || gas < 0;
    }
    else
    {
        call ZebiCoinCrowdsale_ZebiCoinCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, _startTime_s1382, _endTime_s1382, _rate_s1382, _wallet_s1382, _minTransAmount_s1382, _mintedTokensCap_s1382);
        assume !revert && gas >= 0;
    }
}



var {:access "this.wallet=wallet_ZebiCoinTempMgr[this]"} wallet_ZebiCoinTempMgr: [Ref]Ref;

var {:access "this.preSaleCSSC=preSaleCSSC_ZebiCoinTempMgr[this]"} preSaleCSSC_ZebiCoinTempMgr: [Ref]Ref;

var {:access "this.tsc=tsc_ZebiCoinTempMgr[this]"} tsc_ZebiCoinTempMgr: [Ref]Ref;

var {:access "this.tokenDecimals=tokenDecimals_ZebiCoinTempMgr[this]"} tokenDecimals_ZebiCoinTempMgr: [Ref]int;

var {:access "this.preSaleCancelledList[i0]=M_Ref_bool_preSaleCancelledList4[preSaleCancelledList_ZebiCoinTempMgr[this]][i0]"} {:sum "sum(this.preSaleCancelledList)=sum_preSaleCancelledList4[preSaleCancelledList_ZebiCoinTempMgr[this]]"} preSaleCancelledList_ZebiCoinTempMgr: [Ref]Ref;

var {:access "this.noncsAllocations[i0]=M_Ref_int_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]][i0]"} {:sum "sum(this.noncsAllocations)=sum_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]]"} noncsAllocations_ZebiCoinTempMgr: [Ref]Ref;

var {:access "this.withinRefundPeriod=withinRefundPeriod_ZebiCoinTempMgr[this]"} withinRefundPeriod_ZebiCoinTempMgr: [Ref]bool;

var {:access "this.preSaleRefunds[i0]=M_Ref_int_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]][i0]"} {:sum "sum(this.preSaleRefunds)=sum_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]]"} preSaleRefunds_ZebiCoinTempMgr: [Ref]Ref;

procedure {:inline 1} ZebiCoinTempMgr_ZebiCoinTempMgr_NoBaseCtor__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    presaleCrowdsale_s1483: Ref, 
    tokenAddress_s1483: Ref, 
    _wallet_s1483: Ref);
  modifies Balance, wallet_ZebiCoinTempMgr, tokenDecimals_ZebiCoinTempMgr, preSaleCancelledList_ZebiCoinTempMgr, M_Ref_bool_preSaleCancelledList4, noncsAllocations_ZebiCoinTempMgr, M_Ref_int_noncsAllocations5, sum_noncsAllocations5, withinRefundPeriod_ZebiCoinTempMgr, preSaleRefunds_ZebiCoinTempMgr, M_Ref_int_preSaleRefunds6, sum_preSaleRefunds6, preSaleCSSC_ZebiCoinTempMgr, tsc_ZebiCoinTempMgr, Alloc;



procedure {:constructor} {:public} {:inline 1} ZebiCoinTempMgr_ZebiCoinTempMgr(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    presaleCrowdsale_s1483: Ref, 
    tokenAddress_s1483: Ref, 
    _wallet_s1483: Ref);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, owner_Ownable, wallet_ZebiCoinTempMgr, tokenDecimals_ZebiCoinTempMgr, preSaleCancelledList_ZebiCoinTempMgr, M_Ref_bool_preSaleCancelledList4, noncsAllocations_ZebiCoinTempMgr, M_Ref_int_noncsAllocations5, sum_noncsAllocations5, withinRefundPeriod_ZebiCoinTempMgr, preSaleRefunds_ZebiCoinTempMgr, M_Ref_int_preSaleRefunds6, sum_preSaleRefunds6, preSaleCSSC_ZebiCoinTempMgr, tsc_ZebiCoinTempMgr, Alloc;



implementation ZebiCoinTempMgr_ZebiCoinTempMgr(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    presaleCrowdsale_s1483: Ref, 
    tokenAddress_s1483: Ref, 
    _wallet_s1483: Ref)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call ZebiCoinTempMgr_ZebiCoinTempMgr__fail(this, msgsender_MSG, msgvalue_MSG, presaleCrowdsale_s1483, tokenAddress_s1483, _wallet_s1483);
        assume revert || gas < 0;
    }
    else
    {
        call ZebiCoinTempMgr_ZebiCoinTempMgr__success(this, msgsender_MSG, msgvalue_MSG, presaleCrowdsale_s1483, tokenAddress_s1483, _wallet_s1483);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} finishMint_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, mintingFinished_MintableToken;



implementation finishMint_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := finishMint_ZebiCoinTempMgr__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := finishMint_ZebiCoinTempMgr__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} resumeMint_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, mintingFinished_MintableToken;



implementation resumeMint_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := resumeMint_ZebiCoinTempMgr__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := resumeMint_ZebiCoinTempMgr__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} startTransfer_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, transferAllowed_MintableToken;



implementation startTransfer_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call startTransfer_ZebiCoinTempMgr__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call startTransfer_ZebiCoinTempMgr__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} endTransfer_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, transferAllowed_MintableToken;



implementation endTransfer_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call endTransfer_ZebiCoinTempMgr__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call endTransfer_ZebiCoinTempMgr__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} transferTokenOwnership_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s1549: Ref);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, owner_Ownable;



implementation transferTokenOwnership_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s1549: Ref)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call transferTokenOwnership_ZebiCoinTempMgr__fail(this, msgsender_MSG, msgvalue_MSG, owner_s1549);
        assume revert || gas < 0;
    }
    else
    {
        call transferTokenOwnership_ZebiCoinTempMgr__success(this, msgsender_MSG, msgvalue_MSG, owner_s1549);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} allocatenonCSTokens_ZebiCoinTempMgr(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    beneficiary_s1597: Ref, 
    tokens_s1597: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, sum_noncsAllocations5, M_Ref_int_noncsAllocations5, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0;



implementation allocatenonCSTokens_ZebiCoinTempMgr(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    beneficiary_s1597: Ref, 
    tokens_s1597: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call allocatenonCSTokens_ZebiCoinTempMgr__fail(this, msgsender_MSG, msgvalue_MSG, beneficiary_s1597, tokens_s1597);
        assume revert || gas < 0;
    }
    else
    {
        call allocatenonCSTokens_ZebiCoinTempMgr__success(this, msgsender_MSG, msgvalue_MSG, beneficiary_s1597, tokens_s1597);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} revertNoncsallocation_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, beneficiary_s1625: Ref);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, sum_noncsAllocations5, M_Ref_int_noncsAllocations5, sum_balances0, M_Ref_int_balances0, totalSupply__BasicToken;



implementation revertNoncsallocation_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, beneficiary_s1625: Ref)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call revertNoncsallocation_ZebiCoinTempMgr__fail(this, msgsender_MSG, msgvalue_MSG, beneficiary_s1625);
        assume revert || gas < 0;
    }
    else
    {
        call revertNoncsallocation_ZebiCoinTempMgr__success(this, msgsender_MSG, msgvalue_MSG, beneficiary_s1625);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} viewNoncsallocations_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1637: Ref)
   returns (__ret_0_: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas;



implementation viewNoncsallocations_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1637: Ref)
   returns (__ret_0_: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := viewNoncsallocations_ZebiCoinTempMgr__fail(this, msgsender_MSG, msgvalue_MSG, participant_s1637);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := viewNoncsallocations_ZebiCoinTempMgr__success(this, msgsender_MSG, msgvalue_MSG, participant_s1637);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} viewPreSaleCancelledList_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1649: Ref)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas;



implementation viewPreSaleCancelledList_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1649: Ref)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := viewPreSaleCancelledList_ZebiCoinTempMgr__fail(this, msgsender_MSG, msgvalue_MSG, participant_s1649);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := viewPreSaleCancelledList_ZebiCoinTempMgr__success(this, msgsender_MSG, msgvalue_MSG, participant_s1649);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} viewPreSaleRefunds_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1661: Ref)
   returns (__ret_0_: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas;



implementation viewPreSaleRefunds_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1661: Ref)
   returns (__ret_0_: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := viewPreSaleRefunds_ZebiCoinTempMgr__fail(this, msgsender_MSG, msgvalue_MSG, participant_s1661);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := viewPreSaleRefunds_ZebiCoinTempMgr__success(this, msgsender_MSG, msgvalue_MSG, participant_s1661);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} enableRefundPeriod_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, withinRefundPeriod_ZebiCoinTempMgr;



implementation enableRefundPeriod_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call enableRefundPeriod_ZebiCoinTempMgr__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call enableRefundPeriod_ZebiCoinTempMgr__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} disableRefundPeriod_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, withinRefundPeriod_ZebiCoinTempMgr;



implementation disableRefundPeriod_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call disableRefundPeriod_ZebiCoinTempMgr__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call disableRefundPeriod_ZebiCoinTempMgr__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} refund_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, sum_preSaleRefunds6, M_Ref_int_preSaleRefunds6, sum_balances0, M_Ref_int_balances0, totalSupply__BasicToken, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2;



implementation refund_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call refund_ZebiCoinTempMgr__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call refund_ZebiCoinTempMgr__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} forcedRefund_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s1805: Ref);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, sum_preSaleRefunds6, M_Ref_int_preSaleRefunds6, sum_balances0, M_Ref_int_balances0, totalSupply__BasicToken, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2;



implementation forcedRefund_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s1805: Ref)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call forcedRefund_ZebiCoinTempMgr__fail(this, msgsender_MSG, msgvalue_MSG, _from_s1805);
        assume revert || gas < 0;
    }
    else
    {
        call forcedRefund_ZebiCoinTempMgr__success(this, msgsender_MSG, msgvalue_MSG, _from_s1805);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} takeEth_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance;



implementation takeEth_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call takeEth_ZebiCoinTempMgr__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call takeEth_ZebiCoinTempMgr__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} withdraw_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _value_s1834: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0;



implementation withdraw_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _value_s1834: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call withdraw_ZebiCoinTempMgr__fail(this, msgsender_MSG, msgvalue_MSG, _value_s1834);
        assume revert || gas < 0;
    }
    else
    {
        call withdraw_ZebiCoinTempMgr__success(this, msgsender_MSG, msgvalue_MSG, _value_s1834);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} addCancellation_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s1852: Ref)
   returns (success_s1852: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, M_Ref_bool_preSaleCancelledList4;



implementation addCancellation_ZebiCoinTempMgr(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s1852: Ref)
   returns (success_s1852: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call success_s1852 := addCancellation_ZebiCoinTempMgr__fail(this, msgsender_MSG, msgvalue_MSG, _participant_s1852);
        assume revert || gas < 0;
    }
    else
    {
        call success_s1852 := addCancellation_ZebiCoinTempMgr__success(this, msgsender_MSG, msgvalue_MSG, _participant_s1852);
        assume !revert && gas >= 0;
    }
}



var {:access "this.token=token_ZebiMainCrowdsale[this]"} token_ZebiMainCrowdsale: [Ref]Ref;

var {:access "this.currentYearMinted=currentYearMinted_ZebiMainCrowdsale[this]"} currentYearMinted_ZebiMainCrowdsale: [Ref]int;

var {:access "this.calenderYearMintCap=calenderYearMintCap_ZebiMainCrowdsale[this]"} calenderYearMintCap_ZebiMainCrowdsale: [Ref]int;

var {:access "this.calenderYearStart=calenderYearStart_ZebiMainCrowdsale[this]"} calenderYearStart_ZebiMainCrowdsale: [Ref]int;

var {:access "this.calenderYearEnd=calenderYearEnd_ZebiMainCrowdsale[this]"} calenderYearEnd_ZebiMainCrowdsale: [Ref]int;

var {:access "this.vestedMintStartTime=vestedMintStartTime_ZebiMainCrowdsale[this]"} vestedMintStartTime_ZebiMainCrowdsale: [Ref]int;

var {:access "this.zebiZCOShare=zebiZCOShare_ZebiMainCrowdsale[this]"} zebiZCOShare_ZebiMainCrowdsale: [Ref]int;

var {:access "this.crowdsaleZCOCap=crowdsaleZCOCap_ZebiMainCrowdsale[this]"} crowdsaleZCOCap_ZebiMainCrowdsale: [Ref]int;

var {:access "this.transStartTime=transStartTime_ZebiMainCrowdsale[this]"} transStartTime_ZebiMainCrowdsale: [Ref]int;

var {:access "this.zcc=zcc_ZebiMainCrowdsale[this]"} zcc_ZebiMainCrowdsale: [Ref]Ref;

var {:access "this.tempMngr=tempMngr_ZebiMainCrowdsale[this]"} tempMngr_ZebiMainCrowdsale: [Ref]Ref;

var {:access "this.tokenDecimals=tokenDecimals_ZebiMainCrowdsale[this]"} tokenDecimals_ZebiMainCrowdsale: [Ref]int;

var {:access "this.startTime=startTime_ZebiMainCrowdsale[this]"} startTime_ZebiMainCrowdsale: [Ref]int;

var {:access "this.endTime=endTime_ZebiMainCrowdsale[this]"} endTime_ZebiMainCrowdsale: [Ref]int;

var {:access "this.goldListPeriod=goldListPeriod_ZebiMainCrowdsale[this]"} goldListPeriod_ZebiMainCrowdsale: [Ref]int;

var {:access "this.postGoldPeriod=postGoldPeriod_ZebiMainCrowdsale[this]"} postGoldPeriod_ZebiMainCrowdsale: [Ref]int;

var {:access "this.minTransAmount=minTransAmount_ZebiMainCrowdsale[this]"} minTransAmount_ZebiMainCrowdsale: [Ref]int;

var {:access "this.ethCap=ethCap_ZebiMainCrowdsale[this]"} ethCap_ZebiMainCrowdsale: [Ref]int;

var {:access "this.mainContribution[i0]=M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][i0]"} {:sum "sum(this.mainContribution)=sum_mainContribution7[mainContribution_ZebiMainCrowdsale[this]]"} mainContribution_ZebiMainCrowdsale: [Ref]Ref;

var {:access "this.mainCancelledList[i0]=M_Ref_bool_mainCancelledList8[mainCancelledList_ZebiMainCrowdsale[this]][i0]"} {:sum "sum(this.mainCancelledList)=sum_mainCancelledList8[mainCancelledList_ZebiMainCrowdsale[this]]"} mainCancelledList_ZebiMainCrowdsale: [Ref]Ref;

var {:access "this.goldPeriodCap=goldPeriodCap_ZebiMainCrowdsale[this]"} goldPeriodCap_ZebiMainCrowdsale: [Ref]int;

var {:access "this.goldListPeriodFlag=goldListPeriodFlag_ZebiMainCrowdsale[this]"} goldListPeriodFlag_ZebiMainCrowdsale: [Ref]bool;

var {:access "this.goldListContribution[i0]=M_Ref_int_goldListContribution9[goldListContribution_ZebiMainCrowdsale[this]][i0]"} {:sum "sum(this.goldListContribution)=sum_goldListContribution9[goldListContribution_ZebiMainCrowdsale[this]]"} goldListContribution_ZebiMainCrowdsale: [Ref]Ref;

var {:access "this.goldList[i0]=M_Ref_bool_goldList10[goldList_ZebiMainCrowdsale[this]][i0]"} {:sum "sum(this.goldList)=sum_goldList10[goldList_ZebiMainCrowdsale[this]]"} goldList_ZebiMainCrowdsale: [Ref]Ref;

var {:access "this.kycAcceptedList[i0]=M_Ref_bool_kycAcceptedList11[kycAcceptedList_ZebiMainCrowdsale[this]][i0]"} {:sum "sum(this.kycAcceptedList)=sum_kycAcceptedList11[kycAcceptedList_ZebiMainCrowdsale[this]]"} kycAcceptedList_ZebiMainCrowdsale: [Ref]Ref;

var {:access "this.wallet=wallet_ZebiMainCrowdsale[this]"} wallet_ZebiMainCrowdsale: [Ref]Ref;

var {:access "this.withinRefundPeriod=withinRefundPeriod_ZebiMainCrowdsale[this]"} withinRefundPeriod_ZebiMainCrowdsale: [Ref]bool;

var {:access "this.preSaleRefundsInMainSale[i0]=M_Ref_int_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][i0]"} {:sum "sum(this.preSaleRefundsInMainSale)=sum_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]]"} preSaleRefundsInMainSale_ZebiMainCrowdsale: [Ref]Ref;

var {:access "this.tokens=tokens_ZebiMainCrowdsale[this]"} tokens_ZebiMainCrowdsale: [Ref]int;

var {:access "this.weiAmount=weiAmount_ZebiMainCrowdsale[this]"} weiAmount_ZebiMainCrowdsale: [Ref]int;

var {:access "this.ETHtoZWeirate=ETHtoZWeirate_ZebiMainCrowdsale[this]"} ETHtoZWeirate_ZebiMainCrowdsale: [Ref]int;

var {:access "this.mainWeiRaised=mainWeiRaised_ZebiMainCrowdsale[this]"} mainWeiRaised_ZebiMainCrowdsale: [Ref]int;

procedure {:inline 1} ZebiMainCrowdsale_ZebiMainCrowdsale_NoBaseCtor__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s2132: int, 
    _endTime_s2132: int, 
    _ETHtoZWeirate_s2132: int, 
    _wallet_s2132: Ref, 
    _minTransAmount_s2132: int, 
    _ethCap_s2132: int, 
    tokenAddress_s2132: Ref, 
    presaleAddress_s2132: Ref, 
    tempMngrAddress_s2132: Ref, 
    _goldListPeriod_s2132: int, 
    _postGoldPeriod_s2132: int, 
    _goldPeriodCap_s2132: int, 
    _vestedMintStartTime_s2132: int, 
    _calenderYearStart_s2132: int);
  modifies Balance, currentYearMinted_ZebiMainCrowdsale, calenderYearMintCap_ZebiMainCrowdsale, calenderYearStart_ZebiMainCrowdsale, calenderYearEnd_ZebiMainCrowdsale, vestedMintStartTime_ZebiMainCrowdsale, zebiZCOShare_ZebiMainCrowdsale, crowdsaleZCOCap_ZebiMainCrowdsale, transStartTime_ZebiMainCrowdsale, tokenDecimals_ZebiMainCrowdsale, startTime_ZebiMainCrowdsale, endTime_ZebiMainCrowdsale, goldListPeriod_ZebiMainCrowdsale, postGoldPeriod_ZebiMainCrowdsale, minTransAmount_ZebiMainCrowdsale, ethCap_ZebiMainCrowdsale, mainContribution_ZebiMainCrowdsale, M_Ref_int_mainContribution7, sum_mainContribution7, mainCancelledList_ZebiMainCrowdsale, M_Ref_bool_mainCancelledList8, goldPeriodCap_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, goldListContribution_ZebiMainCrowdsale, M_Ref_int_goldListContribution9, sum_goldListContribution9, goldList_ZebiMainCrowdsale, M_Ref_bool_goldList10, kycAcceptedList_ZebiMainCrowdsale, M_Ref_bool_kycAcceptedList11, wallet_ZebiMainCrowdsale, withinRefundPeriod_ZebiMainCrowdsale, preSaleRefundsInMainSale_ZebiMainCrowdsale, M_Ref_int_preSaleRefundsInMainSale12, sum_preSaleRefundsInMainSale12, tokens_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, ETHtoZWeirate_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, revert, token_ZebiMainCrowdsale, zcc_ZebiMainCrowdsale, tempMngr_ZebiMainCrowdsale, Alloc;



procedure {:constructor} {:public} {:inline 1} ZebiMainCrowdsale_ZebiMainCrowdsale(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s2132: int, 
    _endTime_s2132: int, 
    _ETHtoZWeirate_s2132: int, 
    _wallet_s2132: Ref, 
    _minTransAmount_s2132: int, 
    _ethCap_s2132: int, 
    tokenAddress_s2132: Ref, 
    presaleAddress_s2132: Ref, 
    tempMngrAddress_s2132: Ref, 
    _goldListPeriod_s2132: int, 
    _postGoldPeriod_s2132: int, 
    _goldPeriodCap_s2132: int, 
    _vestedMintStartTime_s2132: int, 
    _calenderYearStart_s2132: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, owner_Ownable, currentYearMinted_ZebiMainCrowdsale, calenderYearMintCap_ZebiMainCrowdsale, calenderYearStart_ZebiMainCrowdsale, calenderYearEnd_ZebiMainCrowdsale, vestedMintStartTime_ZebiMainCrowdsale, zebiZCOShare_ZebiMainCrowdsale, crowdsaleZCOCap_ZebiMainCrowdsale, transStartTime_ZebiMainCrowdsale, tokenDecimals_ZebiMainCrowdsale, startTime_ZebiMainCrowdsale, endTime_ZebiMainCrowdsale, goldListPeriod_ZebiMainCrowdsale, postGoldPeriod_ZebiMainCrowdsale, minTransAmount_ZebiMainCrowdsale, ethCap_ZebiMainCrowdsale, mainContribution_ZebiMainCrowdsale, M_Ref_int_mainContribution7, sum_mainContribution7, mainCancelledList_ZebiMainCrowdsale, M_Ref_bool_mainCancelledList8, goldPeriodCap_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, goldListContribution_ZebiMainCrowdsale, M_Ref_int_goldListContribution9, sum_goldListContribution9, goldList_ZebiMainCrowdsale, M_Ref_bool_goldList10, kycAcceptedList_ZebiMainCrowdsale, M_Ref_bool_kycAcceptedList11, wallet_ZebiMainCrowdsale, withinRefundPeriod_ZebiMainCrowdsale, preSaleRefundsInMainSale_ZebiMainCrowdsale, M_Ref_int_preSaleRefundsInMainSale12, sum_preSaleRefundsInMainSale12, tokens_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, ETHtoZWeirate_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, token_ZebiMainCrowdsale, zcc_ZebiMainCrowdsale, tempMngr_ZebiMainCrowdsale, Alloc;



implementation ZebiMainCrowdsale_ZebiMainCrowdsale(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s2132: int, 
    _endTime_s2132: int, 
    _ETHtoZWeirate_s2132: int, 
    _wallet_s2132: Ref, 
    _minTransAmount_s2132: int, 
    _ethCap_s2132: int, 
    tokenAddress_s2132: Ref, 
    presaleAddress_s2132: Ref, 
    tempMngrAddress_s2132: Ref, 
    _goldListPeriod_s2132: int, 
    _postGoldPeriod_s2132: int, 
    _goldPeriodCap_s2132: int, 
    _vestedMintStartTime_s2132: int, 
    _calenderYearStart_s2132: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call ZebiMainCrowdsale_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, _startTime_s2132, _endTime_s2132, _ETHtoZWeirate_s2132, _wallet_s2132, _minTransAmount_s2132, _ethCap_s2132, tokenAddress_s2132, presaleAddress_s2132, tempMngrAddress_s2132, _goldListPeriod_s2132, _postGoldPeriod_s2132, _goldPeriodCap_s2132, _vestedMintStartTime_s2132, _calenderYearStart_s2132);
        assume revert || gas < 0;
    }
    else
    {
        call ZebiMainCrowdsale_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, _startTime_s2132, _endTime_s2132, _ETHtoZWeirate_s2132, _wallet_s2132, _minTransAmount_s2132, _ethCap_s2132, tokenAddress_s2132, presaleAddress_s2132, tempMngrAddress_s2132, _goldListPeriod_s2132, _postGoldPeriod_s2132, _goldPeriodCap_s2132, _vestedMintStartTime_s2132, _calenderYearStart_s2132);
        assume !revert && gas >= 0;
    }
}



procedure {:inline 1} FallbackMethod_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance, gas, transStartTime_ZebiMainCrowdsale, revert, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2;



procedure {:public} {:inline 1} finishMint_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, mintingFinished_MintableToken;



implementation finishMint_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := finishMint_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := finishMint_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} resumeMint_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, mintingFinished_MintableToken;



implementation resumeMint_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := resumeMint_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := resumeMint_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} startTransfer_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, transferAllowed_MintableToken;



implementation startTransfer_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call startTransfer_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call startTransfer_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} endTransfer_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, transferAllowed_MintableToken;



implementation endTransfer_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call endTransfer_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call endTransfer_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} transferTokenOwnership_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s2207: Ref);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, owner_Ownable;



implementation transferTokenOwnership_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s2207: Ref)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call transferTokenOwnership_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, owner_s2207);
        assume revert || gas < 0;
    }
    else
    {
        call transferTokenOwnership_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, owner_s2207);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} viewCancelledList_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2219: Ref)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas;



implementation viewCancelledList_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2219: Ref)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := viewCancelledList_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, participant_s2219);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := viewCancelledList_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, participant_s2219);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} viewGoldList_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2231: Ref)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas;



implementation viewGoldList_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2231: Ref)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := viewGoldList_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, participant_s2231);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := viewGoldList_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, participant_s2231);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} addToGoldList_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2249: Ref)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, M_Ref_bool_goldList10;



implementation addToGoldList_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2249: Ref)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := addToGoldList_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, _participant_s2249);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := addToGoldList_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, _participant_s2249);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} removeFromGoldList_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2267: Ref)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, M_Ref_bool_goldList10;



implementation removeFromGoldList_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2267: Ref)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := removeFromGoldList_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, _participant_s2267);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := removeFromGoldList_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, _participant_s2267);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} viewKYCAccepted_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2279: Ref)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas;



implementation viewKYCAccepted_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2279: Ref)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := viewKYCAccepted_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, participant_s2279);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := viewKYCAccepted_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, participant_s2279);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} addToKYCList_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2297: Ref)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, M_Ref_bool_kycAcceptedList11;



implementation addToKYCList_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2297: Ref)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := addToKYCList_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, _participant_s2297);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := addToKYCList_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, _participant_s2297);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} removeFromKYCList_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2313: Ref)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, M_Ref_bool_kycAcceptedList11;



implementation removeFromKYCList_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2313: Ref)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := removeFromKYCList_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, _participant_s2313);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := removeFromKYCList_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, _participant_s2313);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} viewPreSaleRefundsInMainSale_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2325: Ref)
   returns (__ret_0_: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas;



implementation viewPreSaleRefundsInMainSale_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2325: Ref)
   returns (__ret_0_: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := viewPreSaleRefundsInMainSale_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, participant_s2325);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := viewPreSaleRefundsInMainSale_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, participant_s2325);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} buyTokens_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, beneficiary_s2465: Ref);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2;



implementation buyTokens_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, beneficiary_s2465: Ref)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call buyTokens_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, beneficiary_s2465);
        assume revert || gas < 0;
    }
    else
    {
        call buyTokens_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, beneficiary_s2465);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} getTokenAmount_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, weiAmount1_s2599: int)
   returns (__ret_0_: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas;



implementation getTokenAmount_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, weiAmount1_s2599: int)
   returns (__ret_0_: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := getTokenAmount_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, weiAmount1_s2599);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := getTokenAmount_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, weiAmount1_s2599);
        assume !revert && gas >= 0;
    }
}



procedure {:inline 1} forwardFunds_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0;



procedure {:public} {:inline 1} enableRefundPeriod_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, withinRefundPeriod_ZebiMainCrowdsale;



implementation enableRefundPeriod_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call enableRefundPeriod_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call enableRefundPeriod_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} disableRefundPeriod_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, withinRefundPeriod_ZebiMainCrowdsale;



implementation disableRefundPeriod_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call disableRefundPeriod_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call disableRefundPeriod_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} viewContribution_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2641: Ref)
   returns (__ret_0_: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas;



implementation viewContribution_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2641: Ref)
   returns (__ret_0_: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := viewContribution_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, participant_s2641);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := viewContribution_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, participant_s2641);
        assume !revert && gas >= 0;
    }
}



procedure {:inline 1} validPurchase_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas, goldListPeriodFlag_ZebiMainCrowdsale;



procedure {:public} {:inline 1} mintAndAllocateZCO_ZebiMainCrowdsale(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    partnerAddress_s2759: Ref, 
    amountInZWei_s2759: int)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0;



implementation mintAndAllocateZCO_ZebiMainCrowdsale(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    partnerAddress_s2759: Ref, 
    amountInZWei_s2759: int)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := mintAndAllocateZCO_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, partnerAddress_s2759, amountInZWei_s2759);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := mintAndAllocateZCO_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, partnerAddress_s2759, amountInZWei_s2759);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} mintvestedTokens_ZebiMainCrowdsale(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    partnerAddress_s2870: Ref, 
    zweitokens_s2870: int)
   returns (__ret_0_: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, currentYearMinted_ZebiMainCrowdsale, calenderYearStart_ZebiMainCrowdsale, calenderYearEnd_ZebiMainCrowdsale, zebiZCOShare_ZebiMainCrowdsale, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0;



implementation mintvestedTokens_ZebiMainCrowdsale(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    partnerAddress_s2870: Ref, 
    zweitokens_s2870: int)
   returns (__ret_0_: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call __ret_0_ := mintvestedTokens_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, partnerAddress_s2870, zweitokens_s2870);
        assume revert || gas < 0;
    }
    else
    {
        call __ret_0_ := mintvestedTokens_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, partnerAddress_s2870, zweitokens_s2870);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} refund_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, sum_preSaleRefundsInMainSale12, M_Ref_int_preSaleRefundsInMainSale12, sum_mainContribution7, M_Ref_int_mainContribution7, sum_balances0, M_Ref_int_balances0, totalSupply__BasicToken, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2;



implementation refund_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call refund_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call refund_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} forcedRefund_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s3095: Ref);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, sum_preSaleRefundsInMainSale12, M_Ref_int_preSaleRefundsInMainSale12, sum_mainContribution7, M_Ref_int_mainContribution7, sum_balances0, M_Ref_int_balances0, totalSupply__BasicToken, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2;



implementation forcedRefund_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s3095: Ref)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call forcedRefund_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, _from_s3095);
        assume revert || gas < 0;
    }
    else
    {
        call forcedRefund_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, _from_s3095);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} takeEth_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance;



implementation takeEth_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call takeEth_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        assume revert || gas < 0;
    }
    else
    {
        call takeEth_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} withdraw_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _value_s3124: int);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0;



implementation withdraw_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _value_s3124: int)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call withdraw_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, _value_s3124);
        assume revert || gas < 0;
    }
    else
    {
        call withdraw_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, _value_s3124);
        assume !revert && gas >= 0;
    }
}



procedure {:public} {:inline 1} addCancellation_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s3142: Ref)
   returns (success_s3142: bool);
  modifies revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, gas, M_Ref_bool_mainCancelledList8;



implementation addCancellation_ZebiMainCrowdsale(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s3142: Ref)
   returns (success_s3142: bool)
{
  var __exception: bool;

    havoc __exception;
    revert := false;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        call success_s3142 := addCancellation_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, _participant_s3142);
        assume revert || gas < 0;
    }
    else
    {
        call success_s3142 := addCancellation_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, _participant_s3142);
        assume !revert && gas >= 0;
    }
}



procedure {:inline 1} FallbackDispatch__success(from: Ref, to: Ref, amount: int);
  modifies Balance, gas, transStartTime_ZebiMainCrowdsale, revert, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale;



procedure {:inline 1} Fallback_UnknownType__success(from: Ref, to: Ref, amount: int);
  modifies Balance;



procedure {:inline 1} send__success(from: Ref, to: Ref, amount: int) returns (success: bool);
  modifies __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, revert, gas, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0;



procedure {:inline 1} onlyOwner_pre__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert;



procedure {:inline 1} canMint_pre__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert;



procedure {:inline 1} stopInEmergency_pre__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert;



procedure {:inline 1} inCancelledList_pre__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert;



procedure {:inline 1} inRefundPeriod_pre__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert;



procedure {:inline 1} inPreSaleCancelledList_pre__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert;



procedure {:inline 1} inRefundPeriod2_pre__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert;



procedure {:inline 1} inCancelledList1_pre__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert;



procedure {:inline 1} inRefundPeriod1_pre__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert;



procedure CorralChoice_Ownable(this: Ref);
  modifies gas, now, Alloc, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, owner_Ownable;



procedure CorralEntry_Ownable();
  modifies gas, Alloc, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, now, owner_Ownable, Balance;



procedure CorralChoice_ERC20Basic(this: Ref);
  modifies gas, now, Alloc;



procedure CorralEntry_ERC20Basic();
  modifies gas, Alloc, Balance, now;



procedure CorralChoice_ERC20(this: Ref);
  modifies gas, now, Alloc;



procedure CorralEntry_ERC20();
  modifies gas, Alloc, Balance, now;



procedure CorralChoice_SafeMath(this: Ref);
  modifies gas, now, Alloc;



procedure CorralEntry_SafeMath();
  modifies gas, Alloc, Balance, now;



procedure CorralChoice_BasicToken(this: Ref);
  modifies gas, now, Alloc, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, sum_balances0, M_Ref_int_balances0;



procedure CorralEntry_BasicToken();
  modifies gas, Alloc, Balance, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, now, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale;



procedure CorralChoice_StandardToken(this: Ref);
  modifies gas, now, Alloc, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, sum_balances0, M_Ref_int_balances0, M_Ref_Ref_allowed1, M_Ref_int_allowed1, sum_allowed1;



procedure CorralEntry_StandardToken();
  modifies gas, Alloc, Balance, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, allowed_StandardToken, M_Ref_Ref_allowed1, M_Ref_int_allowed1, now, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, sum_allowed1;



procedure CorralChoice_MintableToken(this: Ref);
  modifies gas, now, Alloc, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, owner_Ownable, M_Ref_Ref_allowed1, M_Ref_int_allowed1, sum_allowed1, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0, mintingFinished_MintableToken, transferAllowed_MintableToken;



procedure CorralEntry_MintableToken();
  modifies gas, Alloc, Balance, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, allowed_StandardToken, M_Ref_Ref_allowed1, M_Ref_int_allowed1, owner_Ownable, mintingFinished_MintableToken, transferAllowed_MintableToken, now, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, sum_allowed1;



procedure CorralChoice_ZebiCoin(this: Ref);
  modifies gas, now, Alloc, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, owner_Ownable, M_Ref_Ref_allowed1, M_Ref_int_allowed1, sum_allowed1, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0, mintingFinished_MintableToken, transferAllowed_MintableToken;



procedure CorralEntry_ZebiCoin();
  modifies gas, Alloc, Balance, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, allowed_StandardToken, M_Ref_Ref_allowed1, M_Ref_int_allowed1, owner_Ownable, mintingFinished_MintableToken, transferAllowed_MintableToken, name_ZebiCoin, symbol_ZebiCoin, decimals_ZebiCoin, now, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, sum_allowed1;



procedure CorralChoice_ZCrowdsale(this: Ref);
  modifies gas, now, Alloc, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, owner_Ownable, Balance, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2, withinRefundPeriod_ZCrowdsale, stopped_ZCrowdsale, M_Ref_bool_cancelledList3, transferAllowed_MintableToken, mintingFinished_MintableToken, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9;



procedure CorralEntry_ZCrowdsale();
  modifies gas, Alloc, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, now, owner_Ownable, Balance, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2, withinRefundPeriod_ZCrowdsale, stopped_ZCrowdsale, M_Ref_bool_cancelledList3, tokenDecimals_ZCrowdsale, startTime_ZCrowdsale, endTime_ZCrowdsale, minTransAmount_ZCrowdsale, mintedTokensCap_ZCrowdsale, contribution_ZCrowdsale, cancelledList_ZCrowdsale, wallet_ZCrowdsale, ETHtoZCOrate_ZCrowdsale, token_ZCrowdsale, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, allowed_StandardToken, M_Ref_Ref_allowed1, M_Ref_int_allowed1, mintingFinished_MintableToken, transferAllowed_MintableToken, name_ZebiCoin, symbol_ZebiCoin, decimals_ZebiCoin, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9;



procedure CorralChoice_ZebiCoinCrowdsale(this: Ref);
  modifies gas, now, Alloc, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, owner_Ownable, Balance, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2, withinRefundPeriod_ZCrowdsale, stopped_ZCrowdsale, M_Ref_bool_cancelledList3, transferAllowed_MintableToken, mintingFinished_MintableToken, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9;



procedure main();
  modifies gas, Alloc, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, now, owner_Ownable, Balance, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2, withinRefundPeriod_ZCrowdsale, stopped_ZCrowdsale, M_Ref_bool_cancelledList3, tokenDecimals_ZCrowdsale, startTime_ZCrowdsale, endTime_ZCrowdsale, minTransAmount_ZCrowdsale, mintedTokensCap_ZCrowdsale, contribution_ZCrowdsale, cancelledList_ZCrowdsale, wallet_ZCrowdsale, ETHtoZCOrate_ZCrowdsale, token_ZCrowdsale, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, allowed_StandardToken, M_Ref_Ref_allowed1, M_Ref_int_allowed1, mintingFinished_MintableToken, transferAllowed_MintableToken, name_ZebiCoin, symbol_ZebiCoin, decimals_ZebiCoin, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9;



procedure CorralChoice_ZebiCoinTempMgr(this: Ref);
  modifies gas, now, Alloc, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, owner_Ownable, withinRefundPeriod_ZebiCoinTempMgr, sum_preSaleRefunds6, M_Ref_int_preSaleRefunds6, Balance, M_Ref_bool_preSaleCancelledList4, sum_noncsAllocations5, M_Ref_int_noncsAllocations5, transferAllowed_MintableToken, mintingFinished_MintableToken, sum_balances0, M_Ref_int_balances0, totalSupply__BasicToken, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2;



procedure CorralEntry_ZebiCoinTempMgr();
  modifies gas, Alloc, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, now, owner_Ownable, withinRefundPeriod_ZebiCoinTempMgr, sum_preSaleRefunds6, M_Ref_int_preSaleRefunds6, Balance, M_Ref_bool_preSaleCancelledList4, sum_noncsAllocations5, M_Ref_int_noncsAllocations5, wallet_ZebiCoinTempMgr, tokenDecimals_ZebiCoinTempMgr, preSaleCancelledList_ZebiCoinTempMgr, noncsAllocations_ZebiCoinTempMgr, preSaleRefunds_ZebiCoinTempMgr, preSaleCSSC_ZebiCoinTempMgr, tsc_ZebiCoinTempMgr, transferAllowed_MintableToken, mintingFinished_MintableToken, sum_balances0, M_Ref_int_balances0, totalSupply__BasicToken, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2;



procedure CorralChoice_ZebiMainCrowdsale(this: Ref);
  modifies gas, now, Alloc, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, owner_Ownable, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, withinRefundPeriod_ZebiMainCrowdsale, sum_preSaleRefundsInMainSale12, M_Ref_int_preSaleRefundsInMainSale12, M_Ref_bool_mainCancelledList8, M_Ref_bool_goldList10, M_Ref_bool_kycAcceptedList11, currentYearMinted_ZebiMainCrowdsale, calenderYearStart_ZebiMainCrowdsale, calenderYearEnd_ZebiMainCrowdsale, zebiZCOShare_ZebiMainCrowdsale, transferAllowed_MintableToken, mintingFinished_MintableToken, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2;



procedure CorralEntry_ZebiMainCrowdsale();
  modifies gas, Alloc, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, now, owner_Ownable, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, withinRefundPeriod_ZebiMainCrowdsale, sum_preSaleRefundsInMainSale12, M_Ref_int_preSaleRefundsInMainSale12, M_Ref_bool_mainCancelledList8, M_Ref_bool_goldList10, M_Ref_bool_kycAcceptedList11, currentYearMinted_ZebiMainCrowdsale, calenderYearStart_ZebiMainCrowdsale, calenderYearEnd_ZebiMainCrowdsale, zebiZCOShare_ZebiMainCrowdsale, calenderYearMintCap_ZebiMainCrowdsale, vestedMintStartTime_ZebiMainCrowdsale, crowdsaleZCOCap_ZebiMainCrowdsale, tokenDecimals_ZebiMainCrowdsale, startTime_ZebiMainCrowdsale, endTime_ZebiMainCrowdsale, goldListPeriod_ZebiMainCrowdsale, postGoldPeriod_ZebiMainCrowdsale, minTransAmount_ZebiMainCrowdsale, ethCap_ZebiMainCrowdsale, mainContribution_ZebiMainCrowdsale, mainCancelledList_ZebiMainCrowdsale, goldPeriodCap_ZebiMainCrowdsale, goldListContribution_ZebiMainCrowdsale, goldList_ZebiMainCrowdsale, kycAcceptedList_ZebiMainCrowdsale, wallet_ZebiMainCrowdsale, preSaleRefundsInMainSale_ZebiMainCrowdsale, ETHtoZWeirate_ZebiMainCrowdsale, token_ZebiMainCrowdsale, zcc_ZebiMainCrowdsale, tempMngr_ZebiMainCrowdsale, transferAllowed_MintableToken, mintingFinished_MintableToken, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2;



var __tmp__Balance: [Ref]int;

var __tmp__DType: [Ref]ContractName;

var __tmp__Alloc: [Ref]bool;

var __tmp__balance_ADDR: [Ref]int;

var __tmp__M_Ref_int_balances0: [Ref][Ref]int;

var __tmp__sum_balances0: [Ref]int;

var __tmp__M_Ref_int_allowed1: [Ref][Ref]int;

var __tmp__M_Ref_Ref_allowed1: [Ref][Ref]Ref;

var __tmp__sum_allowed1: [Ref]int;

var __tmp__M_Ref_int_contribution2: [Ref][Ref]int;

var __tmp__sum_contribution2: [Ref]int;

var __tmp__M_Ref_bool_cancelledList3: [Ref][Ref]bool;

var __tmp__sum_cancelledList3: [Ref]int;

var __tmp__M_Ref_bool_preSaleCancelledList4: [Ref][Ref]bool;

var __tmp__sum_preSaleCancelledList4: [Ref]int;

var __tmp__M_Ref_int_noncsAllocations5: [Ref][Ref]int;

var __tmp__sum_noncsAllocations5: [Ref]int;

var __tmp__M_Ref_int_preSaleRefunds6: [Ref][Ref]int;

var __tmp__sum_preSaleRefunds6: [Ref]int;

var __tmp__M_Ref_int_mainContribution7: [Ref][Ref]int;

var __tmp__sum_mainContribution7: [Ref]int;

var __tmp__M_Ref_bool_mainCancelledList8: [Ref][Ref]bool;

var __tmp__sum_mainCancelledList8: [Ref]int;

var __tmp__M_Ref_int_goldListContribution9: [Ref][Ref]int;

var __tmp__sum_goldListContribution9: [Ref]int;

var __tmp__M_Ref_bool_goldList10: [Ref][Ref]bool;

var __tmp__sum_goldList10: [Ref]int;

var __tmp__M_Ref_bool_kycAcceptedList11: [Ref][Ref]bool;

var __tmp__sum_kycAcceptedList11: [Ref]int;

var __tmp__M_Ref_int_preSaleRefundsInMainSale12: [Ref][Ref]int;

var __tmp__sum_preSaleRefundsInMainSale12: [Ref]int;

var __tmp__Length: [Ref]int;

var __tmp__now: int;

var __tmp__owner_Ownable: [Ref]Ref;

var __tmp__balances_BasicToken: [Ref]Ref;

var __tmp__totalSupply__BasicToken: [Ref]int;

var __tmp__allowed_StandardToken: [Ref]Ref;

var __tmp__mintingFinished_MintableToken: [Ref]bool;

var __tmp__transferAllowed_MintableToken: [Ref]bool;

var __tmp__name_ZebiCoin: [Ref]int;

var __tmp__symbol_ZebiCoin: [Ref]int;

var __tmp__decimals_ZebiCoin: [Ref]int;

var __tmp__token_ZCrowdsale: [Ref]Ref;

var __tmp__tokenDecimals_ZCrowdsale: [Ref]int;

var __tmp__startTime_ZCrowdsale: [Ref]int;

var __tmp__endTime_ZCrowdsale: [Ref]int;

var __tmp__minTransAmount_ZCrowdsale: [Ref]int;

var __tmp__mintedTokensCap_ZCrowdsale: [Ref]int;

var __tmp__contribution_ZCrowdsale: [Ref]Ref;

var __tmp__cancelledList_ZCrowdsale: [Ref]Ref;

var __tmp__wallet_ZCrowdsale: [Ref]Ref;

var __tmp__withinRefundPeriod_ZCrowdsale: [Ref]bool;

var __tmp__ETHtoZCOrate_ZCrowdsale: [Ref]int;

var __tmp__weiRaised_ZCrowdsale: [Ref]int;

var __tmp__stopped_ZCrowdsale: [Ref]bool;

var __tmp__wallet_ZebiCoinTempMgr: [Ref]Ref;

var __tmp__preSaleCSSC_ZebiCoinTempMgr: [Ref]Ref;

var __tmp__tsc_ZebiCoinTempMgr: [Ref]Ref;

var __tmp__tokenDecimals_ZebiCoinTempMgr: [Ref]int;

var __tmp__preSaleCancelledList_ZebiCoinTempMgr: [Ref]Ref;

var __tmp__noncsAllocations_ZebiCoinTempMgr: [Ref]Ref;

var __tmp__withinRefundPeriod_ZebiCoinTempMgr: [Ref]bool;

var __tmp__preSaleRefunds_ZebiCoinTempMgr: [Ref]Ref;

var __tmp__token_ZebiMainCrowdsale: [Ref]Ref;

var __tmp__currentYearMinted_ZebiMainCrowdsale: [Ref]int;

var __tmp__calenderYearMintCap_ZebiMainCrowdsale: [Ref]int;

var __tmp__calenderYearStart_ZebiMainCrowdsale: [Ref]int;

var __tmp__calenderYearEnd_ZebiMainCrowdsale: [Ref]int;

var __tmp__vestedMintStartTime_ZebiMainCrowdsale: [Ref]int;

var __tmp__zebiZCOShare_ZebiMainCrowdsale: [Ref]int;

var __tmp__crowdsaleZCOCap_ZebiMainCrowdsale: [Ref]int;

var __tmp__transStartTime_ZebiMainCrowdsale: [Ref]int;

var __tmp__zcc_ZebiMainCrowdsale: [Ref]Ref;

var __tmp__tempMngr_ZebiMainCrowdsale: [Ref]Ref;

var __tmp__tokenDecimals_ZebiMainCrowdsale: [Ref]int;

var __tmp__startTime_ZebiMainCrowdsale: [Ref]int;

var __tmp__endTime_ZebiMainCrowdsale: [Ref]int;

var __tmp__goldListPeriod_ZebiMainCrowdsale: [Ref]int;

var __tmp__postGoldPeriod_ZebiMainCrowdsale: [Ref]int;

var __tmp__minTransAmount_ZebiMainCrowdsale: [Ref]int;

var __tmp__ethCap_ZebiMainCrowdsale: [Ref]int;

var __tmp__mainContribution_ZebiMainCrowdsale: [Ref]Ref;

var __tmp__mainCancelledList_ZebiMainCrowdsale: [Ref]Ref;

var __tmp__goldPeriodCap_ZebiMainCrowdsale: [Ref]int;

var __tmp__goldListPeriodFlag_ZebiMainCrowdsale: [Ref]bool;

var __tmp__goldListContribution_ZebiMainCrowdsale: [Ref]Ref;

var __tmp__goldList_ZebiMainCrowdsale: [Ref]Ref;

var __tmp__kycAcceptedList_ZebiMainCrowdsale: [Ref]Ref;

var __tmp__wallet_ZebiMainCrowdsale: [Ref]Ref;

var __tmp__withinRefundPeriod_ZebiMainCrowdsale: [Ref]bool;

var __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale: [Ref]Ref;

var __tmp__tokens_ZebiMainCrowdsale: [Ref]int;

var __tmp__weiAmount_ZebiMainCrowdsale: [Ref]int;

var __tmp__ETHtoZWeirate_ZebiMainCrowdsale: [Ref]int;

var __tmp__mainWeiRaised_ZebiMainCrowdsale: [Ref]int;

procedure {:inline 1} FreshRefGenerator__fail() returns (newRef: Ref);
  modifies __tmp__Alloc;



procedure {:inline 1} Ownable_Ownable_NoBaseCtor__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance, __tmp__owner_Ownable;



procedure {:constructor} {:inline 1} Ownable_Ownable__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance, owner_Ownable;



procedure {:constructor} {:inline 1} Ownable_Ownable__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance, __tmp__owner_Ownable;



procedure {:inline 1} transferOwnership_Ownable__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, newOwner_s54: Ref);
  modifies gas, revert, owner_Ownable;



procedure {:inline 1} transferOwnership_Ownable__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, newOwner_s54: Ref);
  modifies gas, revert, __tmp__owner_Ownable;



procedure {:inline 1} ERC20Basic_ERC20Basic_NoBaseCtor__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance;



procedure {:inline 1} ERC20Basic_ERC20Basic__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance;



procedure {:inline 1} ERC20Basic_ERC20Basic__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance;



procedure {:inline 1} ERC20_ERC20_NoBaseCtor__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance;



procedure {:inline 1} ERC20_ERC20__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance;



procedure {:inline 1} ERC20_ERC20__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance;



procedure {:inline 1} SafeMath_SafeMath_NoBaseCtor__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance;



procedure {:inline 1} SafeMath_SafeMath__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance;



procedure {:inline 1} SafeMath_SafeMath__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance;



procedure {:inline 1} sub_SafeMath__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, a_s145: int, b_s145: int)
   returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} add_SafeMath__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, a_s169: int, b_s169: int)
   returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} BasicToken_BasicToken_NoBaseCtor__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance, __tmp__balances_BasicToken, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__totalSupply__BasicToken, __tmp__Alloc;



procedure {:inline 1} BasicToken_BasicToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, Alloc;



procedure {:inline 1} BasicToken_BasicToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance, __tmp__balances_BasicToken, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__totalSupply__BasicToken, __tmp__Alloc;



procedure {:inline 1} totalSupply_BasicToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} totalSupply_BasicToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} transfer_BasicToken__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _to_s249: Ref, 
    _value_s249: int)
   returns (__ret_0_: bool);
  modifies gas, revert, sum_balances0, M_Ref_int_balances0;



procedure {:inline 1} transfer_BasicToken__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _to_s249: Ref, 
    _value_s249: int)
   returns (__ret_0_: bool);
  modifies gas, revert, __tmp__sum_balances0, __tmp__M_Ref_int_balances0;



procedure {:inline 1} balanceOf_BasicToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _owner_s261: Ref)
   returns (balance_s261: int);
  modifies gas;



procedure {:inline 1} balanceOf_BasicToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _owner_s261: Ref)
   returns (balance_s261: int);
  modifies gas;



procedure {:inline 1} StandardToken_StandardToken_NoBaseCtor__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance, __tmp__allowed_StandardToken, __tmp__M_Ref_Ref_allowed1, __tmp__M_Ref_int_allowed1, __tmp__Alloc;



procedure {:inline 1} StandardToken_StandardToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, Alloc, allowed_StandardToken, M_Ref_Ref_allowed1, M_Ref_int_allowed1;



procedure {:inline 1} StandardToken_StandardToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance, __tmp__balances_BasicToken, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__totalSupply__BasicToken, __tmp__Alloc, __tmp__allowed_StandardToken, __tmp__M_Ref_Ref_allowed1, __tmp__M_Ref_int_allowed1;



procedure {:inline 1} transferFrom_StandardToken__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _from_s358: Ref, 
    _to_s358: Ref, 
    _value_s358: int)
   returns (__ret_0_: bool);
  modifies gas, revert, M_Ref_Ref_allowed1, M_Ref_int_allowed1, sum_allowed1, sum_balances0, M_Ref_int_balances0, Alloc;



procedure {:inline 1} transferFrom_StandardToken__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _from_s358: Ref, 
    _to_s358: Ref, 
    _value_s358: int)
   returns (__ret_0_: bool);
  modifies gas, revert, __tmp__M_Ref_Ref_allowed1, __tmp__M_Ref_int_allowed1, __tmp__sum_allowed1, __tmp__sum_balances0, __tmp__M_Ref_int_balances0, __tmp__Alloc;



procedure {:inline 1} approve_StandardToken__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _spender_s386: Ref, 
    _value_s386: int)
   returns (__ret_0_: bool);
  modifies gas, M_Ref_Ref_allowed1, M_Ref_int_allowed1, sum_allowed1, Alloc;



procedure {:inline 1} approve_StandardToken__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _spender_s386: Ref, 
    _value_s386: int)
   returns (__ret_0_: bool);
  modifies gas, __tmp__M_Ref_Ref_allowed1, __tmp__M_Ref_int_allowed1, __tmp__sum_allowed1, __tmp__Alloc;



procedure {:inline 1} allowance_StandardToken__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _owner_s402: Ref, 
    _spender_s402: Ref)
   returns (__ret_0_: int);
  modifies gas, M_Ref_Ref_allowed1, M_Ref_int_allowed1, sum_allowed1, Alloc;



procedure {:inline 1} allowance_StandardToken__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _owner_s402: Ref, 
    _spender_s402: Ref)
   returns (__ret_0_: int);
  modifies gas, __tmp__M_Ref_Ref_allowed1, __tmp__M_Ref_int_allowed1, __tmp__sum_allowed1, __tmp__Alloc;



procedure {:inline 1} increaseApproval_StandardToken__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _spender_s443: Ref, 
    _addedValue_s443: int)
   returns (__ret_0_: bool);
  modifies gas, M_Ref_Ref_allowed1, M_Ref_int_allowed1, sum_allowed1, Alloc;



procedure {:inline 1} increaseApproval_StandardToken__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _spender_s443: Ref, 
    _addedValue_s443: int)
   returns (__ret_0_: bool);
  modifies gas, __tmp__M_Ref_Ref_allowed1, __tmp__M_Ref_int_allowed1, __tmp__sum_allowed1, __tmp__Alloc;



procedure {:inline 1} decreaseApproval_StandardToken__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _spender_s503: Ref, 
    _subtractedValue_s503: int)
   returns (__ret_0_: bool);
  modifies gas, M_Ref_Ref_allowed1, M_Ref_int_allowed1, sum_allowed1, Alloc;



procedure {:inline 1} decreaseApproval_StandardToken__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _spender_s503: Ref, 
    _subtractedValue_s503: int)
   returns (__ret_0_: bool);
  modifies gas, __tmp__M_Ref_Ref_allowed1, __tmp__M_Ref_int_allowed1, __tmp__sum_allowed1, __tmp__Alloc;



procedure {:inline 1} MintableToken_MintableToken_NoBaseCtor__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken;



procedure {:inline 1} MintableToken_MintableToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, Alloc, allowed_StandardToken, M_Ref_Ref_allowed1, M_Ref_int_allowed1, owner_Ownable, mintingFinished_MintableToken, transferAllowed_MintableToken;



procedure {:inline 1} MintableToken_MintableToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance, __tmp__balances_BasicToken, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__totalSupply__BasicToken, __tmp__Alloc, __tmp__allowed_StandardToken, __tmp__M_Ref_Ref_allowed1, __tmp__M_Ref_int_allowed1, __tmp__owner_Ownable, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken;



procedure {:inline 1} mint_MintableToken__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _to_s584: Ref, 
    _amount_s584: int)
   returns (__ret_0_: bool);
  modifies gas, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0, revert;



procedure {:inline 1} mint_MintableToken__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _to_s584: Ref, 
    _amount_s584: int)
   returns (__ret_0_: bool);
  modifies gas, __tmp__totalSupply__BasicToken, __tmp__sum_balances0, __tmp__M_Ref_int_balances0, revert;



procedure {:inline 1} finishMinting_MintableToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas, mintingFinished_MintableToken, revert;



procedure {:inline 1} finishMinting_MintableToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas, __tmp__mintingFinished_MintableToken, revert;



procedure {:inline 1} resumeMinting_MintableToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas, mintingFinished_MintableToken, revert;



procedure {:inline 1} resumeMinting_MintableToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas, __tmp__mintingFinished_MintableToken, revert;



procedure {:inline 1} burn_MintableToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s661: Ref)
   returns (success_s661: bool);
  modifies gas, revert, sum_balances0, M_Ref_int_balances0, totalSupply__BasicToken;



procedure {:inline 1} burn_MintableToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s661: Ref)
   returns (success_s661: bool);
  modifies gas, revert, __tmp__sum_balances0, __tmp__M_Ref_int_balances0, __tmp__totalSupply__BasicToken;



procedure {:inline 1} startTransfer_MintableToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, transferAllowed_MintableToken, revert;



procedure {:inline 1} startTransfer_MintableToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, __tmp__transferAllowed_MintableToken, revert;



procedure {:inline 1} endTransfer_MintableToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, transferAllowed_MintableToken, revert;



procedure {:inline 1} endTransfer_MintableToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, __tmp__transferAllowed_MintableToken, revert;



procedure {:inline 1} transfer_MintableToken__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _to_s704: Ref, 
    _value_s704: int)
   returns (__ret_0_: bool);
  modifies gas, revert, sum_balances0, M_Ref_int_balances0;



procedure {:inline 1} transfer_MintableToken__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _to_s704: Ref, 
    _value_s704: int)
   returns (__ret_0_: bool);
  modifies gas, revert, __tmp__sum_balances0, __tmp__M_Ref_int_balances0;



procedure {:inline 1} transferFrom_MintableToken__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _from_s730: Ref, 
    _to_s730: Ref, 
    _value_s730: int)
   returns (__ret_0_: bool);
  modifies gas, revert, M_Ref_Ref_allowed1, M_Ref_int_allowed1, sum_allowed1, sum_balances0, M_Ref_int_balances0, Alloc;



procedure {:inline 1} transferFrom_MintableToken__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _from_s730: Ref, 
    _to_s730: Ref, 
    _value_s730: int)
   returns (__ret_0_: bool);
  modifies gas, revert, __tmp__M_Ref_Ref_allowed1, __tmp__M_Ref_int_allowed1, __tmp__sum_allowed1, __tmp__sum_balances0, __tmp__M_Ref_int_balances0, __tmp__Alloc;



procedure {:inline 1} ZebiCoin_ZebiCoin_NoBaseCtor__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin;



procedure {:inline 1} ZebiCoin_ZebiCoin__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, Alloc, allowed_StandardToken, M_Ref_Ref_allowed1, M_Ref_int_allowed1, owner_Ownable, mintingFinished_MintableToken, transferAllowed_MintableToken, name_ZebiCoin, symbol_ZebiCoin, decimals_ZebiCoin;



procedure {:inline 1} ZebiCoin_ZebiCoin__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance, __tmp__balances_BasicToken, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__totalSupply__BasicToken, __tmp__Alloc, __tmp__allowed_StandardToken, __tmp__M_Ref_Ref_allowed1, __tmp__M_Ref_int_allowed1, __tmp__owner_Ownable, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin;



procedure {:inline 1} ZCrowdsale_ZCrowdsale_NoBaseCtor__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s914: int, 
    _endTime_s914: int, 
    _ETHtoZCOrate_s914: int, 
    _wallet_s914: Ref, 
    _minTransAmount_s914: int, 
    _mintedTokensCap_s914: int);
  modifies __tmp__Balance, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__cancelledList_ZCrowdsale, __tmp__M_Ref_bool_cancelledList3, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, revert, __tmp__token_ZCrowdsale, __tmp__Alloc, __tmp__balances_BasicToken, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__M_Ref_Ref_allowed1, __tmp__M_Ref_int_allowed1, __tmp__owner_Ownable, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin;



procedure {:constructor} {:inline 1} ZCrowdsale_ZCrowdsale__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s914: int, 
    _endTime_s914: int, 
    _ETHtoZCOrate_s914: int, 
    _wallet_s914: Ref, 
    _minTransAmount_s914: int, 
    _mintedTokensCap_s914: int);
  modifies Balance, owner_Ownable, tokenDecimals_ZCrowdsale, startTime_ZCrowdsale, endTime_ZCrowdsale, minTransAmount_ZCrowdsale, mintedTokensCap_ZCrowdsale, contribution_ZCrowdsale, M_Ref_int_contribution2, sum_contribution2, cancelledList_ZCrowdsale, M_Ref_bool_cancelledList3, wallet_ZCrowdsale, withinRefundPeriod_ZCrowdsale, ETHtoZCOrate_ZCrowdsale, weiRaised_ZCrowdsale, stopped_ZCrowdsale, revert, token_ZCrowdsale, Alloc, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, allowed_StandardToken, M_Ref_Ref_allowed1, M_Ref_int_allowed1, mintingFinished_MintableToken, transferAllowed_MintableToken, name_ZebiCoin, symbol_ZebiCoin, decimals_ZebiCoin;



procedure {:constructor} {:inline 1} ZCrowdsale_ZCrowdsale__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s914: int, 
    _endTime_s914: int, 
    _ETHtoZCOrate_s914: int, 
    _wallet_s914: Ref, 
    _minTransAmount_s914: int, 
    _mintedTokensCap_s914: int);
  modifies __tmp__Balance, __tmp__owner_Ownable, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__cancelledList_ZCrowdsale, __tmp__M_Ref_bool_cancelledList3, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, revert, __tmp__token_ZCrowdsale, __tmp__Alloc, __tmp__balances_BasicToken, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__M_Ref_Ref_allowed1, __tmp__M_Ref_int_allowed1, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin;



procedure {:inline 1} FallbackMethod_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance, gas, revert, __tmp__weiRaised_ZCrowdsale, __tmp__sum_contribution2, __tmp__M_Ref_int_contribution2, __tmp__totalSupply__BasicToken, __tmp__sum_balances0, __tmp__M_Ref_int_balances0, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale;



procedure {:inline 1} finishMint_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas, revert, mintingFinished_MintableToken;



procedure {:inline 1} finishMint_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas, revert, __tmp__mintingFinished_MintableToken;



procedure {:inline 1} resumeMint_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas, revert, mintingFinished_MintableToken;



procedure {:inline 1} resumeMint_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas, revert, __tmp__mintingFinished_MintableToken;



procedure {:inline 1} startTransfer_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, transferAllowed_MintableToken;



procedure {:inline 1} startTransfer_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, __tmp__transferAllowed_MintableToken;



procedure {:inline 1} endTransfer_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, transferAllowed_MintableToken;



procedure {:inline 1} endTransfer_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, __tmp__transferAllowed_MintableToken;



procedure {:inline 1} transferTokenOwnership_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s989: Ref);
  modifies gas, revert, owner_Ownable;



procedure {:inline 1} transferTokenOwnership_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s989: Ref);
  modifies gas, revert, __tmp__owner_Ownable;



procedure {:inline 1} viewCancelledList_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1001: Ref)
   returns (__ret_0_: bool);
  modifies gas;



procedure {:inline 1} viewCancelledList_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1001: Ref)
   returns (__ret_0_: bool);
  modifies gas;



procedure {:inline 1} buyTokens_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, beneficiary_s1067: Ref);
  modifies Balance, gas, revert, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9;



procedure {:inline 1} buyTokens_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, beneficiary_s1067: Ref);
  modifies __tmp__Balance, gas, revert, __tmp__weiRaised_ZCrowdsale, __tmp__sum_contribution2, __tmp__M_Ref_int_contribution2, __tmp__totalSupply__BasicToken, __tmp__sum_balances0, __tmp__M_Ref_int_balances0, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale;



procedure {:inline 1} getTokenAmount_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, weiAmount_s1082: int)
   returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} getTokenAmount_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, weiAmount_s1082: int)
   returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} forwardFunds_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale;



procedure {:inline 1} enableRefundPeriod_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, withinRefundPeriod_ZCrowdsale, revert;



procedure {:inline 1} enableRefundPeriod_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, __tmp__withinRefundPeriod_ZCrowdsale, revert;



procedure {:inline 1} disableRefundPeriod_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, withinRefundPeriod_ZCrowdsale, revert;



procedure {:inline 1} disableRefundPeriod_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, __tmp__withinRefundPeriod_ZCrowdsale, revert;



procedure {:inline 1} emergencyStop_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, stopped_ZCrowdsale, revert;



procedure {:inline 1} emergencyStop_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, __tmp__stopped_ZCrowdsale, revert;



procedure {:inline 1} release_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, stopped_ZCrowdsale, revert;



procedure {:inline 1} release_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, __tmp__stopped_ZCrowdsale, revert;



procedure {:inline 1} viewContribution_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1145: Ref)
   returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} viewContribution_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1145: Ref)
   returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} validPurchase_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas;



procedure {:inline 1} refund_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, sum_contribution2, M_Ref_int_contribution2, sum_balances0, M_Ref_int_balances0, totalSupply__BasicToken, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale;



procedure {:inline 1} refund_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, __tmp__sum_contribution2, __tmp__M_Ref_int_contribution2, __tmp__sum_balances0, __tmp__M_Ref_int_balances0, __tmp__totalSupply__BasicToken, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale;



procedure {:inline 1} forcedRefund_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s1308: Ref);
  modifies gas, revert, sum_contribution2, M_Ref_int_contribution2, sum_balances0, M_Ref_int_balances0, totalSupply__BasicToken, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale;



procedure {:inline 1} forcedRefund_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s1308: Ref);
  modifies gas, revert, __tmp__sum_contribution2, __tmp__M_Ref_int_contribution2, __tmp__sum_balances0, __tmp__M_Ref_int_balances0, __tmp__totalSupply__BasicToken, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale;



procedure {:inline 1} takeEth_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance;



procedure {:inline 1} takeEth_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance;



procedure {:inline 1} withdraw_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _value_s1337: int);
  modifies gas, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0;



procedure {:inline 1} withdraw_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _value_s1337: int);
  modifies gas, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale;



procedure {:inline 1} addCancellation_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s1355: Ref)
   returns (success_s1355: bool);
  modifies gas, M_Ref_bool_cancelledList3, revert;



procedure {:inline 1} addCancellation_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s1355: Ref)
   returns (success_s1355: bool);
  modifies gas, __tmp__M_Ref_bool_cancelledList3, revert;



procedure {:inline 1} ZebiCoinCrowdsale_ZebiCoinCrowdsale_NoBaseCtor__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s1382: int, 
    _endTime_s1382: int, 
    _rate_s1382: int, 
    _wallet_s1382: Ref, 
    _minTransAmount_s1382: int, 
    _mintedTokensCap_s1382: int);
  modifies __tmp__Balance;



procedure {:constructor} {:inline 1} ZebiCoinCrowdsale_ZebiCoinCrowdsale__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s1382: int, 
    _endTime_s1382: int, 
    _rate_s1382: int, 
    _wallet_s1382: Ref, 
    _minTransAmount_s1382: int, 
    _mintedTokensCap_s1382: int);
  modifies Balance, owner_Ownable, tokenDecimals_ZCrowdsale, startTime_ZCrowdsale, endTime_ZCrowdsale, minTransAmount_ZCrowdsale, mintedTokensCap_ZCrowdsale, contribution_ZCrowdsale, M_Ref_int_contribution2, sum_contribution2, cancelledList_ZCrowdsale, M_Ref_bool_cancelledList3, wallet_ZCrowdsale, withinRefundPeriod_ZCrowdsale, ETHtoZCOrate_ZCrowdsale, weiRaised_ZCrowdsale, stopped_ZCrowdsale, revert, token_ZCrowdsale, Alloc, balances_BasicToken, M_Ref_int_balances0, sum_balances0, totalSupply__BasicToken, allowed_StandardToken, M_Ref_Ref_allowed1, M_Ref_int_allowed1, mintingFinished_MintableToken, transferAllowed_MintableToken, name_ZebiCoin, symbol_ZebiCoin, decimals_ZebiCoin;



procedure {:constructor} {:inline 1} ZebiCoinCrowdsale_ZebiCoinCrowdsale__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s1382: int, 
    _endTime_s1382: int, 
    _rate_s1382: int, 
    _wallet_s1382: Ref, 
    _minTransAmount_s1382: int, 
    _mintedTokensCap_s1382: int);
  modifies __tmp__Balance, __tmp__owner_Ownable, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__cancelledList_ZCrowdsale, __tmp__M_Ref_bool_cancelledList3, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, revert, __tmp__token_ZCrowdsale, __tmp__Alloc, __tmp__balances_BasicToken, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__M_Ref_Ref_allowed1, __tmp__M_Ref_int_allowed1, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin;



procedure {:inline 1} ZebiCoinTempMgr_ZebiCoinTempMgr_NoBaseCtor__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    presaleCrowdsale_s1483: Ref, 
    tokenAddress_s1483: Ref, 
    _wallet_s1483: Ref);
  modifies __tmp__Balance, __tmp__wallet_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__Alloc;



procedure {:constructor} {:inline 1} ZebiCoinTempMgr_ZebiCoinTempMgr__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    presaleCrowdsale_s1483: Ref, 
    tokenAddress_s1483: Ref, 
    _wallet_s1483: Ref);
  modifies Balance, owner_Ownable, wallet_ZebiCoinTempMgr, tokenDecimals_ZebiCoinTempMgr, preSaleCancelledList_ZebiCoinTempMgr, M_Ref_bool_preSaleCancelledList4, noncsAllocations_ZebiCoinTempMgr, M_Ref_int_noncsAllocations5, sum_noncsAllocations5, withinRefundPeriod_ZebiCoinTempMgr, preSaleRefunds_ZebiCoinTempMgr, M_Ref_int_preSaleRefunds6, sum_preSaleRefunds6, preSaleCSSC_ZebiCoinTempMgr, tsc_ZebiCoinTempMgr, Alloc;



procedure {:constructor} {:inline 1} ZebiCoinTempMgr_ZebiCoinTempMgr__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    presaleCrowdsale_s1483: Ref, 
    tokenAddress_s1483: Ref, 
    _wallet_s1483: Ref);
  modifies __tmp__Balance, __tmp__owner_Ownable, __tmp__wallet_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__Alloc;



procedure {:inline 1} finishMint_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas, revert, mintingFinished_MintableToken;



procedure {:inline 1} finishMint_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas, revert, __tmp__mintingFinished_MintableToken;



procedure {:inline 1} resumeMint_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas, revert, mintingFinished_MintableToken;



procedure {:inline 1} resumeMint_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas, revert, __tmp__mintingFinished_MintableToken;



procedure {:inline 1} startTransfer_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, transferAllowed_MintableToken;



procedure {:inline 1} startTransfer_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, __tmp__transferAllowed_MintableToken;



procedure {:inline 1} endTransfer_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, transferAllowed_MintableToken;



procedure {:inline 1} endTransfer_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, __tmp__transferAllowed_MintableToken;



procedure {:inline 1} transferTokenOwnership_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s1549: Ref);
  modifies gas, revert, owner_Ownable;



procedure {:inline 1} transferTokenOwnership_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s1549: Ref);
  modifies gas, revert, __tmp__owner_Ownable;



procedure {:inline 1} allocatenonCSTokens_ZebiCoinTempMgr__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    beneficiary_s1597: Ref, 
    tokens_s1597: int);
  modifies gas, revert, sum_noncsAllocations5, M_Ref_int_noncsAllocations5, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0;



procedure {:inline 1} allocatenonCSTokens_ZebiCoinTempMgr__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    beneficiary_s1597: Ref, 
    tokens_s1597: int);
  modifies gas, revert, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_noncsAllocations5, __tmp__totalSupply__BasicToken, __tmp__sum_balances0, __tmp__M_Ref_int_balances0;



procedure {:inline 1} revertNoncsallocation_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, beneficiary_s1625: Ref);
  modifies gas, revert, sum_noncsAllocations5, M_Ref_int_noncsAllocations5, sum_balances0, M_Ref_int_balances0, totalSupply__BasicToken;



procedure {:inline 1} revertNoncsallocation_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, beneficiary_s1625: Ref);
  modifies gas, revert, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_balances0, __tmp__M_Ref_int_balances0, __tmp__totalSupply__BasicToken;



procedure {:inline 1} viewNoncsallocations_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1637: Ref)
   returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} viewNoncsallocations_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1637: Ref)
   returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} viewPreSaleCancelledList_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1649: Ref)
   returns (__ret_0_: bool);
  modifies gas;



procedure {:inline 1} viewPreSaleCancelledList_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1649: Ref)
   returns (__ret_0_: bool);
  modifies gas;



procedure {:inline 1} viewPreSaleRefunds_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1661: Ref)
   returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} viewPreSaleRefunds_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1661: Ref)
   returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} enableRefundPeriod_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, withinRefundPeriod_ZebiCoinTempMgr, revert;



procedure {:inline 1} enableRefundPeriod_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, __tmp__withinRefundPeriod_ZebiCoinTempMgr, revert;



procedure {:inline 1} disableRefundPeriod_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, withinRefundPeriod_ZebiCoinTempMgr, revert;



procedure {:inline 1} disableRefundPeriod_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, __tmp__withinRefundPeriod_ZebiCoinTempMgr, revert;



procedure {:inline 1} refund_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, sum_preSaleRefunds6, M_Ref_int_preSaleRefunds6, sum_balances0, M_Ref_int_balances0, totalSupply__BasicToken, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2;



procedure {:inline 1} refund_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_balances0, __tmp__M_Ref_int_balances0, __tmp__totalSupply__BasicToken, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale;



procedure {:inline 1} forcedRefund_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s1805: Ref);
  modifies gas, revert, sum_preSaleRefunds6, M_Ref_int_preSaleRefunds6, sum_balances0, M_Ref_int_balances0, totalSupply__BasicToken, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2;



procedure {:inline 1} forcedRefund_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s1805: Ref);
  modifies gas, revert, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_balances0, __tmp__M_Ref_int_balances0, __tmp__totalSupply__BasicToken, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale;



procedure {:inline 1} takeEth_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance;



procedure {:inline 1} takeEth_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance;



procedure {:inline 1} withdraw_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _value_s1834: int);
  modifies gas, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0;



procedure {:inline 1} withdraw_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _value_s1834: int);
  modifies gas, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale;



procedure {:inline 1} addCancellation_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s1852: Ref)
   returns (success_s1852: bool);
  modifies gas, M_Ref_bool_preSaleCancelledList4, revert;



procedure {:inline 1} addCancellation_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s1852: Ref)
   returns (success_s1852: bool);
  modifies gas, __tmp__M_Ref_bool_preSaleCancelledList4, revert;



procedure {:inline 1} ZebiMainCrowdsale_ZebiMainCrowdsale_NoBaseCtor__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s2132: int, 
    _endTime_s2132: int, 
    _ETHtoZWeirate_s2132: int, 
    _wallet_s2132: Ref, 
    _minTransAmount_s2132: int, 
    _ethCap_s2132: int, 
    tokenAddress_s2132: Ref, 
    presaleAddress_s2132: Ref, 
    tempMngrAddress_s2132: Ref, 
    _goldListPeriod_s2132: int, 
    _postGoldPeriod_s2132: int, 
    _goldPeriodCap_s2132: int, 
    _vestedMintStartTime_s2132: int, 
    _calenderYearStart_s2132: int);
  modifies __tmp__Balance, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__M_Ref_bool_mainCancelledList8, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__goldList_ZebiMainCrowdsale, __tmp__M_Ref_bool_goldList10, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, revert, __tmp__token_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__Alloc;



procedure {:constructor} {:inline 1} ZebiMainCrowdsale_ZebiMainCrowdsale__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s2132: int, 
    _endTime_s2132: int, 
    _ETHtoZWeirate_s2132: int, 
    _wallet_s2132: Ref, 
    _minTransAmount_s2132: int, 
    _ethCap_s2132: int, 
    tokenAddress_s2132: Ref, 
    presaleAddress_s2132: Ref, 
    tempMngrAddress_s2132: Ref, 
    _goldListPeriod_s2132: int, 
    _postGoldPeriod_s2132: int, 
    _goldPeriodCap_s2132: int, 
    _vestedMintStartTime_s2132: int, 
    _calenderYearStart_s2132: int);
  modifies Balance, owner_Ownable, currentYearMinted_ZebiMainCrowdsale, calenderYearMintCap_ZebiMainCrowdsale, calenderYearStart_ZebiMainCrowdsale, calenderYearEnd_ZebiMainCrowdsale, vestedMintStartTime_ZebiMainCrowdsale, zebiZCOShare_ZebiMainCrowdsale, crowdsaleZCOCap_ZebiMainCrowdsale, transStartTime_ZebiMainCrowdsale, tokenDecimals_ZebiMainCrowdsale, startTime_ZebiMainCrowdsale, endTime_ZebiMainCrowdsale, goldListPeriod_ZebiMainCrowdsale, postGoldPeriod_ZebiMainCrowdsale, minTransAmount_ZebiMainCrowdsale, ethCap_ZebiMainCrowdsale, mainContribution_ZebiMainCrowdsale, M_Ref_int_mainContribution7, sum_mainContribution7, mainCancelledList_ZebiMainCrowdsale, M_Ref_bool_mainCancelledList8, goldPeriodCap_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, goldListContribution_ZebiMainCrowdsale, M_Ref_int_goldListContribution9, sum_goldListContribution9, goldList_ZebiMainCrowdsale, M_Ref_bool_goldList10, kycAcceptedList_ZebiMainCrowdsale, M_Ref_bool_kycAcceptedList11, wallet_ZebiMainCrowdsale, withinRefundPeriod_ZebiMainCrowdsale, preSaleRefundsInMainSale_ZebiMainCrowdsale, M_Ref_int_preSaleRefundsInMainSale12, sum_preSaleRefundsInMainSale12, tokens_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, ETHtoZWeirate_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, revert, token_ZebiMainCrowdsale, zcc_ZebiMainCrowdsale, tempMngr_ZebiMainCrowdsale, Alloc;



procedure {:constructor} {:inline 1} ZebiMainCrowdsale_ZebiMainCrowdsale__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s2132: int, 
    _endTime_s2132: int, 
    _ETHtoZWeirate_s2132: int, 
    _wallet_s2132: Ref, 
    _minTransAmount_s2132: int, 
    _ethCap_s2132: int, 
    tokenAddress_s2132: Ref, 
    presaleAddress_s2132: Ref, 
    tempMngrAddress_s2132: Ref, 
    _goldListPeriod_s2132: int, 
    _postGoldPeriod_s2132: int, 
    _goldPeriodCap_s2132: int, 
    _vestedMintStartTime_s2132: int, 
    _calenderYearStart_s2132: int);
  modifies __tmp__Balance, __tmp__owner_Ownable, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__M_Ref_bool_mainCancelledList8, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__goldList_ZebiMainCrowdsale, __tmp__M_Ref_bool_goldList10, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, revert, __tmp__token_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__Alloc;



procedure {:inline 1} FallbackMethod_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance, gas, __tmp__transStartTime_ZebiMainCrowdsale, revert, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, __tmp__sum_mainContribution7, __tmp__M_Ref_int_mainContribution7, __tmp__sum_goldListContribution9, __tmp__M_Ref_int_goldListContribution9, __tmp__totalSupply__BasicToken, __tmp__sum_balances0, __tmp__M_Ref_int_balances0, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale;



procedure {:inline 1} finishMint_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas, revert, mintingFinished_MintableToken;



procedure {:inline 1} finishMint_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas, revert, __tmp__mintingFinished_MintableToken;



procedure {:inline 1} resumeMint_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas, revert, mintingFinished_MintableToken;



procedure {:inline 1} resumeMint_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas, revert, __tmp__mintingFinished_MintableToken;



procedure {:inline 1} startTransfer_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, transferAllowed_MintableToken;



procedure {:inline 1} startTransfer_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, __tmp__transferAllowed_MintableToken;



procedure {:inline 1} endTransfer_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, transferAllowed_MintableToken;



procedure {:inline 1} endTransfer_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, __tmp__transferAllowed_MintableToken;



procedure {:inline 1} transferTokenOwnership_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s2207: Ref);
  modifies gas, revert, owner_Ownable;



procedure {:inline 1} transferTokenOwnership_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s2207: Ref);
  modifies gas, revert, __tmp__owner_Ownable;



procedure {:inline 1} viewCancelledList_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2219: Ref)
   returns (__ret_0_: bool);
  modifies gas;



procedure {:inline 1} viewCancelledList_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2219: Ref)
   returns (__ret_0_: bool);
  modifies gas;



procedure {:inline 1} viewGoldList_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2231: Ref)
   returns (__ret_0_: bool);
  modifies gas;



procedure {:inline 1} viewGoldList_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2231: Ref)
   returns (__ret_0_: bool);
  modifies gas;



procedure {:inline 1} addToGoldList_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2249: Ref)
   returns (__ret_0_: bool);
  modifies gas, M_Ref_bool_goldList10, revert;



procedure {:inline 1} addToGoldList_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2249: Ref)
   returns (__ret_0_: bool);
  modifies gas, __tmp__M_Ref_bool_goldList10, revert;



procedure {:inline 1} removeFromGoldList_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2267: Ref)
   returns (__ret_0_: bool);
  modifies gas, M_Ref_bool_goldList10, revert;



procedure {:inline 1} removeFromGoldList_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2267: Ref)
   returns (__ret_0_: bool);
  modifies gas, __tmp__M_Ref_bool_goldList10, revert;



procedure {:inline 1} viewKYCAccepted_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2279: Ref)
   returns (__ret_0_: bool);
  modifies gas;



procedure {:inline 1} viewKYCAccepted_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2279: Ref)
   returns (__ret_0_: bool);
  modifies gas;



procedure {:inline 1} addToKYCList_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2297: Ref)
   returns (__ret_0_: bool);
  modifies gas, M_Ref_bool_kycAcceptedList11, revert;



procedure {:inline 1} addToKYCList_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2297: Ref)
   returns (__ret_0_: bool);
  modifies gas, __tmp__M_Ref_bool_kycAcceptedList11, revert;



procedure {:inline 1} removeFromKYCList_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2313: Ref)
   returns (__ret_0_: bool);
  modifies gas, M_Ref_bool_kycAcceptedList11, revert;



procedure {:inline 1} removeFromKYCList_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2313: Ref)
   returns (__ret_0_: bool);
  modifies gas, __tmp__M_Ref_bool_kycAcceptedList11, revert;



procedure {:inline 1} viewPreSaleRefundsInMainSale_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2325: Ref)
   returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} viewPreSaleRefundsInMainSale_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2325: Ref)
   returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} buyTokens_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, beneficiary_s2465: Ref);
  modifies Balance, gas, transStartTime_ZebiMainCrowdsale, revert, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2;



procedure {:inline 1} buyTokens_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, beneficiary_s2465: Ref);
  modifies __tmp__Balance, gas, __tmp__transStartTime_ZebiMainCrowdsale, revert, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, __tmp__sum_mainContribution7, __tmp__M_Ref_int_mainContribution7, __tmp__sum_goldListContribution9, __tmp__M_Ref_int_goldListContribution9, __tmp__totalSupply__BasicToken, __tmp__sum_balances0, __tmp__M_Ref_int_balances0, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale;



procedure {:inline 1} getTokenAmount_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, weiAmount1_s2599: int)
   returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} getTokenAmount_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, weiAmount1_s2599: int)
   returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} forwardFunds_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale;



procedure {:inline 1} enableRefundPeriod_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, withinRefundPeriod_ZebiMainCrowdsale, revert;



procedure {:inline 1} enableRefundPeriod_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, __tmp__withinRefundPeriod_ZebiMainCrowdsale, revert;



procedure {:inline 1} disableRefundPeriod_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, withinRefundPeriod_ZebiMainCrowdsale, revert;



procedure {:inline 1} disableRefundPeriod_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, __tmp__withinRefundPeriod_ZebiMainCrowdsale, revert;



procedure {:inline 1} viewContribution_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2641: Ref)
   returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} viewContribution_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2641: Ref)
   returns (__ret_0_: int);
  modifies gas;



procedure {:inline 1} validPurchase_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool);
  modifies gas, __tmp__goldListPeriodFlag_ZebiMainCrowdsale;



procedure {:inline 1} mintAndAllocateZCO_ZebiMainCrowdsale__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    partnerAddress_s2759: Ref, 
    amountInZWei_s2759: int)
   returns (__ret_0_: bool);
  modifies gas, revert, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0;



procedure {:inline 1} mintAndAllocateZCO_ZebiMainCrowdsale__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    partnerAddress_s2759: Ref, 
    amountInZWei_s2759: int)
   returns (__ret_0_: bool);
  modifies gas, revert, __tmp__totalSupply__BasicToken, __tmp__sum_balances0, __tmp__M_Ref_int_balances0;



procedure {:inline 1} mintvestedTokens_ZebiMainCrowdsale__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    partnerAddress_s2870: Ref, 
    zweitokens_s2870: int)
   returns (__ret_0_: bool);
  modifies gas, revert, currentYearMinted_ZebiMainCrowdsale, calenderYearStart_ZebiMainCrowdsale, calenderYearEnd_ZebiMainCrowdsale, zebiZCOShare_ZebiMainCrowdsale, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0;



procedure {:inline 1} mintvestedTokens_ZebiMainCrowdsale__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    partnerAddress_s2870: Ref, 
    zweitokens_s2870: int)
   returns (__ret_0_: bool);
  modifies gas, revert, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__totalSupply__BasicToken, __tmp__sum_balances0, __tmp__M_Ref_int_balances0;



procedure {:inline 1} refund_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, sum_preSaleRefundsInMainSale12, M_Ref_int_preSaleRefundsInMainSale12, sum_mainContribution7, M_Ref_int_mainContribution7, sum_balances0, M_Ref_int_balances0, totalSupply__BasicToken, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2;



procedure {:inline 1} refund_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert, __tmp__sum_preSaleRefundsInMainSale12, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_mainContribution7, __tmp__M_Ref_int_mainContribution7, __tmp__sum_balances0, __tmp__M_Ref_int_balances0, __tmp__totalSupply__BasicToken, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale;



procedure {:inline 1} forcedRefund_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s3095: Ref);
  modifies gas, revert, sum_preSaleRefundsInMainSale12, M_Ref_int_preSaleRefundsInMainSale12, sum_mainContribution7, M_Ref_int_mainContribution7, sum_balances0, M_Ref_int_balances0, totalSupply__BasicToken, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2;



procedure {:inline 1} forcedRefund_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s3095: Ref);
  modifies gas, revert, __tmp__sum_preSaleRefundsInMainSale12, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_mainContribution7, __tmp__M_Ref_int_mainContribution7, __tmp__sum_balances0, __tmp__M_Ref_int_balances0, __tmp__totalSupply__BasicToken, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale;



procedure {:inline 1} takeEth_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies Balance;



procedure {:inline 1} takeEth_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies __tmp__Balance;



procedure {:inline 1} withdraw_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _value_s3124: int);
  modifies gas, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, Balance, transStartTime_ZebiMainCrowdsale, goldListPeriodFlag_ZebiMainCrowdsale, weiAmount_ZebiMainCrowdsale, tokens_ZebiMainCrowdsale, mainWeiRaised_ZebiMainCrowdsale, sum_mainContribution7, M_Ref_int_mainContribution7, sum_goldListContribution9, M_Ref_int_goldListContribution9, weiRaised_ZCrowdsale, sum_contribution2, M_Ref_int_contribution2, totalSupply__BasicToken, sum_balances0, M_Ref_int_balances0;



procedure {:inline 1} withdraw_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _value_s3124: int);
  modifies gas, revert, __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale;



procedure {:inline 1} addCancellation_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s3142: Ref)
   returns (success_s3142: bool);
  modifies gas, M_Ref_bool_mainCancelledList8, revert;



procedure {:inline 1} addCancellation_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s3142: Ref)
   returns (success_s3142: bool);
  modifies gas, __tmp__M_Ref_bool_mainCancelledList8, revert;



procedure {:inline 1} FallbackDispatch__fail(from: Ref, to: Ref, amount: int);
  modifies __tmp__Balance, gas, __tmp__transStartTime_ZebiMainCrowdsale, revert, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, __tmp__sum_mainContribution7, __tmp__M_Ref_int_mainContribution7, __tmp__sum_goldListContribution9, __tmp__M_Ref_int_goldListContribution9, __tmp__weiRaised_ZCrowdsale, __tmp__sum_contribution2, __tmp__M_Ref_int_contribution2, __tmp__totalSupply__BasicToken, __tmp__sum_balances0, __tmp__M_Ref_int_balances0, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale;



procedure {:inline 1} Fallback_UnknownType__fail(from: Ref, to: Ref, amount: int);
  modifies __tmp__Balance;



procedure {:inline 1} send__fail(from: Ref, to: Ref, amount: int) returns (success: bool);
  modifies __tmp__Balance, __tmp__DType, __tmp__Alloc, __tmp__balance_ADDR, __tmp__M_Ref_int_balances0, __tmp__sum_balances0, __tmp__M_Ref_int_allowed1, __tmp__M_Ref_Ref_allowed1, __tmp__sum_allowed1, __tmp__M_Ref_int_contribution2, __tmp__sum_contribution2, __tmp__M_Ref_bool_cancelledList3, __tmp__sum_cancelledList3, __tmp__M_Ref_bool_preSaleCancelledList4, __tmp__sum_preSaleCancelledList4, __tmp__M_Ref_int_noncsAllocations5, __tmp__sum_noncsAllocations5, __tmp__M_Ref_int_preSaleRefunds6, __tmp__sum_preSaleRefunds6, __tmp__M_Ref_int_mainContribution7, __tmp__sum_mainContribution7, __tmp__M_Ref_bool_mainCancelledList8, __tmp__sum_mainCancelledList8, __tmp__M_Ref_int_goldListContribution9, __tmp__sum_goldListContribution9, __tmp__M_Ref_bool_goldList10, __tmp__sum_goldList10, __tmp__M_Ref_bool_kycAcceptedList11, __tmp__sum_kycAcceptedList11, __tmp__M_Ref_int_preSaleRefundsInMainSale12, __tmp__sum_preSaleRefundsInMainSale12, __tmp__Length, __tmp__now, __tmp__owner_Ownable, __tmp__balances_BasicToken, __tmp__totalSupply__BasicToken, __tmp__allowed_StandardToken, __tmp__mintingFinished_MintableToken, __tmp__transferAllowed_MintableToken, __tmp__name_ZebiCoin, __tmp__symbol_ZebiCoin, __tmp__decimals_ZebiCoin, __tmp__token_ZCrowdsale, __tmp__tokenDecimals_ZCrowdsale, __tmp__startTime_ZCrowdsale, __tmp__endTime_ZCrowdsale, __tmp__minTransAmount_ZCrowdsale, __tmp__mintedTokensCap_ZCrowdsale, __tmp__contribution_ZCrowdsale, __tmp__cancelledList_ZCrowdsale, __tmp__wallet_ZCrowdsale, __tmp__withinRefundPeriod_ZCrowdsale, __tmp__ETHtoZCOrate_ZCrowdsale, __tmp__weiRaised_ZCrowdsale, __tmp__stopped_ZCrowdsale, __tmp__wallet_ZebiCoinTempMgr, __tmp__preSaleCSSC_ZebiCoinTempMgr, __tmp__tsc_ZebiCoinTempMgr, __tmp__tokenDecimals_ZebiCoinTempMgr, __tmp__preSaleCancelledList_ZebiCoinTempMgr, __tmp__noncsAllocations_ZebiCoinTempMgr, __tmp__withinRefundPeriod_ZebiCoinTempMgr, __tmp__preSaleRefunds_ZebiCoinTempMgr, __tmp__token_ZebiMainCrowdsale, __tmp__currentYearMinted_ZebiMainCrowdsale, __tmp__calenderYearMintCap_ZebiMainCrowdsale, __tmp__calenderYearStart_ZebiMainCrowdsale, __tmp__calenderYearEnd_ZebiMainCrowdsale, __tmp__vestedMintStartTime_ZebiMainCrowdsale, __tmp__zebiZCOShare_ZebiMainCrowdsale, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale, __tmp__transStartTime_ZebiMainCrowdsale, __tmp__zcc_ZebiMainCrowdsale, __tmp__tempMngr_ZebiMainCrowdsale, __tmp__tokenDecimals_ZebiMainCrowdsale, __tmp__startTime_ZebiMainCrowdsale, __tmp__endTime_ZebiMainCrowdsale, __tmp__goldListPeriod_ZebiMainCrowdsale, __tmp__postGoldPeriod_ZebiMainCrowdsale, __tmp__minTransAmount_ZebiMainCrowdsale, __tmp__ethCap_ZebiMainCrowdsale, __tmp__mainContribution_ZebiMainCrowdsale, __tmp__mainCancelledList_ZebiMainCrowdsale, __tmp__goldPeriodCap_ZebiMainCrowdsale, __tmp__goldListPeriodFlag_ZebiMainCrowdsale, __tmp__goldListContribution_ZebiMainCrowdsale, __tmp__goldList_ZebiMainCrowdsale, __tmp__kycAcceptedList_ZebiMainCrowdsale, __tmp__wallet_ZebiMainCrowdsale, __tmp__withinRefundPeriod_ZebiMainCrowdsale, __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale, __tmp__tokens_ZebiMainCrowdsale, __tmp__weiAmount_ZebiMainCrowdsale, __tmp__ETHtoZWeirate_ZebiMainCrowdsale, __tmp__mainWeiRaised_ZebiMainCrowdsale, revert, gas;



procedure {:inline 1} onlyOwner_pre__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert;



procedure {:inline 1} canMint_pre__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert;



procedure {:inline 1} stopInEmergency_pre__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies revert;



procedure {:inline 1} inCancelledList_pre__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert;



procedure {:inline 1} inRefundPeriod_pre__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert;



procedure {:inline 1} inPreSaleCancelledList_pre__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert;



procedure {:inline 1} inRefundPeriod2_pre__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert;



procedure {:inline 1} inCancelledList1_pre__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert;



procedure {:inline 1} inRefundPeriod1_pre__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
  modifies gas, revert;



implementation FreshRefGenerator__fail() returns (newRef: Ref)
{
    havoc newRef;
    assume __tmp__Alloc[newRef] == false;
    __tmp__Alloc[newRef] := true;
    assume newRef != null;
}



implementation FreshRefGenerator__success() returns (newRef: Ref)
{
    havoc newRef;
    assume Alloc[newRef] == false;
    Alloc[newRef] := true;
    assume newRef != null;
}



implementation Ownable_Ownable_NoBaseCtor__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume msgsender_MSG != null;
    __tmp__Balance[this] := 0;
    __tmp__owner_Ownable[this] := null;
    __tmp__owner_Ownable[this] := msgsender_MSG;
}



implementation Ownable_Ownable_NoBaseCtor__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume msgsender_MSG != null;
    Balance[this] := 0;
    owner_Ownable[this] := null;
    owner_Ownable[this] := msgsender_MSG;
}



implementation Ownable_Ownable__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }
}



implementation Ownable_Ownable__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }
}



implementation transferOwnership_Ownable__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, newOwner_s54: Ref)
{
  var __var_1: Ref;

    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 308;
    __var_1 := null;
    if (!(newOwner_s54 != null))
    {
        revert := true;
        return;
    }

    gas := gas - 141869;
    __tmp__owner_Ownable[this] := newOwner_s54;
}



implementation transferOwnership_Ownable__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, newOwner_s54: Ref)
{
  var __var_1: Ref;

    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 308;
    __var_1 := null;
    if (!(newOwner_s54 != null))
    {
        revert := true;
        return;
    }

    assert {:EventEmitted "OwnershipTransferred_Ownable"} true;
    gas := gas - 141869;
    owner_Ownable[this] := newOwner_s54;
}



implementation ERC20Basic_ERC20Basic_NoBaseCtor__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume msgsender_MSG != null;
    __tmp__Balance[this] := 0;
}



implementation ERC20Basic_ERC20Basic_NoBaseCtor__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume msgsender_MSG != null;
    Balance[this] := 0;
}



implementation ERC20Basic_ERC20Basic__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }
}



implementation ERC20Basic_ERC20Basic__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }
}



implementation ERC20_ERC20_NoBaseCtor__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume msgsender_MSG != null;
    __tmp__Balance[this] := 0;
}



implementation ERC20_ERC20_NoBaseCtor__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume msgsender_MSG != null;
    Balance[this] := 0;
}



implementation ERC20_ERC20__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }
}



implementation ERC20_ERC20__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }
}



implementation SafeMath_SafeMath_NoBaseCtor__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume msgsender_MSG != null;
    __tmp__Balance[this] := 0;
}



implementation SafeMath_SafeMath_NoBaseCtor__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume msgsender_MSG != null;
    Balance[this] := 0;
}



implementation SafeMath_SafeMath__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call SafeMath_SafeMath_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }
}



implementation SafeMath_SafeMath__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }
}



implementation sub_SafeMath__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, a_s145: int, b_s145: int)
   returns (__ret_0_: int)
{
    gas := gas - 15;
    gas := gas - 130;
    assume b_s145 >= 0;
    assume a_s145 >= 0;
    gas := gas - 70;
    assume a_s145 >= 0;
    assume b_s145 >= 0;
    assume a_s145 - b_s145 >= 0;
    __ret_0_ := a_s145 - b_s145;
    return;
}



implementation sub_SafeMath__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, a_s145: int, b_s145: int)
   returns (__ret_0_: int)
{
    gas := gas - 15;
    gas := gas - 130;
    assume b_s145 >= 0;
    assume a_s145 >= 0;
    assert b_s145 <= a_s145;
    gas := gas - 70;
    assume a_s145 >= 0;
    assume b_s145 >= 0;
    assume a_s145 - b_s145 >= 0;
    __ret_0_ := a_s145 - b_s145;
    return;
}



implementation add_SafeMath__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, a_s169: int, b_s169: int)
   returns (__ret_0_: int)
{
  var c_s168: int;

    gas := gas - 24;
    gas := gas - 136;
    assume c_s168 >= 0;
    assume a_s169 >= 0;
    assume b_s169 >= 0;
    assume a_s169 + b_s169 >= 0;
    c_s168 := a_s169 + b_s169;
    gas := gas - 208;
    assume c_s168 >= 0;
    assume a_s169 >= 0;
    gas := gas - 80;
    assume c_s168 >= 0;
    __ret_0_ := c_s168;
    return;
}



implementation add_SafeMath__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, a_s169: int, b_s169: int)
   returns (__ret_0_: int)
{
  var c_s168: int;

    gas := gas - 24;
    gas := gas - 136;
    assume c_s168 >= 0;
    assume a_s169 >= 0;
    assume b_s169 >= 0;
    assume a_s169 + b_s169 >= 0;
    c_s168 := a_s169 + b_s169;
    gas := gas - 208;
    assume c_s168 >= 0;
    assume a_s169 >= 0;
    assert c_s168 >= a_s169;
    gas := gas - 80;
    assume c_s168 >= 0;
    __ret_0_ := c_s168;
    return;
}



implementation BasicToken_BasicToken_NoBaseCtor__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_2: Ref;

    assume msgsender_MSG != null;
    __tmp__Balance[this] := 0;
    call __var_2 := FreshRefGenerator__fail();
    if (revert)
    {
        return;
    }

    __tmp__balances_BasicToken[this] := __var_2;
    __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]] := zeroRefIntArr();
    __tmp__sum_balances0[__tmp__balances_BasicToken[this]] := 0;
    __tmp__totalSupply__BasicToken[this] := 0;
}



implementation BasicToken_BasicToken_NoBaseCtor__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_2: Ref;

    assume msgsender_MSG != null;
    Balance[this] := 0;
    call __var_2 := FreshRefGenerator__success();
    if (revert)
    {
        return;
    }

    balances_BasicToken[this] := __var_2;
    M_Ref_int_balances0[balances_BasicToken[this]] := zeroRefIntArr();
    sum_balances0[balances_BasicToken[this]] := 0;
    totalSupply__BasicToken[this] := 0;
}



implementation BasicToken_BasicToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }
}



implementation BasicToken_BasicToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }
}



implementation totalSupply_BasicToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: int)
{
    gas := gas - 12;
    gas := gas - 832;
    assume __tmp__totalSupply__BasicToken[this] >= 0;
    __ret_0_ := __tmp__totalSupply__BasicToken[this];
    return;
}



implementation totalSupply_BasicToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: int)
{
    gas := gas - 12;
    gas := gas - 832;
    assume totalSupply__BasicToken[this] >= 0;
    __ret_0_ := totalSupply__BasicToken[this];
    return;
}



implementation transfer_BasicToken__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _to_s249: Ref, 
    _value_s249: int)
   returns (__ret_0_: bool)
{
  var __var_3: Ref;
  var __var_4: int;
  var __var_5: int;

    gas := gas - 12;
    gas := gas - 176;
    __var_3 := null;
    if (!(_to_s249 != null))
    {
        revert := true;
        return;
    }

    gas := gas - 1308;
    assume _value_s249 >= 0;
    assume __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][msgsender_MSG] >= 0;
    if (!(_value_s249
       <= __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][msgsender_MSG]))
    {
        revert := true;
        return;
    }

    gas := gas - 81748;
    assume __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][msgsender_MSG] >= 0;
    assume __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][msgsender_MSG] >= 0;
    assume _value_s249 >= 0;
    call __var_4 := sub_SafeMath__fail(this, this, 0, __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][msgsender_MSG], _value_s249);
    if (revert)
    {
        return;
    }

    __tmp__sum_balances0[__tmp__balances_BasicToken[this]] := __tmp__sum_balances0[__tmp__balances_BasicToken[this]]
       - __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][msgsender_MSG];
    __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][msgsender_MSG] := __var_4;
    __tmp__sum_balances0[__tmp__balances_BasicToken[this]] := __tmp__sum_balances0[__tmp__balances_BasicToken[this]]
       + __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][msgsender_MSG];
    assume __var_4 >= 0;
    gas := gas - 81732;
    assume __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_to_s249] >= 0;
    assume __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_to_s249] >= 0;
    assume _value_s249 >= 0;
    call __var_5 := add_SafeMath__fail(this, this, 0, __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_to_s249], _value_s249);
    if (revert)
    {
        return;
    }

    __tmp__sum_balances0[__tmp__balances_BasicToken[this]] := __tmp__sum_balances0[__tmp__balances_BasicToken[this]]
       - __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_to_s249];
    __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_to_s249] := __var_5;
    __tmp__sum_balances0[__tmp__balances_BasicToken[this]] := __tmp__sum_balances0[__tmp__balances_BasicToken[this]]
       + __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_to_s249];
    assume __var_5 >= 0;
    gas := gas - 32;
    __ret_0_ := true;
    return;
}



implementation transfer_BasicToken__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _to_s249: Ref, 
    _value_s249: int)
   returns (__ret_0_: bool)
{
  var __var_3: Ref;
  var __var_4: int;
  var __var_5: int;

    gas := gas - 12;
    gas := gas - 176;
    __var_3 := null;
    if (!(_to_s249 != null))
    {
        revert := true;
        return;
    }

    gas := gas - 1308;
    assume _value_s249 >= 0;
    assume M_Ref_int_balances0[balances_BasicToken[this]][msgsender_MSG] >= 0;
    if (!(_value_s249 <= M_Ref_int_balances0[balances_BasicToken[this]][msgsender_MSG]))
    {
        revert := true;
        return;
    }

    gas := gas - 81748;
    assume M_Ref_int_balances0[balances_BasicToken[this]][msgsender_MSG] >= 0;
    assume M_Ref_int_balances0[balances_BasicToken[this]][msgsender_MSG] >= 0;
    assume _value_s249 >= 0;
    call __var_4 := sub_SafeMath__success(this, this, 0, M_Ref_int_balances0[balances_BasicToken[this]][msgsender_MSG], _value_s249);
    if (revert)
    {
        return;
    }

    sum_balances0[balances_BasicToken[this]] := sum_balances0[balances_BasicToken[this]]
       - M_Ref_int_balances0[balances_BasicToken[this]][msgsender_MSG];
    M_Ref_int_balances0[balances_BasicToken[this]][msgsender_MSG] := __var_4;
    sum_balances0[balances_BasicToken[this]] := sum_balances0[balances_BasicToken[this]]
       + M_Ref_int_balances0[balances_BasicToken[this]][msgsender_MSG];
    assume __var_4 >= 0;
    gas := gas - 81732;
    assume M_Ref_int_balances0[balances_BasicToken[this]][_to_s249] >= 0;
    assume M_Ref_int_balances0[balances_BasicToken[this]][_to_s249] >= 0;
    assume _value_s249 >= 0;
    call __var_5 := add_SafeMath__success(this, this, 0, M_Ref_int_balances0[balances_BasicToken[this]][_to_s249], _value_s249);
    if (revert)
    {
        return;
    }

    sum_balances0[balances_BasicToken[this]] := sum_balances0[balances_BasicToken[this]]
       - M_Ref_int_balances0[balances_BasicToken[this]][_to_s249];
    M_Ref_int_balances0[balances_BasicToken[this]][_to_s249] := __var_5;
    sum_balances0[balances_BasicToken[this]] := sum_balances0[balances_BasicToken[this]]
       + M_Ref_int_balances0[balances_BasicToken[this]][_to_s249];
    assume __var_5 >= 0;
    assert {:EventEmitted "Transfer_BasicToken"} true;
    gas := gas - 32;
    __ret_0_ := true;
    return;
}



implementation balanceOf_BasicToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _owner_s261: Ref)
   returns (balance_s261: int)
{
    gas := gas - 12;
    gas := gas - 1216;
    assume __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_owner_s261] >= 0;
    balance_s261 := __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_owner_s261];
    return;
}



implementation balanceOf_BasicToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _owner_s261: Ref)
   returns (balance_s261: int)
{
    gas := gas - 12;
    gas := gas - 1216;
    assume M_Ref_int_balances0[balances_BasicToken[this]][_owner_s261] >= 0;
    balance_s261 := M_Ref_int_balances0[balances_BasicToken[this]][_owner_s261];
    return;
}



implementation StandardToken_StandardToken_NoBaseCtor__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_6: Ref;

    assume msgsender_MSG != null;
    __tmp__Balance[this] := 0;
    call __var_6 := FreshRefGenerator__fail();
    if (revert)
    {
        return;
    }

    __tmp__allowed_StandardToken[this] := __var_6;
    __tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]] := zeroRefRefArr();
    __tmp__M_Ref_int_allowed1[null] := zeroRefIntArr();
}



implementation StandardToken_StandardToken_NoBaseCtor__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_6: Ref;

    assume msgsender_MSG != null;
    Balance[this] := 0;
    call __var_6 := FreshRefGenerator__success();
    if (revert)
    {
        return;
    }

    allowed_StandardToken[this] := __var_6;
    M_Ref_Ref_allowed1[allowed_StandardToken[this]] := zeroRefRefArr();
    M_Ref_int_allowed1[null] := zeroRefIntArr();
}



implementation StandardToken_StandardToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }
}



implementation StandardToken_StandardToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }
}



implementation transferFrom_StandardToken__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _from_s358: Ref, 
    _to_s358: Ref, 
    _value_s358: int)
   returns (__ret_0_: bool)
{
  var __var_7: Ref;
  var __var_8: Ref;
  var __var_9: int;
  var __var_10: int;
  var __var_11: Ref;
  var __var_12: int;
  var __var_13: Ref;

    gas := gas - 9;
    gas := gas - 132;
    __var_7 := null;
    if (!(_to_s358 != null))
    {
        revert := true;
        return;
    }

    gas := gas - 984;
    assume _value_s358 >= 0;
    assume __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_from_s358] >= 0;
    if (!(_value_s358
       <= __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_from_s358]))
    {
        revert := true;
        return;
    }

    gas := gas - 1251;
    assume _value_s358 >= 0;
    if (__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]
       == null)
    {
        call __var_8 := FreshRefGenerator__fail();
        if (revert)
        {
            return;
        }

        __tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358] := __var_8;
        __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]] := zeroRefIntArr();
        __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]] := 0;
    }

    assume __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]][msgsender_MSG]
       >= 0;
    if (!(_value_s358
       <= __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]][msgsender_MSG]))
    {
        revert := true;
        return;
    }

    gas := gas - 61317;
    assume __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_from_s358] >= 0;
    assume __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_from_s358] >= 0;
    assume _value_s358 >= 0;
    call __var_9 := sub_SafeMath__fail(this, this, 0, __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_from_s358], _value_s358);
    if (revert)
    {
        return;
    }

    __tmp__sum_balances0[__tmp__balances_BasicToken[this]] := __tmp__sum_balances0[__tmp__balances_BasicToken[this]]
       - __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_from_s358];
    __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_from_s358] := __var_9;
    __tmp__sum_balances0[__tmp__balances_BasicToken[this]] := __tmp__sum_balances0[__tmp__balances_BasicToken[this]]
       + __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_from_s358];
    assume __var_9 >= 0;
    gas := gas - 61299;
    assume __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_to_s358] >= 0;
    assume __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_to_s358] >= 0;
    assume _value_s358 >= 0;
    call __var_10 := add_SafeMath__fail(this, this, 0, __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_to_s358], _value_s358);
    if (revert)
    {
        return;
    }

    __tmp__sum_balances0[__tmp__balances_BasicToken[this]] := __tmp__sum_balances0[__tmp__balances_BasicToken[this]]
       - __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_to_s358];
    __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_to_s358] := __var_10;
    __tmp__sum_balances0[__tmp__balances_BasicToken[this]] := __tmp__sum_balances0[__tmp__balances_BasicToken[this]]
       + __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_to_s358];
    assume __var_10 >= 0;
    gas := gas - 61833;
    if (__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]
       == null)
    {
        call __var_11 := FreshRefGenerator__fail();
        if (revert)
        {
            return;
        }

        __tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358] := __var_11;
        __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]] := zeroRefIntArr();
        __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]] := 0;
    }

    assume __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]][msgsender_MSG]
       >= 0;
    if (__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]
       == null)
    {
        call __var_13 := FreshRefGenerator__fail();
        if (revert)
        {
            return;
        }

        __tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358] := __var_13;
        __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]] := zeroRefIntArr();
        __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]] := 0;
    }

    assume __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]][msgsender_MSG]
       >= 0;
    assume _value_s358 >= 0;
    call __var_12 := sub_SafeMath__fail(this, this, 0, __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]][msgsender_MSG], _value_s358);
    if (revert)
    {
        return;
    }

    __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]] := __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]]
       - __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]][msgsender_MSG];
    __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]][msgsender_MSG] := __var_12;
    __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]] := __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]]
       + __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_from_s358]][msgsender_MSG];
    assume __var_12 >= 0;
    gas := gas - 24;
    __ret_0_ := true;
    return;
}



implementation transferFrom_StandardToken__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _from_s358: Ref, 
    _to_s358: Ref, 
    _value_s358: int)
   returns (__ret_0_: bool)
{
  var __var_7: Ref;
  var __var_8: Ref;
  var __var_9: int;
  var __var_10: int;
  var __var_11: Ref;
  var __var_12: int;
  var __var_13: Ref;

    gas := gas - 9;
    gas := gas - 132;
    __var_7 := null;
    if (!(_to_s358 != null))
    {
        revert := true;
        return;
    }

    gas := gas - 984;
    assume _value_s358 >= 0;
    assume M_Ref_int_balances0[balances_BasicToken[this]][_from_s358] >= 0;
    if (!(_value_s358 <= M_Ref_int_balances0[balances_BasicToken[this]][_from_s358]))
    {
        revert := true;
        return;
    }

    gas := gas - 1251;
    assume _value_s358 >= 0;
    if (M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358] == null)
    {
        call __var_8 := FreshRefGenerator__success();
        if (revert)
        {
            return;
        }

        M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358] := __var_8;
        M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358]] := zeroRefIntArr();
        sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358]] := 0;
    }

    assume M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358]][msgsender_MSG]
       >= 0;
    if (!(_value_s358
       <= M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358]][msgsender_MSG]))
    {
        revert := true;
        return;
    }

    gas := gas - 61317;
    assume M_Ref_int_balances0[balances_BasicToken[this]][_from_s358] >= 0;
    assume M_Ref_int_balances0[balances_BasicToken[this]][_from_s358] >= 0;
    assume _value_s358 >= 0;
    call __var_9 := sub_SafeMath__success(this, this, 0, M_Ref_int_balances0[balances_BasicToken[this]][_from_s358], _value_s358);
    if (revert)
    {
        return;
    }

    sum_balances0[balances_BasicToken[this]] := sum_balances0[balances_BasicToken[this]]
       - M_Ref_int_balances0[balances_BasicToken[this]][_from_s358];
    M_Ref_int_balances0[balances_BasicToken[this]][_from_s358] := __var_9;
    sum_balances0[balances_BasicToken[this]] := sum_balances0[balances_BasicToken[this]]
       + M_Ref_int_balances0[balances_BasicToken[this]][_from_s358];
    assume __var_9 >= 0;
    gas := gas - 61299;
    assume M_Ref_int_balances0[balances_BasicToken[this]][_to_s358] >= 0;
    assume M_Ref_int_balances0[balances_BasicToken[this]][_to_s358] >= 0;
    assume _value_s358 >= 0;
    call __var_10 := add_SafeMath__success(this, this, 0, M_Ref_int_balances0[balances_BasicToken[this]][_to_s358], _value_s358);
    if (revert)
    {
        return;
    }

    sum_balances0[balances_BasicToken[this]] := sum_balances0[balances_BasicToken[this]]
       - M_Ref_int_balances0[balances_BasicToken[this]][_to_s358];
    M_Ref_int_balances0[balances_BasicToken[this]][_to_s358] := __var_10;
    sum_balances0[balances_BasicToken[this]] := sum_balances0[balances_BasicToken[this]]
       + M_Ref_int_balances0[balances_BasicToken[this]][_to_s358];
    assume __var_10 >= 0;
    gas := gas - 61833;
    if (M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358] == null)
    {
        call __var_11 := FreshRefGenerator__success();
        if (revert)
        {
            return;
        }

        M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358] := __var_11;
        M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358]] := zeroRefIntArr();
        sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358]] := 0;
    }

    assume M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358]][msgsender_MSG]
       >= 0;
    if (M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358] == null)
    {
        call __var_13 := FreshRefGenerator__success();
        if (revert)
        {
            return;
        }

        M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358] := __var_13;
        M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358]] := zeroRefIntArr();
        sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358]] := 0;
    }

    assume M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358]][msgsender_MSG]
       >= 0;
    assume _value_s358 >= 0;
    call __var_12 := sub_SafeMath__success(this, this, 0, M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358]][msgsender_MSG], _value_s358);
    if (revert)
    {
        return;
    }

    sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358]] := sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358]]
       - M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358]][msgsender_MSG];
    M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358]][msgsender_MSG] := __var_12;
    sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358]] := sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358]]
       + M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_from_s358]][msgsender_MSG];
    assume __var_12 >= 0;
    assert {:EventEmitted "Transfer_StandardToken"} true;
    gas := gas - 24;
    __ret_0_ := true;
    return;
}



implementation approve_StandardToken__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _spender_s386: Ref, 
    _value_s386: int)
   returns (__ret_0_: bool)
{
  var __var_14: Ref;

    gas := gas - 9;
    gas := gas - 60597;
    if (__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]
       == null)
    {
        call __var_14 := FreshRefGenerator__fail();
        if (revert)
        {
            return;
        }

        __tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG] := __var_14;
        __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := zeroRefIntArr();
        __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := 0;
    }

    assume __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s386]
       >= 0;
    assume _value_s386 >= 0;
    __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]]
       - __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s386];
    __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s386] := _value_s386;
    __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]]
       + __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s386];
    gas := gas - 24;
    __ret_0_ := true;
    return;
}



implementation approve_StandardToken__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _spender_s386: Ref, 
    _value_s386: int)
   returns (__ret_0_: bool)
{
  var __var_14: Ref;

    gas := gas - 9;
    gas := gas - 60597;
    if (M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG] == null)
    {
        call __var_14 := FreshRefGenerator__success();
        if (revert)
        {
            return;
        }

        M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG] := __var_14;
        M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := zeroRefIntArr();
        sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := 0;
    }

    assume M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s386]
       >= 0;
    assume _value_s386 >= 0;
    sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]]
       - M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s386];
    M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s386] := _value_s386;
    sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]]
       + M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s386];
    assert {:EventEmitted "Approval_StandardToken"} true;
    gas := gas - 24;
    __ret_0_ := true;
    return;
}



implementation allowance_StandardToken__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _owner_s402: Ref, 
    _spender_s402: Ref)
   returns (__ret_0_: int)
{
  var __var_15: Ref;

    gas := gas - 9;
    gas := gas - 1182;
    if (__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_owner_s402]
       == null)
    {
        call __var_15 := FreshRefGenerator__fail();
        if (revert)
        {
            return;
        }

        __tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_owner_s402] := __var_15;
        __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_owner_s402]] := zeroRefIntArr();
        __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_owner_s402]] := 0;
    }

    assume __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_owner_s402]][_spender_s402]
       >= 0;
    __ret_0_ := __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][_owner_s402]][_spender_s402];
    return;
}



implementation allowance_StandardToken__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _owner_s402: Ref, 
    _spender_s402: Ref)
   returns (__ret_0_: int)
{
  var __var_15: Ref;

    gas := gas - 9;
    gas := gas - 1182;
    if (M_Ref_Ref_allowed1[allowed_StandardToken[this]][_owner_s402] == null)
    {
        call __var_15 := FreshRefGenerator__success();
        if (revert)
        {
            return;
        }

        M_Ref_Ref_allowed1[allowed_StandardToken[this]][_owner_s402] := __var_15;
        M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_owner_s402]] := zeroRefIntArr();
        sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_owner_s402]] := 0;
    }

    assume M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_owner_s402]][_spender_s402]
       >= 0;
    __ret_0_ := M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][_owner_s402]][_spender_s402];
    return;
}



implementation increaseApproval_StandardToken__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _spender_s443: Ref, 
    _addedValue_s443: int)
   returns (__ret_0_: bool)
{
  var __var_16: Ref;
  var __var_17: int;
  var __var_18: Ref;

    gas := gas - 9;
    gas := gas - 61851;
    if (__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]
       == null)
    {
        call __var_16 := FreshRefGenerator__fail();
        if (revert)
        {
            return;
        }

        __tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG] := __var_16;
        __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := zeroRefIntArr();
        __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := 0;
    }

    assume __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s443]
       >= 0;
    if (__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]
       == null)
    {
        call __var_18 := FreshRefGenerator__fail();
        if (revert)
        {
            return;
        }

        __tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG] := __var_18;
        __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := zeroRefIntArr();
        __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := 0;
    }

    assume __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s443]
       >= 0;
    assume _addedValue_s443 >= 0;
    call __var_17 := add_SafeMath__fail(this, this, 0, __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s443], _addedValue_s443);
    if (revert)
    {
        return;
    }

    __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]]
       - __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s443];
    __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s443] := __var_17;
    __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]]
       + __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s443];
    assume __var_17 >= 0;
    gas := gas - 24;
    __ret_0_ := true;
    return;
}



implementation increaseApproval_StandardToken__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _spender_s443: Ref, 
    _addedValue_s443: int)
   returns (__ret_0_: bool)
{
  var __var_16: Ref;
  var __var_17: int;
  var __var_18: Ref;

    gas := gas - 9;
    gas := gas - 61851;
    if (M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG] == null)
    {
        call __var_16 := FreshRefGenerator__success();
        if (revert)
        {
            return;
        }

        M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG] := __var_16;
        M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := zeroRefIntArr();
        sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := 0;
    }

    assume M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s443]
       >= 0;
    if (M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG] == null)
    {
        call __var_18 := FreshRefGenerator__success();
        if (revert)
        {
            return;
        }

        M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG] := __var_18;
        M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := zeroRefIntArr();
        sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := 0;
    }

    assume M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s443]
       >= 0;
    assume _addedValue_s443 >= 0;
    call __var_17 := add_SafeMath__success(this, this, 0, M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s443], _addedValue_s443);
    if (revert)
    {
        return;
    }

    sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]]
       - M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s443];
    M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s443] := __var_17;
    sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]]
       + M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s443];
    assume __var_17 >= 0;
    assert {:EventEmitted "Approval_StandardToken"} true;
    gas := gas - 24;
    __ret_0_ := true;
    return;
}



implementation decreaseApproval_StandardToken__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _spender_s503: Ref, 
    _subtractedValue_s503: int)
   returns (__ret_0_: bool)
{
  var oldValue_s502: int;
  var __var_19: Ref;
  var __var_20: Ref;
  var __var_21: Ref;
  var __var_22: int;

    gas := gas - 9;
    gas := gas - 1188;
    assume oldValue_s502 >= 0;
    if (__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]
       == null)
    {
        call __var_19 := FreshRefGenerator__fail();
        if (revert)
        {
            return;
        }

        __tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG] := __var_19;
        __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := zeroRefIntArr();
        __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := 0;
    }

    assume __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s503]
       >= 0;
    oldValue_s502 := __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s503];
    gas := gas - 27;
    assume _subtractedValue_s503 >= 0;
    assume oldValue_s502 >= 0;
    if (_subtractedValue_s503 > oldValue_s502)
    {
        gas := gas - 15597;
        if (__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]
           == null)
        {
            call __var_20 := FreshRefGenerator__fail();
            if (revert)
            {
                return;
            }

            __tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG] := __var_20;
            __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := zeroRefIntArr();
            __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := 0;
        }

        assume __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s503]
           >= 0;
        __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]]
           - __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s503];
        __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s503] := 0;
        __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]]
           + __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s503];
    }
    else
    {
        gas := gas - 60696;
        if (__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]
           == null)
        {
            call __var_21 := FreshRefGenerator__fail();
            if (revert)
            {
                return;
            }

            __tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG] := __var_21;
            __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := zeroRefIntArr();
            __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := 0;
        }

        assume __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s503]
           >= 0;
        assume oldValue_s502 >= 0;
        assume _subtractedValue_s503 >= 0;
        call __var_22 := sub_SafeMath__fail(this, this, 0, oldValue_s502, _subtractedValue_s503);
        if (revert)
        {
            return;
        }

        __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]]
           - __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s503];
        __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s503] := __var_22;
        __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]] := __tmp__sum_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]]
           + __tmp__M_Ref_int_allowed1[__tmp__M_Ref_Ref_allowed1[__tmp__allowed_StandardToken[this]][msgsender_MSG]][_spender_s503];
        assume __var_22 >= 0;
    }

    gas := gas - 30;
    __ret_0_ := true;
    return;
}



implementation decreaseApproval_StandardToken__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _spender_s503: Ref, 
    _subtractedValue_s503: int)
   returns (__ret_0_: bool)
{
  var oldValue_s502: int;
  var __var_19: Ref;
  var __var_20: Ref;
  var __var_21: Ref;
  var __var_22: int;

    gas := gas - 9;
    gas := gas - 1188;
    assume oldValue_s502 >= 0;
    if (M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG] == null)
    {
        call __var_19 := FreshRefGenerator__success();
        if (revert)
        {
            return;
        }

        M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG] := __var_19;
        M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := zeroRefIntArr();
        sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := 0;
    }

    assume M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s503]
       >= 0;
    oldValue_s502 := M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s503];
    gas := gas - 27;
    assume _subtractedValue_s503 >= 0;
    assume oldValue_s502 >= 0;
    if (_subtractedValue_s503 > oldValue_s502)
    {
        gas := gas - 15597;
        if (M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG] == null)
        {
            call __var_20 := FreshRefGenerator__success();
            if (revert)
            {
                return;
            }

            M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG] := __var_20;
            M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := zeroRefIntArr();
            sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := 0;
        }

        assume M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s503]
           >= 0;
        sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]]
           - M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s503];
        M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s503] := 0;
        sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]]
           + M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s503];
    }
    else
    {
        gas := gas - 60696;
        if (M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG] == null)
        {
            call __var_21 := FreshRefGenerator__success();
            if (revert)
            {
                return;
            }

            M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG] := __var_21;
            M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := zeroRefIntArr();
            sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := 0;
        }

        assume M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s503]
           >= 0;
        assume oldValue_s502 >= 0;
        assume _subtractedValue_s503 >= 0;
        call __var_22 := sub_SafeMath__success(this, this, 0, oldValue_s502, _subtractedValue_s503);
        if (revert)
        {
            return;
        }

        sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]]
           - M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s503];
        M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s503] := __var_22;
        sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]] := sum_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]]
           + M_Ref_int_allowed1[M_Ref_Ref_allowed1[allowed_StandardToken[this]][msgsender_MSG]][_spender_s503];
        assume __var_22 >= 0;
    }

    assert {:EventEmitted "Approval_StandardToken"} true;
    gas := gas - 30;
    __ret_0_ := true;
    return;
}



implementation MintableToken_MintableToken_NoBaseCtor__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume msgsender_MSG != null;
    __tmp__Balance[this] := 0;
    __tmp__mintingFinished_MintableToken[this] := false;
    __tmp__transferAllowed_MintableToken[this] := false;
}



implementation MintableToken_MintableToken_NoBaseCtor__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume msgsender_MSG != null;
    Balance[this] := 0;
    mintingFinished_MintableToken[this] := false;
    transferAllowed_MintableToken[this] := false;
}



implementation MintableToken_MintableToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call MintableToken_MintableToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }
}



implementation MintableToken_MintableToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }
}



implementation mint_MintableToken__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _to_s584: Ref, 
    _amount_s584: int)
   returns (__ret_0_: bool)
{
  var __var_23: int;
  var __var_24: int;

    gas := gas - 6;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call canMint_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40494;
    assume __tmp__totalSupply__BasicToken[this] >= 0;
    assume __tmp__totalSupply__BasicToken[this] >= 0;
    assume _amount_s584 >= 0;
    call __var_23 := add_SafeMath__fail(this, this, 0, __tmp__totalSupply__BasicToken[this], _amount_s584);
    if (revert)
    {
        return;
    }

    __tmp__totalSupply__BasicToken[this] := __var_23;
    assume __var_23 >= 0;
    gas := gas - 40878;
    assume __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_to_s584] >= 0;
    assume __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_to_s584] >= 0;
    assume _amount_s584 >= 0;
    call __var_24 := add_SafeMath__fail(this, this, 0, __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_to_s584], _amount_s584);
    if (revert)
    {
        return;
    }

    __tmp__sum_balances0[__tmp__balances_BasicToken[this]] := __tmp__sum_balances0[__tmp__balances_BasicToken[this]]
       - __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_to_s584];
    __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_to_s584] := __var_24;
    __tmp__sum_balances0[__tmp__balances_BasicToken[this]] := __tmp__sum_balances0[__tmp__balances_BasicToken[this]]
       + __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_to_s584];
    assume __var_24 >= 0;
    gas := gas - 16;
    __ret_0_ := true;
    return;
}



implementation mint_MintableToken__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _to_s584: Ref, 
    _amount_s584: int)
   returns (__ret_0_: bool)
{
  var __var_23: int;
  var __var_24: int;

    gas := gas - 6;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call canMint_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40494;
    assume totalSupply__BasicToken[this] >= 0;
    assume totalSupply__BasicToken[this] >= 0;
    assume _amount_s584 >= 0;
    call __var_23 := add_SafeMath__success(this, this, 0, totalSupply__BasicToken[this], _amount_s584);
    if (revert)
    {
        return;
    }

    totalSupply__BasicToken[this] := __var_23;
    assume __var_23 >= 0;
    gas := gas - 40878;
    assume M_Ref_int_balances0[balances_BasicToken[this]][_to_s584] >= 0;
    assume M_Ref_int_balances0[balances_BasicToken[this]][_to_s584] >= 0;
    assume _amount_s584 >= 0;
    call __var_24 := add_SafeMath__success(this, this, 0, M_Ref_int_balances0[balances_BasicToken[this]][_to_s584], _amount_s584);
    if (revert)
    {
        return;
    }

    sum_balances0[balances_BasicToken[this]] := sum_balances0[balances_BasicToken[this]]
       - M_Ref_int_balances0[balances_BasicToken[this]][_to_s584];
    M_Ref_int_balances0[balances_BasicToken[this]][_to_s584] := __var_24;
    sum_balances0[balances_BasicToken[this]] := sum_balances0[balances_BasicToken[this]]
       + M_Ref_int_balances0[balances_BasicToken[this]][_to_s584];
    assume __var_24 >= 0;
    assert {:EventEmitted "Mint_MintableToken"} true;
    assert {:EventEmitted "Transfer_MintableToken"} true;
    gas := gas - 16;
    __ret_0_ := true;
    return;
}



implementation finishMinting_MintableToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
    gas := gas - 6;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call canMint_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40634;
    __tmp__mintingFinished_MintableToken[this] := true;
    gas := gas - 16;
    __ret_0_ := true;
    return;
}



implementation finishMinting_MintableToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
    gas := gas - 6;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call canMint_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40634;
    mintingFinished_MintableToken[this] := true;
    assert {:EventEmitted "MintFinished_MintableToken"} true;
    gas := gas - 16;
    __ret_0_ := true;
    return;
}



implementation resumeMinting_MintableToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
    gas := gas - 6;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40634;
    __tmp__mintingFinished_MintableToken[this] := false;
    gas := gas - 16;
    __ret_0_ := true;
    return;
}



implementation resumeMinting_MintableToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
    gas := gas - 6;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40634;
    mintingFinished_MintableToken[this] := false;
    gas := gas - 16;
    __ret_0_ := true;
    return;
}



implementation burn_MintableToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s661: Ref)
   returns (success_s661: bool)
{
  var tokencount_s660: int;
  var __var_25: int;

    gas := gas - 6;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 656;
    assume __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_from_s661] >= 0;
    if (!(__tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_from_s661] != 0))
    {
        revert := true;
        return;
    }

    gas := gas - 614;
    assume tokencount_s660 >= 0;
    assume __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_from_s661] >= 0;
    tokencount_s660 := __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_from_s661];
    gas := gas - 10208;
    assume __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_from_s661] >= 0;
    __tmp__sum_balances0[__tmp__balances_BasicToken[this]] := __tmp__sum_balances0[__tmp__balances_BasicToken[this]]
       - __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_from_s661];
    __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_from_s661] := 0;
    __tmp__sum_balances0[__tmp__balances_BasicToken[this]] := __tmp__sum_balances0[__tmp__balances_BasicToken[this]]
       + __tmp__M_Ref_int_balances0[__tmp__balances_BasicToken[this]][_from_s661];
    gas := gas - 40494;
    assume __tmp__totalSupply__BasicToken[this] >= 0;
    assume __tmp__totalSupply__BasicToken[this] >= 0;
    assume tokencount_s660 >= 0;
    call __var_25 := sub_SafeMath__fail(this, this, 0, __tmp__totalSupply__BasicToken[this], tokencount_s660);
    if (revert)
    {
        return;
    }

    __tmp__totalSupply__BasicToken[this] := __var_25;
    assume __var_25 >= 0;
    gas := gas - 20;
    success_s661 := true;
    return;
}



implementation burn_MintableToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s661: Ref)
   returns (success_s661: bool)
{
  var tokencount_s660: int;
  var __var_25: int;

    gas := gas - 6;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 656;
    assume M_Ref_int_balances0[balances_BasicToken[this]][_from_s661] >= 0;
    if (!(M_Ref_int_balances0[balances_BasicToken[this]][_from_s661] != 0))
    {
        revert := true;
        return;
    }

    gas := gas - 614;
    assume tokencount_s660 >= 0;
    assume M_Ref_int_balances0[balances_BasicToken[this]][_from_s661] >= 0;
    tokencount_s660 := M_Ref_int_balances0[balances_BasicToken[this]][_from_s661];
    gas := gas - 10208;
    assume M_Ref_int_balances0[balances_BasicToken[this]][_from_s661] >= 0;
    sum_balances0[balances_BasicToken[this]] := sum_balances0[balances_BasicToken[this]]
       - M_Ref_int_balances0[balances_BasicToken[this]][_from_s661];
    M_Ref_int_balances0[balances_BasicToken[this]][_from_s661] := 0;
    sum_balances0[balances_BasicToken[this]] := sum_balances0[balances_BasicToken[this]]
       + M_Ref_int_balances0[balances_BasicToken[this]][_from_s661];
    gas := gas - 40494;
    assume totalSupply__BasicToken[this] >= 0;
    assume totalSupply__BasicToken[this] >= 0;
    assume tokencount_s660 >= 0;
    call __var_25 := sub_SafeMath__success(this, this, 0, totalSupply__BasicToken[this], tokencount_s660);
    if (revert)
    {
        return;
    }

    totalSupply__BasicToken[this] := __var_25;
    assume __var_25 >= 0;
    assert {:EventEmitted "Burn_MintableToken"} true;
    gas := gas - 20;
    success_s661 := true;
    return;
}



implementation startTransfer_MintableToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40634;
    __tmp__transferAllowed_MintableToken[this] := true;
}



implementation startTransfer_MintableToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40634;
    transferAllowed_MintableToken[this] := true;
}



implementation endTransfer_MintableToken__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40634;
    __tmp__transferAllowed_MintableToken[this] := false;
}



implementation endTransfer_MintableToken__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40634;
    transferAllowed_MintableToken[this] := false;
}



implementation transfer_MintableToken__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _to_s704: Ref, 
    _value_s704: int)
   returns (__ret_0_: bool)
{
  var __var_26: bool;
  var __var_27: int;

    gas := gas - 6;
    gas := gas - 618;
    if (!__tmp__transferAllowed_MintableToken[this])
    {
        revert := true;
        return;
    }

    gas := gas - 24;
    assume _value_s704 >= 0;
    if (__tmp__DType[this] == ZebiCoin)
    {
        call __var_26 := transfer_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s704, _value_s704);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[this] == MintableToken)
    {
        call __var_26 := transfer_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s704, _value_s704);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 16;
    __ret_0_ := true;
    return;
}



implementation transfer_MintableToken__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _to_s704: Ref, 
    _value_s704: int)
   returns (__ret_0_: bool)
{
  var __var_26: bool;
  var __var_27: int;

    gas := gas - 6;
    gas := gas - 618;
    if (!transferAllowed_MintableToken[this])
    {
        revert := true;
        return;
    }

    gas := gas - 24;
    assume _value_s704 >= 0;
    if (DType[this] == ZebiCoin)
    {
        call __var_26 := transfer_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s704, _value_s704);
        if (revert)
        {
            return;
        }
    }
    else if (DType[this] == MintableToken)
    {
        call __var_26 := transfer_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s704, _value_s704);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 16;
    __ret_0_ := true;
    return;
}



implementation transferFrom_MintableToken__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _from_s730: Ref, 
    _to_s730: Ref, 
    _value_s730: int)
   returns (__ret_0_: bool)
{
  var __var_28: bool;
  var __var_29: int;

    gas := gas - 6;
    gas := gas - 618;
    if (!__tmp__transferAllowed_MintableToken[this])
    {
        revert := true;
        return;
    }

    gas := gas - 30;
    assume _value_s730 >= 0;
    if (__tmp__DType[this] == ZebiCoin)
    {
        call __var_28 := transferFrom_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s730, _to_s730, _value_s730);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[this] == MintableToken)
    {
        call __var_28 := transferFrom_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s730, _to_s730, _value_s730);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 16;
    __ret_0_ := true;
    return;
}



implementation transferFrom_MintableToken__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _from_s730: Ref, 
    _to_s730: Ref, 
    _value_s730: int)
   returns (__ret_0_: bool)
{
  var __var_28: bool;
  var __var_29: int;

    gas := gas - 6;
    gas := gas - 618;
    if (!transferAllowed_MintableToken[this])
    {
        revert := true;
        return;
    }

    gas := gas - 30;
    assume _value_s730 >= 0;
    if (DType[this] == ZebiCoin)
    {
        call __var_28 := transferFrom_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s730, _to_s730, _value_s730);
        if (revert)
        {
            return;
        }
    }
    else if (DType[this] == MintableToken)
    {
        call __var_28 := transferFrom_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s730, _to_s730, _value_s730);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 16;
    __ret_0_ := true;
    return;
}



implementation ZebiCoin_ZebiCoin_NoBaseCtor__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume msgsender_MSG != null;
    __tmp__Balance[this] := 0;
    __tmp__name_ZebiCoin[this] := 564871738;
    __tmp__symbol_ZebiCoin[this] := -1959601464;
    __tmp__decimals_ZebiCoin[this] := 8;
}



implementation ZebiCoin_ZebiCoin_NoBaseCtor__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume msgsender_MSG != null;
    Balance[this] := 0;
    name_ZebiCoin[this] := 564871738;
    symbol_ZebiCoin[this] := -1959601464;
    decimals_ZebiCoin[this] := 8;
}



implementation ZebiCoin_ZebiCoin__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call MintableToken_MintableToken__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call ZebiCoin_ZebiCoin_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }
}



implementation ZebiCoin_ZebiCoin__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call ZebiCoin_ZebiCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }
}



implementation ZCrowdsale_ZCrowdsale_NoBaseCtor__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s914: int, 
    _endTime_s914: int, 
    _ETHtoZCOrate_s914: int, 
    _wallet_s914: Ref, 
    _minTransAmount_s914: int, 
    _mintedTokensCap_s914: int)
{
  var __var_30: Ref;
  var __var_31: Ref;
  var __var_32: Ref;
  var __var_33: Ref;
  var __var_34: Ref;

    assume msgsender_MSG != null;
    __tmp__Balance[this] := 0;
    __tmp__tokenDecimals_ZCrowdsale[this] := 0;
    __tmp__startTime_ZCrowdsale[this] := 0;
    __tmp__endTime_ZCrowdsale[this] := 0;
    __tmp__minTransAmount_ZCrowdsale[this] := 0;
    __tmp__mintedTokensCap_ZCrowdsale[this] := 0;
    call __var_33 := FreshRefGenerator__fail();
    if (revert)
    {
        return;
    }

    __tmp__contribution_ZCrowdsale[this] := __var_33;
    __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]] := zeroRefIntArr();
    __tmp__sum_contribution2[__tmp__contribution_ZCrowdsale[this]] := 0;
    call __var_34 := FreshRefGenerator__fail();
    if (revert)
    {
        return;
    }

    __tmp__cancelledList_ZCrowdsale[this] := __var_34;
    __tmp__M_Ref_bool_cancelledList3[__tmp__cancelledList_ZCrowdsale[this]] := zeroRefBoolArr();
    __tmp__wallet_ZCrowdsale[this] := null;
    __tmp__withinRefundPeriod_ZCrowdsale[this] := false;
    __tmp__ETHtoZCOrate_ZCrowdsale[this] := 0;
    __tmp__weiRaised_ZCrowdsale[this] := 0;
    __tmp__stopped_ZCrowdsale[this] := false;
    assume _startTime_s914 >= 0;
    assume __tmp__now >= 0;
    if (!(_startTime_s914 >= __tmp__now))
    {
        revert := true;
        return;
    }

    assume _endTime_s914 >= 0;
    assume _startTime_s914 >= 0;
    if (!(_endTime_s914 >= _startTime_s914))
    {
        revert := true;
        return;
    }

    assume _ETHtoZCOrate_s914 >= 0;
    if (!(_ETHtoZCOrate_s914 > 0))
    {
        revert := true;
        return;
    }

    __var_30 := null;
    if (!(_wallet_s914 != null))
    {
        revert := true;
        return;
    }

    call __var_32 := FreshRefGenerator__fail();
    if (revert)
    {
        return;
    }

    assume __tmp__DType[__var_32] == ZebiCoin;
    call ZebiCoin_ZebiCoin__fail(__var_32, this, 0);
    if (revert)
    {
        return;
    }

    __var_31 := __var_32;
    __tmp__token_ZCrowdsale[this] := __var_31;
    assume __tmp__startTime_ZCrowdsale[this] >= 0;
    assume _startTime_s914 >= 0;
    __tmp__startTime_ZCrowdsale[this] := _startTime_s914;
    assume __tmp__endTime_ZCrowdsale[this] >= 0;
    assume _endTime_s914 >= 0;
    __tmp__endTime_ZCrowdsale[this] := _endTime_s914;
    assume __tmp__ETHtoZCOrate_ZCrowdsale[this] >= 0;
    __tmp__ETHtoZCOrate_ZCrowdsale[this] := 1;
    __tmp__wallet_ZCrowdsale[this] := _wallet_s914;
    assume __tmp__minTransAmount_ZCrowdsale[this] >= 0;
    assume _minTransAmount_s914 >= 0;
    __tmp__minTransAmount_ZCrowdsale[this] := _minTransAmount_s914;
    assume __tmp__tokenDecimals_ZCrowdsale[this] >= 0;
    __tmp__tokenDecimals_ZCrowdsale[this] := 8;
    assume __tmp__mintedTokensCap_ZCrowdsale[this] >= 0;
    assume _mintedTokensCap_s914 >= 0;
    assume _mintedTokensCap_s914 * 100000000 >= 0;
    __tmp__mintedTokensCap_ZCrowdsale[this] := _mintedTokensCap_s914 * 100000000;
}



implementation ZCrowdsale_ZCrowdsale_NoBaseCtor__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s914: int, 
    _endTime_s914: int, 
    _ETHtoZCOrate_s914: int, 
    _wallet_s914: Ref, 
    _minTransAmount_s914: int, 
    _mintedTokensCap_s914: int)
{
  var __var_30: Ref;
  var __var_31: Ref;
  var __var_32: Ref;
  var __var_33: Ref;
  var __var_34: Ref;

    assume msgsender_MSG != null;
    Balance[this] := 0;
    tokenDecimals_ZCrowdsale[this] := 0;
    startTime_ZCrowdsale[this] := 0;
    endTime_ZCrowdsale[this] := 0;
    minTransAmount_ZCrowdsale[this] := 0;
    mintedTokensCap_ZCrowdsale[this] := 0;
    call __var_33 := FreshRefGenerator__success();
    if (revert)
    {
        return;
    }

    contribution_ZCrowdsale[this] := __var_33;
    M_Ref_int_contribution2[contribution_ZCrowdsale[this]] := zeroRefIntArr();
    sum_contribution2[contribution_ZCrowdsale[this]] := 0;
    call __var_34 := FreshRefGenerator__success();
    if (revert)
    {
        return;
    }

    cancelledList_ZCrowdsale[this] := __var_34;
    M_Ref_bool_cancelledList3[cancelledList_ZCrowdsale[this]] := zeroRefBoolArr();
    wallet_ZCrowdsale[this] := null;
    withinRefundPeriod_ZCrowdsale[this] := false;
    ETHtoZCOrate_ZCrowdsale[this] := 0;
    weiRaised_ZCrowdsale[this] := 0;
    stopped_ZCrowdsale[this] := false;
    assume _startTime_s914 >= 0;
    assume now >= 0;
    if (!(_startTime_s914 >= now))
    {
        revert := true;
        return;
    }

    assume _endTime_s914 >= 0;
    assume _startTime_s914 >= 0;
    if (!(_endTime_s914 >= _startTime_s914))
    {
        revert := true;
        return;
    }

    assume _ETHtoZCOrate_s914 >= 0;
    if (!(_ETHtoZCOrate_s914 > 0))
    {
        revert := true;
        return;
    }

    __var_30 := null;
    if (!(_wallet_s914 != null))
    {
        revert := true;
        return;
    }

    call __var_32 := FreshRefGenerator__success();
    if (revert)
    {
        return;
    }

    assume DType[__var_32] == ZebiCoin;
    call ZebiCoin_ZebiCoin__success(__var_32, this, 0);
    if (revert)
    {
        return;
    }

    __var_31 := __var_32;
    token_ZCrowdsale[this] := __var_31;
    assume startTime_ZCrowdsale[this] >= 0;
    assume _startTime_s914 >= 0;
    startTime_ZCrowdsale[this] := _startTime_s914;
    assume endTime_ZCrowdsale[this] >= 0;
    assume _endTime_s914 >= 0;
    endTime_ZCrowdsale[this] := _endTime_s914;
    assume ETHtoZCOrate_ZCrowdsale[this] >= 0;
    ETHtoZCOrate_ZCrowdsale[this] := 1;
    wallet_ZCrowdsale[this] := _wallet_s914;
    assume minTransAmount_ZCrowdsale[this] >= 0;
    assume _minTransAmount_s914 >= 0;
    minTransAmount_ZCrowdsale[this] := _minTransAmount_s914;
    assume tokenDecimals_ZCrowdsale[this] >= 0;
    tokenDecimals_ZCrowdsale[this] := 8;
    assume mintedTokensCap_ZCrowdsale[this] >= 0;
    assume _mintedTokensCap_s914 >= 0;
    assume _mintedTokensCap_s914 * 100000000 >= 0;
    mintedTokensCap_ZCrowdsale[this] := _mintedTokensCap_s914 * 100000000;
}



implementation ZCrowdsale_ZCrowdsale__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s914: int, 
    _endTime_s914: int, 
    _ETHtoZCOrate_s914: int, 
    _wallet_s914: Ref, 
    _minTransAmount_s914: int, 
    _mintedTokensCap_s914: int)
{
  var __var_30: Ref;
  var __var_31: Ref;
  var __var_32: Ref;
  var __var_33: Ref;
  var __var_34: Ref;

    call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call ZCrowdsale_ZCrowdsale_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, _startTime_s914, _endTime_s914, _ETHtoZCOrate_s914, _wallet_s914, _minTransAmount_s914, _mintedTokensCap_s914);
    if (revert)
    {
        return;
    }
}



implementation ZCrowdsale_ZCrowdsale__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s914: int, 
    _endTime_s914: int, 
    _ETHtoZCOrate_s914: int, 
    _wallet_s914: Ref, 
    _minTransAmount_s914: int, 
    _mintedTokensCap_s914: int)
{
  var __var_30: Ref;
  var __var_31: Ref;
  var __var_32: Ref;
  var __var_33: Ref;
  var __var_34: Ref;

    call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call ZCrowdsale_ZCrowdsale_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _startTime_s914, _endTime_s914, _ETHtoZCOrate_s914, _wallet_s914, _minTransAmount_s914, _mintedTokensCap_s914);
    if (revert)
    {
        return;
    }
}



implementation FallbackMethod_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume __tmp__Balance[msgsender_MSG] >= msgvalue_MSG;
    __tmp__Balance[msgsender_MSG] := __tmp__Balance[msgsender_MSG] - msgvalue_MSG;
    __tmp__Balance[this] := __tmp__Balance[this] + msgvalue_MSG;
    gas := gas - 12;
    if (__tmp__DType[this] == ZebiCoinCrowdsale)
    {
        call buyTokens_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[this] == ZCrowdsale)
    {
        call buyTokens_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation FallbackMethod_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume Balance[msgsender_MSG] >= msgvalue_MSG;
    Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
    Balance[this] := Balance[this] + msgvalue_MSG;
    gas := gas - 12;
    if (DType[this] == ZebiCoinCrowdsale)
    {
        call buyTokens_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[this] == ZCrowdsale)
    {
        call buyTokens_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation finishMint_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __var_35: bool;
  var __var_36: int;

    gas := gas - 6;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 74392;
    if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiCoin)
    {
        call __var_35 := finishMinting_MintableToken__fail(__tmp__token_ZCrowdsale[this], this, __var_36);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == MintableToken)
    {
        call __var_35 := finishMinting_MintableToken__fail(__tmp__token_ZCrowdsale[this], this, __var_36);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 16;
    __ret_0_ := true;
    return;
}



implementation finishMint_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __var_35: bool;
  var __var_36: int;

    gas := gas - 6;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 74392;
    if (DType[token_ZCrowdsale[this]] == ZebiCoin)
    {
        call __var_35 := finishMinting_MintableToken__success(token_ZCrowdsale[this], this, __var_36);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == MintableToken)
    {
        call __var_35 := finishMinting_MintableToken__success(token_ZCrowdsale[this], this, __var_36);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 16;
    __ret_0_ := true;
    return;
}



implementation resumeMint_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __var_37: bool;
  var __var_38: int;

    gas := gas - 6;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 74392;
    if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiCoin)
    {
        call __var_37 := resumeMinting_MintableToken__fail(__tmp__token_ZCrowdsale[this], this, __var_38);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == MintableToken)
    {
        call __var_37 := resumeMinting_MintableToken__fail(__tmp__token_ZCrowdsale[this], this, __var_38);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 16;
    __ret_0_ := true;
    return;
}



implementation resumeMint_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __var_37: bool;
  var __var_38: int;

    gas := gas - 6;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 74392;
    if (DType[token_ZCrowdsale[this]] == ZebiCoin)
    {
        call __var_37 := resumeMinting_MintableToken__success(token_ZCrowdsale[this], this, __var_38);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == MintableToken)
    {
        call __var_37 := resumeMinting_MintableToken__success(token_ZCrowdsale[this], this, __var_38);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 16;
    __ret_0_ := true;
    return;
}



implementation startTransfer_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_39: int;

    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 74068;
    if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiMainCrowdsale)
    {
        call startTransfer_ZebiMainCrowdsale__fail(__tmp__token_ZCrowdsale[this], this, __var_39);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiCoinTempMgr)
    {
        call startTransfer_ZebiCoinTempMgr__fail(__tmp__token_ZCrowdsale[this], this, __var_39);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiCoinCrowdsale)
    {
        call startTransfer_ZCrowdsale__fail(__tmp__token_ZCrowdsale[this], this, __var_39);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZCrowdsale)
    {
        call startTransfer_ZCrowdsale__fail(__tmp__token_ZCrowdsale[this], this, __var_39);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiCoin)
    {
        call startTransfer_MintableToken__fail(__tmp__token_ZCrowdsale[this], this, __var_39);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == MintableToken)
    {
        call startTransfer_MintableToken__fail(__tmp__token_ZCrowdsale[this], this, __var_39);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation startTransfer_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_39: int;

    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 74068;
    if (DType[token_ZCrowdsale[this]] == ZebiMainCrowdsale)
    {
        call startTransfer_ZebiMainCrowdsale__success(token_ZCrowdsale[this], this, __var_39);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == ZebiCoinTempMgr)
    {
        call startTransfer_ZebiCoinTempMgr__success(token_ZCrowdsale[this], this, __var_39);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == ZebiCoinCrowdsale)
    {
        call startTransfer_ZCrowdsale__success(token_ZCrowdsale[this], this, __var_39);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == ZCrowdsale)
    {
        call startTransfer_ZCrowdsale__success(token_ZCrowdsale[this], this, __var_39);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == ZebiCoin)
    {
        call startTransfer_MintableToken__success(token_ZCrowdsale[this], this, __var_39);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == MintableToken)
    {
        call startTransfer_MintableToken__success(token_ZCrowdsale[this], this, __var_39);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation endTransfer_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_40: int;

    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 74068;
    if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiMainCrowdsale)
    {
        call endTransfer_ZebiMainCrowdsale__fail(__tmp__token_ZCrowdsale[this], this, __var_40);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiCoinTempMgr)
    {
        call endTransfer_ZebiCoinTempMgr__fail(__tmp__token_ZCrowdsale[this], this, __var_40);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiCoinCrowdsale)
    {
        call endTransfer_ZCrowdsale__fail(__tmp__token_ZCrowdsale[this], this, __var_40);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZCrowdsale)
    {
        call endTransfer_ZCrowdsale__fail(__tmp__token_ZCrowdsale[this], this, __var_40);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiCoin)
    {
        call endTransfer_MintableToken__fail(__tmp__token_ZCrowdsale[this], this, __var_40);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == MintableToken)
    {
        call endTransfer_MintableToken__fail(__tmp__token_ZCrowdsale[this], this, __var_40);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation endTransfer_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_40: int;

    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 74068;
    if (DType[token_ZCrowdsale[this]] == ZebiMainCrowdsale)
    {
        call endTransfer_ZebiMainCrowdsale__success(token_ZCrowdsale[this], this, __var_40);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == ZebiCoinTempMgr)
    {
        call endTransfer_ZebiCoinTempMgr__success(token_ZCrowdsale[this], this, __var_40);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == ZebiCoinCrowdsale)
    {
        call endTransfer_ZCrowdsale__success(token_ZCrowdsale[this], this, __var_40);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == ZCrowdsale)
    {
        call endTransfer_ZCrowdsale__success(token_ZCrowdsale[this], this, __var_40);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == ZebiCoin)
    {
        call endTransfer_MintableToken__success(token_ZCrowdsale[this], this, __var_40);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == MintableToken)
    {
        call endTransfer_MintableToken__success(token_ZCrowdsale[this], this, __var_40);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation transferTokenOwnership_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s989: Ref)
{
  var __var_41: int;

    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 74346;
    if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiMainCrowdsale)
    {
        call transferOwnership_Ownable__fail(__tmp__token_ZCrowdsale[this], this, __var_41, owner_s989);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiCoinTempMgr)
    {
        call transferOwnership_Ownable__fail(__tmp__token_ZCrowdsale[this], this, __var_41, owner_s989);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiCoinCrowdsale)
    {
        call transferOwnership_Ownable__fail(__tmp__token_ZCrowdsale[this], this, __var_41, owner_s989);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZCrowdsale)
    {
        call transferOwnership_Ownable__fail(__tmp__token_ZCrowdsale[this], this, __var_41, owner_s989);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiCoin)
    {
        call transferOwnership_Ownable__fail(__tmp__token_ZCrowdsale[this], this, __var_41, owner_s989);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == MintableToken)
    {
        call transferOwnership_Ownable__fail(__tmp__token_ZCrowdsale[this], this, __var_41, owner_s989);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == Ownable)
    {
        call transferOwnership_Ownable__fail(__tmp__token_ZCrowdsale[this], this, __var_41, owner_s989);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation transferTokenOwnership_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s989: Ref)
{
  var __var_41: int;

    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 74346;
    if (DType[token_ZCrowdsale[this]] == ZebiMainCrowdsale)
    {
        call transferOwnership_Ownable__success(token_ZCrowdsale[this], this, __var_41, owner_s989);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == ZebiCoinTempMgr)
    {
        call transferOwnership_Ownable__success(token_ZCrowdsale[this], this, __var_41, owner_s989);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == ZebiCoinCrowdsale)
    {
        call transferOwnership_Ownable__success(token_ZCrowdsale[this], this, __var_41, owner_s989);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == ZCrowdsale)
    {
        call transferOwnership_Ownable__success(token_ZCrowdsale[this], this, __var_41, owner_s989);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == ZebiCoin)
    {
        call transferOwnership_Ownable__success(token_ZCrowdsale[this], this, __var_41, owner_s989);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == MintableToken)
    {
        call transferOwnership_Ownable__success(token_ZCrowdsale[this], this, __var_41, owner_s989);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == Ownable)
    {
        call transferOwnership_Ownable__success(token_ZCrowdsale[this], this, __var_41, owner_s989);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation viewCancelledList_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1001: Ref)
   returns (__ret_0_: bool)
{
    gas := gas - 6;
    gas := gas - 680;
    __ret_0_ := __tmp__M_Ref_bool_cancelledList3[__tmp__cancelledList_ZCrowdsale[this]][participant_s1001];
    return;
}



implementation viewCancelledList_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1001: Ref)
   returns (__ret_0_: bool)
{
    gas := gas - 6;
    gas := gas - 680;
    __ret_0_ := M_Ref_bool_cancelledList3[cancelledList_ZCrowdsale[this]][participant_s1001];
    return;
}



implementation buyTokens_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, beneficiary_s1067: Ref)
{
  var __var_42: Ref;
  var __var_43: bool;
  var weiAmount_s1066: int;
  var tokens_s1066: int;
  var __var_44: int;
  var __var_45: bool;
  var __var_46: int;
  var __var_47: int;

    assume __tmp__Balance[msgsender_MSG] >= msgvalue_MSG;
    __tmp__Balance[msgsender_MSG] := __tmp__Balance[msgsender_MSG] - msgvalue_MSG;
    __tmp__Balance[this] := __tmp__Balance[this] + msgvalue_MSG;
    gas := gas - 88;
    __var_42 := null;
    if (!(beneficiary_s1067 != null))
    {
        revert := true;
        return;
    }

    gas := gas - 48;
    if (__tmp__DType[this] == ZebiCoinCrowdsale)
    {
        call __var_43 := validPurchase_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[this] == ZCrowdsale)
    {
        call __var_43 := validPurchase_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    if (!__var_43)
    {
        revert := true;
        return;
    }

    gas := gas - 20;
    assume weiAmount_s1066 >= 0;
    assume msgvalue_MSG >= 0;
    weiAmount_s1066 := msgvalue_MSG;
    gas := gas - 52;
    assume tokens_s1066 >= 0;
    assume weiAmount_s1066 >= 0;
    if (__tmp__DType[this] == ZebiCoinCrowdsale)
    {
        call tokens_s1066 := getTokenAmount_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, weiAmount_s1066);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[this] == ZCrowdsale)
    {
        call tokens_s1066 := getTokenAmount_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, weiAmount_s1066);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    tokens_s1066 := tokens_s1066;
    gas := gas - 40494;
    assume __tmp__weiRaised_ZCrowdsale[this] >= 0;
    assume __tmp__weiRaised_ZCrowdsale[this] >= 0;
    assume weiAmount_s1066 >= 0;
    call __var_44 := add_SafeMath__fail(this, this, 0, __tmp__weiRaised_ZCrowdsale[this], weiAmount_s1066);
    if (revert)
    {
        return;
    }

    __tmp__weiRaised_ZCrowdsale[this] := __var_44;
    assume __var_44 >= 0;
    gas := gas - 74916;
    assume tokens_s1066 >= 0;
    if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiCoin)
    {
        call __var_45 := mint_MintableToken__fail(__tmp__token_ZCrowdsale[this], this, __var_46, beneficiary_s1067, tokens_s1066);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == MintableToken)
    {
        call __var_45 := mint_MintableToken__fail(__tmp__token_ZCrowdsale[this], this, __var_46, beneficiary_s1067, tokens_s1066);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 40866;
    assume __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][beneficiary_s1067]
       >= 0;
    assume __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][beneficiary_s1067]
       >= 0;
    assume weiAmount_s1066 >= 0;
    call __var_47 := add_SafeMath__fail(this, this, 0, __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][beneficiary_s1067], weiAmount_s1066);
    if (revert)
    {
        return;
    }

    __tmp__sum_contribution2[__tmp__contribution_ZCrowdsale[this]] := __tmp__sum_contribution2[__tmp__contribution_ZCrowdsale[this]]
       - __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][beneficiary_s1067];
    __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][beneficiary_s1067] := __var_47;
    __tmp__sum_contribution2[__tmp__contribution_ZCrowdsale[this]] := __tmp__sum_contribution2[__tmp__contribution_ZCrowdsale[this]]
       + __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][beneficiary_s1067];
    assume __var_47 >= 0;
    gas := gas - 8;
    if (__tmp__DType[this] == ZebiCoinCrowdsale)
    {
        call forwardFunds_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[this] == ZCrowdsale)
    {
        call forwardFunds_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation buyTokens_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, beneficiary_s1067: Ref)
{
  var __var_42: Ref;
  var __var_43: bool;
  var weiAmount_s1066: int;
  var tokens_s1066: int;
  var __var_44: int;
  var __var_45: bool;
  var __var_46: int;
  var __var_47: int;

    assume Balance[msgsender_MSG] >= msgvalue_MSG;
    Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
    Balance[this] := Balance[this] + msgvalue_MSG;
    gas := gas - 88;
    __var_42 := null;
    if (!(beneficiary_s1067 != null))
    {
        revert := true;
        return;
    }

    gas := gas - 48;
    if (DType[this] == ZebiCoinCrowdsale)
    {
        call __var_43 := validPurchase_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[this] == ZCrowdsale)
    {
        call __var_43 := validPurchase_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    if (!__var_43)
    {
        revert := true;
        return;
    }

    gas := gas - 20;
    assume weiAmount_s1066 >= 0;
    assume msgvalue_MSG >= 0;
    weiAmount_s1066 := msgvalue_MSG;
    gas := gas - 52;
    assume tokens_s1066 >= 0;
    assume weiAmount_s1066 >= 0;
    if (DType[this] == ZebiCoinCrowdsale)
    {
        call tokens_s1066 := getTokenAmount_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, weiAmount_s1066);
        if (revert)
        {
            return;
        }
    }
    else if (DType[this] == ZCrowdsale)
    {
        call tokens_s1066 := getTokenAmount_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, weiAmount_s1066);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    tokens_s1066 := tokens_s1066;
    gas := gas - 40494;
    assume weiRaised_ZCrowdsale[this] >= 0;
    assume weiRaised_ZCrowdsale[this] >= 0;
    assume weiAmount_s1066 >= 0;
    call __var_44 := add_SafeMath__success(this, this, 0, weiRaised_ZCrowdsale[this], weiAmount_s1066);
    if (revert)
    {
        return;
    }

    weiRaised_ZCrowdsale[this] := __var_44;
    assume __var_44 >= 0;
    gas := gas - 74916;
    assume tokens_s1066 >= 0;
    if (DType[token_ZCrowdsale[this]] == ZebiCoin)
    {
        call __var_45 := mint_MintableToken__success(token_ZCrowdsale[this], this, __var_46, beneficiary_s1067, tokens_s1066);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == MintableToken)
    {
        call __var_45 := mint_MintableToken__success(token_ZCrowdsale[this], this, __var_46, beneficiary_s1067, tokens_s1066);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 40866;
    assume M_Ref_int_contribution2[contribution_ZCrowdsale[this]][beneficiary_s1067] >= 0;
    assume M_Ref_int_contribution2[contribution_ZCrowdsale[this]][beneficiary_s1067] >= 0;
    assume weiAmount_s1066 >= 0;
    call __var_47 := add_SafeMath__success(this, this, 0, M_Ref_int_contribution2[contribution_ZCrowdsale[this]][beneficiary_s1067], weiAmount_s1066);
    if (revert)
    {
        return;
    }

    sum_contribution2[contribution_ZCrowdsale[this]] := sum_contribution2[contribution_ZCrowdsale[this]]
       - M_Ref_int_contribution2[contribution_ZCrowdsale[this]][beneficiary_s1067];
    M_Ref_int_contribution2[contribution_ZCrowdsale[this]][beneficiary_s1067] := __var_47;
    sum_contribution2[contribution_ZCrowdsale[this]] := sum_contribution2[contribution_ZCrowdsale[this]]
       + M_Ref_int_contribution2[contribution_ZCrowdsale[this]][beneficiary_s1067];
    assume __var_47 >= 0;
    assert {:EventEmitted "TokenPurchase_ZCrowdsale"} true;
    gas := gas - 8;
    if (DType[this] == ZebiCoinCrowdsale)
    {
        call forwardFunds_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[this] == ZCrowdsale)
    {
        call forwardFunds_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation getTokenAmount_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, weiAmount_s1082: int)
   returns (__ret_0_: int)
{
    gas := gas - 6;
    gas := gas - 82;
    assume weiAmount_s1082 >= 0;
    assume weiAmount_s1082 * 100000000 >= 0;
    assume weiAmount_s1082 * 100000000 / 1000000000000000000 >= 0;
    __ret_0_ := weiAmount_s1082 * 100000000 / 1000000000000000000;
    return;
}



implementation getTokenAmount_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, weiAmount_s1082: int)
   returns (__ret_0_: int)
{
    gas := gas - 6;
    gas := gas - 82;
    assume weiAmount_s1082 >= 0;
    assume weiAmount_s1082 * 100000000 >= 0;
    assume weiAmount_s1082 * 100000000 / 1000000000000000000 >= 0;
    __ret_0_ := weiAmount_s1082 * 100000000 / 1000000000000000000;
    return;
}



implementation forwardFunds_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_48: int;
  var __var_49: bool;

    gas := gas - 72056;
    __var_48 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_48 := __var_48 - gas;
    assume msgvalue_MSG >= 0;
    call __var_49 := send__fail(this, __tmp__wallet_ZCrowdsale[this], msgvalue_MSG);
    if (!__var_49)
    {
        revert := true;
        return;
    }

    gas := __var_48 + gas;
}



implementation forwardFunds_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_48: int;
  var __var_49: bool;

    gas := gas - 72056;
    __var_48 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_48 := __var_48 - gas;
    assume msgvalue_MSG >= 0;
    call __var_49 := send__success(this, wallet_ZCrowdsale[this], msgvalue_MSG);
    if (!__var_49)
    {
        revert := true;
        return;
    }

    gas := __var_48 + gas;
}



implementation enableRefundPeriod_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40634;
    __tmp__withinRefundPeriod_ZCrowdsale[this] := true;
}



implementation enableRefundPeriod_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40634;
    withinRefundPeriod_ZCrowdsale[this] := true;
}



implementation disableRefundPeriod_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40634;
    __tmp__withinRefundPeriod_ZCrowdsale[this] := false;
}



implementation disableRefundPeriod_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40634;
    withinRefundPeriod_ZCrowdsale[this] := false;
}



implementation emergencyStop_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40534;
    __tmp__stopped_ZCrowdsale[this] := true;
}



implementation emergencyStop_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40534;
    stopped_ZCrowdsale[this] := true;
}



implementation release_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40534;
    __tmp__stopped_ZCrowdsale[this] := false;
}



implementation release_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40534;
    stopped_ZCrowdsale[this] := false;
}



implementation viewContribution_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1145: Ref)
   returns (__ret_0_: int)
{
    gas := gas - 6;
    gas := gas - 608;
    assume __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][participant_s1145]
       >= 0;
    __ret_0_ := __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][participant_s1145];
    return;
}



implementation viewContribution_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1145: Ref)
   returns (__ret_0_: int)
{
    gas := gas - 6;
    gas := gas - 608;
    assume M_Ref_int_contribution2[contribution_ZCrowdsale[this]][participant_s1145] >= 0;
    __ret_0_ := M_Ref_int_contribution2[contribution_ZCrowdsale[this]][participant_s1145];
    return;
}



implementation validPurchase_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var withinPeriod_s1187: bool;
  var validAmount_s1187: bool;
  var withinmintedTokensCap_s1187: bool;
  var __var_50: int;
  var __var_51: int;
  var __var_52: int;

    gas := gas - 6;
    gas := gas - 904;
    assume __tmp__now >= 0;
    assume __tmp__startTime_ZCrowdsale[this] >= 0;
    assume __tmp__now >= 0;
    assume __tmp__endTime_ZCrowdsale[this] >= 0;
    withinPeriod_s1187 := __tmp__now >= __tmp__startTime_ZCrowdsale[this]
       && __tmp__now <= __tmp__endTime_ZCrowdsale[this];
    gas := gas - 438;
    assume msgvalue_MSG >= 0;
    assume __tmp__minTransAmount_ZCrowdsale[this] >= 0;
    validAmount_s1187 := msgvalue_MSG >= __tmp__minTransAmount_ZCrowdsale[this];
    gas := gas - 6856;
    assume __tmp__mintedTokensCap_ZCrowdsale[this] >= 0;
    assume __var_50 >= 0;
    if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiCoin)
    {
        call __var_50 := totalSupply_BasicToken__fail(__tmp__token_ZCrowdsale[this], this, __var_51);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == MintableToken)
    {
        call __var_50 := totalSupply_BasicToken__fail(__tmp__token_ZCrowdsale[this], this, __var_51);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == StandardToken)
    {
        call __var_50 := totalSupply_BasicToken__fail(__tmp__token_ZCrowdsale[this], this, __var_51);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == BasicToken)
    {
        call __var_50 := totalSupply_BasicToken__fail(__tmp__token_ZCrowdsale[this], this, __var_51);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ERC20)
    {
        call __var_50 := totalSupply_ERC20Basic(__tmp__token_ZCrowdsale[this], this, __var_51);
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ERC20Basic)
    {
        call __var_50 := totalSupply_ERC20Basic(__tmp__token_ZCrowdsale[this], this, __var_51);
    }
    else
    {
        assume false;
    }

    assume __var_50 >= 0;
    assume __var_52 >= 0;
    assume msgvalue_MSG >= 0;
    if (__tmp__DType[this] == ZebiCoinCrowdsale)
    {
        call __var_52 := getTokenAmount_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, msgvalue_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[this] == ZCrowdsale)
    {
        call __var_52 := getTokenAmount_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, msgvalue_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    assume __var_52 >= 0;
    assume __var_50 + __var_52 >= 0;
    withinmintedTokensCap_s1187 := __tmp__mintedTokensCap_ZCrowdsale[this] >= __var_50 + __var_52;
    gas := gas - 128;
    __ret_0_ := withinPeriod_s1187 && validAmount_s1187 && withinmintedTokensCap_s1187;
    return;
}



implementation validPurchase_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var withinPeriod_s1187: bool;
  var validAmount_s1187: bool;
  var withinmintedTokensCap_s1187: bool;
  var __var_50: int;
  var __var_51: int;
  var __var_52: int;

    gas := gas - 6;
    gas := gas - 904;
    assume now >= 0;
    assume startTime_ZCrowdsale[this] >= 0;
    assume now >= 0;
    assume endTime_ZCrowdsale[this] >= 0;
    withinPeriod_s1187 := now >= startTime_ZCrowdsale[this] && now <= endTime_ZCrowdsale[this];
    gas := gas - 438;
    assume msgvalue_MSG >= 0;
    assume minTransAmount_ZCrowdsale[this] >= 0;
    validAmount_s1187 := msgvalue_MSG >= minTransAmount_ZCrowdsale[this];
    gas := gas - 6856;
    assume mintedTokensCap_ZCrowdsale[this] >= 0;
    assume __var_50 >= 0;
    if (DType[token_ZCrowdsale[this]] == ZebiCoin)
    {
        call __var_50 := totalSupply_BasicToken__success(token_ZCrowdsale[this], this, __var_51);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == MintableToken)
    {
        call __var_50 := totalSupply_BasicToken__success(token_ZCrowdsale[this], this, __var_51);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == StandardToken)
    {
        call __var_50 := totalSupply_BasicToken__success(token_ZCrowdsale[this], this, __var_51);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == BasicToken)
    {
        call __var_50 := totalSupply_BasicToken__success(token_ZCrowdsale[this], this, __var_51);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == ERC20)
    {
        call __var_50 := totalSupply_ERC20Basic(token_ZCrowdsale[this], this, __var_51);
    }
    else if (DType[token_ZCrowdsale[this]] == ERC20Basic)
    {
        call __var_50 := totalSupply_ERC20Basic(token_ZCrowdsale[this], this, __var_51);
    }
    else
    {
        assume false;
    }

    assume __var_50 >= 0;
    assume __var_52 >= 0;
    assume msgvalue_MSG >= 0;
    if (DType[this] == ZebiCoinCrowdsale)
    {
        call __var_52 := getTokenAmount_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, msgvalue_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[this] == ZCrowdsale)
    {
        call __var_52 := getTokenAmount_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, msgvalue_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    assume __var_52 >= 0;
    assume __var_50 + __var_52 >= 0;
    withinmintedTokensCap_s1187 := mintedTokensCap_ZCrowdsale[this] >= __var_50 + __var_52;
    gas := gas - 128;
    __ret_0_ := withinPeriod_s1187 && validAmount_s1187 && withinmintedTokensCap_s1187;
    return;
}



implementation refund_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_53: int;
  var __var_54: int;
  var refundBalance_s1248: int;
  var __var_55: bool;
  var __var_56: int;
  var __var_57: int;
  var __var_58: bool;

    call inCancelledList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call inRefundPeriod_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 7362;
    assume __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][msgsender_MSG]
       >= 0;
    assume __var_53 >= 0;
    if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiCoin)
    {
        call __var_53 := balanceOf_BasicToken__fail(__tmp__token_ZCrowdsale[this], this, __var_54, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == MintableToken)
    {
        call __var_53 := balanceOf_BasicToken__fail(__tmp__token_ZCrowdsale[this], this, __var_54, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == StandardToken)
    {
        call __var_53 := balanceOf_BasicToken__fail(__tmp__token_ZCrowdsale[this], this, __var_54, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == BasicToken)
    {
        call __var_53 := balanceOf_BasicToken__fail(__tmp__token_ZCrowdsale[this], this, __var_54, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ERC20)
    {
        call __var_53 := balanceOf_ERC20Basic(__tmp__token_ZCrowdsale[this], this, __var_54, msgsender_MSG);
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ERC20Basic)
    {
        call __var_53 := balanceOf_ERC20Basic(__tmp__token_ZCrowdsale[this], this, __var_54, msgsender_MSG);
    }
    else
    {
        assume false;
    }

    assume __var_53 >= 0;
    if (!(__tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][msgsender_MSG]
         > 0
       && __var_53 > 0))
    {
        revert := true;
        return;
    }

    gas := gas - 612;
    assume refundBalance_s1248 >= 0;
    assume __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][msgsender_MSG]
       >= 0;
    refundBalance_s1248 := __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][msgsender_MSG];
    gas := gas - 10206;
    assume __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][msgsender_MSG]
       >= 0;
    __tmp__sum_contribution2[__tmp__contribution_ZCrowdsale[this]] := __tmp__sum_contribution2[__tmp__contribution_ZCrowdsale[this]]
       - __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][msgsender_MSG];
    __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][msgsender_MSG] := 0;
    __tmp__sum_contribution2[__tmp__contribution_ZCrowdsale[this]] := __tmp__sum_contribution2[__tmp__contribution_ZCrowdsale[this]]
       + __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][msgsender_MSG];
    gas := gas - 74656;
    if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiCoin)
    {
        call __var_55 := burn_MintableToken__fail(__tmp__token_ZCrowdsale[this], this, __var_56, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == MintableToken)
    {
        call __var_55 := burn_MintableToken__fail(__tmp__token_ZCrowdsale[this], this, __var_56, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 71566;
    __var_57 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_57 := __var_57 - gas;
    assume refundBalance_s1248 >= 0;
    call __var_58 := send__fail(this, msgsender_MSG, refundBalance_s1248);
    if (!__var_58)
    {
        revert := true;
        return;
    }

    gas := __var_57 + gas;
}



implementation refund_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_53: int;
  var __var_54: int;
  var refundBalance_s1248: int;
  var __var_55: bool;
  var __var_56: int;
  var __var_57: int;
  var __var_58: bool;

    call inCancelledList_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call inRefundPeriod_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 7362;
    assume M_Ref_int_contribution2[contribution_ZCrowdsale[this]][msgsender_MSG] >= 0;
    assume __var_53 >= 0;
    if (DType[token_ZCrowdsale[this]] == ZebiCoin)
    {
        call __var_53 := balanceOf_BasicToken__success(token_ZCrowdsale[this], this, __var_54, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == MintableToken)
    {
        call __var_53 := balanceOf_BasicToken__success(token_ZCrowdsale[this], this, __var_54, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == StandardToken)
    {
        call __var_53 := balanceOf_BasicToken__success(token_ZCrowdsale[this], this, __var_54, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == BasicToken)
    {
        call __var_53 := balanceOf_BasicToken__success(token_ZCrowdsale[this], this, __var_54, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == ERC20)
    {
        call __var_53 := balanceOf_ERC20Basic(token_ZCrowdsale[this], this, __var_54, msgsender_MSG);
    }
    else if (DType[token_ZCrowdsale[this]] == ERC20Basic)
    {
        call __var_53 := balanceOf_ERC20Basic(token_ZCrowdsale[this], this, __var_54, msgsender_MSG);
    }
    else
    {
        assume false;
    }

    assume __var_53 >= 0;
    if (!(M_Ref_int_contribution2[contribution_ZCrowdsale[this]][msgsender_MSG] > 0
       && __var_53 > 0))
    {
        revert := true;
        return;
    }

    gas := gas - 612;
    assume refundBalance_s1248 >= 0;
    assume M_Ref_int_contribution2[contribution_ZCrowdsale[this]][msgsender_MSG] >= 0;
    refundBalance_s1248 := M_Ref_int_contribution2[contribution_ZCrowdsale[this]][msgsender_MSG];
    gas := gas - 10206;
    assume M_Ref_int_contribution2[contribution_ZCrowdsale[this]][msgsender_MSG] >= 0;
    sum_contribution2[contribution_ZCrowdsale[this]] := sum_contribution2[contribution_ZCrowdsale[this]]
       - M_Ref_int_contribution2[contribution_ZCrowdsale[this]][msgsender_MSG];
    M_Ref_int_contribution2[contribution_ZCrowdsale[this]][msgsender_MSG] := 0;
    sum_contribution2[contribution_ZCrowdsale[this]] := sum_contribution2[contribution_ZCrowdsale[this]]
       + M_Ref_int_contribution2[contribution_ZCrowdsale[this]][msgsender_MSG];
    gas := gas - 74656;
    if (DType[token_ZCrowdsale[this]] == ZebiCoin)
    {
        call __var_55 := burn_MintableToken__success(token_ZCrowdsale[this], this, __var_56, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == MintableToken)
    {
        call __var_55 := burn_MintableToken__success(token_ZCrowdsale[this], this, __var_56, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 71566;
    __var_57 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_57 := __var_57 - gas;
    assume refundBalance_s1248 >= 0;
    call __var_58 := send__success(this, msgsender_MSG, refundBalance_s1248);
    if (!__var_58)
    {
        revert := true;
        return;
    }

    gas := __var_57 + gas;
    assert {:EventEmitted "Refund_ZCrowdsale"} true;
}



implementation forcedRefund_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s1308: Ref)
{
  var __var_59: int;
  var __var_60: int;
  var refundBalance_s1307: int;
  var __var_61: bool;
  var __var_62: int;
  var __var_63: int;
  var __var_64: bool;

    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 710;
    if (!__tmp__M_Ref_bool_cancelledList3[__tmp__cancelledList_ZCrowdsale[this]][_from_s1308])
    {
        revert := true;
        return;
    }

    gas := gas - 7366;
    assume __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][_from_s1308]
       >= 0;
    assume __var_59 >= 0;
    if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiCoin)
    {
        call __var_59 := balanceOf_BasicToken__fail(__tmp__token_ZCrowdsale[this], this, __var_60, _from_s1308);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == MintableToken)
    {
        call __var_59 := balanceOf_BasicToken__fail(__tmp__token_ZCrowdsale[this], this, __var_60, _from_s1308);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == StandardToken)
    {
        call __var_59 := balanceOf_BasicToken__fail(__tmp__token_ZCrowdsale[this], this, __var_60, _from_s1308);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == BasicToken)
    {
        call __var_59 := balanceOf_BasicToken__fail(__tmp__token_ZCrowdsale[this], this, __var_60, _from_s1308);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ERC20)
    {
        call __var_59 := balanceOf_ERC20Basic(__tmp__token_ZCrowdsale[this], this, __var_60, _from_s1308);
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ERC20Basic)
    {
        call __var_59 := balanceOf_ERC20Basic(__tmp__token_ZCrowdsale[this], this, __var_60, _from_s1308);
    }
    else
    {
        assume false;
    }

    assume __var_59 >= 0;
    if (!(__tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][_from_s1308]
         > 0
       && __var_59 > 0))
    {
        revert := true;
        return;
    }

    gas := gas - 614;
    assume refundBalance_s1307 >= 0;
    assume __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][_from_s1308]
       >= 0;
    refundBalance_s1307 := __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][_from_s1308];
    gas := gas - 10208;
    assume __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][_from_s1308]
       >= 0;
    __tmp__sum_contribution2[__tmp__contribution_ZCrowdsale[this]] := __tmp__sum_contribution2[__tmp__contribution_ZCrowdsale[this]]
       - __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][_from_s1308];
    __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][_from_s1308] := 0;
    __tmp__sum_contribution2[__tmp__contribution_ZCrowdsale[this]] := __tmp__sum_contribution2[__tmp__contribution_ZCrowdsale[this]]
       + __tmp__M_Ref_int_contribution2[__tmp__contribution_ZCrowdsale[this]][_from_s1308];
    gas := gas - 74658;
    if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == ZebiCoin)
    {
        call __var_61 := burn_MintableToken__fail(__tmp__token_ZCrowdsale[this], this, __var_62, _from_s1308);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZCrowdsale[this]] == MintableToken)
    {
        call __var_61 := burn_MintableToken__fail(__tmp__token_ZCrowdsale[this], this, __var_62, _from_s1308);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 71568;
    __var_63 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_63 := __var_63 - gas;
    assume refundBalance_s1307 >= 0;
    call __var_64 := send__fail(this, _from_s1308, refundBalance_s1307);
    if (!__var_64)
    {
        revert := true;
        return;
    }

    gas := __var_63 + gas;
}



implementation forcedRefund_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s1308: Ref)
{
  var __var_59: int;
  var __var_60: int;
  var refundBalance_s1307: int;
  var __var_61: bool;
  var __var_62: int;
  var __var_63: int;
  var __var_64: bool;

    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 710;
    if (!M_Ref_bool_cancelledList3[cancelledList_ZCrowdsale[this]][_from_s1308])
    {
        revert := true;
        return;
    }

    gas := gas - 7366;
    assume M_Ref_int_contribution2[contribution_ZCrowdsale[this]][_from_s1308] >= 0;
    assume __var_59 >= 0;
    if (DType[token_ZCrowdsale[this]] == ZebiCoin)
    {
        call __var_59 := balanceOf_BasicToken__success(token_ZCrowdsale[this], this, __var_60, _from_s1308);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == MintableToken)
    {
        call __var_59 := balanceOf_BasicToken__success(token_ZCrowdsale[this], this, __var_60, _from_s1308);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == StandardToken)
    {
        call __var_59 := balanceOf_BasicToken__success(token_ZCrowdsale[this], this, __var_60, _from_s1308);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == BasicToken)
    {
        call __var_59 := balanceOf_BasicToken__success(token_ZCrowdsale[this], this, __var_60, _from_s1308);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == ERC20)
    {
        call __var_59 := balanceOf_ERC20Basic(token_ZCrowdsale[this], this, __var_60, _from_s1308);
    }
    else if (DType[token_ZCrowdsale[this]] == ERC20Basic)
    {
        call __var_59 := balanceOf_ERC20Basic(token_ZCrowdsale[this], this, __var_60, _from_s1308);
    }
    else
    {
        assume false;
    }

    assume __var_59 >= 0;
    if (!(M_Ref_int_contribution2[contribution_ZCrowdsale[this]][_from_s1308] > 0
       && __var_59 > 0))
    {
        revert := true;
        return;
    }

    gas := gas - 614;
    assume refundBalance_s1307 >= 0;
    assume M_Ref_int_contribution2[contribution_ZCrowdsale[this]][_from_s1308] >= 0;
    refundBalance_s1307 := M_Ref_int_contribution2[contribution_ZCrowdsale[this]][_from_s1308];
    gas := gas - 10208;
    assume M_Ref_int_contribution2[contribution_ZCrowdsale[this]][_from_s1308] >= 0;
    sum_contribution2[contribution_ZCrowdsale[this]] := sum_contribution2[contribution_ZCrowdsale[this]]
       - M_Ref_int_contribution2[contribution_ZCrowdsale[this]][_from_s1308];
    M_Ref_int_contribution2[contribution_ZCrowdsale[this]][_from_s1308] := 0;
    sum_contribution2[contribution_ZCrowdsale[this]] := sum_contribution2[contribution_ZCrowdsale[this]]
       + M_Ref_int_contribution2[contribution_ZCrowdsale[this]][_from_s1308];
    gas := gas - 74658;
    if (DType[token_ZCrowdsale[this]] == ZebiCoin)
    {
        call __var_61 := burn_MintableToken__success(token_ZCrowdsale[this], this, __var_62, _from_s1308);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZCrowdsale[this]] == MintableToken)
    {
        call __var_61 := burn_MintableToken__success(token_ZCrowdsale[this], this, __var_62, _from_s1308);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 71568;
    __var_63 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_63 := __var_63 - gas;
    assume refundBalance_s1307 >= 0;
    call __var_64 := send__success(this, _from_s1308, refundBalance_s1307);
    if (!__var_64)
    {
        revert := true;
        return;
    }

    gas := __var_63 + gas;
    assert {:EventEmitted "Refund_ZCrowdsale"} true;
}



implementation takeEth_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume __tmp__Balance[msgsender_MSG] >= msgvalue_MSG;
    __tmp__Balance[msgsender_MSG] := __tmp__Balance[msgsender_MSG] - msgvalue_MSG;
    __tmp__Balance[this] := __tmp__Balance[this] + msgvalue_MSG;
}



implementation takeEth_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume Balance[msgsender_MSG] >= msgvalue_MSG;
    Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
    Balance[this] := Balance[this] + msgvalue_MSG;
    assert {:EventEmitted "TakeEth_ZCrowdsale"} true;
}



implementation withdraw_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _value_s1337: int)
{
  var __var_65: int;
  var __var_66: bool;

    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 72058;
    __var_65 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_65 := __var_65 - gas;
    assume _value_s1337 >= 0;
    call __var_66 := send__fail(this, __tmp__wallet_ZCrowdsale[this], _value_s1337);
    if (!__var_66)
    {
        revert := true;
        return;
    }

    gas := __var_65 + gas;
}



implementation withdraw_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _value_s1337: int)
{
  var __var_65: int;
  var __var_66: bool;

    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 72058;
    __var_65 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_65 := __var_65 - gas;
    assume _value_s1337 >= 0;
    call __var_66 := send__success(this, wallet_ZCrowdsale[this], _value_s1337);
    if (!__var_66)
    {
        revert := true;
        return;
    }

    gas := __var_65 + gas;
    assert {:EventEmitted "Withdraw_ZCrowdsale"} true;
}



implementation addCancellation_ZCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s1355: Ref)
   returns (success_s1355: bool)
{
    gas := gas - 6;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40726;
    __tmp__M_Ref_bool_cancelledList3[__tmp__cancelledList_ZCrowdsale[this]][_participant_s1355] := true;
    gas := gas - 16;
    success_s1355 := true;
    return;
}



implementation addCancellation_ZCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s1355: Ref)
   returns (success_s1355: bool)
{
    gas := gas - 6;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 40726;
    M_Ref_bool_cancelledList3[cancelledList_ZCrowdsale[this]][_participant_s1355] := true;
    gas := gas - 16;
    success_s1355 := true;
    return;
}



implementation ZebiCoinCrowdsale_ZebiCoinCrowdsale_NoBaseCtor__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s1382: int, 
    _endTime_s1382: int, 
    _rate_s1382: int, 
    _wallet_s1382: Ref, 
    _minTransAmount_s1382: int, 
    _mintedTokensCap_s1382: int)
{
    assume msgsender_MSG != null;
    __tmp__Balance[this] := 0;
}



implementation ZebiCoinCrowdsale_ZebiCoinCrowdsale_NoBaseCtor__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s1382: int, 
    _endTime_s1382: int, 
    _rate_s1382: int, 
    _wallet_s1382: Ref, 
    _minTransAmount_s1382: int, 
    _mintedTokensCap_s1382: int)
{
    assume msgsender_MSG != null;
    Balance[this] := 0;
}



implementation ZebiCoinCrowdsale_ZebiCoinCrowdsale__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s1382: int, 
    _endTime_s1382: int, 
    _rate_s1382: int, 
    _wallet_s1382: Ref, 
    _minTransAmount_s1382: int, 
    _mintedTokensCap_s1382: int)
{
    call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    assume _startTime_s1382 >= 0;
    assume _endTime_s1382 >= 0;
    assume _rate_s1382 >= 0;
    assume _minTransAmount_s1382 >= 0;
    assume _mintedTokensCap_s1382 >= 0;
    call ZCrowdsale_ZCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, _startTime_s1382, _endTime_s1382, _rate_s1382, _wallet_s1382, _minTransAmount_s1382, _mintedTokensCap_s1382);
    if (revert)
    {
        return;
    }

    call ZebiCoinCrowdsale_ZebiCoinCrowdsale_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, _startTime_s1382, _endTime_s1382, _rate_s1382, _wallet_s1382, _minTransAmount_s1382, _mintedTokensCap_s1382);
    if (revert)
    {
        return;
    }
}



implementation ZebiCoinCrowdsale_ZebiCoinCrowdsale__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s1382: int, 
    _endTime_s1382: int, 
    _rate_s1382: int, 
    _wallet_s1382: Ref, 
    _minTransAmount_s1382: int, 
    _mintedTokensCap_s1382: int)
{
    call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    assume _startTime_s1382 >= 0;
    assume _endTime_s1382 >= 0;
    assume _rate_s1382 >= 0;
    assume _minTransAmount_s1382 >= 0;
    assume _mintedTokensCap_s1382 >= 0;
    call ZCrowdsale_ZCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, _startTime_s1382, _endTime_s1382, _rate_s1382, _wallet_s1382, _minTransAmount_s1382, _mintedTokensCap_s1382);
    if (revert)
    {
        return;
    }

    call ZebiCoinCrowdsale_ZebiCoinCrowdsale_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _startTime_s1382, _endTime_s1382, _rate_s1382, _wallet_s1382, _minTransAmount_s1382, _mintedTokensCap_s1382);
    if (revert)
    {
        return;
    }
}



implementation ZebiCoinTempMgr_ZebiCoinTempMgr_NoBaseCtor__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    presaleCrowdsale_s1483: Ref, 
    tokenAddress_s1483: Ref, 
    _wallet_s1483: Ref)
{
  var __var_67: Ref;
  var __var_68: Ref;
  var __var_69: int;
  var __var_70: int;
  var __var_71: Ref;
  var __var_72: Ref;
  var __var_73: Ref;

    assume msgsender_MSG != null;
    __tmp__Balance[this] := 0;
    __tmp__wallet_ZebiCoinTempMgr[this] := null;
    __tmp__tokenDecimals_ZebiCoinTempMgr[this] := 0;
    call __var_71 := FreshRefGenerator__fail();
    if (revert)
    {
        return;
    }

    __tmp__preSaleCancelledList_ZebiCoinTempMgr[this] := __var_71;
    __tmp__M_Ref_bool_preSaleCancelledList4[__tmp__preSaleCancelledList_ZebiCoinTempMgr[this]] := zeroRefBoolArr();
    call __var_72 := FreshRefGenerator__fail();
    if (revert)
    {
        return;
    }

    __tmp__noncsAllocations_ZebiCoinTempMgr[this] := __var_72;
    __tmp__M_Ref_int_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]] := zeroRefIntArr();
    __tmp__sum_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]] := 0;
    __tmp__withinRefundPeriod_ZebiCoinTempMgr[this] := false;
    call __var_73 := FreshRefGenerator__fail();
    if (revert)
    {
        return;
    }

    __tmp__preSaleRefunds_ZebiCoinTempMgr[this] := __var_73;
    __tmp__M_Ref_int_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]] := zeroRefIntArr();
    __tmp__sum_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]] := 0;
    __tmp__wallet_ZebiCoinTempMgr[this] := _wallet_s1483;
    assume __tmp__DType[presaleCrowdsale_s1483] == ZebiCoinCrowdsale;
    __var_67 := presaleCrowdsale_s1483;
    __tmp__preSaleCSSC_ZebiCoinTempMgr[this] := __var_67;
    assume __tmp__DType[tokenAddress_s1483] == ZebiCoin;
    __var_68 := tokenAddress_s1483;
    __tmp__tsc_ZebiCoinTempMgr[this] := __var_68;
    assume __tmp__tokenDecimals_ZebiCoinTempMgr[this] >= 0;
    assume __tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiCoin;
    __var_69 := __tmp__decimals_ZebiCoin[__tmp__tsc_ZebiCoinTempMgr[this]];
    __tmp__tokenDecimals_ZebiCoinTempMgr[this] := __var_69;
    assume __var_69 >= 0;
}



implementation ZebiCoinTempMgr_ZebiCoinTempMgr_NoBaseCtor__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    presaleCrowdsale_s1483: Ref, 
    tokenAddress_s1483: Ref, 
    _wallet_s1483: Ref)
{
  var __var_67: Ref;
  var __var_68: Ref;
  var __var_69: int;
  var __var_70: int;
  var __var_71: Ref;
  var __var_72: Ref;
  var __var_73: Ref;

    assume msgsender_MSG != null;
    Balance[this] := 0;
    wallet_ZebiCoinTempMgr[this] := null;
    tokenDecimals_ZebiCoinTempMgr[this] := 0;
    call __var_71 := FreshRefGenerator__success();
    if (revert)
    {
        return;
    }

    preSaleCancelledList_ZebiCoinTempMgr[this] := __var_71;
    M_Ref_bool_preSaleCancelledList4[preSaleCancelledList_ZebiCoinTempMgr[this]] := zeroRefBoolArr();
    call __var_72 := FreshRefGenerator__success();
    if (revert)
    {
        return;
    }

    noncsAllocations_ZebiCoinTempMgr[this] := __var_72;
    M_Ref_int_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]] := zeroRefIntArr();
    sum_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]] := 0;
    withinRefundPeriod_ZebiCoinTempMgr[this] := false;
    call __var_73 := FreshRefGenerator__success();
    if (revert)
    {
        return;
    }

    preSaleRefunds_ZebiCoinTempMgr[this] := __var_73;
    M_Ref_int_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]] := zeroRefIntArr();
    sum_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]] := 0;
    wallet_ZebiCoinTempMgr[this] := _wallet_s1483;
    assume DType[presaleCrowdsale_s1483] == ZebiCoinCrowdsale;
    __var_67 := presaleCrowdsale_s1483;
    preSaleCSSC_ZebiCoinTempMgr[this] := __var_67;
    assume DType[tokenAddress_s1483] == ZebiCoin;
    __var_68 := tokenAddress_s1483;
    tsc_ZebiCoinTempMgr[this] := __var_68;
    assume tokenDecimals_ZebiCoinTempMgr[this] >= 0;
    assume DType[tsc_ZebiCoinTempMgr[this]] == ZebiCoin;
    __var_69 := decimals_ZebiCoin[tsc_ZebiCoinTempMgr[this]];
    tokenDecimals_ZebiCoinTempMgr[this] := __var_69;
    assume __var_69 >= 0;
}



implementation ZebiCoinTempMgr_ZebiCoinTempMgr__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    presaleCrowdsale_s1483: Ref, 
    tokenAddress_s1483: Ref, 
    _wallet_s1483: Ref)
{
  var __var_67: Ref;
  var __var_68: Ref;
  var __var_69: int;
  var __var_70: int;
  var __var_71: Ref;
  var __var_72: Ref;
  var __var_73: Ref;

    call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call ZebiCoinTempMgr_ZebiCoinTempMgr_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, presaleCrowdsale_s1483, tokenAddress_s1483, _wallet_s1483);
    if (revert)
    {
        return;
    }
}



implementation ZebiCoinTempMgr_ZebiCoinTempMgr__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    presaleCrowdsale_s1483: Ref, 
    tokenAddress_s1483: Ref, 
    _wallet_s1483: Ref)
{
  var __var_67: Ref;
  var __var_68: Ref;
  var __var_69: int;
  var __var_70: int;
  var __var_71: Ref;
  var __var_72: Ref;
  var __var_73: Ref;

    call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call ZebiCoinTempMgr_ZebiCoinTempMgr_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, presaleCrowdsale_s1483, tokenAddress_s1483, _wallet_s1483);
    if (revert)
    {
        return;
    }
}



implementation finishMint_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __var_74: bool;
  var __var_75: int;

    gas := gas - 3;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37196;
    if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call __var_74 := finishMinting_MintableToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_75);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call __var_74 := finishMinting_MintableToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_75);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 8;
    __ret_0_ := true;
    return;
}



implementation finishMint_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __var_74: bool;
  var __var_75: int;

    gas := gas - 3;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37196;
    if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call __var_74 := finishMinting_MintableToken__success(tsc_ZebiCoinTempMgr[this], this, __var_75);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call __var_74 := finishMinting_MintableToken__success(tsc_ZebiCoinTempMgr[this], this, __var_75);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 8;
    __ret_0_ := true;
    return;
}



implementation resumeMint_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __var_76: bool;
  var __var_77: int;

    gas := gas - 3;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37196;
    if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call __var_76 := resumeMinting_MintableToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_77);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call __var_76 := resumeMinting_MintableToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_77);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 8;
    __ret_0_ := true;
    return;
}



implementation resumeMint_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __var_76: bool;
  var __var_77: int;

    gas := gas - 3;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37196;
    if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call __var_76 := resumeMinting_MintableToken__success(tsc_ZebiCoinTempMgr[this], this, __var_77);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call __var_76 := resumeMinting_MintableToken__success(tsc_ZebiCoinTempMgr[this], this, __var_77);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 8;
    __ret_0_ := true;
    return;
}



implementation startTransfer_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_78: int;

    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37034;
    if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiMainCrowdsale)
    {
        call startTransfer_ZebiMainCrowdsale__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_78);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiCoinTempMgr)
    {
        call startTransfer_ZebiCoinTempMgr__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_78);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiCoinCrowdsale)
    {
        call startTransfer_ZCrowdsale__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_78);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZCrowdsale)
    {
        call startTransfer_ZCrowdsale__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_78);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call startTransfer_MintableToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_78);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call startTransfer_MintableToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_78);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation startTransfer_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_78: int;

    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37034;
    if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiMainCrowdsale)
    {
        call startTransfer_ZebiMainCrowdsale__success(tsc_ZebiCoinTempMgr[this], this, __var_78);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiCoinTempMgr)
    {
        call startTransfer_ZebiCoinTempMgr__success(tsc_ZebiCoinTempMgr[this], this, __var_78);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiCoinCrowdsale)
    {
        call startTransfer_ZCrowdsale__success(tsc_ZebiCoinTempMgr[this], this, __var_78);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == ZCrowdsale)
    {
        call startTransfer_ZCrowdsale__success(tsc_ZebiCoinTempMgr[this], this, __var_78);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call startTransfer_MintableToken__success(tsc_ZebiCoinTempMgr[this], this, __var_78);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call startTransfer_MintableToken__success(tsc_ZebiCoinTempMgr[this], this, __var_78);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation endTransfer_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_79: int;

    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37034;
    if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiMainCrowdsale)
    {
        call endTransfer_ZebiMainCrowdsale__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_79);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiCoinTempMgr)
    {
        call endTransfer_ZebiCoinTempMgr__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_79);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiCoinCrowdsale)
    {
        call endTransfer_ZCrowdsale__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_79);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZCrowdsale)
    {
        call endTransfer_ZCrowdsale__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_79);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call endTransfer_MintableToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_79);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call endTransfer_MintableToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_79);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation endTransfer_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_79: int;

    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37034;
    if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiMainCrowdsale)
    {
        call endTransfer_ZebiMainCrowdsale__success(tsc_ZebiCoinTempMgr[this], this, __var_79);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiCoinTempMgr)
    {
        call endTransfer_ZebiCoinTempMgr__success(tsc_ZebiCoinTempMgr[this], this, __var_79);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiCoinCrowdsale)
    {
        call endTransfer_ZCrowdsale__success(tsc_ZebiCoinTempMgr[this], this, __var_79);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == ZCrowdsale)
    {
        call endTransfer_ZCrowdsale__success(tsc_ZebiCoinTempMgr[this], this, __var_79);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call endTransfer_MintableToken__success(tsc_ZebiCoinTempMgr[this], this, __var_79);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call endTransfer_MintableToken__success(tsc_ZebiCoinTempMgr[this], this, __var_79);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation transferTokenOwnership_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s1549: Ref)
{
  var __var_80: int;

    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37173;
    if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiMainCrowdsale)
    {
        call transferOwnership_Ownable__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_80, owner_s1549);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiCoinTempMgr)
    {
        call transferOwnership_Ownable__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_80, owner_s1549);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiCoinCrowdsale)
    {
        call transferOwnership_Ownable__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_80, owner_s1549);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZCrowdsale)
    {
        call transferOwnership_Ownable__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_80, owner_s1549);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call transferOwnership_Ownable__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_80, owner_s1549);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call transferOwnership_Ownable__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_80, owner_s1549);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == Ownable)
    {
        call transferOwnership_Ownable__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_80, owner_s1549);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation transferTokenOwnership_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s1549: Ref)
{
  var __var_80: int;

    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37173;
    if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiMainCrowdsale)
    {
        call transferOwnership_Ownable__success(tsc_ZebiCoinTempMgr[this], this, __var_80, owner_s1549);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiCoinTempMgr)
    {
        call transferOwnership_Ownable__success(tsc_ZebiCoinTempMgr[this], this, __var_80, owner_s1549);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiCoinCrowdsale)
    {
        call transferOwnership_Ownable__success(tsc_ZebiCoinTempMgr[this], this, __var_80, owner_s1549);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == ZCrowdsale)
    {
        call transferOwnership_Ownable__success(tsc_ZebiCoinTempMgr[this], this, __var_80, owner_s1549);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call transferOwnership_Ownable__success(tsc_ZebiCoinTempMgr[this], this, __var_80, owner_s1549);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call transferOwnership_Ownable__success(tsc_ZebiCoinTempMgr[this], this, __var_80, owner_s1549);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == Ownable)
    {
        call transferOwnership_Ownable__success(tsc_ZebiCoinTempMgr[this], this, __var_80, owner_s1549);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation allocatenonCSTokens_ZebiCoinTempMgr__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    beneficiary_s1597: Ref, 
    tokens_s1597: int)
{
  var __var_81: Ref;
  var Zweitokens_s1596: int;
  var __var_82: int;
  var __var_83: bool;
  var __var_84: int;

    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 44;
    __var_81 := null;
    if (!(beneficiary_s1597 != null))
    {
        revert := true;
        return;
    }

    gas := gas - 19;
    assume Zweitokens_s1596 >= 0;
    assume tokens_s1597 >= 0;
    assume nonlinearMul(tokens_s1597, 100000000) >= 0;
    Zweitokens_s1596 := nonlinearMul(tokens_s1597, 100000000);
    gas := gas - 20439;
    assume __tmp__M_Ref_int_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1597]
       >= 0;
    assume Zweitokens_s1596 >= 0;
    assume __tmp__M_Ref_int_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1597]
       >= 0;
    call __var_82 := add_SafeMath__fail(this, this, 0, Zweitokens_s1596, __tmp__M_Ref_int_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1597]);
    if (revert)
    {
        return;
    }

    __tmp__sum_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]] := __tmp__sum_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]]
       - __tmp__M_Ref_int_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1597];
    __tmp__M_Ref_int_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1597] := __var_82;
    __tmp__sum_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]] := __tmp__sum_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]]
       + __tmp__M_Ref_int_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1597];
    assume __var_82 >= 0;
    gas := gas - 37452;
    assume Zweitokens_s1596 >= 0;
    if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call __var_83 := mint_MintableToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_84, beneficiary_s1597, Zweitokens_s1596);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call __var_83 := mint_MintableToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_84, beneficiary_s1597, Zweitokens_s1596);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation allocatenonCSTokens_ZebiCoinTempMgr__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    beneficiary_s1597: Ref, 
    tokens_s1597: int)
{
  var __var_81: Ref;
  var Zweitokens_s1596: int;
  var __var_82: int;
  var __var_83: bool;
  var __var_84: int;

    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 44;
    __var_81 := null;
    if (!(beneficiary_s1597 != null))
    {
        revert := true;
        return;
    }

    gas := gas - 19;
    assume Zweitokens_s1596 >= 0;
    assume tokens_s1597 >= 0;
    assume nonlinearMul(tokens_s1597, 100000000) >= 0;
    Zweitokens_s1596 := nonlinearMul(tokens_s1597, 100000000);
    gas := gas - 20439;
    assume M_Ref_int_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1597]
       >= 0;
    assume Zweitokens_s1596 >= 0;
    assume M_Ref_int_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1597]
       >= 0;
    call __var_82 := add_SafeMath__success(this, this, 0, Zweitokens_s1596, M_Ref_int_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1597]);
    if (revert)
    {
        return;
    }

    sum_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]] := sum_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]]
       - M_Ref_int_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1597];
    M_Ref_int_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1597] := __var_82;
    sum_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]] := sum_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]]
       + M_Ref_int_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1597];
    assume __var_82 >= 0;
    gas := gas - 37452;
    assume Zweitokens_s1596 >= 0;
    if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call __var_83 := mint_MintableToken__success(tsc_ZebiCoinTempMgr[this], this, __var_84, beneficiary_s1597, Zweitokens_s1596);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call __var_83 := mint_MintableToken__success(tsc_ZebiCoinTempMgr[this], this, __var_84, beneficiary_s1597, Zweitokens_s1596);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    assert {:EventEmitted "AllocatenonCSTokens_ZebiCoinTempMgr"} true;
}



implementation revertNoncsallocation_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, beneficiary_s1625: Ref)
{
  var __var_85: bool;
  var __var_86: int;

    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 328;
    assume __tmp__M_Ref_int_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1625]
       >= 0;
    if (!(__tmp__M_Ref_int_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1625]
       != 0))
    {
        revert := true;
        return;
    }

    gas := gas - 5110;
    assume __tmp__M_Ref_int_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1625]
       >= 0;
    __tmp__sum_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]] := __tmp__sum_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]]
       - __tmp__M_Ref_int_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1625];
    __tmp__M_Ref_int_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1625] := 0;
    __tmp__sum_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]] := __tmp__sum_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]]
       + __tmp__M_Ref_int_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1625];
    gas := gas - 37329;
    if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call __var_85 := burn_MintableToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_86, beneficiary_s1625);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call __var_85 := burn_MintableToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_86, beneficiary_s1625);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation revertNoncsallocation_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, beneficiary_s1625: Ref)
{
  var __var_85: bool;
  var __var_86: int;

    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 328;
    assume M_Ref_int_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1625]
       >= 0;
    if (!(M_Ref_int_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1625]
       != 0))
    {
        revert := true;
        return;
    }

    gas := gas - 5110;
    assume M_Ref_int_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1625]
       >= 0;
    sum_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]] := sum_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]]
       - M_Ref_int_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1625];
    M_Ref_int_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1625] := 0;
    sum_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]] := sum_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]]
       + M_Ref_int_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]][beneficiary_s1625];
    gas := gas - 37329;
    if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call __var_85 := burn_MintableToken__success(tsc_ZebiCoinTempMgr[this], this, __var_86, beneficiary_s1625);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call __var_85 := burn_MintableToken__success(tsc_ZebiCoinTempMgr[this], this, __var_86, beneficiary_s1625);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation viewNoncsallocations_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1637: Ref)
   returns (__ret_0_: int)
{
    gas := gas - 3;
    gas := gas - 304;
    assume __tmp__M_Ref_int_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]][participant_s1637]
       >= 0;
    __ret_0_ := __tmp__M_Ref_int_noncsAllocations5[__tmp__noncsAllocations_ZebiCoinTempMgr[this]][participant_s1637];
    return;
}



implementation viewNoncsallocations_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1637: Ref)
   returns (__ret_0_: int)
{
    gas := gas - 3;
    gas := gas - 304;
    assume M_Ref_int_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]][participant_s1637]
       >= 0;
    __ret_0_ := M_Ref_int_noncsAllocations5[noncsAllocations_ZebiCoinTempMgr[this]][participant_s1637];
    return;
}



implementation viewPreSaleCancelledList_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1649: Ref)
   returns (__ret_0_: bool)
{
    gas := gas - 3;
    gas := gas - 340;
    __ret_0_ := __tmp__M_Ref_bool_preSaleCancelledList4[__tmp__preSaleCancelledList_ZebiCoinTempMgr[this]][participant_s1649];
    return;
}



implementation viewPreSaleCancelledList_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1649: Ref)
   returns (__ret_0_: bool)
{
    gas := gas - 3;
    gas := gas - 340;
    __ret_0_ := M_Ref_bool_preSaleCancelledList4[preSaleCancelledList_ZebiCoinTempMgr[this]][participant_s1649];
    return;
}



implementation viewPreSaleRefunds_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1661: Ref)
   returns (__ret_0_: int)
{
    gas := gas - 3;
    gas := gas - 304;
    assume __tmp__M_Ref_int_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]][participant_s1661]
       >= 0;
    __ret_0_ := __tmp__M_Ref_int_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]][participant_s1661];
    return;
}



implementation viewPreSaleRefunds_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s1661: Ref)
   returns (__ret_0_: int)
{
    gas := gas - 3;
    gas := gas - 304;
    assume M_Ref_int_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]][participant_s1661]
       >= 0;
    __ret_0_ := M_Ref_int_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]][participant_s1661];
    return;
}



implementation enableRefundPeriod_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20267;
    __tmp__withinRefundPeriod_ZebiCoinTempMgr[this] := true;
}



implementation enableRefundPeriod_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20267;
    withinRefundPeriod_ZebiCoinTempMgr[this] := true;
}



implementation disableRefundPeriod_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20267;
    __tmp__withinRefundPeriod_ZebiCoinTempMgr[this] := false;
}



implementation disableRefundPeriod_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20267;
    withinRefundPeriod_ZebiCoinTempMgr[this] := false;
}



implementation refund_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_87: int;
  var __var_88: int;
  var __var_89: int;
  var __var_90: int;
  var refundBalance_s1743: int;
  var __var_91: int;
  var __var_92: bool;
  var __var_93: int;
  var __var_94: int;
  var __var_95: bool;

    call inPreSaleCancelledList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call inRefundPeriod2_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 6712;
    assume __var_87 >= 0;
    if (__tmp__DType[__tmp__preSaleCSSC_ZebiCoinTempMgr[this]] == ZebiMainCrowdsale)
    {
        call __var_87 := viewContribution_ZebiMainCrowdsale__fail(__tmp__preSaleCSSC_ZebiCoinTempMgr[this], this, __var_88, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__preSaleCSSC_ZebiCoinTempMgr[this]] == ZebiCoinCrowdsale)
    {
        call __var_87 := viewContribution_ZCrowdsale__fail(__tmp__preSaleCSSC_ZebiCoinTempMgr[this], this, __var_88, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__preSaleCSSC_ZebiCoinTempMgr[this]] == ZCrowdsale)
    {
        call __var_87 := viewContribution_ZCrowdsale__fail(__tmp__preSaleCSSC_ZebiCoinTempMgr[this], this, __var_88, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    assume __var_87 >= 0;
    assume __var_89 >= 0;
    if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call __var_89 := balanceOf_BasicToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_90, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call __var_89 := balanceOf_BasicToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_90, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == StandardToken)
    {
        call __var_89 := balanceOf_BasicToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_90, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == BasicToken)
    {
        call __var_89 := balanceOf_BasicToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_90, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ERC20)
    {
        call __var_89 := balanceOf_ERC20Basic(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_90, msgsender_MSG);
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ERC20Basic)
    {
        call __var_89 := balanceOf_ERC20Basic(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_90, msgsender_MSG);
    }
    else
    {
        assume false;
    }

    assume __var_89 >= 0;
    if (!(__var_87 > 0 && __var_89 > 0))
    {
        revert := true;
        return;
    }

    gas := gas - 3337;
    assume refundBalance_s1743 >= 0;
    if (__tmp__DType[__tmp__preSaleCSSC_ZebiCoinTempMgr[this]] == ZebiMainCrowdsale)
    {
        call refundBalance_s1743 := viewContribution_ZebiMainCrowdsale__fail(__tmp__preSaleCSSC_ZebiCoinTempMgr[this], this, __var_91, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__preSaleCSSC_ZebiCoinTempMgr[this]] == ZebiCoinCrowdsale)
    {
        call refundBalance_s1743 := viewContribution_ZCrowdsale__fail(__tmp__preSaleCSSC_ZebiCoinTempMgr[this], this, __var_91, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__preSaleCSSC_ZebiCoinTempMgr[this]] == ZCrowdsale)
    {
        call refundBalance_s1743 := viewContribution_ZCrowdsale__fail(__tmp__preSaleCSSC_ZebiCoinTempMgr[this], this, __var_91, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    refundBalance_s1743 := refundBalance_s1743;
    gas := gas - 20103;
    assume __tmp__M_Ref_int_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]][msgsender_MSG]
       >= 0;
    assume refundBalance_s1743 >= 0;
    __tmp__sum_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]] := __tmp__sum_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]]
       - __tmp__M_Ref_int_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]][msgsender_MSG];
    __tmp__M_Ref_int_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]][msgsender_MSG] := refundBalance_s1743;
    __tmp__sum_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]] := __tmp__sum_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]]
       + __tmp__M_Ref_int_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]][msgsender_MSG];
    gas := gas - 37329;
    if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call __var_92 := burn_MintableToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_93, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call __var_92 := burn_MintableToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_93, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 35783;
    __var_94 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_94 := __var_94 - gas;
    assume refundBalance_s1743 >= 0;
    call __var_95 := send__fail(this, msgsender_MSG, refundBalance_s1743);
    if (!__var_95)
    {
        revert := true;
        return;
    }

    gas := __var_94 + gas;
}



implementation refund_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_87: int;
  var __var_88: int;
  var __var_89: int;
  var __var_90: int;
  var refundBalance_s1743: int;
  var __var_91: int;
  var __var_92: bool;
  var __var_93: int;
  var __var_94: int;
  var __var_95: bool;

    call inPreSaleCancelledList_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call inRefundPeriod2_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 6712;
    assume __var_87 >= 0;
    if (DType[preSaleCSSC_ZebiCoinTempMgr[this]] == ZebiMainCrowdsale)
    {
        call __var_87 := viewContribution_ZebiMainCrowdsale__success(preSaleCSSC_ZebiCoinTempMgr[this], this, __var_88, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[preSaleCSSC_ZebiCoinTempMgr[this]] == ZebiCoinCrowdsale)
    {
        call __var_87 := viewContribution_ZCrowdsale__success(preSaleCSSC_ZebiCoinTempMgr[this], this, __var_88, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[preSaleCSSC_ZebiCoinTempMgr[this]] == ZCrowdsale)
    {
        call __var_87 := viewContribution_ZCrowdsale__success(preSaleCSSC_ZebiCoinTempMgr[this], this, __var_88, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    assume __var_87 >= 0;
    assume __var_89 >= 0;
    if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call __var_89 := balanceOf_BasicToken__success(tsc_ZebiCoinTempMgr[this], this, __var_90, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call __var_89 := balanceOf_BasicToken__success(tsc_ZebiCoinTempMgr[this], this, __var_90, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == StandardToken)
    {
        call __var_89 := balanceOf_BasicToken__success(tsc_ZebiCoinTempMgr[this], this, __var_90, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == BasicToken)
    {
        call __var_89 := balanceOf_BasicToken__success(tsc_ZebiCoinTempMgr[this], this, __var_90, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == ERC20)
    {
        call __var_89 := balanceOf_ERC20Basic(tsc_ZebiCoinTempMgr[this], this, __var_90, msgsender_MSG);
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == ERC20Basic)
    {
        call __var_89 := balanceOf_ERC20Basic(tsc_ZebiCoinTempMgr[this], this, __var_90, msgsender_MSG);
    }
    else
    {
        assume false;
    }

    assume __var_89 >= 0;
    if (!(__var_87 > 0 && __var_89 > 0))
    {
        revert := true;
        return;
    }

    gas := gas - 3337;
    assume refundBalance_s1743 >= 0;
    if (DType[preSaleCSSC_ZebiCoinTempMgr[this]] == ZebiMainCrowdsale)
    {
        call refundBalance_s1743 := viewContribution_ZebiMainCrowdsale__success(preSaleCSSC_ZebiCoinTempMgr[this], this, __var_91, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[preSaleCSSC_ZebiCoinTempMgr[this]] == ZebiCoinCrowdsale)
    {
        call refundBalance_s1743 := viewContribution_ZCrowdsale__success(preSaleCSSC_ZebiCoinTempMgr[this], this, __var_91, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[preSaleCSSC_ZebiCoinTempMgr[this]] == ZCrowdsale)
    {
        call refundBalance_s1743 := viewContribution_ZCrowdsale__success(preSaleCSSC_ZebiCoinTempMgr[this], this, __var_91, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    refundBalance_s1743 := refundBalance_s1743;
    gas := gas - 20103;
    assume M_Ref_int_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]][msgsender_MSG]
       >= 0;
    assume refundBalance_s1743 >= 0;
    sum_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]] := sum_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]]
       - M_Ref_int_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]][msgsender_MSG];
    M_Ref_int_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]][msgsender_MSG] := refundBalance_s1743;
    sum_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]] := sum_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]]
       + M_Ref_int_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]][msgsender_MSG];
    gas := gas - 37329;
    if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call __var_92 := burn_MintableToken__success(tsc_ZebiCoinTempMgr[this], this, __var_93, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call __var_92 := burn_MintableToken__success(tsc_ZebiCoinTempMgr[this], this, __var_93, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 35783;
    __var_94 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_94 := __var_94 - gas;
    assume refundBalance_s1743 >= 0;
    call __var_95 := send__success(this, msgsender_MSG, refundBalance_s1743);
    if (!__var_95)
    {
        revert := true;
        return;
    }

    gas := __var_94 + gas;
    assert {:EventEmitted "PreSaleRefund_ZebiCoinTempMgr"} true;
}



implementation forcedRefund_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s1805: Ref)
{
  var __var_96: int;
  var __var_97: int;
  var __var_98: int;
  var __var_99: int;
  var refundBalance_s1804: int;
  var __var_100: int;
  var __var_101: bool;
  var __var_102: int;
  var __var_103: int;
  var __var_104: bool;

    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 355;
    if (!__tmp__M_Ref_bool_preSaleCancelledList4[__tmp__preSaleCancelledList_ZebiCoinTempMgr[this]][_from_s1805])
    {
        revert := true;
        return;
    }

    gas := gas - 6714;
    assume __var_96 >= 0;
    if (__tmp__DType[__tmp__preSaleCSSC_ZebiCoinTempMgr[this]] == ZebiMainCrowdsale)
    {
        call __var_96 := viewContribution_ZebiMainCrowdsale__fail(__tmp__preSaleCSSC_ZebiCoinTempMgr[this], this, __var_97, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__preSaleCSSC_ZebiCoinTempMgr[this]] == ZebiCoinCrowdsale)
    {
        call __var_96 := viewContribution_ZCrowdsale__fail(__tmp__preSaleCSSC_ZebiCoinTempMgr[this], this, __var_97, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__preSaleCSSC_ZebiCoinTempMgr[this]] == ZCrowdsale)
    {
        call __var_96 := viewContribution_ZCrowdsale__fail(__tmp__preSaleCSSC_ZebiCoinTempMgr[this], this, __var_97, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    assume __var_96 >= 0;
    assume __var_98 >= 0;
    if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call __var_98 := balanceOf_BasicToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_99, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call __var_98 := balanceOf_BasicToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_99, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == StandardToken)
    {
        call __var_98 := balanceOf_BasicToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_99, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == BasicToken)
    {
        call __var_98 := balanceOf_BasicToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_99, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ERC20)
    {
        call __var_98 := balanceOf_ERC20Basic(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_99, _from_s1805);
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ERC20Basic)
    {
        call __var_98 := balanceOf_ERC20Basic(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_99, _from_s1805);
    }
    else
    {
        assume false;
    }

    assume __var_98 >= 0;
    if (!(__var_96 > 0 && __var_98 > 0))
    {
        revert := true;
        return;
    }

    gas := gas - 3338;
    assume refundBalance_s1804 >= 0;
    if (__tmp__DType[__tmp__preSaleCSSC_ZebiCoinTempMgr[this]] == ZebiMainCrowdsale)
    {
        call refundBalance_s1804 := viewContribution_ZebiMainCrowdsale__fail(__tmp__preSaleCSSC_ZebiCoinTempMgr[this], this, __var_100, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__preSaleCSSC_ZebiCoinTempMgr[this]] == ZebiCoinCrowdsale)
    {
        call refundBalance_s1804 := viewContribution_ZCrowdsale__fail(__tmp__preSaleCSSC_ZebiCoinTempMgr[this], this, __var_100, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__preSaleCSSC_ZebiCoinTempMgr[this]] == ZCrowdsale)
    {
        call refundBalance_s1804 := viewContribution_ZCrowdsale__fail(__tmp__preSaleCSSC_ZebiCoinTempMgr[this], this, __var_100, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    refundBalance_s1804 := refundBalance_s1804;
    gas := gas - 20104;
    assume __tmp__M_Ref_int_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]][_from_s1805]
       >= 0;
    assume refundBalance_s1804 >= 0;
    __tmp__sum_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]] := __tmp__sum_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]]
       - __tmp__M_Ref_int_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]][_from_s1805];
    __tmp__M_Ref_int_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]][_from_s1805] := refundBalance_s1804;
    __tmp__sum_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]] := __tmp__sum_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]]
       + __tmp__M_Ref_int_preSaleRefunds6[__tmp__preSaleRefunds_ZebiCoinTempMgr[this]][_from_s1805];
    gas := gas - 37330;
    if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call __var_101 := burn_MintableToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_102, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call __var_101 := burn_MintableToken__fail(__tmp__tsc_ZebiCoinTempMgr[this], this, __var_102, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 35784;
    __var_103 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_103 := __var_103 - gas;
    assume refundBalance_s1804 >= 0;
    call __var_104 := send__fail(this, _from_s1805, refundBalance_s1804);
    if (!__var_104)
    {
        revert := true;
        return;
    }

    gas := __var_103 + gas;
}



implementation forcedRefund_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s1805: Ref)
{
  var __var_96: int;
  var __var_97: int;
  var __var_98: int;
  var __var_99: int;
  var refundBalance_s1804: int;
  var __var_100: int;
  var __var_101: bool;
  var __var_102: int;
  var __var_103: int;
  var __var_104: bool;

    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 355;
    if (!M_Ref_bool_preSaleCancelledList4[preSaleCancelledList_ZebiCoinTempMgr[this]][_from_s1805])
    {
        revert := true;
        return;
    }

    gas := gas - 6714;
    assume __var_96 >= 0;
    if (DType[preSaleCSSC_ZebiCoinTempMgr[this]] == ZebiMainCrowdsale)
    {
        call __var_96 := viewContribution_ZebiMainCrowdsale__success(preSaleCSSC_ZebiCoinTempMgr[this], this, __var_97, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else if (DType[preSaleCSSC_ZebiCoinTempMgr[this]] == ZebiCoinCrowdsale)
    {
        call __var_96 := viewContribution_ZCrowdsale__success(preSaleCSSC_ZebiCoinTempMgr[this], this, __var_97, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else if (DType[preSaleCSSC_ZebiCoinTempMgr[this]] == ZCrowdsale)
    {
        call __var_96 := viewContribution_ZCrowdsale__success(preSaleCSSC_ZebiCoinTempMgr[this], this, __var_97, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    assume __var_96 >= 0;
    assume __var_98 >= 0;
    if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call __var_98 := balanceOf_BasicToken__success(tsc_ZebiCoinTempMgr[this], this, __var_99, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call __var_98 := balanceOf_BasicToken__success(tsc_ZebiCoinTempMgr[this], this, __var_99, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == StandardToken)
    {
        call __var_98 := balanceOf_BasicToken__success(tsc_ZebiCoinTempMgr[this], this, __var_99, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == BasicToken)
    {
        call __var_98 := balanceOf_BasicToken__success(tsc_ZebiCoinTempMgr[this], this, __var_99, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == ERC20)
    {
        call __var_98 := balanceOf_ERC20Basic(tsc_ZebiCoinTempMgr[this], this, __var_99, _from_s1805);
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == ERC20Basic)
    {
        call __var_98 := balanceOf_ERC20Basic(tsc_ZebiCoinTempMgr[this], this, __var_99, _from_s1805);
    }
    else
    {
        assume false;
    }

    assume __var_98 >= 0;
    if (!(__var_96 > 0 && __var_98 > 0))
    {
        revert := true;
        return;
    }

    gas := gas - 3338;
    assume refundBalance_s1804 >= 0;
    if (DType[preSaleCSSC_ZebiCoinTempMgr[this]] == ZebiMainCrowdsale)
    {
        call refundBalance_s1804 := viewContribution_ZebiMainCrowdsale__success(preSaleCSSC_ZebiCoinTempMgr[this], this, __var_100, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else if (DType[preSaleCSSC_ZebiCoinTempMgr[this]] == ZebiCoinCrowdsale)
    {
        call refundBalance_s1804 := viewContribution_ZCrowdsale__success(preSaleCSSC_ZebiCoinTempMgr[this], this, __var_100, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else if (DType[preSaleCSSC_ZebiCoinTempMgr[this]] == ZCrowdsale)
    {
        call refundBalance_s1804 := viewContribution_ZCrowdsale__success(preSaleCSSC_ZebiCoinTempMgr[this], this, __var_100, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    refundBalance_s1804 := refundBalance_s1804;
    gas := gas - 20104;
    assume M_Ref_int_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]][_from_s1805]
       >= 0;
    assume refundBalance_s1804 >= 0;
    sum_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]] := sum_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]]
       - M_Ref_int_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]][_from_s1805];
    M_Ref_int_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]][_from_s1805] := refundBalance_s1804;
    sum_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]] := sum_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]]
       + M_Ref_int_preSaleRefunds6[preSaleRefunds_ZebiCoinTempMgr[this]][_from_s1805];
    gas := gas - 37330;
    if (DType[tsc_ZebiCoinTempMgr[this]] == ZebiCoin)
    {
        call __var_101 := burn_MintableToken__success(tsc_ZebiCoinTempMgr[this], this, __var_102, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else if (DType[tsc_ZebiCoinTempMgr[this]] == MintableToken)
    {
        call __var_101 := burn_MintableToken__success(tsc_ZebiCoinTempMgr[this], this, __var_102, _from_s1805);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 35784;
    __var_103 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_103 := __var_103 - gas;
    assume refundBalance_s1804 >= 0;
    call __var_104 := send__success(this, _from_s1805, refundBalance_s1804);
    if (!__var_104)
    {
        revert := true;
        return;
    }

    gas := __var_103 + gas;
    assert {:EventEmitted "PreSaleRefund_ZebiCoinTempMgr"} true;
}



implementation takeEth_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume __tmp__Balance[msgsender_MSG] >= msgvalue_MSG;
    __tmp__Balance[msgsender_MSG] := __tmp__Balance[msgsender_MSG] - msgvalue_MSG;
    __tmp__Balance[this] := __tmp__Balance[this] + msgvalue_MSG;
}



implementation takeEth_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume Balance[msgsender_MSG] >= msgvalue_MSG;
    Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
    Balance[this] := Balance[this] + msgvalue_MSG;
    assert {:EventEmitted "TakeEth_ZebiCoinTempMgr"} true;
}



implementation withdraw_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _value_s1834: int)
{
  var __var_105: int;
  var __var_106: bool;

    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 36029;
    __var_105 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_105 := __var_105 - gas;
    assume _value_s1834 >= 0;
    call __var_106 := send__fail(this, __tmp__wallet_ZebiCoinTempMgr[this], _value_s1834);
    if (!__var_106)
    {
        revert := true;
        return;
    }

    gas := __var_105 + gas;
}



implementation withdraw_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _value_s1834: int)
{
  var __var_105: int;
  var __var_106: bool;

    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 36029;
    __var_105 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_105 := __var_105 - gas;
    assume _value_s1834 >= 0;
    call __var_106 := send__success(this, wallet_ZebiCoinTempMgr[this], _value_s1834);
    if (!__var_106)
    {
        revert := true;
        return;
    }

    gas := __var_105 + gas;
    assert {:EventEmitted "Withdraw_ZebiCoinTempMgr"} true;
}



implementation addCancellation_ZebiCoinTempMgr__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s1852: Ref)
   returns (success_s1852: bool)
{
    gas := gas - 3;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20363;
    __tmp__M_Ref_bool_preSaleCancelledList4[__tmp__preSaleCancelledList_ZebiCoinTempMgr[this]][_participant_s1852] := true;
    gas := gas - 8;
    success_s1852 := true;
    return;
}



implementation addCancellation_ZebiCoinTempMgr__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s1852: Ref)
   returns (success_s1852: bool)
{
    gas := gas - 3;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20363;
    M_Ref_bool_preSaleCancelledList4[preSaleCancelledList_ZebiCoinTempMgr[this]][_participant_s1852] := true;
    gas := gas - 8;
    success_s1852 := true;
    return;
}



implementation ZebiMainCrowdsale_ZebiMainCrowdsale_NoBaseCtor__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s2132: int, 
    _endTime_s2132: int, 
    _ETHtoZWeirate_s2132: int, 
    _wallet_s2132: Ref, 
    _minTransAmount_s2132: int, 
    _ethCap_s2132: int, 
    tokenAddress_s2132: Ref, 
    presaleAddress_s2132: Ref, 
    tempMngrAddress_s2132: Ref, 
    _goldListPeriod_s2132: int, 
    _postGoldPeriod_s2132: int, 
    _goldPeriodCap_s2132: int, 
    _vestedMintStartTime_s2132: int, 
    _calenderYearStart_s2132: int)
{
  var __var_107: Ref;
  var __var_108: Ref;
  var __var_109: Ref;
  var __var_110: int;
  var __var_111: int;
  var __var_112: Ref;
  var __var_113: Ref;
  var __var_114: Ref;
  var __var_115: Ref;
  var __var_116: Ref;
  var __var_117: Ref;
  var __var_118: Ref;

    assume msgsender_MSG != null;
    __tmp__Balance[this] := 0;
    __tmp__currentYearMinted_ZebiMainCrowdsale[this] := 0;
    __tmp__calenderYearMintCap_ZebiMainCrowdsale[this] := 0;
    __tmp__calenderYearStart_ZebiMainCrowdsale[this] := 0;
    __tmp__calenderYearEnd_ZebiMainCrowdsale[this] := 0;
    __tmp__vestedMintStartTime_ZebiMainCrowdsale[this] := 0;
    __tmp__zebiZCOShare_ZebiMainCrowdsale[this] := 0;
    __tmp__crowdsaleZCOCap_ZebiMainCrowdsale[this] := 0;
    __tmp__transStartTime_ZebiMainCrowdsale[this] := 0;
    __tmp__tokenDecimals_ZebiMainCrowdsale[this] := 0;
    __tmp__startTime_ZebiMainCrowdsale[this] := 0;
    __tmp__endTime_ZebiMainCrowdsale[this] := 0;
    __tmp__goldListPeriod_ZebiMainCrowdsale[this] := 0;
    __tmp__postGoldPeriod_ZebiMainCrowdsale[this] := 0;
    __tmp__minTransAmount_ZebiMainCrowdsale[this] := 0;
    __tmp__ethCap_ZebiMainCrowdsale[this] := 0;
    call __var_113 := FreshRefGenerator__fail();
    if (revert)
    {
        return;
    }

    __tmp__mainContribution_ZebiMainCrowdsale[this] := __var_113;
    __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]] := zeroRefIntArr();
    __tmp__sum_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]] := 0;
    call __var_114 := FreshRefGenerator__fail();
    if (revert)
    {
        return;
    }

    __tmp__mainCancelledList_ZebiMainCrowdsale[this] := __var_114;
    __tmp__M_Ref_bool_mainCancelledList8[__tmp__mainCancelledList_ZebiMainCrowdsale[this]] := zeroRefBoolArr();
    __tmp__goldPeriodCap_ZebiMainCrowdsale[this] := 0;
    __tmp__goldListPeriodFlag_ZebiMainCrowdsale[this] := false;
    call __var_115 := FreshRefGenerator__fail();
    if (revert)
    {
        return;
    }

    __tmp__goldListContribution_ZebiMainCrowdsale[this] := __var_115;
    __tmp__M_Ref_int_goldListContribution9[__tmp__goldListContribution_ZebiMainCrowdsale[this]] := zeroRefIntArr();
    __tmp__sum_goldListContribution9[__tmp__goldListContribution_ZebiMainCrowdsale[this]] := 0;
    call __var_116 := FreshRefGenerator__fail();
    if (revert)
    {
        return;
    }

    __tmp__goldList_ZebiMainCrowdsale[this] := __var_116;
    __tmp__M_Ref_bool_goldList10[__tmp__goldList_ZebiMainCrowdsale[this]] := zeroRefBoolArr();
    call __var_117 := FreshRefGenerator__fail();
    if (revert)
    {
        return;
    }

    __tmp__kycAcceptedList_ZebiMainCrowdsale[this] := __var_117;
    __tmp__M_Ref_bool_kycAcceptedList11[__tmp__kycAcceptedList_ZebiMainCrowdsale[this]] := zeroRefBoolArr();
    __tmp__wallet_ZebiMainCrowdsale[this] := null;
    __tmp__withinRefundPeriod_ZebiMainCrowdsale[this] := false;
    call __var_118 := FreshRefGenerator__fail();
    if (revert)
    {
        return;
    }

    __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this] := __var_118;
    __tmp__M_Ref_int_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]] := zeroRefIntArr();
    __tmp__sum_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]] := 0;
    __tmp__tokens_ZebiMainCrowdsale[this] := 0;
    __tmp__weiAmount_ZebiMainCrowdsale[this] := 0;
    __tmp__ETHtoZWeirate_ZebiMainCrowdsale[this] := 0;
    __tmp__mainWeiRaised_ZebiMainCrowdsale[this] := 0;
    assume _startTime_s2132 >= 0;
    assume __tmp__now >= 0;
    if (!(_startTime_s2132 >= __tmp__now))
    {
        revert := true;
        return;
    }

    assume _endTime_s2132 >= 0;
    assume _startTime_s2132 >= 0;
    if (!(_endTime_s2132 >= _startTime_s2132))
    {
        revert := true;
        return;
    }

    assume _ETHtoZWeirate_s2132 >= 0;
    if (!(_ETHtoZWeirate_s2132 > 0))
    {
        revert := true;
        return;
    }

    __var_107 := null;
    if (!(_wallet_s2132 != null))
    {
        revert := true;
        return;
    }

    assume __tmp__DType[tokenAddress_s2132] == ZebiCoin;
    __var_108 := tokenAddress_s2132;
    __tmp__token_ZebiMainCrowdsale[this] := __var_108;
    assume __tmp__DType[presaleAddress_s2132] == ZebiCoinCrowdsale;
    __var_109 := presaleAddress_s2132;
    __tmp__zcc_ZebiMainCrowdsale[this] := __var_109;
    assume __tmp__startTime_ZebiMainCrowdsale[this] >= 0;
    assume _startTime_s2132 >= 0;
    __tmp__startTime_ZebiMainCrowdsale[this] := _startTime_s2132;
    assume __tmp__endTime_ZebiMainCrowdsale[this] >= 0;
    assume _endTime_s2132 >= 0;
    __tmp__endTime_ZebiMainCrowdsale[this] := _endTime_s2132;
    assume __tmp__ETHtoZWeirate_ZebiMainCrowdsale[this] >= 0;
    __tmp__ETHtoZWeirate_ZebiMainCrowdsale[this] := 1;
    __tmp__wallet_ZebiMainCrowdsale[this] := _wallet_s2132;
    assume __tmp__minTransAmount_ZebiMainCrowdsale[this] >= 0;
    assume _minTransAmount_s2132 >= 0;
    __tmp__minTransAmount_ZebiMainCrowdsale[this] := _minTransAmount_s2132;
    assume __tmp__tokenDecimals_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoin;
    __var_110 := __tmp__decimals_ZebiCoin[__tmp__token_ZebiMainCrowdsale[this]];
    __tmp__tokenDecimals_ZebiMainCrowdsale[this] := __var_110;
    assume __var_110 >= 0;
    assume __tmp__ethCap_ZebiMainCrowdsale[this] >= 0;
    assume _ethCap_s2132 >= 0;
    __tmp__ethCap_ZebiMainCrowdsale[this] := _ethCap_s2132;
    assume __tmp__DType[tempMngrAddress_s2132] == ZebiCoinTempMgr;
    __var_112 := tempMngrAddress_s2132;
    __tmp__tempMngr_ZebiMainCrowdsale[this] := __var_112;
    assume __tmp__goldListPeriod_ZebiMainCrowdsale[this] >= 0;
    assume _goldListPeriod_s2132 >= 0;
    __tmp__goldListPeriod_ZebiMainCrowdsale[this] := _goldListPeriod_s2132;
    assume __tmp__postGoldPeriod_ZebiMainCrowdsale[this] >= 0;
    assume _postGoldPeriod_s2132 >= 0;
    __tmp__postGoldPeriod_ZebiMainCrowdsale[this] := _postGoldPeriod_s2132;
    assume __tmp__zebiZCOShare_ZebiMainCrowdsale[this] >= 0;
    __tmp__zebiZCOShare_ZebiMainCrowdsale[this] := 50000000000000000;
    assume __tmp__crowdsaleZCOCap_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__zebiZCOShare_ZebiMainCrowdsale[this] >= 0;
    __tmp__crowdsaleZCOCap_ZebiMainCrowdsale[this] := __tmp__zebiZCOShare_ZebiMainCrowdsale[this];
    assume __tmp__goldPeriodCap_ZebiMainCrowdsale[this] >= 0;
    assume _goldPeriodCap_s2132 >= 0;
    __tmp__goldPeriodCap_ZebiMainCrowdsale[this] := _goldPeriodCap_s2132;
    assume __tmp__calenderYearMintCap_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__zebiZCOShare_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__zebiZCOShare_ZebiMainCrowdsale[this] * 2 >= 0;
    assume __tmp__zebiZCOShare_ZebiMainCrowdsale[this] * 2 / 8 >= 0;
    __tmp__calenderYearMintCap_ZebiMainCrowdsale[this] := __tmp__zebiZCOShare_ZebiMainCrowdsale[this] * 2 / 8;
    assume __tmp__vestedMintStartTime_ZebiMainCrowdsale[this] >= 0;
    assume _vestedMintStartTime_s2132 >= 0;
    __tmp__vestedMintStartTime_ZebiMainCrowdsale[this] := _vestedMintStartTime_s2132;
    assume __tmp__calenderYearStart_ZebiMainCrowdsale[this] >= 0;
    assume _calenderYearStart_s2132 >= 0;
    __tmp__calenderYearStart_ZebiMainCrowdsale[this] := _calenderYearStart_s2132;
    assume __tmp__calenderYearEnd_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__calenderYearStart_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__calenderYearStart_ZebiMainCrowdsale[this] + 365 >= 0;
    assume __tmp__calenderYearStart_ZebiMainCrowdsale[this] + 365 - 1 >= 0;
    __tmp__calenderYearEnd_ZebiMainCrowdsale[this] := __tmp__calenderYearStart_ZebiMainCrowdsale[this] + 365 - 1;
}



implementation ZebiMainCrowdsale_ZebiMainCrowdsale_NoBaseCtor__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s2132: int, 
    _endTime_s2132: int, 
    _ETHtoZWeirate_s2132: int, 
    _wallet_s2132: Ref, 
    _minTransAmount_s2132: int, 
    _ethCap_s2132: int, 
    tokenAddress_s2132: Ref, 
    presaleAddress_s2132: Ref, 
    tempMngrAddress_s2132: Ref, 
    _goldListPeriod_s2132: int, 
    _postGoldPeriod_s2132: int, 
    _goldPeriodCap_s2132: int, 
    _vestedMintStartTime_s2132: int, 
    _calenderYearStart_s2132: int)
{
  var __var_107: Ref;
  var __var_108: Ref;
  var __var_109: Ref;
  var __var_110: int;
  var __var_111: int;
  var __var_112: Ref;
  var __var_113: Ref;
  var __var_114: Ref;
  var __var_115: Ref;
  var __var_116: Ref;
  var __var_117: Ref;
  var __var_118: Ref;

    assume msgsender_MSG != null;
    Balance[this] := 0;
    currentYearMinted_ZebiMainCrowdsale[this] := 0;
    calenderYearMintCap_ZebiMainCrowdsale[this] := 0;
    calenderYearStart_ZebiMainCrowdsale[this] := 0;
    calenderYearEnd_ZebiMainCrowdsale[this] := 0;
    vestedMintStartTime_ZebiMainCrowdsale[this] := 0;
    zebiZCOShare_ZebiMainCrowdsale[this] := 0;
    crowdsaleZCOCap_ZebiMainCrowdsale[this] := 0;
    transStartTime_ZebiMainCrowdsale[this] := 0;
    tokenDecimals_ZebiMainCrowdsale[this] := 0;
    startTime_ZebiMainCrowdsale[this] := 0;
    endTime_ZebiMainCrowdsale[this] := 0;
    goldListPeriod_ZebiMainCrowdsale[this] := 0;
    postGoldPeriod_ZebiMainCrowdsale[this] := 0;
    minTransAmount_ZebiMainCrowdsale[this] := 0;
    ethCap_ZebiMainCrowdsale[this] := 0;
    call __var_113 := FreshRefGenerator__success();
    if (revert)
    {
        return;
    }

    mainContribution_ZebiMainCrowdsale[this] := __var_113;
    M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]] := zeroRefIntArr();
    sum_mainContribution7[mainContribution_ZebiMainCrowdsale[this]] := 0;
    call __var_114 := FreshRefGenerator__success();
    if (revert)
    {
        return;
    }

    mainCancelledList_ZebiMainCrowdsale[this] := __var_114;
    M_Ref_bool_mainCancelledList8[mainCancelledList_ZebiMainCrowdsale[this]] := zeroRefBoolArr();
    goldPeriodCap_ZebiMainCrowdsale[this] := 0;
    goldListPeriodFlag_ZebiMainCrowdsale[this] := false;
    call __var_115 := FreshRefGenerator__success();
    if (revert)
    {
        return;
    }

    goldListContribution_ZebiMainCrowdsale[this] := __var_115;
    M_Ref_int_goldListContribution9[goldListContribution_ZebiMainCrowdsale[this]] := zeroRefIntArr();
    sum_goldListContribution9[goldListContribution_ZebiMainCrowdsale[this]] := 0;
    call __var_116 := FreshRefGenerator__success();
    if (revert)
    {
        return;
    }

    goldList_ZebiMainCrowdsale[this] := __var_116;
    M_Ref_bool_goldList10[goldList_ZebiMainCrowdsale[this]] := zeroRefBoolArr();
    call __var_117 := FreshRefGenerator__success();
    if (revert)
    {
        return;
    }

    kycAcceptedList_ZebiMainCrowdsale[this] := __var_117;
    M_Ref_bool_kycAcceptedList11[kycAcceptedList_ZebiMainCrowdsale[this]] := zeroRefBoolArr();
    wallet_ZebiMainCrowdsale[this] := null;
    withinRefundPeriod_ZebiMainCrowdsale[this] := false;
    call __var_118 := FreshRefGenerator__success();
    if (revert)
    {
        return;
    }

    preSaleRefundsInMainSale_ZebiMainCrowdsale[this] := __var_118;
    M_Ref_int_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]] := zeroRefIntArr();
    sum_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]] := 0;
    tokens_ZebiMainCrowdsale[this] := 0;
    weiAmount_ZebiMainCrowdsale[this] := 0;
    ETHtoZWeirate_ZebiMainCrowdsale[this] := 0;
    mainWeiRaised_ZebiMainCrowdsale[this] := 0;
    assume _startTime_s2132 >= 0;
    assume now >= 0;
    if (!(_startTime_s2132 >= now))
    {
        revert := true;
        return;
    }

    assume _endTime_s2132 >= 0;
    assume _startTime_s2132 >= 0;
    if (!(_endTime_s2132 >= _startTime_s2132))
    {
        revert := true;
        return;
    }

    assume _ETHtoZWeirate_s2132 >= 0;
    if (!(_ETHtoZWeirate_s2132 > 0))
    {
        revert := true;
        return;
    }

    __var_107 := null;
    if (!(_wallet_s2132 != null))
    {
        revert := true;
        return;
    }

    assume DType[tokenAddress_s2132] == ZebiCoin;
    __var_108 := tokenAddress_s2132;
    token_ZebiMainCrowdsale[this] := __var_108;
    assume DType[presaleAddress_s2132] == ZebiCoinCrowdsale;
    __var_109 := presaleAddress_s2132;
    zcc_ZebiMainCrowdsale[this] := __var_109;
    assume startTime_ZebiMainCrowdsale[this] >= 0;
    assume _startTime_s2132 >= 0;
    startTime_ZebiMainCrowdsale[this] := _startTime_s2132;
    assume endTime_ZebiMainCrowdsale[this] >= 0;
    assume _endTime_s2132 >= 0;
    endTime_ZebiMainCrowdsale[this] := _endTime_s2132;
    assume ETHtoZWeirate_ZebiMainCrowdsale[this] >= 0;
    ETHtoZWeirate_ZebiMainCrowdsale[this] := 1;
    wallet_ZebiMainCrowdsale[this] := _wallet_s2132;
    assume minTransAmount_ZebiMainCrowdsale[this] >= 0;
    assume _minTransAmount_s2132 >= 0;
    minTransAmount_ZebiMainCrowdsale[this] := _minTransAmount_s2132;
    assume tokenDecimals_ZebiMainCrowdsale[this] >= 0;
    assume DType[token_ZebiMainCrowdsale[this]] == ZebiCoin;
    __var_110 := decimals_ZebiCoin[token_ZebiMainCrowdsale[this]];
    tokenDecimals_ZebiMainCrowdsale[this] := __var_110;
    assume __var_110 >= 0;
    assume ethCap_ZebiMainCrowdsale[this] >= 0;
    assume _ethCap_s2132 >= 0;
    ethCap_ZebiMainCrowdsale[this] := _ethCap_s2132;
    assume DType[tempMngrAddress_s2132] == ZebiCoinTempMgr;
    __var_112 := tempMngrAddress_s2132;
    tempMngr_ZebiMainCrowdsale[this] := __var_112;
    assume goldListPeriod_ZebiMainCrowdsale[this] >= 0;
    assume _goldListPeriod_s2132 >= 0;
    goldListPeriod_ZebiMainCrowdsale[this] := _goldListPeriod_s2132;
    assume postGoldPeriod_ZebiMainCrowdsale[this] >= 0;
    assume _postGoldPeriod_s2132 >= 0;
    postGoldPeriod_ZebiMainCrowdsale[this] := _postGoldPeriod_s2132;
    assume zebiZCOShare_ZebiMainCrowdsale[this] >= 0;
    zebiZCOShare_ZebiMainCrowdsale[this] := 50000000000000000;
    assume crowdsaleZCOCap_ZebiMainCrowdsale[this] >= 0;
    assume zebiZCOShare_ZebiMainCrowdsale[this] >= 0;
    crowdsaleZCOCap_ZebiMainCrowdsale[this] := zebiZCOShare_ZebiMainCrowdsale[this];
    assume goldPeriodCap_ZebiMainCrowdsale[this] >= 0;
    assume _goldPeriodCap_s2132 >= 0;
    goldPeriodCap_ZebiMainCrowdsale[this] := _goldPeriodCap_s2132;
    assume calenderYearMintCap_ZebiMainCrowdsale[this] >= 0;
    assume zebiZCOShare_ZebiMainCrowdsale[this] >= 0;
    assume zebiZCOShare_ZebiMainCrowdsale[this] * 2 >= 0;
    assume zebiZCOShare_ZebiMainCrowdsale[this] * 2 / 8 >= 0;
    calenderYearMintCap_ZebiMainCrowdsale[this] := zebiZCOShare_ZebiMainCrowdsale[this] * 2 / 8;
    assume vestedMintStartTime_ZebiMainCrowdsale[this] >= 0;
    assume _vestedMintStartTime_s2132 >= 0;
    vestedMintStartTime_ZebiMainCrowdsale[this] := _vestedMintStartTime_s2132;
    assume calenderYearStart_ZebiMainCrowdsale[this] >= 0;
    assume _calenderYearStart_s2132 >= 0;
    calenderYearStart_ZebiMainCrowdsale[this] := _calenderYearStart_s2132;
    assume calenderYearEnd_ZebiMainCrowdsale[this] >= 0;
    assume calenderYearStart_ZebiMainCrowdsale[this] >= 0;
    assume calenderYearStart_ZebiMainCrowdsale[this] + 365 >= 0;
    assume calenderYearStart_ZebiMainCrowdsale[this] + 365 - 1 >= 0;
    calenderYearEnd_ZebiMainCrowdsale[this] := calenderYearStart_ZebiMainCrowdsale[this] + 365 - 1;
}



implementation ZebiMainCrowdsale_ZebiMainCrowdsale__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s2132: int, 
    _endTime_s2132: int, 
    _ETHtoZWeirate_s2132: int, 
    _wallet_s2132: Ref, 
    _minTransAmount_s2132: int, 
    _ethCap_s2132: int, 
    tokenAddress_s2132: Ref, 
    presaleAddress_s2132: Ref, 
    tempMngrAddress_s2132: Ref, 
    _goldListPeriod_s2132: int, 
    _postGoldPeriod_s2132: int, 
    _goldPeriodCap_s2132: int, 
    _vestedMintStartTime_s2132: int, 
    _calenderYearStart_s2132: int)
{
  var __var_107: Ref;
  var __var_108: Ref;
  var __var_109: Ref;
  var __var_110: int;
  var __var_111: int;
  var __var_112: Ref;
  var __var_113: Ref;
  var __var_114: Ref;
  var __var_115: Ref;
  var __var_116: Ref;
  var __var_117: Ref;
  var __var_118: Ref;

    call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call ZebiMainCrowdsale_ZebiMainCrowdsale_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, _startTime_s2132, _endTime_s2132, _ETHtoZWeirate_s2132, _wallet_s2132, _minTransAmount_s2132, _ethCap_s2132, tokenAddress_s2132, presaleAddress_s2132, tempMngrAddress_s2132, _goldListPeriod_s2132, _postGoldPeriod_s2132, _goldPeriodCap_s2132, _vestedMintStartTime_s2132, _calenderYearStart_s2132);
    if (revert)
    {
        return;
    }
}



implementation ZebiMainCrowdsale_ZebiMainCrowdsale__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    _startTime_s2132: int, 
    _endTime_s2132: int, 
    _ETHtoZWeirate_s2132: int, 
    _wallet_s2132: Ref, 
    _minTransAmount_s2132: int, 
    _ethCap_s2132: int, 
    tokenAddress_s2132: Ref, 
    presaleAddress_s2132: Ref, 
    tempMngrAddress_s2132: Ref, 
    _goldListPeriod_s2132: int, 
    _postGoldPeriod_s2132: int, 
    _goldPeriodCap_s2132: int, 
    _vestedMintStartTime_s2132: int, 
    _calenderYearStart_s2132: int)
{
  var __var_107: Ref;
  var __var_108: Ref;
  var __var_109: Ref;
  var __var_110: int;
  var __var_111: int;
  var __var_112: Ref;
  var __var_113: Ref;
  var __var_114: Ref;
  var __var_115: Ref;
  var __var_116: Ref;
  var __var_117: Ref;
  var __var_118: Ref;

    call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call ZebiMainCrowdsale_ZebiMainCrowdsale_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _startTime_s2132, _endTime_s2132, _ETHtoZWeirate_s2132, _wallet_s2132, _minTransAmount_s2132, _ethCap_s2132, tokenAddress_s2132, presaleAddress_s2132, tempMngrAddress_s2132, _goldListPeriod_s2132, _postGoldPeriod_s2132, _goldPeriodCap_s2132, _vestedMintStartTime_s2132, _calenderYearStart_s2132);
    if (revert)
    {
        return;
    }
}



implementation FallbackMethod_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume __tmp__Balance[msgsender_MSG] >= msgvalue_MSG;
    __tmp__Balance[msgsender_MSG] := __tmp__Balance[msgsender_MSG] - msgvalue_MSG;
    __tmp__Balance[this] := __tmp__Balance[this] + msgvalue_MSG;
    gas := gas - 6;
    if (__tmp__DType[this] == ZebiMainCrowdsale)
    {
        call buyTokens_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation FallbackMethod_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume Balance[msgsender_MSG] >= msgvalue_MSG;
    Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
    Balance[this] := Balance[this] + msgvalue_MSG;
    gas := gas - 6;
    if (DType[this] == ZebiMainCrowdsale)
    {
        call buyTokens_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation finishMint_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __var_119: bool;
  var __var_120: int;

    gas := gas - 3;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37196;
    if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_119 := finishMinting_MintableToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_120);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_119 := finishMinting_MintableToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_120);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 8;
    __ret_0_ := true;
    return;
}



implementation finishMint_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __var_119: bool;
  var __var_120: int;

    gas := gas - 3;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37196;
    if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_119 := finishMinting_MintableToken__success(token_ZebiMainCrowdsale[this], this, __var_120);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_119 := finishMinting_MintableToken__success(token_ZebiMainCrowdsale[this], this, __var_120);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 8;
    __ret_0_ := true;
    return;
}



implementation resumeMint_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __var_121: bool;
  var __var_122: int;

    gas := gas - 3;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37196;
    if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_121 := resumeMinting_MintableToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_122);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_121 := resumeMinting_MintableToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_122);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 8;
    __ret_0_ := true;
    return;
}



implementation resumeMint_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var __var_121: bool;
  var __var_122: int;

    gas := gas - 3;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37196;
    if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_121 := resumeMinting_MintableToken__success(token_ZebiMainCrowdsale[this], this, __var_122);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_121 := resumeMinting_MintableToken__success(token_ZebiMainCrowdsale[this], this, __var_122);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 8;
    __ret_0_ := true;
    return;
}



implementation startTransfer_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_123: int;

    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37034;
    if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiMainCrowdsale)
    {
        call startTransfer_ZebiMainCrowdsale__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_123);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoinTempMgr)
    {
        call startTransfer_ZebiCoinTempMgr__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_123);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoinCrowdsale)
    {
        call startTransfer_ZCrowdsale__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_123);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZCrowdsale)
    {
        call startTransfer_ZCrowdsale__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_123);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call startTransfer_MintableToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_123);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call startTransfer_MintableToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_123);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation startTransfer_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_123: int;

    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37034;
    if (DType[token_ZebiMainCrowdsale[this]] == ZebiMainCrowdsale)
    {
        call startTransfer_ZebiMainCrowdsale__success(token_ZebiMainCrowdsale[this], this, __var_123);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoinTempMgr)
    {
        call startTransfer_ZebiCoinTempMgr__success(token_ZebiMainCrowdsale[this], this, __var_123);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoinCrowdsale)
    {
        call startTransfer_ZCrowdsale__success(token_ZebiMainCrowdsale[this], this, __var_123);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == ZCrowdsale)
    {
        call startTransfer_ZCrowdsale__success(token_ZebiMainCrowdsale[this], this, __var_123);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call startTransfer_MintableToken__success(token_ZebiMainCrowdsale[this], this, __var_123);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call startTransfer_MintableToken__success(token_ZebiMainCrowdsale[this], this, __var_123);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation endTransfer_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_124: int;

    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37034;
    if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiMainCrowdsale)
    {
        call endTransfer_ZebiMainCrowdsale__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_124);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoinTempMgr)
    {
        call endTransfer_ZebiCoinTempMgr__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_124);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoinCrowdsale)
    {
        call endTransfer_ZCrowdsale__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_124);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZCrowdsale)
    {
        call endTransfer_ZCrowdsale__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_124);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call endTransfer_MintableToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_124);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call endTransfer_MintableToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_124);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation endTransfer_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_124: int;

    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37034;
    if (DType[token_ZebiMainCrowdsale[this]] == ZebiMainCrowdsale)
    {
        call endTransfer_ZebiMainCrowdsale__success(token_ZebiMainCrowdsale[this], this, __var_124);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoinTempMgr)
    {
        call endTransfer_ZebiCoinTempMgr__success(token_ZebiMainCrowdsale[this], this, __var_124);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoinCrowdsale)
    {
        call endTransfer_ZCrowdsale__success(token_ZebiMainCrowdsale[this], this, __var_124);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == ZCrowdsale)
    {
        call endTransfer_ZCrowdsale__success(token_ZebiMainCrowdsale[this], this, __var_124);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call endTransfer_MintableToken__success(token_ZebiMainCrowdsale[this], this, __var_124);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call endTransfer_MintableToken__success(token_ZebiMainCrowdsale[this], this, __var_124);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation transferTokenOwnership_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s2207: Ref)
{
  var __var_125: int;

    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37173;
    if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiMainCrowdsale)
    {
        call transferOwnership_Ownable__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_125, owner_s2207);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoinTempMgr)
    {
        call transferOwnership_Ownable__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_125, owner_s2207);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoinCrowdsale)
    {
        call transferOwnership_Ownable__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_125, owner_s2207);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZCrowdsale)
    {
        call transferOwnership_Ownable__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_125, owner_s2207);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call transferOwnership_Ownable__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_125, owner_s2207);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call transferOwnership_Ownable__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_125, owner_s2207);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == Ownable)
    {
        call transferOwnership_Ownable__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_125, owner_s2207);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation transferTokenOwnership_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s2207: Ref)
{
  var __var_125: int;

    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 37173;
    if (DType[token_ZebiMainCrowdsale[this]] == ZebiMainCrowdsale)
    {
        call transferOwnership_Ownable__success(token_ZebiMainCrowdsale[this], this, __var_125, owner_s2207);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoinTempMgr)
    {
        call transferOwnership_Ownable__success(token_ZebiMainCrowdsale[this], this, __var_125, owner_s2207);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoinCrowdsale)
    {
        call transferOwnership_Ownable__success(token_ZebiMainCrowdsale[this], this, __var_125, owner_s2207);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == ZCrowdsale)
    {
        call transferOwnership_Ownable__success(token_ZebiMainCrowdsale[this], this, __var_125, owner_s2207);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call transferOwnership_Ownable__success(token_ZebiMainCrowdsale[this], this, __var_125, owner_s2207);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call transferOwnership_Ownable__success(token_ZebiMainCrowdsale[this], this, __var_125, owner_s2207);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == Ownable)
    {
        call transferOwnership_Ownable__success(token_ZebiMainCrowdsale[this], this, __var_125, owner_s2207);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }
}



implementation viewCancelledList_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2219: Ref)
   returns (__ret_0_: bool)
{
    gas := gas - 3;
    gas := gas - 340;
    __ret_0_ := __tmp__M_Ref_bool_mainCancelledList8[__tmp__mainCancelledList_ZebiMainCrowdsale[this]][participant_s2219];
    return;
}



implementation viewCancelledList_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2219: Ref)
   returns (__ret_0_: bool)
{
    gas := gas - 3;
    gas := gas - 340;
    __ret_0_ := M_Ref_bool_mainCancelledList8[mainCancelledList_ZebiMainCrowdsale[this]][participant_s2219];
    return;
}



implementation viewGoldList_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2231: Ref)
   returns (__ret_0_: bool)
{
    gas := gas - 3;
    gas := gas - 340;
    __ret_0_ := __tmp__M_Ref_bool_goldList10[__tmp__goldList_ZebiMainCrowdsale[this]][participant_s2231];
    return;
}



implementation viewGoldList_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2231: Ref)
   returns (__ret_0_: bool)
{
    gas := gas - 3;
    gas := gas - 340;
    __ret_0_ := M_Ref_bool_goldList10[goldList_ZebiMainCrowdsale[this]][participant_s2231];
    return;
}



implementation addToGoldList_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2249: Ref)
   returns (__ret_0_: bool)
{
    gas := gas - 3;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20363;
    __tmp__M_Ref_bool_goldList10[__tmp__goldList_ZebiMainCrowdsale[this]][_participant_s2249] := true;
    gas := gas - 8;
    __ret_0_ := true;
    return;
}



implementation addToGoldList_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2249: Ref)
   returns (__ret_0_: bool)
{
    gas := gas - 3;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20363;
    M_Ref_bool_goldList10[goldList_ZebiMainCrowdsale[this]][_participant_s2249] := true;
    gas := gas - 8;
    __ret_0_ := true;
    return;
}



implementation removeFromGoldList_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2267: Ref)
   returns (__ret_0_: bool)
{
    gas := gas - 3;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20363;
    __tmp__M_Ref_bool_goldList10[__tmp__goldList_ZebiMainCrowdsale[this]][_participant_s2267] := false;
    gas := gas - 8;
    __ret_0_ := true;
    return;
}



implementation removeFromGoldList_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2267: Ref)
   returns (__ret_0_: bool)
{
    gas := gas - 3;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20363;
    M_Ref_bool_goldList10[goldList_ZebiMainCrowdsale[this]][_participant_s2267] := false;
    gas := gas - 8;
    __ret_0_ := true;
    return;
}



implementation viewKYCAccepted_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2279: Ref)
   returns (__ret_0_: bool)
{
    gas := gas - 3;
    gas := gas - 340;
    __ret_0_ := __tmp__M_Ref_bool_kycAcceptedList11[__tmp__kycAcceptedList_ZebiMainCrowdsale[this]][participant_s2279];
    return;
}



implementation viewKYCAccepted_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2279: Ref)
   returns (__ret_0_: bool)
{
    gas := gas - 3;
    gas := gas - 340;
    __ret_0_ := M_Ref_bool_kycAcceptedList11[kycAcceptedList_ZebiMainCrowdsale[this]][participant_s2279];
    return;
}



implementation addToKYCList_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2297: Ref)
   returns (__ret_0_: bool)
{
    gas := gas - 3;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20363;
    __tmp__M_Ref_bool_kycAcceptedList11[__tmp__kycAcceptedList_ZebiMainCrowdsale[this]][_participant_s2297] := true;
    gas := gas - 8;
    __ret_0_ := true;
    return;
}



implementation addToKYCList_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2297: Ref)
   returns (__ret_0_: bool)
{
    gas := gas - 3;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20363;
    M_Ref_bool_kycAcceptedList11[kycAcceptedList_ZebiMainCrowdsale[this]][_participant_s2297] := true;
    gas := gas - 8;
    __ret_0_ := true;
    return;
}



implementation removeFromKYCList_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2313: Ref)
   returns (__ret_0_: bool)
{
    gas := gas - 3;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20363;
    __tmp__M_Ref_bool_kycAcceptedList11[__tmp__kycAcceptedList_ZebiMainCrowdsale[this]][_participant_s2313] := false;
}



implementation removeFromKYCList_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s2313: Ref)
   returns (__ret_0_: bool)
{
    gas := gas - 3;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20363;
    M_Ref_bool_kycAcceptedList11[kycAcceptedList_ZebiMainCrowdsale[this]][_participant_s2313] := false;
}



implementation viewPreSaleRefundsInMainSale_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2325: Ref)
   returns (__ret_0_: int)
{
    gas := gas - 3;
    gas := gas - 304;
    assume __tmp__M_Ref_int_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][participant_s2325]
       >= 0;
    __ret_0_ := __tmp__M_Ref_int_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][participant_s2325];
    return;
}



implementation viewPreSaleRefundsInMainSale_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2325: Ref)
   returns (__ret_0_: int)
{
    gas := gas - 3;
    gas := gas - 304;
    assume M_Ref_int_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][participant_s2325]
       >= 0;
    __ret_0_ := M_Ref_int_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][participant_s2325];
    return;
}



implementation buyTokens_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, beneficiary_s2465: Ref)
{
  var __var_126: Ref;
  var __var_127: bool;
  var extraEth_s2464: int;
  var __var_128: int;
  var __var_129: int;
  var __var_130: int;
  var __var_131: int;
  var __var_132: bool;
  var __var_133: int;
  var __var_134: int;
  var __var_135: int;
  var __var_136: int;
  var __var_137: bool;

    assume __tmp__Balance[msgsender_MSG] >= msgvalue_MSG;
    __tmp__Balance[msgsender_MSG] := __tmp__Balance[msgsender_MSG] - msgvalue_MSG;
    __tmp__Balance[this] := __tmp__Balance[this] + msgvalue_MSG;
    gas := gas - 20013;
    assume __tmp__transStartTime_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__now >= 0;
    __tmp__transStartTime_ZebiMainCrowdsale[this] := __tmp__now;
    gas := gas - 709;
    if (!(__tmp__M_Ref_bool_goldList10[__tmp__goldList_ZebiMainCrowdsale[this]][beneficiary_s2465]
       || __tmp__M_Ref_bool_kycAcceptedList11[__tmp__kycAcceptedList_ZebiMainCrowdsale[this]][beneficiary_s2465]))
    {
        revert := true;
        return;
    }

    gas := gas - 20267;
    __tmp__goldListPeriodFlag_ZebiMainCrowdsale[this] := false;
    gas := gas - 44;
    __var_126 := null;
    if (!(beneficiary_s2465 != null))
    {
        revert := true;
        return;
    }

    gas := gas - 24;
    if (__tmp__DType[this] == ZebiMainCrowdsale)
    {
        call __var_127 := validPurchase_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    if (!__var_127)
    {
        revert := true;
        return;
    }

    gas := gas - 11;
    assume extraEth_s2464 >= 0;
    extraEth_s2464 := 0;
    gas := gas - 20013;
    assume __tmp__weiAmount_ZebiMainCrowdsale[this] >= 0;
    assume msgvalue_MSG >= 0;
    __tmp__weiAmount_ZebiMainCrowdsale[this] := msgvalue_MSG;
    gas := gas - 705;
    assume msgvalue_MSG >= 0;
    assume __var_128 >= 0;
    assume __tmp__ethCap_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__mainWeiRaised_ZebiMainCrowdsale[this] >= 0;
    call __var_128 := sub_SafeMath__fail(this, this, 0, __tmp__ethCap_ZebiMainCrowdsale[this], __tmp__mainWeiRaised_ZebiMainCrowdsale[this]);
    if (revert)
    {
        return;
    }

    assume __var_128 >= 0;
    if (msgvalue_MSG > __var_128 && !__tmp__goldListPeriodFlag_ZebiMainCrowdsale[this])
    {
        gas := gas - 20447;
        assume __tmp__weiAmount_ZebiMainCrowdsale[this] >= 0;
        assume __tmp__ethCap_ZebiMainCrowdsale[this] >= 0;
        assume __tmp__mainWeiRaised_ZebiMainCrowdsale[this] >= 0;
        call __var_129 := sub_SafeMath__fail(this, this, 0, __tmp__ethCap_ZebiMainCrowdsale[this], __tmp__mainWeiRaised_ZebiMainCrowdsale[this]);
        if (revert)
        {
            return;
        }

        __tmp__weiAmount_ZebiMainCrowdsale[this] := __var_129;
        assume __var_129 >= 0;
        gas := gas - 214;
        assume extraEth_s2464 >= 0;
        assume msgvalue_MSG >= 0;
        assume __tmp__weiAmount_ZebiMainCrowdsale[this] >= 0;
        call extraEth_s2464 := sub_SafeMath__fail(this, this, msgvalue_MSG, msgvalue_MSG, __tmp__weiAmount_ZebiMainCrowdsale[this]);
        if (revert)
        {
            return;
        }

        extraEth_s2464 := extraEth_s2464;
    }

    gas := gas - 20229;
    assume __tmp__tokens_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__weiAmount_ZebiMainCrowdsale[this] >= 0;
    if (__tmp__DType[this] == ZebiMainCrowdsale)
    {
        call __var_130 := getTokenAmount_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__weiAmount_ZebiMainCrowdsale[this]);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    __tmp__tokens_ZebiMainCrowdsale[this] := __var_130;
    assume __var_130 >= 0;
    gas := gas - 20447;
    assume __tmp__mainWeiRaised_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__mainWeiRaised_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__weiAmount_ZebiMainCrowdsale[this] >= 0;
    call __var_131 := add_SafeMath__fail(this, this, 0, __tmp__mainWeiRaised_ZebiMainCrowdsale[this], __tmp__weiAmount_ZebiMainCrowdsale[this]);
    if (revert)
    {
        return;
    }

    __tmp__mainWeiRaised_ZebiMainCrowdsale[this] := __var_131;
    assume __var_131 >= 0;
    gas := gas - 37658;
    assume __tmp__tokens_ZebiMainCrowdsale[this] >= 0;
    if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_132 := mint_MintableToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_133, beneficiary_s2465, __tmp__tokens_ZebiMainCrowdsale[this]);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_132 := mint_MintableToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_133, beneficiary_s2465, __tmp__tokens_ZebiMainCrowdsale[this]);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 20633;
    assume __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][beneficiary_s2465]
       >= 0;
    assume __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][beneficiary_s2465]
       >= 0;
    assume __tmp__weiAmount_ZebiMainCrowdsale[this] >= 0;
    call __var_134 := add_SafeMath__fail(this, this, 0, __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][beneficiary_s2465], __tmp__weiAmount_ZebiMainCrowdsale[this]);
    if (revert)
    {
        return;
    }

    __tmp__sum_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]] := __tmp__sum_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]]
       - __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][beneficiary_s2465];
    __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][beneficiary_s2465] := __var_134;
    __tmp__sum_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]] := __tmp__sum_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]]
       + __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][beneficiary_s2465];
    assume __var_134 >= 0;
    gas := gas - 239;
    if (__tmp__goldListPeriodFlag_ZebiMainCrowdsale[this])
    {
        gas := gas - 20639;
        assume __tmp__M_Ref_int_goldListContribution9[__tmp__goldListContribution_ZebiMainCrowdsale[this]][beneficiary_s2465]
           >= 0;
        assume __tmp__M_Ref_int_goldListContribution9[__tmp__goldListContribution_ZebiMainCrowdsale[this]][beneficiary_s2465]
           >= 0;
        assume __tmp__weiAmount_ZebiMainCrowdsale[this] >= 0;
        call __var_135 := add_SafeMath__fail(this, this, 0, __tmp__M_Ref_int_goldListContribution9[__tmp__goldListContribution_ZebiMainCrowdsale[this]][beneficiary_s2465], __tmp__weiAmount_ZebiMainCrowdsale[this]);
        if (revert)
        {
            return;
        }

        __tmp__sum_goldListContribution9[__tmp__goldListContribution_ZebiMainCrowdsale[this]] := __tmp__sum_goldListContribution9[__tmp__goldListContribution_ZebiMainCrowdsale[this]]
           - __tmp__M_Ref_int_goldListContribution9[__tmp__goldListContribution_ZebiMainCrowdsale[this]][beneficiary_s2465];
        __tmp__M_Ref_int_goldListContribution9[__tmp__goldListContribution_ZebiMainCrowdsale[this]][beneficiary_s2465] := __var_135;
        __tmp__sum_goldListContribution9[__tmp__goldListContribution_ZebiMainCrowdsale[this]] := __tmp__sum_goldListContribution9[__tmp__goldListContribution_ZebiMainCrowdsale[this]]
           + __tmp__M_Ref_int_goldListContribution9[__tmp__goldListContribution_ZebiMainCrowdsale[this]][beneficiary_s2465];
        assume __var_135 >= 0;
    }

    gas := gas - 4;
    if (__tmp__DType[this] == ZebiMainCrowdsale)
    {
        call forwardFunds_ZebiMainCrowdsale__fail(this, msgsender_MSG, msgvalue_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 9;
    assume extraEth_s2464 >= 0;
    if (extraEth_s2464 > 0)
    {
        gas := gas - 35793;
        __var_136 := gas;
        if (gas > 2300)
        {
            gas := 2300;
        }

        __var_136 := __var_136 - gas;
        assume extraEth_s2464 >= 0;
        call __var_137 := send__fail(this, beneficiary_s2465, extraEth_s2464);
        if (!__var_137)
        {
            revert := true;
            return;
        }

        gas := __var_136 + gas;
    }
}



implementation buyTokens_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, beneficiary_s2465: Ref)
{
  var __var_126: Ref;
  var __var_127: bool;
  var extraEth_s2464: int;
  var __var_128: int;
  var __var_129: int;
  var __var_130: int;
  var __var_131: int;
  var __var_132: bool;
  var __var_133: int;
  var __var_134: int;
  var __var_135: int;
  var __var_136: int;
  var __var_137: bool;

    assume Balance[msgsender_MSG] >= msgvalue_MSG;
    Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
    Balance[this] := Balance[this] + msgvalue_MSG;
    gas := gas - 20013;
    assume transStartTime_ZebiMainCrowdsale[this] >= 0;
    assume now >= 0;
    transStartTime_ZebiMainCrowdsale[this] := now;
    gas := gas - 709;
    if (!(M_Ref_bool_goldList10[goldList_ZebiMainCrowdsale[this]][beneficiary_s2465]
       || M_Ref_bool_kycAcceptedList11[kycAcceptedList_ZebiMainCrowdsale[this]][beneficiary_s2465]))
    {
        revert := true;
        return;
    }

    gas := gas - 20267;
    goldListPeriodFlag_ZebiMainCrowdsale[this] := false;
    gas := gas - 44;
    __var_126 := null;
    if (!(beneficiary_s2465 != null))
    {
        revert := true;
        return;
    }

    gas := gas - 24;
    if (DType[this] == ZebiMainCrowdsale)
    {
        call __var_127 := validPurchase_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    if (!__var_127)
    {
        revert := true;
        return;
    }

    gas := gas - 11;
    assume extraEth_s2464 >= 0;
    extraEth_s2464 := 0;
    gas := gas - 20013;
    assume weiAmount_ZebiMainCrowdsale[this] >= 0;
    assume msgvalue_MSG >= 0;
    weiAmount_ZebiMainCrowdsale[this] := msgvalue_MSG;
    gas := gas - 705;
    assume msgvalue_MSG >= 0;
    assume __var_128 >= 0;
    assume ethCap_ZebiMainCrowdsale[this] >= 0;
    assume mainWeiRaised_ZebiMainCrowdsale[this] >= 0;
    call __var_128 := sub_SafeMath__success(this, this, 0, ethCap_ZebiMainCrowdsale[this], mainWeiRaised_ZebiMainCrowdsale[this]);
    if (revert)
    {
        return;
    }

    assume __var_128 >= 0;
    if (msgvalue_MSG > __var_128 && !goldListPeriodFlag_ZebiMainCrowdsale[this])
    {
        gas := gas - 20447;
        assume weiAmount_ZebiMainCrowdsale[this] >= 0;
        assume ethCap_ZebiMainCrowdsale[this] >= 0;
        assume mainWeiRaised_ZebiMainCrowdsale[this] >= 0;
        call __var_129 := sub_SafeMath__success(this, this, 0, ethCap_ZebiMainCrowdsale[this], mainWeiRaised_ZebiMainCrowdsale[this]);
        if (revert)
        {
            return;
        }

        weiAmount_ZebiMainCrowdsale[this] := __var_129;
        assume __var_129 >= 0;
        gas := gas - 214;
        assume extraEth_s2464 >= 0;
        assume msgvalue_MSG >= 0;
        assume weiAmount_ZebiMainCrowdsale[this] >= 0;
        call extraEth_s2464 := sub_SafeMath__success(this, this, msgvalue_MSG, msgvalue_MSG, weiAmount_ZebiMainCrowdsale[this]);
        if (revert)
        {
            return;
        }

        extraEth_s2464 := extraEth_s2464;
    }

    gas := gas - 20229;
    assume tokens_ZebiMainCrowdsale[this] >= 0;
    assume weiAmount_ZebiMainCrowdsale[this] >= 0;
    if (DType[this] == ZebiMainCrowdsale)
    {
        call __var_130 := getTokenAmount_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG, weiAmount_ZebiMainCrowdsale[this]);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    tokens_ZebiMainCrowdsale[this] := __var_130;
    assume __var_130 >= 0;
    gas := gas - 20447;
    assume mainWeiRaised_ZebiMainCrowdsale[this] >= 0;
    assume mainWeiRaised_ZebiMainCrowdsale[this] >= 0;
    assume weiAmount_ZebiMainCrowdsale[this] >= 0;
    call __var_131 := add_SafeMath__success(this, this, 0, mainWeiRaised_ZebiMainCrowdsale[this], weiAmount_ZebiMainCrowdsale[this]);
    if (revert)
    {
        return;
    }

    mainWeiRaised_ZebiMainCrowdsale[this] := __var_131;
    assume __var_131 >= 0;
    gas := gas - 37658;
    assume tokens_ZebiMainCrowdsale[this] >= 0;
    if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_132 := mint_MintableToken__success(token_ZebiMainCrowdsale[this], this, __var_133, beneficiary_s2465, tokens_ZebiMainCrowdsale[this]);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_132 := mint_MintableToken__success(token_ZebiMainCrowdsale[this], this, __var_133, beneficiary_s2465, tokens_ZebiMainCrowdsale[this]);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 20633;
    assume M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][beneficiary_s2465]
       >= 0;
    assume M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][beneficiary_s2465]
       >= 0;
    assume weiAmount_ZebiMainCrowdsale[this] >= 0;
    call __var_134 := add_SafeMath__success(this, this, 0, M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][beneficiary_s2465], weiAmount_ZebiMainCrowdsale[this]);
    if (revert)
    {
        return;
    }

    sum_mainContribution7[mainContribution_ZebiMainCrowdsale[this]] := sum_mainContribution7[mainContribution_ZebiMainCrowdsale[this]]
       - M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][beneficiary_s2465];
    M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][beneficiary_s2465] := __var_134;
    sum_mainContribution7[mainContribution_ZebiMainCrowdsale[this]] := sum_mainContribution7[mainContribution_ZebiMainCrowdsale[this]]
       + M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][beneficiary_s2465];
    assume __var_134 >= 0;
    gas := gas - 239;
    if (goldListPeriodFlag_ZebiMainCrowdsale[this])
    {
        gas := gas - 20639;
        assume M_Ref_int_goldListContribution9[goldListContribution_ZebiMainCrowdsale[this]][beneficiary_s2465]
           >= 0;
        assume M_Ref_int_goldListContribution9[goldListContribution_ZebiMainCrowdsale[this]][beneficiary_s2465]
           >= 0;
        assume weiAmount_ZebiMainCrowdsale[this] >= 0;
        call __var_135 := add_SafeMath__success(this, this, 0, M_Ref_int_goldListContribution9[goldListContribution_ZebiMainCrowdsale[this]][beneficiary_s2465], weiAmount_ZebiMainCrowdsale[this]);
        if (revert)
        {
            return;
        }

        sum_goldListContribution9[goldListContribution_ZebiMainCrowdsale[this]] := sum_goldListContribution9[goldListContribution_ZebiMainCrowdsale[this]]
           - M_Ref_int_goldListContribution9[goldListContribution_ZebiMainCrowdsale[this]][beneficiary_s2465];
        M_Ref_int_goldListContribution9[goldListContribution_ZebiMainCrowdsale[this]][beneficiary_s2465] := __var_135;
        sum_goldListContribution9[goldListContribution_ZebiMainCrowdsale[this]] := sum_goldListContribution9[goldListContribution_ZebiMainCrowdsale[this]]
           + M_Ref_int_goldListContribution9[goldListContribution_ZebiMainCrowdsale[this]][beneficiary_s2465];
        assume __var_135 >= 0;
    }

    assert {:EventEmitted "TokenPurchase_ZebiMainCrowdsale"} true;
    gas := gas - 4;
    if (DType[this] == ZebiMainCrowdsale)
    {
        call forwardFunds_ZebiMainCrowdsale__success(this, msgsender_MSG, msgvalue_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 9;
    assume extraEth_s2464 >= 0;
    if (extraEth_s2464 > 0)
    {
        gas := gas - 35793;
        __var_136 := gas;
        if (gas > 2300)
        {
            gas := 2300;
        }

        __var_136 := __var_136 - gas;
        assume extraEth_s2464 >= 0;
        call __var_137 := send__success(this, beneficiary_s2465, extraEth_s2464);
        if (!__var_137)
        {
            revert := true;
            return;
        }

        gas := __var_136 + gas;
    }
}



implementation getTokenAmount_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, weiAmount1_s2599: int)
   returns (__ret_0_: int)
{
  var number_s2598: int;
  var volumeBonus_s2598: int;
  var timeBonus_s2598: int;

    gas := gas - 3;
    gas := gas - 44;
    assume number_s2598 >= 0;
    assume weiAmount1_s2599 >= 0;
    assume weiAmount1_s2599 * 1 >= 0;
    assume weiAmount1_s2599 * 1 / 1000000000000000000 >= 0;
    number_s2598 := weiAmount1_s2599 * 1 / 1000000000000000000;
    gas := gas - 3;
    havoc volumeBonus_s2598;
    gas := gas - 3;
    havoc timeBonus_s2598;
    gas := gas - 9;
    assume number_s2598 >= 0;
    if (number_s2598 >= 400000000000000)
    {
        gas := gas - 41;
        assume volumeBonus_s2598 >= 0;
        assume number_s2598 >= 0;
        assume number_s2598 * 25 >= 0;
        assume number_s2598 * 25 / 100 >= 0;
        volumeBonus_s2598 := number_s2598 * 25 / 100;
    }
    else
    {
        gas := gas - 9;
        assume number_s2598 >= 0;
        if (number_s2598 >= 150000000000000)
        {
            gas := gas - 41;
            assume volumeBonus_s2598 >= 0;
            assume number_s2598 >= 0;
            assume number_s2598 * 20 >= 0;
            assume number_s2598 * 20 / 100 >= 0;
            volumeBonus_s2598 := number_s2598 * 20 / 100;
        }
        else
        {
            gas := gas - 9;
            assume number_s2598 >= 0;
            if (number_s2598 >= 80000000000000)
            {
                gas := gas - 41;
                assume volumeBonus_s2598 >= 0;
                assume number_s2598 >= 0;
                assume number_s2598 * 15 >= 0;
                assume number_s2598 * 15 / 100 >= 0;
                volumeBonus_s2598 := number_s2598 * 15 / 100;
            }
            else
            {
                gas := gas - 9;
                assume number_s2598 >= 0;
                if (number_s2598 >= 40000000000000)
                {
                    gas := gas - 41;
                    assume volumeBonus_s2598 >= 0;
                    assume number_s2598 >= 0;
                    assume number_s2598 * 10 >= 0;
                    assume number_s2598 * 10 / 100 >= 0;
                    volumeBonus_s2598 := number_s2598 * 10 / 100;
                }
                else
                {
                    gas := gas - 9;
                    assume number_s2598 >= 0;
                    if (number_s2598 >= 7500000000000)
                    {
                        gas := gas - 41;
                        assume volumeBonus_s2598 >= 0;
                        assume number_s2598 >= 0;
                        assume number_s2598 * 5 >= 0;
                        assume number_s2598 * 5 / 100 >= 0;
                        volumeBonus_s2598 := number_s2598 * 5 / 100;
                    }
                    else
                    {
                        gas := gas - 8;
                        assume volumeBonus_s2598 >= 0;
                        volumeBonus_s2598 := 0;
                    }
                }
            }
        }
    }

    gas := gas - 239;
    if (__tmp__goldListPeriodFlag_ZebiMainCrowdsale[this])
    {
        gas := gas - 41;
        assume timeBonus_s2598 >= 0;
        assume number_s2598 >= 0;
        assume number_s2598 * 15 >= 0;
        assume number_s2598 * 15 / 100 >= 0;
        timeBonus_s2598 := number_s2598 * 15 / 100;
    }
    else
    {
        gas := gas - 615;
        assume __tmp__transStartTime_ZebiMainCrowdsale[this] >= 0;
        assume __tmp__startTime_ZebiMainCrowdsale[this] >= 0;
        assume __tmp__postGoldPeriod_ZebiMainCrowdsale[this] >= 0;
        assume __tmp__startTime_ZebiMainCrowdsale[this]
             + __tmp__postGoldPeriod_ZebiMainCrowdsale[this]
           >= 0;
        if (__tmp__transStartTime_ZebiMainCrowdsale[this]
           <= __tmp__startTime_ZebiMainCrowdsale[this]
             + __tmp__postGoldPeriod_ZebiMainCrowdsale[this])
        {
            gas := gas - 41;
            assume timeBonus_s2598 >= 0;
            assume number_s2598 >= 0;
            assume number_s2598 * 10 >= 0;
            assume number_s2598 * 10 / 100 >= 0;
            timeBonus_s2598 := number_s2598 * 10 / 100;
        }
        else
        {
            gas := gas - 8;
            assume timeBonus_s2598 >= 0;
            timeBonus_s2598 := 0;
        }
    }

    gas := gas - 20;
    assume number_s2598 >= 0;
    assume number_s2598 >= 0;
    assume timeBonus_s2598 >= 0;
    assume number_s2598 + timeBonus_s2598 >= 0;
    assume volumeBonus_s2598 >= 0;
    assume number_s2598 + timeBonus_s2598 + volumeBonus_s2598 >= 0;
    number_s2598 := number_s2598 + timeBonus_s2598 + volumeBonus_s2598;
    gas := gas - 14;
    assume number_s2598 >= 0;
    __ret_0_ := number_s2598;
    return;
}



implementation getTokenAmount_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, weiAmount1_s2599: int)
   returns (__ret_0_: int)
{
  var number_s2598: int;
  var volumeBonus_s2598: int;
  var timeBonus_s2598: int;

    gas := gas - 3;
    gas := gas - 44;
    assume number_s2598 >= 0;
    assume weiAmount1_s2599 >= 0;
    assume weiAmount1_s2599 * 1 >= 0;
    assume weiAmount1_s2599 * 1 / 1000000000000000000 >= 0;
    number_s2598 := weiAmount1_s2599 * 1 / 1000000000000000000;
    gas := gas - 3;
    havoc volumeBonus_s2598;
    gas := gas - 3;
    havoc timeBonus_s2598;
    gas := gas - 9;
    assume number_s2598 >= 0;
    if (number_s2598 >= 400000000000000)
    {
        gas := gas - 41;
        assume volumeBonus_s2598 >= 0;
        assume number_s2598 >= 0;
        assume number_s2598 * 25 >= 0;
        assume number_s2598 * 25 / 100 >= 0;
        volumeBonus_s2598 := number_s2598 * 25 / 100;
    }
    else
    {
        gas := gas - 9;
        assume number_s2598 >= 0;
        if (number_s2598 >= 150000000000000)
        {
            gas := gas - 41;
            assume volumeBonus_s2598 >= 0;
            assume number_s2598 >= 0;
            assume number_s2598 * 20 >= 0;
            assume number_s2598 * 20 / 100 >= 0;
            volumeBonus_s2598 := number_s2598 * 20 / 100;
        }
        else
        {
            gas := gas - 9;
            assume number_s2598 >= 0;
            if (number_s2598 >= 80000000000000)
            {
                gas := gas - 41;
                assume volumeBonus_s2598 >= 0;
                assume number_s2598 >= 0;
                assume number_s2598 * 15 >= 0;
                assume number_s2598 * 15 / 100 >= 0;
                volumeBonus_s2598 := number_s2598 * 15 / 100;
            }
            else
            {
                gas := gas - 9;
                assume number_s2598 >= 0;
                if (number_s2598 >= 40000000000000)
                {
                    gas := gas - 41;
                    assume volumeBonus_s2598 >= 0;
                    assume number_s2598 >= 0;
                    assume number_s2598 * 10 >= 0;
                    assume number_s2598 * 10 / 100 >= 0;
                    volumeBonus_s2598 := number_s2598 * 10 / 100;
                }
                else
                {
                    gas := gas - 9;
                    assume number_s2598 >= 0;
                    if (number_s2598 >= 7500000000000)
                    {
                        gas := gas - 41;
                        assume volumeBonus_s2598 >= 0;
                        assume number_s2598 >= 0;
                        assume number_s2598 * 5 >= 0;
                        assume number_s2598 * 5 / 100 >= 0;
                        volumeBonus_s2598 := number_s2598 * 5 / 100;
                    }
                    else
                    {
                        gas := gas - 8;
                        assume volumeBonus_s2598 >= 0;
                        volumeBonus_s2598 := 0;
                    }
                }
            }
        }
    }

    gas := gas - 239;
    if (goldListPeriodFlag_ZebiMainCrowdsale[this])
    {
        gas := gas - 41;
        assume timeBonus_s2598 >= 0;
        assume number_s2598 >= 0;
        assume number_s2598 * 15 >= 0;
        assume number_s2598 * 15 / 100 >= 0;
        timeBonus_s2598 := number_s2598 * 15 / 100;
    }
    else
    {
        gas := gas - 615;
        assume transStartTime_ZebiMainCrowdsale[this] >= 0;
        assume startTime_ZebiMainCrowdsale[this] >= 0;
        assume postGoldPeriod_ZebiMainCrowdsale[this] >= 0;
        assume startTime_ZebiMainCrowdsale[this] + postGoldPeriod_ZebiMainCrowdsale[this] >= 0;
        if (transStartTime_ZebiMainCrowdsale[this]
           <= startTime_ZebiMainCrowdsale[this] + postGoldPeriod_ZebiMainCrowdsale[this])
        {
            gas := gas - 41;
            assume timeBonus_s2598 >= 0;
            assume number_s2598 >= 0;
            assume number_s2598 * 10 >= 0;
            assume number_s2598 * 10 / 100 >= 0;
            timeBonus_s2598 := number_s2598 * 10 / 100;
        }
        else
        {
            gas := gas - 8;
            assume timeBonus_s2598 >= 0;
            timeBonus_s2598 := 0;
        }
    }

    gas := gas - 20;
    assume number_s2598 >= 0;
    assume number_s2598 >= 0;
    assume timeBonus_s2598 >= 0;
    assume number_s2598 + timeBonus_s2598 >= 0;
    assume volumeBonus_s2598 >= 0;
    assume number_s2598 + timeBonus_s2598 + volumeBonus_s2598 >= 0;
    number_s2598 := number_s2598 + timeBonus_s2598 + volumeBonus_s2598;
    gas := gas - 14;
    assume number_s2598 >= 0;
    __ret_0_ := number_s2598;
    return;
}



implementation forwardFunds_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_138: int;
  var __var_139: bool;

    gas := gas - 36229;
    __var_138 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_138 := __var_138 - gas;
    assume __tmp__weiAmount_ZebiMainCrowdsale[this] >= 0;
    call __var_139 := send__fail(this, __tmp__wallet_ZebiMainCrowdsale[this], __tmp__weiAmount_ZebiMainCrowdsale[this]);
    if (!__var_139)
    {
        revert := true;
        return;
    }

    gas := __var_138 + gas;
}



implementation forwardFunds_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_138: int;
  var __var_139: bool;

    gas := gas - 36229;
    __var_138 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_138 := __var_138 - gas;
    assume weiAmount_ZebiMainCrowdsale[this] >= 0;
    call __var_139 := send__success(this, wallet_ZebiMainCrowdsale[this], weiAmount_ZebiMainCrowdsale[this]);
    if (!__var_139)
    {
        revert := true;
        return;
    }

    gas := __var_138 + gas;
}



implementation enableRefundPeriod_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20317;
    __tmp__withinRefundPeriod_ZebiMainCrowdsale[this] := true;
}



implementation enableRefundPeriod_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20317;
    withinRefundPeriod_ZebiMainCrowdsale[this] := true;
}



implementation disableRefundPeriod_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20317;
    __tmp__withinRefundPeriod_ZebiMainCrowdsale[this] := false;
}



implementation disableRefundPeriod_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20317;
    withinRefundPeriod_ZebiMainCrowdsale[this] := false;
}



implementation viewContribution_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2641: Ref)
   returns (__ret_0_: int)
{
    gas := gas - 3;
    gas := gas - 304;
    assume __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][participant_s2641]
       >= 0;
    __ret_0_ := __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][participant_s2641];
    return;
}



implementation viewContribution_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, participant_s2641: Ref)
   returns (__ret_0_: int)
{
    gas := gas - 3;
    gas := gas - 304;
    assume M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][participant_s2641]
       >= 0;
    __ret_0_ := M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][participant_s2641];
    return;
}



implementation validPurchase_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var withinPeriod_s2717: bool;
  var validAmount_s2717: bool;
  var withinEthCap_s2717: bool;
  var __var_140: int;
  var goldPeriodValid_s2717: bool;

    gas := gas - 3;
    gas := gas - 854;
    assume __tmp__transStartTime_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__startTime_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__transStartTime_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__endTime_ZebiMainCrowdsale[this] >= 0;
    withinPeriod_s2717 := __tmp__transStartTime_ZebiMainCrowdsale[this]
         >= __tmp__startTime_ZebiMainCrowdsale[this]
       && __tmp__transStartTime_ZebiMainCrowdsale[this]
         <= __tmp__endTime_ZebiMainCrowdsale[this];
    gas := gas - 219;
    assume msgvalue_MSG >= 0;
    assume __tmp__minTransAmount_ZebiMainCrowdsale[this] >= 0;
    validAmount_s2717 := msgvalue_MSG >= __tmp__minTransAmount_ZebiMainCrowdsale[this];
    gas := gas - 450;
    assume __var_140 >= 0;
    assume __tmp__ethCap_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__mainWeiRaised_ZebiMainCrowdsale[this] >= 0;
    call __var_140 := sub_SafeMath__fail(this, this, 0, __tmp__ethCap_ZebiMainCrowdsale[this], __tmp__mainWeiRaised_ZebiMainCrowdsale[this]);
    if (revert)
    {
        return;
    }

    assume __var_140 >= 0;
    withinEthCap_s2717 := __var_140 > 0;
    gas := gas - 11;
    goldPeriodValid_s2717 := true;
    gas := gas - 615;
    assume __tmp__transStartTime_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__startTime_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__goldListPeriod_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__startTime_ZebiMainCrowdsale[this]
         + __tmp__goldListPeriod_ZebiMainCrowdsale[this]
       >= 0;
    if (__tmp__transStartTime_ZebiMainCrowdsale[this]
       <= __tmp__startTime_ZebiMainCrowdsale[this]
         + __tmp__goldListPeriod_ZebiMainCrowdsale[this])
    {
        gas := gas - 873;
        assume __tmp__M_Ref_int_goldListContribution9[__tmp__goldListContribution_ZebiMainCrowdsale[this]][msgsender_MSG]
           >= 0;
        assume msgvalue_MSG >= 0;
        assume __tmp__M_Ref_int_goldListContribution9[__tmp__goldListContribution_ZebiMainCrowdsale[this]][msgsender_MSG]
             + msgvalue_MSG
           >= 0;
        assume __tmp__goldPeriodCap_ZebiMainCrowdsale[this] >= 0;
        goldPeriodValid_s2717 := __tmp__M_Ref_bool_goldList10[__tmp__goldList_ZebiMainCrowdsale[this]][msgsender_MSG]
           && __tmp__M_Ref_int_goldListContribution9[__tmp__goldListContribution_ZebiMainCrowdsale[this]][msgsender_MSG]
               + msgvalue_MSG
             <= __tmp__goldPeriodCap_ZebiMainCrowdsale[this];
        gas := gas - 20267;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale[this] := true;
    }

    gas := gas - 91;
    __ret_0_ := withinPeriod_s2717
       && validAmount_s2717
       && withinEthCap_s2717
       && goldPeriodValid_s2717;
    return;
}



implementation validPurchase_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: bool)
{
  var withinPeriod_s2717: bool;
  var validAmount_s2717: bool;
  var withinEthCap_s2717: bool;
  var __var_140: int;
  var goldPeriodValid_s2717: bool;

    gas := gas - 3;
    gas := gas - 854;
    assume transStartTime_ZebiMainCrowdsale[this] >= 0;
    assume startTime_ZebiMainCrowdsale[this] >= 0;
    assume transStartTime_ZebiMainCrowdsale[this] >= 0;
    assume endTime_ZebiMainCrowdsale[this] >= 0;
    withinPeriod_s2717 := transStartTime_ZebiMainCrowdsale[this] >= startTime_ZebiMainCrowdsale[this]
       && transStartTime_ZebiMainCrowdsale[this] <= endTime_ZebiMainCrowdsale[this];
    gas := gas - 219;
    assume msgvalue_MSG >= 0;
    assume minTransAmount_ZebiMainCrowdsale[this] >= 0;
    validAmount_s2717 := msgvalue_MSG >= minTransAmount_ZebiMainCrowdsale[this];
    gas := gas - 450;
    assume __var_140 >= 0;
    assume ethCap_ZebiMainCrowdsale[this] >= 0;
    assume mainWeiRaised_ZebiMainCrowdsale[this] >= 0;
    call __var_140 := sub_SafeMath__success(this, this, 0, ethCap_ZebiMainCrowdsale[this], mainWeiRaised_ZebiMainCrowdsale[this]);
    if (revert)
    {
        return;
    }

    assume __var_140 >= 0;
    withinEthCap_s2717 := __var_140 > 0;
    gas := gas - 11;
    goldPeriodValid_s2717 := true;
    gas := gas - 615;
    assume transStartTime_ZebiMainCrowdsale[this] >= 0;
    assume startTime_ZebiMainCrowdsale[this] >= 0;
    assume goldListPeriod_ZebiMainCrowdsale[this] >= 0;
    assume startTime_ZebiMainCrowdsale[this] + goldListPeriod_ZebiMainCrowdsale[this] >= 0;
    if (transStartTime_ZebiMainCrowdsale[this]
       <= startTime_ZebiMainCrowdsale[this] + goldListPeriod_ZebiMainCrowdsale[this])
    {
        gas := gas - 873;
        assume M_Ref_int_goldListContribution9[goldListContribution_ZebiMainCrowdsale[this]][msgsender_MSG]
           >= 0;
        assume msgvalue_MSG >= 0;
        assume M_Ref_int_goldListContribution9[goldListContribution_ZebiMainCrowdsale[this]][msgsender_MSG]
             + msgvalue_MSG
           >= 0;
        assume goldPeriodCap_ZebiMainCrowdsale[this] >= 0;
        goldPeriodValid_s2717 := M_Ref_bool_goldList10[goldList_ZebiMainCrowdsale[this]][msgsender_MSG]
           && M_Ref_int_goldListContribution9[goldListContribution_ZebiMainCrowdsale[this]][msgsender_MSG]
               + msgvalue_MSG
             <= goldPeriodCap_ZebiMainCrowdsale[this];
        gas := gas - 20267;
        goldListPeriodFlag_ZebiMainCrowdsale[this] := true;
    }

    gas := gas - 91;
    __ret_0_ := withinPeriod_s2717
       && validAmount_s2717
       && withinEthCap_s2717
       && goldPeriodValid_s2717;
    return;
}



implementation mintAndAllocateZCO_ZebiMainCrowdsale__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    partnerAddress_s2759: Ref, 
    amountInZWei_s2759: int)
   returns (__ret_0_: bool)
{
  var __var_141: int;
  var __var_142: int;
  var __var_143: int;
  var __var_144: Ref;
  var __var_145: bool;
  var __var_146: int;

    gas := gas - 3;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 3453;
    assume __var_141 >= 0;
    assume __tmp__crowdsaleZCOCap_ZebiMainCrowdsale[this] >= 0;
    assume __var_142 >= 0;
    if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_142 := totalSupply_BasicToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_143);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_142 := totalSupply_BasicToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_143);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == StandardToken)
    {
        call __var_142 := totalSupply_BasicToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_143);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == BasicToken)
    {
        call __var_142 := totalSupply_BasicToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_143);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ERC20)
    {
        call __var_142 := totalSupply_ERC20Basic(__tmp__token_ZebiMainCrowdsale[this], this, __var_143);
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ERC20Basic)
    {
        call __var_142 := totalSupply_ERC20Basic(__tmp__token_ZebiMainCrowdsale[this], this, __var_143);
    }
    else
    {
        assume false;
    }

    assume __var_142 >= 0;
    call __var_141 := sub_SafeMath__fail(this, this, 0, __tmp__crowdsaleZCOCap_ZebiMainCrowdsale[this], __var_142);
    if (revert)
    {
        return;
    }

    assume __var_141 >= 0;
    assume amountInZWei_s2759 >= 0;
    if (!(__var_141 >= amountInZWei_s2759))
    {
        revert := true;
        return;
    }

    gas := gas - 44;
    __var_144 := null;
    if (!(partnerAddress_s2759 != null))
    {
        revert := true;
        return;
    }

    gas := gas - 37458;
    assume amountInZWei_s2759 >= 0;
    if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_145 := mint_MintableToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_146, partnerAddress_s2759, amountInZWei_s2759);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_145 := mint_MintableToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_146, partnerAddress_s2759, amountInZWei_s2759);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 8;
    __ret_0_ := true;
    return;
}



implementation mintAndAllocateZCO_ZebiMainCrowdsale__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    partnerAddress_s2759: Ref, 
    amountInZWei_s2759: int)
   returns (__ret_0_: bool)
{
  var __var_141: int;
  var __var_142: int;
  var __var_143: int;
  var __var_144: Ref;
  var __var_145: bool;
  var __var_146: int;

    gas := gas - 3;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 3453;
    assume __var_141 >= 0;
    assume crowdsaleZCOCap_ZebiMainCrowdsale[this] >= 0;
    assume __var_142 >= 0;
    if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_142 := totalSupply_BasicToken__success(token_ZebiMainCrowdsale[this], this, __var_143);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_142 := totalSupply_BasicToken__success(token_ZebiMainCrowdsale[this], this, __var_143);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == StandardToken)
    {
        call __var_142 := totalSupply_BasicToken__success(token_ZebiMainCrowdsale[this], this, __var_143);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == BasicToken)
    {
        call __var_142 := totalSupply_BasicToken__success(token_ZebiMainCrowdsale[this], this, __var_143);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == ERC20)
    {
        call __var_142 := totalSupply_ERC20Basic(token_ZebiMainCrowdsale[this], this, __var_143);
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == ERC20Basic)
    {
        call __var_142 := totalSupply_ERC20Basic(token_ZebiMainCrowdsale[this], this, __var_143);
    }
    else
    {
        assume false;
    }

    assume __var_142 >= 0;
    call __var_141 := sub_SafeMath__success(this, this, 0, crowdsaleZCOCap_ZebiMainCrowdsale[this], __var_142);
    if (revert)
    {
        return;
    }

    assume __var_141 >= 0;
    assume amountInZWei_s2759 >= 0;
    if (!(__var_141 >= amountInZWei_s2759))
    {
        revert := true;
        return;
    }

    gas := gas - 44;
    __var_144 := null;
    if (!(partnerAddress_s2759 != null))
    {
        revert := true;
        return;
    }

    gas := gas - 37458;
    assume amountInZWei_s2759 >= 0;
    if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_145 := mint_MintableToken__success(token_ZebiMainCrowdsale[this], this, __var_146, partnerAddress_s2759, amountInZWei_s2759);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_145 := mint_MintableToken__success(token_ZebiMainCrowdsale[this], this, __var_146, partnerAddress_s2759, amountInZWei_s2759);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 8;
    __ret_0_ := true;
    return;
}



implementation mintvestedTokens_ZebiMainCrowdsale__fail(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    partnerAddress_s2870: Ref, 
    zweitokens_s2870: int)
   returns (__ret_0_: bool)
{
  var __var_147: Ref;
  var currentYearCounter_s2869: int;
  var __var_148: int;
  var __var_149: bool;
  var __var_150: int;
  var __var_151: int;

    gas := gas - 3;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 263;
    assume zweitokens_s2870 >= 0;
    assume __tmp__zebiZCOShare_ZebiMainCrowdsale[this] >= 0;
    assume zweitokens_s2870 >= 0;
    if (!(zweitokens_s2870 <= __tmp__zebiZCOShare_ZebiMainCrowdsale[this]
       && zweitokens_s2870 > 0))
    {
        revert := true;
        return;
    }

    gas := gas - 44;
    __var_147 := null;
    if (!(partnerAddress_s2870 != null))
    {
        revert := true;
        return;
    }

    gas := gas - 231;
    assume __tmp__now >= 0;
    assume __tmp__vestedMintStartTime_ZebiMainCrowdsale[this] >= 0;
    if (!(__tmp__now >= __tmp__vestedMintStartTime_ZebiMainCrowdsale[this]))
    {
        revert := true;
        return;
    }

    gas := gas - 253;
    assume currentYearCounter_s2869 >= 0;
    assume __var_148 >= 0;
    assume __tmp__now >= 0;
    assume __tmp__calenderYearStart_ZebiMainCrowdsale[this] >= 0;
    call __var_148 := sub_SafeMath__fail(this, this, msgvalue_MSG, __tmp__now, __tmp__calenderYearStart_ZebiMainCrowdsale[this]);
    if (revert)
    {
        return;
    }

    assume __var_148 >= 0;
    assume __var_148 / 365 >= 0;
    currentYearCounter_s2869 := __var_148 / 365;
    gas := gas - 242;
    assume __tmp__now >= 0;
    assume __tmp__calenderYearEnd_ZebiMainCrowdsale[this] >= 0;
    assume currentYearCounter_s2869 >= 0;
    if (__tmp__now > __tmp__calenderYearEnd_ZebiMainCrowdsale[this]
       && currentYearCounter_s2869 >= 1)
    {
        gas := gas - 5014;
        assume __tmp__currentYearMinted_ZebiMainCrowdsale[this] >= 0;
        __tmp__currentYearMinted_ZebiMainCrowdsale[this] := 0;
        gas := gas - 20240;
        assume __tmp__calenderYearStart_ZebiMainCrowdsale[this] >= 0;
        assume __tmp__calenderYearEnd_ZebiMainCrowdsale[this] >= 0;
        assume currentYearCounter_s2869 >= 0;
        assume currentYearCounter_s2869 - 1 >= 0;
        assume (currentYearCounter_s2869 - 1) * 365 >= 0;
        assume __tmp__calenderYearEnd_ZebiMainCrowdsale[this]
             + (currentYearCounter_s2869 - 1) * 365
           >= 0;
        assume __tmp__calenderYearEnd_ZebiMainCrowdsale[this]
             + (currentYearCounter_s2869 - 1) * 365
             + 1
           >= 0;
        __tmp__calenderYearStart_ZebiMainCrowdsale[this] := __tmp__calenderYearEnd_ZebiMainCrowdsale[this]
           + (currentYearCounter_s2869 - 1) * 365
           + 1;
        gas := gas - 20226;
        assume __tmp__calenderYearEnd_ZebiMainCrowdsale[this] >= 0;
        assume __tmp__calenderYearStart_ZebiMainCrowdsale[this] >= 0;
        assume __tmp__calenderYearStart_ZebiMainCrowdsale[this] + 365 >= 0;
        assume __tmp__calenderYearStart_ZebiMainCrowdsale[this] + 365 - 1 >= 0;
        __tmp__calenderYearEnd_ZebiMainCrowdsale[this] := __tmp__calenderYearStart_ZebiMainCrowdsale[this] + 365 - 1;
    }

    gas := gas - 438;
    assume __tmp__currentYearMinted_ZebiMainCrowdsale[this] >= 0;
    assume zweitokens_s2870 >= 0;
    assume __tmp__currentYearMinted_ZebiMainCrowdsale[this] + zweitokens_s2870 >= 0;
    assume __tmp__calenderYearMintCap_ZebiMainCrowdsale[this] >= 0;
    if (!(__tmp__currentYearMinted_ZebiMainCrowdsale[this] + zweitokens_s2870
       <= __tmp__calenderYearMintCap_ZebiMainCrowdsale[this]))
    {
        revert := true;
        return;
    }

    gas := gas - 20220;
    assume __tmp__currentYearMinted_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__currentYearMinted_ZebiMainCrowdsale[this] >= 0;
    assume zweitokens_s2870 >= 0;
    assume __tmp__currentYearMinted_ZebiMainCrowdsale[this] + zweitokens_s2870 >= 0;
    __tmp__currentYearMinted_ZebiMainCrowdsale[this] := __tmp__currentYearMinted_ZebiMainCrowdsale[this] + zweitokens_s2870;
    gas := gas - 37458;
    assume zweitokens_s2870 >= 0;
    if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_149 := mint_MintableToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_150, partnerAddress_s2870, zweitokens_s2870);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_149 := mint_MintableToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_150, partnerAddress_s2870, zweitokens_s2870);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 20247;
    assume __tmp__zebiZCOShare_ZebiMainCrowdsale[this] >= 0;
    assume __tmp__zebiZCOShare_ZebiMainCrowdsale[this] >= 0;
    assume zweitokens_s2870 >= 0;
    call __var_151 := sub_SafeMath__fail(this, this, 0, __tmp__zebiZCOShare_ZebiMainCrowdsale[this], zweitokens_s2870);
    if (revert)
    {
        return;
    }

    __tmp__zebiZCOShare_ZebiMainCrowdsale[this] := __var_151;
    assume __var_151 >= 0;
}



implementation mintvestedTokens_ZebiMainCrowdsale__success(this: Ref, 
    msgsender_MSG: Ref, 
    msgvalue_MSG: int, 
    partnerAddress_s2870: Ref, 
    zweitokens_s2870: int)
   returns (__ret_0_: bool)
{
  var __var_147: Ref;
  var currentYearCounter_s2869: int;
  var __var_148: int;
  var __var_149: bool;
  var __var_150: int;
  var __var_151: int;

    gas := gas - 3;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 263;
    assume zweitokens_s2870 >= 0;
    assume zebiZCOShare_ZebiMainCrowdsale[this] >= 0;
    assume zweitokens_s2870 >= 0;
    if (!(zweitokens_s2870 <= zebiZCOShare_ZebiMainCrowdsale[this]
       && zweitokens_s2870 > 0))
    {
        revert := true;
        return;
    }

    gas := gas - 44;
    __var_147 := null;
    if (!(partnerAddress_s2870 != null))
    {
        revert := true;
        return;
    }

    gas := gas - 231;
    assume now >= 0;
    assume vestedMintStartTime_ZebiMainCrowdsale[this] >= 0;
    if (!(now >= vestedMintStartTime_ZebiMainCrowdsale[this]))
    {
        revert := true;
        return;
    }

    gas := gas - 253;
    assume currentYearCounter_s2869 >= 0;
    assume __var_148 >= 0;
    assume now >= 0;
    assume calenderYearStart_ZebiMainCrowdsale[this] >= 0;
    call __var_148 := sub_SafeMath__success(this, this, msgvalue_MSG, now, calenderYearStart_ZebiMainCrowdsale[this]);
    if (revert)
    {
        return;
    }

    assume __var_148 >= 0;
    assume __var_148 / 365 >= 0;
    currentYearCounter_s2869 := __var_148 / 365;
    gas := gas - 242;
    assume now >= 0;
    assume calenderYearEnd_ZebiMainCrowdsale[this] >= 0;
    assume currentYearCounter_s2869 >= 0;
    if (now > calenderYearEnd_ZebiMainCrowdsale[this] && currentYearCounter_s2869 >= 1)
    {
        gas := gas - 5014;
        assume currentYearMinted_ZebiMainCrowdsale[this] >= 0;
        currentYearMinted_ZebiMainCrowdsale[this] := 0;
        gas := gas - 20240;
        assume calenderYearStart_ZebiMainCrowdsale[this] >= 0;
        assume calenderYearEnd_ZebiMainCrowdsale[this] >= 0;
        assume currentYearCounter_s2869 >= 0;
        assume currentYearCounter_s2869 - 1 >= 0;
        assume (currentYearCounter_s2869 - 1) * 365 >= 0;
        assume calenderYearEnd_ZebiMainCrowdsale[this] + (currentYearCounter_s2869 - 1) * 365
           >= 0;
        assume calenderYearEnd_ZebiMainCrowdsale[this]
             + (currentYearCounter_s2869 - 1) * 365
             + 1
           >= 0;
        calenderYearStart_ZebiMainCrowdsale[this] := calenderYearEnd_ZebiMainCrowdsale[this]
           + (currentYearCounter_s2869 - 1) * 365
           + 1;
        gas := gas - 20226;
        assume calenderYearEnd_ZebiMainCrowdsale[this] >= 0;
        assume calenderYearStart_ZebiMainCrowdsale[this] >= 0;
        assume calenderYearStart_ZebiMainCrowdsale[this] + 365 >= 0;
        assume calenderYearStart_ZebiMainCrowdsale[this] + 365 - 1 >= 0;
        calenderYearEnd_ZebiMainCrowdsale[this] := calenderYearStart_ZebiMainCrowdsale[this] + 365 - 1;
    }

    gas := gas - 438;
    assume currentYearMinted_ZebiMainCrowdsale[this] >= 0;
    assume zweitokens_s2870 >= 0;
    assume currentYearMinted_ZebiMainCrowdsale[this] + zweitokens_s2870 >= 0;
    assume calenderYearMintCap_ZebiMainCrowdsale[this] >= 0;
    if (!(currentYearMinted_ZebiMainCrowdsale[this] + zweitokens_s2870
       <= calenderYearMintCap_ZebiMainCrowdsale[this]))
    {
        revert := true;
        return;
    }

    gas := gas - 20220;
    assume currentYearMinted_ZebiMainCrowdsale[this] >= 0;
    assume currentYearMinted_ZebiMainCrowdsale[this] >= 0;
    assume zweitokens_s2870 >= 0;
    assume currentYearMinted_ZebiMainCrowdsale[this] + zweitokens_s2870 >= 0;
    currentYearMinted_ZebiMainCrowdsale[this] := currentYearMinted_ZebiMainCrowdsale[this] + zweitokens_s2870;
    gas := gas - 37458;
    assume zweitokens_s2870 >= 0;
    if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_149 := mint_MintableToken__success(token_ZebiMainCrowdsale[this], this, __var_150, partnerAddress_s2870, zweitokens_s2870);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_149 := mint_MintableToken__success(token_ZebiMainCrowdsale[this], this, __var_150, partnerAddress_s2870, zweitokens_s2870);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 20247;
    assume zebiZCOShare_ZebiMainCrowdsale[this] >= 0;
    assume zebiZCOShare_ZebiMainCrowdsale[this] >= 0;
    assume zweitokens_s2870 >= 0;
    call __var_151 := sub_SafeMath__success(this, this, 0, zebiZCOShare_ZebiMainCrowdsale[this], zweitokens_s2870);
    if (revert)
    {
        return;
    }

    zebiZCOShare_ZebiMainCrowdsale[this] := __var_151;
    assume __var_151 >= 0;
}



implementation refund_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_152: int;
  var __var_153: int;
  var presaleContribution_s2988: int;
  var __var_154: int;
  var refundBalance_s2988: int;
  var preSaleRefundTemp_s2988: int;
  var __var_155: int;
  var preSaleRefundMain_s2988: int;
  var __var_156: bool;
  var __var_157: int;
  var __var_158: int;
  var __var_159: bool;

    call inCancelledList1_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call inRefundPeriod1_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 354;
    if (!__tmp__M_Ref_bool_mainCancelledList8[__tmp__mainCancelledList_ZebiMainCrowdsale[this]][msgsender_MSG])
    {
        revert := true;
        return;
    }

    gas := gas - 3681;
    assume __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][msgsender_MSG]
       >= 0;
    assume __var_152 >= 0;
    if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_152 := balanceOf_BasicToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_153, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_152 := balanceOf_BasicToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_153, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == StandardToken)
    {
        call __var_152 := balanceOf_BasicToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_153, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == BasicToken)
    {
        call __var_152 := balanceOf_BasicToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_153, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ERC20)
    {
        call __var_152 := balanceOf_ERC20Basic(__tmp__token_ZebiMainCrowdsale[this], this, __var_153, msgsender_MSG);
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ERC20Basic)
    {
        call __var_152 := balanceOf_ERC20Basic(__tmp__token_ZebiMainCrowdsale[this], this, __var_153, msgsender_MSG);
    }
    else
    {
        assume false;
    }

    assume __var_152 >= 0;
    if (!(__tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][msgsender_MSG]
         > 0
       && __var_152 > 0))
    {
        revert := true;
        return;
    }

    gas := gas - 3337;
    assume presaleContribution_s2988 >= 0;
    if (__tmp__DType[__tmp__zcc_ZebiMainCrowdsale[this]] == ZebiMainCrowdsale)
    {
        call presaleContribution_s2988 := viewContribution_ZebiMainCrowdsale__fail(__tmp__zcc_ZebiMainCrowdsale[this], this, __var_154, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__zcc_ZebiMainCrowdsale[this]] == ZebiCoinCrowdsale)
    {
        call presaleContribution_s2988 := viewContribution_ZCrowdsale__fail(__tmp__zcc_ZebiMainCrowdsale[this], this, __var_154, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__zcc_ZebiMainCrowdsale[this]] == ZCrowdsale)
    {
        call presaleContribution_s2988 := viewContribution_ZCrowdsale__fail(__tmp__zcc_ZebiMainCrowdsale[this], this, __var_154, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    presaleContribution_s2988 := presaleContribution_s2988;
    gas := gas - 307;
    assume refundBalance_s2988 >= 0;
    assume __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][msgsender_MSG]
       >= 0;
    assume presaleContribution_s2988 >= 0;
    call refundBalance_s2988 := add_SafeMath__fail(this, this, msgvalue_MSG, __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][msgsender_MSG], presaleContribution_s2988);
    if (revert)
    {
        return;
    }

    refundBalance_s2988 := refundBalance_s2988;
    gas := gas - 3337;
    assume preSaleRefundTemp_s2988 >= 0;
    call preSaleRefundTemp_s2988 := viewPreSaleRefunds_ZebiCoinTempMgr__fail(__tmp__tempMngr_ZebiMainCrowdsale[this], this, __var_155, msgsender_MSG);
    if (revert)
    {
        return;
    }

    preSaleRefundTemp_s2988 := preSaleRefundTemp_s2988;
    gas := gas - 44;
    assume preSaleRefundMain_s2988 >= 0;
    assume presaleContribution_s2988 >= 0;
    assume preSaleRefundTemp_s2988 >= 0;
    call preSaleRefundMain_s2988 := sub_SafeMath__fail(this, this, 0, presaleContribution_s2988, preSaleRefundTemp_s2988);
    if (revert)
    {
        return;
    }

    preSaleRefundMain_s2988 := preSaleRefundMain_s2988;
    gas := gas - 41;
    assume refundBalance_s2988 >= 0;
    assume refundBalance_s2988 >= 0;
    assume preSaleRefundTemp_s2988 >= 0;
    call refundBalance_s2988 := sub_SafeMath__fail(this, this, 0, refundBalance_s2988, preSaleRefundTemp_s2988);
    if (revert)
    {
        return;
    }

    refundBalance_s2988 := refundBalance_s2988;
    gas := gas - 336;
    assume refundBalance_s2988 >= 0;
    assume refundBalance_s2988 >= 0;
    assume __tmp__M_Ref_int_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][msgsender_MSG]
       >= 0;
    call refundBalance_s2988 := sub_SafeMath__fail(this, this, 0, refundBalance_s2988, __tmp__M_Ref_int_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][msgsender_MSG]);
    if (revert)
    {
        return;
    }

    refundBalance_s2988 := refundBalance_s2988;
    gas := gas - 20109;
    assume __tmp__M_Ref_int_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][msgsender_MSG]
       >= 0;
    assume preSaleRefundMain_s2988 >= 0;
    __tmp__sum_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]] := __tmp__sum_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]]
       - __tmp__M_Ref_int_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][msgsender_MSG];
    __tmp__M_Ref_int_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][msgsender_MSG] := preSaleRefundMain_s2988;
    __tmp__sum_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]] := __tmp__sum_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]]
       + __tmp__M_Ref_int_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][msgsender_MSG];
    gas := gas - 5103;
    assume __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][msgsender_MSG]
       >= 0;
    __tmp__sum_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]] := __tmp__sum_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]]
       - __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][msgsender_MSG];
    __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][msgsender_MSG] := 0;
    __tmp__sum_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]] := __tmp__sum_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]]
       + __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][msgsender_MSG];
    gas := gas - 37328;
    if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_156 := burn_MintableToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_157, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_156 := burn_MintableToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_157, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 35783;
    __var_158 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_158 := __var_158 - gas;
    assume refundBalance_s2988 >= 0;
    call __var_159 := send__fail(this, msgsender_MSG, refundBalance_s2988);
    if (!__var_159)
    {
        revert := true;
        return;
    }

    gas := __var_158 + gas;
}



implementation refund_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
  var __var_152: int;
  var __var_153: int;
  var presaleContribution_s2988: int;
  var __var_154: int;
  var refundBalance_s2988: int;
  var preSaleRefundTemp_s2988: int;
  var __var_155: int;
  var preSaleRefundMain_s2988: int;
  var __var_156: bool;
  var __var_157: int;
  var __var_158: int;
  var __var_159: bool;

    call inCancelledList1_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    call inRefundPeriod1_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 354;
    if (!M_Ref_bool_mainCancelledList8[mainCancelledList_ZebiMainCrowdsale[this]][msgsender_MSG])
    {
        revert := true;
        return;
    }

    gas := gas - 3681;
    assume M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][msgsender_MSG]
       >= 0;
    assume __var_152 >= 0;
    if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_152 := balanceOf_BasicToken__success(token_ZebiMainCrowdsale[this], this, __var_153, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_152 := balanceOf_BasicToken__success(token_ZebiMainCrowdsale[this], this, __var_153, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == StandardToken)
    {
        call __var_152 := balanceOf_BasicToken__success(token_ZebiMainCrowdsale[this], this, __var_153, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == BasicToken)
    {
        call __var_152 := balanceOf_BasicToken__success(token_ZebiMainCrowdsale[this], this, __var_153, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == ERC20)
    {
        call __var_152 := balanceOf_ERC20Basic(token_ZebiMainCrowdsale[this], this, __var_153, msgsender_MSG);
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == ERC20Basic)
    {
        call __var_152 := balanceOf_ERC20Basic(token_ZebiMainCrowdsale[this], this, __var_153, msgsender_MSG);
    }
    else
    {
        assume false;
    }

    assume __var_152 >= 0;
    if (!(M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][msgsender_MSG]
         > 0
       && __var_152 > 0))
    {
        revert := true;
        return;
    }

    gas := gas - 3337;
    assume presaleContribution_s2988 >= 0;
    if (DType[zcc_ZebiMainCrowdsale[this]] == ZebiMainCrowdsale)
    {
        call presaleContribution_s2988 := viewContribution_ZebiMainCrowdsale__success(zcc_ZebiMainCrowdsale[this], this, __var_154, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[zcc_ZebiMainCrowdsale[this]] == ZebiCoinCrowdsale)
    {
        call presaleContribution_s2988 := viewContribution_ZCrowdsale__success(zcc_ZebiMainCrowdsale[this], this, __var_154, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[zcc_ZebiMainCrowdsale[this]] == ZCrowdsale)
    {
        call presaleContribution_s2988 := viewContribution_ZCrowdsale__success(zcc_ZebiMainCrowdsale[this], this, __var_154, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    presaleContribution_s2988 := presaleContribution_s2988;
    gas := gas - 307;
    assume refundBalance_s2988 >= 0;
    assume M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][msgsender_MSG]
       >= 0;
    assume presaleContribution_s2988 >= 0;
    call refundBalance_s2988 := add_SafeMath__success(this, this, msgvalue_MSG, M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][msgsender_MSG], presaleContribution_s2988);
    if (revert)
    {
        return;
    }

    refundBalance_s2988 := refundBalance_s2988;
    gas := gas - 3337;
    assume preSaleRefundTemp_s2988 >= 0;
    call preSaleRefundTemp_s2988 := viewPreSaleRefunds_ZebiCoinTempMgr__success(tempMngr_ZebiMainCrowdsale[this], this, __var_155, msgsender_MSG);
    if (revert)
    {
        return;
    }

    preSaleRefundTemp_s2988 := preSaleRefundTemp_s2988;
    gas := gas - 44;
    assume preSaleRefundMain_s2988 >= 0;
    assume presaleContribution_s2988 >= 0;
    assume preSaleRefundTemp_s2988 >= 0;
    call preSaleRefundMain_s2988 := sub_SafeMath__success(this, this, 0, presaleContribution_s2988, preSaleRefundTemp_s2988);
    if (revert)
    {
        return;
    }

    preSaleRefundMain_s2988 := preSaleRefundMain_s2988;
    gas := gas - 41;
    assume refundBalance_s2988 >= 0;
    assume refundBalance_s2988 >= 0;
    assume preSaleRefundTemp_s2988 >= 0;
    call refundBalance_s2988 := sub_SafeMath__success(this, this, 0, refundBalance_s2988, preSaleRefundTemp_s2988);
    if (revert)
    {
        return;
    }

    refundBalance_s2988 := refundBalance_s2988;
    gas := gas - 336;
    assume refundBalance_s2988 >= 0;
    assume refundBalance_s2988 >= 0;
    assume M_Ref_int_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][msgsender_MSG]
       >= 0;
    call refundBalance_s2988 := sub_SafeMath__success(this, this, 0, refundBalance_s2988, M_Ref_int_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][msgsender_MSG]);
    if (revert)
    {
        return;
    }

    refundBalance_s2988 := refundBalance_s2988;
    gas := gas - 20109;
    assume M_Ref_int_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][msgsender_MSG]
       >= 0;
    assume preSaleRefundMain_s2988 >= 0;
    sum_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]] := sum_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]]
       - M_Ref_int_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][msgsender_MSG];
    M_Ref_int_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][msgsender_MSG] := preSaleRefundMain_s2988;
    sum_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]] := sum_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]]
       + M_Ref_int_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][msgsender_MSG];
    gas := gas - 5103;
    assume M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][msgsender_MSG]
       >= 0;
    sum_mainContribution7[mainContribution_ZebiMainCrowdsale[this]] := sum_mainContribution7[mainContribution_ZebiMainCrowdsale[this]]
       - M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][msgsender_MSG];
    M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][msgsender_MSG] := 0;
    sum_mainContribution7[mainContribution_ZebiMainCrowdsale[this]] := sum_mainContribution7[mainContribution_ZebiMainCrowdsale[this]]
       + M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][msgsender_MSG];
    gas := gas - 37328;
    if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_156 := burn_MintableToken__success(token_ZebiMainCrowdsale[this], this, __var_157, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_156 := burn_MintableToken__success(token_ZebiMainCrowdsale[this], this, __var_157, msgsender_MSG);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 35783;
    __var_158 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_158 := __var_158 - gas;
    assume refundBalance_s2988 >= 0;
    call __var_159 := send__success(this, msgsender_MSG, refundBalance_s2988);
    if (!__var_159)
    {
        revert := true;
        return;
    }

    gas := __var_158 + gas;
    assert {:EventEmitted "Refund_ZebiMainCrowdsale"} true;
}



implementation forcedRefund_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s3095: Ref)
{
  var __var_160: int;
  var __var_161: int;
  var presaleContribution_s3094: int;
  var __var_162: int;
  var refundBalance_s3094: int;
  var preSaleRefundTemp_s3094: int;
  var __var_163: int;
  var preSaleRefundMain_s3094: int;
  var __var_164: bool;
  var __var_165: int;
  var __var_166: int;
  var __var_167: bool;

    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 355;
    if (!__tmp__M_Ref_bool_mainCancelledList8[__tmp__mainCancelledList_ZebiMainCrowdsale[this]][_from_s3095])
    {
        revert := true;
        return;
    }

    gas := gas - 3683;
    assume __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][_from_s3095]
       >= 0;
    assume __var_160 >= 0;
    if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_160 := balanceOf_BasicToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_161, _from_s3095);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_160 := balanceOf_BasicToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_161, _from_s3095);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == StandardToken)
    {
        call __var_160 := balanceOf_BasicToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_161, _from_s3095);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == BasicToken)
    {
        call __var_160 := balanceOf_BasicToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_161, _from_s3095);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ERC20)
    {
        call __var_160 := balanceOf_ERC20Basic(__tmp__token_ZebiMainCrowdsale[this], this, __var_161, _from_s3095);
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ERC20Basic)
    {
        call __var_160 := balanceOf_ERC20Basic(__tmp__token_ZebiMainCrowdsale[this], this, __var_161, _from_s3095);
    }
    else
    {
        assume false;
    }

    assume __var_160 >= 0;
    if (!(__tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][_from_s3095]
         > 0
       && __var_160 > 0))
    {
        revert := true;
        return;
    }

    gas := gas - 3338;
    assume presaleContribution_s3094 >= 0;
    if (__tmp__DType[__tmp__zcc_ZebiMainCrowdsale[this]] == ZebiMainCrowdsale)
    {
        call presaleContribution_s3094 := viewContribution_ZebiMainCrowdsale__fail(__tmp__zcc_ZebiMainCrowdsale[this], this, __var_162, _from_s3095);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__zcc_ZebiMainCrowdsale[this]] == ZebiCoinCrowdsale)
    {
        call presaleContribution_s3094 := viewContribution_ZCrowdsale__fail(__tmp__zcc_ZebiMainCrowdsale[this], this, __var_162, _from_s3095);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__zcc_ZebiMainCrowdsale[this]] == ZCrowdsale)
    {
        call presaleContribution_s3094 := viewContribution_ZCrowdsale__fail(__tmp__zcc_ZebiMainCrowdsale[this], this, __var_162, _from_s3095);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    presaleContribution_s3094 := presaleContribution_s3094;
    gas := gas - 319;
    assume refundBalance_s3094 >= 0;
    assume __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][_from_s3095]
       >= 0;
    assume presaleContribution_s3094 >= 0;
    call refundBalance_s3094 := add_SafeMath__fail(this, this, msgvalue_MSG, __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][_from_s3095], presaleContribution_s3094);
    if (revert)
    {
        return;
    }

    refundBalance_s3094 := refundBalance_s3094;
    gas := gas - 3338;
    assume preSaleRefundTemp_s3094 >= 0;
    call preSaleRefundTemp_s3094 := viewPreSaleRefunds_ZebiCoinTempMgr__fail(__tmp__tempMngr_ZebiMainCrowdsale[this], this, __var_163, _from_s3095);
    if (revert)
    {
        return;
    }

    preSaleRefundTemp_s3094 := preSaleRefundTemp_s3094;
    gas := gas - 44;
    assume preSaleRefundMain_s3094 >= 0;
    assume presaleContribution_s3094 >= 0;
    assume preSaleRefundTemp_s3094 >= 0;
    call preSaleRefundMain_s3094 := sub_SafeMath__fail(this, this, 0, presaleContribution_s3094, preSaleRefundTemp_s3094);
    if (revert)
    {
        return;
    }

    preSaleRefundMain_s3094 := preSaleRefundMain_s3094;
    gas := gas - 41;
    assume refundBalance_s3094 >= 0;
    assume refundBalance_s3094 >= 0;
    assume preSaleRefundTemp_s3094 >= 0;
    call refundBalance_s3094 := sub_SafeMath__fail(this, this, 0, refundBalance_s3094, preSaleRefundTemp_s3094);
    if (revert)
    {
        return;
    }

    refundBalance_s3094 := refundBalance_s3094;
    gas := gas - 337;
    assume refundBalance_s3094 >= 0;
    assume refundBalance_s3094 >= 0;
    assume __tmp__M_Ref_int_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][_from_s3095]
       >= 0;
    call refundBalance_s3094 := sub_SafeMath__fail(this, this, 0, refundBalance_s3094, __tmp__M_Ref_int_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][_from_s3095]);
    if (revert)
    {
        return;
    }

    refundBalance_s3094 := refundBalance_s3094;
    gas := gas - 20110;
    assume __tmp__M_Ref_int_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][_from_s3095]
       >= 0;
    assume preSaleRefundMain_s3094 >= 0;
    __tmp__sum_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]] := __tmp__sum_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]]
       - __tmp__M_Ref_int_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][_from_s3095];
    __tmp__M_Ref_int_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][_from_s3095] := preSaleRefundMain_s3094;
    __tmp__sum_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]] := __tmp__sum_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]]
       + __tmp__M_Ref_int_preSaleRefundsInMainSale12[__tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][_from_s3095];
    gas := gas - 5104;
    assume __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][_from_s3095]
       >= 0;
    __tmp__sum_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]] := __tmp__sum_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]]
       - __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][_from_s3095];
    __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][_from_s3095] := 0;
    __tmp__sum_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]] := __tmp__sum_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]]
       + __tmp__M_Ref_int_mainContribution7[__tmp__mainContribution_ZebiMainCrowdsale[this]][_from_s3095];
    gas := gas - 37329;
    if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_164 := burn_MintableToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_165, _from_s3095);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[__tmp__token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_164 := burn_MintableToken__fail(__tmp__token_ZebiMainCrowdsale[this], this, __var_165, _from_s3095);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 35784;
    __var_166 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_166 := __var_166 - gas;
    assume refundBalance_s3094 >= 0;
    call __var_167 := send__fail(this, _from_s3095, refundBalance_s3094);
    if (!__var_167)
    {
        revert := true;
        return;
    }

    gas := __var_166 + gas;
}



implementation forcedRefund_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _from_s3095: Ref)
{
  var __var_160: int;
  var __var_161: int;
  var presaleContribution_s3094: int;
  var __var_162: int;
  var refundBalance_s3094: int;
  var preSaleRefundTemp_s3094: int;
  var __var_163: int;
  var preSaleRefundMain_s3094: int;
  var __var_164: bool;
  var __var_165: int;
  var __var_166: int;
  var __var_167: bool;

    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 355;
    if (!M_Ref_bool_mainCancelledList8[mainCancelledList_ZebiMainCrowdsale[this]][_from_s3095])
    {
        revert := true;
        return;
    }

    gas := gas - 3683;
    assume M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][_from_s3095]
       >= 0;
    assume __var_160 >= 0;
    if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_160 := balanceOf_BasicToken__success(token_ZebiMainCrowdsale[this], this, __var_161, _from_s3095);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_160 := balanceOf_BasicToken__success(token_ZebiMainCrowdsale[this], this, __var_161, _from_s3095);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == StandardToken)
    {
        call __var_160 := balanceOf_BasicToken__success(token_ZebiMainCrowdsale[this], this, __var_161, _from_s3095);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == BasicToken)
    {
        call __var_160 := balanceOf_BasicToken__success(token_ZebiMainCrowdsale[this], this, __var_161, _from_s3095);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == ERC20)
    {
        call __var_160 := balanceOf_ERC20Basic(token_ZebiMainCrowdsale[this], this, __var_161, _from_s3095);
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == ERC20Basic)
    {
        call __var_160 := balanceOf_ERC20Basic(token_ZebiMainCrowdsale[this], this, __var_161, _from_s3095);
    }
    else
    {
        assume false;
    }

    assume __var_160 >= 0;
    if (!(M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][_from_s3095]
         > 0
       && __var_160 > 0))
    {
        revert := true;
        return;
    }

    gas := gas - 3338;
    assume presaleContribution_s3094 >= 0;
    if (DType[zcc_ZebiMainCrowdsale[this]] == ZebiMainCrowdsale)
    {
        call presaleContribution_s3094 := viewContribution_ZebiMainCrowdsale__success(zcc_ZebiMainCrowdsale[this], this, __var_162, _from_s3095);
        if (revert)
        {
            return;
        }
    }
    else if (DType[zcc_ZebiMainCrowdsale[this]] == ZebiCoinCrowdsale)
    {
        call presaleContribution_s3094 := viewContribution_ZCrowdsale__success(zcc_ZebiMainCrowdsale[this], this, __var_162, _from_s3095);
        if (revert)
        {
            return;
        }
    }
    else if (DType[zcc_ZebiMainCrowdsale[this]] == ZCrowdsale)
    {
        call presaleContribution_s3094 := viewContribution_ZCrowdsale__success(zcc_ZebiMainCrowdsale[this], this, __var_162, _from_s3095);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    presaleContribution_s3094 := presaleContribution_s3094;
    gas := gas - 319;
    assume refundBalance_s3094 >= 0;
    assume M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][_from_s3095]
       >= 0;
    assume presaleContribution_s3094 >= 0;
    call refundBalance_s3094 := add_SafeMath__success(this, this, msgvalue_MSG, M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][_from_s3095], presaleContribution_s3094);
    if (revert)
    {
        return;
    }

    refundBalance_s3094 := refundBalance_s3094;
    gas := gas - 3338;
    assume preSaleRefundTemp_s3094 >= 0;
    call preSaleRefundTemp_s3094 := viewPreSaleRefunds_ZebiCoinTempMgr__success(tempMngr_ZebiMainCrowdsale[this], this, __var_163, _from_s3095);
    if (revert)
    {
        return;
    }

    preSaleRefundTemp_s3094 := preSaleRefundTemp_s3094;
    gas := gas - 44;
    assume preSaleRefundMain_s3094 >= 0;
    assume presaleContribution_s3094 >= 0;
    assume preSaleRefundTemp_s3094 >= 0;
    call preSaleRefundMain_s3094 := sub_SafeMath__success(this, this, 0, presaleContribution_s3094, preSaleRefundTemp_s3094);
    if (revert)
    {
        return;
    }

    preSaleRefundMain_s3094 := preSaleRefundMain_s3094;
    gas := gas - 41;
    assume refundBalance_s3094 >= 0;
    assume refundBalance_s3094 >= 0;
    assume preSaleRefundTemp_s3094 >= 0;
    call refundBalance_s3094 := sub_SafeMath__success(this, this, 0, refundBalance_s3094, preSaleRefundTemp_s3094);
    if (revert)
    {
        return;
    }

    refundBalance_s3094 := refundBalance_s3094;
    gas := gas - 337;
    assume refundBalance_s3094 >= 0;
    assume refundBalance_s3094 >= 0;
    assume M_Ref_int_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][_from_s3095]
       >= 0;
    call refundBalance_s3094 := sub_SafeMath__success(this, this, 0, refundBalance_s3094, M_Ref_int_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][_from_s3095]);
    if (revert)
    {
        return;
    }

    refundBalance_s3094 := refundBalance_s3094;
    gas := gas - 20110;
    assume M_Ref_int_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][_from_s3095]
       >= 0;
    assume preSaleRefundMain_s3094 >= 0;
    sum_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]] := sum_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]]
       - M_Ref_int_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][_from_s3095];
    M_Ref_int_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][_from_s3095] := preSaleRefundMain_s3094;
    sum_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]] := sum_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]]
       + M_Ref_int_preSaleRefundsInMainSale12[preSaleRefundsInMainSale_ZebiMainCrowdsale[this]][_from_s3095];
    gas := gas - 5104;
    assume M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][_from_s3095]
       >= 0;
    sum_mainContribution7[mainContribution_ZebiMainCrowdsale[this]] := sum_mainContribution7[mainContribution_ZebiMainCrowdsale[this]]
       - M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][_from_s3095];
    M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][_from_s3095] := 0;
    sum_mainContribution7[mainContribution_ZebiMainCrowdsale[this]] := sum_mainContribution7[mainContribution_ZebiMainCrowdsale[this]]
       + M_Ref_int_mainContribution7[mainContribution_ZebiMainCrowdsale[this]][_from_s3095];
    gas := gas - 37329;
    if (DType[token_ZebiMainCrowdsale[this]] == ZebiCoin)
    {
        call __var_164 := burn_MintableToken__success(token_ZebiMainCrowdsale[this], this, __var_165, _from_s3095);
        if (revert)
        {
            return;
        }
    }
    else if (DType[token_ZebiMainCrowdsale[this]] == MintableToken)
    {
        call __var_164 := burn_MintableToken__success(token_ZebiMainCrowdsale[this], this, __var_165, _from_s3095);
        if (revert)
        {
            return;
        }
    }
    else
    {
        assume false;
    }

    gas := gas - 35784;
    __var_166 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_166 := __var_166 - gas;
    assume refundBalance_s3094 >= 0;
    call __var_167 := send__success(this, _from_s3095, refundBalance_s3094);
    if (!__var_167)
    {
        revert := true;
        return;
    }

    gas := __var_166 + gas;
    assert {:EventEmitted "Refund_ZebiMainCrowdsale"} true;
}



implementation takeEth_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume __tmp__Balance[msgsender_MSG] >= msgvalue_MSG;
    __tmp__Balance[msgsender_MSG] := __tmp__Balance[msgsender_MSG] - msgvalue_MSG;
    __tmp__Balance[this] := __tmp__Balance[this] + msgvalue_MSG;
}



implementation takeEth_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    assume Balance[msgsender_MSG] >= msgvalue_MSG;
    Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
    Balance[this] := Balance[this] + msgvalue_MSG;
    assert {:EventEmitted "TakeEth_ZebiMainCrowdsale"} true;
}



implementation withdraw_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _value_s3124: int)
{
  var __var_168: int;
  var __var_169: bool;

    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 36029;
    __var_168 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_168 := __var_168 - gas;
    assume _value_s3124 >= 0;
    call __var_169 := send__fail(this, __tmp__wallet_ZebiMainCrowdsale[this], _value_s3124);
    if (!__var_169)
    {
        revert := true;
        return;
    }

    gas := __var_168 + gas;
}



implementation withdraw_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _value_s3124: int)
{
  var __var_168: int;
  var __var_169: bool;

    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 36029;
    __var_168 := gas;
    if (gas > 2300)
    {
        gas := 2300;
    }

    __var_168 := __var_168 - gas;
    assume _value_s3124 >= 0;
    call __var_169 := send__success(this, wallet_ZebiMainCrowdsale[this], _value_s3124);
    if (!__var_169)
    {
        revert := true;
        return;
    }

    gas := __var_168 + gas;
    assert {:EventEmitted "Withdraw_ZebiMainCrowdsale"} true;
}



implementation addCancellation_ZebiMainCrowdsale__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s3142: Ref)
   returns (success_s3142: bool)
{
    gas := gas - 3;
    call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20363;
    __tmp__M_Ref_bool_mainCancelledList8[__tmp__mainCancelledList_ZebiMainCrowdsale[this]][_participant_s3142] := true;
    gas := gas - 8;
    success_s3142 := true;
    return;
}



implementation addCancellation_ZebiMainCrowdsale__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, _participant_s3142: Ref)
   returns (success_s3142: bool)
{
    gas := gas - 3;
    call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
    if (revert)
    {
        return;
    }

    gas := gas - 20363;
    M_Ref_bool_mainCancelledList8[mainCancelledList_ZebiMainCrowdsale[this]][_participant_s3142] := true;
    gas := gas - 8;
    success_s3142 := true;
    return;
}



implementation FallbackDispatch__fail(from: Ref, to: Ref, amount: int)
{
    if (__tmp__DType[to] == ZebiMainCrowdsale)
    {
        call FallbackMethod_ZebiMainCrowdsale__fail(to, from, amount);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[to] == ZebiCoinTempMgr)
    {
        assume amount == 0;
    }
    else if (__tmp__DType[to] == ZebiCoinCrowdsale)
    {
        assume amount == 0;
    }
    else if (__tmp__DType[to] == ZCrowdsale)
    {
        call FallbackMethod_ZCrowdsale__fail(to, from, amount);
        if (revert)
        {
            return;
        }
    }
    else if (__tmp__DType[to] == ZebiCoin)
    {
        assume amount == 0;
    }
    else if (__tmp__DType[to] == MintableToken)
    {
        assume amount == 0;
    }
    else if (__tmp__DType[to] == StandardToken)
    {
        assume amount == 0;
    }
    else if (__tmp__DType[to] == BasicToken)
    {
        assume amount == 0;
    }
    else if (__tmp__DType[to] == ERC20)
    {
        assume amount == 0;
    }
    else if (__tmp__DType[to] == ERC20Basic)
    {
        assume amount == 0;
    }
    else if (__tmp__DType[to] == Ownable)
    {
        assume amount == 0;
    }
    else
    {
        call Fallback_UnknownType__fail(from, to, amount);
        if (revert)
        {
            return;
        }
    }
}



implementation FallbackDispatch__success(from: Ref, to: Ref, amount: int)
{
    if (DType[to] == ZebiMainCrowdsale)
    {
        call FallbackMethod_ZebiMainCrowdsale__success(to, from, amount);
        if (revert)
        {
            return;
        }
    }
    else if (DType[to] == ZebiCoinTempMgr)
    {
        assume amount == 0;
    }
    else if (DType[to] == ZebiCoinCrowdsale)
    {
        assume amount == 0;
    }
    else if (DType[to] == ZCrowdsale)
    {
        call FallbackMethod_ZCrowdsale__success(to, from, amount);
        if (revert)
        {
            return;
        }
    }
    else if (DType[to] == ZebiCoin)
    {
        assume amount == 0;
    }
    else if (DType[to] == MintableToken)
    {
        assume amount == 0;
    }
    else if (DType[to] == StandardToken)
    {
        assume amount == 0;
    }
    else if (DType[to] == BasicToken)
    {
        assume amount == 0;
    }
    else if (DType[to] == ERC20)
    {
        assume amount == 0;
    }
    else if (DType[to] == ERC20Basic)
    {
        assume amount == 0;
    }
    else if (DType[to] == Ownable)
    {
        assume amount == 0;
    }
    else
    {
        call Fallback_UnknownType__success(from, to, amount);
        if (revert)
        {
            return;
        }
    }
}



implementation Fallback_UnknownType__fail(from: Ref, to: Ref, amount: int)
{
    assume __tmp__Balance[from] >= amount;
    __tmp__Balance[from] := __tmp__Balance[from] - amount;
    __tmp__Balance[to] := __tmp__Balance[to] + amount;
}



implementation Fallback_UnknownType__success(from: Ref, to: Ref, amount: int)
{
    assume Balance[from] >= amount;
    Balance[from] := Balance[from] - amount;
    Balance[to] := Balance[to] + amount;
}



implementation send__fail(from: Ref, to: Ref, amount: int) returns (success: bool)
{
  var __exception: bool;
  var __snap___tmp__Balance: [Ref]int;
  var __snap___tmp__DType: [Ref]ContractName;
  var __snap___tmp__Alloc: [Ref]bool;
  var __snap___tmp__balance_ADDR: [Ref]int;
  var __snap___tmp__M_Ref_int_balances0: [Ref][Ref]int;
  var __snap___tmp__sum_balances0: [Ref]int;
  var __snap___tmp__M_Ref_int_allowed1: [Ref][Ref]int;
  var __snap___tmp__M_Ref_Ref_allowed1: [Ref][Ref]Ref;
  var __snap___tmp__sum_allowed1: [Ref]int;
  var __snap___tmp__M_Ref_int_contribution2: [Ref][Ref]int;
  var __snap___tmp__sum_contribution2: [Ref]int;
  var __snap___tmp__M_Ref_bool_cancelledList3: [Ref][Ref]bool;
  var __snap___tmp__sum_cancelledList3: [Ref]int;
  var __snap___tmp__M_Ref_bool_preSaleCancelledList4: [Ref][Ref]bool;
  var __snap___tmp__sum_preSaleCancelledList4: [Ref]int;
  var __snap___tmp__M_Ref_int_noncsAllocations5: [Ref][Ref]int;
  var __snap___tmp__sum_noncsAllocations5: [Ref]int;
  var __snap___tmp__M_Ref_int_preSaleRefunds6: [Ref][Ref]int;
  var __snap___tmp__sum_preSaleRefunds6: [Ref]int;
  var __snap___tmp__M_Ref_int_mainContribution7: [Ref][Ref]int;
  var __snap___tmp__sum_mainContribution7: [Ref]int;
  var __snap___tmp__M_Ref_bool_mainCancelledList8: [Ref][Ref]bool;
  var __snap___tmp__sum_mainCancelledList8: [Ref]int;
  var __snap___tmp__M_Ref_int_goldListContribution9: [Ref][Ref]int;
  var __snap___tmp__sum_goldListContribution9: [Ref]int;
  var __snap___tmp__M_Ref_bool_goldList10: [Ref][Ref]bool;
  var __snap___tmp__sum_goldList10: [Ref]int;
  var __snap___tmp__M_Ref_bool_kycAcceptedList11: [Ref][Ref]bool;
  var __snap___tmp__sum_kycAcceptedList11: [Ref]int;
  var __snap___tmp__M_Ref_int_preSaleRefundsInMainSale12: [Ref][Ref]int;
  var __snap___tmp__sum_preSaleRefundsInMainSale12: [Ref]int;
  var __snap___tmp__Length: [Ref]int;
  var __snap___tmp__now: int;
  var __snap___tmp__owner_Ownable: [Ref]Ref;
  var __snap___tmp__balances_BasicToken: [Ref]Ref;
  var __snap___tmp__totalSupply__BasicToken: [Ref]int;
  var __snap___tmp__allowed_StandardToken: [Ref]Ref;
  var __snap___tmp__mintingFinished_MintableToken: [Ref]bool;
  var __snap___tmp__transferAllowed_MintableToken: [Ref]bool;
  var __snap___tmp__name_ZebiCoin: [Ref]int;
  var __snap___tmp__symbol_ZebiCoin: [Ref]int;
  var __snap___tmp__decimals_ZebiCoin: [Ref]int;
  var __snap___tmp__token_ZCrowdsale: [Ref]Ref;
  var __snap___tmp__tokenDecimals_ZCrowdsale: [Ref]int;
  var __snap___tmp__startTime_ZCrowdsale: [Ref]int;
  var __snap___tmp__endTime_ZCrowdsale: [Ref]int;
  var __snap___tmp__minTransAmount_ZCrowdsale: [Ref]int;
  var __snap___tmp__mintedTokensCap_ZCrowdsale: [Ref]int;
  var __snap___tmp__contribution_ZCrowdsale: [Ref]Ref;
  var __snap___tmp__cancelledList_ZCrowdsale: [Ref]Ref;
  var __snap___tmp__wallet_ZCrowdsale: [Ref]Ref;
  var __snap___tmp__withinRefundPeriod_ZCrowdsale: [Ref]bool;
  var __snap___tmp__ETHtoZCOrate_ZCrowdsale: [Ref]int;
  var __snap___tmp__weiRaised_ZCrowdsale: [Ref]int;
  var __snap___tmp__stopped_ZCrowdsale: [Ref]bool;
  var __snap___tmp__wallet_ZebiCoinTempMgr: [Ref]Ref;
  var __snap___tmp__preSaleCSSC_ZebiCoinTempMgr: [Ref]Ref;
  var __snap___tmp__tsc_ZebiCoinTempMgr: [Ref]Ref;
  var __snap___tmp__tokenDecimals_ZebiCoinTempMgr: [Ref]int;
  var __snap___tmp__preSaleCancelledList_ZebiCoinTempMgr: [Ref]Ref;
  var __snap___tmp__noncsAllocations_ZebiCoinTempMgr: [Ref]Ref;
  var __snap___tmp__withinRefundPeriod_ZebiCoinTempMgr: [Ref]bool;
  var __snap___tmp__preSaleRefunds_ZebiCoinTempMgr: [Ref]Ref;
  var __snap___tmp__token_ZebiMainCrowdsale: [Ref]Ref;
  var __snap___tmp__currentYearMinted_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__calenderYearMintCap_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__calenderYearStart_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__calenderYearEnd_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__vestedMintStartTime_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__zebiZCOShare_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__crowdsaleZCOCap_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__transStartTime_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__zcc_ZebiMainCrowdsale: [Ref]Ref;
  var __snap___tmp__tempMngr_ZebiMainCrowdsale: [Ref]Ref;
  var __snap___tmp__tokenDecimals_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__startTime_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__endTime_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__goldListPeriod_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__postGoldPeriod_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__minTransAmount_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__ethCap_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__mainContribution_ZebiMainCrowdsale: [Ref]Ref;
  var __snap___tmp__mainCancelledList_ZebiMainCrowdsale: [Ref]Ref;
  var __snap___tmp__goldPeriodCap_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__goldListPeriodFlag_ZebiMainCrowdsale: [Ref]bool;
  var __snap___tmp__goldListContribution_ZebiMainCrowdsale: [Ref]Ref;
  var __snap___tmp__goldList_ZebiMainCrowdsale: [Ref]Ref;
  var __snap___tmp__kycAcceptedList_ZebiMainCrowdsale: [Ref]Ref;
  var __snap___tmp__wallet_ZebiMainCrowdsale: [Ref]Ref;
  var __snap___tmp__withinRefundPeriod_ZebiMainCrowdsale: [Ref]bool;
  var __snap___tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale: [Ref]Ref;
  var __snap___tmp__tokens_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__weiAmount_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__ETHtoZWeirate_ZebiMainCrowdsale: [Ref]int;
  var __snap___tmp__mainWeiRaised_ZebiMainCrowdsale: [Ref]int;

    havoc __exception;
    if (__exception)
    {
        __snap___tmp__Balance := __tmp__Balance;
        __snap___tmp__DType := __tmp__DType;
        __snap___tmp__Alloc := __tmp__Alloc;
        __snap___tmp__balance_ADDR := __tmp__balance_ADDR;
        __snap___tmp__M_Ref_int_balances0 := __tmp__M_Ref_int_balances0;
        __snap___tmp__sum_balances0 := __tmp__sum_balances0;
        __snap___tmp__M_Ref_int_allowed1 := __tmp__M_Ref_int_allowed1;
        __snap___tmp__M_Ref_Ref_allowed1 := __tmp__M_Ref_Ref_allowed1;
        __snap___tmp__sum_allowed1 := __tmp__sum_allowed1;
        __snap___tmp__M_Ref_int_contribution2 := __tmp__M_Ref_int_contribution2;
        __snap___tmp__sum_contribution2 := __tmp__sum_contribution2;
        __snap___tmp__M_Ref_bool_cancelledList3 := __tmp__M_Ref_bool_cancelledList3;
        __snap___tmp__sum_cancelledList3 := __tmp__sum_cancelledList3;
        __snap___tmp__M_Ref_bool_preSaleCancelledList4 := __tmp__M_Ref_bool_preSaleCancelledList4;
        __snap___tmp__sum_preSaleCancelledList4 := __tmp__sum_preSaleCancelledList4;
        __snap___tmp__M_Ref_int_noncsAllocations5 := __tmp__M_Ref_int_noncsAllocations5;
        __snap___tmp__sum_noncsAllocations5 := __tmp__sum_noncsAllocations5;
        __snap___tmp__M_Ref_int_preSaleRefunds6 := __tmp__M_Ref_int_preSaleRefunds6;
        __snap___tmp__sum_preSaleRefunds6 := __tmp__sum_preSaleRefunds6;
        __snap___tmp__M_Ref_int_mainContribution7 := __tmp__M_Ref_int_mainContribution7;
        __snap___tmp__sum_mainContribution7 := __tmp__sum_mainContribution7;
        __snap___tmp__M_Ref_bool_mainCancelledList8 := __tmp__M_Ref_bool_mainCancelledList8;
        __snap___tmp__sum_mainCancelledList8 := __tmp__sum_mainCancelledList8;
        __snap___tmp__M_Ref_int_goldListContribution9 := __tmp__M_Ref_int_goldListContribution9;
        __snap___tmp__sum_goldListContribution9 := __tmp__sum_goldListContribution9;
        __snap___tmp__M_Ref_bool_goldList10 := __tmp__M_Ref_bool_goldList10;
        __snap___tmp__sum_goldList10 := __tmp__sum_goldList10;
        __snap___tmp__M_Ref_bool_kycAcceptedList11 := __tmp__M_Ref_bool_kycAcceptedList11;
        __snap___tmp__sum_kycAcceptedList11 := __tmp__sum_kycAcceptedList11;
        __snap___tmp__M_Ref_int_preSaleRefundsInMainSale12 := __tmp__M_Ref_int_preSaleRefundsInMainSale12;
        __snap___tmp__sum_preSaleRefundsInMainSale12 := __tmp__sum_preSaleRefundsInMainSale12;
        __snap___tmp__Length := __tmp__Length;
        __snap___tmp__now := __tmp__now;
        __snap___tmp__owner_Ownable := __tmp__owner_Ownable;
        __snap___tmp__balances_BasicToken := __tmp__balances_BasicToken;
        __snap___tmp__totalSupply__BasicToken := __tmp__totalSupply__BasicToken;
        __snap___tmp__allowed_StandardToken := __tmp__allowed_StandardToken;
        __snap___tmp__mintingFinished_MintableToken := __tmp__mintingFinished_MintableToken;
        __snap___tmp__transferAllowed_MintableToken := __tmp__transferAllowed_MintableToken;
        __snap___tmp__name_ZebiCoin := __tmp__name_ZebiCoin;
        __snap___tmp__symbol_ZebiCoin := __tmp__symbol_ZebiCoin;
        __snap___tmp__decimals_ZebiCoin := __tmp__decimals_ZebiCoin;
        __snap___tmp__token_ZCrowdsale := __tmp__token_ZCrowdsale;
        __snap___tmp__tokenDecimals_ZCrowdsale := __tmp__tokenDecimals_ZCrowdsale;
        __snap___tmp__startTime_ZCrowdsale := __tmp__startTime_ZCrowdsale;
        __snap___tmp__endTime_ZCrowdsale := __tmp__endTime_ZCrowdsale;
        __snap___tmp__minTransAmount_ZCrowdsale := __tmp__minTransAmount_ZCrowdsale;
        __snap___tmp__mintedTokensCap_ZCrowdsale := __tmp__mintedTokensCap_ZCrowdsale;
        __snap___tmp__contribution_ZCrowdsale := __tmp__contribution_ZCrowdsale;
        __snap___tmp__cancelledList_ZCrowdsale := __tmp__cancelledList_ZCrowdsale;
        __snap___tmp__wallet_ZCrowdsale := __tmp__wallet_ZCrowdsale;
        __snap___tmp__withinRefundPeriod_ZCrowdsale := __tmp__withinRefundPeriod_ZCrowdsale;
        __snap___tmp__ETHtoZCOrate_ZCrowdsale := __tmp__ETHtoZCOrate_ZCrowdsale;
        __snap___tmp__weiRaised_ZCrowdsale := __tmp__weiRaised_ZCrowdsale;
        __snap___tmp__stopped_ZCrowdsale := __tmp__stopped_ZCrowdsale;
        __snap___tmp__wallet_ZebiCoinTempMgr := __tmp__wallet_ZebiCoinTempMgr;
        __snap___tmp__preSaleCSSC_ZebiCoinTempMgr := __tmp__preSaleCSSC_ZebiCoinTempMgr;
        __snap___tmp__tsc_ZebiCoinTempMgr := __tmp__tsc_ZebiCoinTempMgr;
        __snap___tmp__tokenDecimals_ZebiCoinTempMgr := __tmp__tokenDecimals_ZebiCoinTempMgr;
        __snap___tmp__preSaleCancelledList_ZebiCoinTempMgr := __tmp__preSaleCancelledList_ZebiCoinTempMgr;
        __snap___tmp__noncsAllocations_ZebiCoinTempMgr := __tmp__noncsAllocations_ZebiCoinTempMgr;
        __snap___tmp__withinRefundPeriod_ZebiCoinTempMgr := __tmp__withinRefundPeriod_ZebiCoinTempMgr;
        __snap___tmp__preSaleRefunds_ZebiCoinTempMgr := __tmp__preSaleRefunds_ZebiCoinTempMgr;
        __snap___tmp__token_ZebiMainCrowdsale := __tmp__token_ZebiMainCrowdsale;
        __snap___tmp__currentYearMinted_ZebiMainCrowdsale := __tmp__currentYearMinted_ZebiMainCrowdsale;
        __snap___tmp__calenderYearMintCap_ZebiMainCrowdsale := __tmp__calenderYearMintCap_ZebiMainCrowdsale;
        __snap___tmp__calenderYearStart_ZebiMainCrowdsale := __tmp__calenderYearStart_ZebiMainCrowdsale;
        __snap___tmp__calenderYearEnd_ZebiMainCrowdsale := __tmp__calenderYearEnd_ZebiMainCrowdsale;
        __snap___tmp__vestedMintStartTime_ZebiMainCrowdsale := __tmp__vestedMintStartTime_ZebiMainCrowdsale;
        __snap___tmp__zebiZCOShare_ZebiMainCrowdsale := __tmp__zebiZCOShare_ZebiMainCrowdsale;
        __snap___tmp__crowdsaleZCOCap_ZebiMainCrowdsale := __tmp__crowdsaleZCOCap_ZebiMainCrowdsale;
        __snap___tmp__transStartTime_ZebiMainCrowdsale := __tmp__transStartTime_ZebiMainCrowdsale;
        __snap___tmp__zcc_ZebiMainCrowdsale := __tmp__zcc_ZebiMainCrowdsale;
        __snap___tmp__tempMngr_ZebiMainCrowdsale := __tmp__tempMngr_ZebiMainCrowdsale;
        __snap___tmp__tokenDecimals_ZebiMainCrowdsale := __tmp__tokenDecimals_ZebiMainCrowdsale;
        __snap___tmp__startTime_ZebiMainCrowdsale := __tmp__startTime_ZebiMainCrowdsale;
        __snap___tmp__endTime_ZebiMainCrowdsale := __tmp__endTime_ZebiMainCrowdsale;
        __snap___tmp__goldListPeriod_ZebiMainCrowdsale := __tmp__goldListPeriod_ZebiMainCrowdsale;
        __snap___tmp__postGoldPeriod_ZebiMainCrowdsale := __tmp__postGoldPeriod_ZebiMainCrowdsale;
        __snap___tmp__minTransAmount_ZebiMainCrowdsale := __tmp__minTransAmount_ZebiMainCrowdsale;
        __snap___tmp__ethCap_ZebiMainCrowdsale := __tmp__ethCap_ZebiMainCrowdsale;
        __snap___tmp__mainContribution_ZebiMainCrowdsale := __tmp__mainContribution_ZebiMainCrowdsale;
        __snap___tmp__mainCancelledList_ZebiMainCrowdsale := __tmp__mainCancelledList_ZebiMainCrowdsale;
        __snap___tmp__goldPeriodCap_ZebiMainCrowdsale := __tmp__goldPeriodCap_ZebiMainCrowdsale;
        __snap___tmp__goldListPeriodFlag_ZebiMainCrowdsale := __tmp__goldListPeriodFlag_ZebiMainCrowdsale;
        __snap___tmp__goldListContribution_ZebiMainCrowdsale := __tmp__goldListContribution_ZebiMainCrowdsale;
        __snap___tmp__goldList_ZebiMainCrowdsale := __tmp__goldList_ZebiMainCrowdsale;
        __snap___tmp__kycAcceptedList_ZebiMainCrowdsale := __tmp__kycAcceptedList_ZebiMainCrowdsale;
        __snap___tmp__wallet_ZebiMainCrowdsale := __tmp__wallet_ZebiMainCrowdsale;
        __snap___tmp__withinRefundPeriod_ZebiMainCrowdsale := __tmp__withinRefundPeriod_ZebiMainCrowdsale;
        __snap___tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __snap___tmp__tokens_ZebiMainCrowdsale := __tmp__tokens_ZebiMainCrowdsale;
        __snap___tmp__weiAmount_ZebiMainCrowdsale := __tmp__weiAmount_ZebiMainCrowdsale;
        __snap___tmp__ETHtoZWeirate_ZebiMainCrowdsale := __tmp__ETHtoZWeirate_ZebiMainCrowdsale;
        __snap___tmp__mainWeiRaised_ZebiMainCrowdsale := __tmp__mainWeiRaised_ZebiMainCrowdsale;
        if (__tmp__Balance[from] >= amount)
        {
            call FallbackDispatch__fail(from, to, amount);
        }

        success := false;
        assume revert || gas < 0;
        __tmp__Balance := __snap___tmp__Balance;
        __tmp__DType := __snap___tmp__DType;
        __tmp__Alloc := __snap___tmp__Alloc;
        __tmp__balance_ADDR := __snap___tmp__balance_ADDR;
        __tmp__M_Ref_int_balances0 := __snap___tmp__M_Ref_int_balances0;
        __tmp__sum_balances0 := __snap___tmp__sum_balances0;
        __tmp__M_Ref_int_allowed1 := __snap___tmp__M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := __snap___tmp__M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := __snap___tmp__sum_allowed1;
        __tmp__M_Ref_int_contribution2 := __snap___tmp__M_Ref_int_contribution2;
        __tmp__sum_contribution2 := __snap___tmp__sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := __snap___tmp__M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := __snap___tmp__sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := __snap___tmp__M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := __snap___tmp__sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := __snap___tmp__M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := __snap___tmp__sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := __snap___tmp__M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := __snap___tmp__sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := __snap___tmp__M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := __snap___tmp__sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := __snap___tmp__M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := __snap___tmp__sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := __snap___tmp__M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := __snap___tmp__sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := __snap___tmp__M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := __snap___tmp__sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := __snap___tmp__M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := __snap___tmp__sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := __snap___tmp__M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := __snap___tmp__sum_preSaleRefundsInMainSale12;
        __tmp__Length := __snap___tmp__Length;
        __tmp__now := __snap___tmp__now;
        __tmp__owner_Ownable := __snap___tmp__owner_Ownable;
        __tmp__balances_BasicToken := __snap___tmp__balances_BasicToken;
        __tmp__totalSupply__BasicToken := __snap___tmp__totalSupply__BasicToken;
        __tmp__allowed_StandardToken := __snap___tmp__allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := __snap___tmp__mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := __snap___tmp__transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := __snap___tmp__name_ZebiCoin;
        __tmp__symbol_ZebiCoin := __snap___tmp__symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := __snap___tmp__decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := __snap___tmp__token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := __snap___tmp__tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := __snap___tmp__startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := __snap___tmp__endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := __snap___tmp__minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := __snap___tmp__mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := __snap___tmp__contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := __snap___tmp__cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := __snap___tmp__wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := __snap___tmp__withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := __snap___tmp__ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := __snap___tmp__weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := __snap___tmp__stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := __snap___tmp__wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := __snap___tmp__preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := __snap___tmp__tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := __snap___tmp__tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := __snap___tmp__preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := __snap___tmp__noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := __snap___tmp__withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := __snap___tmp__preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := __snap___tmp__token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := __snap___tmp__currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := __snap___tmp__calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := __snap___tmp__calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := __snap___tmp__calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := __snap___tmp__vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := __snap___tmp__zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := __snap___tmp__crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := __snap___tmp__transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := __snap___tmp__zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := __snap___tmp__tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := __snap___tmp__tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := __snap___tmp__startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := __snap___tmp__endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := __snap___tmp__goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := __snap___tmp__postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := __snap___tmp__minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := __snap___tmp__ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := __snap___tmp__mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := __snap___tmp__mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := __snap___tmp__goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := __snap___tmp__goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := __snap___tmp__goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := __snap___tmp__goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := __snap___tmp__kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := __snap___tmp__wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := __snap___tmp__withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := __snap___tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := __snap___tmp__tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := __snap___tmp__weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := __snap___tmp__ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := __snap___tmp__mainWeiRaised_ZebiMainCrowdsale;
        revert := false;
    }
    else
    {
        if (__tmp__Balance[from] >= amount)
        {
            call FallbackDispatch__fail(from, to, amount);
            success := true;
        }
        else
        {
            success := false;
        }

        assume !revert && gas >= 0;
    }
}



implementation send__success(from: Ref, to: Ref, amount: int) returns (success: bool)
{
  var __exception: bool;

    havoc __exception;
    if (__exception)
    {
        __tmp__Balance := Balance;
        __tmp__DType := DType;
        __tmp__Alloc := Alloc;
        __tmp__balance_ADDR := balance_ADDR;
        __tmp__M_Ref_int_balances0 := M_Ref_int_balances0;
        __tmp__sum_balances0 := sum_balances0;
        __tmp__M_Ref_int_allowed1 := M_Ref_int_allowed1;
        __tmp__M_Ref_Ref_allowed1 := M_Ref_Ref_allowed1;
        __tmp__sum_allowed1 := sum_allowed1;
        __tmp__M_Ref_int_contribution2 := M_Ref_int_contribution2;
        __tmp__sum_contribution2 := sum_contribution2;
        __tmp__M_Ref_bool_cancelledList3 := M_Ref_bool_cancelledList3;
        __tmp__sum_cancelledList3 := sum_cancelledList3;
        __tmp__M_Ref_bool_preSaleCancelledList4 := M_Ref_bool_preSaleCancelledList4;
        __tmp__sum_preSaleCancelledList4 := sum_preSaleCancelledList4;
        __tmp__M_Ref_int_noncsAllocations5 := M_Ref_int_noncsAllocations5;
        __tmp__sum_noncsAllocations5 := sum_noncsAllocations5;
        __tmp__M_Ref_int_preSaleRefunds6 := M_Ref_int_preSaleRefunds6;
        __tmp__sum_preSaleRefunds6 := sum_preSaleRefunds6;
        __tmp__M_Ref_int_mainContribution7 := M_Ref_int_mainContribution7;
        __tmp__sum_mainContribution7 := sum_mainContribution7;
        __tmp__M_Ref_bool_mainCancelledList8 := M_Ref_bool_mainCancelledList8;
        __tmp__sum_mainCancelledList8 := sum_mainCancelledList8;
        __tmp__M_Ref_int_goldListContribution9 := M_Ref_int_goldListContribution9;
        __tmp__sum_goldListContribution9 := sum_goldListContribution9;
        __tmp__M_Ref_bool_goldList10 := M_Ref_bool_goldList10;
        __tmp__sum_goldList10 := sum_goldList10;
        __tmp__M_Ref_bool_kycAcceptedList11 := M_Ref_bool_kycAcceptedList11;
        __tmp__sum_kycAcceptedList11 := sum_kycAcceptedList11;
        __tmp__M_Ref_int_preSaleRefundsInMainSale12 := M_Ref_int_preSaleRefundsInMainSale12;
        __tmp__sum_preSaleRefundsInMainSale12 := sum_preSaleRefundsInMainSale12;
        __tmp__Length := Length;
        __tmp__now := now;
        __tmp__owner_Ownable := owner_Ownable;
        __tmp__balances_BasicToken := balances_BasicToken;
        __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
        __tmp__allowed_StandardToken := allowed_StandardToken;
        __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
        __tmp__transferAllowed_MintableToken := transferAllowed_MintableToken;
        __tmp__name_ZebiCoin := name_ZebiCoin;
        __tmp__symbol_ZebiCoin := symbol_ZebiCoin;
        __tmp__decimals_ZebiCoin := decimals_ZebiCoin;
        __tmp__token_ZCrowdsale := token_ZCrowdsale;
        __tmp__tokenDecimals_ZCrowdsale := tokenDecimals_ZCrowdsale;
        __tmp__startTime_ZCrowdsale := startTime_ZCrowdsale;
        __tmp__endTime_ZCrowdsale := endTime_ZCrowdsale;
        __tmp__minTransAmount_ZCrowdsale := minTransAmount_ZCrowdsale;
        __tmp__mintedTokensCap_ZCrowdsale := mintedTokensCap_ZCrowdsale;
        __tmp__contribution_ZCrowdsale := contribution_ZCrowdsale;
        __tmp__cancelledList_ZCrowdsale := cancelledList_ZCrowdsale;
        __tmp__wallet_ZCrowdsale := wallet_ZCrowdsale;
        __tmp__withinRefundPeriod_ZCrowdsale := withinRefundPeriod_ZCrowdsale;
        __tmp__ETHtoZCOrate_ZCrowdsale := ETHtoZCOrate_ZCrowdsale;
        __tmp__weiRaised_ZCrowdsale := weiRaised_ZCrowdsale;
        __tmp__stopped_ZCrowdsale := stopped_ZCrowdsale;
        __tmp__wallet_ZebiCoinTempMgr := wallet_ZebiCoinTempMgr;
        __tmp__preSaleCSSC_ZebiCoinTempMgr := preSaleCSSC_ZebiCoinTempMgr;
        __tmp__tsc_ZebiCoinTempMgr := tsc_ZebiCoinTempMgr;
        __tmp__tokenDecimals_ZebiCoinTempMgr := tokenDecimals_ZebiCoinTempMgr;
        __tmp__preSaleCancelledList_ZebiCoinTempMgr := preSaleCancelledList_ZebiCoinTempMgr;
        __tmp__noncsAllocations_ZebiCoinTempMgr := noncsAllocations_ZebiCoinTempMgr;
        __tmp__withinRefundPeriod_ZebiCoinTempMgr := withinRefundPeriod_ZebiCoinTempMgr;
        __tmp__preSaleRefunds_ZebiCoinTempMgr := preSaleRefunds_ZebiCoinTempMgr;
        __tmp__token_ZebiMainCrowdsale := token_ZebiMainCrowdsale;
        __tmp__currentYearMinted_ZebiMainCrowdsale := currentYearMinted_ZebiMainCrowdsale;
        __tmp__calenderYearMintCap_ZebiMainCrowdsale := calenderYearMintCap_ZebiMainCrowdsale;
        __tmp__calenderYearStart_ZebiMainCrowdsale := calenderYearStart_ZebiMainCrowdsale;
        __tmp__calenderYearEnd_ZebiMainCrowdsale := calenderYearEnd_ZebiMainCrowdsale;
        __tmp__vestedMintStartTime_ZebiMainCrowdsale := vestedMintStartTime_ZebiMainCrowdsale;
        __tmp__zebiZCOShare_ZebiMainCrowdsale := zebiZCOShare_ZebiMainCrowdsale;
        __tmp__crowdsaleZCOCap_ZebiMainCrowdsale := crowdsaleZCOCap_ZebiMainCrowdsale;
        __tmp__transStartTime_ZebiMainCrowdsale := transStartTime_ZebiMainCrowdsale;
        __tmp__zcc_ZebiMainCrowdsale := zcc_ZebiMainCrowdsale;
        __tmp__tempMngr_ZebiMainCrowdsale := tempMngr_ZebiMainCrowdsale;
        __tmp__tokenDecimals_ZebiMainCrowdsale := tokenDecimals_ZebiMainCrowdsale;
        __tmp__startTime_ZebiMainCrowdsale := startTime_ZebiMainCrowdsale;
        __tmp__endTime_ZebiMainCrowdsale := endTime_ZebiMainCrowdsale;
        __tmp__goldListPeriod_ZebiMainCrowdsale := goldListPeriod_ZebiMainCrowdsale;
        __tmp__postGoldPeriod_ZebiMainCrowdsale := postGoldPeriod_ZebiMainCrowdsale;
        __tmp__minTransAmount_ZebiMainCrowdsale := minTransAmount_ZebiMainCrowdsale;
        __tmp__ethCap_ZebiMainCrowdsale := ethCap_ZebiMainCrowdsale;
        __tmp__mainContribution_ZebiMainCrowdsale := mainContribution_ZebiMainCrowdsale;
        __tmp__mainCancelledList_ZebiMainCrowdsale := mainCancelledList_ZebiMainCrowdsale;
        __tmp__goldPeriodCap_ZebiMainCrowdsale := goldPeriodCap_ZebiMainCrowdsale;
        __tmp__goldListPeriodFlag_ZebiMainCrowdsale := goldListPeriodFlag_ZebiMainCrowdsale;
        __tmp__goldListContribution_ZebiMainCrowdsale := goldListContribution_ZebiMainCrowdsale;
        __tmp__goldList_ZebiMainCrowdsale := goldList_ZebiMainCrowdsale;
        __tmp__kycAcceptedList_ZebiMainCrowdsale := kycAcceptedList_ZebiMainCrowdsale;
        __tmp__wallet_ZebiMainCrowdsale := wallet_ZebiMainCrowdsale;
        __tmp__withinRefundPeriod_ZebiMainCrowdsale := withinRefundPeriod_ZebiMainCrowdsale;
        __tmp__preSaleRefundsInMainSale_ZebiMainCrowdsale := preSaleRefundsInMainSale_ZebiMainCrowdsale;
        __tmp__tokens_ZebiMainCrowdsale := tokens_ZebiMainCrowdsale;
        __tmp__weiAmount_ZebiMainCrowdsale := weiAmount_ZebiMainCrowdsale;
        __tmp__ETHtoZWeirate_ZebiMainCrowdsale := ETHtoZWeirate_ZebiMainCrowdsale;
        __tmp__mainWeiRaised_ZebiMainCrowdsale := mainWeiRaised_ZebiMainCrowdsale;
        if (__tmp__Balance[from] >= amount)
        {
            call FallbackDispatch__fail(from, to, amount);
        }

        success := false;
        assume revert || gas < 0;
        revert := false;
    }
    else
    {
        if (Balance[from] >= amount)
        {
            call FallbackDispatch__success(from, to, amount);
            success := true;
        }
        else
        {
            success := false;
        }

        assume !revert && gas >= 0;
    }
}



implementation onlyOwner_pre__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    gas := gas - 19596;
    if (!(msgsender_MSG == __tmp__owner_Ownable[this]))
    {
        revert := true;
        return;
    }
}



implementation onlyOwner_pre__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    gas := gas - 19596;
    if (!(msgsender_MSG == owner_Ownable[this]))
    {
        revert := true;
        return;
    }
}



implementation canMint_pre__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    gas := gas - 1248;
    if (!!__tmp__mintingFinished_MintableToken[this])
    {
        revert := true;
        return;
    }
}



implementation canMint_pre__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    gas := gas - 1248;
    if (!!mintingFinished_MintableToken[this])
    {
        revert := true;
        return;
    }
}



implementation stopInEmergency_pre__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    if (!!__tmp__stopped_ZCrowdsale[this])
    {
        revert := true;
        return;
    }
}



implementation stopInEmergency_pre__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    if (!!stopped_ZCrowdsale[this])
    {
        revert := true;
        return;
    }
}



implementation inCancelledList_pre__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    gas := gas - 708;
    if (!__tmp__M_Ref_bool_cancelledList3[__tmp__cancelledList_ZCrowdsale[this]][msgsender_MSG])
    {
        revert := true;
        return;
    }
}



implementation inCancelledList_pre__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    gas := gas - 708;
    if (!M_Ref_bool_cancelledList3[cancelledList_ZCrowdsale[this]][msgsender_MSG])
    {
        revert := true;
        return;
    }
}



implementation inRefundPeriod_pre__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    gas := gas - 618;
    if (!__tmp__withinRefundPeriod_ZCrowdsale[this])
    {
        revert := true;
        return;
    }
}



implementation inRefundPeriod_pre__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    gas := gas - 618;
    if (!withinRefundPeriod_ZCrowdsale[this])
    {
        revert := true;
        return;
    }
}



implementation inPreSaleCancelledList_pre__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    gas := gas - 354;
    if (!__tmp__M_Ref_bool_preSaleCancelledList4[__tmp__preSaleCancelledList_ZebiCoinTempMgr[this]][msgsender_MSG])
    {
        revert := true;
        return;
    }
}



implementation inPreSaleCancelledList_pre__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    gas := gas - 354;
    if (!M_Ref_bool_preSaleCancelledList4[preSaleCancelledList_ZebiCoinTempMgr[this]][msgsender_MSG])
    {
        revert := true;
        return;
    }
}



implementation inRefundPeriod2_pre__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    gas := gas - 259;
    if (!__tmp__withinRefundPeriod_ZebiCoinTempMgr[this])
    {
        revert := true;
        return;
    }
}



implementation inRefundPeriod2_pre__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    gas := gas - 259;
    if (!withinRefundPeriod_ZebiCoinTempMgr[this])
    {
        revert := true;
        return;
    }
}



implementation inCancelledList1_pre__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    gas := gas - 354;
    if (!__tmp__M_Ref_bool_mainCancelledList8[__tmp__mainCancelledList_ZebiMainCrowdsale[this]][msgsender_MSG])
    {
        revert := true;
        return;
    }
}



implementation inCancelledList1_pre__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    gas := gas - 354;
    if (!M_Ref_bool_mainCancelledList8[mainCancelledList_ZebiMainCrowdsale[this]][msgsender_MSG])
    {
        revert := true;
        return;
    }
}



implementation inRefundPeriod1_pre__fail(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    gas := gas - 309;
    if (!__tmp__withinRefundPeriod_ZebiMainCrowdsale[this])
    {
        revert := true;
        return;
    }
}



implementation inRefundPeriod1_pre__success(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
    gas := gas - 309;
    if (!withinRefundPeriod_ZebiMainCrowdsale[this])
    {
        revert := true;
        return;
    }
}



implementation CorralChoice_Ownable(this: Ref)
{
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;
  var choice: int;
  var newOwner_s54: Ref;
  var tmpNow: int;

    havoc msgsender_MSG;
    havoc msgvalue_MSG;
    havoc choice;
    havoc newOwner_s54;
    havoc tmpNow;
    havoc gas;
    assume gas > 4000000 && gas <= 8000000;
    tmpNow := now;
    havoc now;
    assume now > tmpNow;
    assume msgsender_MSG != null;
    assume DType[msgsender_MSG] != Ownable;
    assume DType[msgsender_MSG] != ERC20Basic;
    assume DType[msgsender_MSG] != ERC20;
    assume DType[msgsender_MSG] != SafeMath;
    assume DType[msgsender_MSG] != BasicToken;
    assume DType[msgsender_MSG] != StandardToken;
    assume DType[msgsender_MSG] != MintableToken;
    assume DType[msgsender_MSG] != ZebiCoin;
    assume DType[msgsender_MSG] != ZCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinTempMgr;
    assume DType[msgsender_MSG] != ZebiMainCrowdsale;
    Alloc[msgsender_MSG] := true;
    if (choice == 1)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call transferOwnership_Ownable(this, msgsender_MSG, msgvalue_MSG, newOwner_s54);
    }
}



implementation CorralEntry_Ownable()
{
  var this: Ref;
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;

    assume null == 0;
    call this := FreshRefGenerator__success();
    assume now >= 0;
    assume DType[this] == Ownable
       || DType[this] == MintableToken
       || DType[this] == ZebiCoin
       || DType[this] == ZCrowdsale
       || DType[this] == ZebiCoinCrowdsale
       || DType[this] == ZebiCoinTempMgr
       || DType[this] == ZebiMainCrowdsale;
    gas := gas - 53000;
    call Ownable_Ownable(this, msgsender_MSG, msgvalue_MSG);
    assume !revert && gas >= 0;
    while (true)
    {
        call CorralChoice_Ownable(this);
    }
}



implementation CorralChoice_ERC20Basic(this: Ref)
{
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;
  var choice: int;
  var __ret_0_totalSupply: int;
  var who_s67: Ref;
  var __ret_0_balanceOf: int;
  var to_s76: Ref;
  var value_s76: int;
  var __ret_0_transfer: bool;
  var tmpNow: int;

    havoc msgsender_MSG;
    havoc msgvalue_MSG;
    havoc choice;
    havoc __ret_0_totalSupply;
    havoc who_s67;
    havoc __ret_0_balanceOf;
    havoc to_s76;
    havoc value_s76;
    havoc __ret_0_transfer;
    havoc tmpNow;
    havoc gas;
    assume gas > 4000000 && gas <= 8000000;
    tmpNow := now;
    havoc now;
    assume now > tmpNow;
    assume msgsender_MSG != null;
    assume DType[msgsender_MSG] != Ownable;
    assume DType[msgsender_MSG] != ERC20Basic;
    assume DType[msgsender_MSG] != ERC20;
    assume DType[msgsender_MSG] != SafeMath;
    assume DType[msgsender_MSG] != BasicToken;
    assume DType[msgsender_MSG] != StandardToken;
    assume DType[msgsender_MSG] != MintableToken;
    assume DType[msgsender_MSG] != ZebiCoin;
    assume DType[msgsender_MSG] != ZCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinTempMgr;
    assume DType[msgsender_MSG] != ZebiMainCrowdsale;
    Alloc[msgsender_MSG] := true;
    if (choice == 3)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_totalSupply := totalSupply_ERC20Basic(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 2)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_balanceOf := balanceOf_ERC20Basic(this, msgsender_MSG, msgvalue_MSG, who_s67);
    }
    else if (choice == 1)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_transfer := transfer_ERC20Basic(this, msgsender_MSG, msgvalue_MSG, to_s76, value_s76);
    }
}



implementation CorralEntry_ERC20Basic()
{
  var this: Ref;
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;

    assume null == 0;
    call this := FreshRefGenerator__success();
    assume now >= 0;
    assume DType[this] == ERC20Basic
       || DType[this] == ERC20
       || DType[this] == BasicToken
       || DType[this] == StandardToken
       || DType[this] == MintableToken
       || DType[this] == ZebiCoin;
    gas := gas - 53000;
    call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
    assume !revert && gas >= 0;
    while (true)
    {
        call CorralChoice_ERC20Basic(this);
    }
}



implementation CorralChoice_ERC20(this: Ref)
{
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;
  var choice: int;
  var __ret_0_totalSupply: int;
  var who_s67: Ref;
  var __ret_0_balanceOf: int;
  var to_s76: Ref;
  var value_s76: int;
  var __ret_0_transfer: bool;
  var owner_s96: Ref;
  var spender_s96: Ref;
  var __ret_0_allowance: int;
  var from_s107: Ref;
  var to_s107: Ref;
  var value_s107: int;
  var __ret_0_transferFrom: bool;
  var spender_s116: Ref;
  var value_s116: int;
  var __ret_0_approve: bool;
  var tmpNow: int;

    havoc msgsender_MSG;
    havoc msgvalue_MSG;
    havoc choice;
    havoc __ret_0_totalSupply;
    havoc who_s67;
    havoc __ret_0_balanceOf;
    havoc to_s76;
    havoc value_s76;
    havoc __ret_0_transfer;
    havoc owner_s96;
    havoc spender_s96;
    havoc __ret_0_allowance;
    havoc from_s107;
    havoc to_s107;
    havoc value_s107;
    havoc __ret_0_transferFrom;
    havoc spender_s116;
    havoc value_s116;
    havoc __ret_0_approve;
    havoc tmpNow;
    havoc gas;
    assume gas > 4000000 && gas <= 8000000;
    tmpNow := now;
    havoc now;
    assume now > tmpNow;
    assume msgsender_MSG != null;
    assume DType[msgsender_MSG] != Ownable;
    assume DType[msgsender_MSG] != ERC20Basic;
    assume DType[msgsender_MSG] != ERC20;
    assume DType[msgsender_MSG] != SafeMath;
    assume DType[msgsender_MSG] != BasicToken;
    assume DType[msgsender_MSG] != StandardToken;
    assume DType[msgsender_MSG] != MintableToken;
    assume DType[msgsender_MSG] != ZebiCoin;
    assume DType[msgsender_MSG] != ZCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinTempMgr;
    assume DType[msgsender_MSG] != ZebiMainCrowdsale;
    Alloc[msgsender_MSG] := true;
    if (choice == 6)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_totalSupply := totalSupply_ERC20Basic(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 5)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_balanceOf := balanceOf_ERC20Basic(this, msgsender_MSG, msgvalue_MSG, who_s67);
    }
    else if (choice == 4)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_transfer := transfer_ERC20Basic(this, msgsender_MSG, msgvalue_MSG, to_s76, value_s76);
    }
    else if (choice == 3)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_allowance := allowance_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s96, spender_s96);
    }
    else if (choice == 2)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_transferFrom := transferFrom_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s107, to_s107, value_s107);
    }
    else if (choice == 1)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_approve := approve_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s116, value_s116);
    }
}



implementation CorralEntry_ERC20()
{
  var this: Ref;
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;

    assume null == 0;
    call this := FreshRefGenerator__success();
    assume now >= 0;
    assume DType[this] == ERC20
       || DType[this] == StandardToken
       || DType[this] == MintableToken
       || DType[this] == ZebiCoin;
    gas := gas - 53000;
    call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
    assume !revert && gas >= 0;
    while (true)
    {
        call CorralChoice_ERC20(this);
    }
}



implementation CorralChoice_SafeMath(this: Ref)
{
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;
  var choice: int;
  var tmpNow: int;

    havoc msgsender_MSG;
    havoc msgvalue_MSG;
    havoc choice;
    havoc tmpNow;
    havoc gas;
    assume gas > 4000000 && gas <= 8000000;
    tmpNow := now;
    havoc now;
    assume now > tmpNow;
    assume msgsender_MSG != null;
    assume DType[msgsender_MSG] != Ownable;
    assume DType[msgsender_MSG] != ERC20Basic;
    assume DType[msgsender_MSG] != ERC20;
    assume DType[msgsender_MSG] != SafeMath;
    assume DType[msgsender_MSG] != BasicToken;
    assume DType[msgsender_MSG] != StandardToken;
    assume DType[msgsender_MSG] != MintableToken;
    assume DType[msgsender_MSG] != ZebiCoin;
    assume DType[msgsender_MSG] != ZCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinTempMgr;
    assume DType[msgsender_MSG] != ZebiMainCrowdsale;
    Alloc[msgsender_MSG] := true;
}



implementation CorralEntry_SafeMath()
{
  var this: Ref;
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;

    assume null == 0;
    call this := FreshRefGenerator__success();
    assume now >= 0;
    assume DType[this] == SafeMath;
    gas := gas - 53000;
    call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
    assume !revert && gas >= 0;
    while (true)
    {
        call CorralChoice_SafeMath(this);
    }
}



implementation CorralChoice_BasicToken(this: Ref)
{
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;
  var choice: int;
  var __ret_0_totalSupply: int;
  var _owner_s261: Ref;
  var balance_s261: int;
  var _to_s249: Ref;
  var _value_s249: int;
  var __ret_0_transfer: bool;
  var tmpNow: int;

    havoc msgsender_MSG;
    havoc msgvalue_MSG;
    havoc choice;
    havoc __ret_0_totalSupply;
    havoc _owner_s261;
    havoc balance_s261;
    havoc _to_s249;
    havoc _value_s249;
    havoc __ret_0_transfer;
    havoc tmpNow;
    havoc gas;
    assume gas > 4000000 && gas <= 8000000;
    tmpNow := now;
    havoc now;
    assume now > tmpNow;
    assume msgsender_MSG != null;
    assume DType[msgsender_MSG] != Ownable;
    assume DType[msgsender_MSG] != ERC20Basic;
    assume DType[msgsender_MSG] != ERC20;
    assume DType[msgsender_MSG] != SafeMath;
    assume DType[msgsender_MSG] != BasicToken;
    assume DType[msgsender_MSG] != StandardToken;
    assume DType[msgsender_MSG] != MintableToken;
    assume DType[msgsender_MSG] != ZebiCoin;
    assume DType[msgsender_MSG] != ZCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinTempMgr;
    assume DType[msgsender_MSG] != ZebiMainCrowdsale;
    Alloc[msgsender_MSG] := true;
    if (choice == 3)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 2)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call balance_s261 := balanceOf_BasicToken(this, msgsender_MSG, msgvalue_MSG, _owner_s261);
    }
    else if (choice == 1)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_transfer := transfer_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s249, _value_s249);
    }
}



implementation CorralEntry_BasicToken()
{
  var this: Ref;
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;

    assume null == 0;
    call this := FreshRefGenerator__success();
    assume now >= 0;
    assume DType[this] == BasicToken
       || DType[this] == StandardToken
       || DType[this] == MintableToken
       || DType[this] == ZebiCoin;
    gas := gas - 53000;
    call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
    assume !revert && gas >= 0;
    while (true)
    {
        call CorralChoice_BasicToken(this);
    }
}



implementation CorralChoice_StandardToken(this: Ref)
{
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;
  var choice: int;
  var __ret_0_totalSupply: int;
  var _owner_s261: Ref;
  var balance_s261: int;
  var _to_s249: Ref;
  var _value_s249: int;
  var __ret_0_transfer: bool;
  var _owner_s402: Ref;
  var _spender_s402: Ref;
  var __ret_0_allowance: int;
  var _from_s358: Ref;
  var _to_s358: Ref;
  var _value_s358: int;
  var __ret_0_transferFrom: bool;
  var _spender_s386: Ref;
  var _value_s386: int;
  var __ret_0_approve: bool;
  var _spender_s443: Ref;
  var _addedValue_s443: int;
  var __ret_0_increaseApproval: bool;
  var _spender_s503: Ref;
  var _subtractedValue_s503: int;
  var __ret_0_decreaseApproval: bool;
  var tmpNow: int;

    havoc msgsender_MSG;
    havoc msgvalue_MSG;
    havoc choice;
    havoc __ret_0_totalSupply;
    havoc _owner_s261;
    havoc balance_s261;
    havoc _to_s249;
    havoc _value_s249;
    havoc __ret_0_transfer;
    havoc _owner_s402;
    havoc _spender_s402;
    havoc __ret_0_allowance;
    havoc _from_s358;
    havoc _to_s358;
    havoc _value_s358;
    havoc __ret_0_transferFrom;
    havoc _spender_s386;
    havoc _value_s386;
    havoc __ret_0_approve;
    havoc _spender_s443;
    havoc _addedValue_s443;
    havoc __ret_0_increaseApproval;
    havoc _spender_s503;
    havoc _subtractedValue_s503;
    havoc __ret_0_decreaseApproval;
    havoc tmpNow;
    havoc gas;
    assume gas > 4000000 && gas <= 8000000;
    tmpNow := now;
    havoc now;
    assume now > tmpNow;
    assume msgsender_MSG != null;
    assume DType[msgsender_MSG] != Ownable;
    assume DType[msgsender_MSG] != ERC20Basic;
    assume DType[msgsender_MSG] != ERC20;
    assume DType[msgsender_MSG] != SafeMath;
    assume DType[msgsender_MSG] != BasicToken;
    assume DType[msgsender_MSG] != StandardToken;
    assume DType[msgsender_MSG] != MintableToken;
    assume DType[msgsender_MSG] != ZebiCoin;
    assume DType[msgsender_MSG] != ZCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinTempMgr;
    assume DType[msgsender_MSG] != ZebiMainCrowdsale;
    Alloc[msgsender_MSG] := true;
    if (choice == 8)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 7)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call balance_s261 := balanceOf_BasicToken(this, msgsender_MSG, msgvalue_MSG, _owner_s261);
    }
    else if (choice == 6)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_transfer := transfer_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s249, _value_s249);
    }
    else if (choice == 5)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_allowance := allowance_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s402, _spender_s402);
    }
    else if (choice == 4)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_transferFrom := transferFrom_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s358, _to_s358, _value_s358);
    }
    else if (choice == 3)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_approve := approve_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s386, _value_s386);
    }
    else if (choice == 2)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_increaseApproval := increaseApproval_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s443, _addedValue_s443);
    }
    else if (choice == 1)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_decreaseApproval := decreaseApproval_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s503, _subtractedValue_s503);
    }
}



implementation CorralEntry_StandardToken()
{
  var this: Ref;
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;

    assume null == 0;
    call this := FreshRefGenerator__success();
    assume now >= 0;
    assume DType[this] == StandardToken
       || DType[this] == MintableToken
       || DType[this] == ZebiCoin;
    gas := gas - 53000;
    call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
    assume !revert && gas >= 0;
    while (true)
    {
        call CorralChoice_StandardToken(this);
    }
}



implementation CorralChoice_MintableToken(this: Ref)
{
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;
  var choice: int;
  var newOwner_s54: Ref;
  var __ret_0_totalSupply: int;
  var _owner_s261: Ref;
  var balance_s261: int;
  var _to_s704: Ref;
  var _value_s704: int;
  var __ret_0_transfer: bool;
  var _owner_s402: Ref;
  var _spender_s402: Ref;
  var __ret_0_allowance: int;
  var _from_s730: Ref;
  var _to_s730: Ref;
  var _value_s730: int;
  var __ret_0_transferFrom: bool;
  var _spender_s386: Ref;
  var _value_s386: int;
  var __ret_0_approve: bool;
  var _spender_s443: Ref;
  var _addedValue_s443: int;
  var __ret_0_increaseApproval: bool;
  var _spender_s503: Ref;
  var _subtractedValue_s503: int;
  var __ret_0_decreaseApproval: bool;
  var _to_s584: Ref;
  var _amount_s584: int;
  var __ret_0_mint: bool;
  var __ret_0_finishMinting: bool;
  var __ret_0_resumeMinting: bool;
  var _from_s661: Ref;
  var success_s661: bool;
  var tmpNow: int;

    havoc msgsender_MSG;
    havoc msgvalue_MSG;
    havoc choice;
    havoc newOwner_s54;
    havoc __ret_0_totalSupply;
    havoc _owner_s261;
    havoc balance_s261;
    havoc _to_s704;
    havoc _value_s704;
    havoc __ret_0_transfer;
    havoc _owner_s402;
    havoc _spender_s402;
    havoc __ret_0_allowance;
    havoc _from_s730;
    havoc _to_s730;
    havoc _value_s730;
    havoc __ret_0_transferFrom;
    havoc _spender_s386;
    havoc _value_s386;
    havoc __ret_0_approve;
    havoc _spender_s443;
    havoc _addedValue_s443;
    havoc __ret_0_increaseApproval;
    havoc _spender_s503;
    havoc _subtractedValue_s503;
    havoc __ret_0_decreaseApproval;
    havoc _to_s584;
    havoc _amount_s584;
    havoc __ret_0_mint;
    havoc __ret_0_finishMinting;
    havoc __ret_0_resumeMinting;
    havoc _from_s661;
    havoc success_s661;
    havoc tmpNow;
    havoc gas;
    assume gas > 4000000 && gas <= 8000000;
    tmpNow := now;
    havoc now;
    assume now > tmpNow;
    assume msgsender_MSG != null;
    assume DType[msgsender_MSG] != Ownable;
    assume DType[msgsender_MSG] != ERC20Basic;
    assume DType[msgsender_MSG] != ERC20;
    assume DType[msgsender_MSG] != SafeMath;
    assume DType[msgsender_MSG] != BasicToken;
    assume DType[msgsender_MSG] != StandardToken;
    assume DType[msgsender_MSG] != MintableToken;
    assume DType[msgsender_MSG] != ZebiCoin;
    assume DType[msgsender_MSG] != ZCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinTempMgr;
    assume DType[msgsender_MSG] != ZebiMainCrowdsale;
    Alloc[msgsender_MSG] := true;
    if (choice == 15)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call transferOwnership_Ownable(this, msgsender_MSG, msgvalue_MSG, newOwner_s54);
    }
    else if (choice == 14)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 13)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call balance_s261 := balanceOf_BasicToken(this, msgsender_MSG, msgvalue_MSG, _owner_s261);
    }
    else if (choice == 12)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_transfer := transfer_MintableToken(this, msgsender_MSG, msgvalue_MSG, _to_s704, _value_s704);
    }
    else if (choice == 11)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_allowance := allowance_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s402, _spender_s402);
    }
    else if (choice == 10)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_transferFrom := transferFrom_MintableToken(this, msgsender_MSG, msgvalue_MSG, _from_s730, _to_s730, _value_s730);
    }
    else if (choice == 9)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_approve := approve_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s386, _value_s386);
    }
    else if (choice == 8)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_increaseApproval := increaseApproval_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s443, _addedValue_s443);
    }
    else if (choice == 7)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_decreaseApproval := decreaseApproval_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s503, _subtractedValue_s503);
    }
    else if (choice == 6)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_mint := mint_MintableToken(this, msgsender_MSG, msgvalue_MSG, _to_s584, _amount_s584);
    }
    else if (choice == 5)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_finishMinting := finishMinting_MintableToken(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 4)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_resumeMinting := resumeMinting_MintableToken(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 3)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call success_s661 := burn_MintableToken(this, msgsender_MSG, msgvalue_MSG, _from_s661);
    }
    else if (choice == 2)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call startTransfer_MintableToken(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 1)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call endTransfer_MintableToken(this, msgsender_MSG, msgvalue_MSG);
    }
}



implementation CorralEntry_MintableToken()
{
  var this: Ref;
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;

    assume null == 0;
    call this := FreshRefGenerator__success();
    assume now >= 0;
    assume DType[this] == MintableToken || DType[this] == ZebiCoin;
    gas := gas - 53000;
    call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
    assume !revert && gas >= 0;
    while (true)
    {
        call CorralChoice_MintableToken(this);
    }
}



implementation CorralChoice_ZebiCoin(this: Ref)
{
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;
  var choice: int;
  var newOwner_s54: Ref;
  var __ret_0_totalSupply: int;
  var _owner_s261: Ref;
  var balance_s261: int;
  var _to_s704: Ref;
  var _value_s704: int;
  var __ret_0_transfer: bool;
  var _owner_s402: Ref;
  var _spender_s402: Ref;
  var __ret_0_allowance: int;
  var _from_s730: Ref;
  var _to_s730: Ref;
  var _value_s730: int;
  var __ret_0_transferFrom: bool;
  var _spender_s386: Ref;
  var _value_s386: int;
  var __ret_0_approve: bool;
  var _spender_s443: Ref;
  var _addedValue_s443: int;
  var __ret_0_increaseApproval: bool;
  var _spender_s503: Ref;
  var _subtractedValue_s503: int;
  var __ret_0_decreaseApproval: bool;
  var _to_s584: Ref;
  var _amount_s584: int;
  var __ret_0_mint: bool;
  var __ret_0_finishMinting: bool;
  var __ret_0_resumeMinting: bool;
  var _from_s661: Ref;
  var success_s661: bool;
  var tmpNow: int;

    havoc msgsender_MSG;
    havoc msgvalue_MSG;
    havoc choice;
    havoc newOwner_s54;
    havoc __ret_0_totalSupply;
    havoc _owner_s261;
    havoc balance_s261;
    havoc _to_s704;
    havoc _value_s704;
    havoc __ret_0_transfer;
    havoc _owner_s402;
    havoc _spender_s402;
    havoc __ret_0_allowance;
    havoc _from_s730;
    havoc _to_s730;
    havoc _value_s730;
    havoc __ret_0_transferFrom;
    havoc _spender_s386;
    havoc _value_s386;
    havoc __ret_0_approve;
    havoc _spender_s443;
    havoc _addedValue_s443;
    havoc __ret_0_increaseApproval;
    havoc _spender_s503;
    havoc _subtractedValue_s503;
    havoc __ret_0_decreaseApproval;
    havoc _to_s584;
    havoc _amount_s584;
    havoc __ret_0_mint;
    havoc __ret_0_finishMinting;
    havoc __ret_0_resumeMinting;
    havoc _from_s661;
    havoc success_s661;
    havoc tmpNow;
    havoc gas;
    assume gas > 4000000 && gas <= 8000000;
    tmpNow := now;
    havoc now;
    assume now > tmpNow;
    assume msgsender_MSG != null;
    assume DType[msgsender_MSG] != Ownable;
    assume DType[msgsender_MSG] != ERC20Basic;
    assume DType[msgsender_MSG] != ERC20;
    assume DType[msgsender_MSG] != SafeMath;
    assume DType[msgsender_MSG] != BasicToken;
    assume DType[msgsender_MSG] != StandardToken;
    assume DType[msgsender_MSG] != MintableToken;
    assume DType[msgsender_MSG] != ZebiCoin;
    assume DType[msgsender_MSG] != ZCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinTempMgr;
    assume DType[msgsender_MSG] != ZebiMainCrowdsale;
    Alloc[msgsender_MSG] := true;
    if (choice == 15)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call transferOwnership_Ownable(this, msgsender_MSG, msgvalue_MSG, newOwner_s54);
    }
    else if (choice == 14)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 13)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call balance_s261 := balanceOf_BasicToken(this, msgsender_MSG, msgvalue_MSG, _owner_s261);
    }
    else if (choice == 12)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_transfer := transfer_MintableToken(this, msgsender_MSG, msgvalue_MSG, _to_s704, _value_s704);
    }
    else if (choice == 11)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_allowance := allowance_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s402, _spender_s402);
    }
    else if (choice == 10)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_transferFrom := transferFrom_MintableToken(this, msgsender_MSG, msgvalue_MSG, _from_s730, _to_s730, _value_s730);
    }
    else if (choice == 9)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_approve := approve_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s386, _value_s386);
    }
    else if (choice == 8)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_increaseApproval := increaseApproval_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s443, _addedValue_s443);
    }
    else if (choice == 7)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_decreaseApproval := decreaseApproval_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s503, _subtractedValue_s503);
    }
    else if (choice == 6)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_mint := mint_MintableToken(this, msgsender_MSG, msgvalue_MSG, _to_s584, _amount_s584);
    }
    else if (choice == 5)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_finishMinting := finishMinting_MintableToken(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 4)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_resumeMinting := resumeMinting_MintableToken(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 3)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call success_s661 := burn_MintableToken(this, msgsender_MSG, msgvalue_MSG, _from_s661);
    }
    else if (choice == 2)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call startTransfer_MintableToken(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 1)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call endTransfer_MintableToken(this, msgsender_MSG, msgvalue_MSG);
    }
}



implementation CorralEntry_ZebiCoin()
{
  var this: Ref;
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;

    assume null == 0;
    call this := FreshRefGenerator__success();
    assume now >= 0;
    assume DType[this] == ZebiCoin;
    gas := gas - 53000;
    call ZebiCoin_ZebiCoin__success(this, msgsender_MSG, msgvalue_MSG);
    assume !revert && gas >= 0;
    while (true)
    {
        call CorralChoice_ZebiCoin(this);
    }
}



implementation CorralChoice_ZCrowdsale(this: Ref)
{
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;
  var choice: int;
  var newOwner_s54: Ref;
  var _startTime_s914: int;
  var _endTime_s914: int;
  var _ETHtoZCOrate_s914: int;
  var _wallet_s914: Ref;
  var _minTransAmount_s914: int;
  var _mintedTokensCap_s914: int;
  var __ret_0_finishMint: bool;
  var __ret_0_resumeMint: bool;
  var owner_s989: Ref;
  var participant_s1001: Ref;
  var __ret_0_viewCancelledList: bool;
  var beneficiary_s1067: Ref;
  var weiAmount_s1082: int;
  var __ret_0_getTokenAmount: int;
  var participant_s1145: Ref;
  var __ret_0_viewContribution: int;
  var _from_s1308: Ref;
  var _value_s1337: int;
  var _participant_s1355: Ref;
  var success_s1355: bool;
  var tmpNow: int;

    havoc msgsender_MSG;
    havoc msgvalue_MSG;
    havoc choice;
    havoc newOwner_s54;
    havoc _startTime_s914;
    havoc _endTime_s914;
    havoc _ETHtoZCOrate_s914;
    havoc _wallet_s914;
    havoc _minTransAmount_s914;
    havoc _mintedTokensCap_s914;
    havoc __ret_0_finishMint;
    havoc __ret_0_resumeMint;
    havoc owner_s989;
    havoc participant_s1001;
    havoc __ret_0_viewCancelledList;
    havoc beneficiary_s1067;
    havoc weiAmount_s1082;
    havoc __ret_0_getTokenAmount;
    havoc participant_s1145;
    havoc __ret_0_viewContribution;
    havoc _from_s1308;
    havoc _value_s1337;
    havoc _participant_s1355;
    havoc success_s1355;
    havoc tmpNow;
    havoc gas;
    assume gas > 4000000 && gas <= 8000000;
    tmpNow := now;
    havoc now;
    assume now > tmpNow;
    assume msgsender_MSG != null;
    assume DType[msgsender_MSG] != Ownable;
    assume DType[msgsender_MSG] != ERC20Basic;
    assume DType[msgsender_MSG] != ERC20;
    assume DType[msgsender_MSG] != SafeMath;
    assume DType[msgsender_MSG] != BasicToken;
    assume DType[msgsender_MSG] != StandardToken;
    assume DType[msgsender_MSG] != MintableToken;
    assume DType[msgsender_MSG] != ZebiCoin;
    assume DType[msgsender_MSG] != ZCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinTempMgr;
    assume DType[msgsender_MSG] != ZebiMainCrowdsale;
    Alloc[msgsender_MSG] := true;
    if (choice == 19)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call transferOwnership_Ownable(this, msgsender_MSG, msgvalue_MSG, newOwner_s54);
    }
    else if (choice == 18)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call startTransfer_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 17)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call endTransfer_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 16)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_finishMint := finishMint_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 15)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_resumeMint := resumeMint_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 14)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call transferTokenOwnership_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG, owner_s989);
    }
    else if (choice == 13)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_viewCancelledList := viewCancelledList_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG, participant_s1001);
    }
    else if (choice == 12)
    {
        gas := gas - 21000;
        call buyTokens_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG, beneficiary_s1067);
    }
    else if (choice == 11)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_getTokenAmount := getTokenAmount_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG, weiAmount_s1082);
    }
    else if (choice == 10)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call enableRefundPeriod_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 9)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call disableRefundPeriod_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 8)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call emergencyStop_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 7)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call release_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 6)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_viewContribution := viewContribution_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG, participant_s1145);
    }
    else if (choice == 5)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call refund_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 4)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call forcedRefund_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG, _from_s1308);
    }
    else if (choice == 3)
    {
        gas := gas - 21000;
        call takeEth_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 2)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call withdraw_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG, _value_s1337);
    }
    else if (choice == 1)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call success_s1355 := addCancellation_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG, _participant_s1355);
    }
}



implementation CorralEntry_ZCrowdsale()
{
  var this: Ref;
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;
  var _startTime_s914: int;
  var _endTime_s914: int;
  var _ETHtoZCOrate_s914: int;
  var _wallet_s914: Ref;
  var _minTransAmount_s914: int;
  var _mintedTokensCap_s914: int;

    assume null == 0;
    call this := FreshRefGenerator__success();
    assume now >= 0;
    assume DType[this] == ZCrowdsale || DType[this] == ZebiCoinCrowdsale;
    gas := gas - 53000;
    call ZCrowdsale_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG, _startTime_s914, _endTime_s914, _ETHtoZCOrate_s914, _wallet_s914, _minTransAmount_s914, _mintedTokensCap_s914);
    assume !revert && gas >= 0;
    while (true)
    {
        call CorralChoice_ZCrowdsale(this);
    }
}



implementation CorralChoice_ZebiCoinCrowdsale(this: Ref)
{
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;
  var choice: int;
  var newOwner_s54: Ref;
  var _startTime_s914: int;
  var _endTime_s914: int;
  var _ETHtoZCOrate_s914: int;
  var _wallet_s914: Ref;
  var _minTransAmount_s914: int;
  var _mintedTokensCap_s914: int;
  var __ret_0_finishMint: bool;
  var __ret_0_resumeMint: bool;
  var owner_s989: Ref;
  var participant_s1001: Ref;
  var __ret_0_viewCancelledList: bool;
  var beneficiary_s1067: Ref;
  var weiAmount_s1082: int;
  var __ret_0_getTokenAmount: int;
  var participant_s1145: Ref;
  var __ret_0_viewContribution: int;
  var _from_s1308: Ref;
  var _value_s1337: int;
  var _participant_s1355: Ref;
  var success_s1355: bool;
  var _startTime_s1382: int;
  var _endTime_s1382: int;
  var _rate_s1382: int;
  var _wallet_s1382: Ref;
  var _minTransAmount_s1382: int;
  var _mintedTokensCap_s1382: int;
  var tmpNow: int;

    havoc msgsender_MSG;
    havoc msgvalue_MSG;
    havoc choice;
    havoc newOwner_s54;
    havoc _startTime_s914;
    havoc _endTime_s914;
    havoc _ETHtoZCOrate_s914;
    havoc _wallet_s914;
    havoc _minTransAmount_s914;
    havoc _mintedTokensCap_s914;
    havoc __ret_0_finishMint;
    havoc __ret_0_resumeMint;
    havoc owner_s989;
    havoc participant_s1001;
    havoc __ret_0_viewCancelledList;
    havoc beneficiary_s1067;
    havoc weiAmount_s1082;
    havoc __ret_0_getTokenAmount;
    havoc participant_s1145;
    havoc __ret_0_viewContribution;
    havoc _from_s1308;
    havoc _value_s1337;
    havoc _participant_s1355;
    havoc success_s1355;
    havoc _startTime_s1382;
    havoc _endTime_s1382;
    havoc _rate_s1382;
    havoc _wallet_s1382;
    havoc _minTransAmount_s1382;
    havoc _mintedTokensCap_s1382;
    havoc tmpNow;
    havoc gas;
    assume gas > 4000000 && gas <= 8000000;
    tmpNow := now;
    havoc now;
    assume now > tmpNow;
    assume msgsender_MSG != null;
    assume DType[msgsender_MSG] != Ownable;
    assume DType[msgsender_MSG] != ERC20Basic;
    assume DType[msgsender_MSG] != ERC20;
    assume DType[msgsender_MSG] != SafeMath;
    assume DType[msgsender_MSG] != BasicToken;
    assume DType[msgsender_MSG] != StandardToken;
    assume DType[msgsender_MSG] != MintableToken;
    assume DType[msgsender_MSG] != ZebiCoin;
    assume DType[msgsender_MSG] != ZCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinTempMgr;
    assume DType[msgsender_MSG] != ZebiMainCrowdsale;
    Alloc[msgsender_MSG] := true;
    if (choice == 19)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call transferOwnership_Ownable(this, msgsender_MSG, msgvalue_MSG, newOwner_s54);
    }
    else if (choice == 18)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call startTransfer_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 17)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call endTransfer_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 16)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_finishMint := finishMint_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 15)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_resumeMint := resumeMint_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 14)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call transferTokenOwnership_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG, owner_s989);
    }
    else if (choice == 13)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_viewCancelledList := viewCancelledList_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG, participant_s1001);
    }
    else if (choice == 12)
    {
        gas := gas - 21000;
        call buyTokens_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG, beneficiary_s1067);
    }
    else if (choice == 11)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_getTokenAmount := getTokenAmount_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG, weiAmount_s1082);
    }
    else if (choice == 10)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call enableRefundPeriod_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 9)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call disableRefundPeriod_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 8)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call emergencyStop_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 7)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call release_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 6)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_viewContribution := viewContribution_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG, participant_s1145);
    }
    else if (choice == 5)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call refund_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 4)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call forcedRefund_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG, _from_s1308);
    }
    else if (choice == 3)
    {
        gas := gas - 21000;
        call takeEth_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 2)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call withdraw_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG, _value_s1337);
    }
    else if (choice == 1)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call success_s1355 := addCancellation_ZCrowdsale(this, msgsender_MSG, msgvalue_MSG, _participant_s1355);
    }
}



implementation main()
{
  var this: Ref;
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;
  var _startTime_s1382: int;
  var _endTime_s1382: int;
  var _rate_s1382: int;
  var _wallet_s1382: Ref;
  var _minTransAmount_s1382: int;
  var _mintedTokensCap_s1382: int;

    assume null == 0;
    call this := FreshRefGenerator__success();
    assume now >= 0;
    assume DType[this] == ZebiCoinCrowdsale;
    gas := gas - 53000;
    call ZebiCoinCrowdsale_ZebiCoinCrowdsale(this, msgsender_MSG, msgvalue_MSG, _startTime_s1382, _endTime_s1382, _rate_s1382, _wallet_s1382, _minTransAmount_s1382, _mintedTokensCap_s1382);
    assume !revert && gas >= 0;
    while (true)
    {
        call CorralChoice_ZebiCoinCrowdsale(this);
    }
}



implementation CorralChoice_ZebiCoinTempMgr(this: Ref)
{
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;
  var choice: int;
  var newOwner_s54: Ref;
  var __ret_0_finishMint: bool;
  var __ret_0_resumeMint: bool;
  var owner_s1549: Ref;
  var _from_s1805: Ref;
  var _value_s1834: int;
  var _participant_s1852: Ref;
  var success_s1852: bool;
  var presaleCrowdsale_s1483: Ref;
  var tokenAddress_s1483: Ref;
  var _wallet_s1483: Ref;
  var beneficiary_s1597: Ref;
  var tokens_s1597: int;
  var beneficiary_s1625: Ref;
  var participant_s1637: Ref;
  var __ret_0_viewNoncsallocations: int;
  var participant_s1649: Ref;
  var __ret_0_viewPreSaleCancelledList: bool;
  var participant_s1661: Ref;
  var __ret_0_viewPreSaleRefunds: int;
  var tmpNow: int;

    havoc msgsender_MSG;
    havoc msgvalue_MSG;
    havoc choice;
    havoc newOwner_s54;
    havoc __ret_0_finishMint;
    havoc __ret_0_resumeMint;
    havoc owner_s1549;
    havoc _from_s1805;
    havoc _value_s1834;
    havoc _participant_s1852;
    havoc success_s1852;
    havoc presaleCrowdsale_s1483;
    havoc tokenAddress_s1483;
    havoc _wallet_s1483;
    havoc beneficiary_s1597;
    havoc tokens_s1597;
    havoc beneficiary_s1625;
    havoc participant_s1637;
    havoc __ret_0_viewNoncsallocations;
    havoc participant_s1649;
    havoc __ret_0_viewPreSaleCancelledList;
    havoc participant_s1661;
    havoc __ret_0_viewPreSaleRefunds;
    havoc tmpNow;
    havoc gas;
    assume gas > 4000000 && gas <= 8000000;
    tmpNow := now;
    havoc now;
    assume now > tmpNow;
    assume msgsender_MSG != null;
    assume DType[msgsender_MSG] != Ownable;
    assume DType[msgsender_MSG] != ERC20Basic;
    assume DType[msgsender_MSG] != ERC20;
    assume DType[msgsender_MSG] != SafeMath;
    assume DType[msgsender_MSG] != BasicToken;
    assume DType[msgsender_MSG] != StandardToken;
    assume DType[msgsender_MSG] != MintableToken;
    assume DType[msgsender_MSG] != ZebiCoin;
    assume DType[msgsender_MSG] != ZCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinTempMgr;
    assume DType[msgsender_MSG] != ZebiMainCrowdsale;
    Alloc[msgsender_MSG] := true;
    if (choice == 18)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call transferOwnership_Ownable(this, msgsender_MSG, msgvalue_MSG, newOwner_s54);
    }
    else if (choice == 17)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call startTransfer_ZebiCoinTempMgr(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 16)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call endTransfer_ZebiCoinTempMgr(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 15)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_finishMint := finishMint_ZebiCoinTempMgr(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 14)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_resumeMint := resumeMint_ZebiCoinTempMgr(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 13)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call transferTokenOwnership_ZebiCoinTempMgr(this, msgsender_MSG, msgvalue_MSG, owner_s1549);
    }
    else if (choice == 12)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call enableRefundPeriod_ZebiCoinTempMgr(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 11)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call disableRefundPeriod_ZebiCoinTempMgr(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 10)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call refund_ZebiCoinTempMgr(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 9)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call forcedRefund_ZebiCoinTempMgr(this, msgsender_MSG, msgvalue_MSG, _from_s1805);
    }
    else if (choice == 8)
    {
        gas := gas - 21000;
        call takeEth_ZebiCoinTempMgr(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 7)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call withdraw_ZebiCoinTempMgr(this, msgsender_MSG, msgvalue_MSG, _value_s1834);
    }
    else if (choice == 6)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call success_s1852 := addCancellation_ZebiCoinTempMgr(this, msgsender_MSG, msgvalue_MSG, _participant_s1852);
    }
    else if (choice == 5)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call allocatenonCSTokens_ZebiCoinTempMgr(this, msgsender_MSG, msgvalue_MSG, beneficiary_s1597, tokens_s1597);
    }
    else if (choice == 4)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call revertNoncsallocation_ZebiCoinTempMgr(this, msgsender_MSG, msgvalue_MSG, beneficiary_s1625);
    }
    else if (choice == 3)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_viewNoncsallocations := viewNoncsallocations_ZebiCoinTempMgr(this, msgsender_MSG, msgvalue_MSG, participant_s1637);
    }
    else if (choice == 2)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_viewPreSaleCancelledList := viewPreSaleCancelledList_ZebiCoinTempMgr(this, msgsender_MSG, msgvalue_MSG, participant_s1649);
    }
    else if (choice == 1)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_viewPreSaleRefunds := viewPreSaleRefunds_ZebiCoinTempMgr(this, msgsender_MSG, msgvalue_MSG, participant_s1661);
    }
}



implementation CorralEntry_ZebiCoinTempMgr()
{
  var this: Ref;
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;
  var presaleCrowdsale_s1483: Ref;
  var tokenAddress_s1483: Ref;
  var _wallet_s1483: Ref;

    assume null == 0;
    call this := FreshRefGenerator__success();
    assume now >= 0;
    assume DType[this] == ZebiCoinTempMgr;
    gas := gas - 53000;
    call ZebiCoinTempMgr_ZebiCoinTempMgr(this, msgsender_MSG, msgvalue_MSG, presaleCrowdsale_s1483, tokenAddress_s1483, _wallet_s1483);
    assume !revert && gas >= 0;
    while (true)
    {
        call CorralChoice_ZebiCoinTempMgr(this);
    }
}



implementation CorralChoice_ZebiMainCrowdsale(this: Ref)
{
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;
  var choice: int;
  var newOwner_s54: Ref;
  var __ret_0_finishMint: bool;
  var __ret_0_resumeMint: bool;
  var owner_s2207: Ref;
  var participant_s2219: Ref;
  var __ret_0_viewCancelledList: bool;
  var beneficiary_s2465: Ref;
  var weiAmount1_s2599: int;
  var __ret_0_getTokenAmount: int;
  var participant_s2641: Ref;
  var __ret_0_viewContribution: int;
  var _from_s3095: Ref;
  var _value_s3124: int;
  var _participant_s3142: Ref;
  var success_s3142: bool;
  var _startTime_s2132: int;
  var _endTime_s2132: int;
  var _ETHtoZWeirate_s2132: int;
  var _wallet_s2132: Ref;
  var _minTransAmount_s2132: int;
  var _ethCap_s2132: int;
  var tokenAddress_s2132: Ref;
  var presaleAddress_s2132: Ref;
  var tempMngrAddress_s2132: Ref;
  var _goldListPeriod_s2132: int;
  var _postGoldPeriod_s2132: int;
  var _goldPeriodCap_s2132: int;
  var _vestedMintStartTime_s2132: int;
  var _calenderYearStart_s2132: int;
  var participant_s2231: Ref;
  var __ret_0_viewGoldList: bool;
  var _participant_s2249: Ref;
  var __ret_0_addToGoldList: bool;
  var _participant_s2267: Ref;
  var __ret_0_removeFromGoldList: bool;
  var participant_s2279: Ref;
  var __ret_0_viewKYCAccepted: bool;
  var _participant_s2297: Ref;
  var __ret_0_addToKYCList: bool;
  var _participant_s2313: Ref;
  var __ret_0_removeFromKYCList: bool;
  var participant_s2325: Ref;
  var __ret_0_viewPreSaleRefundsInMainSale: int;
  var partnerAddress_s2759: Ref;
  var amountInZWei_s2759: int;
  var __ret_0_mintAndAllocateZCO: bool;
  var partnerAddress_s2870: Ref;
  var zweitokens_s2870: int;
  var __ret_0_mintvestedTokens: bool;
  var tmpNow: int;

    havoc msgsender_MSG;
    havoc msgvalue_MSG;
    havoc choice;
    havoc newOwner_s54;
    havoc __ret_0_finishMint;
    havoc __ret_0_resumeMint;
    havoc owner_s2207;
    havoc participant_s2219;
    havoc __ret_0_viewCancelledList;
    havoc beneficiary_s2465;
    havoc weiAmount1_s2599;
    havoc __ret_0_getTokenAmount;
    havoc participant_s2641;
    havoc __ret_0_viewContribution;
    havoc _from_s3095;
    havoc _value_s3124;
    havoc _participant_s3142;
    havoc success_s3142;
    havoc _startTime_s2132;
    havoc _endTime_s2132;
    havoc _ETHtoZWeirate_s2132;
    havoc _wallet_s2132;
    havoc _minTransAmount_s2132;
    havoc _ethCap_s2132;
    havoc tokenAddress_s2132;
    havoc presaleAddress_s2132;
    havoc tempMngrAddress_s2132;
    havoc _goldListPeriod_s2132;
    havoc _postGoldPeriod_s2132;
    havoc _goldPeriodCap_s2132;
    havoc _vestedMintStartTime_s2132;
    havoc _calenderYearStart_s2132;
    havoc participant_s2231;
    havoc __ret_0_viewGoldList;
    havoc _participant_s2249;
    havoc __ret_0_addToGoldList;
    havoc _participant_s2267;
    havoc __ret_0_removeFromGoldList;
    havoc participant_s2279;
    havoc __ret_0_viewKYCAccepted;
    havoc _participant_s2297;
    havoc __ret_0_addToKYCList;
    havoc _participant_s2313;
    havoc __ret_0_removeFromKYCList;
    havoc participant_s2325;
    havoc __ret_0_viewPreSaleRefundsInMainSale;
    havoc partnerAddress_s2759;
    havoc amountInZWei_s2759;
    havoc __ret_0_mintAndAllocateZCO;
    havoc partnerAddress_s2870;
    havoc zweitokens_s2870;
    havoc __ret_0_mintvestedTokens;
    havoc tmpNow;
    havoc gas;
    assume gas > 4000000 && gas <= 8000000;
    tmpNow := now;
    havoc now;
    assume now > tmpNow;
    assume msgsender_MSG != null;
    assume DType[msgsender_MSG] != Ownable;
    assume DType[msgsender_MSG] != ERC20Basic;
    assume DType[msgsender_MSG] != ERC20;
    assume DType[msgsender_MSG] != SafeMath;
    assume DType[msgsender_MSG] != BasicToken;
    assume DType[msgsender_MSG] != StandardToken;
    assume DType[msgsender_MSG] != MintableToken;
    assume DType[msgsender_MSG] != ZebiCoin;
    assume DType[msgsender_MSG] != ZCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinCrowdsale;
    assume DType[msgsender_MSG] != ZebiCoinTempMgr;
    assume DType[msgsender_MSG] != ZebiMainCrowdsale;
    Alloc[msgsender_MSG] := true;
    if (choice == 26)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call transferOwnership_Ownable(this, msgsender_MSG, msgvalue_MSG, newOwner_s54);
    }
    else if (choice == 25)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call startTransfer_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 24)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call endTransfer_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 23)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_finishMint := finishMint_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 22)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_resumeMint := resumeMint_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 21)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call transferTokenOwnership_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG, owner_s2207);
    }
    else if (choice == 20)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_viewCancelledList := viewCancelledList_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG, participant_s2219);
    }
    else if (choice == 19)
    {
        gas := gas - 21000;
        call buyTokens_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG, beneficiary_s2465);
    }
    else if (choice == 18)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_getTokenAmount := getTokenAmount_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG, weiAmount1_s2599);
    }
    else if (choice == 17)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call enableRefundPeriod_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 16)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call disableRefundPeriod_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 15)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_viewContribution := viewContribution_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG, participant_s2641);
    }
    else if (choice == 14)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call refund_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 13)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call forcedRefund_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG, _from_s3095);
    }
    else if (choice == 12)
    {
        gas := gas - 21000;
        call takeEth_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG);
    }
    else if (choice == 11)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call withdraw_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG, _value_s3124);
    }
    else if (choice == 10)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call success_s3142 := addCancellation_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG, _participant_s3142);
    }
    else if (choice == 9)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_viewGoldList := viewGoldList_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG, participant_s2231);
    }
    else if (choice == 8)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_addToGoldList := addToGoldList_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG, _participant_s2249);
    }
    else if (choice == 7)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_removeFromGoldList := removeFromGoldList_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG, _participant_s2267);
    }
    else if (choice == 6)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_viewKYCAccepted := viewKYCAccepted_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG, participant_s2279);
    }
    else if (choice == 5)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_addToKYCList := addToKYCList_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG, _participant_s2297);
    }
    else if (choice == 4)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_removeFromKYCList := removeFromKYCList_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG, _participant_s2313);
    }
    else if (choice == 3)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_viewPreSaleRefundsInMainSale := viewPreSaleRefundsInMainSale_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG, participant_s2325);
    }
    else if (choice == 2)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_mintAndAllocateZCO := mintAndAllocateZCO_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG, partnerAddress_s2759, amountInZWei_s2759);
    }
    else if (choice == 1)
    {
        gas := gas - 21000;
        assume msgvalue_MSG == 0;
        call __ret_0_mintvestedTokens := mintvestedTokens_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG, partnerAddress_s2870, zweitokens_s2870);
    }
}



implementation CorralEntry_ZebiMainCrowdsale()
{
  var this: Ref;
  var msgsender_MSG: Ref;
  var msgvalue_MSG: int;
  var _startTime_s2132: int;
  var _endTime_s2132: int;
  var _ETHtoZWeirate_s2132: int;
  var _wallet_s2132: Ref;
  var _minTransAmount_s2132: int;
  var _ethCap_s2132: int;
  var tokenAddress_s2132: Ref;
  var presaleAddress_s2132: Ref;
  var tempMngrAddress_s2132: Ref;
  var _goldListPeriod_s2132: int;
  var _postGoldPeriod_s2132: int;
  var _goldPeriodCap_s2132: int;
  var _vestedMintStartTime_s2132: int;
  var _calenderYearStart_s2132: int;

    assume null == 0;
    call this := FreshRefGenerator__success();
    assume now >= 0;
    assume DType[this] == ZebiMainCrowdsale;
    gas := gas - 53000;
    call ZebiMainCrowdsale_ZebiMainCrowdsale(this, msgsender_MSG, msgvalue_MSG, _startTime_s2132, _endTime_s2132, _ETHtoZWeirate_s2132, _wallet_s2132, _minTransAmount_s2132, _ethCap_s2132, tokenAddress_s2132, presaleAddress_s2132, tempMngrAddress_s2132, _goldListPeriod_s2132, _postGoldPeriod_s2132, _goldPeriodCap_s2132, _vestedMintStartTime_s2132, _calenderYearStart_s2132);
    assume !revert && gas >= 0;
    while (true)
    {
        call CorralChoice_ZebiMainCrowdsale(this);
    }
}


