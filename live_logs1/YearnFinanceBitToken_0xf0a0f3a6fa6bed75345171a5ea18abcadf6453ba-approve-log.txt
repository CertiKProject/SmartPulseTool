This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 09:27:53,791 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 09:27:53,792 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 09:27:53,802 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 09:27:53,803 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 09:27:53,803 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 09:27:53,804 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 09:27:53,806 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 09:27:53,807 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 09:27:53,808 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 09:27:53,808 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 09:27:53,809 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 09:27:53,809 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 09:27:53,810 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 09:27:53,811 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 09:27:53,811 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 09:27:53,812 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 09:27:53,813 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 09:27:53,814 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 09:27:53,815 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 09:27:53,816 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 09:27:53,817 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 09:27:53,818 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 09:27:53,819 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 09:27:53,819 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 09:27:53,819 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 09:27:53,820 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 09:27:53,820 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 09:27:53,820 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 09:27:53,821 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 09:27:53,821 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 09:27:53,821 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 09:27:53,822 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 09:27:53,822 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 09:27:53,823 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 09:27:53,823 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 09:27:53,824 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 09:27:53,824 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 09:27:53,824 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 09:27:53,825 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 09:27:53,825 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 09:27:53,825 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 09:27:53,833 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 09:27:53,833 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 09:27:53,834 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 09:27:53,834 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 09:27:53,834 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 09:27:53,834 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 09:27:53,834 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 09:27:53,834 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 09:27:53,834 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 09:27:53,835 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 09:27:53,835 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 09:27:53,835 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 09:27:53,835 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 09:27:53,835 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 09:27:53,835 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 09:27:53,835 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 09:27:53,835 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 09:27:53,835 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 09:27:53,835 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 09:27:53,836 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 09:27:53,836 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 09:27:53,836 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 09:27:53,836 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 09:27:53,836 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 09:27:53,836 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 09:27:53,836 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 09:27:53,860 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 09:27:53,872 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 09:27:53,875 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 09:27:53,876 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 09:27:53,876 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 09:27:53,877 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl
[2020-11-25 09:27:53,877 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl'
[2020-11-25 09:27:53,950 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 09:27:53,951 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 09:27:53,951 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 09:27:53,951 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 09:27:53,951 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 09:27:53,968 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:27:53" (1/1) ...
[2020-11-25 09:27:53,970 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:27:53" (1/1) ...
[2020-11-25 09:27:54,001 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:27:53" (1/1) ...
[2020-11-25 09:27:54,002 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:27:53" (1/1) ...
[2020-11-25 09:27:54,021 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:27:53" (1/1) ...
[2020-11-25 09:27:54,030 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:27:53" (1/1) ...
[2020-11-25 09:27:54,036 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:27:53" (1/1) ...
[2020-11-25 09:27:54,043 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 09:27:54,044 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 09:27:54,044 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 09:27:54,046 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 09:27:54,050 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:27:53" (1/1) ...
[2020-11-25 09:27:54,065 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(YearnFinanceBitToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(YearnFinanceBitToken.approve(spender, value), return == true && allowed_YearnFinanceBitToken[this][msg.sender][spender] == value &&  _totalSupply_YearnFinanceBitToken[this] == old(_totalSupply_YearnFinanceBitToken[this]) && balances_YearnFinanceBitToken[this] == old(balances_YearnFinanceBitToken[this]) && allowed_YearnFinanceBitToken[this][p1][p2] == old(allowed_YearnFinanceBitToken[this][p1][p2]) && name_YearnFinanceBitToken[this] == old(name_YearnFinanceBitToken[this]) && symbol_YearnFinanceBitToken[this] == old(symbol_YearnFinanceBitToken[this]) && decimals_YearnFinanceBitToken[this] == old(decimals_YearnFinanceBitToken[this]))))
[2020-11-25 09:27:54,071 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(YearnFinanceBitToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(YearnFinanceBitToken.approve(spender, value), return == true && allowed_YearnFinanceBitToken[this][msg.sender][spender] == value &&  _totalSupply_YearnFinanceBitToken[this] == old(_totalSupply_YearnFinanceBitToken[this]) && balances_YearnFinanceBitToken[this] == old(balances_YearnFinanceBitToken[this]) && allowed_YearnFinanceBitToken[this][p1][p2] == old(allowed_YearnFinanceBitToken[this][p1][p2]) && name_YearnFinanceBitToken[this] == old(name_YearnFinanceBitToken[this]) && symbol_YearnFinanceBitToken[this] == old(symbol_YearnFinanceBitToken[this]) && decimals_YearnFinanceBitToken[this] == old(decimals_YearnFinanceBitToken[this]))))
[2020-11-25 09:27:54,079 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(YearnFinanceBitToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(YearnFinanceBitToken.approve(spender, value), return == true && allowed_YearnFinanceBitToken[this][msg.sender][spender] == value &&  _totalSupply_YearnFinanceBitToken[this] == old(_totalSupply_YearnFinanceBitToken[this]) && balances_YearnFinanceBitToken[this] == old(balances_YearnFinanceBitToken[this]) && allowed_YearnFinanceBitToken[this][p1][p2] == old(allowed_YearnFinanceBitToken[this][p1][p2]) && name_YearnFinanceBitToken[this] == old(name_YearnFinanceBitToken[this]) && symbol_YearnFinanceBitToken[this] == old(symbol_YearnFinanceBitToken[this]) && decimals_YearnFinanceBitToken[this] == old(decimals_YearnFinanceBitToken[this]))))
[2020-11-25 09:27:54,085 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=spender_s291 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_YearnFinanceBitToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[spender_s291,<IMPLEMENTATION_INPARAM,approve~address~uint256_YearnFinanceBitToken>]]]
[2020-11-25 09:27:54,088 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( success_s291==true && allowed_YearnFinanceBitToken[this][msg.sender][spender_s291]==tokens_s291 ) && _totalSupply_YearnFinanceBitToken[this]==( old(_totalSupply_YearnFinanceBitToken[this]) ) ) && balances_YearnFinanceBitToken[this]==( old(balances_YearnFinanceBitToken[this]) ) ) && allowed_YearnFinanceBitToken[this][p1][p2]==( old(allowed_YearnFinanceBitToken[this][p1][p2]) ) ) && name_YearnFinanceBitToken[this]==( old(name_YearnFinanceBitToken[this]) ) ) && symbol_YearnFinanceBitToken[this]==( old(symbol_YearnFinanceBitToken[this]) ) ) && decimals_YearnFinanceBitToken[this]==( old(decimals_YearnFinanceBitToken[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s291,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_YearnFinanceBitToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[spender_s291,<IMPLEMENTATION_INPARAM,approve~address~uint256_YearnFinanceBitToken>]]],IdentifierExpression[tokens_s291,<IMPLEMENTATION_INPARAM,approve~address~uint256_YearnFinanceBitToken>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_YearnFinanceBitToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_YearnFinanceBitToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_YearnFinanceBitToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_YearnFinanceBitToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_YearnFinanceBitToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_YearnFinanceBitToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_YearnFinanceBitToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_YearnFinanceBitToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_YearnFinanceBitToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_YearnFinanceBitToken>]]]]]]
[2020-11-25 09:27:54,091 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(YearnFinanceBitToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(YearnFinanceBitToken.approve(spender, value), return == true && allowed_YearnFinanceBitToken[this][msg.sender][spender] == value &&  _totalSupply_YearnFinanceBitToken[this] == old(_totalSupply_YearnFinanceBitToken[this]) && balances_YearnFinanceBitToken[this] == old(balances_YearnFinanceBitToken[this]) && allowed_YearnFinanceBitToken[this][p1][p2] == old(allowed_YearnFinanceBitToken[this][p1][p2]) && name_YearnFinanceBitToken[this] == old(name_YearnFinanceBitToken[this]) && symbol_YearnFinanceBitToken[this] == old(symbol_YearnFinanceBitToken[this]) && decimals_YearnFinanceBitToken[this] == old(decimals_YearnFinanceBitToken[this]))))
[2020-11-25 09:27:54,091 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_YearnFinanceBitToken0) ==> ( <>AP(success_approve_YearnFinanceBitToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 09:27:54,098 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:27:54 PropertyContainer
[2020-11-25 09:27:54,098 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 09:27:54,099 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 09:27:54,099 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 09:27:54,099 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 09:27:54,100 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:27:53" (1/2) ...
[2020-11-25 09:27:54,100 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 09:27:54,100 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 09:27:54,114 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:27:54" (2/2) ...
[2020-11-25 09:27:54,114 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 09:27:54,115 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 09:27:54,115 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 09:27:54,115 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 09:27:54,115 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:27:53" (1/2) ...
[2020-11-25 09:27:54,168 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 09:27:54,168 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 09:27:54,169 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 09:27:54,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 09:27:54,169 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 09:27:54,169 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 09:27:54,169 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 09:27:54,169 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 09:27:54,169 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 09:27:54,169 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 09:27:54,169 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 09:27:54,169 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 09:27:54,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 09:27:54,170 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 09:27:54,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 09:27:54,170 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 09:27:54,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 09:27:54,171 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 09:27:54,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 09:27:54,172 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 09:27:54,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 09:27:54,172 INFO  L130     BoogieDeclarations]: Found specification of procedure YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__success
[2020-11-25 09:27:54,172 INFO  L130     BoogieDeclarations]: Found specification of procedure YearnFinanceBitToken_YearnFinanceBitToken
[2020-11-25 09:27:54,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure YearnFinanceBitToken_YearnFinanceBitToken
[2020-11-25 09:27:54,172 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_YearnFinanceBitToken
[2020-11-25 09:27:54,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_YearnFinanceBitToken
[2020-11-25 09:27:54,172 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_YearnFinanceBitToken
[2020-11-25 09:27:54,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_YearnFinanceBitToken
[2020-11-25 09:27:54,172 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_YearnFinanceBitToken
[2020-11-25 09:27:54,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_YearnFinanceBitToken
[2020-11-25 09:27:54,172 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_YearnFinanceBitToken
[2020-11-25 09:27:54,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_YearnFinanceBitToken
[2020-11-25 09:27:54,173 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_YearnFinanceBitToken
[2020-11-25 09:27:54,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_YearnFinanceBitToken
[2020-11-25 09:27:54,173 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_YearnFinanceBitToken
[2020-11-25 09:27:54,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_YearnFinanceBitToken
[2020-11-25 09:27:54,173 INFO  L130     BoogieDeclarations]: Found specification of procedure name_YearnFinanceBitToken
[2020-11-25 09:27:54,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_YearnFinanceBitToken
[2020-11-25 09:27:54,173 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_YearnFinanceBitToken
[2020-11-25 09:27:54,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_YearnFinanceBitToken
[2020-11-25 09:27:54,173 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_YearnFinanceBitToken
[2020-11-25 09:27:54,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_YearnFinanceBitToken
[2020-11-25 09:27:54,173 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_YearnFinanceBitToken
[2020-11-25 09:27:54,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_YearnFinanceBitToken
[2020-11-25 09:27:54,174 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 09:27:54,174 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 09:27:54,174 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 09:27:54,174 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 09:27:54,174 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 09:27:54,174 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 09:27:54,174 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 09:27:54,174 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_YearnFinanceBitToken
[2020-11-25 09:27:54,174 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 09:27:54,174 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 09:27:54,174 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 09:27:54,174 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 09:27:54,174 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 09:27:54,174 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 09:27:54,175 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 09:27:54,175 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 09:27:54,175 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 09:27:54,175 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 09:27:54,175 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 09:27:54,175 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 09:27:54,175 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 09:27:54,175 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 09:27:54,175 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 09:27:54,175 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 09:27:54,175 INFO  L130     BoogieDeclarations]: Found specification of procedure YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__fail
[2020-11-25 09:27:54,175 INFO  L130     BoogieDeclarations]: Found specification of procedure YearnFinanceBitToken_YearnFinanceBitToken__success
[2020-11-25 09:27:54,175 INFO  L130     BoogieDeclarations]: Found specification of procedure YearnFinanceBitToken_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,176 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_YearnFinanceBitToken__success
[2020-11-25 09:27:54,176 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,176 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_YearnFinanceBitToken__success
[2020-11-25 09:27:54,176 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,176 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_YearnFinanceBitToken__success
[2020-11-25 09:27:54,176 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,176 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_YearnFinanceBitToken__success
[2020-11-25 09:27:54,176 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,176 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_YearnFinanceBitToken__success
[2020-11-25 09:27:54,176 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,176 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_YearnFinanceBitToken__success
[2020-11-25 09:27:54,176 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,176 INFO  L130     BoogieDeclarations]: Found specification of procedure name_YearnFinanceBitToken__success
[2020-11-25 09:27:54,177 INFO  L130     BoogieDeclarations]: Found specification of procedure name_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,177 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_YearnFinanceBitToken__success
[2020-11-25 09:27:54,177 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,177 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_YearnFinanceBitToken__success
[2020-11-25 09:27:54,177 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,177 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_YearnFinanceBitToken__success
[2020-11-25 09:27:54,177 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,177 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 09:27:54,177 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 09:27:54,177 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 09:27:54,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 09:27:54,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 09:27:54,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 09:27:54,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 09:27:54,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 09:27:54,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 09:27:54,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 09:27:54,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 09:27:54,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 09:27:54,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 09:27:54,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 09:27:54,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 09:27:54,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 09:27:54,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 09:27:54,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 09:27:54,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 09:27:54,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 09:27:54,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 09:27:54,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__fail
[2020-11-25 09:27:54,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__success
[2020-11-25 09:27:54,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure YearnFinanceBitToken_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure YearnFinanceBitToken_YearnFinanceBitToken__success
[2020-11-25 09:27:54,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_YearnFinanceBitToken__success
[2020-11-25 09:27:54,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_YearnFinanceBitToken__success
[2020-11-25 09:27:54,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_YearnFinanceBitToken__success
[2020-11-25 09:27:54,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_YearnFinanceBitToken__success
[2020-11-25 09:27:54,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_YearnFinanceBitToken__success
[2020-11-25 09:27:54,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_YearnFinanceBitToken__success
[2020-11-25 09:27:54,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_YearnFinanceBitToken__success
[2020-11-25 09:27:54,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_YearnFinanceBitToken__success
[2020-11-25 09:27:54,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_YearnFinanceBitToken__success
[2020-11-25 09:27:54,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_YearnFinanceBitToken__fail
[2020-11-25 09:27:54,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_YearnFinanceBitToken__success
[2020-11-25 09:27:54,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 09:27:54,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 09:27:54,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 09:27:54,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 09:27:54,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 09:27:54,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 09:27:54,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 09:27:54,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 09:27:54,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 09:27:54,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 09:27:54,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_YearnFinanceBitToken
[2020-11-25 09:27:54,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 09:27:54,183 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 09:27:54,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 09:27:54,354 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:27:54,497 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:27:54,497 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:27:54,497 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:27:54,792 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 09:27:54,792 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 09:27:54,794 INFO  L202        PluginConnector]: Adding new model YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:27:54 BoogieIcfgContainer
[2020-11-25 09:27:54,794 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:27:54" (2/2) ...
[2020-11-25 09:27:54,794 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 09:27:54,794 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@5a7f644b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:27:54, skipping insertion in model container
[2020-11-25 09:27:54,794 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 09:27:54,795 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 09:27:54,795 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 09:27:54,796 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 09:27:54,796 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:27:53" (1/3) ...
[2020-11-25 09:27:54,797 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@12575a98 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:27:54, skipping insertion in model container
[2020-11-25 09:27:54,797 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:27:54" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 09:27:54,834 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:27:54 NWAContainer
[2020-11-25 09:27:54,834 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 09:27:54,834 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 09:27:54,834 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 09:27:54,835 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 09:27:54,836 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:27:54" (3/4) ...
[2020-11-25 09:27:54,837 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4ce6064d and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:27:54, skipping insertion in model container
[2020-11-25 09:27:54,837 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:27:54" (4/4) ...
[2020-11-25 09:27:54,841 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 09:27:54,844 INFO  L110   BuchiProductObserver]: Initial RCFG 1051 locations, 1324 edges
[2020-11-25 09:27:54,844 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 09:27:54,856 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 09:27:55,936 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 09:27:55,939 INFO  L110   BuchiProductObserver]: BuchiProgram size 2492 locations, 4284 edges
[2020-11-25 09:27:55,939 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:27:55 BoogieIcfgContainer
[2020-11-25 09:27:55,939 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 09:27:55,940 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 09:27:55,940 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 09:27:55,941 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 09:27:55,942 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:27:55" (1/1) ...
[2020-11-25 09:27:56,004 INFO  L313           BlockEncoder]: Initial Icfg 2492 locations, 4284 edges
[2020-11-25 09:27:56,005 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 09:27:56,005 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 09:27:56,005 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 09:27:56,006 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 09:27:56,014 INFO  L70    emoveInfeasibleEdges]: Removed 66 edges and 9 locations because of local infeasibility
[2020-11-25 09:27:56,019 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-25 09:27:56,026 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 09:27:56,029 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 09:27:56,031 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 09:27:56,031 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 09:27:56,034 INFO  L313           BlockEncoder]: Encoded RCFG 2448 locations, 4166 edges
[2020-11-25 09:27:56,034 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 09:27:56 BasicIcfg
[2020-11-25 09:27:56,034 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 09:27:56,035 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 09:27:56,035 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 09:27:56,037 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 09:27:56,037 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:27:56,037 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:27:53" (1/6) ...
[2020-11-25 09:27:56,038 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@204eb00f and model type YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:27:56, skipping insertion in model container
[2020-11-25 09:27:56,038 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:27:56,038 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:27:54" (2/6) ...
[2020-11-25 09:27:56,039 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@204eb00f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:27:56, skipping insertion in model container
[2020-11-25 09:27:56,039 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:27:56,039 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:27:54" (3/6) ...
[2020-11-25 09:27:56,039 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@204eb00f and model type YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 09:27:56, skipping insertion in model container
[2020-11-25 09:27:56,039 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:27:56,039 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:27:54" (4/6) ...
[2020-11-25 09:27:56,039 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@204eb00f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:27:56, skipping insertion in model container
[2020-11-25 09:27:56,039 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:27:56,039 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:27:55" (5/6) ...
[2020-11-25 09:27:56,040 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@204eb00f and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 09:27:56, skipping insertion in model container
[2020-11-25 09:27:56,040 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:27:56,040 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 09:27:56" (6/6) ...
[2020-11-25 09:27:56,041 INFO  L404   chiAutomizerObserver]: Analyzing ICFG YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_approve.bpl_BEv2
[2020-11-25 09:27:56,077 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 09:27:56,077 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 09:27:56,077 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 09:27:56,077 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 09:27:56,077 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 09:27:56,077 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 09:27:56,078 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 09:27:56,078 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 09:27:56,078 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 09:27:56,104 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2448 states.
[2020-11-25 09:27:56,141 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:27:56,141 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:27:56,142 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:27:56,179 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:27:56,179 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:27:56,180 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 09:27:56,180 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2448 states.
[2020-11-25 09:27:56,199 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:27:56,199 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:27:56,199 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:27:56,201 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:27:56,201 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_YearnFinanceBitToken0 := false;
[L3]                 call_approve_YearnFinanceBitToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2854]              assume null == 0;
[L2855]  CALL        call this := FreshRefGenerator__success();
[L1250]              havoc newRef;
[L1251]              assume Alloc[newRef] == false;
[L1252]              Alloc[newRef] := true;
[L1253]              assume newRef != null;
[L2855]  RET         call this := FreshRefGenerator__success();
[L2856]              assume now >= 0;
[L2857]              assume DType[this] == YearnFinanceBitToken;
[L2858]              assume msgvalue_MSG == 0;
[L2859]              gas := gas - 53000;
[L2860]  CALL        call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L399]               havoc __exception;
[L400]               revert := false;
[L401]   COND FALSE  !(__exception)
[L422]   CALL        call YearnFinanceBitToken_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1457]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1282]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1267]              assume msgsender_MSG != null;
[L1268]              Balance[this] := 0;
[L1282]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1283]  COND FALSE  !(revert)
[L1457]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1458]  COND TRUE   revert
[L422]   RET         call YearnFinanceBitToken_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG);
[L423]               assume !revert && gas >= 0;
[L2860]  RET         call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L2861]              assume !revert && gas >= 0;

Loop:
[L2864]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2705]              havoc msgsender_MSG;
[L2706]              havoc msgvalue_MSG;
[L2707]              havoc choice;
[L2708]              havoc __ret_0_totalSupply;
[L2709]              havoc tokenOwner_s247;
[L2710]              havoc balance_s247;
[L2711]              havoc tokenOwner_s263;
[L2712]              havoc spender_s263;
[L2713]              havoc remaining_s263;
[L2714]              havoc to_s334;
[L2715]              havoc tokens_s334;
[L2716]              havoc success_s334;
[L2717]              havoc spender_s291;
[L2718]              havoc tokens_s291;
[L2719]              havoc success_s291;
[L2720]              havoc from_s393;
[L2721]              havoc to_s393;
[L2722]              havoc tokens_s393;
[L2723]              havoc success_s393;
[L2724]              havoc a_s90;
[L2725]              havoc b_s90;
[L2726]              havoc c_s90;
[L2727]              havoc a_s112;
[L2728]              havoc b_s112;
[L2729]              havoc c_s112;
[L2730]              havoc a_s140;
[L2731]              havoc b_s140;
[L2732]              havoc c_s140;
[L2733]              havoc a_s162;
[L2734]              havoc b_s162;
[L2735]              havoc c_s162;
[L2736]              havoc __ret_0_name;
[L2737]              havoc __ret_0_symbol;
[L2738]              havoc __ret_0_decimals;
[L2739]              havoc __ret_0__totalSupply;
[L2740]              havoc tmpNow;
[L2741]              havoc gas;
[L2742]              assume gas > 4000000 && gas <= 8000000;
[L2743]              tmpNow := now;
[L2744]              havoc now;
[L2745]              assume now > tmpNow;
[L2746]              assume msgsender_MSG != null;
[L2747]              assume DType[msgsender_MSG] != ERC20Interface;
[L2748]              assume DType[msgsender_MSG] != SafeMath;
[L2749]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2750]              Alloc[msgsender_MSG] := true;
[L2751]  COND TRUE   choice == 14
[L2752]              gas := gas - 21000;
[L2753]  COND FALSE  !(gas >= 0)
[L2864]  RET         call CorralChoice_YearnFinanceBitToken(this);

[2020-11-25 09:27:56,220 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:27:56,220 INFO  L82        PathProgramCache]: Analyzing trace with hash 790471169, now seen corresponding path program 1 times
[2020-11-25 09:27:56,225 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:27:56,248 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:27:56,292 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:27:56,295 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:27:56,295 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:27:56,298 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:27:56,456 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:27:56,457 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:27:56,458 INFO  L87              Difference]: Start difference. First operand 2448 states. Second operand 4 states.
[2020-11-25 09:27:56,666 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:27:56,666 INFO  L93              Difference]: Finished difference Result 1724 states and 1881 transitions.
[2020-11-25 09:27:56,666 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:27:56,667 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1724 states and 1881 transitions.
[2020-11-25 09:27:56,676 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:27:56,691 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1724 states to 1724 states and 1881 transitions.
[2020-11-25 09:27:56,693 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 09:27:56,698 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 597
[2020-11-25 09:27:56,699 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1724 states and 1881 transitions.
[2020-11-25 09:27:56,706 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:27:56,706 INFO  L728         BuchiCegarLoop]: Abstraction has 1724 states and 1881 transitions.
[2020-11-25 09:27:56,722 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1724 states and 1881 transitions.
[2020-11-25 09:27:56,759 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1724 to 1724.
[2020-11-25 09:27:56,759 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1724 states.
[2020-11-25 09:27:56,763 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1724 states to 1724 states and 1881 transitions.
[2020-11-25 09:27:56,764 INFO  L751         BuchiCegarLoop]: Abstraction has 1724 states and 1881 transitions.
[2020-11-25 09:27:56,764 INFO  L631         BuchiCegarLoop]: Abstraction has 1724 states and 1881 transitions.
[2020-11-25 09:27:56,764 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 09:27:56,764 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1724 states and 1881 transitions.
[2020-11-25 09:27:56,771 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:27:56,771 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:27:56,771 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:27:56,773 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:27:56,773 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_YearnFinanceBitToken0 := false;
[L3]                 call_approve_YearnFinanceBitToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2854]              assume null == 0;
[L2855]  CALL        call this := FreshRefGenerator__success();
[L1250]              havoc newRef;
[L1251]              assume Alloc[newRef] == false;
[L1252]              Alloc[newRef] := true;
[L1253]              assume newRef != null;
[L2855]  RET         call this := FreshRefGenerator__success();
[L2856]              assume now >= 0;
[L2857]              assume DType[this] == YearnFinanceBitToken;
[L2858]              assume msgvalue_MSG == 0;
[L2859]              gas := gas - 53000;
[L2860]  CALL        call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L399]               havoc __exception;
[L400]               revert := false;
[L401]   COND FALSE  !(__exception)
[L422]   CALL        call YearnFinanceBitToken_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1457]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1282]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1267]              assume msgsender_MSG != null;
[L1268]              Balance[this] := 0;
[L1282]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1283]  COND FALSE  !(revert)
[L1457]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1458]  COND TRUE   revert
[L422]   RET         call YearnFinanceBitToken_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG);
[L423]               assume !revert && gas >= 0;
[L2860]  RET         call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L2861]              assume !revert && gas >= 0;
[L2864]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2705]              havoc msgsender_MSG;
[L2706]              havoc msgvalue_MSG;
[L2707]              havoc choice;
[L2708]              havoc __ret_0_totalSupply;
[L2709]              havoc tokenOwner_s247;
[L2710]              havoc balance_s247;
[L2711]              havoc tokenOwner_s263;
[L2712]              havoc spender_s263;
[L2713]              havoc remaining_s263;
[L2714]              havoc to_s334;
[L2715]              havoc tokens_s334;
[L2716]              havoc success_s334;
[L2717]              havoc spender_s291;
[L2718]              havoc tokens_s291;
[L2719]              havoc success_s291;
[L2720]              havoc from_s393;
[L2721]              havoc to_s393;
[L2722]              havoc tokens_s393;
[L2723]              havoc success_s393;
[L2724]              havoc a_s90;
[L2725]              havoc b_s90;
[L2726]              havoc c_s90;
[L2727]              havoc a_s112;
[L2728]              havoc b_s112;
[L2729]              havoc c_s112;
[L2730]              havoc a_s140;
[L2731]              havoc b_s140;
[L2732]              havoc c_s140;
[L2733]              havoc a_s162;
[L2734]              havoc b_s162;
[L2735]              havoc c_s162;
[L2736]              havoc __ret_0_name;
[L2737]              havoc __ret_0_symbol;
[L2738]              havoc __ret_0_decimals;
[L2739]              havoc __ret_0__totalSupply;
[L2740]              havoc tmpNow;
[L2741]              havoc gas;
[L2742]              assume gas > 4000000 && gas <= 8000000;
[L2743]              tmpNow := now;
[L2744]              havoc now;
[L2745]              assume now > tmpNow;
[L2746]              assume msgsender_MSG != null;
[L2747]              assume DType[msgsender_MSG] != ERC20Interface;
[L2748]              assume DType[msgsender_MSG] != SafeMath;
[L2749]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2750]              Alloc[msgsender_MSG] := true;
[L2751]  COND FALSE  !(choice == 14)
[L2757]  COND FALSE  !(choice == 13)
[L2763]  COND FALSE  !(choice == 12)
[L2769]  COND FALSE  !(choice == 11)
[L2776]  COND TRUE   choice == 10
[L2777]              gas := gas - 21000;
[L2778]  COND TRUE   gas >= 0
[L2779]              assume tokens_s291 >= 0 && tokens_s291 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2780]              assume msgvalue_MSG == 0;
[L2781]  CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s291;
[L3]                 call_approve_YearnFinanceBitToken0 := true;
[L3]                 call_approve_YearnFinanceBitToken0 := false;
[L3]                 revert := revert_hold;
[L601]               havoc __exception;
[L602]               revert := false;
[L603]   COND FALSE  !(__exception)
[L624]   CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L1522]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1523]              allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291] := tokens_s291;
[L1524]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1525]              assert { :EventEmitted "Approval_YearnFinanceBitToken" } true;
[L1526]              success_s291 := true;
[L624]   RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L625]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s291 == true && allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291] == tokens_s291) && _totalSupply_YearnFinanceBitToken[this] == old(_totalSupply_YearnFinanceBitToken[this])) && balances_YearnFinanceBitToken[this] == old(balances_YearnFinanceBitToken[this])) && allowed_YearnFinanceBitToken[this][p1][p2] == old(allowed_YearnFinanceBitToken[this][p1][p2])) && name_YearnFinanceBitToken[this] == old(name_YearnFinanceBitToken[this])) && symbol_YearnFinanceBitToken[this] == old(symbol_YearnFinanceBitToken[this])) && decimals_YearnFinanceBitToken[this] == old(decimals_YearnFinanceBitToken[this]));
[L3]                 revert := revert_hold;
[L2781]  RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L2864]  RET         call CorralChoice_YearnFinanceBitToken(this);

Loop:
[L2864]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2705]              havoc msgsender_MSG;
[L2706]              havoc msgvalue_MSG;
[L2707]              havoc choice;
[L2708]              havoc __ret_0_totalSupply;
[L2709]              havoc tokenOwner_s247;
[L2710]              havoc balance_s247;
[L2711]              havoc tokenOwner_s263;
[L2712]              havoc spender_s263;
[L2713]              havoc remaining_s263;
[L2714]              havoc to_s334;
[L2715]              havoc tokens_s334;
[L2716]              havoc success_s334;
[L2717]              havoc spender_s291;
[L2718]              havoc tokens_s291;
[L2719]              havoc success_s291;
[L2720]              havoc from_s393;
[L2721]              havoc to_s393;
[L2722]              havoc tokens_s393;
[L2723]              havoc success_s393;
[L2724]              havoc a_s90;
[L2725]              havoc b_s90;
[L2726]              havoc c_s90;
[L2727]              havoc a_s112;
[L2728]              havoc b_s112;
[L2729]              havoc c_s112;
[L2730]              havoc a_s140;
[L2731]              havoc b_s140;
[L2732]              havoc c_s140;
[L2733]              havoc a_s162;
[L2734]              havoc b_s162;
[L2735]              havoc c_s162;
[L2736]              havoc __ret_0_name;
[L2737]              havoc __ret_0_symbol;
[L2738]              havoc __ret_0_decimals;
[L2739]              havoc __ret_0__totalSupply;
[L2740]              havoc tmpNow;
[L2741]              havoc gas;
[L2742]              assume gas > 4000000 && gas <= 8000000;
[L2743]              tmpNow := now;
[L2744]              havoc now;
[L2745]              assume now > tmpNow;
[L2746]              assume msgsender_MSG != null;
[L2747]              assume DType[msgsender_MSG] != ERC20Interface;
[L2748]              assume DType[msgsender_MSG] != SafeMath;
[L2749]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2750]              Alloc[msgsender_MSG] := true;
[L2751]  COND FALSE  !(choice == 14)
[L2757]  COND FALSE  !(choice == 13)
[L2763]  COND FALSE  !(choice == 12)
[L2769]  COND FALSE  !(choice == 11)
[L2776]  COND TRUE   choice == 10
[L2777]              gas := gas - 21000;
[L2778]  COND TRUE   gas >= 0
[L2779]              assume tokens_s291 >= 0 && tokens_s291 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2780]              assume msgvalue_MSG == 0;
[L2781]  CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s291;
[L3]                 call_approve_YearnFinanceBitToken0 := true;
[L3]                 call_approve_YearnFinanceBitToken0 := false;
[L3]                 revert := revert_hold;
[L601]               havoc __exception;
[L602]               revert := false;
[L603]   COND FALSE  !(__exception)
[L624]   CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L1522]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1523]              allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291] := tokens_s291;
[L1524]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1525]              assert { :EventEmitted "Approval_YearnFinanceBitToken" } true;
[L1526]              success_s291 := true;
[L624]   RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L625]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s291 == true && allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291] == tokens_s291) && _totalSupply_YearnFinanceBitToken[this] == old(_totalSupply_YearnFinanceBitToken[this])) && balances_YearnFinanceBitToken[this] == old(balances_YearnFinanceBitToken[this])) && allowed_YearnFinanceBitToken[this][p1][p2] == old(allowed_YearnFinanceBitToken[this][p1][p2])) && name_YearnFinanceBitToken[this] == old(name_YearnFinanceBitToken[this])) && symbol_YearnFinanceBitToken[this] == old(symbol_YearnFinanceBitToken[this])) && decimals_YearnFinanceBitToken[this] == old(decimals_YearnFinanceBitToken[this]));
[L3]                 revert := revert_hold;
[L2781]  RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L2864]  RET         call CorralChoice_YearnFinanceBitToken(this);

[2020-11-25 09:27:56,778 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:27:56,778 INFO  L82        PathProgramCache]: Analyzing trace with hash -2030958318, now seen corresponding path program 1 times
[2020-11-25 09:27:56,779 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:27:56,788 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:27:56,811 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:27:56,812 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:27:56,812 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:27:56,814 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:27:56,814 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:27:56,814 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:27:56,814 INFO  L87              Difference]: Start difference. First operand 1724 states and 1881 transitions. cyclomatic complexity: 159 Second operand 4 states.
[2020-11-25 09:27:57,126 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:27:57,126 INFO  L93              Difference]: Finished difference Result 2598 states and 2951 transitions.
[2020-11-25 09:27:57,126 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:27:57,127 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2598 states and 2951 transitions.
[2020-11-25 09:27:57,140 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 09:27:57,155 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2598 states to 2522 states and 2869 transitions.
[2020-11-25 09:27:57,155 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 833
[2020-11-25 09:27:57,156 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 838
[2020-11-25 09:27:57,157 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2522 states and 2869 transitions.
[2020-11-25 09:27:57,162 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:27:57,162 INFO  L728         BuchiCegarLoop]: Abstraction has 2522 states and 2869 transitions.
[2020-11-25 09:27:57,164 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2522 states and 2869 transitions.
[2020-11-25 09:27:57,190 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2522 to 1875.
[2020-11-25 09:27:57,190 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1875 states.
[2020-11-25 09:27:57,194 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1875 states to 1875 states and 2034 transitions.
[2020-11-25 09:27:57,194 INFO  L751         BuchiCegarLoop]: Abstraction has 1875 states and 2034 transitions.
[2020-11-25 09:27:57,194 INFO  L631         BuchiCegarLoop]: Abstraction has 1875 states and 2034 transitions.
[2020-11-25 09:27:57,194 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 09:27:57,194 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1875 states and 2034 transitions.
[2020-11-25 09:27:57,199 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 09:27:57,199 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:27:57,199 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:27:57,201 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:27:57,201 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_YearnFinanceBitToken0 := false;
[L3]                 call_approve_YearnFinanceBitToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2854]              assume null == 0;
[L2855]  CALL        call this := FreshRefGenerator__success();
[L1250]              havoc newRef;
[L1251]              assume Alloc[newRef] == false;
[L1252]              Alloc[newRef] := true;
[L1253]              assume newRef != null;
[L2855]  RET         call this := FreshRefGenerator__success();
[L2856]              assume now >= 0;
[L2857]              assume DType[this] == YearnFinanceBitToken;
[L2858]              assume msgvalue_MSG == 0;
[L2859]              gas := gas - 53000;
[L2860]  CALL        call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L399]               havoc __exception;
[L400]               revert := false;
[L401]   COND FALSE  !(__exception)
[L422]   CALL        call YearnFinanceBitToken_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1457]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1282]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1267]              assume msgsender_MSG != null;
[L1268]              Balance[this] := 0;
[L1282]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1283]  COND FALSE  !(revert)
[L1457]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1458]  COND FALSE  !(revert)
[L1461]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1314]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1299]              assume msgsender_MSG != null;
[L1300]              Balance[this] := 0;
[L1314]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1315]  COND FALSE  !(revert)
[L1461]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1462]  COND FALSE  !(revert)
[L1465]  CALL        call YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1418]              assume msgsender_MSG != null;
[L1419]              Balance[this] := 0;
[L1420]              name_YearnFinanceBitToken[this] := 627147201;
[L1421]              symbol_YearnFinanceBitToken[this] := 627147201;
[L1422]              decimals_YearnFinanceBitToken[this] := 0;
[L1423]              _totalSupply_YearnFinanceBitToken[this] := 0;
[L1424]              balances_YearnFinanceBitToken[this] := zeroRefintArr();
[L1425]              sum_balances0[this] := 0;
[L1426]              allowed_YearnFinanceBitToken[this] := zeroRefRefintArr();
[L1427]              sum_allowed1[this] := 0;
[L1429]              name_YearnFinanceBitToken[this] := 1658284292;
[L1430]              symbol_YearnFinanceBitToken[this] := -1175268548;
[L1431]              decimals_YearnFinanceBitToken[this] := 18;
[L1432]              _totalSupply_YearnFinanceBitToken[this] := 7000000000000000000000;
[L1433]              sum_balances0[this] := sum_balances0[this] - balances_YearnFinanceBitToken[this][msgsender_MSG];
[L1434]              balances_YearnFinanceBitToken[this][msgsender_MSG] := _totalSupply_YearnFinanceBitToken[this];
[L1435]              sum_balances0[this] := sum_balances0[this] + balances_YearnFinanceBitToken[this][msgsender_MSG];
[L1436]              assert { :EventEmitted "Transfer_YearnFinanceBitToken" } true;
[L1465]  RET         call YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1466]  COND FALSE  !(revert)
[L422]   RET         call YearnFinanceBitToken_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG);
[L423]               assume !revert && gas >= 0;
[L2860]  RET         call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L2861]              assume !revert && gas >= 0;
[L2864]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2705]              havoc msgsender_MSG;
[L2706]              havoc msgvalue_MSG;
[L2707]              havoc choice;
[L2708]              havoc __ret_0_totalSupply;
[L2709]              havoc tokenOwner_s247;
[L2710]              havoc balance_s247;
[L2711]              havoc tokenOwner_s263;
[L2712]              havoc spender_s263;
[L2713]              havoc remaining_s263;
[L2714]              havoc to_s334;
[L2715]              havoc tokens_s334;
[L2716]              havoc success_s334;
[L2717]              havoc spender_s291;
[L2718]              havoc tokens_s291;
[L2719]              havoc success_s291;
[L2720]              havoc from_s393;
[L2721]              havoc to_s393;
[L2722]              havoc tokens_s393;
[L2723]              havoc success_s393;
[L2724]              havoc a_s90;
[L2725]              havoc b_s90;
[L2726]              havoc c_s90;
[L2727]              havoc a_s112;
[L2728]              havoc b_s112;
[L2729]              havoc c_s112;
[L2730]              havoc a_s140;
[L2731]              havoc b_s140;
[L2732]              havoc c_s140;
[L2733]              havoc a_s162;
[L2734]              havoc b_s162;
[L2735]              havoc c_s162;
[L2736]              havoc __ret_0_name;
[L2737]              havoc __ret_0_symbol;
[L2738]              havoc __ret_0_decimals;
[L2739]              havoc __ret_0__totalSupply;
[L2740]              havoc tmpNow;
[L2741]              havoc gas;
[L2742]              assume gas > 4000000 && gas <= 8000000;
[L2743]              tmpNow := now;
[L2744]              havoc now;
[L2745]              assume now > tmpNow;
[L2746]              assume msgsender_MSG != null;
[L2747]              assume DType[msgsender_MSG] != ERC20Interface;
[L2748]              assume DType[msgsender_MSG] != SafeMath;
[L2749]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2750]              Alloc[msgsender_MSG] := true;
[L2751]  COND FALSE  !(choice == 14)
[L2757]  COND FALSE  !(choice == 13)
[L2763]  COND FALSE  !(choice == 12)
[L2769]  COND FALSE  !(choice == 11)
[L2776]  COND TRUE   choice == 10
[L2777]              gas := gas - 21000;
[L2778]  COND TRUE   gas >= 0
[L2779]              assume tokens_s291 >= 0 && tokens_s291 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2780]              assume msgvalue_MSG == 0;
[L2781]  CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s291;
[L3]                 call_approve_YearnFinanceBitToken0 := true;
[L3]                 call_approve_YearnFinanceBitToken0 := false;
[L3]                 revert := revert_hold;
[L601]               havoc __exception;
[L602]               revert := false;
[L603]   COND FALSE  !(__exception)
[L624]   CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L1522]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1523]              allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291] := tokens_s291;
[L1524]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1525]              assert { :EventEmitted "Approval_YearnFinanceBitToken" } true;
[L1526]              success_s291 := true;
[L624]   RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L625]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s291 == true && allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291] == tokens_s291) && _totalSupply_YearnFinanceBitToken[this] == old(_totalSupply_YearnFinanceBitToken[this])) && balances_YearnFinanceBitToken[this] == old(balances_YearnFinanceBitToken[this])) && allowed_YearnFinanceBitToken[this][p1][p2] == old(allowed_YearnFinanceBitToken[this][p1][p2])) && name_YearnFinanceBitToken[this] == old(name_YearnFinanceBitToken[this])) && symbol_YearnFinanceBitToken[this] == old(symbol_YearnFinanceBitToken[this])) && decimals_YearnFinanceBitToken[this] == old(decimals_YearnFinanceBitToken[this]));
[L3]                 revert := revert_hold;
[L2781]  RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L2864]  RET         call CorralChoice_YearnFinanceBitToken(this);

Loop:
[L2864]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2705]              havoc msgsender_MSG;
[L2706]              havoc msgvalue_MSG;
[L2707]              havoc choice;
[L2708]              havoc __ret_0_totalSupply;
[L2709]              havoc tokenOwner_s247;
[L2710]              havoc balance_s247;
[L2711]              havoc tokenOwner_s263;
[L2712]              havoc spender_s263;
[L2713]              havoc remaining_s263;
[L2714]              havoc to_s334;
[L2715]              havoc tokens_s334;
[L2716]              havoc success_s334;
[L2717]              havoc spender_s291;
[L2718]              havoc tokens_s291;
[L2719]              havoc success_s291;
[L2720]              havoc from_s393;
[L2721]              havoc to_s393;
[L2722]              havoc tokens_s393;
[L2723]              havoc success_s393;
[L2724]              havoc a_s90;
[L2725]              havoc b_s90;
[L2726]              havoc c_s90;
[L2727]              havoc a_s112;
[L2728]              havoc b_s112;
[L2729]              havoc c_s112;
[L2730]              havoc a_s140;
[L2731]              havoc b_s140;
[L2732]              havoc c_s140;
[L2733]              havoc a_s162;
[L2734]              havoc b_s162;
[L2735]              havoc c_s162;
[L2736]              havoc __ret_0_name;
[L2737]              havoc __ret_0_symbol;
[L2738]              havoc __ret_0_decimals;
[L2739]              havoc __ret_0__totalSupply;
[L2740]              havoc tmpNow;
[L2741]              havoc gas;
[L2742]              assume gas > 4000000 && gas <= 8000000;
[L2743]              tmpNow := now;
[L2744]              havoc now;
[L2745]              assume now > tmpNow;
[L2746]              assume msgsender_MSG != null;
[L2747]              assume DType[msgsender_MSG] != ERC20Interface;
[L2748]              assume DType[msgsender_MSG] != SafeMath;
[L2749]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2750]              Alloc[msgsender_MSG] := true;
[L2751]  COND FALSE  !(choice == 14)
[L2757]  COND FALSE  !(choice == 13)
[L2763]  COND FALSE  !(choice == 12)
[L2769]  COND FALSE  !(choice == 11)
[L2776]  COND TRUE   choice == 10
[L2777]              gas := gas - 21000;
[L2778]  COND TRUE   gas >= 0
[L2779]              assume tokens_s291 >= 0 && tokens_s291 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2780]              assume msgvalue_MSG == 0;
[L2781]  CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s291;
[L3]                 call_approve_YearnFinanceBitToken0 := true;
[L3]                 call_approve_YearnFinanceBitToken0 := false;
[L3]                 revert := revert_hold;
[L601]               havoc __exception;
[L602]               revert := false;
[L603]   COND FALSE  !(__exception)
[L624]   CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L1522]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1523]              allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291] := tokens_s291;
[L1524]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1525]              assert { :EventEmitted "Approval_YearnFinanceBitToken" } true;
[L1526]              success_s291 := true;
[L624]   RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L625]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s291 == true && allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291] == tokens_s291) && _totalSupply_YearnFinanceBitToken[this] == old(_totalSupply_YearnFinanceBitToken[this])) && balances_YearnFinanceBitToken[this] == old(balances_YearnFinanceBitToken[this])) && allowed_YearnFinanceBitToken[this][p1][p2] == old(allowed_YearnFinanceBitToken[this][p1][p2])) && name_YearnFinanceBitToken[this] == old(name_YearnFinanceBitToken[this])) && symbol_YearnFinanceBitToken[this] == old(symbol_YearnFinanceBitToken[this])) && decimals_YearnFinanceBitToken[this] == old(decimals_YearnFinanceBitToken[this]));
[L3]                 revert := revert_hold;
[L2781]  RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L2864]  RET         call CorralChoice_YearnFinanceBitToken(this);

[2020-11-25 09:27:57,205 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:27:57,205 INFO  L82        PathProgramCache]: Analyzing trace with hash 980228231, now seen corresponding path program 1 times
[2020-11-25 09:27:57,206 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:27:57,236 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:27:57,357 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:27:57,358 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:27:57,358 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 09:27:57,358 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:27:57,359 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 09:27:57,359 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-25 09:27:57,359 INFO  L87              Difference]: Start difference. First operand 1875 states and 2034 transitions. cyclomatic complexity: 161 Second operand 13 states.
[2020-11-25 09:27:58,496 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:27:58,496 INFO  L93              Difference]: Finished difference Result 1986 states and 2178 transitions.
[2020-11-25 09:27:58,496 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 09:27:58,496 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1986 states and 2178 transitions.
[2020-11-25 09:27:58,503 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 09:27:58,510 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1986 states to 1986 states and 2178 transitions.
[2020-11-25 09:27:58,510 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 733
[2020-11-25 09:27:58,511 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 733
[2020-11-25 09:27:58,512 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1986 states and 2178 transitions.
[2020-11-25 09:27:58,514 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:27:58,514 INFO  L728         BuchiCegarLoop]: Abstraction has 1986 states and 2178 transitions.
[2020-11-25 09:27:58,515 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1986 states and 2178 transitions.
[2020-11-25 09:27:58,532 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1986 to 1955.
[2020-11-25 09:27:58,532 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1955 states.
[2020-11-25 09:27:58,536 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1955 states to 1955 states and 2133 transitions.
[2020-11-25 09:27:58,536 INFO  L751         BuchiCegarLoop]: Abstraction has 1955 states and 2133 transitions.
[2020-11-25 09:27:58,536 INFO  L631         BuchiCegarLoop]: Abstraction has 1955 states and 2133 transitions.
[2020-11-25 09:27:58,536 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 09:27:58,536 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1955 states and 2133 transitions.
[2020-11-25 09:27:58,540 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 09:27:58,540 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:27:58,540 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:27:58,541 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:27:58,541 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_YearnFinanceBitToken0 := false;
[L3]                 call_approve_YearnFinanceBitToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2854]              assume null == 0;
[L2855]  CALL        call this := FreshRefGenerator__success();
[L1250]              havoc newRef;
[L1251]              assume Alloc[newRef] == false;
[L1252]              Alloc[newRef] := true;
[L1253]              assume newRef != null;
[L2855]  RET         call this := FreshRefGenerator__success();
[L2856]              assume now >= 0;
[L2857]              assume DType[this] == YearnFinanceBitToken;
[L2858]              assume msgvalue_MSG == 0;
[L2859]              gas := gas - 53000;
[L2860]  CALL        call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L399]               havoc __exception;
[L400]               revert := false;
[L401]   COND FALSE  !(__exception)
[L422]   CALL        call YearnFinanceBitToken_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1457]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1282]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1267]              assume msgsender_MSG != null;
[L1268]              Balance[this] := 0;
[L1282]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1283]  COND FALSE  !(revert)
[L1457]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1458]  COND FALSE  !(revert)
[L1461]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1314]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1299]              assume msgsender_MSG != null;
[L1300]              Balance[this] := 0;
[L1314]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1315]  COND FALSE  !(revert)
[L1461]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1462]  COND FALSE  !(revert)
[L1465]  CALL        call YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1418]              assume msgsender_MSG != null;
[L1419]              Balance[this] := 0;
[L1420]              name_YearnFinanceBitToken[this] := 627147201;
[L1421]              symbol_YearnFinanceBitToken[this] := 627147201;
[L1422]              decimals_YearnFinanceBitToken[this] := 0;
[L1423]              _totalSupply_YearnFinanceBitToken[this] := 0;
[L1424]              balances_YearnFinanceBitToken[this] := zeroRefintArr();
[L1425]              sum_balances0[this] := 0;
[L1426]              allowed_YearnFinanceBitToken[this] := zeroRefRefintArr();
[L1427]              sum_allowed1[this] := 0;
[L1429]              name_YearnFinanceBitToken[this] := 1658284292;
[L1430]              symbol_YearnFinanceBitToken[this] := -1175268548;
[L1431]              decimals_YearnFinanceBitToken[this] := 18;
[L1432]              _totalSupply_YearnFinanceBitToken[this] := 7000000000000000000000;
[L1433]              sum_balances0[this] := sum_balances0[this] - balances_YearnFinanceBitToken[this][msgsender_MSG];
[L1434]              balances_YearnFinanceBitToken[this][msgsender_MSG] := _totalSupply_YearnFinanceBitToken[this];
[L1435]              sum_balances0[this] := sum_balances0[this] + balances_YearnFinanceBitToken[this][msgsender_MSG];
[L1436]              assert { :EventEmitted "Transfer_YearnFinanceBitToken" } true;
[L1465]  RET         call YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1466]  COND FALSE  !(revert)
[L422]   RET         call YearnFinanceBitToken_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG);
[L423]               assume !revert && gas >= 0;
[L2860]  RET         call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L2861]              assume !revert && gas >= 0;
[L2864]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2705]              havoc msgsender_MSG;
[L2706]              havoc msgvalue_MSG;
[L2707]              havoc choice;
[L2708]              havoc __ret_0_totalSupply;
[L2709]              havoc tokenOwner_s247;
[L2710]              havoc balance_s247;
[L2711]              havoc tokenOwner_s263;
[L2712]              havoc spender_s263;
[L2713]              havoc remaining_s263;
[L2714]              havoc to_s334;
[L2715]              havoc tokens_s334;
[L2716]              havoc success_s334;
[L2717]              havoc spender_s291;
[L2718]              havoc tokens_s291;
[L2719]              havoc success_s291;
[L2720]              havoc from_s393;
[L2721]              havoc to_s393;
[L2722]              havoc tokens_s393;
[L2723]              havoc success_s393;
[L2724]              havoc a_s90;
[L2725]              havoc b_s90;
[L2726]              havoc c_s90;
[L2727]              havoc a_s112;
[L2728]              havoc b_s112;
[L2729]              havoc c_s112;
[L2730]              havoc a_s140;
[L2731]              havoc b_s140;
[L2732]              havoc c_s140;
[L2733]              havoc a_s162;
[L2734]              havoc b_s162;
[L2735]              havoc c_s162;
[L2736]              havoc __ret_0_name;
[L2737]              havoc __ret_0_symbol;
[L2738]              havoc __ret_0_decimals;
[L2739]              havoc __ret_0__totalSupply;
[L2740]              havoc tmpNow;
[L2741]              havoc gas;
[L2742]              assume gas > 4000000 && gas <= 8000000;
[L2743]              tmpNow := now;
[L2744]              havoc now;
[L2745]              assume now > tmpNow;
[L2746]              assume msgsender_MSG != null;
[L2747]              assume DType[msgsender_MSG] != ERC20Interface;
[L2748]              assume DType[msgsender_MSG] != SafeMath;
[L2749]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2750]              Alloc[msgsender_MSG] := true;
[L2751]  COND FALSE  !(choice == 14)
[L2757]  COND FALSE  !(choice == 13)
[L2763]  COND FALSE  !(choice == 12)
[L2769]  COND FALSE  !(choice == 11)
[L2776]  COND TRUE   choice == 10
[L2777]              gas := gas - 21000;
[L2778]  COND TRUE   gas >= 0
[L2779]              assume tokens_s291 >= 0 && tokens_s291 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2780]              assume msgvalue_MSG == 0;
[L2781]  CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s291;
[L3]                 call_approve_YearnFinanceBitToken0 := true;
[L3]                 call_approve_YearnFinanceBitToken0 := false;
[L3]                 revert := revert_hold;
[L601]               havoc __exception;
[L602]               revert := false;
[L603]   COND TRUE   __exception
[L604]               __tmp__Balance := Balance;
[L605]               __tmp__DType := DType;
[L606]               __tmp__Alloc := Alloc;
[L607]               __tmp__balance_ADDR := balance_ADDR;
[L608]               __tmp__M_Ref_int := M_Ref_int;
[L609]               __tmp__sum_balances0 := sum_balances0;
[L610]               __tmp__alloc_allowed_YearnFinanceBitToken_lvl0 := alloc_allowed_YearnFinanceBitToken_lvl0;
[L611]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L612]               __tmp__sum_allowed1 := sum_allowed1;
[L613]               __tmp__Length := Length;
[L614]               __tmp__now := now;
[L615]               __tmp__name_YearnFinanceBitToken := name_YearnFinanceBitToken;
[L616]               __tmp__symbol_YearnFinanceBitToken := symbol_YearnFinanceBitToken;
[L617]               __tmp__decimals_YearnFinanceBitToken := decimals_YearnFinanceBitToken;
[L618]               __tmp___totalSupply_YearnFinanceBitToken := _totalSupply_YearnFinanceBitToken;
[L619]               __tmp__balances_YearnFinanceBitToken := balances_YearnFinanceBitToken;
[L620]               __tmp__allowed_YearnFinanceBitToken := allowed_YearnFinanceBitToken;
[L621]   CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken__fail(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L1513]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1514]              __tmp__allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291] := tokens_s291;
[L1515]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1516]              success_s291 := true;
[L621]   RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken__fail(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L622]               assume revert || gas < 0;
[L2781]  RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L2864]  RET         call CorralChoice_YearnFinanceBitToken(this);

Loop:
[L2864]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2705]              havoc msgsender_MSG;
[L2706]              havoc msgvalue_MSG;
[L2707]              havoc choice;
[L2708]              havoc __ret_0_totalSupply;
[L2709]              havoc tokenOwner_s247;
[L2710]              havoc balance_s247;
[L2711]              havoc tokenOwner_s263;
[L2712]              havoc spender_s263;
[L2713]              havoc remaining_s263;
[L2714]              havoc to_s334;
[L2715]              havoc tokens_s334;
[L2716]              havoc success_s334;
[L2717]              havoc spender_s291;
[L2718]              havoc tokens_s291;
[L2719]              havoc success_s291;
[L2720]              havoc from_s393;
[L2721]              havoc to_s393;
[L2722]              havoc tokens_s393;
[L2723]              havoc success_s393;
[L2724]              havoc a_s90;
[L2725]              havoc b_s90;
[L2726]              havoc c_s90;
[L2727]              havoc a_s112;
[L2728]              havoc b_s112;
[L2729]              havoc c_s112;
[L2730]              havoc a_s140;
[L2731]              havoc b_s140;
[L2732]              havoc c_s140;
[L2733]              havoc a_s162;
[L2734]              havoc b_s162;
[L2735]              havoc c_s162;
[L2736]              havoc __ret_0_name;
[L2737]              havoc __ret_0_symbol;
[L2738]              havoc __ret_0_decimals;
[L2739]              havoc __ret_0__totalSupply;
[L2740]              havoc tmpNow;
[L2741]              havoc gas;
[L2742]              assume gas > 4000000 && gas <= 8000000;
[L2743]              tmpNow := now;
[L2744]              havoc now;
[L2745]              assume now > tmpNow;
[L2746]              assume msgsender_MSG != null;
[L2747]              assume DType[msgsender_MSG] != ERC20Interface;
[L2748]              assume DType[msgsender_MSG] != SafeMath;
[L2749]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2750]              Alloc[msgsender_MSG] := true;
[L2751]  COND FALSE  !(choice == 14)
[L2757]  COND FALSE  !(choice == 13)
[L2763]  COND FALSE  !(choice == 12)
[L2769]  COND FALSE  !(choice == 11)
[L2776]  COND TRUE   choice == 10
[L2777]              gas := gas - 21000;
[L2778]  COND TRUE   gas >= 0
[L2779]              assume tokens_s291 >= 0 && tokens_s291 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2780]              assume msgvalue_MSG == 0;
[L2781]  CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s291;
[L3]                 call_approve_YearnFinanceBitToken0 := true;
[L3]                 call_approve_YearnFinanceBitToken0 := false;
[L3]                 revert := revert_hold;
[L601]               havoc __exception;
[L602]               revert := false;
[L603]   COND TRUE   __exception
[L604]               __tmp__Balance := Balance;
[L605]               __tmp__DType := DType;
[L606]               __tmp__Alloc := Alloc;
[L607]               __tmp__balance_ADDR := balance_ADDR;
[L608]               __tmp__M_Ref_int := M_Ref_int;
[L609]               __tmp__sum_balances0 := sum_balances0;
[L610]               __tmp__alloc_allowed_YearnFinanceBitToken_lvl0 := alloc_allowed_YearnFinanceBitToken_lvl0;
[L611]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L612]               __tmp__sum_allowed1 := sum_allowed1;
[L613]               __tmp__Length := Length;
[L614]               __tmp__now := now;
[L615]               __tmp__name_YearnFinanceBitToken := name_YearnFinanceBitToken;
[L616]               __tmp__symbol_YearnFinanceBitToken := symbol_YearnFinanceBitToken;
[L617]               __tmp__decimals_YearnFinanceBitToken := decimals_YearnFinanceBitToken;
[L618]               __tmp___totalSupply_YearnFinanceBitToken := _totalSupply_YearnFinanceBitToken;
[L619]               __tmp__balances_YearnFinanceBitToken := balances_YearnFinanceBitToken;
[L620]               __tmp__allowed_YearnFinanceBitToken := allowed_YearnFinanceBitToken;
[L621]   CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken__fail(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L1513]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1514]              __tmp__allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291] := tokens_s291;
[L1515]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1516]              success_s291 := true;
[L621]   RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken__fail(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L622]               assume revert || gas < 0;
[L2781]  RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L2864]  RET         call CorralChoice_YearnFinanceBitToken(this);

[2020-11-25 09:27:58,544 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:27:58,544 INFO  L82        PathProgramCache]: Analyzing trace with hash -1546105183, now seen corresponding path program 1 times
[2020-11-25 09:27:58,545 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:27:58,551 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:27:58,571 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:27:58,571 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:27:58,571 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 09:27:58,571 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:27:58,572 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 09:27:58,572 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 09:27:58,572 INFO  L87              Difference]: Start difference. First operand 1955 states and 2133 transitions. cyclomatic complexity: 182 Second operand 5 states.
[2020-11-25 09:27:58,800 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:27:58,800 INFO  L93              Difference]: Finished difference Result 2543 states and 2844 transitions.
[2020-11-25 09:27:58,800 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 09:27:58,800 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2543 states and 2844 transitions.
[2020-11-25 09:27:58,810 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2020-11-25 09:27:58,817 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2543 states to 1983 states and 2282 transitions.
[2020-11-25 09:27:58,817 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 574
[2020-11-25 09:27:58,817 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 574
[2020-11-25 09:27:58,817 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1983 states and 2282 transitions.
[2020-11-25 09:27:58,819 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:27:58,819 INFO  L728         BuchiCegarLoop]: Abstraction has 1983 states and 2282 transitions.
[2020-11-25 09:27:58,820 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1983 states and 2282 transitions.
[2020-11-25 09:27:58,832 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1983 to 1287.
[2020-11-25 09:27:58,832 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1287 states.
[2020-11-25 09:27:58,833 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1287 states to 1287 states and 1392 transitions.
[2020-11-25 09:27:58,833 INFO  L751         BuchiCegarLoop]: Abstraction has 1287 states and 1392 transitions.
[2020-11-25 09:27:58,833 INFO  L631         BuchiCegarLoop]: Abstraction has 1287 states and 1392 transitions.
[2020-11-25 09:27:58,833 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 09:27:58,833 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1287 states and 1392 transitions.
[2020-11-25 09:27:58,835 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:27:58,836 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:27:58,836 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:27:58,837 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:27:58,837 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_YearnFinanceBitToken0 := false;
[L3]                 call_approve_YearnFinanceBitToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2854]              assume null == 0;
[L2855]  CALL        call this := FreshRefGenerator__success();
[L1250]              havoc newRef;
[L1251]              assume Alloc[newRef] == false;
[L1252]              Alloc[newRef] := true;
[L1253]              assume newRef != null;
[L2855]  RET         call this := FreshRefGenerator__success();
[L2856]              assume now >= 0;
[L2857]              assume DType[this] == YearnFinanceBitToken;
[L2858]              assume msgvalue_MSG == 0;
[L2859]              gas := gas - 53000;
[L2860]  CALL        call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L399]               havoc __exception;
[L400]               revert := false;
[L401]   COND FALSE  !(__exception)
[L422]   CALL        call YearnFinanceBitToken_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1457]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1282]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1267]              assume msgsender_MSG != null;
[L1268]              Balance[this] := 0;
[L1282]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1283]  COND FALSE  !(revert)
[L1457]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1458]  COND FALSE  !(revert)
[L1461]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1314]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1299]              assume msgsender_MSG != null;
[L1300]              Balance[this] := 0;
[L1314]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1315]  COND FALSE  !(revert)
[L1461]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1462]  COND FALSE  !(revert)
[L1465]  CALL        call YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1418]              assume msgsender_MSG != null;
[L1419]              Balance[this] := 0;
[L1420]              name_YearnFinanceBitToken[this] := 627147201;
[L1421]              symbol_YearnFinanceBitToken[this] := 627147201;
[L1422]              decimals_YearnFinanceBitToken[this] := 0;
[L1423]              _totalSupply_YearnFinanceBitToken[this] := 0;
[L1424]              balances_YearnFinanceBitToken[this] := zeroRefintArr();
[L1425]              sum_balances0[this] := 0;
[L1426]              allowed_YearnFinanceBitToken[this] := zeroRefRefintArr();
[L1427]              sum_allowed1[this] := 0;
[L1429]              name_YearnFinanceBitToken[this] := 1658284292;
[L1430]              symbol_YearnFinanceBitToken[this] := -1175268548;
[L1431]              decimals_YearnFinanceBitToken[this] := 18;
[L1432]              _totalSupply_YearnFinanceBitToken[this] := 7000000000000000000000;
[L1433]              sum_balances0[this] := sum_balances0[this] - balances_YearnFinanceBitToken[this][msgsender_MSG];
[L1434]              balances_YearnFinanceBitToken[this][msgsender_MSG] := _totalSupply_YearnFinanceBitToken[this];
[L1435]              sum_balances0[this] := sum_balances0[this] + balances_YearnFinanceBitToken[this][msgsender_MSG];
[L1436]              assert { :EventEmitted "Transfer_YearnFinanceBitToken" } true;
[L1465]  RET         call YearnFinanceBitToken_YearnFinanceBitToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1466]  COND FALSE  !(revert)
[L422]   RET         call YearnFinanceBitToken_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG);
[L423]               assume !revert && gas >= 0;
[L2860]  RET         call YearnFinanceBitToken_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG);
[L2861]              assume !revert && gas >= 0;
[L2864]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2705]              havoc msgsender_MSG;
[L2706]              havoc msgvalue_MSG;
[L2707]              havoc choice;
[L2708]              havoc __ret_0_totalSupply;
[L2709]              havoc tokenOwner_s247;
[L2710]              havoc balance_s247;
[L2711]              havoc tokenOwner_s263;
[L2712]              havoc spender_s263;
[L2713]              havoc remaining_s263;
[L2714]              havoc to_s334;
[L2715]              havoc tokens_s334;
[L2716]              havoc success_s334;
[L2717]              havoc spender_s291;
[L2718]              havoc tokens_s291;
[L2719]              havoc success_s291;
[L2720]              havoc from_s393;
[L2721]              havoc to_s393;
[L2722]              havoc tokens_s393;
[L2723]              havoc success_s393;
[L2724]              havoc a_s90;
[L2725]              havoc b_s90;
[L2726]              havoc c_s90;
[L2727]              havoc a_s112;
[L2728]              havoc b_s112;
[L2729]              havoc c_s112;
[L2730]              havoc a_s140;
[L2731]              havoc b_s140;
[L2732]              havoc c_s140;
[L2733]              havoc a_s162;
[L2734]              havoc b_s162;
[L2735]              havoc c_s162;
[L2736]              havoc __ret_0_name;
[L2737]              havoc __ret_0_symbol;
[L2738]              havoc __ret_0_decimals;
[L2739]              havoc __ret_0__totalSupply;
[L2740]              havoc tmpNow;
[L2741]              havoc gas;
[L2742]              assume gas > 4000000 && gas <= 8000000;
[L2743]              tmpNow := now;
[L2744]              havoc now;
[L2745]              assume now > tmpNow;
[L2746]              assume msgsender_MSG != null;
[L2747]              assume DType[msgsender_MSG] != ERC20Interface;
[L2748]              assume DType[msgsender_MSG] != SafeMath;
[L2749]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2750]              Alloc[msgsender_MSG] := true;
[L2751]  COND FALSE  !(choice == 14)
[L2757]  COND FALSE  !(choice == 13)
[L2763]  COND FALSE  !(choice == 12)
[L2769]  COND FALSE  !(choice == 11)
[L2776]  COND TRUE   choice == 10
[L2777]              gas := gas - 21000;
[L2778]  COND TRUE   gas >= 0
[L2779]              assume tokens_s291 >= 0 && tokens_s291 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2780]              assume msgvalue_MSG == 0;
[L2781]  CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(p1 != msgsender_MSG || p2 != spender_s291);
[L3]                 revert := revert_hold;
[L601]               havoc __exception;
[L602]               revert := false;
[L603]   COND FALSE  !(__exception)
[L624]   CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L1522]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1523]              allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291] := tokens_s291;
[L1524]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1525]              assert { :EventEmitted "Approval_YearnFinanceBitToken" } true;
[L1526]              success_s291 := true;
[L624]   RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L625]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s291 == true && allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291] == tokens_s291) && _totalSupply_YearnFinanceBitToken[this] == old(_totalSupply_YearnFinanceBitToken[this])) && balances_YearnFinanceBitToken[this] == old(balances_YearnFinanceBitToken[this])) && allowed_YearnFinanceBitToken[this][p1][p2] == old(allowed_YearnFinanceBitToken[this][p1][p2])) && name_YearnFinanceBitToken[this] == old(name_YearnFinanceBitToken[this])) && symbol_YearnFinanceBitToken[this] == old(symbol_YearnFinanceBitToken[this])) && decimals_YearnFinanceBitToken[this] == old(decimals_YearnFinanceBitToken[this]));
[L3]                 revert := revert_hold;
[L2781]  RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L2864]  RET         call CorralChoice_YearnFinanceBitToken(this);
[L2864]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2705]              havoc msgsender_MSG;
[L2706]              havoc msgvalue_MSG;
[L2707]              havoc choice;
[L2708]              havoc __ret_0_totalSupply;
[L2709]              havoc tokenOwner_s247;
[L2710]              havoc balance_s247;
[L2711]              havoc tokenOwner_s263;
[L2712]              havoc spender_s263;
[L2713]              havoc remaining_s263;
[L2714]              havoc to_s334;
[L2715]              havoc tokens_s334;
[L2716]              havoc success_s334;
[L2717]              havoc spender_s291;
[L2718]              havoc tokens_s291;
[L2719]              havoc success_s291;
[L2720]              havoc from_s393;
[L2721]              havoc to_s393;
[L2722]              havoc tokens_s393;
[L2723]              havoc success_s393;
[L2724]              havoc a_s90;
[L2725]              havoc b_s90;
[L2726]              havoc c_s90;
[L2727]              havoc a_s112;
[L2728]              havoc b_s112;
[L2729]              havoc c_s112;
[L2730]              havoc a_s140;
[L2731]              havoc b_s140;
[L2732]              havoc c_s140;
[L2733]              havoc a_s162;
[L2734]              havoc b_s162;
[L2735]              havoc c_s162;
[L2736]              havoc __ret_0_name;
[L2737]              havoc __ret_0_symbol;
[L2738]              havoc __ret_0_decimals;
[L2739]              havoc __ret_0__totalSupply;
[L2740]              havoc tmpNow;
[L2741]              havoc gas;
[L2742]              assume gas > 4000000 && gas <= 8000000;
[L2743]              tmpNow := now;
[L2744]              havoc now;
[L2745]              assume now > tmpNow;
[L2746]              assume msgsender_MSG != null;
[L2747]              assume DType[msgsender_MSG] != ERC20Interface;
[L2748]              assume DType[msgsender_MSG] != SafeMath;
[L2749]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2750]              Alloc[msgsender_MSG] := true;
[L2751]  COND FALSE  !(choice == 14)
[L2757]  COND FALSE  !(choice == 13)
[L2763]  COND FALSE  !(choice == 12)
[L2769]  COND FALSE  !(choice == 11)
[L2776]  COND TRUE   choice == 10
[L2777]              gas := gas - 21000;
[L2778]  COND TRUE   gas >= 0
[L2779]              assume tokens_s291 >= 0 && tokens_s291 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2780]              assume msgvalue_MSG == 0;
[L2781]  CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s291;
[L3]                 call_approve_YearnFinanceBitToken0 := true;
[L3]                 call_approve_YearnFinanceBitToken0 := false;
[L3]                 revert := revert_hold;
[L601]               havoc __exception;
[L602]               revert := false;
[L603]   COND FALSE  !(__exception)
[L624]   CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L1522]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1523]              allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291] := tokens_s291;
[L1524]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1525]              assert { :EventEmitted "Approval_YearnFinanceBitToken" } true;
[L1526]              success_s291 := true;
[L624]   RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L625]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s291 == true && allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291] == tokens_s291) && _totalSupply_YearnFinanceBitToken[this] == old(_totalSupply_YearnFinanceBitToken[this])) && balances_YearnFinanceBitToken[this] == old(balances_YearnFinanceBitToken[this])) && allowed_YearnFinanceBitToken[this][p1][p2] == old(allowed_YearnFinanceBitToken[this][p1][p2])) && name_YearnFinanceBitToken[this] == old(name_YearnFinanceBitToken[this])) && symbol_YearnFinanceBitToken[this] == old(symbol_YearnFinanceBitToken[this])) && decimals_YearnFinanceBitToken[this] == old(decimals_YearnFinanceBitToken[this]));
[L3]                 revert := revert_hold;
[L2781]  RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L2864]  RET         call CorralChoice_YearnFinanceBitToken(this);

Loop:
[L2864]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L2705]              havoc msgsender_MSG;
[L2706]              havoc msgvalue_MSG;
[L2707]              havoc choice;
[L2708]              havoc __ret_0_totalSupply;
[L2709]              havoc tokenOwner_s247;
[L2710]              havoc balance_s247;
[L2711]              havoc tokenOwner_s263;
[L2712]              havoc spender_s263;
[L2713]              havoc remaining_s263;
[L2714]              havoc to_s334;
[L2715]              havoc tokens_s334;
[L2716]              havoc success_s334;
[L2717]              havoc spender_s291;
[L2718]              havoc tokens_s291;
[L2719]              havoc success_s291;
[L2720]              havoc from_s393;
[L2721]              havoc to_s393;
[L2722]              havoc tokens_s393;
[L2723]              havoc success_s393;
[L2724]              havoc a_s90;
[L2725]              havoc b_s90;
[L2726]              havoc c_s90;
[L2727]              havoc a_s112;
[L2728]              havoc b_s112;
[L2729]              havoc c_s112;
[L2730]              havoc a_s140;
[L2731]              havoc b_s140;
[L2732]              havoc c_s140;
[L2733]              havoc a_s162;
[L2734]              havoc b_s162;
[L2735]              havoc c_s162;
[L2736]              havoc __ret_0_name;
[L2737]              havoc __ret_0_symbol;
[L2738]              havoc __ret_0_decimals;
[L2739]              havoc __ret_0__totalSupply;
[L2740]              havoc tmpNow;
[L2741]              havoc gas;
[L2742]              assume gas > 4000000 && gas <= 8000000;
[L2743]              tmpNow := now;
[L2744]              havoc now;
[L2745]              assume now > tmpNow;
[L2746]              assume msgsender_MSG != null;
[L2747]              assume DType[msgsender_MSG] != ERC20Interface;
[L2748]              assume DType[msgsender_MSG] != SafeMath;
[L2749]              assume DType[msgsender_MSG] != YearnFinanceBitToken;
[L2750]              Alloc[msgsender_MSG] := true;
[L2751]  COND FALSE  !(choice == 14)
[L2757]  COND FALSE  !(choice == 13)
[L2763]  COND FALSE  !(choice == 12)
[L2769]  COND FALSE  !(choice == 11)
[L2776]  COND TRUE   choice == 10
[L2777]              gas := gas - 21000;
[L2778]  COND TRUE   gas >= 0
[L2779]              assume tokens_s291 >= 0 && tokens_s291 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2780]              assume msgvalue_MSG == 0;
[L2781]  CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s291;
[L3]                 call_approve_YearnFinanceBitToken0 := true;
[L3]                 call_approve_YearnFinanceBitToken0 := false;
[L3]                 revert := revert_hold;
[L601]               havoc __exception;
[L602]               revert := false;
[L603]   COND FALSE  !(__exception)
[L624]   CALL        call success_s291 := approve~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L1522]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1523]              allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291] := tokens_s291;
[L1524]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291];
[L1525]              assert { :EventEmitted "Approval_YearnFinanceBitToken" } true;
[L1526]              success_s291 := true;
[L624]   RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L625]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s291 == true && allowed_YearnFinanceBitToken[this][msgsender_MSG][spender_s291] == tokens_s291) && _totalSupply_YearnFinanceBitToken[this] == old(_totalSupply_YearnFinanceBitToken[this])) && balances_YearnFinanceBitToken[this] == old(balances_YearnFinanceBitToken[this])) && allowed_YearnFinanceBitToken[this][p1][p2] == old(allowed_YearnFinanceBitToken[this][p1][p2])) && name_YearnFinanceBitToken[this] == old(name_YearnFinanceBitToken[this])) && symbol_YearnFinanceBitToken[this] == old(symbol_YearnFinanceBitToken[this])) && decimals_YearnFinanceBitToken[this] == old(decimals_YearnFinanceBitToken[this]));
[L3]                 revert := revert_hold;
[L2781]  RET         call success_s291 := approve~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, spender_s291, tokens_s291);
[L2864]  RET         call CorralChoice_YearnFinanceBitToken(this);

[2020-11-25 09:27:58,839 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:27:58,840 INFO  L82        PathProgramCache]: Analyzing trace with hash 1332508712, now seen corresponding path program 1 times
[2020-11-25 09:27:58,840 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:27:58,855 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:27:58,936 INFO  L134       CoverageAnalysis]: Checked inductivity of 62 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 58 trivial. 0 not checked.
[2020-11-25 09:27:58,937 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:27:58,937 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 09:27:58,937 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:27:58,937 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 09:27:58,937 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-25 09:27:58,937 INFO  L87              Difference]: Start difference. First operand 1287 states and 1392 transitions. cyclomatic complexity: 108 Second operand 7 states.
[2020-11-25 09:27:59,050 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:27:59,050 INFO  L93              Difference]: Finished difference Result 707 states and 759 transitions.
[2020-11-25 09:27:59,051 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 09:27:59,051 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 707 states and 759 transitions.
[2020-11-25 09:27:59,052 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 09:27:59,053 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 707 states to 0 states and 0 transitions.
[2020-11-25 09:27:59,053 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 09:27:59,053 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 09:27:59,053 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 09:27:59,053 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:27:59,053 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 09:27:59,053 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 09:27:59,053 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 09:27:59,053 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 09:27:59,053 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 09:27:59,053 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 09:27:59,053 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 09:27:59,056 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 09:27:59 BasicIcfg
[2020-11-25 09:27:59,056 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 09:27:59,056 INFO  L168              Benchmark]: Toolchain (without parser) took 5106.37 ms. Allocated memory was 1.0 GB in the beginning and 1.5 GB in the end (delta: 492.8 MB). Free memory was 940.6 MB in the beginning and 1.3 GB in the end (delta: -397.4 MB). Peak memory consumption was 95.4 MB. Max. memory is 15.3 GB.
[2020-11-25 09:27:59,057 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:27:59,057 INFO  L168              Benchmark]: Boogie Preprocessor took 92.37 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.8 MB). Peak memory consumption was 10.8 MB. Max. memory is 15.3 GB.
[2020-11-25 09:27:59,058 INFO  L168              Benchmark]: UtopiaSpecLang took 54.54 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 09:27:59,058 INFO  L168              Benchmark]: Boogie Printer took 15.67 ms. Allocated memory is still 1.0 GB. Free memory is still 924.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:27:59,058 INFO  L168              Benchmark]: RCFGBuilder took 679.89 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 838.5 MB in the end (delta: 85.9 MB). Peak memory consumption was 85.9 MB. Max. memory is 15.3 GB.
[2020-11-25 09:27:59,059 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.42 ms. Allocated memory is still 1.0 GB. Free memory was 838.5 MB in the beginning and 829.6 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 09:27:59,059 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1105.32 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.3 MB). Free memory was 829.6 MB in the beginning and 760.9 MB in the end (delta: 68.6 MB). Peak memory consumption was 128.9 MB. Max. memory is 15.3 GB.
[2020-11-25 09:27:59,059 INFO  L168              Benchmark]: BlockEncodingV2 took 94.76 ms. Allocated memory is still 1.1 GB. Free memory was 760.9 MB in the beginning and 714.3 MB in the end (delta: 46.6 MB). Peak memory consumption was 46.6 MB. Max. memory is 15.3 GB.
[2020-11-25 09:27:59,060 INFO  L168              Benchmark]: BuchiAutomizer took 3021.35 ms. Allocated memory was 1.1 GB in the beginning and 1.5 GB in the end (delta: 432.5 MB). Free memory was 714.3 MB in the beginning and 1.3 GB in the end (delta: -623.7 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:27:59,062 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2492 locations, 4284 edges
  - StatisticsResult: Encoded RCFG
    2448 locations, 4166 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 92.37 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.8 MB). Peak memory consumption was 10.8 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 54.54 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.67 ms. Allocated memory is still 1.0 GB. Free memory is still 924.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 679.89 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 838.5 MB in the end (delta: 85.9 MB). Peak memory consumption was 85.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.42 ms. Allocated memory is still 1.0 GB. Free memory was 838.5 MB in the beginning and 829.6 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1105.32 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.3 MB). Free memory was 829.6 MB in the beginning and 760.9 MB in the end (delta: 68.6 MB). Peak memory consumption was 128.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 94.76 ms. Allocated memory is still 1.1 GB. Free memory was 760.9 MB in the beginning and 714.3 MB in the end (delta: 46.6 MB). Peak memory consumption was 46.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 3021.35 ms. Allocated memory was 1.1 GB in the beginning and 1.5 GB in the end (delta: 432.5 MB). Free memory was 714.3 MB in the beginning and 1.3 GB in the end (delta: -623.7 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1051 locations, 1324 edges
  - StatisticsResult: BuchiProgram size
    2492 locations, 4284 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 13 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.9s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.4s. Construction of modules took 1.4s. BÃ¼chi inclusion checks took 0.6s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1374 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1955 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 9013 SDtfs, 9745 SDslu, 12700 SDs, 0 SdLazy, 15359 SolverSat, 1785 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.4s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_approve_YearnFinance(success_approve_YearnFinanceBitToken0)itToken0) ==> ( <>(success_approve_YearnFinanceBitToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
