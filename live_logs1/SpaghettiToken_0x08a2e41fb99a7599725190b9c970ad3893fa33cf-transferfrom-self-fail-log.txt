This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 05:04:54,710 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 05:04:54,711 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 05:04:54,722 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 05:04:54,722 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 05:04:54,722 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 05:04:54,723 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 05:04:54,725 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 05:04:54,726 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 05:04:54,727 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 05:04:54,728 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 05:04:54,728 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 05:04:54,729 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 05:04:54,729 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 05:04:54,730 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 05:04:54,731 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 05:04:54,732 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 05:04:54,733 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 05:04:54,734 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 05:04:54,735 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 05:04:54,736 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 05:04:54,736 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 05:04:54,738 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 05:04:54,738 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 05:04:54,739 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 05:04:54,739 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 05:04:54,739 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 05:04:54,740 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 05:04:54,740 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 05:04:54,740 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 05:04:54,741 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 05:04:54,741 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 05:04:54,742 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 05:04:54,742 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 05:04:54,743 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 05:04:54,743 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 05:04:54,744 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 05:04:54,744 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 05:04:54,744 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 05:04:54,744 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 05:04:54,745 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 05:04:54,745 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 05:04:54,753 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 05:04:54,753 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 05:04:54,754 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 05:04:54,754 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 05:04:54,754 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 05:04:54,754 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 05:04:54,755 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 05:04:54,755 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 05:04:54,755 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 05:04:54,755 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 05:04:54,755 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 05:04:54,755 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 05:04:54,755 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 05:04:54,755 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 05:04:54,755 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 05:04:54,756 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 05:04:54,756 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 05:04:54,756 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 05:04:54,756 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 05:04:54,756 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 05:04:54,756 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 05:04:54,756 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 05:04:54,756 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 05:04:54,756 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 05:04:54,757 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 05:04:54,757 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 05:04:54,777 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 05:04:54,786 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 05:04:54,788 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 05:04:54,789 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 05:04:54,789 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 05:04:54,790 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl
[2020-11-25 05:04:54,790 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl'
[2020-11-25 05:04:54,850 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 05:04:54,852 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 05:04:54,852 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 05:04:54,852 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 05:04:54,852 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 05:04:54,868 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:04:54" (1/1) ...
[2020-11-25 05:04:54,869 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:04:54" (1/1) ...
[2020-11-25 05:04:54,889 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:04:54" (1/1) ...
[2020-11-25 05:04:54,889 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:04:54" (1/1) ...
[2020-11-25 05:04:54,903 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:04:54" (1/1) ...
[2020-11-25 05:04:54,909 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:04:54" (1/1) ...
[2020-11-25 05:04:54,913 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:04:54" (1/1) ...
[2020-11-25 05:04:54,920 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 05:04:54,920 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 05:04:54,920 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 05:04:54,922 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 05:04:54,925 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:04:54" (1/1) ...
[2020-11-25 05:04:54,938 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(SpaghettiToken.transferFrom(from, to, value), from == to && (value > balanceOf_SpaghettiToken[this][from] || value > allowance_SpaghettiToken[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][from] >= 0 &&  balanceOf_SpaghettiToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_SpaghettiToken[this][from][msg.sender] >= 0 && allowance_SpaghettiToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(SpaghettiToken.transferFrom)))
[2020-11-25 05:04:54,943 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(SpaghettiToken.transferFrom(from, to, value), from == to && (value > balanceOf_SpaghettiToken[this][from] || value > allowance_SpaghettiToken[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][from] >= 0 &&  balanceOf_SpaghettiToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_SpaghettiToken[this][from][msg.sender] >= 0 && allowance_SpaghettiToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(SpaghettiToken.transferFrom)))
[2020-11-25 05:04:54,950 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(SpaghettiToken.transferFrom(from, to, value), from == to && (value > balanceOf_SpaghettiToken[this][from] || value > allowance_SpaghettiToken[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][from] >= 0 &&  balanceOf_SpaghettiToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_SpaghettiToken[this][from][msg.sender] >= 0 && allowance_SpaghettiToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(SpaghettiToken.transferFrom)))
[2020-11-25 05:04:54,956 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( src_s309==dst_s309 && ( wad_s309>balanceOf_SpaghettiToken[this][src_s309] || wad_s309>allowance_SpaghettiToken[this][src_s309][msg.sender] ) ) && wad_s309>=0 ) && wad_s309<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_SpaghettiToken[this][dst_s309]>=0 ) && balanceOf_SpaghettiToken[this][dst_s309]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_SpaghettiToken[this][src_s309]>=0 ) && balanceOf_SpaghettiToken[this][src_s309]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_SpaghettiToken[this][src_s309][msg.sender]>=0 ) && allowance_SpaghettiToken[this][src_s309][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>],IdentifierExpression[dst_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[wad_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]],BinaryExpression[COMPGT,IdentifierExpression[wad_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[wad_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[wad_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[dst_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[dst_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 05:04:54,959 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(SpaghettiToken.transferFrom(from, to, value), from == to && (value > balanceOf_SpaghettiToken[this][from] || value > allowance_SpaghettiToken[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][from] >= 0 &&  balanceOf_SpaghettiToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_SpaghettiToken[this][from][msg.sender] >= 0 && allowance_SpaghettiToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(SpaghettiToken.transferFrom)))
[2020-11-25 05:04:54,960 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_SpaghettiToken0) ==> ( <>AP(fail_transferFrom_SpaghettiToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 05:04:54,964 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:04:54 PropertyContainer
[2020-11-25 05:04:54,964 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 05:04:54,964 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 05:04:54,965 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 05:04:54,965 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 05:04:54,965 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:04:54" (1/2) ...
[2020-11-25 05:04:54,966 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 05:04:54,966 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 05:04:54,974 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:04:54" (2/2) ...
[2020-11-25 05:04:54,974 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 05:04:54,974 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 05:04:54,974 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 05:04:54,974 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 05:04:54,975 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:04:54" (1/2) ...
[2020-11-25 05:04:55,026 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 05:04:55,026 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath_NoBaseCtor__success
[2020-11-25 05:04:55,026 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath
[2020-11-25 05:04:55,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath
[2020-11-25 05:04:55,026 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__success
[2020-11-25 05:04:55,027 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__success
[2020-11-25 05:04:55,027 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_DSMath__success
[2020-11-25 05:04:55,027 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiToken_SpaghettiToken_NoBaseCtor__success
[2020-11-25 05:04:55,027 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiToken_SpaghettiToken
[2020-11-25 05:04:55,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiToken_SpaghettiToken
[2020-11-25 05:04:55,027 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiToken
[2020-11-25 05:04:55,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiToken
[2020-11-25 05:04:55,027 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiToken
[2020-11-25 05:04:55,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiToken
[2020-11-25 05:04:55,027 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiToken
[2020-11-25 05:04:55,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiToken
[2020-11-25 05:04:55,028 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiToken
[2020-11-25 05:04:55,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiToken
[2020-11-25 05:04:55,028 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_SpaghettiToken__success
[2020-11-25 05:04:55,028 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiToken
[2020-11-25 05:04:55,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiToken
[2020-11-25 05:04:55,028 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiToken
[2020-11-25 05:04:55,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiToken
[2020-11-25 05:04:55,028 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiToken
[2020-11-25 05:04:55,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiToken
[2020-11-25 05:04:55,029 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_SpaghettiToken
[2020-11-25 05:04:55,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_SpaghettiToken
[2020-11-25 05:04:55,029 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_SpaghettiToken
[2020-11-25 05:04:55,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_SpaghettiToken
[2020-11-25 05:04:55,029 INFO  L130     BoogieDeclarations]: Found specification of procedure name_SpaghettiToken
[2020-11-25 05:04:55,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_SpaghettiToken
[2020-11-25 05:04:55,029 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 05:04:55,029 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 05:04:55,029 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 05:04:55,029 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DSMath
[2020-11-25 05:04:55,029 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_DSMath
[2020-11-25 05:04:55,029 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SpaghettiToken
[2020-11-25 05:04:55,030 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 05:04:55,030 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 05:04:55,030 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath_NoBaseCtor__fail
[2020-11-25 05:04:55,030 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath__success
[2020-11-25 05:04:55,030 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath__fail
[2020-11-25 05:04:55,030 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__fail
[2020-11-25 05:04:55,030 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__fail
[2020-11-25 05:04:55,030 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_DSMath__fail
[2020-11-25 05:04:55,030 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiToken_SpaghettiToken_NoBaseCtor__fail
[2020-11-25 05:04:55,030 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiToken_SpaghettiToken__success
[2020-11-25 05:04:55,030 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiToken_SpaghettiToken__fail
[2020-11-25 05:04:55,030 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiToken__success
[2020-11-25 05:04:55,031 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiToken__fail
[2020-11-25 05:04:55,031 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiToken__success
[2020-11-25 05:04:55,031 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiToken__fail
[2020-11-25 05:04:55,031 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiToken__success
[2020-11-25 05:04:55,031 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiToken__fail
[2020-11-25 05:04:55,031 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiToken__success
[2020-11-25 05:04:55,031 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiToken__fail
[2020-11-25 05:04:55,031 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_SpaghettiToken__fail
[2020-11-25 05:04:55,031 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiToken__success
[2020-11-25 05:04:55,031 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiToken__fail
[2020-11-25 05:04:55,031 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiToken__success
[2020-11-25 05:04:55,031 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiToken__fail
[2020-11-25 05:04:55,032 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiToken__success
[2020-11-25 05:04:55,032 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiToken__fail
[2020-11-25 05:04:55,032 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_SpaghettiToken__success
[2020-11-25 05:04:55,032 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_SpaghettiToken__fail
[2020-11-25 05:04:55,032 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_SpaghettiToken__success
[2020-11-25 05:04:55,032 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_SpaghettiToken__fail
[2020-11-25 05:04:55,032 INFO  L130     BoogieDeclarations]: Found specification of procedure name_SpaghettiToken__success
[2020-11-25 05:04:55,032 INFO  L130     BoogieDeclarations]: Found specification of procedure name_SpaghettiToken__fail
[2020-11-25 05:04:55,032 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 05:04:55,032 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 05:04:55,032 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 05:04:55,032 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 05:04:55,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 05:04:55,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath_NoBaseCtor__fail
[2020-11-25 05:04:55,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath_NoBaseCtor__success
[2020-11-25 05:04:55,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath__fail
[2020-11-25 05:04:55,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath__success
[2020-11-25 05:04:55,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__fail
[2020-11-25 05:04:55,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__success
[2020-11-25 05:04:55,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__fail
[2020-11-25 05:04:55,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__success
[2020-11-25 05:04:55,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_DSMath__fail
[2020-11-25 05:04:55,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_DSMath__success
[2020-11-25 05:04:55,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiToken_SpaghettiToken_NoBaseCtor__fail
[2020-11-25 05:04:55,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiToken_SpaghettiToken_NoBaseCtor__success
[2020-11-25 05:04:55,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiToken_SpaghettiToken__fail
[2020-11-25 05:04:55,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiToken_SpaghettiToken__success
[2020-11-25 05:04:55,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiToken__fail
[2020-11-25 05:04:55,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiToken__success
[2020-11-25 05:04:55,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiToken__fail
[2020-11-25 05:04:55,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiToken__success
[2020-11-25 05:04:55,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiToken__fail
[2020-11-25 05:04:55,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiToken__success
[2020-11-25 05:04:55,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiToken__fail
[2020-11-25 05:04:55,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiToken__success
[2020-11-25 05:04:55,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_SpaghettiToken__fail
[2020-11-25 05:04:55,035 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_SpaghettiToken__success
[2020-11-25 05:04:55,035 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiToken__fail
[2020-11-25 05:04:55,035 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiToken__success
[2020-11-25 05:04:55,035 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiToken__fail
[2020-11-25 05:04:55,035 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiToken__success
[2020-11-25 05:04:55,035 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiToken__fail
[2020-11-25 05:04:55,035 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiToken__success
[2020-11-25 05:04:55,035 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_SpaghettiToken__fail
[2020-11-25 05:04:55,035 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_SpaghettiToken__success
[2020-11-25 05:04:55,035 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_SpaghettiToken__fail
[2020-11-25 05:04:55,035 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_SpaghettiToken__success
[2020-11-25 05:04:55,035 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_SpaghettiToken__fail
[2020-11-25 05:04:55,036 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_SpaghettiToken__success
[2020-11-25 05:04:55,036 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 05:04:55,036 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 05:04:55,036 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 05:04:55,036 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 05:04:55,036 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 05:04:55,036 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 05:04:55,036 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DSMath
[2020-11-25 05:04:55,036 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_DSMath
[2020-11-25 05:04:55,036 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SpaghettiToken
[2020-11-25 05:04:55,036 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 05:04:55,036 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 05:04:55,037 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 05:04:55,302 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:04:55,302 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:04:55,443 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 05:04:55,444 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 05:04:55,445 INFO  L202        PluginConnector]: Adding new model SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:04:55 BoogieIcfgContainer
[2020-11-25 05:04:55,445 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:04:54" (2/2) ...
[2020-11-25 05:04:55,445 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 05:04:55,446 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6c6a513f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:04:55, skipping insertion in model container
[2020-11-25 05:04:55,446 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 05:04:55,446 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 05:04:55,446 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 05:04:55,447 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 05:04:55,448 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:04:54" (1/3) ...
[2020-11-25 05:04:55,448 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@3e8ba019 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:04:55, skipping insertion in model container
[2020-11-25 05:04:55,448 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:04:54" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 05:04:55,480 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:04:55 NWAContainer
[2020-11-25 05:04:55,480 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 05:04:55,480 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 05:04:55,480 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 05:04:55,481 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 05:04:55,482 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:04:55" (3/4) ...
[2020-11-25 05:04:55,482 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@75637e39 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:04:55, skipping insertion in model container
[2020-11-25 05:04:55,483 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:04:55" (4/4) ...
[2020-11-25 05:04:55,485 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 05:04:55,488 INFO  L110   BuchiProductObserver]: Initial RCFG 743 locations, 932 edges
[2020-11-25 05:04:55,488 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 05:04:55,497 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 05:04:56,403 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 05:04:56,410 INFO  L110   BuchiProductObserver]: BuchiProgram size 1774 locations, 3010 edges
[2020-11-25 05:04:56,410 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:04:56 BoogieIcfgContainer
[2020-11-25 05:04:56,411 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 05:04:56,411 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 05:04:56,411 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 05:04:56,413 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 05:04:56,413 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:04:56" (1/1) ...
[2020-11-25 05:04:56,468 INFO  L313           BlockEncoder]: Initial Icfg 1774 locations, 3010 edges
[2020-11-25 05:04:56,469 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 05:04:56,469 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 05:04:56,469 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 05:04:56,470 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 05:04:56,478 INFO  L70    emoveInfeasibleEdges]: Removed 57 edges and 7 locations because of local infeasibility
[2020-11-25 05:04:56,483 INFO  L70        RemoveSinkStates]: Removed 70 edges and 40 locations by removing sink states
[2020-11-25 05:04:56,490 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 05:04:56,492 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 05:04:56,494 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 05:04:56,494 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 05:04:56,497 INFO  L313           BlockEncoder]: Encoded RCFG 1717 locations, 2869 edges
[2020-11-25 05:04:56,497 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:04:56 BasicIcfg
[2020-11-25 05:04:56,498 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 05:04:56,498 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 05:04:56,498 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 05:04:56,500 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 05:04:56,501 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:04:56,501 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:04:54" (1/6) ...
[2020-11-25 05:04:56,502 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2a266cd7 and model type SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:04:56, skipping insertion in model container
[2020-11-25 05:04:56,502 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:04:56,503 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:04:54" (2/6) ...
[2020-11-25 05:04:56,503 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2a266cd7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:04:56, skipping insertion in model container
[2020-11-25 05:04:56,503 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:04:56,503 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:04:55" (3/6) ...
[2020-11-25 05:04:56,503 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2a266cd7 and model type SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:04:56, skipping insertion in model container
[2020-11-25 05:04:56,503 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:04:56,503 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:04:55" (4/6) ...
[2020-11-25 05:04:56,504 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2a266cd7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:04:56, skipping insertion in model container
[2020-11-25 05:04:56,504 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:04:56,504 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:04:56" (5/6) ...
[2020-11-25 05:04:56,504 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2a266cd7 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:04:56, skipping insertion in model container
[2020-11-25 05:04:56,504 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:04:56,504 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:04:56" (6/6) ...
[2020-11-25 05:04:56,505 INFO  L404   chiAutomizerObserver]: Analyzing ICFG SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self-fail.bpl_BEv2
[2020-11-25 05:04:56,542 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 05:04:56,543 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 05:04:56,543 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 05:04:56,543 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 05:04:56,543 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 05:04:56,543 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 05:04:56,543 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 05:04:56,543 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 05:04:56,543 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 05:04:56,564 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1717 states.
[2020-11-25 05:04:56,607 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:04:56,607 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:04:56,607 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:04:56,616 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:04:56,616 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:04:56,616 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 05:04:56,616 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1717 states.
[2020-11-25 05:04:56,630 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:04:56,630 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:04:56,630 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:04:56,632 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:04:56,632 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_SpaghettiToken0 := false;
[L2]                 call_transferFrom_SpaghettiToken0 := false;
[L2]     CALL        call main();
[L2016]              assume null == 0;
[L2017]  CALL        call this := FreshRefGenerator__success();
[L964]               havoc newRef;
[L965]               assume Alloc[newRef] == false;
[L966]               Alloc[newRef] := true;
[L967]               assume newRef != null;
[L2017]  RET         call this := FreshRefGenerator__success();
[L2018]              assume now >= 0;
[L2019]              assume DType[this] == SpaghettiToken;
[L2020]              assume msgvalue_MSG == 0;
[L2021]              gas := gas - 53000;
[L2022]  CALL        call SpaghettiToken_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L144]               havoc __exception;
[L145]               revert := false;
[L146]   COND FALSE  !(__exception)
[L167]   CALL        call SpaghettiToken_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1110]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L996]   CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L981]               assume msgsender_MSG != null;
[L982]               Balance[this] := 0;
[L996]   RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L997]   COND FALSE  !(revert)
[L1110]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1111]  COND TRUE   revert
[L167]   RET         call SpaghettiToken_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L168]               assume !revert && gas >= 0;
[L2022]  RET         call SpaghettiToken_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L2023]              assume !revert && gas >= 0;

Loop:
[L2026]  CALL        call CorralChoice_SpaghettiToken(this);
[L1910]              havoc msgsender_MSG;
[L1911]              havoc msgvalue_MSG;
[L1912]              havoc choice;
[L1913]              havoc __ret_0_totalSupply;
[L1914]              havoc arg329_s0;
[L1915]              havoc __ret_0_balanceOf;
[L1916]              havoc arg330_s0;
[L1917]              havoc arg331_s0;
[L1918]              havoc __ret_0_allowance;
[L1919]              havoc __ret_0_symbol;
[L1920]              havoc __ret_0_decimals;
[L1921]              havoc __ret_0_name;
[L1922]              havoc chef_s113;
[L1923]              havoc guy_s149;
[L1924]              havoc __ret_0_approve;
[L1925]              havoc guy_s177;
[L1926]              havoc wad_s177;
[L1927]              havoc dst_s194;
[L1928]              havoc wad_s194;
[L1929]              havoc __ret_0_transfer;
[L1930]              havoc src_s309;
[L1931]              havoc dst_s309;
[L1932]              havoc wad_s309;
[L1933]              havoc __ret_0_transferFrom;
[L1934]              havoc tmpNow;
[L1935]              havoc gas;
[L1936]              assume gas > 4000000 && gas <= 8000000;
[L1937]              tmpNow := now;
[L1938]              havoc now;
[L1939]              assume now > tmpNow;
[L1940]              assume msgsender_MSG != null;
[L1941]              assume DType[msgsender_MSG] != DSMath;
[L1942]              assume DType[msgsender_MSG] != SpaghettiToken;
[L1943]              Alloc[msgsender_MSG] := true;
[L1944]  COND TRUE   choice == 10
[L1945]              gas := gas - 21000;
[L1946]  COND FALSE  !(gas >= 0)
[L2026]  RET         call CorralChoice_SpaghettiToken(this);

[2020-11-25 05:04:56,649 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:04:56,649 INFO  L82        PathProgramCache]: Analyzing trace with hash -839436667, now seen corresponding path program 1 times
[2020-11-25 05:04:56,654 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:04:56,676 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:04:56,720 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:04:56,722 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:04:56,722 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:04:56,726 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:04:56,872 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:04:56,873 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:04:56,874 INFO  L87              Difference]: Start difference. First operand 1717 states. Second operand 3 states.
[2020-11-25 05:04:57,032 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:04:57,033 INFO  L93              Difference]: Finished difference Result 1353 states and 1495 transitions.
[2020-11-25 05:04:57,033 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:04:57,035 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1353 states and 1495 transitions.
[2020-11-25 05:04:57,046 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:04:57,062 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1353 states to 1353 states and 1495 transitions.
[2020-11-25 05:04:57,063 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 05:04:57,065 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 419
[2020-11-25 05:04:57,065 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1353 states and 1495 transitions.
[2020-11-25 05:04:57,071 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:04:57,071 INFO  L728         BuchiCegarLoop]: Abstraction has 1353 states and 1495 transitions.
[2020-11-25 05:04:57,089 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1353 states and 1495 transitions.
[2020-11-25 05:04:57,123 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1353 to 1353.
[2020-11-25 05:04:57,124 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1353 states.
[2020-11-25 05:04:57,128 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1353 states to 1353 states and 1495 transitions.
[2020-11-25 05:04:57,129 INFO  L751         BuchiCegarLoop]: Abstraction has 1353 states and 1495 transitions.
[2020-11-25 05:04:57,129 INFO  L631         BuchiCegarLoop]: Abstraction has 1353 states and 1495 transitions.
[2020-11-25 05:04:57,129 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 05:04:57,130 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1353 states and 1495 transitions.
[2020-11-25 05:04:57,136 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:04:57,136 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:04:57,136 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:04:57,138 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:04:57,138 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_SpaghettiToken0 := false;
[L2]                 call_transferFrom_SpaghettiToken0 := false;
[L2]     CALL        call main();
[L2016]              assume null == 0;
[L2017]  CALL        call this := FreshRefGenerator__success();
[L964]               havoc newRef;
[L965]               assume Alloc[newRef] == false;
[L966]               Alloc[newRef] := true;
[L967]               assume newRef != null;
[L2017]  RET         call this := FreshRefGenerator__success();
[L2018]              assume now >= 0;
[L2019]              assume DType[this] == SpaghettiToken;
[L2020]              assume msgvalue_MSG == 0;
[L2021]              gas := gas - 53000;
[L2022]  CALL        call SpaghettiToken_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L144]               havoc __exception;
[L145]               revert := false;
[L146]   COND FALSE  !(__exception)
[L167]   CALL        call SpaghettiToken_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1110]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L996]   CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L981]               assume msgsender_MSG != null;
[L982]               Balance[this] := 0;
[L996]   RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L997]   COND FALSE  !(revert)
[L1110]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1111]  COND TRUE   revert
[L167]   RET         call SpaghettiToken_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L168]               assume !revert && gas >= 0;
[L2022]  RET         call SpaghettiToken_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L2023]              assume !revert && gas >= 0;
[L2026]  CALL        call CorralChoice_SpaghettiToken(this);
[L1910]              havoc msgsender_MSG;
[L1911]              havoc msgvalue_MSG;
[L1912]              havoc choice;
[L1913]              havoc __ret_0_totalSupply;
[L1914]              havoc arg329_s0;
[L1915]              havoc __ret_0_balanceOf;
[L1916]              havoc arg330_s0;
[L1917]              havoc arg331_s0;
[L1918]              havoc __ret_0_allowance;
[L1919]              havoc __ret_0_symbol;
[L1920]              havoc __ret_0_decimals;
[L1921]              havoc __ret_0_name;
[L1922]              havoc chef_s113;
[L1923]              havoc guy_s149;
[L1924]              havoc __ret_0_approve;
[L1925]              havoc guy_s177;
[L1926]              havoc wad_s177;
[L1927]              havoc dst_s194;
[L1928]              havoc wad_s194;
[L1929]              havoc __ret_0_transfer;
[L1930]              havoc src_s309;
[L1931]              havoc dst_s309;
[L1932]              havoc wad_s309;
[L1933]              havoc __ret_0_transferFrom;
[L1934]              havoc tmpNow;
[L1935]              havoc gas;
[L1936]              assume gas > 4000000 && gas <= 8000000;
[L1937]              tmpNow := now;
[L1938]              havoc now;
[L1939]              assume now > tmpNow;
[L1940]              assume msgsender_MSG != null;
[L1941]              assume DType[msgsender_MSG] != DSMath;
[L1942]              assume DType[msgsender_MSG] != SpaghettiToken;
[L1943]              Alloc[msgsender_MSG] := true;
[L1944]  COND FALSE  !(choice == 10)
[L1950]  COND FALSE  !(choice == 9)
[L1956]  COND FALSE  !(choice == 8)
[L1962]  COND FALSE  !(choice == 7)
[L1968]  COND FALSE  !(choice == 6)
[L1974]  COND FALSE  !(choice == 5)
[L1980]  COND FALSE  !(choice == 4)
[L1986]  COND FALSE  !(choice == 3)
[L1993]  COND FALSE  !(choice == 2)
[L2000]  COND TRUE   choice == 1
[L2001]              gas := gas - 21000;
[L2002]  COND TRUE   gas >= 0
[L2003]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2004]              assume msgvalue_MSG == 0;
[L2005]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((src_s309 == dst_s309 && (wad_s309 > balanceOf_SpaghettiToken[this][src_s309] || wad_s309 > allowance_SpaghettiToken[this][src_s309][msgsender_MSG])) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_SpaghettiToken0 := true;
[L2]                 call_transferFrom_SpaghettiToken0 := false;
[L2]                 revert := revert_hold;
[L358]               havoc __exception;
[L359]               revert := false;
[L360]   COND FALSE  !(__exception)
[L381]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1265]              __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1266]  COND TRUE   src_s309 != msgsender_MSG && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L1267]  COND TRUE   !(allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= wad_s309)
[L1268]              revert := true;
[L381]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L382]               assume !revert && gas >= 0;
[L2005]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L2026]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L2026]  CALL        call CorralChoice_SpaghettiToken(this);
[L1910]              havoc msgsender_MSG;
[L1911]              havoc msgvalue_MSG;
[L1912]              havoc choice;
[L1913]              havoc __ret_0_totalSupply;
[L1914]              havoc arg329_s0;
[L1915]              havoc __ret_0_balanceOf;
[L1916]              havoc arg330_s0;
[L1917]              havoc arg331_s0;
[L1918]              havoc __ret_0_allowance;
[L1919]              havoc __ret_0_symbol;
[L1920]              havoc __ret_0_decimals;
[L1921]              havoc __ret_0_name;
[L1922]              havoc chef_s113;
[L1923]              havoc guy_s149;
[L1924]              havoc __ret_0_approve;
[L1925]              havoc guy_s177;
[L1926]              havoc wad_s177;
[L1927]              havoc dst_s194;
[L1928]              havoc wad_s194;
[L1929]              havoc __ret_0_transfer;
[L1930]              havoc src_s309;
[L1931]              havoc dst_s309;
[L1932]              havoc wad_s309;
[L1933]              havoc __ret_0_transferFrom;
[L1934]              havoc tmpNow;
[L1935]              havoc gas;
[L1936]              assume gas > 4000000 && gas <= 8000000;
[L1937]              tmpNow := now;
[L1938]              havoc now;
[L1939]              assume now > tmpNow;
[L1940]              assume msgsender_MSG != null;
[L1941]              assume DType[msgsender_MSG] != DSMath;
[L1942]              assume DType[msgsender_MSG] != SpaghettiToken;
[L1943]              Alloc[msgsender_MSG] := true;
[L1944]  COND FALSE  !(choice == 10)
[L1950]  COND FALSE  !(choice == 9)
[L1956]  COND FALSE  !(choice == 8)
[L1962]  COND FALSE  !(choice == 7)
[L1968]  COND FALSE  !(choice == 6)
[L1974]  COND FALSE  !(choice == 5)
[L1980]  COND FALSE  !(choice == 4)
[L1986]  COND FALSE  !(choice == 3)
[L1993]  COND FALSE  !(choice == 2)
[L2000]  COND TRUE   choice == 1
[L2001]              gas := gas - 21000;
[L2002]  COND TRUE   gas >= 0
[L2003]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2004]              assume msgvalue_MSG == 0;
[L2005]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((src_s309 == dst_s309 && (wad_s309 > balanceOf_SpaghettiToken[this][src_s309] || wad_s309 > allowance_SpaghettiToken[this][src_s309][msgsender_MSG])) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_SpaghettiToken0 := true;
[L2]                 call_transferFrom_SpaghettiToken0 := false;
[L2]                 revert := revert_hold;
[L358]               havoc __exception;
[L359]               revert := false;
[L360]   COND FALSE  !(__exception)
[L381]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1265]              __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1266]  COND TRUE   src_s309 != msgsender_MSG && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L1267]  COND TRUE   !(allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= wad_s309)
[L1268]              revert := true;
[L381]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L382]               assume !revert && gas >= 0;
[L2005]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L2026]  RET         call CorralChoice_SpaghettiToken(this);

[2020-11-25 05:04:57,143 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:04:57,143 INFO  L82        PathProgramCache]: Analyzing trace with hash -1120134569, now seen corresponding path program 1 times
[2020-11-25 05:04:57,144 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:04:57,158 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:04:57,185 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:04:57,185 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:04:57,185 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:04:57,187 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:04:57,187 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:04:57,187 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:04:57,187 INFO  L87              Difference]: Start difference. First operand 1353 states and 1495 transitions. cyclomatic complexity: 144 Second operand 4 states.
[2020-11-25 05:04:57,458 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:04:57,458 INFO  L93              Difference]: Finished difference Result 1737 states and 1930 transitions.
[2020-11-25 05:04:57,458 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:04:57,459 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1737 states and 1930 transitions.
[2020-11-25 05:04:57,470 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:04:57,481 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1737 states to 1673 states and 1854 transitions.
[2020-11-25 05:04:57,481 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 504
[2020-11-25 05:04:57,482 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 518
[2020-11-25 05:04:57,482 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1673 states and 1854 transitions.
[2020-11-25 05:04:57,485 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:04:57,485 INFO  L728         BuchiCegarLoop]: Abstraction has 1673 states and 1854 transitions.
[2020-11-25 05:04:57,487 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1673 states and 1854 transitions.
[2020-11-25 05:04:57,507 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1673 to 1483.
[2020-11-25 05:04:57,508 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1483 states.
[2020-11-25 05:04:57,511 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1483 states to 1483 states and 1617 transitions.
[2020-11-25 05:04:57,511 INFO  L751         BuchiCegarLoop]: Abstraction has 1483 states and 1617 transitions.
[2020-11-25 05:04:57,511 INFO  L631         BuchiCegarLoop]: Abstraction has 1483 states and 1617 transitions.
[2020-11-25 05:04:57,512 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 05:04:57,512 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1483 states and 1617 transitions.
[2020-11-25 05:04:57,517 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:04:57,517 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:04:57,517 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:04:57,520 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:04:57,520 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_SpaghettiToken0 := false;
[L2]                 call_transferFrom_SpaghettiToken0 := false;
[L2]     CALL        call main();
[L2016]              assume null == 0;
[L2017]  CALL        call this := FreshRefGenerator__success();
[L964]               havoc newRef;
[L965]               assume Alloc[newRef] == false;
[L966]               Alloc[newRef] := true;
[L967]               assume newRef != null;
[L2017]  RET         call this := FreshRefGenerator__success();
[L2018]              assume now >= 0;
[L2019]              assume DType[this] == SpaghettiToken;
[L2020]              assume msgvalue_MSG == 0;
[L2021]              gas := gas - 53000;
[L2022]  CALL        call SpaghettiToken_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L144]               havoc __exception;
[L145]               revert := false;
[L146]   COND FALSE  !(__exception)
[L167]   CALL        call SpaghettiToken_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1110]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L996]   CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L981]               assume msgsender_MSG != null;
[L982]               Balance[this] := 0;
[L996]   RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L997]   COND FALSE  !(revert)
[L1110]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1111]  COND FALSE  !(revert)
[L1114]  CALL        call SpaghettiToken_SpaghettiToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_SpaghettiToken[this] := 0;
[L1082]              balanceOf_SpaghettiToken[this] := zeroRefintArr();
[L1083]              sum_balanceOf0[this] := 0;
[L1084]              allowance_SpaghettiToken[this] := zeroRefRefintArr();
[L1085]              sum_allowance1[this] := 0;
[L1086]              symbol_SpaghettiToken[this] := 2010503932;
[L1087]              decimals_SpaghettiToken[this] := 18;
[L1088]              name_SpaghettiToken[this] := 408148383;
[L1090]              totalSupply_SpaghettiToken[this] := 15000000000000000000000000;
[L1091]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][chef_s113];
[L1092]              balanceOf_SpaghettiToken[this][chef_s113] := 15000000000000000000000000;
[L1093]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][chef_s113];
[L1114]  RET         call SpaghettiToken_SpaghettiToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1115]  COND FALSE  !(revert)
[L167]   RET         call SpaghettiToken_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L168]               assume !revert && gas >= 0;
[L2022]  RET         call SpaghettiToken_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L2023]              assume !revert && gas >= 0;
[L2026]  CALL        call CorralChoice_SpaghettiToken(this);
[L1910]              havoc msgsender_MSG;
[L1911]              havoc msgvalue_MSG;
[L1912]              havoc choice;
[L1913]              havoc __ret_0_totalSupply;
[L1914]              havoc arg329_s0;
[L1915]              havoc __ret_0_balanceOf;
[L1916]              havoc arg330_s0;
[L1917]              havoc arg331_s0;
[L1918]              havoc __ret_0_allowance;
[L1919]              havoc __ret_0_symbol;
[L1920]              havoc __ret_0_decimals;
[L1921]              havoc __ret_0_name;
[L1922]              havoc chef_s113;
[L1923]              havoc guy_s149;
[L1924]              havoc __ret_0_approve;
[L1925]              havoc guy_s177;
[L1926]              havoc wad_s177;
[L1927]              havoc dst_s194;
[L1928]              havoc wad_s194;
[L1929]              havoc __ret_0_transfer;
[L1930]              havoc src_s309;
[L1931]              havoc dst_s309;
[L1932]              havoc wad_s309;
[L1933]              havoc __ret_0_transferFrom;
[L1934]              havoc tmpNow;
[L1935]              havoc gas;
[L1936]              assume gas > 4000000 && gas <= 8000000;
[L1937]              tmpNow := now;
[L1938]              havoc now;
[L1939]              assume now > tmpNow;
[L1940]              assume msgsender_MSG != null;
[L1941]              assume DType[msgsender_MSG] != DSMath;
[L1942]              assume DType[msgsender_MSG] != SpaghettiToken;
[L1943]              Alloc[msgsender_MSG] := true;
[L1944]  COND FALSE  !(choice == 10)
[L1950]  COND FALSE  !(choice == 9)
[L1956]  COND FALSE  !(choice == 8)
[L1962]  COND FALSE  !(choice == 7)
[L1968]  COND FALSE  !(choice == 6)
[L1974]  COND FALSE  !(choice == 5)
[L1980]  COND FALSE  !(choice == 4)
[L1986]  COND FALSE  !(choice == 3)
[L1993]  COND FALSE  !(choice == 2)
[L2000]  COND TRUE   choice == 1
[L2001]              gas := gas - 21000;
[L2002]  COND TRUE   gas >= 0
[L2003]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2004]              assume msgvalue_MSG == 0;
[L2005]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((src_s309 == dst_s309 && (wad_s309 > balanceOf_SpaghettiToken[this][src_s309] || wad_s309 > allowance_SpaghettiToken[this][src_s309][msgsender_MSG])) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_SpaghettiToken0 := true;
[L2]                 call_transferFrom_SpaghettiToken0 := false;
[L2]                 revert := revert_hold;
[L358]               havoc __exception;
[L359]               revert := false;
[L360]   COND FALSE  !(__exception)
[L381]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1265]              __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1266]  COND FALSE  !(src_s309 != msgsender_MSG && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L1283]  COND FALSE  !(!(balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L1287]  COND TRUE   DType[this] == SpaghettiToken
[L1288]  CALL        call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L1031]              z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1032]  COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L1288]  RET         call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L1289]  COND FALSE  !(revert)
[L1295]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][src_s309];
[L1296]              balanceOf_SpaghettiToken[this][src_s309] := __var_6;
[L1297]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][src_s309];
[L1298]              one_s309 := wad_s309 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1299]  COND TRUE   DType[this] == SpaghettiToken
[L1300]  CALL        call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L1031]              z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1032]  COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L1300]  RET         call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L1301]  COND FALSE  !(revert)
[L1307]              ninetynine_s309 := ninetynine_s309;
[L1308]  COND TRUE   DType[this] == SpaghettiToken
[L1309]  CALL        call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L1013]              z_s23 := (x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1014]  COND FALSE  !(!((x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= x_s23))
[L1309]  RET         call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L1310]  COND FALSE  !(revert)
[L1316]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][dst_s309];
[L1317]              balanceOf_SpaghettiToken[this][dst_s309] := __var_7;
[L1318]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][dst_s309];
[L1319]  CALL        call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L1345]  COND TRUE   DType[this] == SpaghettiToken
[L1346]  CALL        call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L1031]              z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1032]  COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L1346]  RET         call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L1347]  COND FALSE  !(revert)
[L1353]              totalSupply_SpaghettiToken[this] := __var_8;
[L1354]              assert { :EventEmitted "Burn_SpaghettiToken" } true;
[L1319]  RET         call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L1320]  COND FALSE  !(revert)
[L1323]              assert { :EventEmitted "Transfer_SpaghettiToken" } true;
[L1324]              __ret_0_ := true;
[L381]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L382]               assume !revert && gas >= 0;
[L2005]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L2026]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L2026]  CALL        call CorralChoice_SpaghettiToken(this);
[L1910]              havoc msgsender_MSG;
[L1911]              havoc msgvalue_MSG;
[L1912]              havoc choice;
[L1913]              havoc __ret_0_totalSupply;
[L1914]              havoc arg329_s0;
[L1915]              havoc __ret_0_balanceOf;
[L1916]              havoc arg330_s0;
[L1917]              havoc arg331_s0;
[L1918]              havoc __ret_0_allowance;
[L1919]              havoc __ret_0_symbol;
[L1920]              havoc __ret_0_decimals;
[L1921]              havoc __ret_0_name;
[L1922]              havoc chef_s113;
[L1923]              havoc guy_s149;
[L1924]              havoc __ret_0_approve;
[L1925]              havoc guy_s177;
[L1926]              havoc wad_s177;
[L1927]              havoc dst_s194;
[L1928]              havoc wad_s194;
[L1929]              havoc __ret_0_transfer;
[L1930]              havoc src_s309;
[L1931]              havoc dst_s309;
[L1932]              havoc wad_s309;
[L1933]              havoc __ret_0_transferFrom;
[L1934]              havoc tmpNow;
[L1935]              havoc gas;
[L1936]              assume gas > 4000000 && gas <= 8000000;
[L1937]              tmpNow := now;
[L1938]              havoc now;
[L1939]              assume now > tmpNow;
[L1940]              assume msgsender_MSG != null;
[L1941]              assume DType[msgsender_MSG] != DSMath;
[L1942]              assume DType[msgsender_MSG] != SpaghettiToken;
[L1943]              Alloc[msgsender_MSG] := true;
[L1944]  COND FALSE  !(choice == 10)
[L1950]  COND FALSE  !(choice == 9)
[L1956]  COND FALSE  !(choice == 8)
[L1962]  COND FALSE  !(choice == 7)
[L1968]  COND FALSE  !(choice == 6)
[L1974]  COND FALSE  !(choice == 5)
[L1980]  COND FALSE  !(choice == 4)
[L1986]  COND FALSE  !(choice == 3)
[L1993]  COND FALSE  !(choice == 2)
[L2000]  COND TRUE   choice == 1
[L2001]              gas := gas - 21000;
[L2002]  COND TRUE   gas >= 0
[L2003]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2004]              assume msgvalue_MSG == 0;
[L2005]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((src_s309 == dst_s309 && (wad_s309 > balanceOf_SpaghettiToken[this][src_s309] || wad_s309 > allowance_SpaghettiToken[this][src_s309][msgsender_MSG])) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_SpaghettiToken0 := true;
[L2]                 call_transferFrom_SpaghettiToken0 := false;
[L2]                 revert := revert_hold;
[L358]               havoc __exception;
[L359]               revert := false;
[L360]   COND FALSE  !(__exception)
[L381]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1265]              __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1266]  COND FALSE  !(src_s309 != msgsender_MSG && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L1283]  COND FALSE  !(!(balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L1287]  COND TRUE   DType[this] == SpaghettiToken
[L1288]  CALL        call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L1031]              z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1032]  COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L1288]  RET         call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L1289]  COND FALSE  !(revert)
[L1295]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][src_s309];
[L1296]              balanceOf_SpaghettiToken[this][src_s309] := __var_6;
[L1297]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][src_s309];
[L1298]              one_s309 := wad_s309 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1299]  COND TRUE   DType[this] == SpaghettiToken
[L1300]  CALL        call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L1031]              z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1032]  COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L1300]  RET         call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L1301]  COND FALSE  !(revert)
[L1307]              ninetynine_s309 := ninetynine_s309;
[L1308]  COND TRUE   DType[this] == SpaghettiToken
[L1309]  CALL        call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L1013]              z_s23 := (x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1014]  COND FALSE  !(!((x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= x_s23))
[L1309]  RET         call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L1310]  COND FALSE  !(revert)
[L1316]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][dst_s309];
[L1317]              balanceOf_SpaghettiToken[this][dst_s309] := __var_7;
[L1318]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][dst_s309];
[L1319]  CALL        call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L1345]  COND TRUE   DType[this] == SpaghettiToken
[L1346]  CALL        call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L1031]              z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1032]  COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L1346]  RET         call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L1347]  COND FALSE  !(revert)
[L1353]              totalSupply_SpaghettiToken[this] := __var_8;
[L1354]              assert { :EventEmitted "Burn_SpaghettiToken" } true;
[L1319]  RET         call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L1320]  COND FALSE  !(revert)
[L1323]              assert { :EventEmitted "Transfer_SpaghettiToken" } true;
[L1324]              __ret_0_ := true;
[L381]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L382]               assume !revert && gas >= 0;
[L2005]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L2026]  RET         call CorralChoice_SpaghettiToken(this);

[2020-11-25 05:04:57,525 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:04:57,526 INFO  L82        PathProgramCache]: Analyzing trace with hash 543178125, now seen corresponding path program 1 times
[2020-11-25 05:04:57,527 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:04:57,576 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:04:57,616 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:04:57,672 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:04:57,672 INFO  L82        PathProgramCache]: Analyzing trace with hash -893830495, now seen corresponding path program 1 times
[2020-11-25 05:04:57,673 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:04:57,691 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:04:57,712 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:04:57,735 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:04:57,736 INFO  L82        PathProgramCache]: Analyzing trace with hash -439646931, now seen corresponding path program 1 times
[2020-11-25 05:04:57,736 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:04:57,795 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:04:57,858 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
[2020-11-25 05:04:58,798 WARN  L188               SmtUtils]: Spent 726.00 ms on a formula simplification. DAG size of input: 170 DAG size of output: 164
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #5: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
[2020-11-25 05:04:59,124 WARN  L188               SmtUtils]: Spent 304.00 ms on a formula simplification. DAG size of input: 80 DAG size of output: 79
[2020-11-25 05:04:59,544 WARN  L188               SmtUtils]: Spent 419.00 ms on a formula simplification. DAG size of input: 124 DAG size of output: 119
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
[2020-11-25 05:04:59,898 WARN  L188               SmtUtils]: Spent 350.00 ms on a formula simplification. DAG size of input: 111 DAG size of output: 110
[2020-11-25 05:05:00,604 WARN  L188               SmtUtils]: Spent 704.00 ms on a formula simplification. DAG size of input: 152 DAG size of output: 134
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
[2020-11-25 05:05:00,715 WARN  L188               SmtUtils]: Spent 101.00 ms on a formula simplification that was a NOOP. DAG size: 85
[2020-11-25 05:05:01,468 WARN  L188               SmtUtils]: Spent 751.00 ms on a formula simplification. DAG size of input: 228 DAG size of output: 223
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1259 to 2503
[2020-11-25 05:05:01,764 WARN  L188               SmtUtils]: Spent 290.00 ms on a formula simplification that was a NOOP. DAG size: 206
[2020-11-25 05:05:02,743 WARN  L188               SmtUtils]: Spent 977.00 ms on a formula simplification. DAG size of input: 268 DAG size of output: 237
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 2647 to 5281
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
[2020-11-25 05:05:03,020 WARN  L188               SmtUtils]: Spent 262.00 ms on a formula simplification that was a NOOP. DAG size: 159
[2020-11-25 05:05:03,557 WARN  L188               SmtUtils]: Spent 535.00 ms on a formula simplification that was a NOOP. DAG size: 281
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3331 to 6661
[2020-11-25 05:05:04,174 WARN  L188               SmtUtils]: Spent 607.00 ms on a formula simplification that was a NOOP. DAG size: 222
[2020-11-25 05:05:04,710 WARN  L188               SmtUtils]: Spent 533.00 ms on a formula simplification that was a NOOP. DAG size: 222
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
[2020-11-25 05:05:05,098 WARN  L188               SmtUtils]: Spent 374.00 ms on a formula simplification that was a NOOP. DAG size: 147
[2020-11-25 05:05:05,120 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 113 to 223
[2020-11-25 05:05:05,762 WARN  L188               SmtUtils]: Spent 416.00 ms on a formula simplification. DAG size of input: 170 DAG size of output: 164
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #5: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
[2020-11-25 05:05:05,941 WARN  L188               SmtUtils]: Spent 173.00 ms on a formula simplification. DAG size of input: 80 DAG size of output: 79
[2020-11-25 05:05:06,169 WARN  L188               SmtUtils]: Spent 226.00 ms on a formula simplification. DAG size of input: 124 DAG size of output: 119
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
[2020-11-25 05:05:06,467 WARN  L188               SmtUtils]: Spent 295.00 ms on a formula simplification. DAG size of input: 111 DAG size of output: 110
[2020-11-25 05:05:07,140 WARN  L188               SmtUtils]: Spent 671.00 ms on a formula simplification. DAG size of input: 152 DAG size of output: 134
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
[2020-11-25 05:05:07,282 WARN  L188               SmtUtils]: Spent 138.00 ms on a formula simplification that was a NOOP. DAG size: 84
[2020-11-25 05:05:07,813 WARN  L188               SmtUtils]: Spent 529.00 ms on a formula simplification. DAG size of input: 227 DAG size of output: 222
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
[2020-11-25 05:05:08,273 WARN  L188               SmtUtils]: Spent 458.00 ms on a formula simplification that was a NOOP. DAG size: 205
[2020-11-25 05:05:09,283 WARN  L188               SmtUtils]: Spent 1.01 s on a formula simplification. DAG size of input: 266 DAG size of output: 236
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
[2020-11-25 05:05:09,603 WARN  L188               SmtUtils]: Spent 310.00 ms on a formula simplification that was a NOOP. DAG size: 162
[2020-11-25 05:05:10,201 WARN  L188               SmtUtils]: Spent 596.00 ms on a formula simplification that was a NOOP. DAG size: 284
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3331 to 6661
[2020-11-25 05:05:10,854 WARN  L188               SmtUtils]: Spent 645.00 ms on a formula simplification that was a NOOP. DAG size: 225
[2020-11-25 05:05:12,761 WARN  L188               SmtUtils]: Spent 1.90 s on a formula simplification. DAG size of input: 395 DAG size of output: 387
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
[2020-11-25 05:05:13,007 WARN  L188               SmtUtils]: Spent 235.00 ms on a formula simplification that was a NOOP. DAG size: 180
[2020-11-25 05:05:13,304 WARN  L188               SmtUtils]: Spent 283.00 ms on a formula simplification that was a NOOP. DAG size: 249
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
[2020-11-25 05:05:13,508 WARN  L188               SmtUtils]: Spent 200.00 ms on a formula simplification that was a NOOP. DAG size: 180
[2020-11-25 05:05:14,206 WARN  L188               SmtUtils]: Spent 696.00 ms on a formula simplification. DAG size of input: 251 DAG size of output: 250
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
[2020-11-25 05:05:14,592 WARN  L188               SmtUtils]: Spent 383.00 ms on a formula simplification that was a NOOP. DAG size: 246
[2020-11-25 05:05:14,654 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:05:14,710 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:05:14,723 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:05:14 BasicIcfg
[2020-11-25 05:05:14,723 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 05:05:14,723 INFO  L168              Benchmark]: Toolchain (without parser) took 19872.47 ms. Allocated memory was 1.0 GB in the beginning and 2.3 GB in the end (delta: 1.3 GB). Free memory was 940.6 MB in the beginning and 2.1 GB in the end (delta: -1.2 GB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
[2020-11-25 05:05:14,724 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:05:14,724 INFO  L168              Benchmark]: Boogie Preprocessor took 67.90 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:05:14,724 INFO  L168              Benchmark]: UtopiaSpecLang took 44.20 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:05:14,725 INFO  L168              Benchmark]: Boogie Printer took 9.43 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:05:14,725 INFO  L168              Benchmark]: RCFGBuilder took 471.77 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.2 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:05:14,725 INFO  L168              Benchmark]: UtopiaLTL2Aut took 33.82 ms. Allocated memory is still 1.0 GB. Free memory was 876.2 MB in the beginning and 867.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 05:05:14,726 INFO  L168              Benchmark]: BÃ¼chi Program Product took 930.67 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 56.1 MB). Free memory was 867.2 MB in the beginning and 921.6 MB in the end (delta: -54.4 MB). Peak memory consumption was 151.2 MB. Max. memory is 15.3 GB.
[2020-11-25 05:05:14,726 INFO  L168              Benchmark]: BlockEncodingV2 took 86.66 ms. Allocated memory is still 1.1 GB. Free memory was 921.6 MB in the beginning and 883.6 MB in the end (delta: 38.0 MB). Peak memory consumption was 38.0 MB. Max. memory is 15.3 GB.
[2020-11-25 05:05:14,726 INFO  L168              Benchmark]: BuchiAutomizer took 18224.84 ms. Allocated memory was 1.1 GB in the beginning and 2.3 GB in the end (delta: 1.2 GB). Free memory was 883.6 MB in the beginning and 2.1 GB in the end (delta: -1.3 GB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-25 05:05:14,729 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1774 locations, 3010 edges
  - StatisticsResult: Encoded RCFG
    1717 locations, 2869 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 67.90 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 44.20 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 9.43 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 471.77 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.2 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 33.82 ms. Allocated memory is still 1.0 GB. Free memory was 876.2 MB in the beginning and 867.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 930.67 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 56.1 MB). Free memory was 867.2 MB in the beginning and 921.6 MB in the end (delta: -54.4 MB). Peak memory consumption was 151.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 86.66 ms. Allocated memory is still 1.1 GB. Free memory was 921.6 MB in the beginning and 883.6 MB in the end (delta: 38.0 MB). Peak memory consumption was 38.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 18224.84 ms. Allocated memory was 1.1 GB in the beginning and 2.3 GB in the end (delta: 1.2 GB). Free memory was 883.6 MB in the beginning and 2.1 GB in the end (delta: -1.3 GB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    743 locations, 932 edges
  - StatisticsResult: BuchiProgram size
    1774 locations, 3010 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 2 terminating modules (2 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.2 modules have a trivial ranking function, the largest among these consists of 4 locations. The remainder module has 1483 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 18.1s and 3 iterations.  TraceHistogramMax:3. Analysis of lassos took 17.2s. Construction of modules took 0.2s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 2. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 2 MinimizatonAttempts, 190 StatesRemovedByMinimization, 1 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1483 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 3283 SDtfs, 3297 SDslu, 1471 SDs, 0 SdLazy, 598 SolverSat, 764 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.2s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU2 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129639936) = (new SpaghettiToken)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639937, chef : 115792089237316195423570985008687907853269984665640564039457584007913129639940});
[L144]               havoc __exception;
[L145]               revert := false;
[L146]   COND FALSE  !(__exception)
[L167]   CALL        call SpaghettiToken_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1110]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L996]   CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L981]               assume msgsender_MSG != null;
[L982]               Balance[this] := 0;
[L996]   RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L997]   COND FALSE  !(revert)
[L1110]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1111]  COND FALSE  !(revert)
[L1114]  CALL        call SpaghettiToken_SpaghettiToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_SpaghettiToken[this] := 0;
[L1082]              balanceOf_SpaghettiToken[this] := zeroRefintArr();
[L1083]              sum_balanceOf0[this] := 0;
[L1084]              allowance_SpaghettiToken[this] := zeroRefRefintArr();
[L1085]              sum_allowance1[this] := 0;
[L1086]              symbol_SpaghettiToken[this] := 2010503932;
[L1087]              decimals_SpaghettiToken[this] := 18;
[L1088]              name_SpaghettiToken[this] := 408148383;
[L1090]              totalSupply_SpaghettiToken[this] := 15000000000000000000000000;
[L1091]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][chef_s113];
[L1092]              balanceOf_SpaghettiToken[this][chef_s113] := 15000000000000000000000000;
[L1093]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][chef_s113];
[L1114]  RET         call SpaghettiToken_SpaghettiToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L1115]  COND FALSE  !(revert)
[L167]   RET         call SpaghettiToken_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, chef_s113);
[L168]               assume !revert && gas >= 0;
[L2022]  RET         call SpaghettiToken_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, chef_s113);
SpaghettiToken(115792089237316195423570985008687907853269984665640564039457584007913129639936).transferFrom~address~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639940, src : 115792089237316195423570985008687907853269984665640564039457584007913129639940, dst : 115792089237316195423570985008687907853269984665640564039457584007913129639940, wad : 1});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((src_s309 == dst_s309 && (wad_s309 > balanceOf_SpaghettiToken[this][src_s309] || wad_s309 > allowance_SpaghettiToken[this][src_s309][msgsender_MSG])) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_SpaghettiToken0 := true;
[L2]                 call_transferFrom_SpaghettiToken0 := false;
[L2]                 revert := revert_hold;
[L358]               havoc __exception;
[L359]               revert := false;
[L360]   COND FALSE  !(__exception)
[L381]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1265]              __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1266]  COND FALSE  !(src_s309 != msgsender_MSG && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L1283]  COND FALSE  !(!(balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L1287]  COND TRUE   DType[this] == SpaghettiToken
[L1288]  CALL        call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L1031]              z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1032]  COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L1288]  RET         call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L1289]  COND FALSE  !(revert)
[L1295]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][src_s309];
[L1296]              balanceOf_SpaghettiToken[this][src_s309] := __var_6;
[L1297]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][src_s309];
[L1298]              one_s309 := wad_s309 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1299]  COND TRUE   DType[this] == SpaghettiToken
[L1300]  CALL        call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L1031]              z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1032]  COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L1300]  RET         call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L1301]  COND FALSE  !(revert)
[L1307]              ninetynine_s309 := ninetynine_s309;
[L1308]  COND TRUE   DType[this] == SpaghettiToken
[L1309]  CALL        call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L1013]              z_s23 := (x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1014]  COND FALSE  !(!((x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= x_s23))
[L1309]  RET         call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L1310]  COND FALSE  !(revert)
[L1316]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][dst_s309];
[L1317]              balanceOf_SpaghettiToken[this][dst_s309] := __var_7;
[L1318]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][dst_s309];
[L1319]  CALL        call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L1345]  COND TRUE   DType[this] == SpaghettiToken
[L1346]  CALL        call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L1031]              z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1032]  COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L1346]  RET         call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L1347]  COND FALSE  !(revert)
[L1353]              totalSupply_SpaghettiToken[this] := __var_8;
[L1354]              assert { :EventEmitted "Burn_SpaghettiToken" } true;
[L1319]  RET         call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L1320]  COND FALSE  !(revert)
[L1323]              assert { :EventEmitted "Transfer_SpaghettiToken" } true;
[L1324]              __ret_0_ := true;
[L381]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L382]               assume !revert && gas >= 0;
[L2005]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);

Loop:
SpaghettiToken(115792089237316195423570985008687907853269984665640564039457584007913129639936).transferFrom~address~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639940, src : 115792089237316195423570985008687907853269984665640564039457584007913129639940, dst : 115792089237316195423570985008687907853269984665640564039457584007913129639940, wad : 14999999999999999999999900});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((src_s309 == dst_s309 && (wad_s309 > balanceOf_SpaghettiToken[this][src_s309] || wad_s309 > allowance_SpaghettiToken[this][src_s309][msgsender_MSG])) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_SpaghettiToken0 := true;
[L2]                 call_transferFrom_SpaghettiToken0 := false;
[L2]                 revert := revert_hold;
[L358]               havoc __exception;
[L359]               revert := false;
[L360]   COND FALSE  !(__exception)
[L381]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1265]              __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1266]  COND FALSE  !(src_s309 != msgsender_MSG && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L1283]  COND FALSE  !(!(balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L1287]  COND TRUE   DType[this] == SpaghettiToken
[L1288]  CALL        call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L1031]              z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1032]  COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L1288]  RET         call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L1289]  COND FALSE  !(revert)
[L1295]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][src_s309];
[L1296]              balanceOf_SpaghettiToken[this][src_s309] := __var_6;
[L1297]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][src_s309];
[L1298]              one_s309 := wad_s309 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1299]  COND TRUE   DType[this] == SpaghettiToken
[L1300]  CALL        call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L1031]              z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1032]  COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L1300]  RET         call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L1301]  COND FALSE  !(revert)
[L1307]              ninetynine_s309 := ninetynine_s309;
[L1308]  COND TRUE   DType[this] == SpaghettiToken
[L1309]  CALL        call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L1013]              z_s23 := (x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1014]  COND FALSE  !(!((x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= x_s23))
[L1309]  RET         call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L1310]  COND FALSE  !(revert)
[L1316]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][dst_s309];
[L1317]              balanceOf_SpaghettiToken[this][dst_s309] := __var_7;
[L1318]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][dst_s309];
[L1319]  CALL        call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L1345]  COND TRUE   DType[this] == SpaghettiToken
[L1346]  CALL        call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L1031]              z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1032]  COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L1346]  RET         call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L1347]  COND FALSE  !(revert)
[L1353]              totalSupply_SpaghettiToken[this] := __var_8;
[L1354]              assert { :EventEmitted "Burn_SpaghettiToken" } true;
[L1319]  RET         call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L1320]  COND FALSE  !(revert)
[L1323]              assert { :EventEmitted "Transfer_SpaghettiToken" } true;
[L1324]              __ret_0_ := true;
[L381]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L382]               assume !revert && gas >= 0;
[L2005]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
