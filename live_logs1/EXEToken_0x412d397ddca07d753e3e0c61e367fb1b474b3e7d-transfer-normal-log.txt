This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 16:06:58,194 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 16:06:58,195 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 16:06:58,206 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 16:06:58,206 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 16:06:58,206 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 16:06:58,207 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 16:06:58,209 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 16:06:58,210 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 16:06:58,211 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 16:06:58,211 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 16:06:58,212 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 16:06:58,212 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 16:06:58,213 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 16:06:58,214 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 16:06:58,214 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 16:06:58,215 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 16:06:58,216 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 16:06:58,217 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 16:06:58,218 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 16:06:58,219 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 16:06:58,220 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 16:06:58,222 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 16:06:58,222 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 16:06:58,222 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 16:06:58,222 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 16:06:58,223 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 16:06:58,223 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 16:06:58,223 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 16:06:58,224 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 16:06:58,224 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 16:06:58,224 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 16:06:58,225 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 16:06:58,225 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 16:06:58,226 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 16:06:58,226 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 16:06:58,227 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 16:06:58,227 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 16:06:58,227 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 16:06:58,228 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 16:06:58,228 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 16:06:58,229 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 16:06:58,236 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 16:06:58,237 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 16:06:58,237 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 16:06:58,238 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 16:06:58,238 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 16:06:58,238 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 16:06:58,238 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 16:06:58,238 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 16:06:58,238 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 16:06:58,238 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 16:06:58,238 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 16:06:58,238 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 16:06:58,239 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 16:06:58,239 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 16:06:58,239 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 16:06:58,239 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 16:06:58,239 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 16:06:58,239 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 16:06:58,239 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 16:06:58,239 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 16:06:58,239 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 16:06:58,239 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 16:06:58,240 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 16:06:58,240 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 16:06:58,240 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 16:06:58,240 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 16:06:58,264 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 16:06:58,278 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 16:06:58,281 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 16:06:58,282 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 16:06:58,282 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 16:06:58,283 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl
[2020-11-25 16:06:58,283 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl'
[2020-11-25 16:06:58,392 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 16:06:58,394 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 16:06:58,395 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 16:06:58,395 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 16:06:58,395 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 16:06:58,416 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:58" (1/1) ...
[2020-11-25 16:06:58,418 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:58" (1/1) ...
[2020-11-25 16:06:58,467 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:58" (1/1) ...
[2020-11-25 16:06:58,468 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:58" (1/1) ...
[2020-11-25 16:06:58,497 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:58" (1/1) ...
[2020-11-25 16:06:58,511 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:58" (1/1) ...
[2020-11-25 16:06:58,523 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:58" (1/1) ...
[2020-11-25 16:06:58,536 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 16:06:58,536 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 16:06:58,536 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 16:06:58,538 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 16:06:58,543 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:58" (1/1) ...
[2020-11-25 16:06:58,573 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(EXEToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(EXEToken.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _lockTimes_EXEToken[this] == old(_lockTimes_EXEToken[this]) && _lockAmounts_EXEToken[this] == old(_lockAmounts_EXEToken[this]) && stopped_Stoppable[this] == old(stopped_Stoppable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 16:06:58,583 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(EXEToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(EXEToken.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _lockTimes_EXEToken[this] == old(_lockTimes_EXEToken[this]) && _lockAmounts_EXEToken[this] == old(_lockAmounts_EXEToken[this]) && stopped_Stoppable[this] == old(stopped_Stoppable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 16:06:58,594 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(EXEToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(EXEToken.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _lockTimes_EXEToken[this] == old(_lockTimes_EXEToken[this]) && _lockAmounts_EXEToken[this] == old(_lockAmounts_EXEToken[this]) && stopped_Stoppable[this] == old(stopped_Stoppable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 16:06:58,605 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=recipient_s1083 ) && msg.sender!=recipient_s1083 ) && amount_s1083<=_balances_ERC20[this][msg.sender] ) && ( _balances_ERC20[this][recipient_s1083] + amount_s1083 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && amount_s1083>=0 ) && amount_s1083<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s1083]>=0 ) && _balances_ERC20[this][recipient_s1083]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[recipient_s1083,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>],IdentifierExpression[recipient_s1083,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s1083,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],[IdentifierExpression[recipient_s1083,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],IdentifierExpression[amount_s1083,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s1083,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s1083,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],[IdentifierExpression[recipient_s1083,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],[IdentifierExpression[recipient_s1083,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 16:06:58,608 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && _balances_ERC20[this][msg.sender]==( ( old(_balances_ERC20[this][msg.sender]) ) - amount_s1083 ) ) && _balances_ERC20[this][recipient_s1083]==( ( old(_balances_ERC20[this][recipient_s1083]) ) + amount_s1083 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _allowed_ERC20[this]==( old(_allowed_ERC20[this]) ) ) && _balances_ERC20[this][p1]==( old(_balances_ERC20[this][p1]) ) ) && _lockTimes_EXEToken[this]==( old(_lockTimes_EXEToken[this]) ) ) && _lockAmounts_EXEToken[this]==( old(_lockAmounts_EXEToken[this]) ) ) && stopped_Stoppable[this]==( old(stopped_Stoppable[this]) ) ) && _owner_Ownable[this]==( old(_owner_Ownable[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_EXEToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]]],IdentifierExpression[amount_s1083,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],[IdentifierExpression[recipient_s1083,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],[IdentifierExpression[recipient_s1083,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]]],IdentifierExpression[amount_s1083,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_lockTimes_EXEToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_lockTimes_EXEToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_lockAmounts_EXEToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_lockAmounts_EXEToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[stopped_Stoppable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[stopped_Stoppable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_EXEToken>]]]]]]
[2020-11-25 16:06:58,614 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(EXEToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(EXEToken.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _lockTimes_EXEToken[this] == old(_lockTimes_EXEToken[this]) && _lockAmounts_EXEToken[this] == old(_lockAmounts_EXEToken[this]) && stopped_Stoppable[this] == old(stopped_Stoppable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 16:06:58,614 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_EXEToken0) ==> ( <>AP(success_transfer_EXEToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 16:06:58,630 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:06:58 PropertyContainer
[2020-11-25 16:06:58,631 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 16:06:58,631 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 16:06:58,631 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 16:06:58,631 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 16:06:58,633 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:58" (1/2) ...
[2020-11-25 16:06:58,633 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 16:06:58,633 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 16:06:58,657 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:06:58" (2/2) ...
[2020-11-25 16:06:58,658 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 16:06:58,658 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 16:06:58,658 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 16:06:58,659 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 16:06:58,659 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:58" (1/2) ...
[2020-11-25 16:06:58,717 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 16:06:58,718 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:06:58,718 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 16:06:58,718 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 16:06:58,718 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:06:58,718 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:06:58,718 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:06:58,718 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:06:58,718 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 16:06:58,718 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 16:06:58,719 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 16:06:58,719 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 16:06:58,719 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 16:06:58,719 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 16:06:58,719 INFO  L130     BoogieDeclarations]: Found specification of procedure _isOwner_Ownable__success
[2020-11-25 16:06:58,719 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 16:06:58,719 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 16:06:58,719 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__success
[2020-11-25 16:06:58,719 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 16:06:58,719 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 16:06:58,719 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 16:06:58,720 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 16:06:58,720 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 16:06:58,720 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 16:06:58,720 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 16:06:58,720 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 16:06:58,720 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 16:06:58,720 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 16:06:58,720 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 16:06:58,720 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 16:06:58,721 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 16:06:58,721 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 16:06:58,721 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 16:06:58,721 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 16:06:58,721 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 16:06:58,721 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 16:06:58,721 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 16:06:58,721 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 16:06:58,721 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 16:06:58,721 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 16:06:58,721 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 16:06:58,722 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 16:06:58,722 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 16:06:58,722 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 16:06:58,722 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 16:06:58,722 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 16:06:58,722 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 16:06:58,722 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 16:06:58,722 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 16:06:58,722 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 16:06:58,722 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 16:06:58,723 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 16:06:58,723 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 16:06:58,723 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 16:06:58,723 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 16:06:58,723 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 16:06:58,723 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 16:06:58,723 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 16:06:58,723 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-25 16:06:58,723 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable
[2020-11-25 16:06:58,723 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable
[2020-11-25 16:06:58,723 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable
[2020-11-25 16:06:58,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable
[2020-11-25 16:06:58,724 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-25 16:06:58,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-25 16:06:58,724 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20Burnable__success
[2020-11-25 16:06:58,724 INFO  L130     BoogieDeclarations]: Found specification of procedure Stoppable_Stoppable_NoBaseCtor__success
[2020-11-25 16:06:58,724 INFO  L130     BoogieDeclarations]: Found specification of procedure Stoppable_Stoppable
[2020-11-25 16:06:58,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure Stoppable_Stoppable
[2020-11-25 16:06:58,724 INFO  L130     BoogieDeclarations]: Found specification of procedure stop_Stoppable
[2020-11-25 16:06:58,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure stop_Stoppable
[2020-11-25 16:06:58,725 INFO  L130     BoogieDeclarations]: Found specification of procedure start_Stoppable
[2020-11-25 16:06:58,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure start_Stoppable
[2020-11-25 16:06:58,725 INFO  L130     BoogieDeclarations]: Found specification of procedure stopped_Stoppable
[2020-11-25 16:06:58,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopped_Stoppable
[2020-11-25 16:06:58,725 INFO  L130     BoogieDeclarations]: Found specification of procedure EXEToken_EXEToken_NoBaseCtor__success
[2020-11-25 16:06:58,725 INFO  L130     BoogieDeclarations]: Found specification of procedure EXEToken_EXEToken
[2020-11-25 16:06:58,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure EXEToken_EXEToken
[2020-11-25 16:06:58,725 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_EXEToken__success
[2020-11-25 16:06:58,725 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_EXEToken
[2020-11-25 16:06:58,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_EXEToken
[2020-11-25 16:06:58,726 INFO  L130     BoogieDeclarations]: Found specification of procedure setLock~address~uint256~uint256_EXEToken
[2020-11-25 16:06:58,726 INFO  L138     BoogieDeclarations]: Found implementation of procedure setLock~address~uint256~uint256_EXEToken
[2020-11-25 16:06:58,726 INFO  L130     BoogieDeclarations]: Found specification of procedure getLock~address_EXEToken
[2020-11-25 16:06:58,726 INFO  L138     BoogieDeclarations]: Found implementation of procedure getLock~address_EXEToken
[2020-11-25 16:06:58,726 INFO  L130     BoogieDeclarations]: Found specification of procedure _isLocked~address~uint256_EXEToken__success
[2020-11-25 16:06:58,726 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_EXEToken
[2020-11-25 16:06:58,726 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_EXEToken
[2020-11-25 16:06:58,726 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_EXEToken
[2020-11-25 16:06:58,726 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_EXEToken
[2020-11-25 16:06:58,726 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 16:06:58,727 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 16:06:58,727 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 16:06:58,727 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 16:06:58,727 INFO  L130     BoogieDeclarations]: Found specification of procedure enabled_pre__success
[2020-11-25 16:06:58,727 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 16:06:58,727 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 16:06:58,727 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 16:06:58,727 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 16:06:58,727 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 16:06:58,727 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 16:06:58,727 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 16:06:58,728 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 16:06:58,728 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 16:06:58,728 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 16:06:58,728 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-25 16:06:58,728 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-25 16:06:58,728 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Stoppable
[2020-11-25 16:06:58,728 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Stoppable
[2020-11-25 16:06:58,728 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_EXEToken
[2020-11-25 16:06:58,728 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 16:06:58,728 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 16:06:58,729 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:06:58,729 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 16:06:58,729 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 16:06:58,729 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:58,729 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:58,729 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:58,729 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:58,729 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:58,729 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 16:06:58,729 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 16:06:58,730 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 16:06:58,730 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 16:06:58,730 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 16:06:58,730 INFO  L130     BoogieDeclarations]: Found specification of procedure _isOwner_Ownable__fail
[2020-11-25 16:06:58,730 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 16:06:58,730 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 16:06:58,730 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 16:06:58,730 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 16:06:58,730 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 16:06:58,730 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 16:06:58,731 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 16:06:58,731 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 16:06:58,731 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 16:06:58,731 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 16:06:58,731 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 16:06:58,731 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 16:06:58,731 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 16:06:58,731 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 16:06:58,731 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 16:06:58,731 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 16:06:58,732 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 16:06:58,732 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 16:06:58,732 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 16:06:58,732 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 16:06:58,732 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 16:06:58,732 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:06:58,732 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:06:58,732 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:06:58,732 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:06:58,732 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 16:06:58,733 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 16:06:58,733 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 16:06:58,733 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 16:06:58,733 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 16:06:58,733 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 16:06:58,733 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 16:06:58,733 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 16:06:58,733 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 16:06:58,733 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 16:06:58,733 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 16:06:58,734 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 16:06:58,734 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-25 16:06:58,734 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-25 16:06:58,734 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-25 16:06:58,734 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__success
[2020-11-25 16:06:58,734 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__fail
[2020-11-25 16:06:58,734 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-25 16:06:58,734 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-25 16:06:58,734 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20Burnable__fail
[2020-11-25 16:06:58,734 INFO  L130     BoogieDeclarations]: Found specification of procedure Stoppable_Stoppable_NoBaseCtor__fail
[2020-11-25 16:06:58,734 INFO  L130     BoogieDeclarations]: Found specification of procedure Stoppable_Stoppable__success
[2020-11-25 16:06:58,735 INFO  L130     BoogieDeclarations]: Found specification of procedure Stoppable_Stoppable__fail
[2020-11-25 16:06:58,735 INFO  L130     BoogieDeclarations]: Found specification of procedure stop_Stoppable__success
[2020-11-25 16:06:58,735 INFO  L130     BoogieDeclarations]: Found specification of procedure stop_Stoppable__fail
[2020-11-25 16:06:58,735 INFO  L130     BoogieDeclarations]: Found specification of procedure start_Stoppable__success
[2020-11-25 16:06:58,735 INFO  L130     BoogieDeclarations]: Found specification of procedure start_Stoppable__fail
[2020-11-25 16:06:58,735 INFO  L130     BoogieDeclarations]: Found specification of procedure stopped_Stoppable__success
[2020-11-25 16:06:58,735 INFO  L130     BoogieDeclarations]: Found specification of procedure stopped_Stoppable__fail
[2020-11-25 16:06:58,735 INFO  L130     BoogieDeclarations]: Found specification of procedure EXEToken_EXEToken_NoBaseCtor__fail
[2020-11-25 16:06:58,735 INFO  L130     BoogieDeclarations]: Found specification of procedure EXEToken_EXEToken__success
[2020-11-25 16:06:58,735 INFO  L130     BoogieDeclarations]: Found specification of procedure EXEToken_EXEToken__fail
[2020-11-25 16:06:58,735 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_EXEToken__fail
[2020-11-25 16:06:58,736 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_EXEToken__success
[2020-11-25 16:06:58,736 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_EXEToken__fail
[2020-11-25 16:06:58,736 INFO  L130     BoogieDeclarations]: Found specification of procedure setLock~address~uint256~uint256_EXEToken__success
[2020-11-25 16:06:58,736 INFO  L130     BoogieDeclarations]: Found specification of procedure setLock~address~uint256~uint256_EXEToken__fail
[2020-11-25 16:06:58,736 INFO  L130     BoogieDeclarations]: Found specification of procedure getLock~address_EXEToken__success
[2020-11-25 16:06:58,736 INFO  L130     BoogieDeclarations]: Found specification of procedure getLock~address_EXEToken__fail
[2020-11-25 16:06:58,736 INFO  L130     BoogieDeclarations]: Found specification of procedure _isLocked~address~uint256_EXEToken__fail
[2020-11-25 16:06:58,736 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_EXEToken__success
[2020-11-25 16:06:58,736 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_EXEToken__fail
[2020-11-25 16:06:58,736 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_EXEToken__success
[2020-11-25 16:06:58,736 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_EXEToken__fail
[2020-11-25 16:06:58,736 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 16:06:58,737 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 16:06:58,737 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 16:06:58,737 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 16:06:58,737 INFO  L130     BoogieDeclarations]: Found specification of procedure enabled_pre__fail
[2020-11-25 16:06:58,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 16:06:58,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 16:06:58,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:06:58,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:06:58,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 16:06:58,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 16:06:58,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:58,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:06:58,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:58,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:06:58,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:58,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:06:58,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:58,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:06:58,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:58,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 16:06:58,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 16:06:58,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 16:06:58,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 16:06:58,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 16:06:58,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 16:06:58,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 16:06:58,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure _isOwner_Ownable__fail
[2020-11-25 16:06:58,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure _isOwner_Ownable__success
[2020-11-25 16:06:58,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 16:06:58,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 16:06:58,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 16:06:58,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__success
[2020-11-25 16:06:58,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 16:06:58,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 16:06:58,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 16:06:58,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 16:06:58,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 16:06:58,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 16:06:58,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 16:06:58,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 16:06:58,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 16:06:58,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 16:06:58,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 16:06:58,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 16:06:58,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 16:06:58,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 16:06:58,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 16:06:58,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 16:06:58,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 16:06:58,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 16:06:58,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 16:06:58,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 16:06:58,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:06:58,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:06:58,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:06:58,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:06:58,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 16:06:58,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 16:06:58,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 16:06:58,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 16:06:58,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 16:06:58,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 16:06:58,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 16:06:58,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 16:06:58,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 16:06:58,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 16:06:58,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 16:06:58,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 16:06:58,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 16:06:58,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 16:06:58,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 16:06:58,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 16:06:58,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-25 16:06:58,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-25 16:06:58,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-25 16:06:58,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-25 16:06:58,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__fail
[2020-11-25 16:06:58,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__success
[2020-11-25 16:06:58,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-25 16:06:58,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-25 16:06:58,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20Burnable__fail
[2020-11-25 16:06:58,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20Burnable__success
[2020-11-25 16:06:58,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure Stoppable_Stoppable_NoBaseCtor__fail
[2020-11-25 16:06:58,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure Stoppable_Stoppable_NoBaseCtor__success
[2020-11-25 16:06:58,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure Stoppable_Stoppable__fail
[2020-11-25 16:06:58,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure Stoppable_Stoppable__success
[2020-11-25 16:06:58,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure stop_Stoppable__fail
[2020-11-25 16:06:58,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure stop_Stoppable__success
[2020-11-25 16:06:58,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure start_Stoppable__fail
[2020-11-25 16:06:58,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure start_Stoppable__success
[2020-11-25 16:06:58,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopped_Stoppable__fail
[2020-11-25 16:06:58,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopped_Stoppable__success
[2020-11-25 16:06:58,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure EXEToken_EXEToken_NoBaseCtor__fail
[2020-11-25 16:06:58,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure EXEToken_EXEToken_NoBaseCtor__success
[2020-11-25 16:06:58,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure EXEToken_EXEToken__fail
[2020-11-25 16:06:58,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure EXEToken_EXEToken__success
[2020-11-25 16:06:58,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_EXEToken__fail
[2020-11-25 16:06:58,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_EXEToken__success
[2020-11-25 16:06:58,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_EXEToken__fail
[2020-11-25 16:06:58,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_EXEToken__success
[2020-11-25 16:06:58,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure setLock~address~uint256~uint256_EXEToken__fail
[2020-11-25 16:06:58,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure setLock~address~uint256~uint256_EXEToken__success
[2020-11-25 16:06:58,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure getLock~address_EXEToken__fail
[2020-11-25 16:06:58,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure getLock~address_EXEToken__success
[2020-11-25 16:06:58,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure _isLocked~address~uint256_EXEToken__fail
[2020-11-25 16:06:58,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure _isLocked~address~uint256_EXEToken__success
[2020-11-25 16:06:58,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_EXEToken__fail
[2020-11-25 16:06:58,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_EXEToken__success
[2020-11-25 16:06:58,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_EXEToken__fail
[2020-11-25 16:06:58,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_EXEToken__success
[2020-11-25 16:06:58,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 16:06:58,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 16:06:58,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 16:06:58,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 16:06:58,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 16:06:58,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 16:06:58,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 16:06:58,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 16:06:58,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure enabled_pre__fail
[2020-11-25 16:06:58,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure enabled_pre__success
[2020-11-25 16:06:58,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 16:06:58,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 16:06:58,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 16:06:58,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 16:06:58,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 16:06:58,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 16:06:58,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 16:06:58,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 16:06:58,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 16:06:58,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 16:06:58,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-25 16:06:58,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-25 16:06:58,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Stoppable
[2020-11-25 16:06:58,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Stoppable
[2020-11-25 16:06:58,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_EXEToken
[2020-11-25 16:06:58,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 16:06:58,748 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 16:06:58,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 16:06:59,094 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:06:59,095 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:06:59,095 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:06:59,370 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:06:59,810 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 16:06:59,811 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-25 16:06:59,813 INFO  L202        PluginConnector]: Adding new model EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:06:59 BoogieIcfgContainer
[2020-11-25 16:06:59,813 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:06:58" (2/2) ...
[2020-11-25 16:06:59,813 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 16:06:59,814 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@17c3b454 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:06:59, skipping insertion in model container
[2020-11-25 16:06:59,814 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 16:06:59,814 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 16:06:59,814 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 16:06:59,815 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 16:06:59,816 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:58" (1/3) ...
[2020-11-25 16:06:59,816 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5aa842ad and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:06:59, skipping insertion in model container
[2020-11-25 16:06:59,816 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:06:58" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 16:06:59,854 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:06:59 NWAContainer
[2020-11-25 16:06:59,854 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 16:06:59,855 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 16:06:59,855 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 16:06:59,855 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 16:06:59,856 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:06:59" (3/4) ...
[2020-11-25 16:06:59,857 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@63ea67d4 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:06:59, skipping insertion in model container
[2020-11-25 16:06:59,857 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:06:59" (4/4) ...
[2020-11-25 16:06:59,860 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 16:06:59,866 INFO  L110   BuchiProductObserver]: Initial RCFG 2513 locations, 3421 edges
[2020-11-25 16:06:59,866 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 16:06:59,878 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 16:07:01,869 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 16:07:01,877 INFO  L110   BuchiProductObserver]: BuchiProgram size 6232 locations, 11166 edges
[2020-11-25 16:07:01,878 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:07:01 BoogieIcfgContainer
[2020-11-25 16:07:01,878 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 16:07:01,878 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 16:07:01,878 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 16:07:01,879 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 16:07:01,880 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:07:01" (1/1) ...
[2020-11-25 16:07:02,001 INFO  L313           BlockEncoder]: Initial Icfg 6232 locations, 11166 edges
[2020-11-25 16:07:02,002 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 16:07:02,002 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 16:07:02,002 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 16:07:02,003 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 16:07:02,017 INFO  L70    emoveInfeasibleEdges]: Removed 159 edges and 19 locations because of local infeasibility
[2020-11-25 16:07:02,029 INFO  L70        RemoveSinkStates]: Removed 80 edges and 53 locations by removing sink states
[2020-11-25 16:07:02,041 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 16:07:02,045 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 16:07:02,049 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 16:07:02,049 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 16:07:02,053 INFO  L313           BlockEncoder]: Encoded RCFG 6126 locations, 10877 edges
[2020-11-25 16:07:02,053 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:07:02 BasicIcfg
[2020-11-25 16:07:02,054 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 16:07:02,054 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 16:07:02,054 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 16:07:02,056 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 16:07:02,056 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:07:02,057 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:58" (1/6) ...
[2020-11-25 16:07:02,058 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ca0b0ed and model type EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:07:02, skipping insertion in model container
[2020-11-25 16:07:02,058 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:07:02,058 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:06:58" (2/6) ...
[2020-11-25 16:07:02,059 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ca0b0ed and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:07:02, skipping insertion in model container
[2020-11-25 16:07:02,059 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:07:02,059 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:06:59" (3/6) ...
[2020-11-25 16:07:02,059 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ca0b0ed and model type EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:07:02, skipping insertion in model container
[2020-11-25 16:07:02,059 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:07:02,059 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:06:59" (4/6) ...
[2020-11-25 16:07:02,060 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ca0b0ed and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:07:02, skipping insertion in model container
[2020-11-25 16:07:02,060 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:07:02,060 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:07:01" (5/6) ...
[2020-11-25 16:07:02,060 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ca0b0ed and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 04:07:02, skipping insertion in model container
[2020-11-25 16:07:02,060 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:07:02,060 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:07:02" (6/6) ...
[2020-11-25 16:07:02,061 INFO  L404   chiAutomizerObserver]: Analyzing ICFG EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl_BEv2
[2020-11-25 16:07:02,095 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 16:07:02,096 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 16:07:02,096 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 16:07:02,096 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 16:07:02,096 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 16:07:02,096 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 16:07:02,096 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 16:07:02,096 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 16:07:02,096 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 16:07:02,136 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6126 states.
[2020-11-25 16:07:02,195 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:07:02,195 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:07:02,195 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:07:02,202 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:07:02,202 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:07:02,202 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 16:07:02,202 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6126 states.
[2020-11-25 16:07:02,224 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:07:02,224 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:07:02,224 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:07:02,225 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:07:02,226 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_EXEToken0 := false;
[L3]                 call_transfer_EXEToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7038]              assume null == 0;
[L7039]  CALL        call this := FreshRefGenerator__success();
[L3029]              havoc newRef;
[L3030]              assume Alloc[newRef] == false;
[L3031]              Alloc[newRef] := true;
[L3032]              assume newRef != null;
[L7039]  RET         call this := FreshRefGenerator__success();
[L7040]              assume now >= 0;
[L7041]              assume DType[this] == EXEToken;
[L7042]              assume msgvalue_MSG == 0;
[L7043]              gas := gas - 53000;
[L7044]  CALL        call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1770]              havoc __exception;
[L1771]              revert := false;
[L1772]  COND FALSE  !(__exception)
[L1799]  CALL        call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4315]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L4315]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4316]  COND TRUE   revert
[L1799]  RET         call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1800]              assume !revert && gas >= 0;
[L7044]  RET         call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L7045]              assume !revert && gas >= 0;

Loop:
[L7048]  CALL        call CorralChoice_EXEToken(this);
[L6824]              havoc msgsender_MSG;
[L6825]              havoc msgvalue_MSG;
[L6826]              havoc choice;
[L6827]              havoc __ret_0_owner;
[L6828]              havoc newOwner_s184;
[L6829]              havoc __ret_0_totalSupply;
[L6830]              havoc owner_s312;
[L6831]              havoc __ret_0_balanceOf;
[L6832]              havoc owner_s328;
[L6833]              havoc spender_s328;
[L6834]              havoc __ret_0_allowance;
[L6835]              havoc recipient_s1083;
[L6836]              havoc amount_s1083;
[L6837]              havoc __ret_0_transfer;
[L6838]              havoc spender_s425;
[L6839]              havoc value_s425;
[L6840]              havoc __ret_0_approve;
[L6841]              havoc sender_s1113;
[L6842]              havoc recipient_s1113;
[L6843]              havoc amount_s1113;
[L6844]              havoc __ret_0_transferFrom;
[L6845]              havoc spender_s562;
[L6846]              havoc addedValue_s562;
[L6847]              havoc __ret_0_increaseAllowance;
[L6848]              havoc spender_s612;
[L6849]              havoc subtractedValue_s612;
[L6850]              havoc __ret_0_decreaseAllowance;
[L6851]              havoc name_s778;
[L6852]              havoc symbol_s778;
[L6853]              havoc decimals_s778;
[L6854]              havoc __ret_0_name;
[L6855]              havoc __ret_0_symbol;
[L6856]              havoc __ret_0_decimals;
[L6857]              havoc value_s817;
[L6858]              havoc from_s830;
[L6859]              havoc value_s830;
[L6860]              havoc __ret_0_stopped;
[L6861]              havoc name_s916;
[L6862]              havoc symbol_s916;
[L6863]              havoc totalSupply_s916;
[L6864]              havoc decimals_s916;
[L6865]              havoc account_s942;
[L6866]              havoc amount_s942;
[L6867]              havoc __ret_0_mint;
[L6868]              havoc account_s988;
[L6869]              havoc releaseTime_s988;
[L6870]              havoc amount_s988;
[L6871]              havoc account_s1006;
[L6872]              havoc lockTime_s1006;
[L6873]              havoc lockAmount_s1006;
[L6874]              havoc tmpNow;
[L6875]              havoc gas;
[L6876]              assume gas > 4000000 && gas <= 8000000;
[L6877]              tmpNow := now;
[L6878]              havoc now;
[L6879]              assume now > tmpNow;
[L6880]              assume msgsender_MSG != null;
[L6881]              assume DType[msgsender_MSG] != SafeMath;
[L6882]              assume DType[msgsender_MSG] != Ownable;
[L6883]              assume DType[msgsender_MSG] != IERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20;
[L6885]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6886]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6887]              assume DType[msgsender_MSG] != Stoppable;
[L6888]              assume DType[msgsender_MSG] != EXEToken;
[L6889]              Alloc[msgsender_MSG] := true;
[L6890]  COND TRUE   choice == 21
[L6891]              gas := gas - 21000;
[L6892]  COND FALSE  !(gas >= 0)
[L7048]  RET         call CorralChoice_EXEToken(this);

[2020-11-25 16:07:02,239 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:07:02,239 INFO  L82        PathProgramCache]: Analyzing trace with hash 1485865829, now seen corresponding path program 1 times
[2020-11-25 16:07:02,243 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:07:02,265 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:07:02,299 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:07:02,301 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:07:02,301 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:07:02,701 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:07:02,713 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:07:02,714 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:07:02,715 INFO  L87              Difference]: Start difference. First operand 6126 states. Second operand 4 states.
[2020-11-25 16:07:03,294 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:07:03,294 INFO  L93              Difference]: Finished difference Result 3832 states and 4415 transitions.
[2020-11-25 16:07:03,295 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:07:03,296 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3832 states and 4415 transitions.
[2020-11-25 16:07:03,315 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:07:03,340 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3832 states to 3832 states and 4415 transitions.
[2020-11-25 16:07:03,341 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 16:07:03,343 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 851
[2020-11-25 16:07:03,344 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3832 states and 4415 transitions.
[2020-11-25 16:07:03,352 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:07:03,353 INFO  L728         BuchiCegarLoop]: Abstraction has 3832 states and 4415 transitions.
[2020-11-25 16:07:03,367 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3832 states and 4415 transitions.
[2020-11-25 16:07:03,424 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3832 to 3832.
[2020-11-25 16:07:03,425 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3832 states.
[2020-11-25 16:07:03,430 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3832 states to 3832 states and 4415 transitions.
[2020-11-25 16:07:03,431 INFO  L751         BuchiCegarLoop]: Abstraction has 3832 states and 4415 transitions.
[2020-11-25 16:07:03,431 INFO  L631         BuchiCegarLoop]: Abstraction has 3832 states and 4415 transitions.
[2020-11-25 16:07:03,431 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 16:07:03,431 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3832 states and 4415 transitions.
[2020-11-25 16:07:03,439 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:07:03,439 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:07:03,439 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:07:03,441 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:07:03,441 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_EXEToken0 := false;
[L3]                 call_transfer_EXEToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7038]              assume null == 0;
[L7039]  CALL        call this := FreshRefGenerator__success();
[L3029]              havoc newRef;
[L3030]              assume Alloc[newRef] == false;
[L3031]              Alloc[newRef] := true;
[L3032]              assume newRef != null;
[L7039]  RET         call this := FreshRefGenerator__success();
[L7040]              assume now >= 0;
[L7041]              assume DType[this] == EXEToken;
[L7042]              assume msgvalue_MSG == 0;
[L7043]              gas := gas - 53000;
[L7044]  CALL        call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1770]              havoc __exception;
[L1771]              revert := false;
[L1772]  COND FALSE  !(__exception)
[L1799]  CALL        call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4315]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L4315]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4316]  COND TRUE   revert
[L1799]  RET         call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1800]              assume !revert && gas >= 0;
[L7044]  RET         call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L7045]              assume !revert && gas >= 0;
[L7048]  CALL        call CorralChoice_EXEToken(this);
[L6824]              havoc msgsender_MSG;
[L6825]              havoc msgvalue_MSG;
[L6826]              havoc choice;
[L6827]              havoc __ret_0_owner;
[L6828]              havoc newOwner_s184;
[L6829]              havoc __ret_0_totalSupply;
[L6830]              havoc owner_s312;
[L6831]              havoc __ret_0_balanceOf;
[L6832]              havoc owner_s328;
[L6833]              havoc spender_s328;
[L6834]              havoc __ret_0_allowance;
[L6835]              havoc recipient_s1083;
[L6836]              havoc amount_s1083;
[L6837]              havoc __ret_0_transfer;
[L6838]              havoc spender_s425;
[L6839]              havoc value_s425;
[L6840]              havoc __ret_0_approve;
[L6841]              havoc sender_s1113;
[L6842]              havoc recipient_s1113;
[L6843]              havoc amount_s1113;
[L6844]              havoc __ret_0_transferFrom;
[L6845]              havoc spender_s562;
[L6846]              havoc addedValue_s562;
[L6847]              havoc __ret_0_increaseAllowance;
[L6848]              havoc spender_s612;
[L6849]              havoc subtractedValue_s612;
[L6850]              havoc __ret_0_decreaseAllowance;
[L6851]              havoc name_s778;
[L6852]              havoc symbol_s778;
[L6853]              havoc decimals_s778;
[L6854]              havoc __ret_0_name;
[L6855]              havoc __ret_0_symbol;
[L6856]              havoc __ret_0_decimals;
[L6857]              havoc value_s817;
[L6858]              havoc from_s830;
[L6859]              havoc value_s830;
[L6860]              havoc __ret_0_stopped;
[L6861]              havoc name_s916;
[L6862]              havoc symbol_s916;
[L6863]              havoc totalSupply_s916;
[L6864]              havoc decimals_s916;
[L6865]              havoc account_s942;
[L6866]              havoc amount_s942;
[L6867]              havoc __ret_0_mint;
[L6868]              havoc account_s988;
[L6869]              havoc releaseTime_s988;
[L6870]              havoc amount_s988;
[L6871]              havoc account_s1006;
[L6872]              havoc lockTime_s1006;
[L6873]              havoc lockAmount_s1006;
[L6874]              havoc tmpNow;
[L6875]              havoc gas;
[L6876]              assume gas > 4000000 && gas <= 8000000;
[L6877]              tmpNow := now;
[L6878]              havoc now;
[L6879]              assume now > tmpNow;
[L6880]              assume msgsender_MSG != null;
[L6881]              assume DType[msgsender_MSG] != SafeMath;
[L6882]              assume DType[msgsender_MSG] != Ownable;
[L6883]              assume DType[msgsender_MSG] != IERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20;
[L6885]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6886]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6887]              assume DType[msgsender_MSG] != Stoppable;
[L6888]              assume DType[msgsender_MSG] != EXEToken;
[L6889]              Alloc[msgsender_MSG] := true;
[L6890]  COND FALSE  !(choice == 21)
[L6896]  COND FALSE  !(choice == 20)
[L6902]  COND FALSE  !(choice == 19)
[L6908]  COND FALSE  !(choice == 18)
[L6914]  COND FALSE  !(choice == 17)
[L6920]  COND TRUE   choice == 16
[L6921]              gas := gas - 21000;
[L6922]  COND TRUE   gas >= 0
[L6923]              assume amount_s1083 >= 0 && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6924]              assume msgvalue_MSG == 0;
[L6925]  CALL        call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s1083) && msgsender_MSG != recipient_s1083) && amount_s1083 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s1083] + amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s1083 >= 0) && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1083] >= 0) && _balances_ERC20[this][recipient_s1083] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_EXEToken0 := true;
[L3]                 call_transfer_EXEToken0 := false;
[L3]                 revert := revert_hold;
[L2034]              havoc __exception;
[L2035]              revert := false;
[L2036]  COND FALSE  !(__exception)
[L2063]  CALL        call __ret_0_ := transfer~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L4538]  CALL        call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L6068]  COND FALSE  !(!!stopped_Stoppable[this])
[L4538]  RET         call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4539]  COND TRUE   revert
[L2063]  RET         call __ret_0_ := transfer~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L2064]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s1083) && _balances_ERC20[this][recipient_s1083] == old(_balances_ERC20[this][recipient_s1083]) + amount_s1083) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _lockTimes_EXEToken[this] == old(_lockTimes_EXEToken[this])) && _lockAmounts_EXEToken[this] == old(_lockAmounts_EXEToken[this])) && stopped_Stoppable[this] == old(stopped_Stoppable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L6925]  RET         call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L7048]  RET         call CorralChoice_EXEToken(this);

Loop:
[L7048]  CALL        call CorralChoice_EXEToken(this);
[L6824]              havoc msgsender_MSG;
[L6825]              havoc msgvalue_MSG;
[L6826]              havoc choice;
[L6827]              havoc __ret_0_owner;
[L6828]              havoc newOwner_s184;
[L6829]              havoc __ret_0_totalSupply;
[L6830]              havoc owner_s312;
[L6831]              havoc __ret_0_balanceOf;
[L6832]              havoc owner_s328;
[L6833]              havoc spender_s328;
[L6834]              havoc __ret_0_allowance;
[L6835]              havoc recipient_s1083;
[L6836]              havoc amount_s1083;
[L6837]              havoc __ret_0_transfer;
[L6838]              havoc spender_s425;
[L6839]              havoc value_s425;
[L6840]              havoc __ret_0_approve;
[L6841]              havoc sender_s1113;
[L6842]              havoc recipient_s1113;
[L6843]              havoc amount_s1113;
[L6844]              havoc __ret_0_transferFrom;
[L6845]              havoc spender_s562;
[L6846]              havoc addedValue_s562;
[L6847]              havoc __ret_0_increaseAllowance;
[L6848]              havoc spender_s612;
[L6849]              havoc subtractedValue_s612;
[L6850]              havoc __ret_0_decreaseAllowance;
[L6851]              havoc name_s778;
[L6852]              havoc symbol_s778;
[L6853]              havoc decimals_s778;
[L6854]              havoc __ret_0_name;
[L6855]              havoc __ret_0_symbol;
[L6856]              havoc __ret_0_decimals;
[L6857]              havoc value_s817;
[L6858]              havoc from_s830;
[L6859]              havoc value_s830;
[L6860]              havoc __ret_0_stopped;
[L6861]              havoc name_s916;
[L6862]              havoc symbol_s916;
[L6863]              havoc totalSupply_s916;
[L6864]              havoc decimals_s916;
[L6865]              havoc account_s942;
[L6866]              havoc amount_s942;
[L6867]              havoc __ret_0_mint;
[L6868]              havoc account_s988;
[L6869]              havoc releaseTime_s988;
[L6870]              havoc amount_s988;
[L6871]              havoc account_s1006;
[L6872]              havoc lockTime_s1006;
[L6873]              havoc lockAmount_s1006;
[L6874]              havoc tmpNow;
[L6875]              havoc gas;
[L6876]              assume gas > 4000000 && gas <= 8000000;
[L6877]              tmpNow := now;
[L6878]              havoc now;
[L6879]              assume now > tmpNow;
[L6880]              assume msgsender_MSG != null;
[L6881]              assume DType[msgsender_MSG] != SafeMath;
[L6882]              assume DType[msgsender_MSG] != Ownable;
[L6883]              assume DType[msgsender_MSG] != IERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20;
[L6885]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6886]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6887]              assume DType[msgsender_MSG] != Stoppable;
[L6888]              assume DType[msgsender_MSG] != EXEToken;
[L6889]              Alloc[msgsender_MSG] := true;
[L6890]  COND FALSE  !(choice == 21)
[L6896]  COND FALSE  !(choice == 20)
[L6902]  COND FALSE  !(choice == 19)
[L6908]  COND FALSE  !(choice == 18)
[L6914]  COND FALSE  !(choice == 17)
[L6920]  COND TRUE   choice == 16
[L6921]              gas := gas - 21000;
[L6922]  COND TRUE   gas >= 0
[L6923]              assume amount_s1083 >= 0 && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6924]              assume msgvalue_MSG == 0;
[L6925]  CALL        call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s1083) && msgsender_MSG != recipient_s1083) && amount_s1083 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s1083] + amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s1083 >= 0) && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1083] >= 0) && _balances_ERC20[this][recipient_s1083] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_EXEToken0 := true;
[L3]                 call_transfer_EXEToken0 := false;
[L3]                 revert := revert_hold;
[L2034]              havoc __exception;
[L2035]              revert := false;
[L2036]  COND FALSE  !(__exception)
[L2063]  CALL        call __ret_0_ := transfer~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L4538]  CALL        call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L6068]  COND FALSE  !(!!stopped_Stoppable[this])
[L4538]  RET         call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4539]  COND TRUE   revert
[L2063]  RET         call __ret_0_ := transfer~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L2064]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s1083) && _balances_ERC20[this][recipient_s1083] == old(_balances_ERC20[this][recipient_s1083]) + amount_s1083) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _lockTimes_EXEToken[this] == old(_lockTimes_EXEToken[this])) && _lockAmounts_EXEToken[this] == old(_lockAmounts_EXEToken[this])) && stopped_Stoppable[this] == old(stopped_Stoppable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L6925]  RET         call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L7048]  RET         call CorralChoice_EXEToken(this);

[2020-11-25 16:07:03,445 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:07:03,445 INFO  L82        PathProgramCache]: Analyzing trace with hash -804980799, now seen corresponding path program 1 times
[2020-11-25 16:07:03,446 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:07:03,455 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:07:03,477 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:07:03,478 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:07:03,478 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 16:07:03,479 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:07:03,479 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 16:07:03,479 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 16:07:03,479 INFO  L87              Difference]: Start difference. First operand 3832 states and 4415 transitions. cyclomatic complexity: 585 Second operand 3 states.
[2020-11-25 16:07:03,571 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:07:03,571 INFO  L93              Difference]: Finished difference Result 5010 states and 5799 transitions.
[2020-11-25 16:07:03,571 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 16:07:03,572 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5010 states and 5799 transitions.
[2020-11-25 16:07:03,588 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:07:03,611 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5010 states to 5010 states and 5799 transitions.
[2020-11-25 16:07:03,611 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1188
[2020-11-25 16:07:03,613 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1188
[2020-11-25 16:07:03,613 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5010 states and 5799 transitions.
[2020-11-25 16:07:03,621 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:07:03,621 INFO  L728         BuchiCegarLoop]: Abstraction has 5010 states and 5799 transitions.
[2020-11-25 16:07:03,627 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5010 states and 5799 transitions.
[2020-11-25 16:07:03,667 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5010 to 4236.
[2020-11-25 16:07:03,667 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4236 states.
[2020-11-25 16:07:03,672 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4236 states to 4236 states and 4865 transitions.
[2020-11-25 16:07:03,672 INFO  L751         BuchiCegarLoop]: Abstraction has 4236 states and 4865 transitions.
[2020-11-25 16:07:03,672 INFO  L631         BuchiCegarLoop]: Abstraction has 4236 states and 4865 transitions.
[2020-11-25 16:07:03,672 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 16:07:03,672 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4236 states and 4865 transitions.
[2020-11-25 16:07:03,678 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:07:03,678 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:07:03,678 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:07:03,680 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:07:03,680 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_EXEToken0 := false;
[L3]                 call_transfer_EXEToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7038]              assume null == 0;
[L7039]  CALL        call this := FreshRefGenerator__success();
[L3029]              havoc newRef;
[L3030]              assume Alloc[newRef] == false;
[L3031]              Alloc[newRef] := true;
[L3032]              assume newRef != null;
[L7039]  RET         call this := FreshRefGenerator__success();
[L7040]              assume now >= 0;
[L7041]              assume DType[this] == EXEToken;
[L7042]              assume msgvalue_MSG == 0;
[L7043]              gas := gas - 53000;
[L7044]  CALL        call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1770]              havoc __exception;
[L1771]              revert := false;
[L1772]  COND FALSE  !(__exception)
[L1799]  CALL        call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4315]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L4315]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4316]  COND FALSE  !(revert)
[L4319]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, decimals_s916);
[L3927]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L3927]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3928]  COND FALSE  !(revert)
[L3931]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s778, symbol_s778, decimals_s778);
[L3902]              assume msgsender_MSG != null;
[L3903]              Balance[this] := 0;
[L3904]              _name_ERC20Detailed[this] := 427332508;
[L3905]              _symbol_ERC20Detailed[this] := 427332508;
[L3906]              _decimals_ERC20Detailed[this] := 0;
[L3908]              _name_ERC20Detailed[this] := name_s778;
[L3909]              _symbol_ERC20Detailed[this] := symbol_s778;
[L3910]              _decimals_ERC20Detailed[this] := decimals_s778;
[L3931]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s778, symbol_s778, decimals_s778);
[L3932]  COND FALSE  !(revert)
[L4319]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, decimals_s916);
[L4320]  COND FALSE  !(revert)
[L4323]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3398]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L3398]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3399]  COND FALSE  !(revert)
[L3402]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3374]              assume msgsender_MSG != null;
[L3375]              Balance[this] := 0;
[L3376]              _balances_ERC20[this] := zeroRefintArr();
[L3377]              sum__balances0[this] := 0;
[L3378]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3379]              sum__allowed1[this] := 0;
[L3380]              _totalSupply_ERC20[this] := 0;
[L3402]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3403]  COND FALSE  !(revert)
[L4323]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4324]  COND FALSE  !(revert)
[L4327]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4007]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L4007]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4008]  COND FALSE  !(revert)
[L4011]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3398]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L3398]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3399]  COND FALSE  !(revert)
[L3402]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3374]              assume msgsender_MSG != null;
[L3375]              Balance[this] := 0;
[L3376]              _balances_ERC20[this] := zeroRefintArr();
[L3377]              sum__balances0[this] := 0;
[L3378]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3379]              sum__allowed1[this] := 0;
[L3380]              _totalSupply_ERC20[this] := 0;
[L3402]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3403]  COND FALSE  !(revert)
[L4011]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4012]  COND FALSE  !(revert)
[L4015]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3984]              assume msgsender_MSG != null;
[L3985]              Balance[this] := 0;
[L4015]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4016]  COND FALSE  !(revert)
[L4327]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4328]  COND FALSE  !(revert)
[L4331]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3221]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3204]              assume msgsender_MSG != null;
[L3205]              Balance[this] := 0;
[L3206]              _owner_Ownable[this] := null;
[L3208]              _owner_Ownable[this] := msgsender_MSG;
[L3221]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3222]  COND FALSE  !(revert)
[L4331]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4332]  COND FALSE  !(revert)
[L4335]  CALL        call Stoppable_Stoppable__success(this, msgsender_MSG, msgvalue_MSG);
[L4157]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3221]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3204]              assume msgsender_MSG != null;
[L3205]              Balance[this] := 0;
[L3206]              _owner_Ownable[this] := null;
[L3208]              _owner_Ownable[this] := msgsender_MSG;
[L3221]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3222]  COND FALSE  !(revert)
[L4157]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4158]  COND FALSE  !(revert)
[L4161]  CALL        call Stoppable_Stoppable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4137]              assume msgsender_MSG != null;
[L4138]              Balance[this] := 0;
[L4139]              stopped_Stoppable[this] := false;
[L4161]  RET         call Stoppable_Stoppable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4162]  COND FALSE  !(revert)
[L4335]  RET         call Stoppable_Stoppable__success(this, msgsender_MSG, msgvalue_MSG);
[L4336]  COND FALSE  !(revert)
[L4339]  CALL        call EXEToken_EXEToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4251]              assume msgsender_MSG != null;
[L4252]              Balance[this] := 0;
[L4253]              _lockTimes_EXEToken[this] := zeroRefintArr();
[L4254]              sum__lockTimes2[this] := 0;
[L4255]              _lockAmounts_EXEToken[this] := zeroRefintArr();
[L4256]              sum__lockAmounts3[this] := 0;
[L4258]  COND TRUE   DType[this] == EXEToken
[L4259]  CALL        call __var_23 := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3235]              __ret_0_ := _owner_Ownable[this];
[L4259]  RET         call __var_23 := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4260]  COND FALSE  !(revert)
[L4266]              __var_24 := decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4267]  COND TRUE   DType[this] == EXEToken
[L4268]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_23, nonlinearMul(totalSupply_s916, nonlinearPow(10, decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3740]              __var_15 := null;
[L3741]  COND TRUE   !(account_s654 != null)
[L3742]              revert := true;
[L4268]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_23, nonlinearMul(totalSupply_s916, nonlinearPow(10, decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4269]  COND TRUE   revert
[L4339]  RET         call EXEToken_EXEToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4340]  COND FALSE  !(revert)
[L1799]  RET         call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1800]              assume !revert && gas >= 0;
[L7044]  RET         call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L7045]              assume !revert && gas >= 0;
[L7048]  CALL        call CorralChoice_EXEToken(this);
[L6824]              havoc msgsender_MSG;
[L6825]              havoc msgvalue_MSG;
[L6826]              havoc choice;
[L6827]              havoc __ret_0_owner;
[L6828]              havoc newOwner_s184;
[L6829]              havoc __ret_0_totalSupply;
[L6830]              havoc owner_s312;
[L6831]              havoc __ret_0_balanceOf;
[L6832]              havoc owner_s328;
[L6833]              havoc spender_s328;
[L6834]              havoc __ret_0_allowance;
[L6835]              havoc recipient_s1083;
[L6836]              havoc amount_s1083;
[L6837]              havoc __ret_0_transfer;
[L6838]              havoc spender_s425;
[L6839]              havoc value_s425;
[L6840]              havoc __ret_0_approve;
[L6841]              havoc sender_s1113;
[L6842]              havoc recipient_s1113;
[L6843]              havoc amount_s1113;
[L6844]              havoc __ret_0_transferFrom;
[L6845]              havoc spender_s562;
[L6846]              havoc addedValue_s562;
[L6847]              havoc __ret_0_increaseAllowance;
[L6848]              havoc spender_s612;
[L6849]              havoc subtractedValue_s612;
[L6850]              havoc __ret_0_decreaseAllowance;
[L6851]              havoc name_s778;
[L6852]              havoc symbol_s778;
[L6853]              havoc decimals_s778;
[L6854]              havoc __ret_0_name;
[L6855]              havoc __ret_0_symbol;
[L6856]              havoc __ret_0_decimals;
[L6857]              havoc value_s817;
[L6858]              havoc from_s830;
[L6859]              havoc value_s830;
[L6860]              havoc __ret_0_stopped;
[L6861]              havoc name_s916;
[L6862]              havoc symbol_s916;
[L6863]              havoc totalSupply_s916;
[L6864]              havoc decimals_s916;
[L6865]              havoc account_s942;
[L6866]              havoc amount_s942;
[L6867]              havoc __ret_0_mint;
[L6868]              havoc account_s988;
[L6869]              havoc releaseTime_s988;
[L6870]              havoc amount_s988;
[L6871]              havoc account_s1006;
[L6872]              havoc lockTime_s1006;
[L6873]              havoc lockAmount_s1006;
[L6874]              havoc tmpNow;
[L6875]              havoc gas;
[L6876]              assume gas > 4000000 && gas <= 8000000;
[L6877]              tmpNow := now;
[L6878]              havoc now;
[L6879]              assume now > tmpNow;
[L6880]              assume msgsender_MSG != null;
[L6881]              assume DType[msgsender_MSG] != SafeMath;
[L6882]              assume DType[msgsender_MSG] != Ownable;
[L6883]              assume DType[msgsender_MSG] != IERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20;
[L6885]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6886]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6887]              assume DType[msgsender_MSG] != Stoppable;
[L6888]              assume DType[msgsender_MSG] != EXEToken;
[L6889]              Alloc[msgsender_MSG] := true;
[L6890]  COND FALSE  !(choice == 21)
[L6896]  COND FALSE  !(choice == 20)
[L6902]  COND FALSE  !(choice == 19)
[L6908]  COND FALSE  !(choice == 18)
[L6914]  COND FALSE  !(choice == 17)
[L6920]  COND TRUE   choice == 16
[L6921]              gas := gas - 21000;
[L6922]  COND TRUE   gas >= 0
[L6923]              assume amount_s1083 >= 0 && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6924]              assume msgvalue_MSG == 0;
[L6925]  CALL        call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s1083) && msgsender_MSG != recipient_s1083) && amount_s1083 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s1083] + amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s1083 >= 0) && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1083] >= 0) && _balances_ERC20[this][recipient_s1083] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_EXEToken0 := true;
[L3]                 call_transfer_EXEToken0 := false;
[L3]                 revert := revert_hold;
[L2034]              havoc __exception;
[L2035]              revert := false;
[L2036]  COND FALSE  !(__exception)
[L2063]  CALL        call __ret_0_ := transfer~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L4538]  CALL        call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L6068]  COND TRUE   !!stopped_Stoppable[this]
[L6069]              revert := true;
[L4538]  RET         call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4539]  COND TRUE   revert
[L2063]  RET         call __ret_0_ := transfer~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L2064]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s1083) && _balances_ERC20[this][recipient_s1083] == old(_balances_ERC20[this][recipient_s1083]) + amount_s1083) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _lockTimes_EXEToken[this] == old(_lockTimes_EXEToken[this])) && _lockAmounts_EXEToken[this] == old(_lockAmounts_EXEToken[this])) && stopped_Stoppable[this] == old(stopped_Stoppable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L6925]  RET         call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L7048]  RET         call CorralChoice_EXEToken(this);

Loop:
[L7048]  CALL        call CorralChoice_EXEToken(this);
[L6824]              havoc msgsender_MSG;
[L6825]              havoc msgvalue_MSG;
[L6826]              havoc choice;
[L6827]              havoc __ret_0_owner;
[L6828]              havoc newOwner_s184;
[L6829]              havoc __ret_0_totalSupply;
[L6830]              havoc owner_s312;
[L6831]              havoc __ret_0_balanceOf;
[L6832]              havoc owner_s328;
[L6833]              havoc spender_s328;
[L6834]              havoc __ret_0_allowance;
[L6835]              havoc recipient_s1083;
[L6836]              havoc amount_s1083;
[L6837]              havoc __ret_0_transfer;
[L6838]              havoc spender_s425;
[L6839]              havoc value_s425;
[L6840]              havoc __ret_0_approve;
[L6841]              havoc sender_s1113;
[L6842]              havoc recipient_s1113;
[L6843]              havoc amount_s1113;
[L6844]              havoc __ret_0_transferFrom;
[L6845]              havoc spender_s562;
[L6846]              havoc addedValue_s562;
[L6847]              havoc __ret_0_increaseAllowance;
[L6848]              havoc spender_s612;
[L6849]              havoc subtractedValue_s612;
[L6850]              havoc __ret_0_decreaseAllowance;
[L6851]              havoc name_s778;
[L6852]              havoc symbol_s778;
[L6853]              havoc decimals_s778;
[L6854]              havoc __ret_0_name;
[L6855]              havoc __ret_0_symbol;
[L6856]              havoc __ret_0_decimals;
[L6857]              havoc value_s817;
[L6858]              havoc from_s830;
[L6859]              havoc value_s830;
[L6860]              havoc __ret_0_stopped;
[L6861]              havoc name_s916;
[L6862]              havoc symbol_s916;
[L6863]              havoc totalSupply_s916;
[L6864]              havoc decimals_s916;
[L6865]              havoc account_s942;
[L6866]              havoc amount_s942;
[L6867]              havoc __ret_0_mint;
[L6868]              havoc account_s988;
[L6869]              havoc releaseTime_s988;
[L6870]              havoc amount_s988;
[L6871]              havoc account_s1006;
[L6872]              havoc lockTime_s1006;
[L6873]              havoc lockAmount_s1006;
[L6874]              havoc tmpNow;
[L6875]              havoc gas;
[L6876]              assume gas > 4000000 && gas <= 8000000;
[L6877]              tmpNow := now;
[L6878]              havoc now;
[L6879]              assume now > tmpNow;
[L6880]              assume msgsender_MSG != null;
[L6881]              assume DType[msgsender_MSG] != SafeMath;
[L6882]              assume DType[msgsender_MSG] != Ownable;
[L6883]              assume DType[msgsender_MSG] != IERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20;
[L6885]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6886]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6887]              assume DType[msgsender_MSG] != Stoppable;
[L6888]              assume DType[msgsender_MSG] != EXEToken;
[L6889]              Alloc[msgsender_MSG] := true;
[L6890]  COND FALSE  !(choice == 21)
[L6896]  COND FALSE  !(choice == 20)
[L6902]  COND FALSE  !(choice == 19)
[L6908]  COND FALSE  !(choice == 18)
[L6914]  COND FALSE  !(choice == 17)
[L6920]  COND TRUE   choice == 16
[L6921]              gas := gas - 21000;
[L6922]  COND TRUE   gas >= 0
[L6923]              assume amount_s1083 >= 0 && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6924]              assume msgvalue_MSG == 0;
[L6925]  CALL        call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s1083) && msgsender_MSG != recipient_s1083) && amount_s1083 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s1083] + amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s1083 >= 0) && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1083] >= 0) && _balances_ERC20[this][recipient_s1083] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_EXEToken0 := true;
[L3]                 call_transfer_EXEToken0 := false;
[L3]                 revert := revert_hold;
[L2034]              havoc __exception;
[L2035]              revert := false;
[L2036]  COND FALSE  !(__exception)
[L2063]  CALL        call __ret_0_ := transfer~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L4538]  CALL        call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L6068]  COND TRUE   !!stopped_Stoppable[this]
[L6069]              revert := true;
[L4538]  RET         call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4539]  COND TRUE   revert
[L2063]  RET         call __ret_0_ := transfer~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L2064]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s1083) && _balances_ERC20[this][recipient_s1083] == old(_balances_ERC20[this][recipient_s1083]) + amount_s1083) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _lockTimes_EXEToken[this] == old(_lockTimes_EXEToken[this])) && _lockAmounts_EXEToken[this] == old(_lockAmounts_EXEToken[this])) && stopped_Stoppable[this] == old(stopped_Stoppable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L6925]  RET         call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L7048]  RET         call CorralChoice_EXEToken(this);

[2020-11-25 16:07:03,685 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:07:03,685 INFO  L82        PathProgramCache]: Analyzing trace with hash 998548748, now seen corresponding path program 1 times
[2020-11-25 16:07:03,685 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:07:03,700 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:07:03,780 INFO  L134       CoverageAnalysis]: Checked inductivity of 131 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 131 trivial. 0 not checked.
[2020-11-25 16:07:03,780 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:07:03,781 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 16:07:03,781 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:07:03,781 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 16:07:03,781 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 16:07:03,781 INFO  L87              Difference]: Start difference. First operand 4236 states and 4865 transitions. cyclomatic complexity: 631 Second operand 3 states.
[2020-11-25 16:07:03,853 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:07:03,853 INFO  L93              Difference]: Finished difference Result 5010 states and 5621 transitions.
[2020-11-25 16:07:03,853 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 16:07:03,853 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5010 states and 5621 transitions.
[2020-11-25 16:07:03,865 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:07:03,883 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5010 states to 4656 states and 5203 transitions.
[2020-11-25 16:07:03,883 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1061
[2020-11-25 16:07:03,883 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1099
[2020-11-25 16:07:03,884 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4656 states and 5203 transitions.
[2020-11-25 16:07:03,888 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:07:03,888 INFO  L728         BuchiCegarLoop]: Abstraction has 4656 states and 5203 transitions.
[2020-11-25 16:07:03,892 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4656 states and 5203 transitions.
[2020-11-25 16:07:03,925 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4656 to 3990.
[2020-11-25 16:07:03,926 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3990 states.
[2020-11-25 16:07:03,930 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3990 states to 3990 states and 4377 transitions.
[2020-11-25 16:07:03,930 INFO  L751         BuchiCegarLoop]: Abstraction has 3990 states and 4377 transitions.
[2020-11-25 16:07:03,930 INFO  L631         BuchiCegarLoop]: Abstraction has 3990 states and 4377 transitions.
[2020-11-25 16:07:03,930 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 16:07:03,930 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3990 states and 4377 transitions.
[2020-11-25 16:07:03,935 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:07:03,935 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:07:03,935 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:07:03,937 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:07:03,937 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_EXEToken0 := false;
[L3]                 call_transfer_EXEToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7038]              assume null == 0;
[L7039]  CALL        call this := FreshRefGenerator__success();
[L3029]              havoc newRef;
[L3030]              assume Alloc[newRef] == false;
[L3031]              Alloc[newRef] := true;
[L3032]              assume newRef != null;
[L7039]  RET         call this := FreshRefGenerator__success();
[L7040]              assume now >= 0;
[L7041]              assume DType[this] == EXEToken;
[L7042]              assume msgvalue_MSG == 0;
[L7043]              gas := gas - 53000;
[L7044]  CALL        call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1770]              havoc __exception;
[L1771]              revert := false;
[L1772]  COND FALSE  !(__exception)
[L1799]  CALL        call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4315]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L4315]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4316]  COND FALSE  !(revert)
[L4319]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, decimals_s916);
[L3927]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L3927]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3928]  COND FALSE  !(revert)
[L3931]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s778, symbol_s778, decimals_s778);
[L3902]              assume msgsender_MSG != null;
[L3903]              Balance[this] := 0;
[L3904]              _name_ERC20Detailed[this] := 427332508;
[L3905]              _symbol_ERC20Detailed[this] := 427332508;
[L3906]              _decimals_ERC20Detailed[this] := 0;
[L3908]              _name_ERC20Detailed[this] := name_s778;
[L3909]              _symbol_ERC20Detailed[this] := symbol_s778;
[L3910]              _decimals_ERC20Detailed[this] := decimals_s778;
[L3931]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s778, symbol_s778, decimals_s778);
[L3932]  COND FALSE  !(revert)
[L4319]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, decimals_s916);
[L4320]  COND FALSE  !(revert)
[L4323]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3398]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L3398]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3399]  COND FALSE  !(revert)
[L3402]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3374]              assume msgsender_MSG != null;
[L3375]              Balance[this] := 0;
[L3376]              _balances_ERC20[this] := zeroRefintArr();
[L3377]              sum__balances0[this] := 0;
[L3378]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3379]              sum__allowed1[this] := 0;
[L3380]              _totalSupply_ERC20[this] := 0;
[L3402]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3403]  COND FALSE  !(revert)
[L4323]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4324]  COND FALSE  !(revert)
[L4327]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4007]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L4007]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4008]  COND FALSE  !(revert)
[L4011]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3398]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L3398]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3399]  COND FALSE  !(revert)
[L3402]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3374]              assume msgsender_MSG != null;
[L3375]              Balance[this] := 0;
[L3376]              _balances_ERC20[this] := zeroRefintArr();
[L3377]              sum__balances0[this] := 0;
[L3378]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3379]              sum__allowed1[this] := 0;
[L3380]              _totalSupply_ERC20[this] := 0;
[L3402]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3403]  COND FALSE  !(revert)
[L4011]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4012]  COND FALSE  !(revert)
[L4015]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3984]              assume msgsender_MSG != null;
[L3985]              Balance[this] := 0;
[L4015]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4016]  COND FALSE  !(revert)
[L4327]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4328]  COND FALSE  !(revert)
[L4331]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3221]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3204]              assume msgsender_MSG != null;
[L3205]              Balance[this] := 0;
[L3206]              _owner_Ownable[this] := null;
[L3208]              _owner_Ownable[this] := msgsender_MSG;
[L3221]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3222]  COND FALSE  !(revert)
[L4331]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4332]  COND FALSE  !(revert)
[L4335]  CALL        call Stoppable_Stoppable__success(this, msgsender_MSG, msgvalue_MSG);
[L4157]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3221]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3204]              assume msgsender_MSG != null;
[L3205]              Balance[this] := 0;
[L3206]              _owner_Ownable[this] := null;
[L3208]              _owner_Ownable[this] := msgsender_MSG;
[L3221]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3222]  COND FALSE  !(revert)
[L4157]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4158]  COND FALSE  !(revert)
[L4161]  CALL        call Stoppable_Stoppable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4137]              assume msgsender_MSG != null;
[L4138]              Balance[this] := 0;
[L4139]              stopped_Stoppable[this] := false;
[L4161]  RET         call Stoppable_Stoppable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4162]  COND FALSE  !(revert)
[L4335]  RET         call Stoppable_Stoppable__success(this, msgsender_MSG, msgvalue_MSG);
[L4336]  COND FALSE  !(revert)
[L4339]  CALL        call EXEToken_EXEToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4251]              assume msgsender_MSG != null;
[L4252]              Balance[this] := 0;
[L4253]              _lockTimes_EXEToken[this] := zeroRefintArr();
[L4254]              sum__lockTimes2[this] := 0;
[L4255]              _lockAmounts_EXEToken[this] := zeroRefintArr();
[L4256]              sum__lockAmounts3[this] := 0;
[L4258]  COND TRUE   DType[this] == EXEToken
[L4259]  CALL        call __var_23 := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3235]              __ret_0_ := _owner_Ownable[this];
[L4259]  RET         call __var_23 := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4260]  COND FALSE  !(revert)
[L4266]              __var_24 := decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4267]  COND TRUE   DType[this] == EXEToken
[L4268]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_23, nonlinearMul(totalSupply_s916, nonlinearPow(10, decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3740]              __var_15 := null;
[L3741]  COND FALSE  !(!(account_s654 != null))
[L3745]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s654);
[L3162]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3163]  COND FALSE  !(!(c_s106 >= a_s106))
[L3167]              __ret_0_ := c_s106;
[L3745]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s654);
[L3746]  COND FALSE  !(revert)
[L3749]              _totalSupply_ERC20[this] := __var_16;
[L3750]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], amount_s654);
[L3162]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3163]  COND FALSE  !(!(c_s106 >= a_s106))
[L3167]              __ret_0_ := c_s106;
[L3750]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], amount_s654);
[L3751]  COND FALSE  !(revert)
[L3754]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s654];
[L3755]              _balances_ERC20[this][account_s654] := __var_17;
[L3756]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s654];
[L3757]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4268]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_23, nonlinearMul(totalSupply_s916, nonlinearPow(10, decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4269]  COND FALSE  !(revert)
[L4339]  RET         call EXEToken_EXEToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4340]  COND FALSE  !(revert)
[L1799]  RET         call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1800]              assume !revert && gas >= 0;
[L7044]  RET         call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L7045]              assume !revert && gas >= 0;
[L7048]  CALL        call CorralChoice_EXEToken(this);
[L6824]              havoc msgsender_MSG;
[L6825]              havoc msgvalue_MSG;
[L6826]              havoc choice;
[L6827]              havoc __ret_0_owner;
[L6828]              havoc newOwner_s184;
[L6829]              havoc __ret_0_totalSupply;
[L6830]              havoc owner_s312;
[L6831]              havoc __ret_0_balanceOf;
[L6832]              havoc owner_s328;
[L6833]              havoc spender_s328;
[L6834]              havoc __ret_0_allowance;
[L6835]              havoc recipient_s1083;
[L6836]              havoc amount_s1083;
[L6837]              havoc __ret_0_transfer;
[L6838]              havoc spender_s425;
[L6839]              havoc value_s425;
[L6840]              havoc __ret_0_approve;
[L6841]              havoc sender_s1113;
[L6842]              havoc recipient_s1113;
[L6843]              havoc amount_s1113;
[L6844]              havoc __ret_0_transferFrom;
[L6845]              havoc spender_s562;
[L6846]              havoc addedValue_s562;
[L6847]              havoc __ret_0_increaseAllowance;
[L6848]              havoc spender_s612;
[L6849]              havoc subtractedValue_s612;
[L6850]              havoc __ret_0_decreaseAllowance;
[L6851]              havoc name_s778;
[L6852]              havoc symbol_s778;
[L6853]              havoc decimals_s778;
[L6854]              havoc __ret_0_name;
[L6855]              havoc __ret_0_symbol;
[L6856]              havoc __ret_0_decimals;
[L6857]              havoc value_s817;
[L6858]              havoc from_s830;
[L6859]              havoc value_s830;
[L6860]              havoc __ret_0_stopped;
[L6861]              havoc name_s916;
[L6862]              havoc symbol_s916;
[L6863]              havoc totalSupply_s916;
[L6864]              havoc decimals_s916;
[L6865]              havoc account_s942;
[L6866]              havoc amount_s942;
[L6867]              havoc __ret_0_mint;
[L6868]              havoc account_s988;
[L6869]              havoc releaseTime_s988;
[L6870]              havoc amount_s988;
[L6871]              havoc account_s1006;
[L6872]              havoc lockTime_s1006;
[L6873]              havoc lockAmount_s1006;
[L6874]              havoc tmpNow;
[L6875]              havoc gas;
[L6876]              assume gas > 4000000 && gas <= 8000000;
[L6877]              tmpNow := now;
[L6878]              havoc now;
[L6879]              assume now > tmpNow;
[L6880]              assume msgsender_MSG != null;
[L6881]              assume DType[msgsender_MSG] != SafeMath;
[L6882]              assume DType[msgsender_MSG] != Ownable;
[L6883]              assume DType[msgsender_MSG] != IERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20;
[L6885]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6886]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6887]              assume DType[msgsender_MSG] != Stoppable;
[L6888]              assume DType[msgsender_MSG] != EXEToken;
[L6889]              Alloc[msgsender_MSG] := true;
[L6890]  COND FALSE  !(choice == 21)
[L6896]  COND FALSE  !(choice == 20)
[L6902]  COND FALSE  !(choice == 19)
[L6908]  COND FALSE  !(choice == 18)
[L6914]  COND FALSE  !(choice == 17)
[L6920]  COND TRUE   choice == 16
[L6921]              gas := gas - 21000;
[L6922]  COND TRUE   gas >= 0
[L6923]              assume amount_s1083 >= 0 && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6924]              assume msgvalue_MSG == 0;
[L6925]  CALL        call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s1083) && msgsender_MSG != recipient_s1083) && amount_s1083 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s1083] + amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s1083 >= 0) && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1083] >= 0) && _balances_ERC20[this][recipient_s1083] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_EXEToken0 := true;
[L3]                 call_transfer_EXEToken0 := false;
[L3]                 revert := revert_hold;
[L2034]              havoc __exception;
[L2035]              revert := false;
[L2036]  COND TRUE   __exception
[L2037]              __tmp__Balance := Balance;
[L2038]              __tmp__DType := DType;
[L2039]              __tmp__Alloc := Alloc;
[L2040]              __tmp__balance_ADDR := balance_ADDR;
[L2041]              __tmp__M_Ref_int := M_Ref_int;
[L2042]              __tmp__sum__balances0 := sum__balances0;
[L2043]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2044]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2045]              __tmp__sum__allowed1 := sum__allowed1;
[L2046]              __tmp__sum__lockTimes2 := sum__lockTimes2;
[L2047]              __tmp__sum__lockAmounts3 := sum__lockAmounts3;
[L2048]              __tmp__Length := Length;
[L2049]              __tmp__now := now;
[L2050]              __tmp___owner_Ownable := _owner_Ownable;
[L2051]              __tmp___balances_ERC20 := _balances_ERC20;
[L2052]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L2053]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2054]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L2055]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L2056]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L2057]              __tmp__stopped_Stoppable := stopped_Stoppable;
[L2058]              __tmp___lockTimes_EXEToken := _lockTimes_EXEToken;
[L2059]              __tmp___lockAmounts_EXEToken := _lockAmounts_EXEToken;
[L2060]  CALL        call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L4509]  CALL        call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6060]  COND TRUE   !!__tmp__stopped_Stoppable[this]
[L6061]              revert := true;
[L4509]  RET         call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4510]  COND TRUE   revert
[L2060]  RET         call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L2061]              assume revert || gas < 0;
[L6925]  RET         call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L7048]  RET         call CorralChoice_EXEToken(this);

Loop:
[L7048]  CALL        call CorralChoice_EXEToken(this);
[L6824]              havoc msgsender_MSG;
[L6825]              havoc msgvalue_MSG;
[L6826]              havoc choice;
[L6827]              havoc __ret_0_owner;
[L6828]              havoc newOwner_s184;
[L6829]              havoc __ret_0_totalSupply;
[L6830]              havoc owner_s312;
[L6831]              havoc __ret_0_balanceOf;
[L6832]              havoc owner_s328;
[L6833]              havoc spender_s328;
[L6834]              havoc __ret_0_allowance;
[L6835]              havoc recipient_s1083;
[L6836]              havoc amount_s1083;
[L6837]              havoc __ret_0_transfer;
[L6838]              havoc spender_s425;
[L6839]              havoc value_s425;
[L6840]              havoc __ret_0_approve;
[L6841]              havoc sender_s1113;
[L6842]              havoc recipient_s1113;
[L6843]              havoc amount_s1113;
[L6844]              havoc __ret_0_transferFrom;
[L6845]              havoc spender_s562;
[L6846]              havoc addedValue_s562;
[L6847]              havoc __ret_0_increaseAllowance;
[L6848]              havoc spender_s612;
[L6849]              havoc subtractedValue_s612;
[L6850]              havoc __ret_0_decreaseAllowance;
[L6851]              havoc name_s778;
[L6852]              havoc symbol_s778;
[L6853]              havoc decimals_s778;
[L6854]              havoc __ret_0_name;
[L6855]              havoc __ret_0_symbol;
[L6856]              havoc __ret_0_decimals;
[L6857]              havoc value_s817;
[L6858]              havoc from_s830;
[L6859]              havoc value_s830;
[L6860]              havoc __ret_0_stopped;
[L6861]              havoc name_s916;
[L6862]              havoc symbol_s916;
[L6863]              havoc totalSupply_s916;
[L6864]              havoc decimals_s916;
[L6865]              havoc account_s942;
[L6866]              havoc amount_s942;
[L6867]              havoc __ret_0_mint;
[L6868]              havoc account_s988;
[L6869]              havoc releaseTime_s988;
[L6870]              havoc amount_s988;
[L6871]              havoc account_s1006;
[L6872]              havoc lockTime_s1006;
[L6873]              havoc lockAmount_s1006;
[L6874]              havoc tmpNow;
[L6875]              havoc gas;
[L6876]              assume gas > 4000000 && gas <= 8000000;
[L6877]              tmpNow := now;
[L6878]              havoc now;
[L6879]              assume now > tmpNow;
[L6880]              assume msgsender_MSG != null;
[L6881]              assume DType[msgsender_MSG] != SafeMath;
[L6882]              assume DType[msgsender_MSG] != Ownable;
[L6883]              assume DType[msgsender_MSG] != IERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20;
[L6885]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6886]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6887]              assume DType[msgsender_MSG] != Stoppable;
[L6888]              assume DType[msgsender_MSG] != EXEToken;
[L6889]              Alloc[msgsender_MSG] := true;
[L6890]  COND FALSE  !(choice == 21)
[L6896]  COND FALSE  !(choice == 20)
[L6902]  COND FALSE  !(choice == 19)
[L6908]  COND FALSE  !(choice == 18)
[L6914]  COND FALSE  !(choice == 17)
[L6920]  COND TRUE   choice == 16
[L6921]              gas := gas - 21000;
[L6922]  COND TRUE   gas >= 0
[L6923]              assume amount_s1083 >= 0 && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6924]              assume msgvalue_MSG == 0;
[L6925]  CALL        call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s1083) && msgsender_MSG != recipient_s1083) && amount_s1083 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s1083] + amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s1083 >= 0) && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1083] >= 0) && _balances_ERC20[this][recipient_s1083] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_EXEToken0 := true;
[L3]                 call_transfer_EXEToken0 := false;
[L3]                 revert := revert_hold;
[L2034]              havoc __exception;
[L2035]              revert := false;
[L2036]  COND TRUE   __exception
[L2037]              __tmp__Balance := Balance;
[L2038]              __tmp__DType := DType;
[L2039]              __tmp__Alloc := Alloc;
[L2040]              __tmp__balance_ADDR := balance_ADDR;
[L2041]              __tmp__M_Ref_int := M_Ref_int;
[L2042]              __tmp__sum__balances0 := sum__balances0;
[L2043]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2044]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2045]              __tmp__sum__allowed1 := sum__allowed1;
[L2046]              __tmp__sum__lockTimes2 := sum__lockTimes2;
[L2047]              __tmp__sum__lockAmounts3 := sum__lockAmounts3;
[L2048]              __tmp__Length := Length;
[L2049]              __tmp__now := now;
[L2050]              __tmp___owner_Ownable := _owner_Ownable;
[L2051]              __tmp___balances_ERC20 := _balances_ERC20;
[L2052]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L2053]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2054]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L2055]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L2056]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L2057]              __tmp__stopped_Stoppable := stopped_Stoppable;
[L2058]              __tmp___lockTimes_EXEToken := _lockTimes_EXEToken;
[L2059]              __tmp___lockAmounts_EXEToken := _lockAmounts_EXEToken;
[L2060]  CALL        call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L4509]  CALL        call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6060]  COND TRUE   !!__tmp__stopped_Stoppable[this]
[L6061]              revert := true;
[L4509]  RET         call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4510]  COND TRUE   revert
[L2060]  RET         call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L2061]              assume revert || gas < 0;
[L6925]  RET         call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L7048]  RET         call CorralChoice_EXEToken(this);

[2020-11-25 16:07:03,941 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:07:03,942 INFO  L82        PathProgramCache]: Analyzing trace with hash 1938125052, now seen corresponding path program 1 times
[2020-11-25 16:07:03,942 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:07:03,955 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:07:04,043 INFO  L134       CoverageAnalysis]: Checked inductivity of 136 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 136 trivial. 0 not checked.
[2020-11-25 16:07:04,043 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:07:04,043 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 16:07:04,044 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:07:04,044 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 16:07:04,044 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=133, Unknown=0, NotChecked=0, Total=156
[2020-11-25 16:07:04,044 INFO  L87              Difference]: Start difference. First operand 3990 states and 4377 transitions. cyclomatic complexity: 389 Second operand 13 states.
[2020-11-25 16:07:06,969 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:07:06,969 INFO  L93              Difference]: Finished difference Result 6536 states and 7238 transitions.
[2020-11-25 16:07:06,969 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-25 16:07:06,969 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6536 states and 7238 transitions.
[2020-11-25 16:07:06,983 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 16:07:06,999 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6536 states to 6526 states and 7226 transitions.
[2020-11-25 16:07:07,000 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1542
[2020-11-25 16:07:07,001 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1542
[2020-11-25 16:07:07,001 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 6526 states and 7226 transitions.
[2020-11-25 16:07:07,007 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:07:07,007 INFO  L728         BuchiCegarLoop]: Abstraction has 6526 states and 7226 transitions.
[2020-11-25 16:07:07,011 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 6526 states and 7226 transitions.
[2020-11-25 16:07:07,063 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 6526 to 5624.
[2020-11-25 16:07:07,063 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5624 states.
[2020-11-25 16:07:07,071 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5624 states to 5624 states and 6303 transitions.
[2020-11-25 16:07:07,071 INFO  L751         BuchiCegarLoop]: Abstraction has 5624 states and 6303 transitions.
[2020-11-25 16:07:07,071 INFO  L631         BuchiCegarLoop]: Abstraction has 5624 states and 6303 transitions.
[2020-11-25 16:07:07,071 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 16:07:07,071 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5624 states and 6303 transitions.
[2020-11-25 16:07:07,079 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 16:07:07,079 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:07:07,079 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:07:07,082 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:07:07,082 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_EXEToken0 := false;
[L3]                 call_transfer_EXEToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7038]              assume null == 0;
[L7039]  CALL        call this := FreshRefGenerator__success();
[L3029]              havoc newRef;
[L3030]              assume Alloc[newRef] == false;
[L3031]              Alloc[newRef] := true;
[L3032]              assume newRef != null;
[L7039]  RET         call this := FreshRefGenerator__success();
[L7040]              assume now >= 0;
[L7041]              assume DType[this] == EXEToken;
[L7042]              assume msgvalue_MSG == 0;
[L7043]              gas := gas - 53000;
[L7044]  CALL        call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1770]              havoc __exception;
[L1771]              revert := false;
[L1772]  COND FALSE  !(__exception)
[L1799]  CALL        call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4315]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L4315]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4316]  COND FALSE  !(revert)
[L4319]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, decimals_s916);
[L3927]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L3927]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3928]  COND FALSE  !(revert)
[L3931]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s778, symbol_s778, decimals_s778);
[L3902]              assume msgsender_MSG != null;
[L3903]              Balance[this] := 0;
[L3904]              _name_ERC20Detailed[this] := 427332508;
[L3905]              _symbol_ERC20Detailed[this] := 427332508;
[L3906]              _decimals_ERC20Detailed[this] := 0;
[L3908]              _name_ERC20Detailed[this] := name_s778;
[L3909]              _symbol_ERC20Detailed[this] := symbol_s778;
[L3910]              _decimals_ERC20Detailed[this] := decimals_s778;
[L3931]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s778, symbol_s778, decimals_s778);
[L3932]  COND FALSE  !(revert)
[L4319]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, decimals_s916);
[L4320]  COND FALSE  !(revert)
[L4323]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3398]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L3398]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3399]  COND FALSE  !(revert)
[L3402]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3374]              assume msgsender_MSG != null;
[L3375]              Balance[this] := 0;
[L3376]              _balances_ERC20[this] := zeroRefintArr();
[L3377]              sum__balances0[this] := 0;
[L3378]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3379]              sum__allowed1[this] := 0;
[L3380]              _totalSupply_ERC20[this] := 0;
[L3402]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3403]  COND FALSE  !(revert)
[L4323]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4324]  COND FALSE  !(revert)
[L4327]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4007]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L4007]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4008]  COND FALSE  !(revert)
[L4011]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3398]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L3398]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3399]  COND FALSE  !(revert)
[L3402]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3374]              assume msgsender_MSG != null;
[L3375]              Balance[this] := 0;
[L3376]              _balances_ERC20[this] := zeroRefintArr();
[L3377]              sum__balances0[this] := 0;
[L3378]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3379]              sum__allowed1[this] := 0;
[L3380]              _totalSupply_ERC20[this] := 0;
[L3402]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3403]  COND FALSE  !(revert)
[L4011]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4012]  COND FALSE  !(revert)
[L4015]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3984]              assume msgsender_MSG != null;
[L3985]              Balance[this] := 0;
[L4015]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4016]  COND FALSE  !(revert)
[L4327]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4328]  COND FALSE  !(revert)
[L4331]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3221]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3204]              assume msgsender_MSG != null;
[L3205]              Balance[this] := 0;
[L3206]              _owner_Ownable[this] := null;
[L3208]              _owner_Ownable[this] := msgsender_MSG;
[L3221]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3222]  COND FALSE  !(revert)
[L4331]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4332]  COND FALSE  !(revert)
[L4335]  CALL        call Stoppable_Stoppable__success(this, msgsender_MSG, msgvalue_MSG);
[L4157]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3221]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3204]              assume msgsender_MSG != null;
[L3205]              Balance[this] := 0;
[L3206]              _owner_Ownable[this] := null;
[L3208]              _owner_Ownable[this] := msgsender_MSG;
[L3221]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3222]  COND FALSE  !(revert)
[L4157]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4158]  COND FALSE  !(revert)
[L4161]  CALL        call Stoppable_Stoppable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4137]              assume msgsender_MSG != null;
[L4138]              Balance[this] := 0;
[L4139]              stopped_Stoppable[this] := false;
[L4161]  RET         call Stoppable_Stoppable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4162]  COND FALSE  !(revert)
[L4335]  RET         call Stoppable_Stoppable__success(this, msgsender_MSG, msgvalue_MSG);
[L4336]  COND FALSE  !(revert)
[L4339]  CALL        call EXEToken_EXEToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4251]              assume msgsender_MSG != null;
[L4252]              Balance[this] := 0;
[L4253]              _lockTimes_EXEToken[this] := zeroRefintArr();
[L4254]              sum__lockTimes2[this] := 0;
[L4255]              _lockAmounts_EXEToken[this] := zeroRefintArr();
[L4256]              sum__lockAmounts3[this] := 0;
[L4258]  COND TRUE   DType[this] == EXEToken
[L4259]  CALL        call __var_23 := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3235]              __ret_0_ := _owner_Ownable[this];
[L4259]  RET         call __var_23 := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4260]  COND FALSE  !(revert)
[L4266]              __var_24 := decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4267]  COND TRUE   DType[this] == EXEToken
[L4268]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_23, nonlinearMul(totalSupply_s916, nonlinearPow(10, decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3740]              __var_15 := null;
[L3741]  COND FALSE  !(!(account_s654 != null))
[L3745]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s654);
[L3162]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3163]  COND FALSE  !(!(c_s106 >= a_s106))
[L3167]              __ret_0_ := c_s106;
[L3745]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s654);
[L3746]  COND FALSE  !(revert)
[L3749]              _totalSupply_ERC20[this] := __var_16;
[L3750]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], amount_s654);
[L3162]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3163]  COND FALSE  !(!(c_s106 >= a_s106))
[L3167]              __ret_0_ := c_s106;
[L3750]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], amount_s654);
[L3751]  COND FALSE  !(revert)
[L3754]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s654];
[L3755]              _balances_ERC20[this][account_s654] := __var_17;
[L3756]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s654];
[L3757]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4268]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_23, nonlinearMul(totalSupply_s916, nonlinearPow(10, decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4269]  COND FALSE  !(revert)
[L4339]  RET         call EXEToken_EXEToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4340]  COND FALSE  !(revert)
[L1799]  RET         call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1800]              assume !revert && gas >= 0;
[L7044]  RET         call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L7045]              assume !revert && gas >= 0;
[L7048]  CALL        call CorralChoice_EXEToken(this);
[L6824]              havoc msgsender_MSG;
[L6825]              havoc msgvalue_MSG;
[L6826]              havoc choice;
[L6827]              havoc __ret_0_owner;
[L6828]              havoc newOwner_s184;
[L6829]              havoc __ret_0_totalSupply;
[L6830]              havoc owner_s312;
[L6831]              havoc __ret_0_balanceOf;
[L6832]              havoc owner_s328;
[L6833]              havoc spender_s328;
[L6834]              havoc __ret_0_allowance;
[L6835]              havoc recipient_s1083;
[L6836]              havoc amount_s1083;
[L6837]              havoc __ret_0_transfer;
[L6838]              havoc spender_s425;
[L6839]              havoc value_s425;
[L6840]              havoc __ret_0_approve;
[L6841]              havoc sender_s1113;
[L6842]              havoc recipient_s1113;
[L6843]              havoc amount_s1113;
[L6844]              havoc __ret_0_transferFrom;
[L6845]              havoc spender_s562;
[L6846]              havoc addedValue_s562;
[L6847]              havoc __ret_0_increaseAllowance;
[L6848]              havoc spender_s612;
[L6849]              havoc subtractedValue_s612;
[L6850]              havoc __ret_0_decreaseAllowance;
[L6851]              havoc name_s778;
[L6852]              havoc symbol_s778;
[L6853]              havoc decimals_s778;
[L6854]              havoc __ret_0_name;
[L6855]              havoc __ret_0_symbol;
[L6856]              havoc __ret_0_decimals;
[L6857]              havoc value_s817;
[L6858]              havoc from_s830;
[L6859]              havoc value_s830;
[L6860]              havoc __ret_0_stopped;
[L6861]              havoc name_s916;
[L6862]              havoc symbol_s916;
[L6863]              havoc totalSupply_s916;
[L6864]              havoc decimals_s916;
[L6865]              havoc account_s942;
[L6866]              havoc amount_s942;
[L6867]              havoc __ret_0_mint;
[L6868]              havoc account_s988;
[L6869]              havoc releaseTime_s988;
[L6870]              havoc amount_s988;
[L6871]              havoc account_s1006;
[L6872]              havoc lockTime_s1006;
[L6873]              havoc lockAmount_s1006;
[L6874]              havoc tmpNow;
[L6875]              havoc gas;
[L6876]              assume gas > 4000000 && gas <= 8000000;
[L6877]              tmpNow := now;
[L6878]              havoc now;
[L6879]              assume now > tmpNow;
[L6880]              assume msgsender_MSG != null;
[L6881]              assume DType[msgsender_MSG] != SafeMath;
[L6882]              assume DType[msgsender_MSG] != Ownable;
[L6883]              assume DType[msgsender_MSG] != IERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20;
[L6885]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6886]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6887]              assume DType[msgsender_MSG] != Stoppable;
[L6888]              assume DType[msgsender_MSG] != EXEToken;
[L6889]              Alloc[msgsender_MSG] := true;
[L6890]  COND FALSE  !(choice == 21)
[L6896]  COND FALSE  !(choice == 20)
[L6902]  COND FALSE  !(choice == 19)
[L6908]  COND FALSE  !(choice == 18)
[L6914]  COND FALSE  !(choice == 17)
[L6920]  COND TRUE   choice == 16
[L6921]              gas := gas - 21000;
[L6922]  COND TRUE   gas >= 0
[L6923]              assume amount_s1083 >= 0 && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6924]              assume msgvalue_MSG == 0;
[L6925]  CALL        call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s1083) && msgsender_MSG != recipient_s1083) && amount_s1083 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s1083] + amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s1083 >= 0) && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1083] >= 0) && _balances_ERC20[this][recipient_s1083] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_EXEToken0 := true;
[L3]                 call_transfer_EXEToken0 := false;
[L3]                 revert := revert_hold;
[L2034]              havoc __exception;
[L2035]              revert := false;
[L2036]  COND TRUE   __exception
[L2037]              __tmp__Balance := Balance;
[L2038]              __tmp__DType := DType;
[L2039]              __tmp__Alloc := Alloc;
[L2040]              __tmp__balance_ADDR := balance_ADDR;
[L2041]              __tmp__M_Ref_int := M_Ref_int;
[L2042]              __tmp__sum__balances0 := sum__balances0;
[L2043]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2044]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2045]              __tmp__sum__allowed1 := sum__allowed1;
[L2046]              __tmp__sum__lockTimes2 := sum__lockTimes2;
[L2047]              __tmp__sum__lockAmounts3 := sum__lockAmounts3;
[L2048]              __tmp__Length := Length;
[L2049]              __tmp__now := now;
[L2050]              __tmp___owner_Ownable := _owner_Ownable;
[L2051]              __tmp___balances_ERC20 := _balances_ERC20;
[L2052]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L2053]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2054]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L2055]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L2056]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L2057]              __tmp__stopped_Stoppable := stopped_Stoppable;
[L2058]              __tmp___lockTimes_EXEToken := _lockTimes_EXEToken;
[L2059]              __tmp___lockAmounts_EXEToken := _lockAmounts_EXEToken;
[L2060]  CALL        call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L4509]  CALL        call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6060]  COND FALSE  !(!!__tmp__stopped_Stoppable[this])
[L4509]  RET         call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4510]  COND FALSE  !(revert)
[L4513]  CALL        call __var_28 := _isLocked~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s1083);
[L4451]  COND TRUE   __tmp__DType[this] == EXEToken
[L4452]  CALL        call __var_25 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3422]              __ret_0_ := __tmp___balances_ERC20[this][owner_s312];
[L4452]  RET         call __var_25 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4453]  COND FALSE  !(revert)
[L4459]  COND TRUE   __tmp__DType[this] == EXEToken
[L4460]  CALL        call __var_27 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3422]              __ret_0_ := __tmp___balances_ERC20[this][owner_s312];
[L4460]  RET         call __var_27 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4461]  COND FALSE  !(revert)
[L4467]  CALL        call __var_26 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __var_27, __tmp___lockAmounts_EXEToken[this][account_s1055]);
[L3126]  COND TRUE   !(b_s82 <= a_s82)
[L3127]              revert := true;
[L4467]  RET         call __var_26 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __var_27, __tmp___lockAmounts_EXEToken[this][account_s1055]);
[L4468]  COND TRUE   revert
[L4513]  RET         call __var_28 := _isLocked~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s1083);
[L4514]  COND TRUE   revert
[L2060]  RET         call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L2061]              assume revert || gas < 0;
[L6925]  RET         call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L7048]  RET         call CorralChoice_EXEToken(this);

Loop:
[L7048]  CALL        call CorralChoice_EXEToken(this);
[L6824]              havoc msgsender_MSG;
[L6825]              havoc msgvalue_MSG;
[L6826]              havoc choice;
[L6827]              havoc __ret_0_owner;
[L6828]              havoc newOwner_s184;
[L6829]              havoc __ret_0_totalSupply;
[L6830]              havoc owner_s312;
[L6831]              havoc __ret_0_balanceOf;
[L6832]              havoc owner_s328;
[L6833]              havoc spender_s328;
[L6834]              havoc __ret_0_allowance;
[L6835]              havoc recipient_s1083;
[L6836]              havoc amount_s1083;
[L6837]              havoc __ret_0_transfer;
[L6838]              havoc spender_s425;
[L6839]              havoc value_s425;
[L6840]              havoc __ret_0_approve;
[L6841]              havoc sender_s1113;
[L6842]              havoc recipient_s1113;
[L6843]              havoc amount_s1113;
[L6844]              havoc __ret_0_transferFrom;
[L6845]              havoc spender_s562;
[L6846]              havoc addedValue_s562;
[L6847]              havoc __ret_0_increaseAllowance;
[L6848]              havoc spender_s612;
[L6849]              havoc subtractedValue_s612;
[L6850]              havoc __ret_0_decreaseAllowance;
[L6851]              havoc name_s778;
[L6852]              havoc symbol_s778;
[L6853]              havoc decimals_s778;
[L6854]              havoc __ret_0_name;
[L6855]              havoc __ret_0_symbol;
[L6856]              havoc __ret_0_decimals;
[L6857]              havoc value_s817;
[L6858]              havoc from_s830;
[L6859]              havoc value_s830;
[L6860]              havoc __ret_0_stopped;
[L6861]              havoc name_s916;
[L6862]              havoc symbol_s916;
[L6863]              havoc totalSupply_s916;
[L6864]              havoc decimals_s916;
[L6865]              havoc account_s942;
[L6866]              havoc amount_s942;
[L6867]              havoc __ret_0_mint;
[L6868]              havoc account_s988;
[L6869]              havoc releaseTime_s988;
[L6870]              havoc amount_s988;
[L6871]              havoc account_s1006;
[L6872]              havoc lockTime_s1006;
[L6873]              havoc lockAmount_s1006;
[L6874]              havoc tmpNow;
[L6875]              havoc gas;
[L6876]              assume gas > 4000000 && gas <= 8000000;
[L6877]              tmpNow := now;
[L6878]              havoc now;
[L6879]              assume now > tmpNow;
[L6880]              assume msgsender_MSG != null;
[L6881]              assume DType[msgsender_MSG] != SafeMath;
[L6882]              assume DType[msgsender_MSG] != Ownable;
[L6883]              assume DType[msgsender_MSG] != IERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20;
[L6885]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6886]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6887]              assume DType[msgsender_MSG] != Stoppable;
[L6888]              assume DType[msgsender_MSG] != EXEToken;
[L6889]              Alloc[msgsender_MSG] := true;
[L6890]  COND FALSE  !(choice == 21)
[L6896]  COND FALSE  !(choice == 20)
[L6902]  COND FALSE  !(choice == 19)
[L6908]  COND FALSE  !(choice == 18)
[L6914]  COND FALSE  !(choice == 17)
[L6920]  COND TRUE   choice == 16
[L6921]              gas := gas - 21000;
[L6922]  COND TRUE   gas >= 0
[L6923]              assume amount_s1083 >= 0 && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6924]              assume msgvalue_MSG == 0;
[L6925]  CALL        call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s1083) && msgsender_MSG != recipient_s1083) && amount_s1083 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s1083] + amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s1083 >= 0) && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1083] >= 0) && _balances_ERC20[this][recipient_s1083] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_EXEToken0 := true;
[L3]                 call_transfer_EXEToken0 := false;
[L3]                 revert := revert_hold;
[L2034]              havoc __exception;
[L2035]              revert := false;
[L2036]  COND TRUE   __exception
[L2037]              __tmp__Balance := Balance;
[L2038]              __tmp__DType := DType;
[L2039]              __tmp__Alloc := Alloc;
[L2040]              __tmp__balance_ADDR := balance_ADDR;
[L2041]              __tmp__M_Ref_int := M_Ref_int;
[L2042]              __tmp__sum__balances0 := sum__balances0;
[L2043]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2044]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2045]              __tmp__sum__allowed1 := sum__allowed1;
[L2046]              __tmp__sum__lockTimes2 := sum__lockTimes2;
[L2047]              __tmp__sum__lockAmounts3 := sum__lockAmounts3;
[L2048]              __tmp__Length := Length;
[L2049]              __tmp__now := now;
[L2050]              __tmp___owner_Ownable := _owner_Ownable;
[L2051]              __tmp___balances_ERC20 := _balances_ERC20;
[L2052]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L2053]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2054]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L2055]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L2056]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L2057]              __tmp__stopped_Stoppable := stopped_Stoppable;
[L2058]              __tmp___lockTimes_EXEToken := _lockTimes_EXEToken;
[L2059]              __tmp___lockAmounts_EXEToken := _lockAmounts_EXEToken;
[L2060]  CALL        call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L4509]  CALL        call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6060]  COND FALSE  !(!!__tmp__stopped_Stoppable[this])
[L4509]  RET         call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4510]  COND FALSE  !(revert)
[L4513]  CALL        call __var_28 := _isLocked~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s1083);
[L4451]  COND TRUE   __tmp__DType[this] == EXEToken
[L4452]  CALL        call __var_25 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3422]              __ret_0_ := __tmp___balances_ERC20[this][owner_s312];
[L4452]  RET         call __var_25 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4453]  COND FALSE  !(revert)
[L4459]  COND TRUE   __tmp__DType[this] == EXEToken
[L4460]  CALL        call __var_27 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3422]              __ret_0_ := __tmp___balances_ERC20[this][owner_s312];
[L4460]  RET         call __var_27 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4461]  COND FALSE  !(revert)
[L4467]  CALL        call __var_26 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __var_27, __tmp___lockAmounts_EXEToken[this][account_s1055]);
[L3126]  COND TRUE   !(b_s82 <= a_s82)
[L3127]              revert := true;
[L4467]  RET         call __var_26 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __var_27, __tmp___lockAmounts_EXEToken[this][account_s1055]);
[L4468]  COND TRUE   revert
[L4513]  RET         call __var_28 := _isLocked~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s1083);
[L4514]  COND TRUE   revert
[L2060]  RET         call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L2061]              assume revert || gas < 0;
[L6925]  RET         call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L7048]  RET         call CorralChoice_EXEToken(this);

[2020-11-25 16:07:07,086 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:07:07,087 INFO  L82        PathProgramCache]: Analyzing trace with hash -338396818, now seen corresponding path program 1 times
[2020-11-25 16:07:07,087 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:07:07,101 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:07:07,236 INFO  L134       CoverageAnalysis]: Checked inductivity of 139 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 137 trivial. 0 not checked.
[2020-11-25 16:07:07,236 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:07:07,236 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [17] imperfect sequences [] total 17
[2020-11-25 16:07:07,237 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:07:07,237 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 18 interpolants.
[2020-11-25 16:07:07,237 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=34, Invalid=272, Unknown=0, NotChecked=0, Total=306
[2020-11-25 16:07:07,237 INFO  L87              Difference]: Start difference. First operand 5624 states and 6303 transitions. cyclomatic complexity: 683 Second operand 18 states.
[2020-11-25 16:07:10,102 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:07:10,102 INFO  L93              Difference]: Finished difference Result 5940 states and 6818 transitions.
[2020-11-25 16:07:10,102 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 21 states. 
[2020-11-25 16:07:10,102 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5940 states and 6818 transitions.
[2020-11-25 16:07:10,116 INFO  L131   ngComponentsAnalysis]: Automaton has 9 accepting balls. 28
[2020-11-25 16:07:10,134 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5940 states to 5940 states and 6818 transitions.
[2020-11-25 16:07:10,134 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1469
[2020-11-25 16:07:10,135 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1469
[2020-11-25 16:07:10,135 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5940 states and 6818 transitions.
[2020-11-25 16:07:10,140 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:07:10,140 INFO  L728         BuchiCegarLoop]: Abstraction has 5940 states and 6818 transitions.
[2020-11-25 16:07:10,143 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5940 states and 6818 transitions.
[2020-11-25 16:07:10,187 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5940 to 5860.
[2020-11-25 16:07:10,187 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5860 states.
[2020-11-25 16:07:10,194 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5860 states to 5860 states and 6630 transitions.
[2020-11-25 16:07:10,194 INFO  L751         BuchiCegarLoop]: Abstraction has 5860 states and 6630 transitions.
[2020-11-25 16:07:10,195 INFO  L631         BuchiCegarLoop]: Abstraction has 5860 states and 6630 transitions.
[2020-11-25 16:07:10,195 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 16:07:10,195 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5860 states and 6630 transitions.
[2020-11-25 16:07:10,201 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 16
[2020-11-25 16:07:10,201 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:07:10,201 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:07:10,203 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:07:10,203 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_EXEToken0 := false;
[L3]                 call_transfer_EXEToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7038]              assume null == 0;
[L7039]  CALL        call this := FreshRefGenerator__success();
[L3029]              havoc newRef;
[L3030]              assume Alloc[newRef] == false;
[L3031]              Alloc[newRef] := true;
[L3032]              assume newRef != null;
[L7039]  RET         call this := FreshRefGenerator__success();
[L7040]              assume now >= 0;
[L7041]              assume DType[this] == EXEToken;
[L7042]              assume msgvalue_MSG == 0;
[L7043]              gas := gas - 53000;
[L7044]  CALL        call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1770]              havoc __exception;
[L1771]              revert := false;
[L1772]  COND FALSE  !(__exception)
[L1799]  CALL        call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4315]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L4315]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4316]  COND FALSE  !(revert)
[L4319]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, decimals_s916);
[L3927]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L3927]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3928]  COND FALSE  !(revert)
[L3931]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s778, symbol_s778, decimals_s778);
[L3902]              assume msgsender_MSG != null;
[L3903]              Balance[this] := 0;
[L3904]              _name_ERC20Detailed[this] := 427332508;
[L3905]              _symbol_ERC20Detailed[this] := 427332508;
[L3906]              _decimals_ERC20Detailed[this] := 0;
[L3908]              _name_ERC20Detailed[this] := name_s778;
[L3909]              _symbol_ERC20Detailed[this] := symbol_s778;
[L3910]              _decimals_ERC20Detailed[this] := decimals_s778;
[L3931]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s778, symbol_s778, decimals_s778);
[L3932]  COND FALSE  !(revert)
[L4319]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, decimals_s916);
[L4320]  COND FALSE  !(revert)
[L4323]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3398]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L3398]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3399]  COND FALSE  !(revert)
[L3402]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3374]              assume msgsender_MSG != null;
[L3375]              Balance[this] := 0;
[L3376]              _balances_ERC20[this] := zeroRefintArr();
[L3377]              sum__balances0[this] := 0;
[L3378]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3379]              sum__allowed1[this] := 0;
[L3380]              _totalSupply_ERC20[this] := 0;
[L3402]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3403]  COND FALSE  !(revert)
[L4323]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4324]  COND FALSE  !(revert)
[L4327]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4007]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L4007]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4008]  COND FALSE  !(revert)
[L4011]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3398]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L3398]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3399]  COND FALSE  !(revert)
[L3402]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3374]              assume msgsender_MSG != null;
[L3375]              Balance[this] := 0;
[L3376]              _balances_ERC20[this] := zeroRefintArr();
[L3377]              sum__balances0[this] := 0;
[L3378]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3379]              sum__allowed1[this] := 0;
[L3380]              _totalSupply_ERC20[this] := 0;
[L3402]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3403]  COND FALSE  !(revert)
[L4011]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4012]  COND FALSE  !(revert)
[L4015]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3984]              assume msgsender_MSG != null;
[L3985]              Balance[this] := 0;
[L4015]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4016]  COND FALSE  !(revert)
[L4327]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4328]  COND FALSE  !(revert)
[L4331]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3221]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3204]              assume msgsender_MSG != null;
[L3205]              Balance[this] := 0;
[L3206]              _owner_Ownable[this] := null;
[L3208]              _owner_Ownable[this] := msgsender_MSG;
[L3221]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3222]  COND FALSE  !(revert)
[L4331]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4332]  COND FALSE  !(revert)
[L4335]  CALL        call Stoppable_Stoppable__success(this, msgsender_MSG, msgvalue_MSG);
[L4157]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3221]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3204]              assume msgsender_MSG != null;
[L3205]              Balance[this] := 0;
[L3206]              _owner_Ownable[this] := null;
[L3208]              _owner_Ownable[this] := msgsender_MSG;
[L3221]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3222]  COND FALSE  !(revert)
[L4157]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4158]  COND FALSE  !(revert)
[L4161]  CALL        call Stoppable_Stoppable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4137]              assume msgsender_MSG != null;
[L4138]              Balance[this] := 0;
[L4139]              stopped_Stoppable[this] := false;
[L4161]  RET         call Stoppable_Stoppable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4162]  COND FALSE  !(revert)
[L4335]  RET         call Stoppable_Stoppable__success(this, msgsender_MSG, msgvalue_MSG);
[L4336]  COND FALSE  !(revert)
[L4339]  CALL        call EXEToken_EXEToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4251]              assume msgsender_MSG != null;
[L4252]              Balance[this] := 0;
[L4253]              _lockTimes_EXEToken[this] := zeroRefintArr();
[L4254]              sum__lockTimes2[this] := 0;
[L4255]              _lockAmounts_EXEToken[this] := zeroRefintArr();
[L4256]              sum__lockAmounts3[this] := 0;
[L4258]  COND TRUE   DType[this] == EXEToken
[L4259]  CALL        call __var_23 := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3235]              __ret_0_ := _owner_Ownable[this];
[L4259]  RET         call __var_23 := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4260]  COND FALSE  !(revert)
[L4266]              __var_24 := decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4267]  COND TRUE   DType[this] == EXEToken
[L4268]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_23, nonlinearMul(totalSupply_s916, nonlinearPow(10, decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3740]              __var_15 := null;
[L3741]  COND FALSE  !(!(account_s654 != null))
[L3745]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s654);
[L3162]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3163]  COND FALSE  !(!(c_s106 >= a_s106))
[L3167]              __ret_0_ := c_s106;
[L3745]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s654);
[L3746]  COND FALSE  !(revert)
[L3749]              _totalSupply_ERC20[this] := __var_16;
[L3750]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], amount_s654);
[L3162]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3163]  COND FALSE  !(!(c_s106 >= a_s106))
[L3167]              __ret_0_ := c_s106;
[L3750]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], amount_s654);
[L3751]  COND FALSE  !(revert)
[L3754]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s654];
[L3755]              _balances_ERC20[this][account_s654] := __var_17;
[L3756]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s654];
[L3757]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4268]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_23, nonlinearMul(totalSupply_s916, nonlinearPow(10, decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4269]  COND FALSE  !(revert)
[L4339]  RET         call EXEToken_EXEToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4340]  COND FALSE  !(revert)
[L1799]  RET         call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1800]              assume !revert && gas >= 0;
[L7044]  RET         call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L7045]              assume !revert && gas >= 0;
[L7048]  CALL        call CorralChoice_EXEToken(this);
[L6824]              havoc msgsender_MSG;
[L6825]              havoc msgvalue_MSG;
[L6826]              havoc choice;
[L6827]              havoc __ret_0_owner;
[L6828]              havoc newOwner_s184;
[L6829]              havoc __ret_0_totalSupply;
[L6830]              havoc owner_s312;
[L6831]              havoc __ret_0_balanceOf;
[L6832]              havoc owner_s328;
[L6833]              havoc spender_s328;
[L6834]              havoc __ret_0_allowance;
[L6835]              havoc recipient_s1083;
[L6836]              havoc amount_s1083;
[L6837]              havoc __ret_0_transfer;
[L6838]              havoc spender_s425;
[L6839]              havoc value_s425;
[L6840]              havoc __ret_0_approve;
[L6841]              havoc sender_s1113;
[L6842]              havoc recipient_s1113;
[L6843]              havoc amount_s1113;
[L6844]              havoc __ret_0_transferFrom;
[L6845]              havoc spender_s562;
[L6846]              havoc addedValue_s562;
[L6847]              havoc __ret_0_increaseAllowance;
[L6848]              havoc spender_s612;
[L6849]              havoc subtractedValue_s612;
[L6850]              havoc __ret_0_decreaseAllowance;
[L6851]              havoc name_s778;
[L6852]              havoc symbol_s778;
[L6853]              havoc decimals_s778;
[L6854]              havoc __ret_0_name;
[L6855]              havoc __ret_0_symbol;
[L6856]              havoc __ret_0_decimals;
[L6857]              havoc value_s817;
[L6858]              havoc from_s830;
[L6859]              havoc value_s830;
[L6860]              havoc __ret_0_stopped;
[L6861]              havoc name_s916;
[L6862]              havoc symbol_s916;
[L6863]              havoc totalSupply_s916;
[L6864]              havoc decimals_s916;
[L6865]              havoc account_s942;
[L6866]              havoc amount_s942;
[L6867]              havoc __ret_0_mint;
[L6868]              havoc account_s988;
[L6869]              havoc releaseTime_s988;
[L6870]              havoc amount_s988;
[L6871]              havoc account_s1006;
[L6872]              havoc lockTime_s1006;
[L6873]              havoc lockAmount_s1006;
[L6874]              havoc tmpNow;
[L6875]              havoc gas;
[L6876]              assume gas > 4000000 && gas <= 8000000;
[L6877]              tmpNow := now;
[L6878]              havoc now;
[L6879]              assume now > tmpNow;
[L6880]              assume msgsender_MSG != null;
[L6881]              assume DType[msgsender_MSG] != SafeMath;
[L6882]              assume DType[msgsender_MSG] != Ownable;
[L6883]              assume DType[msgsender_MSG] != IERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20;
[L6885]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6886]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6887]              assume DType[msgsender_MSG] != Stoppable;
[L6888]              assume DType[msgsender_MSG] != EXEToken;
[L6889]              Alloc[msgsender_MSG] := true;
[L6890]  COND FALSE  !(choice == 21)
[L6896]  COND FALSE  !(choice == 20)
[L6902]  COND FALSE  !(choice == 19)
[L6908]  COND FALSE  !(choice == 18)
[L6914]  COND FALSE  !(choice == 17)
[L6920]  COND TRUE   choice == 16
[L6921]              gas := gas - 21000;
[L6922]  COND TRUE   gas >= 0
[L6923]              assume amount_s1083 >= 0 && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6924]              assume msgvalue_MSG == 0;
[L6925]  CALL        call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s1083) && msgsender_MSG != recipient_s1083) && amount_s1083 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s1083] + amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s1083 >= 0) && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1083] >= 0) && _balances_ERC20[this][recipient_s1083] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_EXEToken0 := true;
[L3]                 call_transfer_EXEToken0 := false;
[L3]                 revert := revert_hold;
[L2034]              havoc __exception;
[L2035]              revert := false;
[L2036]  COND TRUE   __exception
[L2037]              __tmp__Balance := Balance;
[L2038]              __tmp__DType := DType;
[L2039]              __tmp__Alloc := Alloc;
[L2040]              __tmp__balance_ADDR := balance_ADDR;
[L2041]              __tmp__M_Ref_int := M_Ref_int;
[L2042]              __tmp__sum__balances0 := sum__balances0;
[L2043]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2044]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2045]              __tmp__sum__allowed1 := sum__allowed1;
[L2046]              __tmp__sum__lockTimes2 := sum__lockTimes2;
[L2047]              __tmp__sum__lockAmounts3 := sum__lockAmounts3;
[L2048]              __tmp__Length := Length;
[L2049]              __tmp__now := now;
[L2050]              __tmp___owner_Ownable := _owner_Ownable;
[L2051]              __tmp___balances_ERC20 := _balances_ERC20;
[L2052]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L2053]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2054]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L2055]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L2056]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L2057]              __tmp__stopped_Stoppable := stopped_Stoppable;
[L2058]              __tmp___lockTimes_EXEToken := _lockTimes_EXEToken;
[L2059]              __tmp___lockAmounts_EXEToken := _lockAmounts_EXEToken;
[L2060]  CALL        call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L4509]  CALL        call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6060]  COND FALSE  !(!!__tmp__stopped_Stoppable[this])
[L4509]  RET         call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4510]  COND FALSE  !(revert)
[L4513]  CALL        call __var_28 := _isLocked~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s1083);
[L4451]  COND TRUE   __tmp__DType[this] == EXEToken
[L4452]  CALL        call __var_25 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3422]              __ret_0_ := __tmp___balances_ERC20[this][owner_s312];
[L4452]  RET         call __var_25 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4453]  COND FALSE  !(revert)
[L4459]  COND TRUE   __tmp__DType[this] == EXEToken
[L4460]  CALL        call __var_27 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3422]              __ret_0_ := __tmp___balances_ERC20[this][owner_s312];
[L4460]  RET         call __var_27 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4461]  COND FALSE  !(revert)
[L4467]  CALL        call __var_26 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __var_27, __tmp___lockAmounts_EXEToken[this][account_s1055]);
[L3126]  COND FALSE  !(!(b_s82 <= a_s82))
[L3130]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3131]              __ret_0_ := c_s82;
[L4467]  RET         call __var_26 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __var_27, __tmp___lockAmounts_EXEToken[this][account_s1055]);
[L4468]  COND FALSE  !(revert)
[L4471]              __ret_0_ := ((__tmp___lockTimes_EXEToken[this][account_s1055] != 0 && __tmp___lockAmounts_EXEToken[this][account_s1055] != 0) && __tmp___lockTimes_EXEToken[this][account_s1055] > __tmp__now) && (__var_25 <= __tmp___lockAmounts_EXEToken[this][account_s1055] || __var_26 < amount_s1055);
[L4513]  RET         call __var_28 := _isLocked~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s1083);
[L4514]  COND FALSE  !(revert)
[L4517]  COND TRUE   !!__var_28
[L4518]              revert := true;
[L2060]  RET         call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L2061]              assume revert || gas < 0;
[L6925]  RET         call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L7048]  RET         call CorralChoice_EXEToken(this);

Loop:
[L7048]  CALL        call CorralChoice_EXEToken(this);
[L6824]              havoc msgsender_MSG;
[L6825]              havoc msgvalue_MSG;
[L6826]              havoc choice;
[L6827]              havoc __ret_0_owner;
[L6828]              havoc newOwner_s184;
[L6829]              havoc __ret_0_totalSupply;
[L6830]              havoc owner_s312;
[L6831]              havoc __ret_0_balanceOf;
[L6832]              havoc owner_s328;
[L6833]              havoc spender_s328;
[L6834]              havoc __ret_0_allowance;
[L6835]              havoc recipient_s1083;
[L6836]              havoc amount_s1083;
[L6837]              havoc __ret_0_transfer;
[L6838]              havoc spender_s425;
[L6839]              havoc value_s425;
[L6840]              havoc __ret_0_approve;
[L6841]              havoc sender_s1113;
[L6842]              havoc recipient_s1113;
[L6843]              havoc amount_s1113;
[L6844]              havoc __ret_0_transferFrom;
[L6845]              havoc spender_s562;
[L6846]              havoc addedValue_s562;
[L6847]              havoc __ret_0_increaseAllowance;
[L6848]              havoc spender_s612;
[L6849]              havoc subtractedValue_s612;
[L6850]              havoc __ret_0_decreaseAllowance;
[L6851]              havoc name_s778;
[L6852]              havoc symbol_s778;
[L6853]              havoc decimals_s778;
[L6854]              havoc __ret_0_name;
[L6855]              havoc __ret_0_symbol;
[L6856]              havoc __ret_0_decimals;
[L6857]              havoc value_s817;
[L6858]              havoc from_s830;
[L6859]              havoc value_s830;
[L6860]              havoc __ret_0_stopped;
[L6861]              havoc name_s916;
[L6862]              havoc symbol_s916;
[L6863]              havoc totalSupply_s916;
[L6864]              havoc decimals_s916;
[L6865]              havoc account_s942;
[L6866]              havoc amount_s942;
[L6867]              havoc __ret_0_mint;
[L6868]              havoc account_s988;
[L6869]              havoc releaseTime_s988;
[L6870]              havoc amount_s988;
[L6871]              havoc account_s1006;
[L6872]              havoc lockTime_s1006;
[L6873]              havoc lockAmount_s1006;
[L6874]              havoc tmpNow;
[L6875]              havoc gas;
[L6876]              assume gas > 4000000 && gas <= 8000000;
[L6877]              tmpNow := now;
[L6878]              havoc now;
[L6879]              assume now > tmpNow;
[L6880]              assume msgsender_MSG != null;
[L6881]              assume DType[msgsender_MSG] != SafeMath;
[L6882]              assume DType[msgsender_MSG] != Ownable;
[L6883]              assume DType[msgsender_MSG] != IERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20;
[L6885]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6886]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6887]              assume DType[msgsender_MSG] != Stoppable;
[L6888]              assume DType[msgsender_MSG] != EXEToken;
[L6889]              Alloc[msgsender_MSG] := true;
[L6890]  COND FALSE  !(choice == 21)
[L6896]  COND FALSE  !(choice == 20)
[L6902]  COND FALSE  !(choice == 19)
[L6908]  COND FALSE  !(choice == 18)
[L6914]  COND FALSE  !(choice == 17)
[L6920]  COND TRUE   choice == 16
[L6921]              gas := gas - 21000;
[L6922]  COND TRUE   gas >= 0
[L6923]              assume amount_s1083 >= 0 && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6924]              assume msgvalue_MSG == 0;
[L6925]  CALL        call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s1083) && msgsender_MSG != recipient_s1083) && amount_s1083 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s1083] + amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s1083 >= 0) && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1083] >= 0) && _balances_ERC20[this][recipient_s1083] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_EXEToken0 := true;
[L3]                 call_transfer_EXEToken0 := false;
[L3]                 revert := revert_hold;
[L2034]              havoc __exception;
[L2035]              revert := false;
[L2036]  COND TRUE   __exception
[L2037]              __tmp__Balance := Balance;
[L2038]              __tmp__DType := DType;
[L2039]              __tmp__Alloc := Alloc;
[L2040]              __tmp__balance_ADDR := balance_ADDR;
[L2041]              __tmp__M_Ref_int := M_Ref_int;
[L2042]              __tmp__sum__balances0 := sum__balances0;
[L2043]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2044]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2045]              __tmp__sum__allowed1 := sum__allowed1;
[L2046]              __tmp__sum__lockTimes2 := sum__lockTimes2;
[L2047]              __tmp__sum__lockAmounts3 := sum__lockAmounts3;
[L2048]              __tmp__Length := Length;
[L2049]              __tmp__now := now;
[L2050]              __tmp___owner_Ownable := _owner_Ownable;
[L2051]              __tmp___balances_ERC20 := _balances_ERC20;
[L2052]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L2053]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2054]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L2055]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L2056]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L2057]              __tmp__stopped_Stoppable := stopped_Stoppable;
[L2058]              __tmp___lockTimes_EXEToken := _lockTimes_EXEToken;
[L2059]              __tmp___lockAmounts_EXEToken := _lockAmounts_EXEToken;
[L2060]  CALL        call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L4509]  CALL        call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6060]  COND FALSE  !(!!__tmp__stopped_Stoppable[this])
[L4509]  RET         call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4510]  COND FALSE  !(revert)
[L4513]  CALL        call __var_28 := _isLocked~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s1083);
[L4451]  COND TRUE   __tmp__DType[this] == EXEToken
[L4452]  CALL        call __var_25 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3422]              __ret_0_ := __tmp___balances_ERC20[this][owner_s312];
[L4452]  RET         call __var_25 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4453]  COND FALSE  !(revert)
[L4459]  COND TRUE   __tmp__DType[this] == EXEToken
[L4460]  CALL        call __var_27 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3422]              __ret_0_ := __tmp___balances_ERC20[this][owner_s312];
[L4460]  RET         call __var_27 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4461]  COND FALSE  !(revert)
[L4467]  CALL        call __var_26 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __var_27, __tmp___lockAmounts_EXEToken[this][account_s1055]);
[L3126]  COND FALSE  !(!(b_s82 <= a_s82))
[L3130]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3131]              __ret_0_ := c_s82;
[L4467]  RET         call __var_26 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __var_27, __tmp___lockAmounts_EXEToken[this][account_s1055]);
[L4468]  COND FALSE  !(revert)
[L4471]              __ret_0_ := ((__tmp___lockTimes_EXEToken[this][account_s1055] != 0 && __tmp___lockAmounts_EXEToken[this][account_s1055] != 0) && __tmp___lockTimes_EXEToken[this][account_s1055] > __tmp__now) && (__var_25 <= __tmp___lockAmounts_EXEToken[this][account_s1055] || __var_26 < amount_s1055);
[L4513]  RET         call __var_28 := _isLocked~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s1083);
[L4514]  COND FALSE  !(revert)
[L4517]  COND TRUE   !!__var_28
[L4518]              revert := true;
[L2060]  RET         call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L2061]              assume revert || gas < 0;
[L6925]  RET         call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L7048]  RET         call CorralChoice_EXEToken(this);

[2020-11-25 16:07:10,208 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:07:10,209 INFO  L82        PathProgramCache]: Analyzing trace with hash -956377471, now seen corresponding path program 1 times
[2020-11-25 16:07:10,209 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:07:10,225 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:07:10,336 INFO  L134       CoverageAnalysis]: Checked inductivity of 139 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 139 trivial. 0 not checked.
[2020-11-25 16:07:10,336 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:07:10,336 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 16:07:10,337 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:07:10,337 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 16:07:10,337 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=24, Invalid=132, Unknown=0, NotChecked=0, Total=156
[2020-11-25 16:07:10,337 INFO  L87              Difference]: Start difference. First operand 5860 states and 6630 transitions. cyclomatic complexity: 778 Second operand 13 states.
[2020-11-25 16:07:12,761 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:07:12,761 INFO  L93              Difference]: Finished difference Result 10048 states and 11641 transitions.
[2020-11-25 16:07:12,761 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-25 16:07:12,762 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 10048 states and 11641 transitions.
[2020-11-25 16:07:12,785 INFO  L131   ngComponentsAnalysis]: Automaton has 6 accepting balls. 40
[2020-11-25 16:07:12,813 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 10048 states to 10048 states and 11641 transitions.
[2020-11-25 16:07:12,814 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 2430
[2020-11-25 16:07:12,815 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 2430
[2020-11-25 16:07:12,815 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 10048 states and 11641 transitions.
[2020-11-25 16:07:12,821 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:07:12,821 INFO  L728         BuchiCegarLoop]: Abstraction has 10048 states and 11641 transitions.
[2020-11-25 16:07:12,826 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 10048 states and 11641 transitions.
[2020-11-25 16:07:12,888 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 10048 to 8978.
[2020-11-25 16:07:12,889 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 8978 states.
[2020-11-25 16:07:12,901 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 8978 states to 8978 states and 10447 transitions.
[2020-11-25 16:07:12,901 INFO  L751         BuchiCegarLoop]: Abstraction has 8978 states and 10447 transitions.
[2020-11-25 16:07:12,901 INFO  L631         BuchiCegarLoop]: Abstraction has 8978 states and 10447 transitions.
[2020-11-25 16:07:12,901 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 16:07:12,901 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 8978 states and 10447 transitions.
[2020-11-25 16:07:12,911 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 32
[2020-11-25 16:07:12,911 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:07:12,911 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:07:12,912 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:07:12,912 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_EXEToken0 := false;
[L3]                 call_transfer_EXEToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7038]              assume null == 0;
[L7039]  CALL        call this := FreshRefGenerator__success();
[L3029]              havoc newRef;
[L3030]              assume Alloc[newRef] == false;
[L3031]              Alloc[newRef] := true;
[L3032]              assume newRef != null;
[L7039]  RET         call this := FreshRefGenerator__success();
[L7040]              assume now >= 0;
[L7041]              assume DType[this] == EXEToken;
[L7042]              assume msgvalue_MSG == 0;
[L7043]              gas := gas - 53000;
[L7044]  CALL        call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1770]              havoc __exception;
[L1771]              revert := false;
[L1772]  COND FALSE  !(__exception)
[L1799]  CALL        call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4315]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L4315]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4316]  COND FALSE  !(revert)
[L4319]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, decimals_s916);
[L3927]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L3927]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3928]  COND FALSE  !(revert)
[L3931]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s778, symbol_s778, decimals_s778);
[L3902]              assume msgsender_MSG != null;
[L3903]              Balance[this] := 0;
[L3904]              _name_ERC20Detailed[this] := 427332508;
[L3905]              _symbol_ERC20Detailed[this] := 427332508;
[L3906]              _decimals_ERC20Detailed[this] := 0;
[L3908]              _name_ERC20Detailed[this] := name_s778;
[L3909]              _symbol_ERC20Detailed[this] := symbol_s778;
[L3910]              _decimals_ERC20Detailed[this] := decimals_s778;
[L3931]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s778, symbol_s778, decimals_s778);
[L3932]  COND FALSE  !(revert)
[L4319]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, decimals_s916);
[L4320]  COND FALSE  !(revert)
[L4323]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3398]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L3398]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3399]  COND FALSE  !(revert)
[L3402]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3374]              assume msgsender_MSG != null;
[L3375]              Balance[this] := 0;
[L3376]              _balances_ERC20[this] := zeroRefintArr();
[L3377]              sum__balances0[this] := 0;
[L3378]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3379]              sum__allowed1[this] := 0;
[L3380]              _totalSupply_ERC20[this] := 0;
[L3402]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3403]  COND FALSE  !(revert)
[L4323]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4324]  COND FALSE  !(revert)
[L4327]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4007]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L4007]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4008]  COND FALSE  !(revert)
[L4011]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3398]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L3398]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3399]  COND FALSE  !(revert)
[L3402]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3374]              assume msgsender_MSG != null;
[L3375]              Balance[this] := 0;
[L3376]              _balances_ERC20[this] := zeroRefintArr();
[L3377]              sum__balances0[this] := 0;
[L3378]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3379]              sum__allowed1[this] := 0;
[L3380]              _totalSupply_ERC20[this] := 0;
[L3402]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3403]  COND FALSE  !(revert)
[L4011]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4012]  COND FALSE  !(revert)
[L4015]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3984]              assume msgsender_MSG != null;
[L3985]              Balance[this] := 0;
[L4015]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4016]  COND FALSE  !(revert)
[L4327]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4328]  COND FALSE  !(revert)
[L4331]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3221]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3204]              assume msgsender_MSG != null;
[L3205]              Balance[this] := 0;
[L3206]              _owner_Ownable[this] := null;
[L3208]              _owner_Ownable[this] := msgsender_MSG;
[L3221]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3222]  COND FALSE  !(revert)
[L4331]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4332]  COND FALSE  !(revert)
[L4335]  CALL        call Stoppable_Stoppable__success(this, msgsender_MSG, msgvalue_MSG);
[L4157]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3221]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3204]              assume msgsender_MSG != null;
[L3205]              Balance[this] := 0;
[L3206]              _owner_Ownable[this] := null;
[L3208]              _owner_Ownable[this] := msgsender_MSG;
[L3221]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3222]  COND FALSE  !(revert)
[L4157]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4158]  COND FALSE  !(revert)
[L4161]  CALL        call Stoppable_Stoppable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4137]              assume msgsender_MSG != null;
[L4138]              Balance[this] := 0;
[L4139]              stopped_Stoppable[this] := false;
[L4161]  RET         call Stoppable_Stoppable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4162]  COND FALSE  !(revert)
[L4335]  RET         call Stoppable_Stoppable__success(this, msgsender_MSG, msgvalue_MSG);
[L4336]  COND FALSE  !(revert)
[L4339]  CALL        call EXEToken_EXEToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4251]              assume msgsender_MSG != null;
[L4252]              Balance[this] := 0;
[L4253]              _lockTimes_EXEToken[this] := zeroRefintArr();
[L4254]              sum__lockTimes2[this] := 0;
[L4255]              _lockAmounts_EXEToken[this] := zeroRefintArr();
[L4256]              sum__lockAmounts3[this] := 0;
[L4258]  COND TRUE   DType[this] == EXEToken
[L4259]  CALL        call __var_23 := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3235]              __ret_0_ := _owner_Ownable[this];
[L4259]  RET         call __var_23 := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4260]  COND FALSE  !(revert)
[L4266]              __var_24 := decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4267]  COND TRUE   DType[this] == EXEToken
[L4268]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_23, nonlinearMul(totalSupply_s916, nonlinearPow(10, decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3740]              __var_15 := null;
[L3741]  COND FALSE  !(!(account_s654 != null))
[L3745]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s654);
[L3162]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3163]  COND FALSE  !(!(c_s106 >= a_s106))
[L3167]              __ret_0_ := c_s106;
[L3745]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s654);
[L3746]  COND FALSE  !(revert)
[L3749]              _totalSupply_ERC20[this] := __var_16;
[L3750]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], amount_s654);
[L3162]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3163]  COND FALSE  !(!(c_s106 >= a_s106))
[L3167]              __ret_0_ := c_s106;
[L3750]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], amount_s654);
[L3751]  COND FALSE  !(revert)
[L3754]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s654];
[L3755]              _balances_ERC20[this][account_s654] := __var_17;
[L3756]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s654];
[L3757]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4268]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_23, nonlinearMul(totalSupply_s916, nonlinearPow(10, decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4269]  COND FALSE  !(revert)
[L4339]  RET         call EXEToken_EXEToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4340]  COND FALSE  !(revert)
[L1799]  RET         call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1800]              assume !revert && gas >= 0;
[L7044]  RET         call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L7045]              assume !revert && gas >= 0;
[L7048]  CALL        call CorralChoice_EXEToken(this);
[L6824]              havoc msgsender_MSG;
[L6825]              havoc msgvalue_MSG;
[L6826]              havoc choice;
[L6827]              havoc __ret_0_owner;
[L6828]              havoc newOwner_s184;
[L6829]              havoc __ret_0_totalSupply;
[L6830]              havoc owner_s312;
[L6831]              havoc __ret_0_balanceOf;
[L6832]              havoc owner_s328;
[L6833]              havoc spender_s328;
[L6834]              havoc __ret_0_allowance;
[L6835]              havoc recipient_s1083;
[L6836]              havoc amount_s1083;
[L6837]              havoc __ret_0_transfer;
[L6838]              havoc spender_s425;
[L6839]              havoc value_s425;
[L6840]              havoc __ret_0_approve;
[L6841]              havoc sender_s1113;
[L6842]              havoc recipient_s1113;
[L6843]              havoc amount_s1113;
[L6844]              havoc __ret_0_transferFrom;
[L6845]              havoc spender_s562;
[L6846]              havoc addedValue_s562;
[L6847]              havoc __ret_0_increaseAllowance;
[L6848]              havoc spender_s612;
[L6849]              havoc subtractedValue_s612;
[L6850]              havoc __ret_0_decreaseAllowance;
[L6851]              havoc name_s778;
[L6852]              havoc symbol_s778;
[L6853]              havoc decimals_s778;
[L6854]              havoc __ret_0_name;
[L6855]              havoc __ret_0_symbol;
[L6856]              havoc __ret_0_decimals;
[L6857]              havoc value_s817;
[L6858]              havoc from_s830;
[L6859]              havoc value_s830;
[L6860]              havoc __ret_0_stopped;
[L6861]              havoc name_s916;
[L6862]              havoc symbol_s916;
[L6863]              havoc totalSupply_s916;
[L6864]              havoc decimals_s916;
[L6865]              havoc account_s942;
[L6866]              havoc amount_s942;
[L6867]              havoc __ret_0_mint;
[L6868]              havoc account_s988;
[L6869]              havoc releaseTime_s988;
[L6870]              havoc amount_s988;
[L6871]              havoc account_s1006;
[L6872]              havoc lockTime_s1006;
[L6873]              havoc lockAmount_s1006;
[L6874]              havoc tmpNow;
[L6875]              havoc gas;
[L6876]              assume gas > 4000000 && gas <= 8000000;
[L6877]              tmpNow := now;
[L6878]              havoc now;
[L6879]              assume now > tmpNow;
[L6880]              assume msgsender_MSG != null;
[L6881]              assume DType[msgsender_MSG] != SafeMath;
[L6882]              assume DType[msgsender_MSG] != Ownable;
[L6883]              assume DType[msgsender_MSG] != IERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20;
[L6885]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6886]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6887]              assume DType[msgsender_MSG] != Stoppable;
[L6888]              assume DType[msgsender_MSG] != EXEToken;
[L6889]              Alloc[msgsender_MSG] := true;
[L6890]  COND FALSE  !(choice == 21)
[L6896]  COND FALSE  !(choice == 20)
[L6902]  COND FALSE  !(choice == 19)
[L6908]  COND FALSE  !(choice == 18)
[L6914]  COND FALSE  !(choice == 17)
[L6920]  COND TRUE   choice == 16
[L6921]              gas := gas - 21000;
[L6922]  COND TRUE   gas >= 0
[L6923]              assume amount_s1083 >= 0 && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6924]              assume msgvalue_MSG == 0;
[L6925]  CALL        call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s1083) && msgsender_MSG != recipient_s1083) && amount_s1083 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s1083] + amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s1083 >= 0) && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1083] >= 0) && _balances_ERC20[this][recipient_s1083] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_EXEToken0 := true;
[L3]                 call_transfer_EXEToken0 := false;
[L3]                 revert := revert_hold;
[L2034]              havoc __exception;
[L2035]              revert := false;
[L2036]  COND TRUE   __exception
[L2037]              __tmp__Balance := Balance;
[L2038]              __tmp__DType := DType;
[L2039]              __tmp__Alloc := Alloc;
[L2040]              __tmp__balance_ADDR := balance_ADDR;
[L2041]              __tmp__M_Ref_int := M_Ref_int;
[L2042]              __tmp__sum__balances0 := sum__balances0;
[L2043]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2044]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2045]              __tmp__sum__allowed1 := sum__allowed1;
[L2046]              __tmp__sum__lockTimes2 := sum__lockTimes2;
[L2047]              __tmp__sum__lockAmounts3 := sum__lockAmounts3;
[L2048]              __tmp__Length := Length;
[L2049]              __tmp__now := now;
[L2050]              __tmp___owner_Ownable := _owner_Ownable;
[L2051]              __tmp___balances_ERC20 := _balances_ERC20;
[L2052]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L2053]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2054]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L2055]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L2056]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L2057]              __tmp__stopped_Stoppable := stopped_Stoppable;
[L2058]              __tmp___lockTimes_EXEToken := _lockTimes_EXEToken;
[L2059]              __tmp___lockAmounts_EXEToken := _lockAmounts_EXEToken;
[L2060]  CALL        call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L4509]  CALL        call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6060]  COND FALSE  !(!!__tmp__stopped_Stoppable[this])
[L4509]  RET         call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4510]  COND FALSE  !(revert)
[L4513]  CALL        call __var_28 := _isLocked~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s1083);
[L4451]  COND TRUE   __tmp__DType[this] == EXEToken
[L4452]  CALL        call __var_25 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3422]              __ret_0_ := __tmp___balances_ERC20[this][owner_s312];
[L4452]  RET         call __var_25 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4453]  COND FALSE  !(revert)
[L4459]  COND TRUE   __tmp__DType[this] == EXEToken
[L4460]  CALL        call __var_27 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3422]              __ret_0_ := __tmp___balances_ERC20[this][owner_s312];
[L4460]  RET         call __var_27 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4461]  COND FALSE  !(revert)
[L4467]  CALL        call __var_26 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __var_27, __tmp___lockAmounts_EXEToken[this][account_s1055]);
[L3126]  COND FALSE  !(!(b_s82 <= a_s82))
[L3130]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3131]              __ret_0_ := c_s82;
[L4467]  RET         call __var_26 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __var_27, __tmp___lockAmounts_EXEToken[this][account_s1055]);
[L4468]  COND FALSE  !(revert)
[L4471]              __ret_0_ := ((__tmp___lockTimes_EXEToken[this][account_s1055] != 0 && __tmp___lockAmounts_EXEToken[this][account_s1055] != 0) && __tmp___lockTimes_EXEToken[this][account_s1055] > __tmp__now) && (__var_25 <= __tmp___lockAmounts_EXEToken[this][account_s1055] || __var_26 < amount_s1055);
[L4513]  RET         call __var_28 := _isLocked~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s1083);
[L4514]  COND FALSE  !(revert)
[L4517]  COND FALSE  !(!!__var_28)
[L4521]  COND TRUE   __tmp__DType[this] == EXEToken
[L4522]  CALL        call __var_29 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L3449]  COND TRUE   !(value_s389 <= __tmp___balances_ERC20[this][msgsender_MSG])
[L3450]              revert := true;
[L4522]  RET         call __var_29 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L4523]  COND TRUE   revert
[L2060]  RET         call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L2061]              assume revert || gas < 0;
[L6925]  RET         call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L7048]  RET         call CorralChoice_EXEToken(this);

Loop:
[L7048]  CALL        call CorralChoice_EXEToken(this);
[L6824]              havoc msgsender_MSG;
[L6825]              havoc msgvalue_MSG;
[L6826]              havoc choice;
[L6827]              havoc __ret_0_owner;
[L6828]              havoc newOwner_s184;
[L6829]              havoc __ret_0_totalSupply;
[L6830]              havoc owner_s312;
[L6831]              havoc __ret_0_balanceOf;
[L6832]              havoc owner_s328;
[L6833]              havoc spender_s328;
[L6834]              havoc __ret_0_allowance;
[L6835]              havoc recipient_s1083;
[L6836]              havoc amount_s1083;
[L6837]              havoc __ret_0_transfer;
[L6838]              havoc spender_s425;
[L6839]              havoc value_s425;
[L6840]              havoc __ret_0_approve;
[L6841]              havoc sender_s1113;
[L6842]              havoc recipient_s1113;
[L6843]              havoc amount_s1113;
[L6844]              havoc __ret_0_transferFrom;
[L6845]              havoc spender_s562;
[L6846]              havoc addedValue_s562;
[L6847]              havoc __ret_0_increaseAllowance;
[L6848]              havoc spender_s612;
[L6849]              havoc subtractedValue_s612;
[L6850]              havoc __ret_0_decreaseAllowance;
[L6851]              havoc name_s778;
[L6852]              havoc symbol_s778;
[L6853]              havoc decimals_s778;
[L6854]              havoc __ret_0_name;
[L6855]              havoc __ret_0_symbol;
[L6856]              havoc __ret_0_decimals;
[L6857]              havoc value_s817;
[L6858]              havoc from_s830;
[L6859]              havoc value_s830;
[L6860]              havoc __ret_0_stopped;
[L6861]              havoc name_s916;
[L6862]              havoc symbol_s916;
[L6863]              havoc totalSupply_s916;
[L6864]              havoc decimals_s916;
[L6865]              havoc account_s942;
[L6866]              havoc amount_s942;
[L6867]              havoc __ret_0_mint;
[L6868]              havoc account_s988;
[L6869]              havoc releaseTime_s988;
[L6870]              havoc amount_s988;
[L6871]              havoc account_s1006;
[L6872]              havoc lockTime_s1006;
[L6873]              havoc lockAmount_s1006;
[L6874]              havoc tmpNow;
[L6875]              havoc gas;
[L6876]              assume gas > 4000000 && gas <= 8000000;
[L6877]              tmpNow := now;
[L6878]              havoc now;
[L6879]              assume now > tmpNow;
[L6880]              assume msgsender_MSG != null;
[L6881]              assume DType[msgsender_MSG] != SafeMath;
[L6882]              assume DType[msgsender_MSG] != Ownable;
[L6883]              assume DType[msgsender_MSG] != IERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20;
[L6885]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6886]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6887]              assume DType[msgsender_MSG] != Stoppable;
[L6888]              assume DType[msgsender_MSG] != EXEToken;
[L6889]              Alloc[msgsender_MSG] := true;
[L6890]  COND FALSE  !(choice == 21)
[L6896]  COND FALSE  !(choice == 20)
[L6902]  COND FALSE  !(choice == 19)
[L6908]  COND FALSE  !(choice == 18)
[L6914]  COND FALSE  !(choice == 17)
[L6920]  COND TRUE   choice == 16
[L6921]              gas := gas - 21000;
[L6922]  COND TRUE   gas >= 0
[L6923]              assume amount_s1083 >= 0 && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6924]              assume msgvalue_MSG == 0;
[L6925]  CALL        call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s1083) && msgsender_MSG != recipient_s1083) && amount_s1083 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s1083] + amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s1083 >= 0) && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1083] >= 0) && _balances_ERC20[this][recipient_s1083] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_EXEToken0 := true;
[L3]                 call_transfer_EXEToken0 := false;
[L3]                 revert := revert_hold;
[L2034]              havoc __exception;
[L2035]              revert := false;
[L2036]  COND TRUE   __exception
[L2037]              __tmp__Balance := Balance;
[L2038]              __tmp__DType := DType;
[L2039]              __tmp__Alloc := Alloc;
[L2040]              __tmp__balance_ADDR := balance_ADDR;
[L2041]              __tmp__M_Ref_int := M_Ref_int;
[L2042]              __tmp__sum__balances0 := sum__balances0;
[L2043]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2044]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2045]              __tmp__sum__allowed1 := sum__allowed1;
[L2046]              __tmp__sum__lockTimes2 := sum__lockTimes2;
[L2047]              __tmp__sum__lockAmounts3 := sum__lockAmounts3;
[L2048]              __tmp__Length := Length;
[L2049]              __tmp__now := now;
[L2050]              __tmp___owner_Ownable := _owner_Ownable;
[L2051]              __tmp___balances_ERC20 := _balances_ERC20;
[L2052]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L2053]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2054]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L2055]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L2056]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L2057]              __tmp__stopped_Stoppable := stopped_Stoppable;
[L2058]              __tmp___lockTimes_EXEToken := _lockTimes_EXEToken;
[L2059]              __tmp___lockAmounts_EXEToken := _lockAmounts_EXEToken;
[L2060]  CALL        call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L4509]  CALL        call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6060]  COND FALSE  !(!!__tmp__stopped_Stoppable[this])
[L4509]  RET         call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4510]  COND FALSE  !(revert)
[L4513]  CALL        call __var_28 := _isLocked~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s1083);
[L4451]  COND TRUE   __tmp__DType[this] == EXEToken
[L4452]  CALL        call __var_25 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3422]              __ret_0_ := __tmp___balances_ERC20[this][owner_s312];
[L4452]  RET         call __var_25 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4453]  COND FALSE  !(revert)
[L4459]  COND TRUE   __tmp__DType[this] == EXEToken
[L4460]  CALL        call __var_27 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3422]              __ret_0_ := __tmp___balances_ERC20[this][owner_s312];
[L4460]  RET         call __var_27 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4461]  COND FALSE  !(revert)
[L4467]  CALL        call __var_26 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __var_27, __tmp___lockAmounts_EXEToken[this][account_s1055]);
[L3126]  COND FALSE  !(!(b_s82 <= a_s82))
[L3130]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3131]              __ret_0_ := c_s82;
[L4467]  RET         call __var_26 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __var_27, __tmp___lockAmounts_EXEToken[this][account_s1055]);
[L4468]  COND FALSE  !(revert)
[L4471]              __ret_0_ := ((__tmp___lockTimes_EXEToken[this][account_s1055] != 0 && __tmp___lockAmounts_EXEToken[this][account_s1055] != 0) && __tmp___lockTimes_EXEToken[this][account_s1055] > __tmp__now) && (__var_25 <= __tmp___lockAmounts_EXEToken[this][account_s1055] || __var_26 < amount_s1055);
[L4513]  RET         call __var_28 := _isLocked~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s1083);
[L4514]  COND FALSE  !(revert)
[L4517]  COND FALSE  !(!!__var_28)
[L4521]  COND TRUE   __tmp__DType[this] == EXEToken
[L4522]  CALL        call __var_29 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L3449]  COND TRUE   !(value_s389 <= __tmp___balances_ERC20[this][msgsender_MSG])
[L3450]              revert := true;
[L4522]  RET         call __var_29 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L4523]  COND TRUE   revert
[L2060]  RET         call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L2061]              assume revert || gas < 0;
[L6925]  RET         call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L7048]  RET         call CorralChoice_EXEToken(this);

[2020-11-25 16:07:12,916 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:07:12,916 INFO  L82        PathProgramCache]: Analyzing trace with hash -906734150, now seen corresponding path program 1 times
[2020-11-25 16:07:12,917 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:07:12,929 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:07:13,048 INFO  L134       CoverageAnalysis]: Checked inductivity of 139 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 137 trivial. 0 not checked.
[2020-11-25 16:07:13,048 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:07:13,049 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-25 16:07:13,049 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:07:13,049 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-25 16:07:13,049 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=15, Invalid=57, Unknown=0, NotChecked=0, Total=72
[2020-11-25 16:07:13,049 INFO  L87              Difference]: Start difference. First operand 8978 states and 10447 transitions. cyclomatic complexity: 1479 Second operand 9 states.
[2020-11-25 16:07:14,102 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:07:14,102 INFO  L93              Difference]: Finished difference Result 9066 states and 10618 transitions.
[2020-11-25 16:07:14,102 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-25 16:07:14,102 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 9066 states and 10618 transitions.
[2020-11-25 16:07:14,124 INFO  L131   ngComponentsAnalysis]: Automaton has 8 accepting balls. 38
[2020-11-25 16:07:14,152 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 9066 states to 9066 states and 10618 transitions.
[2020-11-25 16:07:14,152 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 2228
[2020-11-25 16:07:14,153 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 2228
[2020-11-25 16:07:14,153 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 9066 states and 10618 transitions.
[2020-11-25 16:07:14,159 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:07:14,160 INFO  L728         BuchiCegarLoop]: Abstraction has 9066 states and 10618 transitions.
[2020-11-25 16:07:14,164 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 9066 states and 10618 transitions.
[2020-11-25 16:07:14,219 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 9066 to 8990.
[2020-11-25 16:07:14,219 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 8990 states.
[2020-11-25 16:07:14,230 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 8990 states to 8990 states and 10459 transitions.
[2020-11-25 16:07:14,230 INFO  L751         BuchiCegarLoop]: Abstraction has 8990 states and 10459 transitions.
[2020-11-25 16:07:14,230 INFO  L631         BuchiCegarLoop]: Abstraction has 8990 states and 10459 transitions.
[2020-11-25 16:07:14,230 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 16:07:14,230 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 8990 states and 10459 transitions.
[2020-11-25 16:07:14,240 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 32
[2020-11-25 16:07:14,240 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:07:14,240 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:07:14,241 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:07:14,242 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_EXEToken0 := false;
[L3]                 call_transfer_EXEToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7038]              assume null == 0;
[L7039]  CALL        call this := FreshRefGenerator__success();
[L3029]              havoc newRef;
[L3030]              assume Alloc[newRef] == false;
[L3031]              Alloc[newRef] := true;
[L3032]              assume newRef != null;
[L7039]  RET         call this := FreshRefGenerator__success();
[L7040]              assume now >= 0;
[L7041]              assume DType[this] == EXEToken;
[L7042]              assume msgvalue_MSG == 0;
[L7043]              gas := gas - 53000;
[L7044]  CALL        call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1770]              havoc __exception;
[L1771]              revert := false;
[L1772]  COND FALSE  !(__exception)
[L1799]  CALL        call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4315]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L4315]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4316]  COND FALSE  !(revert)
[L4319]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, decimals_s916);
[L3927]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L3927]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3928]  COND FALSE  !(revert)
[L3931]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s778, symbol_s778, decimals_s778);
[L3902]              assume msgsender_MSG != null;
[L3903]              Balance[this] := 0;
[L3904]              _name_ERC20Detailed[this] := 427332508;
[L3905]              _symbol_ERC20Detailed[this] := 427332508;
[L3906]              _decimals_ERC20Detailed[this] := 0;
[L3908]              _name_ERC20Detailed[this] := name_s778;
[L3909]              _symbol_ERC20Detailed[this] := symbol_s778;
[L3910]              _decimals_ERC20Detailed[this] := decimals_s778;
[L3931]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s778, symbol_s778, decimals_s778);
[L3932]  COND FALSE  !(revert)
[L4319]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, decimals_s916);
[L4320]  COND FALSE  !(revert)
[L4323]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3398]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L3398]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3399]  COND FALSE  !(revert)
[L3402]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3374]              assume msgsender_MSG != null;
[L3375]              Balance[this] := 0;
[L3376]              _balances_ERC20[this] := zeroRefintArr();
[L3377]              sum__balances0[this] := 0;
[L3378]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3379]              sum__allowed1[this] := 0;
[L3380]              _totalSupply_ERC20[this] := 0;
[L3402]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3403]  COND FALSE  !(revert)
[L4323]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4324]  COND FALSE  !(revert)
[L4327]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4007]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L4007]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4008]  COND FALSE  !(revert)
[L4011]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3398]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3337]              assume msgsender_MSG != null;
[L3338]              Balance[this] := 0;
[L3352]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3353]  COND FALSE  !(revert)
[L3398]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3399]  COND FALSE  !(revert)
[L3402]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3374]              assume msgsender_MSG != null;
[L3375]              Balance[this] := 0;
[L3376]              _balances_ERC20[this] := zeroRefintArr();
[L3377]              sum__balances0[this] := 0;
[L3378]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3379]              sum__allowed1[this] := 0;
[L3380]              _totalSupply_ERC20[this] := 0;
[L3402]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3403]  COND FALSE  !(revert)
[L4011]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4012]  COND FALSE  !(revert)
[L4015]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3984]              assume msgsender_MSG != null;
[L3985]              Balance[this] := 0;
[L4015]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4016]  COND FALSE  !(revert)
[L4327]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4328]  COND FALSE  !(revert)
[L4331]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3221]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3204]              assume msgsender_MSG != null;
[L3205]              Balance[this] := 0;
[L3206]              _owner_Ownable[this] := null;
[L3208]              _owner_Ownable[this] := msgsender_MSG;
[L3221]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3222]  COND FALSE  !(revert)
[L4331]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4332]  COND FALSE  !(revert)
[L4335]  CALL        call Stoppable_Stoppable__success(this, msgsender_MSG, msgvalue_MSG);
[L4157]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3221]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3204]              assume msgsender_MSG != null;
[L3205]              Balance[this] := 0;
[L3206]              _owner_Ownable[this] := null;
[L3208]              _owner_Ownable[this] := msgsender_MSG;
[L3221]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3222]  COND FALSE  !(revert)
[L4157]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4158]  COND FALSE  !(revert)
[L4161]  CALL        call Stoppable_Stoppable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4137]              assume msgsender_MSG != null;
[L4138]              Balance[this] := 0;
[L4139]              stopped_Stoppable[this] := false;
[L4161]  RET         call Stoppable_Stoppable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4162]  COND FALSE  !(revert)
[L4335]  RET         call Stoppable_Stoppable__success(this, msgsender_MSG, msgvalue_MSG);
[L4336]  COND FALSE  !(revert)
[L4339]  CALL        call EXEToken_EXEToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4251]              assume msgsender_MSG != null;
[L4252]              Balance[this] := 0;
[L4253]              _lockTimes_EXEToken[this] := zeroRefintArr();
[L4254]              sum__lockTimes2[this] := 0;
[L4255]              _lockAmounts_EXEToken[this] := zeroRefintArr();
[L4256]              sum__lockAmounts3[this] := 0;
[L4258]  COND TRUE   DType[this] == EXEToken
[L4259]  CALL        call __var_23 := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3235]              __ret_0_ := _owner_Ownable[this];
[L4259]  RET         call __var_23 := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4260]  COND FALSE  !(revert)
[L4266]              __var_24 := decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4267]  COND TRUE   DType[this] == EXEToken
[L4268]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_23, nonlinearMul(totalSupply_s916, nonlinearPow(10, decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3740]              __var_15 := null;
[L3741]  COND FALSE  !(!(account_s654 != null))
[L3745]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s654);
[L3162]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3163]  COND FALSE  !(!(c_s106 >= a_s106))
[L3167]              __ret_0_ := c_s106;
[L3745]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s654);
[L3746]  COND FALSE  !(revert)
[L3749]              _totalSupply_ERC20[this] := __var_16;
[L3750]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], amount_s654);
[L3162]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3163]  COND FALSE  !(!(c_s106 >= a_s106))
[L3167]              __ret_0_ := c_s106;
[L3750]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], amount_s654);
[L3751]  COND FALSE  !(revert)
[L3754]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s654];
[L3755]              _balances_ERC20[this][account_s654] := __var_17;
[L3756]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s654];
[L3757]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4268]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_23, nonlinearMul(totalSupply_s916, nonlinearPow(10, decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4269]  COND FALSE  !(revert)
[L4339]  RET         call EXEToken_EXEToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4340]  COND FALSE  !(revert)
[L1799]  RET         call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1800]              assume !revert && gas >= 0;
[L7044]  RET         call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L7045]              assume !revert && gas >= 0;
[L7048]  CALL        call CorralChoice_EXEToken(this);
[L6824]              havoc msgsender_MSG;
[L6825]              havoc msgvalue_MSG;
[L6826]              havoc choice;
[L6827]              havoc __ret_0_owner;
[L6828]              havoc newOwner_s184;
[L6829]              havoc __ret_0_totalSupply;
[L6830]              havoc owner_s312;
[L6831]              havoc __ret_0_balanceOf;
[L6832]              havoc owner_s328;
[L6833]              havoc spender_s328;
[L6834]              havoc __ret_0_allowance;
[L6835]              havoc recipient_s1083;
[L6836]              havoc amount_s1083;
[L6837]              havoc __ret_0_transfer;
[L6838]              havoc spender_s425;
[L6839]              havoc value_s425;
[L6840]              havoc __ret_0_approve;
[L6841]              havoc sender_s1113;
[L6842]              havoc recipient_s1113;
[L6843]              havoc amount_s1113;
[L6844]              havoc __ret_0_transferFrom;
[L6845]              havoc spender_s562;
[L6846]              havoc addedValue_s562;
[L6847]              havoc __ret_0_increaseAllowance;
[L6848]              havoc spender_s612;
[L6849]              havoc subtractedValue_s612;
[L6850]              havoc __ret_0_decreaseAllowance;
[L6851]              havoc name_s778;
[L6852]              havoc symbol_s778;
[L6853]              havoc decimals_s778;
[L6854]              havoc __ret_0_name;
[L6855]              havoc __ret_0_symbol;
[L6856]              havoc __ret_0_decimals;
[L6857]              havoc value_s817;
[L6858]              havoc from_s830;
[L6859]              havoc value_s830;
[L6860]              havoc __ret_0_stopped;
[L6861]              havoc name_s916;
[L6862]              havoc symbol_s916;
[L6863]              havoc totalSupply_s916;
[L6864]              havoc decimals_s916;
[L6865]              havoc account_s942;
[L6866]              havoc amount_s942;
[L6867]              havoc __ret_0_mint;
[L6868]              havoc account_s988;
[L6869]              havoc releaseTime_s988;
[L6870]              havoc amount_s988;
[L6871]              havoc account_s1006;
[L6872]              havoc lockTime_s1006;
[L6873]              havoc lockAmount_s1006;
[L6874]              havoc tmpNow;
[L6875]              havoc gas;
[L6876]              assume gas > 4000000 && gas <= 8000000;
[L6877]              tmpNow := now;
[L6878]              havoc now;
[L6879]              assume now > tmpNow;
[L6880]              assume msgsender_MSG != null;
[L6881]              assume DType[msgsender_MSG] != SafeMath;
[L6882]              assume DType[msgsender_MSG] != Ownable;
[L6883]              assume DType[msgsender_MSG] != IERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20;
[L6885]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6886]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6887]              assume DType[msgsender_MSG] != Stoppable;
[L6888]              assume DType[msgsender_MSG] != EXEToken;
[L6889]              Alloc[msgsender_MSG] := true;
[L6890]  COND FALSE  !(choice == 21)
[L6896]  COND FALSE  !(choice == 20)
[L6902]  COND FALSE  !(choice == 19)
[L6908]  COND FALSE  !(choice == 18)
[L6914]  COND FALSE  !(choice == 17)
[L6920]  COND TRUE   choice == 16
[L6921]              gas := gas - 21000;
[L6922]  COND TRUE   gas >= 0
[L6923]              assume amount_s1083 >= 0 && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6924]              assume msgvalue_MSG == 0;
[L6925]  CALL        call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s1083) && msgsender_MSG != recipient_s1083) && amount_s1083 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s1083] + amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s1083 >= 0) && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1083] >= 0) && _balances_ERC20[this][recipient_s1083] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_EXEToken0 := true;
[L3]                 call_transfer_EXEToken0 := false;
[L3]                 revert := revert_hold;
[L2034]              havoc __exception;
[L2035]              revert := false;
[L2036]  COND TRUE   __exception
[L2037]              __tmp__Balance := Balance;
[L2038]              __tmp__DType := DType;
[L2039]              __tmp__Alloc := Alloc;
[L2040]              __tmp__balance_ADDR := balance_ADDR;
[L2041]              __tmp__M_Ref_int := M_Ref_int;
[L2042]              __tmp__sum__balances0 := sum__balances0;
[L2043]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2044]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2045]              __tmp__sum__allowed1 := sum__allowed1;
[L2046]              __tmp__sum__lockTimes2 := sum__lockTimes2;
[L2047]              __tmp__sum__lockAmounts3 := sum__lockAmounts3;
[L2048]              __tmp__Length := Length;
[L2049]              __tmp__now := now;
[L2050]              __tmp___owner_Ownable := _owner_Ownable;
[L2051]              __tmp___balances_ERC20 := _balances_ERC20;
[L2052]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L2053]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2054]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L2055]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L2056]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L2057]              __tmp__stopped_Stoppable := stopped_Stoppable;
[L2058]              __tmp___lockTimes_EXEToken := _lockTimes_EXEToken;
[L2059]              __tmp___lockAmounts_EXEToken := _lockAmounts_EXEToken;
[L2060]  CALL        call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L4509]  CALL        call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6060]  COND FALSE  !(!!__tmp__stopped_Stoppable[this])
[L4509]  RET         call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4510]  COND FALSE  !(revert)
[L4513]  CALL        call __var_28 := _isLocked~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s1083);
[L4451]  COND TRUE   __tmp__DType[this] == EXEToken
[L4452]  CALL        call __var_25 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3422]              __ret_0_ := __tmp___balances_ERC20[this][owner_s312];
[L4452]  RET         call __var_25 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4453]  COND FALSE  !(revert)
[L4459]  COND TRUE   __tmp__DType[this] == EXEToken
[L4460]  CALL        call __var_27 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3422]              __ret_0_ := __tmp___balances_ERC20[this][owner_s312];
[L4460]  RET         call __var_27 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4461]  COND FALSE  !(revert)
[L4467]  CALL        call __var_26 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __var_27, __tmp___lockAmounts_EXEToken[this][account_s1055]);
[L3126]  COND FALSE  !(!(b_s82 <= a_s82))
[L3130]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3131]              __ret_0_ := c_s82;
[L4467]  RET         call __var_26 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __var_27, __tmp___lockAmounts_EXEToken[this][account_s1055]);
[L4468]  COND FALSE  !(revert)
[L4471]              __ret_0_ := ((__tmp___lockTimes_EXEToken[this][account_s1055] != 0 && __tmp___lockAmounts_EXEToken[this][account_s1055] != 0) && __tmp___lockTimes_EXEToken[this][account_s1055] > __tmp__now) && (__var_25 <= __tmp___lockAmounts_EXEToken[this][account_s1055] || __var_26 < amount_s1055);
[L4513]  RET         call __var_28 := _isLocked~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s1083);
[L4514]  COND FALSE  !(revert)
[L4517]  COND FALSE  !(!!__var_28)
[L4521]  COND TRUE   __tmp__DType[this] == EXEToken
[L4522]  CALL        call __var_29 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L3449]  COND FALSE  !(!(value_s389 <= __tmp___balances_ERC20[this][msgsender_MSG]))
[L3453]              __var_3 := null;
[L3454]  COND TRUE   !(to_s389 != null)
[L3455]              revert := true;
[L4522]  RET         call __var_29 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L4523]  COND TRUE   revert
[L2060]  RET         call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L2061]              assume revert || gas < 0;
[L6925]  RET         call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L7048]  RET         call CorralChoice_EXEToken(this);

Loop:
[L7048]  CALL        call CorralChoice_EXEToken(this);
[L6824]              havoc msgsender_MSG;
[L6825]              havoc msgvalue_MSG;
[L6826]              havoc choice;
[L6827]              havoc __ret_0_owner;
[L6828]              havoc newOwner_s184;
[L6829]              havoc __ret_0_totalSupply;
[L6830]              havoc owner_s312;
[L6831]              havoc __ret_0_balanceOf;
[L6832]              havoc owner_s328;
[L6833]              havoc spender_s328;
[L6834]              havoc __ret_0_allowance;
[L6835]              havoc recipient_s1083;
[L6836]              havoc amount_s1083;
[L6837]              havoc __ret_0_transfer;
[L6838]              havoc spender_s425;
[L6839]              havoc value_s425;
[L6840]              havoc __ret_0_approve;
[L6841]              havoc sender_s1113;
[L6842]              havoc recipient_s1113;
[L6843]              havoc amount_s1113;
[L6844]              havoc __ret_0_transferFrom;
[L6845]              havoc spender_s562;
[L6846]              havoc addedValue_s562;
[L6847]              havoc __ret_0_increaseAllowance;
[L6848]              havoc spender_s612;
[L6849]              havoc subtractedValue_s612;
[L6850]              havoc __ret_0_decreaseAllowance;
[L6851]              havoc name_s778;
[L6852]              havoc symbol_s778;
[L6853]              havoc decimals_s778;
[L6854]              havoc __ret_0_name;
[L6855]              havoc __ret_0_symbol;
[L6856]              havoc __ret_0_decimals;
[L6857]              havoc value_s817;
[L6858]              havoc from_s830;
[L6859]              havoc value_s830;
[L6860]              havoc __ret_0_stopped;
[L6861]              havoc name_s916;
[L6862]              havoc symbol_s916;
[L6863]              havoc totalSupply_s916;
[L6864]              havoc decimals_s916;
[L6865]              havoc account_s942;
[L6866]              havoc amount_s942;
[L6867]              havoc __ret_0_mint;
[L6868]              havoc account_s988;
[L6869]              havoc releaseTime_s988;
[L6870]              havoc amount_s988;
[L6871]              havoc account_s1006;
[L6872]              havoc lockTime_s1006;
[L6873]              havoc lockAmount_s1006;
[L6874]              havoc tmpNow;
[L6875]              havoc gas;
[L6876]              assume gas > 4000000 && gas <= 8000000;
[L6877]              tmpNow := now;
[L6878]              havoc now;
[L6879]              assume now > tmpNow;
[L6880]              assume msgsender_MSG != null;
[L6881]              assume DType[msgsender_MSG] != SafeMath;
[L6882]              assume DType[msgsender_MSG] != Ownable;
[L6883]              assume DType[msgsender_MSG] != IERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20;
[L6885]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6886]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6887]              assume DType[msgsender_MSG] != Stoppable;
[L6888]              assume DType[msgsender_MSG] != EXEToken;
[L6889]              Alloc[msgsender_MSG] := true;
[L6890]  COND FALSE  !(choice == 21)
[L6896]  COND FALSE  !(choice == 20)
[L6902]  COND FALSE  !(choice == 19)
[L6908]  COND FALSE  !(choice == 18)
[L6914]  COND FALSE  !(choice == 17)
[L6920]  COND TRUE   choice == 16
[L6921]              gas := gas - 21000;
[L6922]  COND TRUE   gas >= 0
[L6923]              assume amount_s1083 >= 0 && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6924]              assume msgvalue_MSG == 0;
[L6925]  CALL        call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s1083) && msgsender_MSG != recipient_s1083) && amount_s1083 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s1083] + amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s1083 >= 0) && amount_s1083 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1083] >= 0) && _balances_ERC20[this][recipient_s1083] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_EXEToken0 := true;
[L3]                 call_transfer_EXEToken0 := false;
[L3]                 revert := revert_hold;
[L2034]              havoc __exception;
[L2035]              revert := false;
[L2036]  COND TRUE   __exception
[L2037]              __tmp__Balance := Balance;
[L2038]              __tmp__DType := DType;
[L2039]              __tmp__Alloc := Alloc;
[L2040]              __tmp__balance_ADDR := balance_ADDR;
[L2041]              __tmp__M_Ref_int := M_Ref_int;
[L2042]              __tmp__sum__balances0 := sum__balances0;
[L2043]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2044]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2045]              __tmp__sum__allowed1 := sum__allowed1;
[L2046]              __tmp__sum__lockTimes2 := sum__lockTimes2;
[L2047]              __tmp__sum__lockAmounts3 := sum__lockAmounts3;
[L2048]              __tmp__Length := Length;
[L2049]              __tmp__now := now;
[L2050]              __tmp___owner_Ownable := _owner_Ownable;
[L2051]              __tmp___balances_ERC20 := _balances_ERC20;
[L2052]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L2053]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2054]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L2055]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L2056]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L2057]              __tmp__stopped_Stoppable := stopped_Stoppable;
[L2058]              __tmp___lockTimes_EXEToken := _lockTimes_EXEToken;
[L2059]              __tmp___lockAmounts_EXEToken := _lockAmounts_EXEToken;
[L2060]  CALL        call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L4509]  CALL        call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6060]  COND FALSE  !(!!__tmp__stopped_Stoppable[this])
[L4509]  RET         call enabled_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4510]  COND FALSE  !(revert)
[L4513]  CALL        call __var_28 := _isLocked~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s1083);
[L4451]  COND TRUE   __tmp__DType[this] == EXEToken
[L4452]  CALL        call __var_25 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3422]              __ret_0_ := __tmp___balances_ERC20[this][owner_s312];
[L4452]  RET         call __var_25 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4453]  COND FALSE  !(revert)
[L4459]  COND TRUE   __tmp__DType[this] == EXEToken
[L4460]  CALL        call __var_27 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3422]              __ret_0_ := __tmp___balances_ERC20[this][owner_s312];
[L4460]  RET         call __var_27 := balanceOf~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4461]  COND FALSE  !(revert)
[L4467]  CALL        call __var_26 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __var_27, __tmp___lockAmounts_EXEToken[this][account_s1055]);
[L3126]  COND FALSE  !(!(b_s82 <= a_s82))
[L3130]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3131]              __ret_0_ := c_s82;
[L4467]  RET         call __var_26 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __var_27, __tmp___lockAmounts_EXEToken[this][account_s1055]);
[L4468]  COND FALSE  !(revert)
[L4471]              __ret_0_ := ((__tmp___lockTimes_EXEToken[this][account_s1055] != 0 && __tmp___lockAmounts_EXEToken[this][account_s1055] != 0) && __tmp___lockTimes_EXEToken[this][account_s1055] > __tmp__now) && (__var_25 <= __tmp___lockAmounts_EXEToken[this][account_s1055] || __var_26 < amount_s1055);
[L4513]  RET         call __var_28 := _isLocked~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s1083);
[L4514]  COND FALSE  !(revert)
[L4517]  COND FALSE  !(!!__var_28)
[L4521]  COND TRUE   __tmp__DType[this] == EXEToken
[L4522]  CALL        call __var_29 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L3449]  COND FALSE  !(!(value_s389 <= __tmp___balances_ERC20[this][msgsender_MSG]))
[L3453]              __var_3 := null;
[L3454]  COND TRUE   !(to_s389 != null)
[L3455]              revert := true;
[L4522]  RET         call __var_29 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L4523]  COND TRUE   revert
[L2060]  RET         call __ret_0_ := transfer~address~uint256_EXEToken__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L2061]              assume revert || gas < 0;
[L6925]  RET         call __ret_0_transfer := transfer~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, recipient_s1083, amount_s1083);
[L7048]  RET         call CorralChoice_EXEToken(this);

[2020-11-25 16:07:14,245 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:07:14,246 INFO  L82        PathProgramCache]: Analyzing trace with hash -1728709629, now seen corresponding path program 1 times
[2020-11-25 16:07:14,246 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:07:14,274 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:07:14,293 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:07:14,374 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:07:14,374 INFO  L82        PathProgramCache]: Analyzing trace with hash 1126574213, now seen corresponding path program 1 times
[2020-11-25 16:07:14,375 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:07:14,381 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:07:14,387 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:07:14,400 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:07:14,400 INFO  L82        PathProgramCache]: Analyzing trace with hash -2067525565, now seen corresponding path program 1 times
[2020-11-25 16:07:14,401 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:07:14,426 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:07:14,455 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:07:14,670 WARN  L188               SmtUtils]: Spent 128.00 ms on a formula simplification. DAG size of input: 96 DAG size of output: 95
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
[2020-11-25 16:07:14,886 WARN  L188               SmtUtils]: Spent 190.00 ms on a formula simplification. DAG size of input: 55 DAG size of output: 55
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 397 to 787
[2020-11-25 16:07:15,104 WARN  L188               SmtUtils]: Spent 142.00 ms on a formula simplification. DAG size of input: 73 DAG size of output: 70
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 163 to 317
[2020-11-25 16:07:15,320 WARN  L188               SmtUtils]: Spent 203.00 ms on a formula simplification. DAG size of input: 124 DAG size of output: 117
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #6: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #7: 1571 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1571 to 3137
[2020-11-25 16:07:15,507 WARN  L188               SmtUtils]: Spent 141.00 ms on a formula simplification. DAG size of input: 155 DAG size of output: 56
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
[2020-11-25 16:07:15,696 WARN  L188               SmtUtils]: Spent 155.00 ms on a formula simplification. DAG size of input: 86 DAG size of output: 80
[2020-11-25 16:07:16,024 WARN  L188               SmtUtils]: Spent 325.00 ms on a formula simplification. DAG size of input: 184 DAG size of output: 176
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2017 to 4027
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7027 to 14051
Garbage collection #9: 14051 nodes / 0 free / 0.003s / 0.004s total
Resizing node table from 14051 to 28099
[2020-11-25 16:07:17,014 WARN  L188               SmtUtils]: Spent 894.00 ms on a formula simplification. DAG size of input: 312 DAG size of output: 133
[2020-11-25 16:07:17,340 WARN  L188               SmtUtils]: Spent 325.00 ms on a formula simplification that was a NOOP. DAG size: 293
Garbage collection #1: 113 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7027 to 14051
[2020-11-25 16:07:19,284 WARN  L188               SmtUtils]: Spent 1.91 s on a formula simplification. DAG size of input: 266 DAG size of output: 245
[2020-11-25 16:07:21,560 WARN  L188               SmtUtils]: Spent 2.27 s on a formula simplification. DAG size of input: 312 DAG size of output: 291
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12541 to 25073
Garbage collection #9: 25073 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 25073 to 50131
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
Garbage collection #9: 17419 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 17419 to 34819
Garbage collection #10: 34819 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 34819 to 69623
[2020-11-25 16:07:23,085 WARN  L188               SmtUtils]: Spent 1.42 s on a formula simplification. DAG size of input: 355 DAG size of output: 182
[2020-11-25 16:07:23,610 WARN  L188               SmtUtils]: Spent 524.00 ms on a formula simplification that was a NOOP. DAG size: 375
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #8: 18353 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 18353 to 36697
[2020-11-25 16:07:26,267 WARN  L188               SmtUtils]: Spent 2.62 s on a formula simplification. DAG size of input: 330 DAG size of output: 310
[2020-11-25 16:07:27,080 WARN  L188               SmtUtils]: Spent 808.00 ms on a formula simplification that was a NOOP. DAG size: 310
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 15859 to 31699
Garbage collection #9: 31699 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 31699 to 63397
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 8713 to 17419
Garbage collection #9: 17419 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 17419 to 34819
[2020-11-25 16:07:28,239 WARN  L188               SmtUtils]: Spent 1.11 s on a formula simplification. DAG size of input: 268 DAG size of output: 184
[2020-11-25 16:07:28,250 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
[2020-11-25 16:07:29,051 WARN  L188               SmtUtils]: Spent 405.00 ms on a formula simplification. DAG size of input: 289 DAG size of output: 272
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-25 16:07:29,424 WARN  L188               SmtUtils]: Spent 142.00 ms on a formula simplification that was a NOOP. DAG size: 296
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 16:07:29,536 WARN  L188               SmtUtils]: Spent 109.00 ms on a formula simplification that was a NOOP. DAG size: 264
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-25 16:07:29,868 WARN  L188               SmtUtils]: Spent 117.00 ms on a formula simplification. DAG size of input: 124 DAG size of output: 117
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #6: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
[2020-11-25 16:07:30,119 WARN  L188               SmtUtils]: Spent 144.00 ms on a formula simplification. DAG size of input: 89 DAG size of output: 78
[2020-11-25 16:07:30,415 WARN  L188               SmtUtils]: Spent 295.00 ms on a formula simplification. DAG size of input: 182 DAG size of output: 174
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
Garbage collection #9: 14051 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 14051 to 28099
Garbage collection #10: 28099 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 28099 to 56197
[2020-11-25 16:07:31,253 WARN  L188               SmtUtils]: Spent 775.00 ms on a formula simplification. DAG size of input: 279 DAG size of output: 135
[2020-11-25 16:07:31,605 WARN  L188               SmtUtils]: Spent 351.00 ms on a formula simplification that was a NOOP. DAG size: 295
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 16:07:33,553 WARN  L188               SmtUtils]: Spent 1.92 s on a formula simplification. DAG size of input: 258 DAG size of output: 247
[2020-11-25 16:07:35,967 WARN  L188               SmtUtils]: Spent 2.41 s on a formula simplification. DAG size of input: 313 DAG size of output: 293
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 12541 to 25073
Garbage collection #9: 25073 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 25073 to 50131
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 8713 to 17419
Garbage collection #9: 17419 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 17419 to 34819
Garbage collection #10: 34819 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 34819 to 69623
[2020-11-25 16:07:37,161 WARN  L188               SmtUtils]: Spent 1.14 s on a formula simplification. DAG size of input: 254 DAG size of output: 180
[2020-11-25 16:07:37,719 WARN  L188               SmtUtils]: Spent 557.00 ms on a formula simplification that was a NOOP. DAG size: 373
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #8: 18353 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 18353 to 36697
[2020-11-25 16:07:39,398 WARN  L188               SmtUtils]: Spent 1.66 s on a formula simplification. DAG size of input: 317 DAG size of output: 308
[2020-11-25 16:07:40,242 WARN  L188               SmtUtils]: Spent 840.00 ms on a formula simplification. DAG size of input: 546 DAG size of output: 510
Garbage collection #1: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #2: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #3: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #4: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #5: 3331 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #6: 6661 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6661 to 13313
Garbage collection #7: 13313 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 13313 to 26597
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 16:07:40,422 WARN  L188               SmtUtils]: Spent 169.00 ms on a formula simplification. DAG size of input: 214 DAG size of output: 211
[2020-11-25 16:07:40,591 WARN  L188               SmtUtils]: Spent 151.00 ms on a formula simplification that was a NOOP. DAG size: 330
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 16:07:40,950 WARN  L188               SmtUtils]: Spent 281.00 ms on a formula simplification. DAG size of input: 332 DAG size of output: 331
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 16:07:41,090 WARN  L188               SmtUtils]: Spent 137.00 ms on a formula simplification that was a NOOP. DAG size: 327
[2020-11-25 16:07:41,107 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:07:41,116 INFO  L216          LassoAnalysis]: Preferences:
[2020-11-25 16:07:41,117 INFO  L124   ssoRankerPreferences]: Compute integeral hull: false
[2020-11-25 16:07:41,117 INFO  L125   ssoRankerPreferences]: Enable LassoPartitioneer: true
[2020-11-25 16:07:41,117 INFO  L126   ssoRankerPreferences]: Term annotations enabled: false
[2020-11-25 16:07:41,117 INFO  L127   ssoRankerPreferences]: Use exernal solver: true
[2020-11-25 16:07:41,117 INFO  L128   ssoRankerPreferences]: SMT solver command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2020-11-25 16:07:41,117 INFO  L129   ssoRankerPreferences]: Dump SMT script to file: false
[2020-11-25 16:07:41,117 INFO  L130   ssoRankerPreferences]: Path of dumped script: 
[2020-11-25 16:07:41,117 INFO  L131   ssoRankerPreferences]: Filename of dumped script: EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transfer-normal.bpl_BEv2_Iteration8_Lasso
[2020-11-25 16:07:41,117 INFO  L132   ssoRankerPreferences]: MapElimAlgo: Frank
[2020-11-25 16:07:41,117 INFO  L282          LassoAnalysis]: Starting lasso preprocessing...
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
[2020-11-25 16:07:41,493 FATAL L292        ToolchainWalker]: The Plugin de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer has thrown an exception:
java.lang.UnsupportedOperationException: function symbols not yet supported
	at de.uni_freiburg.informatik.ultimate.lassoranker.variables.LassoPartitioneer.addInOuAuxVar(LassoPartitioneer.java:238)
	at de.uni_freiburg.informatik.ultimate.lassoranker.variables.LassoPartitioneer.constructTransFormulaLR(LassoPartitioneer.java:210)
	at de.uni_freiburg.informatik.ultimate.lassoranker.variables.LassoPartitioneer.doPartition(LassoPartitioneer.java:165)
	at de.uni_freiburg.informatik.ultimate.lassoranker.variables.LassoPartitioneer.<init>(LassoPartitioneer.java:95)
	at de.uni_freiburg.informatik.ultimate.lassoranker.preprocessors.LassoPartitioneerPreprocessor.process(LassoPartitioneerPreprocessor.java:65)
	at de.uni_freiburg.informatik.ultimate.lassoranker.variables.LassoBuilder.applyPreprocessor(LassoBuilder.java:154)
	at de.uni_freiburg.informatik.ultimate.lassoranker.variables.LassoBuilder.preprocess(LassoBuilder.java:262)
	at de.uni_freiburg.informatik.ultimate.lassoranker.LassoAnalysis.preprocess(LassoAnalysis.java:286)
	at de.uni_freiburg.informatik.ultimate.lassoranker.LassoAnalysis.<init>(LassoAnalysis.java:235)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.LassoCheck.synthesize(LassoCheck.java:788)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.LassoCheck.access$18(LassoCheck.java:715)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.LassoCheck$LassoCheckResult.checkLassoTermination(LassoCheck.java:1163)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.LassoCheck$LassoCheckResult.<init>(LassoCheck.java:1062)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.LassoCheck.<init>(LassoCheck.java:276)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiCegarLoop.iterate(BuchiCegarLoop.java:479)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver.doTerminationAnalysis(BuchiAutomizerObserver.java:153)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver.finish(BuchiAutomizerObserver.java:413)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.PluginConnector.runObserver(PluginConnector.java:168)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.PluginConnector.runTool(PluginConnector.java:151)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.PluginConnector.run(PluginConnector.java:128)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainWalker.executePluginConnector(ToolchainWalker.java:232)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainWalker.processPlugin(ToolchainWalker.java:226)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainWalker.walkUnprotected(ToolchainWalker.java:142)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainWalker.walk(ToolchainWalker.java:104)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainManager$Toolchain.processToolchain(ToolchainManager.java:317)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.toolchain.DefaultToolchainJob.run(DefaultToolchainJob.java:145)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
[2020-11-25 16:07:41,494 INFO  L168              Benchmark]: Toolchain (without parser) took 43101.42 ms. Allocated memory was 1.0 GB in the beginning and 2.9 GB in the end (delta: 1.9 GB). Free memory was 929.8 MB in the beginning and 1.9 GB in the end (delta: -967.9 MB). Peak memory consumption was 2.0 GB. Max. memory is 15.3 GB.
[2020-11-25 16:07:41,494 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:07:41,495 INFO  L168              Benchmark]: Boogie Preprocessor took 140.94 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.2 MB). Peak memory consumption was 16.2 MB. Max. memory is 15.3 GB.
[2020-11-25 16:07:41,495 INFO  L168              Benchmark]: UtopiaSpecLang took 94.66 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.3 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:07:41,495 INFO  L168              Benchmark]: Boogie Printer took 26.74 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 902.9 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:07:41,495 INFO  L168              Benchmark]: RCFGBuilder took 1155.48 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.3 MB). Free memory was 902.9 MB in the beginning and 1.0 GB in the end (delta: -103.2 MB). Peak memory consumption was 191.3 MB. Max. memory is 15.3 GB.
[2020-11-25 16:07:41,495 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.49 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 992.6 MB in the end (delta: 13.5 MB). Peak memory consumption was 13.5 MB. Max. memory is 15.3 GB.
[2020-11-25 16:07:41,496 INFO  L168              Benchmark]: BÃ¼chi Program Product took 2023.09 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 164.1 MB). Free memory was 992.6 MB in the beginning and 893.9 MB in the end (delta: 98.7 MB). Peak memory consumption was 493.9 MB. Max. memory is 15.3 GB.
[2020-11-25 16:07:41,497 INFO  L168              Benchmark]: BlockEncodingV2 took 175.72 ms. Allocated memory is still 1.3 GB. Free memory was 893.9 MB in the beginning and 801.8 MB in the end (delta: 92.1 MB). Peak memory consumption was 92.1 MB. Max. memory is 15.3 GB.
[2020-11-25 16:07:41,497 INFO  L168              Benchmark]: BuchiAutomizer took 39439.79 ms. Allocated memory was 1.3 GB in the beginning and 2.9 GB in the end (delta: 1.7 GB). Free memory was 801.8 MB in the beginning and 1.9 GB in the end (delta: -1.1 GB). Peak memory consumption was 1.6 GB. Max. memory is 15.3 GB.
[2020-11-25 16:07:41,499 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    6232 locations, 11166 edges
  - StatisticsResult: Encoded RCFG
    6126 locations, 10877 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 140.94 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.2 MB). Peak memory consumption was 16.2 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 94.66 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.3 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 26.74 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 902.9 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1155.48 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.3 MB). Free memory was 902.9 MB in the beginning and 1.0 GB in the end (delta: -103.2 MB). Peak memory consumption was 191.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.49 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 992.6 MB in the end (delta: 13.5 MB). Peak memory consumption was 13.5 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 2023.09 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 164.1 MB). Free memory was 992.6 MB in the beginning and 893.9 MB in the end (delta: 98.7 MB). Peak memory consumption was 493.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 175.72 ms. Allocated memory is still 1.3 GB. Free memory was 893.9 MB in the beginning and 801.8 MB in the end (delta: 92.1 MB). Peak memory consumption was 92.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 39439.79 ms. Allocated memory was 1.3 GB in the beginning and 2.9 GB in the end (delta: 1.7 GB). Free memory was 801.8 MB in the beginning and 1.9 GB in the end (delta: -1.1 GB). Peak memory consumption was 1.6 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2513 locations, 3421 edges
  - StatisticsResult: BuchiProgram size
    6232 locations, 11166 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer:
  - ExceptionOrErrorResult: UnsupportedOperationException: function symbols not yet supported
    de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer: UnsupportedOperationException: function symbols not yet supported: de.uni_freiburg.informatik.ultimate.lassoranker.variables.LassoPartitioneer.addInOuAuxVar(LassoPartitioneer.java:238)
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
