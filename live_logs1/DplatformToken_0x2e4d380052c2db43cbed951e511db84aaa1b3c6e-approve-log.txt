This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 14:20:03,616 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 14:20:03,618 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 14:20:03,628 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 14:20:03,628 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 14:20:03,629 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 14:20:03,629 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 14:20:03,631 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 14:20:03,632 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 14:20:03,633 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 14:20:03,634 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 14:20:03,634 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 14:20:03,634 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 14:20:03,635 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 14:20:03,636 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 14:20:03,636 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 14:20:03,637 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 14:20:03,638 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 14:20:03,639 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 14:20:03,640 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 14:20:03,641 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 14:20:03,642 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 14:20:03,644 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 14:20:03,644 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 14:20:03,644 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 14:20:03,644 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 14:20:03,645 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 14:20:03,645 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 14:20:03,645 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 14:20:03,646 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 14:20:03,646 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 14:20:03,647 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 14:20:03,647 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 14:20:03,647 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 14:20:03,648 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 14:20:03,648 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 14:20:03,649 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 14:20:03,649 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 14:20:03,649 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 14:20:03,650 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 14:20:03,650 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 14:20:03,650 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 14:20:03,658 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 14:20:03,658 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 14:20:03,659 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 14:20:03,659 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 14:20:03,659 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 14:20:03,659 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 14:20:03,659 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 14:20:03,660 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 14:20:03,660 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 14:20:03,660 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 14:20:03,660 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 14:20:03,660 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 14:20:03,660 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 14:20:03,660 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 14:20:03,660 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 14:20:03,660 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 14:20:03,661 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 14:20:03,661 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 14:20:03,661 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 14:20:03,661 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 14:20:03,661 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 14:20:03,661 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 14:20:03,661 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 14:20:03,661 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 14:20:03,661 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 14:20:03,661 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 14:20:03,687 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 14:20:03,705 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 14:20:03,708 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 14:20:03,709 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 14:20:03,709 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 14:20:03,710 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl
[2020-11-25 14:20:03,710 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl'
[2020-11-25 14:20:03,797 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 14:20:03,798 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 14:20:03,799 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 14:20:03,799 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 14:20:03,799 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 14:20:03,815 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:20:03" (1/1) ...
[2020-11-25 14:20:03,817 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:20:03" (1/1) ...
[2020-11-25 14:20:03,847 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:20:03" (1/1) ...
[2020-11-25 14:20:03,848 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:20:03" (1/1) ...
[2020-11-25 14:20:03,870 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:20:03" (1/1) ...
[2020-11-25 14:20:03,880 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:20:03" (1/1) ...
[2020-11-25 14:20:03,889 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:20:03" (1/1) ...
[2020-11-25 14:20:03,899 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 14:20:03,900 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 14:20:03,900 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 14:20:03,902 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 14:20:03,905 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:20:03" (1/1) ...
[2020-11-25 14:20:03,925 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowed_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this]) && balances_DplatformToken[this] == old(balances_DplatformToken[this]) && owner_DplatformToken[this] == old(owner_DplatformToken[this]) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this]) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this]) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this]) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 14:20:03,930 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowed_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this]) && balances_DplatformToken[this] == old(balances_DplatformToken[this]) && owner_DplatformToken[this] == old(owner_DplatformToken[this]) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this]) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this]) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this]) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 14:20:03,937 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowed_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this]) && balances_DplatformToken[this] == old(balances_DplatformToken[this]) && owner_DplatformToken[this] == old(owner_DplatformToken[this]) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this]) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this]) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this]) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 14:20:03,943 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=spender_s302 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[spender_s302,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]
[2020-11-25 14:20:03,947 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && _allowed_ERC20[this][msg.sender][spender_s302]==value_s302 ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowed_ERC20[this][p1][p2]==( old(_allowed_ERC20[this][p1][p2]) ) ) && quantity_DplatformToken[this]==( old(quantity_DplatformToken[this]) ) ) && balances_DplatformToken[this]==( old(balances_DplatformToken[this]) ) ) && owner_DplatformToken[this]==( old(owner_DplatformToken[this]) ) ) && startTime_DplatformToken[this]==( old(startTime_DplatformToken[this]) ) ) && monthsTimestamp_DplatformToken[this]==( old(monthsTimestamp_DplatformToken[this]) ) ) && fibseries_DplatformToken[this]==( old(fibseries_DplatformToken[this]) ) ) && operatingTime_DplatformToken[this]==( old(operatingTime_DplatformToken[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[spender_s302,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],IdentifierExpression[value_s302,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[quantity_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[quantity_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[startTime_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[startTime_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[monthsTimestamp_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[monthsTimestamp_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[fibseries_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[fibseries_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[operatingTime_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[operatingTime_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]]
[2020-11-25 14:20:03,953 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowed_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this]) && balances_DplatformToken[this] == old(balances_DplatformToken[this]) && owner_DplatformToken[this] == old(owner_DplatformToken[this]) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this]) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this]) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this]) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 14:20:03,953 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_ERC200) ==> ( <>AP(success_approve_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 14:20:03,962 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:20:03 PropertyContainer
[2020-11-25 14:20:03,963 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 14:20:03,963 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 14:20:03,963 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 14:20:03,963 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 14:20:03,964 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:20:03" (1/2) ...
[2020-11-25 14:20:03,964 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 14:20:03,964 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 14:20:03,980 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:20:03" (2/2) ...
[2020-11-25 14:20:03,980 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 14:20:03,980 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 14:20:03,981 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 14:20:03,981 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 14:20:03,981 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:20:03" (1/2) ...
[2020-11-25 14:20:04,033 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 14:20:04,033 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 14:20:04,033 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 14:20:04,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 14:20:04,033 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 14:20:04,033 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 14:20:04,034 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 14:20:04,034 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 14:20:04,034 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 14:20:04,034 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 14:20:04,034 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 14:20:04,034 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 14:20:04,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 14:20:04,034 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 14:20:04,034 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 14:20:04,035 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 14:20:04,035 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 14:20:04,035 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 14:20:04,035 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 14:20:04,035 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 14:20:04,035 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 14:20:04,035 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 14:20:04,035 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 14:20:04,035 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 14:20:04,036 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 14:20:04,036 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 14:20:04,036 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 14:20:04,036 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 14:20:04,036 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 14:20:04,036 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 14:20:04,036 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 14:20:04,036 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 14:20:04,036 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 14:20:04,036 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 14:20:04,037 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 14:20:04,037 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 14:20:04,037 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 14:20:04,037 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 14:20:04,037 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 14:20:04,037 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 14:20:04,037 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 14:20:04,037 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 14:20:04,037 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 14:20:04,037 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 14:20:04,038 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 14:20:04,038 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 14:20:04,038 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 14:20:04,038 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 14:20:04,038 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 14:20:04,038 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 14:20:04,038 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken_NoBaseCtor__success
[2020-11-25 14:20:04,038 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken
[2020-11-25 14:20:04,038 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken
[2020-11-25 14:20:04,038 INFO  L130     BoogieDeclarations]: Found specification of procedure runQuantityDPOM~address_DplatformToken
[2020-11-25 14:20:04,038 INFO  L138     BoogieDeclarations]: Found implementation of procedure runQuantityDPOM~address_DplatformToken
[2020-11-25 14:20:04,039 INFO  L130     BoogieDeclarations]: Found specification of procedure quantity_DplatformToken
[2020-11-25 14:20:04,039 INFO  L138     BoogieDeclarations]: Found implementation of procedure quantity_DplatformToken
[2020-11-25 14:20:04,039 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_DplatformToken
[2020-11-25 14:20:04,039 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_DplatformToken
[2020-11-25 14:20:04,039 INFO  L130     BoogieDeclarations]: Found specification of procedure startTime_DplatformToken
[2020-11-25 14:20:04,039 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTime_DplatformToken
[2020-11-25 14:20:04,039 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 14:20:04,039 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 14:20:04,039 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 14:20:04,039 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 14:20:04,040 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 14:20:04,040 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 14:20:04,040 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 14:20:04,040 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 14:20:04,040 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 14:20:04,040 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 14:20:04,040 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 14:20:04,040 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DplatformToken
[2020-11-25 14:20:04,040 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 14:20:04,040 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 14:20:04,041 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 14:20:04,041 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 14:20:04,041 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 14:20:04,041 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 14:20:04,041 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 14:20:04,041 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 14:20:04,041 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 14:20:04,041 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 14:20:04,041 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 14:20:04,041 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 14:20:04,042 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 14:20:04,042 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 14:20:04,042 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 14:20:04,042 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 14:20:04,042 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 14:20:04,042 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 14:20:04,042 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 14:20:04,042 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 14:20:04,042 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 14:20:04,042 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 14:20:04,043 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 14:20:04,043 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 14:20:04,043 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 14:20:04,043 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 14:20:04,043 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 14:20:04,043 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 14:20:04,043 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:20:04,043 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:20:04,043 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:20:04,043 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:20:04,043 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 14:20:04,044 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 14:20:04,044 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 14:20:04,044 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 14:20:04,044 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 14:20:04,044 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 14:20:04,044 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 14:20:04,044 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 14:20:04,044 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 14:20:04,044 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 14:20:04,044 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 14:20:04,045 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 14:20:04,045 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 14:20:04,045 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken_NoBaseCtor__fail
[2020-11-25 14:20:04,045 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken__success
[2020-11-25 14:20:04,045 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken__fail
[2020-11-25 14:20:04,045 INFO  L130     BoogieDeclarations]: Found specification of procedure runQuantityDPOM~address_DplatformToken__success
[2020-11-25 14:20:04,045 INFO  L130     BoogieDeclarations]: Found specification of procedure runQuantityDPOM~address_DplatformToken__fail
[2020-11-25 14:20:04,045 INFO  L130     BoogieDeclarations]: Found specification of procedure quantity_DplatformToken__success
[2020-11-25 14:20:04,045 INFO  L130     BoogieDeclarations]: Found specification of procedure quantity_DplatformToken__fail
[2020-11-25 14:20:04,046 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_DplatformToken__success
[2020-11-25 14:20:04,046 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_DplatformToken__fail
[2020-11-25 14:20:04,046 INFO  L130     BoogieDeclarations]: Found specification of procedure startTime_DplatformToken__success
[2020-11-25 14:20:04,046 INFO  L130     BoogieDeclarations]: Found specification of procedure startTime_DplatformToken__fail
[2020-11-25 14:20:04,046 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 14:20:04,046 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 14:20:04,046 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 14:20:04,046 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 14:20:04,046 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 14:20:04,046 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 14:20:04,046 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 14:20:04,046 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 14:20:04,046 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 14:20:04,047 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 14:20:04,047 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 14:20:04,047 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 14:20:04,047 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 14:20:04,047 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 14:20:04,047 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 14:20:04,047 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 14:20:04,047 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 14:20:04,047 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 14:20:04,047 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 14:20:04,047 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 14:20:04,047 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 14:20:04,047 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 14:20:04,048 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 14:20:04,048 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 14:20:04,048 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 14:20:04,048 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 14:20:04,048 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 14:20:04,048 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 14:20:04,048 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 14:20:04,048 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 14:20:04,048 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 14:20:04,048 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 14:20:04,048 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 14:20:04,048 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 14:20:04,048 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 14:20:04,049 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 14:20:04,049 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 14:20:04,049 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 14:20:04,049 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 14:20:04,049 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:20:04,049 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:20:04,049 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:20:04,049 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:20:04,049 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 14:20:04,049 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 14:20:04,049 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 14:20:04,049 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 14:20:04,049 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 14:20:04,049 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 14:20:04,049 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 14:20:04,050 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 14:20:04,050 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 14:20:04,050 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 14:20:04,050 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 14:20:04,050 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 14:20:04,050 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 14:20:04,050 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 14:20:04,050 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 14:20:04,050 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 14:20:04,050 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 14:20:04,050 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 14:20:04,050 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken_NoBaseCtor__fail
[2020-11-25 14:20:04,050 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken_NoBaseCtor__success
[2020-11-25 14:20:04,051 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken__fail
[2020-11-25 14:20:04,051 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken__success
[2020-11-25 14:20:04,051 INFO  L138     BoogieDeclarations]: Found implementation of procedure runQuantityDPOM~address_DplatformToken__fail
[2020-11-25 14:20:04,051 INFO  L138     BoogieDeclarations]: Found implementation of procedure runQuantityDPOM~address_DplatformToken__success
[2020-11-25 14:20:04,051 INFO  L138     BoogieDeclarations]: Found implementation of procedure quantity_DplatformToken__fail
[2020-11-25 14:20:04,051 INFO  L138     BoogieDeclarations]: Found implementation of procedure quantity_DplatformToken__success
[2020-11-25 14:20:04,051 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_DplatformToken__fail
[2020-11-25 14:20:04,051 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_DplatformToken__success
[2020-11-25 14:20:04,051 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTime_DplatformToken__fail
[2020-11-25 14:20:04,051 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTime_DplatformToken__success
[2020-11-25 14:20:04,051 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 14:20:04,051 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 14:20:04,052 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 14:20:04,052 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 14:20:04,052 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 14:20:04,052 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 14:20:04,052 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 14:20:04,052 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 14:20:04,052 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 14:20:04,052 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 14:20:04,052 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 14:20:04,052 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 14:20:04,052 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 14:20:04,052 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 14:20:04,053 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DplatformToken
[2020-11-25 14:20:04,053 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 14:20:04,053 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 14:20:04,053 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 14:20:04,287 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:20:04,288 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:20:04,288 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:20:04,572 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:20:04,783 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 14:20:04,784 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 14:20:04,786 INFO  L202        PluginConnector]: Adding new model DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:20:04 BoogieIcfgContainer
[2020-11-25 14:20:04,786 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:20:03" (2/2) ...
[2020-11-25 14:20:04,786 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 14:20:04,786 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6ca51c59 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:20:04, skipping insertion in model container
[2020-11-25 14:20:04,786 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 14:20:04,786 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 14:20:04,787 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 14:20:04,788 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 14:20:04,788 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:20:03" (1/3) ...
[2020-11-25 14:20:04,789 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@59247896 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:20:04, skipping insertion in model container
[2020-11-25 14:20:04,789 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:20:03" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 14:20:04,824 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:20:04 NWAContainer
[2020-11-25 14:20:04,824 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 14:20:04,824 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 14:20:04,824 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 14:20:04,825 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 14:20:04,826 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:20:04" (3/4) ...
[2020-11-25 14:20:04,826 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@e51f3d9 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:20:04, skipping insertion in model container
[2020-11-25 14:20:04,827 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:20:04" (4/4) ...
[2020-11-25 14:20:04,830 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 14:20:04,833 INFO  L110   BuchiProductObserver]: Initial RCFG 1961 locations, 2479 edges
[2020-11-25 14:20:04,834 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 14:20:04,845 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 14:20:06,330 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 14:20:06,336 INFO  L110   BuchiProductObserver]: BuchiProgram size 4582 locations, 7953 edges
[2020-11-25 14:20:06,336 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:20:06 BoogieIcfgContainer
[2020-11-25 14:20:06,336 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 14:20:06,337 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 14:20:06,337 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 14:20:06,338 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 14:20:06,338 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:20:06" (1/1) ...
[2020-11-25 14:20:06,424 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_16 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][account_s621][msgsender_MSG], value_s621);
[2020-11-25 14:20:06,427 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_16 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][account_s621][msgsender_MSG], value_s621);
[2020-11-25 14:20:06,439 INFO  L313           BlockEncoder]: Initial Icfg 4582 locations, 7953 edges
[2020-11-25 14:20:06,439 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 14:20:06,439 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 14:20:06,439 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 14:20:06,440 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 14:20:06,453 INFO  L70    emoveInfeasibleEdges]: Removed 102 edges and 13 locations because of local infeasibility
[2020-11-25 14:20:06,466 INFO  L70        RemoveSinkStates]: Removed 44 edges and 29 locations by removing sink states
[2020-11-25 14:20:06,478 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 14:20:06,483 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 14:20:06,488 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 14:20:06,489 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 14:20:06,494 INFO  L313           BlockEncoder]: Encoded RCFG 4514 locations, 7769 edges
[2020-11-25 14:20:06,494 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:20:06 BasicIcfg
[2020-11-25 14:20:06,494 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 14:20:06,494 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 14:20:06,495 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 14:20:06,497 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 14:20:06,497 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:20:06,497 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:20:03" (1/6) ...
[2020-11-25 14:20:06,499 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@63ea107c and model type DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:20:06, skipping insertion in model container
[2020-11-25 14:20:06,499 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:20:06,499 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:20:03" (2/6) ...
[2020-11-25 14:20:06,499 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@63ea107c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:20:06, skipping insertion in model container
[2020-11-25 14:20:06,499 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:20:06,499 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:20:04" (3/6) ...
[2020-11-25 14:20:06,499 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@63ea107c and model type DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:20:06, skipping insertion in model container
[2020-11-25 14:20:06,500 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:20:06,500 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:20:04" (4/6) ...
[2020-11-25 14:20:06,500 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@63ea107c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:20:06, skipping insertion in model container
[2020-11-25 14:20:06,500 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:20:06,500 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:20:06" (5/6) ...
[2020-11-25 14:20:06,500 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@63ea107c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 02:20:06, skipping insertion in model container
[2020-11-25 14:20:06,501 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:20:06,501 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:20:06" (6/6) ...
[2020-11-25 14:20:06,502 INFO  L404   chiAutomizerObserver]: Analyzing ICFG DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_approve.bpl_BEv2
[2020-11-25 14:20:06,536 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 14:20:06,536 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 14:20:06,539 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 14:20:06,539 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 14:20:06,539 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 14:20:06,540 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 14:20:06,540 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 14:20:06,540 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 14:20:06,540 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 14:20:06,586 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4514 states.
[2020-11-25 14:20:06,636 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:20:06,637 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:20:06,637 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:20:06,644 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:20:06,644 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:20:06,644 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 14:20:06,644 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4514 states.
[2020-11-25 14:20:06,668 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:20:06,668 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:20:06,668 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:20:06,670 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:20:06,670 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5423]              assume null == 0;
[L5424]  CALL        call this := FreshRefGenerator__success();
[L2697]              havoc newRef;
[L2698]              assume Alloc[newRef] == false;
[L2699]              Alloc[newRef] := true;
[L2700]              assume newRef != null;
[L5424]  RET         call this := FreshRefGenerator__success();
[L5425]              assume now >= 0;
[L5426]              assume DType[this] == DplatformToken;
[L5427]              assume msgvalue_MSG == 0;
[L5428]              gas := gas - 53000;
[L5429]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1557]              havoc __exception;
[L1558]              revert := false;
[L1559]  COND FALSE  !(__exception)
[L1599]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3575]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3576]  COND TRUE   revert
[L1599]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1600]              assume !revert && gas >= 0;
[L5429]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5430]              assume !revert && gas >= 0;

Loop:
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND TRUE   choice == 15
[L5321]              gas := gas - 21000;
[L5322]  COND FALSE  !(gas >= 0)
[L5433]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:20:06,683 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:20:06,683 INFO  L82        PathProgramCache]: Analyzing trace with hash 793849439, now seen corresponding path program 1 times
[2020-11-25 14:20:06,687 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:20:06,716 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:20:06,755 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:20:06,757 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:20:06,757 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 14:20:07,068 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:20:07,077 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 14:20:07,077 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 14:20:07,078 INFO  L87              Difference]: Start difference. First operand 4514 states. Second operand 4 states.
[2020-11-25 14:20:07,471 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:20:07,471 INFO  L93              Difference]: Finished difference Result 3023 states and 3366 transitions.
[2020-11-25 14:20:07,471 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 14:20:07,472 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3023 states and 3366 transitions.
[2020-11-25 14:20:07,488 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:20:07,508 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3023 states to 3023 states and 3366 transitions.
[2020-11-25 14:20:07,509 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 14:20:07,511 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 760
[2020-11-25 14:20:07,512 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3023 states and 3366 transitions.
[2020-11-25 14:20:07,519 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:20:07,519 INFO  L728         BuchiCegarLoop]: Abstraction has 3023 states and 3366 transitions.
[2020-11-25 14:20:07,535 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3023 states and 3366 transitions.
[2020-11-25 14:20:07,578 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3023 to 3023.
[2020-11-25 14:20:07,579 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3023 states.
[2020-11-25 14:20:07,583 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3023 states to 3023 states and 3366 transitions.
[2020-11-25 14:20:07,584 INFO  L751         BuchiCegarLoop]: Abstraction has 3023 states and 3366 transitions.
[2020-11-25 14:20:07,584 INFO  L631         BuchiCegarLoop]: Abstraction has 3023 states and 3366 transitions.
[2020-11-25 14:20:07,584 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 14:20:07,584 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3023 states and 3366 transitions.
[2020-11-25 14:20:07,591 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:20:07,591 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:20:07,591 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:20:07,593 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:20:07,593 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5423]              assume null == 0;
[L5424]  CALL        call this := FreshRefGenerator__success();
[L2697]              havoc newRef;
[L2698]              assume Alloc[newRef] == false;
[L2699]              Alloc[newRef] := true;
[L2700]              assume newRef != null;
[L5424]  RET         call this := FreshRefGenerator__success();
[L5425]              assume now >= 0;
[L5426]              assume DType[this] == DplatformToken;
[L5427]              assume msgvalue_MSG == 0;
[L5428]              gas := gas - 53000;
[L5429]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1557]              havoc __exception;
[L1558]              revert := false;
[L1559]  COND FALSE  !(__exception)
[L1599]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3575]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3576]  COND TRUE   revert
[L1599]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1600]              assume !revert && gas >= 0;
[L5429]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5430]              assume !revert && gas >= 0;
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND TRUE   choice == 14
[L5328]              gas := gas - 21000;
[L5329]  COND TRUE   gas >= 0
[L5330]              assume value_s302 >= 0 && value_s302 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5331]              assume msgvalue_MSG == 0;
[L5332]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s302;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L746]               havoc __exception;
[L747]               revert := false;
[L748]   COND FALSE  !(__exception)
[L788]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3033]              __var_1 := null;
[L3034]  COND TRUE   !(spender_s302 != null)
[L3035]              revert := true;
[L788]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L789]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s302] == value_s302) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L5332]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L5433]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND TRUE   choice == 14
[L5328]              gas := gas - 21000;
[L5329]  COND TRUE   gas >= 0
[L5330]              assume value_s302 >= 0 && value_s302 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5331]              assume msgvalue_MSG == 0;
[L5332]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s302;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L746]               havoc __exception;
[L747]               revert := false;
[L748]   COND FALSE  !(__exception)
[L788]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3033]              __var_1 := null;
[L3034]  COND TRUE   !(spender_s302 != null)
[L3035]              revert := true;
[L788]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L789]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s302] == value_s302) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L5332]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L5433]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:20:07,597 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:20:07,597 INFO  L82        PathProgramCache]: Analyzing trace with hash 1226146052, now seen corresponding path program 1 times
[2020-11-25 14:20:07,598 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:20:07,608 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:20:07,628 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:20:07,628 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:20:07,628 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 14:20:07,630 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:20:07,630 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 14:20:07,630 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 14:20:07,630 INFO  L87              Difference]: Start difference. First operand 3023 states and 3366 transitions. cyclomatic complexity: 353 Second operand 3 states.
[2020-11-25 14:20:07,688 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:20:07,688 INFO  L93              Difference]: Finished difference Result 3683 states and 4170 transitions.
[2020-11-25 14:20:07,688 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 14:20:07,689 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3683 states and 4170 transitions.
[2020-11-25 14:20:07,703 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:20:07,717 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3683 states to 3683 states and 4170 transitions.
[2020-11-25 14:20:07,717 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 921
[2020-11-25 14:20:07,718 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 921
[2020-11-25 14:20:07,718 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3683 states and 4170 transitions.
[2020-11-25 14:20:07,723 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:20:07,723 INFO  L728         BuchiCegarLoop]: Abstraction has 3683 states and 4170 transitions.
[2020-11-25 14:20:07,726 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3683 states and 4170 transitions.
[2020-11-25 14:20:07,755 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3683 to 3191.
[2020-11-25 14:20:07,755 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3191 states.
[2020-11-25 14:20:07,758 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3191 states to 3191 states and 3566 transitions.
[2020-11-25 14:20:07,759 INFO  L751         BuchiCegarLoop]: Abstraction has 3191 states and 3566 transitions.
[2020-11-25 14:20:07,759 INFO  L631         BuchiCegarLoop]: Abstraction has 3191 states and 3566 transitions.
[2020-11-25 14:20:07,759 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 14:20:07,759 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3191 states and 3566 transitions.
[2020-11-25 14:20:07,765 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:20:07,765 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:20:07,765 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:20:07,766 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:20:07,767 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5423]              assume null == 0;
[L5424]  CALL        call this := FreshRefGenerator__success();
[L2697]              havoc newRef;
[L2698]              assume Alloc[newRef] == false;
[L2699]              Alloc[newRef] := true;
[L2700]              assume newRef != null;
[L5424]  RET         call this := FreshRefGenerator__success();
[L5425]              assume now >= 0;
[L5426]              assume DType[this] == DplatformToken;
[L5427]              assume msgvalue_MSG == 0;
[L5428]              gas := gas - 53000;
[L5429]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1557]              havoc __exception;
[L1558]              revert := false;
[L1559]  COND FALSE  !(__exception)
[L1599]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3575]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3576]  COND FALSE  !(revert)
[L3579]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L2931]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2932]  COND FALSE  !(revert)
[L2935]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2907]              assume msgsender_MSG != null;
[L2908]              Balance[this] := 0;
[L2909]              _balances_ERC20[this] := zeroRefintArr();
[L2910]              sum__balances0[this] := 0;
[L2911]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2912]              sum__allowed1[this] := 0;
[L2913]              _totalSupply_ERC20[this] := 0;
[L2935]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]  COND FALSE  !(revert)
[L3579]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3580]  COND FALSE  !(revert)
[L3583]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3427]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3427]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3428]  COND FALSE  !(revert)
[L3431]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3402]              assume msgsender_MSG != null;
[L3403]              Balance[this] := 0;
[L3404]              _name_ERC20Detailed[this] := -1774930639;
[L3405]              _symbol_ERC20Detailed[this] := -1774930639;
[L3406]              _decimals_ERC20Detailed[this] := 0;
[L3408]              _name_ERC20Detailed[this] := name_s652;
[L3409]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3410]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3431]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3432]  COND FALSE  !(revert)
[L3583]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3584]  COND FALSE  !(revert)
[L3587]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3516]              assume msgsender_MSG != null;
[L3517]              Balance[this] := 0;
[L3518]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3520]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3521]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3522]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3525]              quantity_DplatformToken[this] := 0;
[L3526]              balances_DplatformToken[this] := zeroRefintArr();
[L3527]              sum_balances2[this] := 0;
[L3528]              owner_DplatformToken[this] := null;
[L3529]              startTime_DplatformToken[this] := 0;
[L3530]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3531]              sum_monthsTimestamp3[this] := 0;
[L3532]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3533]              fibseries_DplatformToken[this] := zerointintArr();
[L3534]              sum_fibseries4[this] := 0;
[L3535]              operatingTime_DplatformToken[this] := 0;
[L3537]  COND TRUE   DType[this] == DplatformToken
[L3538]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3265]              __var_10 := null;
[L3266]  COND TRUE   !(account_s537 != null)
[L3267]              revert := true;
[L3538]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3539]  COND TRUE   revert
[L3587]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3588]  COND TRUE   revert
[L1599]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1600]              assume !revert && gas >= 0;
[L5429]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5430]              assume !revert && gas >= 0;
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND TRUE   choice == 14
[L5328]              gas := gas - 21000;
[L5329]  COND TRUE   gas >= 0
[L5330]              assume value_s302 >= 0 && value_s302 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5331]              assume msgvalue_MSG == 0;
[L5332]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s302;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L746]               havoc __exception;
[L747]               revert := false;
[L748]   COND FALSE  !(__exception)
[L788]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3033]              __var_1 := null;
[L3034]  COND TRUE   !(spender_s302 != null)
[L3035]              revert := true;
[L788]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L789]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s302] == value_s302) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L5332]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L5433]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND TRUE   choice == 14
[L5328]              gas := gas - 21000;
[L5329]  COND TRUE   gas >= 0
[L5330]              assume value_s302 >= 0 && value_s302 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5331]              assume msgvalue_MSG == 0;
[L5332]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s302;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L746]               havoc __exception;
[L747]               revert := false;
[L748]   COND FALSE  !(__exception)
[L788]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3033]              __var_1 := null;
[L3034]  COND TRUE   !(spender_s302 != null)
[L3035]              revert := true;
[L788]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L789]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s302] == value_s302) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L5332]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L5433]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:20:07,770 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:20:07,770 INFO  L82        PathProgramCache]: Analyzing trace with hash 1653165329, now seen corresponding path program 1 times
[2020-11-25 14:20:07,771 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:20:07,785 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:20:07,830 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 14 refuted. 0 times theorem prover too weak. 16 trivial. 0 not checked.
[2020-11-25 14:20:07,830 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 14:20:07,830 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 14:20:07,831 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:20:07,831 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 14:20:07,831 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 14:20:07,831 INFO  L87              Difference]: Start difference. First operand 3191 states and 3566 transitions. cyclomatic complexity: 385 Second operand 7 states.
[2020-11-25 14:20:07,883 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:20:07,883 INFO  L93              Difference]: Finished difference Result 3205 states and 3579 transitions.
[2020-11-25 14:20:07,883 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 14:20:07,883 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3205 states and 3579 transitions.
[2020-11-25 14:20:07,891 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:20:07,900 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3205 states to 3190 states and 3564 transitions.
[2020-11-25 14:20:07,900 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 784
[2020-11-25 14:20:07,901 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 784
[2020-11-25 14:20:07,901 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3190 states and 3564 transitions.
[2020-11-25 14:20:07,904 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:20:07,904 INFO  L728         BuchiCegarLoop]: Abstraction has 3190 states and 3564 transitions.
[2020-11-25 14:20:07,907 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3190 states and 3564 transitions.
[2020-11-25 14:20:07,929 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3190 to 3190.
[2020-11-25 14:20:07,929 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3190 states.
[2020-11-25 14:20:07,933 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3190 states to 3190 states and 3564 transitions.
[2020-11-25 14:20:07,933 INFO  L751         BuchiCegarLoop]: Abstraction has 3190 states and 3564 transitions.
[2020-11-25 14:20:07,933 INFO  L631         BuchiCegarLoop]: Abstraction has 3190 states and 3564 transitions.
[2020-11-25 14:20:07,933 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 14:20:07,933 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3190 states and 3564 transitions.
[2020-11-25 14:20:07,937 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:20:07,937 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:20:07,938 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:20:07,939 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:20:07,939 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5423]              assume null == 0;
[L5424]  CALL        call this := FreshRefGenerator__success();
[L2697]              havoc newRef;
[L2698]              assume Alloc[newRef] == false;
[L2699]              Alloc[newRef] := true;
[L2700]              assume newRef != null;
[L5424]  RET         call this := FreshRefGenerator__success();
[L5425]              assume now >= 0;
[L5426]              assume DType[this] == DplatformToken;
[L5427]              assume msgvalue_MSG == 0;
[L5428]              gas := gas - 53000;
[L5429]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1557]              havoc __exception;
[L1558]              revert := false;
[L1559]  COND FALSE  !(__exception)
[L1599]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3575]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3576]  COND FALSE  !(revert)
[L3579]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L2931]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2932]  COND FALSE  !(revert)
[L2935]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2907]              assume msgsender_MSG != null;
[L2908]              Balance[this] := 0;
[L2909]              _balances_ERC20[this] := zeroRefintArr();
[L2910]              sum__balances0[this] := 0;
[L2911]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2912]              sum__allowed1[this] := 0;
[L2913]              _totalSupply_ERC20[this] := 0;
[L2935]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]  COND FALSE  !(revert)
[L3579]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3580]  COND FALSE  !(revert)
[L3583]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3427]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3427]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3428]  COND FALSE  !(revert)
[L3431]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3402]              assume msgsender_MSG != null;
[L3403]              Balance[this] := 0;
[L3404]              _name_ERC20Detailed[this] := -1774930639;
[L3405]              _symbol_ERC20Detailed[this] := -1774930639;
[L3406]              _decimals_ERC20Detailed[this] := 0;
[L3408]              _name_ERC20Detailed[this] := name_s652;
[L3409]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3410]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3431]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3432]  COND FALSE  !(revert)
[L3583]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3584]  COND FALSE  !(revert)
[L3587]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3516]              assume msgsender_MSG != null;
[L3517]              Balance[this] := 0;
[L3518]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3520]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3521]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3522]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3525]              quantity_DplatformToken[this] := 0;
[L3526]              balances_DplatformToken[this] := zeroRefintArr();
[L3527]              sum_balances2[this] := 0;
[L3528]              owner_DplatformToken[this] := null;
[L3529]              startTime_DplatformToken[this] := 0;
[L3530]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3531]              sum_monthsTimestamp3[this] := 0;
[L3532]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3533]              fibseries_DplatformToken[this] := zerointintArr();
[L3534]              sum_fibseries4[this] := 0;
[L3535]              operatingTime_DplatformToken[this] := 0;
[L3537]  COND TRUE   DType[this] == DplatformToken
[L3538]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3265]              __var_10 := null;
[L3266]  COND FALSE  !(!(account_s537 != null))
[L3270]  CALL        call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L2862]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2863]  COND TRUE   !(c_s173 >= a_s173)
[L2864]              revert := true;
[L3270]  RET         call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L3271]  COND TRUE   revert
[L3538]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3539]  COND TRUE   revert
[L3587]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3588]  COND TRUE   revert
[L1599]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1600]              assume !revert && gas >= 0;
[L5429]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5430]              assume !revert && gas >= 0;
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND TRUE   choice == 14
[L5328]              gas := gas - 21000;
[L5329]  COND TRUE   gas >= 0
[L5330]              assume value_s302 >= 0 && value_s302 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5331]              assume msgvalue_MSG == 0;
[L5332]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s302;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L746]               havoc __exception;
[L747]               revert := false;
[L748]   COND FALSE  !(__exception)
[L788]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3033]              __var_1 := null;
[L3034]  COND TRUE   !(spender_s302 != null)
[L3035]              revert := true;
[L788]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L789]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s302] == value_s302) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L5332]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L5433]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND TRUE   choice == 14
[L5328]              gas := gas - 21000;
[L5329]  COND TRUE   gas >= 0
[L5330]              assume value_s302 >= 0 && value_s302 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5331]              assume msgvalue_MSG == 0;
[L5332]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s302;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L746]               havoc __exception;
[L747]               revert := false;
[L748]   COND FALSE  !(__exception)
[L788]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3033]              __var_1 := null;
[L3034]  COND TRUE   !(spender_s302 != null)
[L3035]              revert := true;
[L788]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L789]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s302] == value_s302) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L5332]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L5433]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:20:07,942 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:20:07,942 INFO  L82        PathProgramCache]: Analyzing trace with hash 1989330070, now seen corresponding path program 1 times
[2020-11-25 14:20:07,943 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:20:07,955 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:20:07,994 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 30 trivial. 0 not checked.
[2020-11-25 14:20:07,994 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:20:07,994 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 14:20:07,994 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:20:07,995 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 14:20:07,995 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 14:20:07,995 INFO  L87              Difference]: Start difference. First operand 3190 states and 3564 transitions. cyclomatic complexity: 384 Second operand 3 states.
[2020-11-25 14:20:08,041 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:20:08,041 INFO  L93              Difference]: Finished difference Result 3682 states and 4090 transitions.
[2020-11-25 14:20:08,041 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 14:20:08,041 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3682 states and 4090 transitions.
[2020-11-25 14:20:08,067 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:20:08,083 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3682 states to 3513 states and 3892 transitions.
[2020-11-25 14:20:08,083 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 882
[2020-11-25 14:20:08,084 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 909
[2020-11-25 14:20:08,084 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3513 states and 3892 transitions.
[2020-11-25 14:20:08,087 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:20:08,087 INFO  L728         BuchiCegarLoop]: Abstraction has 3513 states and 3892 transitions.
[2020-11-25 14:20:08,090 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3513 states and 3892 transitions.
[2020-11-25 14:20:08,112 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3513 to 3077.
[2020-11-25 14:20:08,113 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3077 states.
[2020-11-25 14:20:08,115 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3077 states to 3077 states and 3344 transitions.
[2020-11-25 14:20:08,115 INFO  L751         BuchiCegarLoop]: Abstraction has 3077 states and 3344 transitions.
[2020-11-25 14:20:08,116 INFO  L631         BuchiCegarLoop]: Abstraction has 3077 states and 3344 transitions.
[2020-11-25 14:20:08,116 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 14:20:08,116 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3077 states and 3344 transitions.
[2020-11-25 14:20:08,119 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:20:08,119 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:20:08,119 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:20:08,121 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:20:08,121 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5423]              assume null == 0;
[L5424]  CALL        call this := FreshRefGenerator__success();
[L2697]              havoc newRef;
[L2698]              assume Alloc[newRef] == false;
[L2699]              Alloc[newRef] := true;
[L2700]              assume newRef != null;
[L5424]  RET         call this := FreshRefGenerator__success();
[L5425]              assume now >= 0;
[L5426]              assume DType[this] == DplatformToken;
[L5427]              assume msgvalue_MSG == 0;
[L5428]              gas := gas - 53000;
[L5429]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1557]              havoc __exception;
[L1558]              revert := false;
[L1559]  COND FALSE  !(__exception)
[L1599]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3575]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3576]  COND FALSE  !(revert)
[L3579]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L2931]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2932]  COND FALSE  !(revert)
[L2935]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2907]              assume msgsender_MSG != null;
[L2908]              Balance[this] := 0;
[L2909]              _balances_ERC20[this] := zeroRefintArr();
[L2910]              sum__balances0[this] := 0;
[L2911]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2912]              sum__allowed1[this] := 0;
[L2913]              _totalSupply_ERC20[this] := 0;
[L2935]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]  COND FALSE  !(revert)
[L3579]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3580]  COND FALSE  !(revert)
[L3583]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3427]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3427]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3428]  COND FALSE  !(revert)
[L3431]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3402]              assume msgsender_MSG != null;
[L3403]              Balance[this] := 0;
[L3404]              _name_ERC20Detailed[this] := -1774930639;
[L3405]              _symbol_ERC20Detailed[this] := -1774930639;
[L3406]              _decimals_ERC20Detailed[this] := 0;
[L3408]              _name_ERC20Detailed[this] := name_s652;
[L3409]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3410]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3431]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3432]  COND FALSE  !(revert)
[L3583]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3584]  COND FALSE  !(revert)
[L3587]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3516]              assume msgsender_MSG != null;
[L3517]              Balance[this] := 0;
[L3518]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3520]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3521]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3522]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3525]              quantity_DplatformToken[this] := 0;
[L3526]              balances_DplatformToken[this] := zeroRefintArr();
[L3527]              sum_balances2[this] := 0;
[L3528]              owner_DplatformToken[this] := null;
[L3529]              startTime_DplatformToken[this] := 0;
[L3530]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3531]              sum_monthsTimestamp3[this] := 0;
[L3532]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3533]              fibseries_DplatformToken[this] := zerointintArr();
[L3534]              sum_fibseries4[this] := 0;
[L3535]              operatingTime_DplatformToken[this] := 0;
[L3537]  COND TRUE   DType[this] == DplatformToken
[L3538]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3265]              __var_10 := null;
[L3266]  COND FALSE  !(!(account_s537 != null))
[L3270]  CALL        call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L2862]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2863]  COND FALSE  !(!(c_s173 >= a_s173))
[L2867]              __ret_0_ := c_s173;
[L3270]  RET         call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L3271]  COND FALSE  !(revert)
[L3274]              _totalSupply_ERC20[this] := __var_11;
[L3275]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L2862]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2863]  COND FALSE  !(!(c_s173 >= a_s173))
[L2867]              __ret_0_ := c_s173;
[L3275]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L3276]  COND FALSE  !(revert)
[L3279]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s537];
[L3280]              _balances_ERC20[this][account_s537] := __var_12;
[L3281]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s537];
[L3282]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3538]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3539]  COND FALSE  !(revert)
[L3545]              owner_DplatformToken[this] := msgsender_MSG;
[L3546]              sum_balances2[this] := sum_balances2[this] - balances_DplatformToken[this][owner_DplatformToken[this]];
[L3547]              balances_DplatformToken[this][owner_DplatformToken[this]] := totalDPOM_DplatformToken[this];
[L3548]              sum_balances2[this] := sum_balances2[this] + balances_DplatformToken[this][owner_DplatformToken[this]];
[L3549]              quantity_DplatformToken[this] := 0;
[L3550]              startTime_DplatformToken[this] := 1556647200;
[L3587]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3588]  COND FALSE  !(revert)
[L1599]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1600]              assume !revert && gas >= 0;
[L5429]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5430]              assume !revert && gas >= 0;
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND TRUE   choice == 14
[L5328]              gas := gas - 21000;
[L5329]  COND TRUE   gas >= 0
[L5330]              assume value_s302 >= 0 && value_s302 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5331]              assume msgvalue_MSG == 0;
[L5332]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s302;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L746]               havoc __exception;
[L747]               revert := false;
[L748]   COND FALSE  !(__exception)
[L788]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3033]              __var_1 := null;
[L3034]  COND FALSE  !(!(spender_s302 != null))
[L3038]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] - _allowed_ERC20[this][msgsender_MSG][spender_s302];
[L3039]              _allowed_ERC20[this][msgsender_MSG][spender_s302] := value_s302;
[L3040]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] + _allowed_ERC20[this][msgsender_MSG][spender_s302];
[L3041]              assert { :EventEmitted "Approval_ERC20" } true;
[L3042]              __ret_0_ := true;
[L788]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L789]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s302] == value_s302) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L5332]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L5433]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND TRUE   choice == 14
[L5328]              gas := gas - 21000;
[L5329]  COND TRUE   gas >= 0
[L5330]              assume value_s302 >= 0 && value_s302 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5331]              assume msgvalue_MSG == 0;
[L5332]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s302;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L746]               havoc __exception;
[L747]               revert := false;
[L748]   COND FALSE  !(__exception)
[L788]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3033]              __var_1 := null;
[L3034]  COND FALSE  !(!(spender_s302 != null))
[L3038]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] - _allowed_ERC20[this][msgsender_MSG][spender_s302];
[L3039]              _allowed_ERC20[this][msgsender_MSG][spender_s302] := value_s302;
[L3040]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] + _allowed_ERC20[this][msgsender_MSG][spender_s302];
[L3041]              assert { :EventEmitted "Approval_ERC20" } true;
[L3042]              __ret_0_ := true;
[L788]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L789]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s302] == value_s302) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L5332]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L5433]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:20:08,125 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:20:08,126 INFO  L82        PathProgramCache]: Analyzing trace with hash -1353744074, now seen corresponding path program 1 times
[2020-11-25 14:20:08,126 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:20:08,157 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:20:08,317 INFO  L134       CoverageAnalysis]: Checked inductivity of 35 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 35 trivial. 0 not checked.
[2020-11-25 14:20:08,317 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:20:08,318 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 14:20:08,318 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:20:08,318 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 14:20:08,318 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=27, Invalid=155, Unknown=0, NotChecked=0, Total=182
[2020-11-25 14:20:08,319 INFO  L87              Difference]: Start difference. First operand 3077 states and 3344 transitions. cyclomatic complexity: 277 Second operand 14 states.
[2020-11-25 14:20:10,055 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:20:10,056 INFO  L93              Difference]: Finished difference Result 3234 states and 3523 transitions.
[2020-11-25 14:20:10,056 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-25 14:20:10,056 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3234 states and 3523 transitions.
[2020-11-25 14:20:10,064 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 14:20:10,091 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3234 states to 3234 states and 3523 transitions.
[2020-11-25 14:20:10,091 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 869
[2020-11-25 14:20:10,092 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 869
[2020-11-25 14:20:10,093 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3234 states and 3523 transitions.
[2020-11-25 14:20:10,096 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:20:10,096 INFO  L728         BuchiCegarLoop]: Abstraction has 3234 states and 3523 transitions.
[2020-11-25 14:20:10,100 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3234 states and 3523 transitions.
[2020-11-25 14:20:10,125 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3234 to 3186.
[2020-11-25 14:20:10,125 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3186 states.
[2020-11-25 14:20:10,128 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3186 states to 3186 states and 3466 transitions.
[2020-11-25 14:20:10,128 INFO  L751         BuchiCegarLoop]: Abstraction has 3186 states and 3466 transitions.
[2020-11-25 14:20:10,128 INFO  L631         BuchiCegarLoop]: Abstraction has 3186 states and 3466 transitions.
[2020-11-25 14:20:10,128 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 14:20:10,128 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3186 states and 3466 transitions.
[2020-11-25 14:20:10,131 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 14:20:10,132 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:20:10,132 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:20:10,133 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:20:10,134 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5423]              assume null == 0;
[L5424]  CALL        call this := FreshRefGenerator__success();
[L2697]              havoc newRef;
[L2698]              assume Alloc[newRef] == false;
[L2699]              Alloc[newRef] := true;
[L2700]              assume newRef != null;
[L5424]  RET         call this := FreshRefGenerator__success();
[L5425]              assume now >= 0;
[L5426]              assume DType[this] == DplatformToken;
[L5427]              assume msgvalue_MSG == 0;
[L5428]              gas := gas - 53000;
[L5429]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1557]              havoc __exception;
[L1558]              revert := false;
[L1559]  COND FALSE  !(__exception)
[L1599]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3575]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3576]  COND FALSE  !(revert)
[L3579]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L2931]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2932]  COND FALSE  !(revert)
[L2935]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2907]              assume msgsender_MSG != null;
[L2908]              Balance[this] := 0;
[L2909]              _balances_ERC20[this] := zeroRefintArr();
[L2910]              sum__balances0[this] := 0;
[L2911]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2912]              sum__allowed1[this] := 0;
[L2913]              _totalSupply_ERC20[this] := 0;
[L2935]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]  COND FALSE  !(revert)
[L3579]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3580]  COND FALSE  !(revert)
[L3583]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3427]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3427]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3428]  COND FALSE  !(revert)
[L3431]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3402]              assume msgsender_MSG != null;
[L3403]              Balance[this] := 0;
[L3404]              _name_ERC20Detailed[this] := -1774930639;
[L3405]              _symbol_ERC20Detailed[this] := -1774930639;
[L3406]              _decimals_ERC20Detailed[this] := 0;
[L3408]              _name_ERC20Detailed[this] := name_s652;
[L3409]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3410]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3431]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3432]  COND FALSE  !(revert)
[L3583]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3584]  COND FALSE  !(revert)
[L3587]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3516]              assume msgsender_MSG != null;
[L3517]              Balance[this] := 0;
[L3518]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3520]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3521]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3522]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3525]              quantity_DplatformToken[this] := 0;
[L3526]              balances_DplatformToken[this] := zeroRefintArr();
[L3527]              sum_balances2[this] := 0;
[L3528]              owner_DplatformToken[this] := null;
[L3529]              startTime_DplatformToken[this] := 0;
[L3530]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3531]              sum_monthsTimestamp3[this] := 0;
[L3532]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3533]              fibseries_DplatformToken[this] := zerointintArr();
[L3534]              sum_fibseries4[this] := 0;
[L3535]              operatingTime_DplatformToken[this] := 0;
[L3537]  COND TRUE   DType[this] == DplatformToken
[L3538]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3265]              __var_10 := null;
[L3266]  COND FALSE  !(!(account_s537 != null))
[L3270]  CALL        call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L2862]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2863]  COND FALSE  !(!(c_s173 >= a_s173))
[L2867]              __ret_0_ := c_s173;
[L3270]  RET         call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L3271]  COND FALSE  !(revert)
[L3274]              _totalSupply_ERC20[this] := __var_11;
[L3275]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L2862]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2863]  COND FALSE  !(!(c_s173 >= a_s173))
[L2867]              __ret_0_ := c_s173;
[L3275]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L3276]  COND FALSE  !(revert)
[L3279]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s537];
[L3280]              _balances_ERC20[this][account_s537] := __var_12;
[L3281]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s537];
[L3282]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3538]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3539]  COND FALSE  !(revert)
[L3545]              owner_DplatformToken[this] := msgsender_MSG;
[L3546]              sum_balances2[this] := sum_balances2[this] - balances_DplatformToken[this][owner_DplatformToken[this]];
[L3547]              balances_DplatformToken[this][owner_DplatformToken[this]] := totalDPOM_DplatformToken[this];
[L3548]              sum_balances2[this] := sum_balances2[this] + balances_DplatformToken[this][owner_DplatformToken[this]];
[L3549]              quantity_DplatformToken[this] := 0;
[L3550]              startTime_DplatformToken[this] := 1556647200;
[L3587]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3588]  COND FALSE  !(revert)
[L1599]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1600]              assume !revert && gas >= 0;
[L5429]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5430]              assume !revert && gas >= 0;
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND TRUE   choice == 14
[L5328]              gas := gas - 21000;
[L5329]  COND TRUE   gas >= 0
[L5330]              assume value_s302 >= 0 && value_s302 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5331]              assume msgvalue_MSG == 0;
[L5332]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s302;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L746]               havoc __exception;
[L747]               revert := false;
[L748]   COND TRUE   __exception
[L749]               __tmp__Balance := Balance;
[L750]               __tmp__DType := DType;
[L751]               __tmp__Alloc := Alloc;
[L752]               __tmp__balance_ADDR := balance_ADDR;
[L753]               __tmp__M_Ref_int := M_Ref_int;
[L754]               __tmp__sum__balances0 := sum__balances0;
[L755]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L756]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L757]               __tmp__sum__allowed1 := sum__allowed1;
[L758]               __tmp__sum_balances2 := sum_balances2;
[L759]               __tmp__M_int_int := M_int_int;
[L760]               __tmp__sum_monthsTimestamp3 := sum_monthsTimestamp3;
[L761]               __tmp__sum_fibseries4 := sum_fibseries4;
[L762]               __tmp__Length := Length;
[L763]               __tmp__now := now;
[L764]               __tmp___balances_ERC20 := _balances_ERC20;
[L765]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L766]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L767]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L768]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L769]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L770]               __tmp__totalDPOM_DplatformToken := totalDPOM_DplatformToken;
[L771]               __tmp__INITIAL_SUPPLY_DplatformToken := INITIAL_SUPPLY_DplatformToken;
[L772]               __tmp__FIRST_YEAR_PERCENTAGE_DplatformToken := FIRST_YEAR_PERCENTAGE_DplatformToken;
[L773]               __tmp__SECOND_YEAR_PERCENTAGE_DplatformToken := SECOND_YEAR_PERCENTAGE_DplatformToken;
[L774]               __tmp__THIRD_YEAR_PERCENTAGE_DplatformToken := THIRD_YEAR_PERCENTAGE_DplatformToken;
[L775]               __tmp__FOURTH_YEAR_PERCENTAGE_DplatformToken := FOURTH_YEAR_PERCENTAGE_DplatformToken;
[L776]               __tmp__FIFTH_YEAR_PERCENTAGE_DplatformToken := FIFTH_YEAR_PERCENTAGE_DplatformToken;
[L777]               __tmp__quantity_DplatformToken := quantity_DplatformToken;
[L778]               __tmp__balances_DplatformToken := balances_DplatformToken;
[L779]               __tmp__owner_DplatformToken := owner_DplatformToken;
[L780]               __tmp__startTime_DplatformToken := startTime_DplatformToken;
[L781]               __tmp__monthsTimestamp_DplatformToken := monthsTimestamp_DplatformToken;
[L782]               __tmp__Length_fibseries_DplatformToken_lvl0 := Length_fibseries_DplatformToken_lvl0;
[L783]               __tmp__fibseries_DplatformToken := fibseries_DplatformToken;
[L784]               __tmp__operatingTime_DplatformToken := operatingTime_DplatformToken;
[L785]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3018]              __var_1 := null;
[L3019]  COND TRUE   !(spender_s302 != null)
[L3020]              revert := true;
[L785]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L786]               assume revert || gas < 0;
[L5332]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L5433]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND TRUE   choice == 14
[L5328]              gas := gas - 21000;
[L5329]  COND TRUE   gas >= 0
[L5330]              assume value_s302 >= 0 && value_s302 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5331]              assume msgvalue_MSG == 0;
[L5332]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s302;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L746]               havoc __exception;
[L747]               revert := false;
[L748]   COND TRUE   __exception
[L749]               __tmp__Balance := Balance;
[L750]               __tmp__DType := DType;
[L751]               __tmp__Alloc := Alloc;
[L752]               __tmp__balance_ADDR := balance_ADDR;
[L753]               __tmp__M_Ref_int := M_Ref_int;
[L754]               __tmp__sum__balances0 := sum__balances0;
[L755]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L756]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L757]               __tmp__sum__allowed1 := sum__allowed1;
[L758]               __tmp__sum_balances2 := sum_balances2;
[L759]               __tmp__M_int_int := M_int_int;
[L760]               __tmp__sum_monthsTimestamp3 := sum_monthsTimestamp3;
[L761]               __tmp__sum_fibseries4 := sum_fibseries4;
[L762]               __tmp__Length := Length;
[L763]               __tmp__now := now;
[L764]               __tmp___balances_ERC20 := _balances_ERC20;
[L765]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L766]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L767]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L768]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L769]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L770]               __tmp__totalDPOM_DplatformToken := totalDPOM_DplatformToken;
[L771]               __tmp__INITIAL_SUPPLY_DplatformToken := INITIAL_SUPPLY_DplatformToken;
[L772]               __tmp__FIRST_YEAR_PERCENTAGE_DplatformToken := FIRST_YEAR_PERCENTAGE_DplatformToken;
[L773]               __tmp__SECOND_YEAR_PERCENTAGE_DplatformToken := SECOND_YEAR_PERCENTAGE_DplatformToken;
[L774]               __tmp__THIRD_YEAR_PERCENTAGE_DplatformToken := THIRD_YEAR_PERCENTAGE_DplatformToken;
[L775]               __tmp__FOURTH_YEAR_PERCENTAGE_DplatformToken := FOURTH_YEAR_PERCENTAGE_DplatformToken;
[L776]               __tmp__FIFTH_YEAR_PERCENTAGE_DplatformToken := FIFTH_YEAR_PERCENTAGE_DplatformToken;
[L777]               __tmp__quantity_DplatformToken := quantity_DplatformToken;
[L778]               __tmp__balances_DplatformToken := balances_DplatformToken;
[L779]               __tmp__owner_DplatformToken := owner_DplatformToken;
[L780]               __tmp__startTime_DplatformToken := startTime_DplatformToken;
[L781]               __tmp__monthsTimestamp_DplatformToken := monthsTimestamp_DplatformToken;
[L782]               __tmp__Length_fibseries_DplatformToken_lvl0 := Length_fibseries_DplatformToken_lvl0;
[L783]               __tmp__fibseries_DplatformToken := fibseries_DplatformToken;
[L784]               __tmp__operatingTime_DplatformToken := operatingTime_DplatformToken;
[L785]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3018]              __var_1 := null;
[L3019]  COND TRUE   !(spender_s302 != null)
[L3020]              revert := true;
[L785]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L786]               assume revert || gas < 0;
[L5332]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L5433]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:20:10,140 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:20:10,140 INFO  L82        PathProgramCache]: Analyzing trace with hash 507943306, now seen corresponding path program 1 times
[2020-11-25 14:20:10,141 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:20:10,154 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:20:10,170 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:20:10,242 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:20:10,243 INFO  L82        PathProgramCache]: Analyzing trace with hash 2074568044, now seen corresponding path program 1 times
[2020-11-25 14:20:10,243 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:20:10,247 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:20:10,252 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:20:10,262 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:20:10,262 INFO  L82        PathProgramCache]: Analyzing trace with hash 1645745717, now seen corresponding path program 1 times
[2020-11-25 14:20:10,263 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:20:10,278 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:20:10,297 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.002s / 0.002s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.003s / 0.005s total
Resizing node table from 6271 to 12541
[2020-11-25 14:20:10,587 WARN  L188               SmtUtils]: Spent 120.00 ms on a formula simplification. DAG size of input: 139 DAG size of output: 133
[2020-11-25 14:20:10,779 WARN  L188               SmtUtils]: Spent 190.00 ms on a formula simplification that was a NOOP. DAG size: 360
Garbage collection #1: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #2: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #3: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #4: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #5: 2179 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2179 to 4357
Garbage collection #6: 4357 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 4357 to 8713
Garbage collection #7: 8713 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 8713 to 17419
[2020-11-25 14:20:11,394 WARN  L188               SmtUtils]: Spent 586.00 ms on a formula simplification. DAG size of input: 282 DAG size of output: 282
[2020-11-25 14:20:12,279 WARN  L188               SmtUtils]: Spent 882.00 ms on a formula simplification. DAG size of input: 331 DAG size of output: 326
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 15859 to 31699
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 8053 to 16103
[2020-11-25 14:20:12,512 WARN  L188               SmtUtils]: Spent 206.00 ms on a formula simplification. DAG size of input: 185 DAG size of output: 179
[2020-11-25 14:20:12,820 WARN  L188               SmtUtils]: Spent 306.00 ms on a formula simplification that was a NOOP. DAG size: 426
Garbage collection #1: 167 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 167 to 331
Garbage collection #2: 331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 331 to 661
Garbage collection #3: 661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 661 to 1321
Garbage collection #4: 1321 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1321 to 2633
Garbage collection #5: 2633 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2633 to 5261
Garbage collection #6: 5261 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5261 to 10513
Garbage collection #7: 10513 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 10513 to 21023
[2020-11-25 14:20:13,396 WARN  L188               SmtUtils]: Spent 563.00 ms on a formula simplification. DAG size of input: 335 DAG size of output: 335
[2020-11-25 14:20:13,648 WARN  L188               SmtUtils]: Spent 250.00 ms on a formula simplification that was a NOOP. DAG size: 335
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 15859 to 31699
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-25 14:20:13,794 WARN  L188               SmtUtils]: Spent 129.00 ms on a formula simplification. DAG size of input: 177 DAG size of output: 177
[2020-11-25 14:20:13,803 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 14:20:14,139 WARN  L188               SmtUtils]: Spent 177.00 ms on a formula simplification. DAG size of input: 184 DAG size of output: 182
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-25 14:20:14,638 WARN  L188               SmtUtils]: Spent 308.00 ms on a formula simplification. DAG size of input: 283 DAG size of output: 274
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2647 to 5281
[2020-11-25 14:20:14,852 WARN  L188               SmtUtils]: Spent 163.00 ms on a formula simplification that was a NOOP. DAG size: 272
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 14:20:14,956 WARN  L188               SmtUtils]: Spent 101.00 ms on a formula simplification that was a NOOP. DAG size: 216
[2020-11-25 14:20:15,133 WARN  L188               SmtUtils]: Spent 175.00 ms on a formula simplification. DAG size of input: 221 DAG size of output: 220
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 14:20:15,462 WARN  L188               SmtUtils]: Spent 283.00 ms on a formula simplification that was a NOOP. DAG size: 455
Garbage collection #1: 167 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 167 to 331
Garbage collection #2: 331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 331 to 661
Garbage collection #3: 661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 661 to 1321
Garbage collection #4: 1321 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1321 to 2633
Garbage collection #5: 2633 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2633 to 5261
Garbage collection #6: 5261 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5261 to 10513
Garbage collection #7: 10513 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10513 to 21023
[2020-11-25 14:20:15,647 WARN  L188               SmtUtils]: Spent 180.00 ms on a formula simplification that was a NOOP. DAG size: 399
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
[2020-11-25 14:20:15,903 WARN  L188               SmtUtils]: Spent 140.00 ms on a formula simplification that was a NOOP. DAG size: 360
Garbage collection #1: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #2: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #3: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #4: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #5: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #6: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #7: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
[2020-11-25 14:20:16,452 WARN  L188               SmtUtils]: Spent 535.00 ms on a formula simplification. DAG size of input: 282 DAG size of output: 282
[2020-11-25 14:20:17,277 WARN  L188               SmtUtils]: Spent 822.00 ms on a formula simplification. DAG size of input: 330 DAG size of output: 326
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-25 14:20:17,450 WARN  L188               SmtUtils]: Spent 153.00 ms on a formula simplification. DAG size of input: 185 DAG size of output: 179
[2020-11-25 14:20:17,690 WARN  L188               SmtUtils]: Spent 238.00 ms on a formula simplification that was a NOOP. DAG size: 426
Garbage collection #1: 167 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 167 to 331
Garbage collection #2: 331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 331 to 661
Garbage collection #3: 661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 661 to 1321
Garbage collection #4: 1321 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1321 to 2633
Garbage collection #5: 2633 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2633 to 5261
Garbage collection #6: 5261 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5261 to 10513
Garbage collection #7: 10513 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10513 to 21023
[2020-11-25 14:20:18,233 WARN  L188               SmtUtils]: Spent 532.00 ms on a formula simplification. DAG size of input: 335 DAG size of output: 335
[2020-11-25 14:20:20,650 WARN  L188               SmtUtils]: Spent 2.41 s on a formula simplification. DAG size of input: 683 DAG size of output: 678
Garbage collection #1: 269 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 269 to 523
Garbage collection #2: 523 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 523 to 1039
Garbage collection #3: 1039 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1039 to 2069
Garbage collection #4: 2069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2069 to 4133
Garbage collection #5: 4133 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4133 to 8263
Garbage collection #6: 8263 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8263 to 16519
Garbage collection #7: 16519 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 16519 to 33037
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 14:20:21,166 WARN  L188               SmtUtils]: Spent 485.00 ms on a formula simplification. DAG size of input: 285 DAG size of output: 285
[2020-11-25 14:20:21,668 WARN  L188               SmtUtils]: Spent 463.00 ms on a formula simplification that was a NOOP. DAG size: 471
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 9973 to 19937
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
[2020-11-25 14:20:22,142 WARN  L188               SmtUtils]: Spent 462.00 ms on a formula simplification. DAG size of input: 285 DAG size of output: 285
[2020-11-25 14:20:23,182 WARN  L188               SmtUtils]: Spent 1.04 s on a formula simplification. DAG size of input: 473 DAG size of output: 472
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #1: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #2: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #3: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #4: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #5: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #6: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #7: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #8: 21107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 21107 to 42209
[2020-11-25 14:20:24,717 WARN  L188               SmtUtils]: Spent 1.52 s on a formula simplification. DAG size of input: 490 DAG size of output: 482
[2020-11-25 14:20:24,735 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:20:24,758 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:20:24,768 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:20:24 BasicIcfg
[2020-11-25 14:20:24,768 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 14:20:24,768 INFO  L168              Benchmark]: Toolchain (without parser) took 20971.09 ms. Allocated memory was 1.0 GB in the beginning and 2.4 GB in the end (delta: 1.4 GB). Free memory was 935.2 MB in the beginning and 1.0 GB in the end (delta: -69.9 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
[2020-11-25 14:20:24,769 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 14:20:24,769 INFO  L168              Benchmark]: Boogie Preprocessor took 100.54 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 14:20:24,769 INFO  L168              Benchmark]: UtopiaSpecLang took 63.02 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 14:20:24,770 INFO  L168              Benchmark]: Boogie Printer took 17.39 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.3 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 14:20:24,770 INFO  L168              Benchmark]: RCFGBuilder took 805.85 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 774.1 MB in the end (delta: 134.2 MB). Peak memory consumption was 134.2 MB. Max. memory is 15.3 GB.
[2020-11-25 14:20:24,770 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.61 ms. Allocated memory is still 1.0 GB. Free memory was 774.1 MB in the beginning and 765.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 14:20:24,770 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1512.23 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 220.7 MB). Free memory was 765.2 MB in the beginning and 842.7 MB in the end (delta: -77.5 MB). Peak memory consumption was 165.0 MB. Max. memory is 15.3 GB.
[2020-11-25 14:20:24,771 INFO  L168              Benchmark]: BlockEncodingV2 took 157.53 ms. Allocated memory is still 1.2 GB. Free memory was 842.7 MB in the beginning and 766.9 MB in the end (delta: 75.8 MB). Peak memory consumption was 75.8 MB. Max. memory is 15.3 GB.
[2020-11-25 14:20:24,771 INFO  L168              Benchmark]: BuchiAutomizer took 18273.72 ms. Allocated memory was 1.2 GB in the beginning and 2.4 GB in the end (delta: 1.1 GB). Free memory was 766.9 MB in the beginning and 1.0 GB in the end (delta: -238.2 MB). Peak memory consumption was 1.0 GB. Max. memory is 15.3 GB.
[2020-11-25 14:20:24,773 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4582 locations, 7953 edges
  - StatisticsResult: Encoded RCFG
    4514 locations, 7769 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 100.54 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 63.02 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 17.39 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.3 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 805.85 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 774.1 MB in the end (delta: 134.2 MB). Peak memory consumption was 134.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.61 ms. Allocated memory is still 1.0 GB. Free memory was 774.1 MB in the beginning and 765.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1512.23 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 220.7 MB). Free memory was 765.2 MB in the beginning and 842.7 MB in the end (delta: -77.5 MB). Peak memory consumption was 165.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 157.53 ms. Allocated memory is still 1.2 GB. Free memory was 842.7 MB in the beginning and 766.9 MB in the end (delta: 75.8 MB). Peak memory consumption was 75.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 18273.72 ms. Allocated memory was 1.2 GB in the beginning and 2.4 GB in the end (delta: 1.1 GB). Free memory was 766.9 MB in the beginning and 1.0 GB in the end (delta: -238.2 MB). Peak memory consumption was 1.0 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1961 locations, 2479 edges
  - StatisticsResult: BuchiProgram size
    4582 locations, 7953 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 14 locations. The remainder module has 3186 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 18.2s and 6 iterations.  TraceHistogramMax:3. Analysis of lassos took 15.3s. Construction of modules took 1.5s. BÃ¼chi inclusion checks took 0.7s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 976 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3191 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 17355 SDtfs, 10148 SDslu, 32672 SDs, 0 SdLazy, 25688 SolverSat, 2068 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.5s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(390000000000000000000000014) = (new DplatformToken)({from : 390000000000000000000000013});
[L1557]              havoc __exception;
[L1558]              revert := false;
[L1559]  COND FALSE  !(__exception)
[L1599]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3575]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3576]  COND FALSE  !(revert)
[L3579]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L2931]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2932]  COND FALSE  !(revert)
[L2935]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2907]              assume msgsender_MSG != null;
[L2908]              Balance[this] := 0;
[L2909]              _balances_ERC20[this] := zeroRefintArr();
[L2910]              sum__balances0[this] := 0;
[L2911]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2912]              sum__allowed1[this] := 0;
[L2913]              _totalSupply_ERC20[this] := 0;
[L2935]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]  COND FALSE  !(revert)
[L3579]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3580]  COND FALSE  !(revert)
[L3583]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3427]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3427]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3428]  COND FALSE  !(revert)
[L3431]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3402]              assume msgsender_MSG != null;
[L3403]              Balance[this] := 0;
[L3404]              _name_ERC20Detailed[this] := -1774930639;
[L3405]              _symbol_ERC20Detailed[this] := -1774930639;
[L3406]              _decimals_ERC20Detailed[this] := 0;
[L3408]              _name_ERC20Detailed[this] := name_s652;
[L3409]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3410]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3431]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3432]  COND FALSE  !(revert)
[L3583]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3584]  COND FALSE  !(revert)
[L3587]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3516]              assume msgsender_MSG != null;
[L3517]              Balance[this] := 0;
[L3518]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3520]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3521]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3522]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3525]              quantity_DplatformToken[this] := 0;
[L3526]              balances_DplatformToken[this] := zeroRefintArr();
[L3527]              sum_balances2[this] := 0;
[L3528]              owner_DplatformToken[this] := null;
[L3529]              startTime_DplatformToken[this] := 0;
[L3530]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3531]              sum_monthsTimestamp3[this] := 0;
[L3532]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3533]              fibseries_DplatformToken[this] := zerointintArr();
[L3534]              sum_fibseries4[this] := 0;
[L3535]              operatingTime_DplatformToken[this] := 0;
[L3537]  COND TRUE   DType[this] == DplatformToken
[L3538]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3265]              __var_10 := null;
[L3266]  COND FALSE  !(!(account_s537 != null))
[L3270]  CALL        call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L2862]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2863]  COND FALSE  !(!(c_s173 >= a_s173))
[L2867]              __ret_0_ := c_s173;
[L3270]  RET         call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L3271]  COND FALSE  !(revert)
[L3274]              _totalSupply_ERC20[this] := __var_11;
[L3275]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L2862]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2863]  COND FALSE  !(!(c_s173 >= a_s173))
[L2867]              __ret_0_ := c_s173;
[L3275]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L3276]  COND FALSE  !(revert)
[L3279]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s537];
[L3280]              _balances_ERC20[this][account_s537] := __var_12;
[L3281]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s537];
[L3282]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3538]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3539]  COND FALSE  !(revert)
[L3545]              owner_DplatformToken[this] := msgsender_MSG;
[L3546]              sum_balances2[this] := sum_balances2[this] - balances_DplatformToken[this][owner_DplatformToken[this]];
[L3547]              balances_DplatformToken[this][owner_DplatformToken[this]] := totalDPOM_DplatformToken[this];
[L3548]              sum_balances2[this] := sum_balances2[this] + balances_DplatformToken[this][owner_DplatformToken[this]];
[L3549]              quantity_DplatformToken[this] := 0;
[L3550]              startTime_DplatformToken[this] := 1556647200;
[L3587]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3588]  COND FALSE  !(revert)
[L1599]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1600]              assume !revert && gas >= 0;
[L5429]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
ERC20(390000000000000000000000014).approve~address~uint256.gas(3979002)({from : 390000000000000000000000008, spender : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume p1 != msgsender_MSG || p2 != spender_s302;
[L3]                call_approve_ERC200 := true;
[L3]                call_approve_ERC200 := false;
[L3]                revert := revert_hold;
[L746]              havoc __exception;
[L747]              revert := false;
[L748]   COND TRUE  __exception
[L749]              __tmp__Balance := Balance;
[L750]              __tmp__DType := DType;
[L751]              __tmp__Alloc := Alloc;
[L752]              __tmp__balance_ADDR := balance_ADDR;
[L753]              __tmp__M_Ref_int := M_Ref_int;
[L754]              __tmp__sum__balances0 := sum__balances0;
[L755]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L756]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L757]              __tmp__sum__allowed1 := sum__allowed1;
[L758]              __tmp__sum_balances2 := sum_balances2;
[L759]              __tmp__M_int_int := M_int_int;
[L760]              __tmp__sum_monthsTimestamp3 := sum_monthsTimestamp3;
[L761]              __tmp__sum_fibseries4 := sum_fibseries4;
[L762]              __tmp__Length := Length;
[L763]              __tmp__now := now;
[L764]              __tmp___balances_ERC20 := _balances_ERC20;
[L765]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L766]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L767]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L768]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L769]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L770]              __tmp__totalDPOM_DplatformToken := totalDPOM_DplatformToken;
[L771]              __tmp__INITIAL_SUPPLY_DplatformToken := INITIAL_SUPPLY_DplatformToken;
[L772]              __tmp__FIRST_YEAR_PERCENTAGE_DplatformToken := FIRST_YEAR_PERCENTAGE_DplatformToken;
[L773]              __tmp__SECOND_YEAR_PERCENTAGE_DplatformToken := SECOND_YEAR_PERCENTAGE_DplatformToken;
[L774]              __tmp__THIRD_YEAR_PERCENTAGE_DplatformToken := THIRD_YEAR_PERCENTAGE_DplatformToken;
[L775]              __tmp__FOURTH_YEAR_PERCENTAGE_DplatformToken := FOURTH_YEAR_PERCENTAGE_DplatformToken;
[L776]              __tmp__FIFTH_YEAR_PERCENTAGE_DplatformToken := FIFTH_YEAR_PERCENTAGE_DplatformToken;
[L777]              __tmp__quantity_DplatformToken := quantity_DplatformToken;
[L778]              __tmp__balances_DplatformToken := balances_DplatformToken;
[L779]              __tmp__owner_DplatformToken := owner_DplatformToken;
[L780]              __tmp__startTime_DplatformToken := startTime_DplatformToken;
[L781]              __tmp__monthsTimestamp_DplatformToken := monthsTimestamp_DplatformToken;
[L782]              __tmp__Length_fibseries_DplatformToken_lvl0 := Length_fibseries_DplatformToken_lvl0;
[L783]              __tmp__fibseries_DplatformToken := fibseries_DplatformToken;
[L784]              __tmp__operatingTime_DplatformToken := operatingTime_DplatformToken;
[L785]   CALL       call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3018]             __var_1 := null;
[L3019]  COND TRUE  !(spender_s302 != null)
[L3020]             revert := true;
[L785]   RET        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L786]              assume revert || gas < 0;
[L5332]  RET        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);

Loop:
ERC20(390000000000000000000000014).approve~address~uint256.gas(3979001)({from : 390000000000000000000000010, spender : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume p1 != msgsender_MSG || p2 != spender_s302;
[L3]                call_approve_ERC200 := true;
[L3]                call_approve_ERC200 := false;
[L3]                revert := revert_hold;
[L746]              havoc __exception;
[L747]              revert := false;
[L748]   COND TRUE  __exception
[L749]              __tmp__Balance := Balance;
[L750]              __tmp__DType := DType;
[L751]              __tmp__Alloc := Alloc;
[L752]              __tmp__balance_ADDR := balance_ADDR;
[L753]              __tmp__M_Ref_int := M_Ref_int;
[L754]              __tmp__sum__balances0 := sum__balances0;
[L755]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L756]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L757]              __tmp__sum__allowed1 := sum__allowed1;
[L758]              __tmp__sum_balances2 := sum_balances2;
[L759]              __tmp__M_int_int := M_int_int;
[L760]              __tmp__sum_monthsTimestamp3 := sum_monthsTimestamp3;
[L761]              __tmp__sum_fibseries4 := sum_fibseries4;
[L762]              __tmp__Length := Length;
[L763]              __tmp__now := now;
[L764]              __tmp___balances_ERC20 := _balances_ERC20;
[L765]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L766]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L767]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L768]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L769]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L770]              __tmp__totalDPOM_DplatformToken := totalDPOM_DplatformToken;
[L771]              __tmp__INITIAL_SUPPLY_DplatformToken := INITIAL_SUPPLY_DplatformToken;
[L772]              __tmp__FIRST_YEAR_PERCENTAGE_DplatformToken := FIRST_YEAR_PERCENTAGE_DplatformToken;
[L773]              __tmp__SECOND_YEAR_PERCENTAGE_DplatformToken := SECOND_YEAR_PERCENTAGE_DplatformToken;
[L774]              __tmp__THIRD_YEAR_PERCENTAGE_DplatformToken := THIRD_YEAR_PERCENTAGE_DplatformToken;
[L775]              __tmp__FOURTH_YEAR_PERCENTAGE_DplatformToken := FOURTH_YEAR_PERCENTAGE_DplatformToken;
[L776]              __tmp__FIFTH_YEAR_PERCENTAGE_DplatformToken := FIFTH_YEAR_PERCENTAGE_DplatformToken;
[L777]              __tmp__quantity_DplatformToken := quantity_DplatformToken;
[L778]              __tmp__balances_DplatformToken := balances_DplatformToken;
[L779]              __tmp__owner_DplatformToken := owner_DplatformToken;
[L780]              __tmp__startTime_DplatformToken := startTime_DplatformToken;
[L781]              __tmp__monthsTimestamp_DplatformToken := monthsTimestamp_DplatformToken;
[L782]              __tmp__Length_fibseries_DplatformToken_lvl0 := Length_fibseries_DplatformToken_lvl0;
[L783]              __tmp__fibseries_DplatformToken := fibseries_DplatformToken;
[L784]              __tmp__operatingTime_DplatformToken := operatingTime_DplatformToken;
[L785]   CALL       call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3018]             __var_1 := null;
[L3019]  COND TRUE  !(spender_s302 != null)
[L3020]             revert := true;
[L785]   RET        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L786]              assume revert || gas < 0;
[L5332]  RET        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
