This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 18:15:52,209 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 18:15:52,210 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 18:15:52,221 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 18:15:52,221 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 18:15:52,222 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 18:15:52,223 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 18:15:52,224 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 18:15:52,225 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 18:15:52,226 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 18:15:52,227 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 18:15:52,227 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 18:15:52,227 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 18:15:52,228 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 18:15:52,229 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 18:15:52,229 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 18:15:52,230 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 18:15:52,231 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 18:15:52,232 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 18:15:52,233 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 18:15:52,234 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 18:15:52,235 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 18:15:52,236 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 18:15:52,237 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 18:15:52,237 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 18:15:52,237 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 18:15:52,238 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 18:15:52,238 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 18:15:52,238 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 18:15:52,239 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 18:15:52,239 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 18:15:52,239 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 18:15:52,240 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 18:15:52,240 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 18:15:52,241 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 18:15:52,241 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 18:15:52,242 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 18:15:52,242 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 18:15:52,242 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 18:15:52,242 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 18:15:52,243 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 18:15:52,243 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 18:15:52,250 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 18:15:52,251 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 18:15:52,251 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 18:15:52,251 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 18:15:52,252 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 18:15:52,252 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 18:15:52,252 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 18:15:52,252 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 18:15:52,252 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 18:15:52,252 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 18:15:52,252 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 18:15:52,252 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 18:15:52,252 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 18:15:52,253 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 18:15:52,253 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 18:15:52,253 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 18:15:52,253 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 18:15:52,253 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 18:15:52,253 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 18:15:52,253 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 18:15:52,253 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 18:15:52,253 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 18:15:52,253 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 18:15:52,254 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 18:15:52,254 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 18:15:52,254 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 18:15:52,274 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 18:15:52,284 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 18:15:52,286 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 18:15:52,288 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 18:15:52,288 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 18:15:52,288 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl
[2020-11-25 18:15:52,289 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl'
[2020-11-25 18:15:52,381 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 18:15:52,382 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 18:15:52,383 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 18:15:52,383 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 18:15:52,383 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 18:15:52,400 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:52" (1/1) ...
[2020-11-25 18:15:52,402 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:52" (1/1) ...
[2020-11-25 18:15:52,436 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:52" (1/1) ...
[2020-11-25 18:15:52,437 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:52" (1/1) ...
[2020-11-25 18:15:52,460 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:52" (1/1) ...
[2020-11-25 18:15:52,481 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:52" (1/1) ...
[2020-11-25 18:15:52,490 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:52" (1/1) ...
[2020-11-25 18:15:52,502 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 18:15:52,503 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 18:15:52,503 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 18:15:52,505 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 18:15:52,509 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:52" (1/1) ...
[2020-11-25 18:15:52,527 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowed_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this]) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this]) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 18:15:52,533 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowed_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this]) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this]) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 18:15:52,540 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowed_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this]) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this]) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 18:15:52,546 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=spender_s287 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[spender_s287,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]
[2020-11-25 18:15:52,549 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( __ret_0_==true && _allowed_ERC20[this][msg.sender][spender_s287]==value_s287 ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowed_ERC20[this][p1][p2]==( old(_allowed_ERC20[this][p1][p2]) ) ) && _name_ERC20DetailedChangeable[this]==( old(_name_ERC20DetailedChangeable[this]) ) ) && _symbol_ERC20DetailedChangeable[this]==( old(_symbol_ERC20DetailedChangeable[this]) ) ) && _decimals_ERC20DetailedChangeable[this]==( old(_decimals_ERC20DetailedChangeable[this]) ) ) && _owner_Ownable[this]==( old(_owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[spender_s287,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],IdentifierExpression[value_s287,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20DetailedChangeable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20DetailedChangeable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20DetailedChangeable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20DetailedChangeable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20DetailedChangeable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20DetailedChangeable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]]
[2020-11-25 18:15:52,555 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowed_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this]) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this]) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 18:15:52,556 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_ERC200) ==> ( <>AP(success_approve_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 18:15:52,567 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:15:52 PropertyContainer
[2020-11-25 18:15:52,567 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 18:15:52,568 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 18:15:52,568 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 18:15:52,568 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 18:15:52,569 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:52" (1/2) ...
[2020-11-25 18:15:52,569 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 18:15:52,569 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 18:15:52,588 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:15:52" (2/2) ...
[2020-11-25 18:15:52,588 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 18:15:52,589 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 18:15:52,589 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 18:15:52,589 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 18:15:52,589 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:52" (1/2) ...
[2020-11-25 18:15:52,641 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 18:15:52,641 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 18:15:52,641 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 18:15:52,641 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 18:15:52,642 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 18:15:52,642 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 18:15:52,642 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 18:15:52,642 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 18:15:52,642 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 18:15:52,642 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 18:15:52,642 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 18:15:52,642 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 18:15:52,642 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 18:15:52,642 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 18:15:52,643 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 18:15:52,643 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 18:15:52,643 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 18:15:52,643 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 18:15:52,643 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 18:15:52,644 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 18:15:52,644 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 18:15:52,644 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 18:15:52,644 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 18:15:52,644 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 18:15:52,644 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 18:15:52,644 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 18:15:52,644 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 18:15:52,644 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 18:15:52,644 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 18:15:52,645 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 18:15:52,645 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 18:15:52,645 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 18:15:52,645 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 18:15:52,645 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 18:15:52,645 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 18:15:52,645 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 18:15:52,645 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 18:15:52,645 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 18:15:52,645 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 18:15:52,645 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 18:15:52,646 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 18:15:52,646 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 18:15:52,646 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 18:15:52,646 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 18:15:52,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 18:15:52,646 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 18:15:52,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 18:15:52,646 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable
[2020-11-25 18:15:52,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable
[2020-11-25 18:15:52,646 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_Ownable
[2020-11-25 18:15:52,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_Ownable
[2020-11-25 18:15:52,646 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 18:15:52,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 18:15:52,647 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__success
[2020-11-25 18:15:52,647 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Protected_ERC20Protected_NoBaseCtor__success
[2020-11-25 18:15:52,647 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Protected_ERC20Protected
[2020-11-25 18:15:52,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Protected_ERC20Protected
[2020-11-25 18:15:52,647 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_ERC20Protected__success
[2020-11-25 18:15:52,647 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Protected
[2020-11-25 18:15:52,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Protected
[2020-11-25 18:15:52,647 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Protected
[2020-11-25 18:15:52,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Protected
[2020-11-25 18:15:52,647 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success
[2020-11-25 18:15:52,647 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20DetailedChangeable_ERC20DetailedChangeable
[2020-11-25 18:15:52,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20DetailedChangeable_ERC20DetailedChangeable
[2020-11-25 18:15:52,648 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20DetailedChangeable
[2020-11-25 18:15:52,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20DetailedChangeable
[2020-11-25 18:15:52,648 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20DetailedChangeable
[2020-11-25 18:15:52,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20DetailedChangeable
[2020-11-25 18:15:52,648 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20DetailedChangeable
[2020-11-25 18:15:52,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20DetailedChangeable
[2020-11-25 18:15:52,648 INFO  L130     BoogieDeclarations]: Found specification of procedure setName~string_ERC20DetailedChangeable
[2020-11-25 18:15:52,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure setName~string_ERC20DetailedChangeable
[2020-11-25 18:15:52,648 INFO  L130     BoogieDeclarations]: Found specification of procedure setSymbol~string_ERC20DetailedChangeable
[2020-11-25 18:15:52,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure setSymbol~string_ERC20DetailedChangeable
[2020-11-25 18:15:52,648 INFO  L130     BoogieDeclarations]: Found specification of procedure ISF_ISF_NoBaseCtor__success
[2020-11-25 18:15:52,649 INFO  L130     BoogieDeclarations]: Found specification of procedure ISF_ISF
[2020-11-25 18:15:52,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure ISF_ISF
[2020-11-25 18:15:52,649 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_ISF
[2020-11-25 18:15:52,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_ISF
[2020-11-25 18:15:52,649 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_ISF
[2020-11-25 18:15:52,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_ISF
[2020-11-25 18:15:52,649 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_ISF
[2020-11-25 18:15:52,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_ISF
[2020-11-25 18:15:52,649 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 18:15:52,649 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 18:15:52,649 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 18:15:52,649 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 18:15:52,649 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 18:15:52,649 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 18:15:52,650 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 18:15:52,650 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 18:15:52,650 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 18:15:52,650 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 18:15:52,650 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 18:15:52,650 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 18:15:52,650 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Protected
[2020-11-25 18:15:52,650 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Protected
[2020-11-25 18:15:52,650 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20DetailedChangeable
[2020-11-25 18:15:52,650 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20DetailedChangeable
[2020-11-25 18:15:52,650 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ISF
[2020-11-25 18:15:52,650 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 18:15:52,650 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 18:15:52,650 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 18:15:52,651 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 18:15:52,651 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 18:15:52,651 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 18:15:52,651 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 18:15:52,651 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 18:15:52,651 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:52,651 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:52,651 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:52,651 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:52,651 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:52,652 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 18:15:52,652 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 18:15:52,652 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 18:15:52,652 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 18:15:52,652 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 18:15:52,652 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 18:15:52,652 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 18:15:52,652 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 18:15:52,652 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 18:15:52,652 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 18:15:52,653 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 18:15:52,653 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 18:15:52,653 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 18:15:52,653 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 18:15:52,653 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 18:15:52,653 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 18:15:52,653 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 18:15:52,653 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 18:15:52,653 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 18:15:52,654 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 18:15:52,654 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 18:15:52,654 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 18:15:52,654 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 18:15:52,654 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 18:15:52,654 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 18:15:52,654 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 18:15:52,654 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 18:15:52,654 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 18:15:52,654 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 18:15:52,655 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__success
[2020-11-25 18:15:52,655 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__fail
[2020-11-25 18:15:52,655 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_Ownable__success
[2020-11-25 18:15:52,655 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_Ownable__fail
[2020-11-25 18:15:52,655 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 18:15:52,655 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 18:15:52,655 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 18:15:52,655 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Protected_ERC20Protected_NoBaseCtor__fail
[2020-11-25 18:15:52,655 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Protected_ERC20Protected__success
[2020-11-25 18:15:52,655 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Protected_ERC20Protected__fail
[2020-11-25 18:15:52,655 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_ERC20Protected__fail
[2020-11-25 18:15:52,656 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Protected__success
[2020-11-25 18:15:52,656 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Protected__fail
[2020-11-25 18:15:52,656 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Protected__success
[2020-11-25 18:15:52,656 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Protected__fail
[2020-11-25 18:15:52,656 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__fail
[2020-11-25 18:15:52,656 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20DetailedChangeable_ERC20DetailedChangeable__success
[2020-11-25 18:15:52,656 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20DetailedChangeable_ERC20DetailedChangeable__fail
[2020-11-25 18:15:52,656 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20DetailedChangeable__success
[2020-11-25 18:15:52,656 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20DetailedChangeable__fail
[2020-11-25 18:15:52,656 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20DetailedChangeable__success
[2020-11-25 18:15:52,657 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20DetailedChangeable__fail
[2020-11-25 18:15:52,657 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20DetailedChangeable__success
[2020-11-25 18:15:52,657 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20DetailedChangeable__fail
[2020-11-25 18:15:52,657 INFO  L130     BoogieDeclarations]: Found specification of procedure setName~string_ERC20DetailedChangeable__success
[2020-11-25 18:15:52,657 INFO  L130     BoogieDeclarations]: Found specification of procedure setName~string_ERC20DetailedChangeable__fail
[2020-11-25 18:15:52,657 INFO  L130     BoogieDeclarations]: Found specification of procedure setSymbol~string_ERC20DetailedChangeable__success
[2020-11-25 18:15:52,657 INFO  L130     BoogieDeclarations]: Found specification of procedure setSymbol~string_ERC20DetailedChangeable__fail
[2020-11-25 18:15:52,657 INFO  L130     BoogieDeclarations]: Found specification of procedure ISF_ISF_NoBaseCtor__fail
[2020-11-25 18:15:52,657 INFO  L130     BoogieDeclarations]: Found specification of procedure ISF_ISF__success
[2020-11-25 18:15:52,657 INFO  L130     BoogieDeclarations]: Found specification of procedure ISF_ISF__fail
[2020-11-25 18:15:52,657 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_ISF__success
[2020-11-25 18:15:52,658 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_ISF__fail
[2020-11-25 18:15:52,658 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_ISF__success
[2020-11-25 18:15:52,658 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_ISF__fail
[2020-11-25 18:15:52,658 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_ISF__success
[2020-11-25 18:15:52,658 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_ISF__fail
[2020-11-25 18:15:52,658 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 18:15:52,658 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 18:15:52,658 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 18:15:52,658 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 18:15:52,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 18:15:52,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 18:15:52,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 18:15:52,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 18:15:52,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 18:15:52,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 18:15:52,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 18:15:52,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 18:15:52,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 18:15:52,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 18:15:52,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:52,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 18:15:52,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:52,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 18:15:52,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:52,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 18:15:52,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:52,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 18:15:52,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 18:15:52,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 18:15:52,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 18:15:52,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 18:15:52,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 18:15:52,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 18:15:52,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 18:15:52,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 18:15:52,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 18:15:52,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 18:15:52,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 18:15:52,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 18:15:52,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 18:15:52,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 18:15:52,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 18:15:52,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 18:15:52,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 18:15:52,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 18:15:52,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 18:15:52,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 18:15:52,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 18:15:52,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 18:15:52,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 18:15:52,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 18:15:52,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 18:15:52,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 18:15:52,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 18:15:52,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 18:15:52,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 18:15:52,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 18:15:52,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 18:15:52,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 18:15:52,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 18:15:52,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 18:15:52,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 18:15:52,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 18:15:52,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 18:15:52,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 18:15:52,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__fail
[2020-11-25 18:15:52,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__success
[2020-11-25 18:15:52,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_Ownable__fail
[2020-11-25 18:15:52,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_Ownable__success
[2020-11-25 18:15:52,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 18:15:52,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 18:15:52,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 18:15:52,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__success
[2020-11-25 18:15:52,664 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Protected_ERC20Protected_NoBaseCtor__fail
[2020-11-25 18:15:52,664 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Protected_ERC20Protected_NoBaseCtor__success
[2020-11-25 18:15:52,664 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Protected_ERC20Protected__fail
[2020-11-25 18:15:52,664 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Protected_ERC20Protected__success
[2020-11-25 18:15:52,664 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_ERC20Protected__fail
[2020-11-25 18:15:52,664 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_ERC20Protected__success
[2020-11-25 18:15:52,664 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Protected__fail
[2020-11-25 18:15:52,664 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Protected__success
[2020-11-25 18:15:52,664 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Protected__fail
[2020-11-25 18:15:52,664 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Protected__success
[2020-11-25 18:15:52,664 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__fail
[2020-11-25 18:15:52,664 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success
[2020-11-25 18:15:52,664 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20DetailedChangeable_ERC20DetailedChangeable__fail
[2020-11-25 18:15:52,665 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20DetailedChangeable_ERC20DetailedChangeable__success
[2020-11-25 18:15:52,665 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20DetailedChangeable__fail
[2020-11-25 18:15:52,665 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20DetailedChangeable__success
[2020-11-25 18:15:52,665 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20DetailedChangeable__fail
[2020-11-25 18:15:52,665 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20DetailedChangeable__success
[2020-11-25 18:15:52,665 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20DetailedChangeable__fail
[2020-11-25 18:15:52,665 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20DetailedChangeable__success
[2020-11-25 18:15:52,665 INFO  L138     BoogieDeclarations]: Found implementation of procedure setName~string_ERC20DetailedChangeable__fail
[2020-11-25 18:15:52,665 INFO  L138     BoogieDeclarations]: Found implementation of procedure setName~string_ERC20DetailedChangeable__success
[2020-11-25 18:15:52,665 INFO  L138     BoogieDeclarations]: Found implementation of procedure setSymbol~string_ERC20DetailedChangeable__fail
[2020-11-25 18:15:52,665 INFO  L138     BoogieDeclarations]: Found implementation of procedure setSymbol~string_ERC20DetailedChangeable__success
[2020-11-25 18:15:52,666 INFO  L138     BoogieDeclarations]: Found implementation of procedure ISF_ISF_NoBaseCtor__fail
[2020-11-25 18:15:52,666 INFO  L138     BoogieDeclarations]: Found implementation of procedure ISF_ISF_NoBaseCtor__success
[2020-11-25 18:15:52,666 INFO  L138     BoogieDeclarations]: Found implementation of procedure ISF_ISF__fail
[2020-11-25 18:15:52,666 INFO  L138     BoogieDeclarations]: Found implementation of procedure ISF_ISF__success
[2020-11-25 18:15:52,666 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_ISF__fail
[2020-11-25 18:15:52,666 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_ISF__success
[2020-11-25 18:15:52,666 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_ISF__fail
[2020-11-25 18:15:52,666 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_ISF__success
[2020-11-25 18:15:52,666 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_ISF__fail
[2020-11-25 18:15:52,666 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_ISF__success
[2020-11-25 18:15:52,666 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 18:15:52,666 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 18:15:52,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 18:15:52,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 18:15:52,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 18:15:52,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 18:15:52,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 18:15:52,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 18:15:52,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 18:15:52,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 18:15:52,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 18:15:52,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 18:15:52,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 18:15:52,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 18:15:52,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 18:15:52,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 18:15:52,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Protected
[2020-11-25 18:15:52,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Protected
[2020-11-25 18:15:52,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20DetailedChangeable
[2020-11-25 18:15:52,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20DetailedChangeable
[2020-11-25 18:15:52,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ISF
[2020-11-25 18:15:52,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 18:15:52,668 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 18:15:52,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 18:15:52,918 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:15:52,918 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:15:52,919 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:15:53,141 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:15:53,529 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 18:15:53,529 INFO  L286             CfgBuilder]: Removed 7 assue(true) statements.
[2020-11-25 18:15:53,531 INFO  L202        PluginConnector]: Adding new model ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:15:53 BoogieIcfgContainer
[2020-11-25 18:15:53,531 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:15:52" (2/2) ...
[2020-11-25 18:15:53,532 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 18:15:53,532 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6495976a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:15:53, skipping insertion in model container
[2020-11-25 18:15:53,532 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 18:15:53,532 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 18:15:53,532 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 18:15:53,533 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 18:15:53,534 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:52" (1/3) ...
[2020-11-25 18:15:53,534 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5de02c62 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:15:53, skipping insertion in model container
[2020-11-25 18:15:53,534 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:15:52" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 18:15:53,571 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:15:53 NWAContainer
[2020-11-25 18:15:53,571 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 18:15:53,571 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 18:15:53,571 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 18:15:53,572 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 18:15:53,573 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:15:53" (3/4) ...
[2020-11-25 18:15:53,574 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@8b7aebc and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:15:53, skipping insertion in model container
[2020-11-25 18:15:53,574 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:15:53" (4/4) ...
[2020-11-25 18:15:53,577 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 18:15:53,582 INFO  L110   BuchiProductObserver]: Initial RCFG 2329 locations, 3366 edges
[2020-11-25 18:15:53,582 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 18:15:53,594 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 18:15:55,058 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 18:15:55,066 INFO  L110   BuchiProductObserver]: BuchiProgram size 5982 locations, 11102 edges
[2020-11-25 18:15:55,066 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:15:55 BoogieIcfgContainer
[2020-11-25 18:15:55,066 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 18:15:55,066 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 18:15:55,067 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 18:15:55,068 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 18:15:55,068 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:15:55" (1/1) ...
[2020-11-25 18:15:55,176 INFO  L313           BlockEncoder]: Initial Icfg 5982 locations, 11102 edges
[2020-11-25 18:15:55,176 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 18:15:55,177 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 18:15:55,177 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 18:15:55,177 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 18:15:55,189 INFO  L70    emoveInfeasibleEdges]: Removed 147 edges and 17 locations because of local infeasibility
[2020-11-25 18:15:55,200 INFO  L70        RemoveSinkStates]: Removed 74 edges and 49 locations by removing sink states
[2020-11-25 18:15:55,214 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 18:15:55,219 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 18:15:55,223 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 18:15:55,223 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 18:15:55,226 INFO  L313           BlockEncoder]: Encoded RCFG 5884 locations, 10834 edges
[2020-11-25 18:15:55,226 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:15:55 BasicIcfg
[2020-11-25 18:15:55,226 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 18:15:55,226 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 18:15:55,226 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 18:15:55,228 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 18:15:55,228 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:15:55,228 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:52" (1/6) ...
[2020-11-25 18:15:55,230 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@379cbf9e and model type ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:15:55, skipping insertion in model container
[2020-11-25 18:15:55,230 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:15:55,230 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:15:52" (2/6) ...
[2020-11-25 18:15:55,230 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@379cbf9e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:15:55, skipping insertion in model container
[2020-11-25 18:15:55,230 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:15:55,230 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:15:53" (3/6) ...
[2020-11-25 18:15:55,231 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@379cbf9e and model type ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:15:55, skipping insertion in model container
[2020-11-25 18:15:55,231 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:15:55,231 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:15:53" (4/6) ...
[2020-11-25 18:15:55,231 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@379cbf9e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:15:55, skipping insertion in model container
[2020-11-25 18:15:55,231 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:15:55,231 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:15:55" (5/6) ...
[2020-11-25 18:15:55,231 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@379cbf9e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 06:15:55, skipping insertion in model container
[2020-11-25 18:15:55,231 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:15:55,231 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:15:55" (6/6) ...
[2020-11-25 18:15:55,232 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ISF_0x3f9c0211e9ddfccabd614162ffb768f5a7a8ab38_approve.bpl_BEv2
[2020-11-25 18:15:55,265 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 18:15:55,265 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 18:15:55,265 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 18:15:55,265 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 18:15:55,265 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 18:15:55,265 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 18:15:55,265 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 18:15:55,265 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 18:15:55,265 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 18:15:55,302 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5884 states.
[2020-11-25 18:15:55,360 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:15:55,361 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:15:55,361 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:15:55,367 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:15:55,367 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:15:55,368 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 18:15:55,368 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5884 states.
[2020-11-25 18:15:55,389 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:15:55,389 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:15:55,389 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:15:55,391 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:15:55,391 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6428]              assume null == 0;
[L6429]  CALL        call this := FreshRefGenerator__success();
[L2548]              havoc newRef;
[L2549]              assume Alloc[newRef] == false;
[L2550]              Alloc[newRef] := true;
[L2551]              assume newRef != null;
[L6429]  RET         call this := FreshRefGenerator__success();
[L6430]              assume now >= 0;
[L6431]              assume DType[this] == ISF;
[L6432]              assume msgvalue_MSG == 0;
[L6433]              gas := gas - 53000;
[L6434]  CALL        call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L1614]              havoc __exception;
[L1615]              revert := false;
[L1616]  COND FALSE  !(__exception)
[L1640]  CALL        call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L4045]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4046]  COND TRUE   revert
[L1640]  RET         call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L1641]              assume !revert && gas >= 0;
[L6434]  RET         call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L6435]              assume !revert && gas >= 0;

Loop:
[L6438]  CALL        call CorralChoice_ISF(this);
[L6248]              havoc msgsender_MSG;
[L6249]              havoc msgvalue_MSG;
[L6250]              havoc choice;
[L6251]              havoc to_s717;
[L6252]              havoc value_s717;
[L6253]              havoc __ret_0_transfer;
[L6254]              havoc spender_s287;
[L6255]              havoc value_s287;
[L6256]              havoc __ret_0_approve;
[L6257]              havoc from_s744;
[L6258]              havoc to_s744;
[L6259]              havoc value_s744;
[L6260]              havoc __ret_0_transferFrom;
[L6261]              havoc __ret_0_totalSupply;
[L6262]              havoc owner_s233;
[L6263]              havoc __ret_0_balanceOf;
[L6264]              havoc owner_s249;
[L6265]              havoc spender_s249;
[L6266]              havoc __ret_0_allowance;
[L6267]              havoc spender_s349;
[L6268]              havoc addedValue_s349;
[L6269]              havoc __ret_0_increaseAllowance;
[L6270]              havoc spender_s376;
[L6271]              havoc subtractedValue_s376;
[L6272]              havoc __ret_0_decreaseAllowance;
[L6273]              havoc __ret_0_owner;
[L6274]              havoc __ret_0_isOwner;
[L6275]              havoc newOwner_s659;
[L6276]              havoc name_s794;
[L6277]              havoc symbol_s794;
[L6278]              havoc decimals_s794;
[L6279]              havoc __ret_0_name;
[L6280]              havoc __ret_0_symbol;
[L6281]              havoc __ret_0_decimals;
[L6282]              havoc newName_s837;
[L6283]              havoc newSymbol_s856;
[L6284]              havoc __ret_0_DECIMALS;
[L6285]              havoc __ret_0_INITIAL_SUPPLY;
[L6286]              havoc tmpNow;
[L6287]              havoc gas;
[L6288]              assume gas > 4000000 && gas <= 8000000;
[L6289]              tmpNow := now;
[L6290]              havoc now;
[L6291]              assume now > tmpNow;
[L6292]              assume msgsender_MSG != null;
[L6293]              assume DType[msgsender_MSG] != IERC20;
[L6294]              assume DType[msgsender_MSG] != SafeMath;
[L6295]              assume DType[msgsender_MSG] != ERC20;
[L6296]              assume DType[msgsender_MSG] != Ownable;
[L6297]              assume DType[msgsender_MSG] != ERC20Protected;
[L6298]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6299]              assume DType[msgsender_MSG] != ISF;
[L6300]              Alloc[msgsender_MSG] := true;
[L6301]  COND TRUE   choice == 19
[L6302]              gas := gas - 21000;
[L6303]  COND FALSE  !(gas >= 0)
[L6438]  RET         call CorralChoice_ISF(this);

[2020-11-25 18:15:55,403 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:15:55,403 INFO  L82        PathProgramCache]: Analyzing trace with hash 214157343, now seen corresponding path program 1 times
[2020-11-25 18:15:55,407 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:15:55,424 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:15:55,461 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 18:15:55,463 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:15:55,463 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 18:15:55,835 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:15:55,844 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 18:15:55,845 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 18:15:55,846 INFO  L87              Difference]: Start difference. First operand 5884 states. Second operand 4 states.
[2020-11-25 18:15:56,355 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:15:56,355 INFO  L93              Difference]: Finished difference Result 3292 states and 3915 transitions.
[2020-11-25 18:15:56,355 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 18:15:56,356 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3292 states and 3915 transitions.
[2020-11-25 18:15:56,374 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:15:56,399 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3292 states to 3292 states and 3915 transitions.
[2020-11-25 18:15:56,400 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 18:15:56,404 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1109
[2020-11-25 18:15:56,404 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3292 states and 3915 transitions.
[2020-11-25 18:15:56,413 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:15:56,413 INFO  L728         BuchiCegarLoop]: Abstraction has 3292 states and 3915 transitions.
[2020-11-25 18:15:56,427 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3292 states and 3915 transitions.
[2020-11-25 18:15:56,475 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3292 to 3292.
[2020-11-25 18:15:56,476 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3292 states.
[2020-11-25 18:15:56,482 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3292 states to 3292 states and 3915 transitions.
[2020-11-25 18:15:56,482 INFO  L751         BuchiCegarLoop]: Abstraction has 3292 states and 3915 transitions.
[2020-11-25 18:15:56,482 INFO  L631         BuchiCegarLoop]: Abstraction has 3292 states and 3915 transitions.
[2020-11-25 18:15:56,482 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 18:15:56,483 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3292 states and 3915 transitions.
[2020-11-25 18:15:56,490 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:15:56,490 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:15:56,490 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:15:56,492 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:15:56,492 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6428]              assume null == 0;
[L6429]  CALL        call this := FreshRefGenerator__success();
[L2548]              havoc newRef;
[L2549]              assume Alloc[newRef] == false;
[L2550]              Alloc[newRef] := true;
[L2551]              assume newRef != null;
[L6429]  RET         call this := FreshRefGenerator__success();
[L6430]              assume now >= 0;
[L6431]              assume DType[this] == ISF;
[L6432]              assume msgvalue_MSG == 0;
[L6433]              gas := gas - 53000;
[L6434]  CALL        call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L1614]              havoc __exception;
[L1615]              revert := false;
[L1616]  COND FALSE  !(__exception)
[L1640]  CALL        call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L4045]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4046]  COND TRUE   revert
[L1640]  RET         call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L1641]              assume !revert && gas >= 0;
[L6434]  RET         call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L6435]              assume !revert && gas >= 0;
[L6438]  CALL        call CorralChoice_ISF(this);
[L6248]              havoc msgsender_MSG;
[L6249]              havoc msgvalue_MSG;
[L6250]              havoc choice;
[L6251]              havoc to_s717;
[L6252]              havoc value_s717;
[L6253]              havoc __ret_0_transfer;
[L6254]              havoc spender_s287;
[L6255]              havoc value_s287;
[L6256]              havoc __ret_0_approve;
[L6257]              havoc from_s744;
[L6258]              havoc to_s744;
[L6259]              havoc value_s744;
[L6260]              havoc __ret_0_transferFrom;
[L6261]              havoc __ret_0_totalSupply;
[L6262]              havoc owner_s233;
[L6263]              havoc __ret_0_balanceOf;
[L6264]              havoc owner_s249;
[L6265]              havoc spender_s249;
[L6266]              havoc __ret_0_allowance;
[L6267]              havoc spender_s349;
[L6268]              havoc addedValue_s349;
[L6269]              havoc __ret_0_increaseAllowance;
[L6270]              havoc spender_s376;
[L6271]              havoc subtractedValue_s376;
[L6272]              havoc __ret_0_decreaseAllowance;
[L6273]              havoc __ret_0_owner;
[L6274]              havoc __ret_0_isOwner;
[L6275]              havoc newOwner_s659;
[L6276]              havoc name_s794;
[L6277]              havoc symbol_s794;
[L6278]              havoc decimals_s794;
[L6279]              havoc __ret_0_name;
[L6280]              havoc __ret_0_symbol;
[L6281]              havoc __ret_0_decimals;
[L6282]              havoc newName_s837;
[L6283]              havoc newSymbol_s856;
[L6284]              havoc __ret_0_DECIMALS;
[L6285]              havoc __ret_0_INITIAL_SUPPLY;
[L6286]              havoc tmpNow;
[L6287]              havoc gas;
[L6288]              assume gas > 4000000 && gas <= 8000000;
[L6289]              tmpNow := now;
[L6290]              havoc now;
[L6291]              assume now > tmpNow;
[L6292]              assume msgsender_MSG != null;
[L6293]              assume DType[msgsender_MSG] != IERC20;
[L6294]              assume DType[msgsender_MSG] != SafeMath;
[L6295]              assume DType[msgsender_MSG] != ERC20;
[L6296]              assume DType[msgsender_MSG] != Ownable;
[L6297]              assume DType[msgsender_MSG] != ERC20Protected;
[L6298]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6299]              assume DType[msgsender_MSG] != ISF;
[L6300]              Alloc[msgsender_MSG] := true;
[L6301]  COND FALSE  !(choice == 19)
[L6308]  COND TRUE   choice == 18
[L6309]              gas := gas - 21000;
[L6310]  COND TRUE   gas >= 0
[L6311]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6312]              assume msgvalue_MSG == 0;
[L6313]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L503]               havoc __exception;
[L504]               revert := false;
[L505]   COND FALSE  !(__exception)
[L529]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2917]  COND TRUE   DType[this] == ISF
[L2918]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L3368]              __var_13 := null;
[L3369]  COND TRUE   !(spender_s546 != null)
[L3370]              revert := true;
[L2918]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2919]  COND TRUE   revert
[L529]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L530]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s287] == value_s287) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this])) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this])) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6313]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L6438]  RET         call CorralChoice_ISF(this);

Loop:
[L6438]  CALL        call CorralChoice_ISF(this);
[L6248]              havoc msgsender_MSG;
[L6249]              havoc msgvalue_MSG;
[L6250]              havoc choice;
[L6251]              havoc to_s717;
[L6252]              havoc value_s717;
[L6253]              havoc __ret_0_transfer;
[L6254]              havoc spender_s287;
[L6255]              havoc value_s287;
[L6256]              havoc __ret_0_approve;
[L6257]              havoc from_s744;
[L6258]              havoc to_s744;
[L6259]              havoc value_s744;
[L6260]              havoc __ret_0_transferFrom;
[L6261]              havoc __ret_0_totalSupply;
[L6262]              havoc owner_s233;
[L6263]              havoc __ret_0_balanceOf;
[L6264]              havoc owner_s249;
[L6265]              havoc spender_s249;
[L6266]              havoc __ret_0_allowance;
[L6267]              havoc spender_s349;
[L6268]              havoc addedValue_s349;
[L6269]              havoc __ret_0_increaseAllowance;
[L6270]              havoc spender_s376;
[L6271]              havoc subtractedValue_s376;
[L6272]              havoc __ret_0_decreaseAllowance;
[L6273]              havoc __ret_0_owner;
[L6274]              havoc __ret_0_isOwner;
[L6275]              havoc newOwner_s659;
[L6276]              havoc name_s794;
[L6277]              havoc symbol_s794;
[L6278]              havoc decimals_s794;
[L6279]              havoc __ret_0_name;
[L6280]              havoc __ret_0_symbol;
[L6281]              havoc __ret_0_decimals;
[L6282]              havoc newName_s837;
[L6283]              havoc newSymbol_s856;
[L6284]              havoc __ret_0_DECIMALS;
[L6285]              havoc __ret_0_INITIAL_SUPPLY;
[L6286]              havoc tmpNow;
[L6287]              havoc gas;
[L6288]              assume gas > 4000000 && gas <= 8000000;
[L6289]              tmpNow := now;
[L6290]              havoc now;
[L6291]              assume now > tmpNow;
[L6292]              assume msgsender_MSG != null;
[L6293]              assume DType[msgsender_MSG] != IERC20;
[L6294]              assume DType[msgsender_MSG] != SafeMath;
[L6295]              assume DType[msgsender_MSG] != ERC20;
[L6296]              assume DType[msgsender_MSG] != Ownable;
[L6297]              assume DType[msgsender_MSG] != ERC20Protected;
[L6298]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6299]              assume DType[msgsender_MSG] != ISF;
[L6300]              Alloc[msgsender_MSG] := true;
[L6301]  COND FALSE  !(choice == 19)
[L6308]  COND TRUE   choice == 18
[L6309]              gas := gas - 21000;
[L6310]  COND TRUE   gas >= 0
[L6311]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6312]              assume msgvalue_MSG == 0;
[L6313]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L503]               havoc __exception;
[L504]               revert := false;
[L505]   COND FALSE  !(__exception)
[L529]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2917]  COND TRUE   DType[this] == ISF
[L2918]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L3368]              __var_13 := null;
[L3369]  COND TRUE   !(spender_s546 != null)
[L3370]              revert := true;
[L2918]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2919]  COND TRUE   revert
[L529]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L530]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s287] == value_s287) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this])) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this])) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6313]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L6438]  RET         call CorralChoice_ISF(this);

[2020-11-25 18:15:56,496 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:15:56,496 INFO  L82        PathProgramCache]: Analyzing trace with hash -267712427, now seen corresponding path program 1 times
[2020-11-25 18:15:56,497 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:15:56,507 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:15:56,524 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 18:15:56,524 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:15:56,524 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 18:15:56,525 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:15:56,526 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 18:15:56,526 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 18:15:56,526 INFO  L87              Difference]: Start difference. First operand 3292 states and 3915 transitions. cyclomatic complexity: 625 Second operand 3 states.
[2020-11-25 18:15:56,609 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:15:56,610 INFO  L93              Difference]: Finished difference Result 4324 states and 5177 transitions.
[2020-11-25 18:15:56,610 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 18:15:56,610 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4324 states and 5177 transitions.
[2020-11-25 18:15:56,624 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:15:56,642 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4324 states to 4324 states and 5177 transitions.
[2020-11-25 18:15:56,642 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1477
[2020-11-25 18:15:56,644 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1477
[2020-11-25 18:15:56,644 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4324 states and 5177 transitions.
[2020-11-25 18:15:56,649 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:15:56,649 INFO  L728         BuchiCegarLoop]: Abstraction has 4324 states and 5177 transitions.
[2020-11-25 18:15:56,653 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4324 states and 5177 transitions.
[2020-11-25 18:15:56,687 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4324 to 3700.
[2020-11-25 18:15:56,687 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3700 states.
[2020-11-25 18:15:56,691 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3700 states to 3700 states and 4411 transitions.
[2020-11-25 18:15:56,692 INFO  L751         BuchiCegarLoop]: Abstraction has 3700 states and 4411 transitions.
[2020-11-25 18:15:56,692 INFO  L631         BuchiCegarLoop]: Abstraction has 3700 states and 4411 transitions.
[2020-11-25 18:15:56,692 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 18:15:56,692 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3700 states and 4411 transitions.
[2020-11-25 18:15:56,698 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:15:56,698 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:15:56,698 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:15:56,701 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:15:56,701 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6428]              assume null == 0;
[L6429]  CALL        call this := FreshRefGenerator__success();
[L2548]              havoc newRef;
[L2549]              assume Alloc[newRef] == false;
[L2550]              Alloc[newRef] := true;
[L2551]              assume newRef != null;
[L6429]  RET         call this := FreshRefGenerator__success();
[L6430]              assume now >= 0;
[L6431]              assume DType[this] == ISF;
[L6432]              assume msgvalue_MSG == 0;
[L6433]              gas := gas - 53000;
[L6434]  CALL        call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L1614]              havoc __exception;
[L1615]              revert := false;
[L1616]  COND FALSE  !(__exception)
[L1640]  CALL        call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L4045]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4046]  COND FALSE  !(revert)
[L4049]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2782]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2783]  COND FALSE  !(revert)
[L2786]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2758]              assume msgsender_MSG != null;
[L2759]              Balance[this] := 0;
[L2760]              _balances_ERC20[this] := zeroRefintArr();
[L2761]              sum__balances0[this] := 0;
[L2762]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2763]              sum__allowed1[this] := 0;
[L2764]              _totalSupply_ERC20[this] := 0;
[L2786]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L4049]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]  COND FALSE  !(revert)
[L4053]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3525]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3507]              assume msgsender_MSG != null;
[L3508]              Balance[this] := 0;
[L3509]              _owner_Ownable[this] := null;
[L3511]              _owner_Ownable[this] := msgsender_MSG;
[L3512]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3525]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3526]  COND FALSE  !(revert)
[L4053]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4054]  COND FALSE  !(revert)
[L4057]  CALL        call ERC20DetailedChangeable_ERC20DetailedChangeable__success(this, msgsender_MSG, msgvalue_MSG, 1501229100, 1119552200, DECIMALS_ISF[this]);
[L3881]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3881]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3882]  COND FALSE  !(revert)
[L3885]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2782]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2783]  COND FALSE  !(revert)
[L2786]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2758]              assume msgsender_MSG != null;
[L2759]              Balance[this] := 0;
[L2760]              _balances_ERC20[this] := zeroRefintArr();
[L2761]              sum__balances0[this] := 0;
[L2762]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2763]              sum__allowed1[this] := 0;
[L2764]              _totalSupply_ERC20[this] := 0;
[L2786]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L3885]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3886]  COND FALSE  !(revert)
[L3889]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3525]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3507]              assume msgsender_MSG != null;
[L3508]              Balance[this] := 0;
[L3509]              _owner_Ownable[this] := null;
[L3511]              _owner_Ownable[this] := msgsender_MSG;
[L3512]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3525]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3526]  COND FALSE  !(revert)
[L3889]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3890]  COND FALSE  !(revert)
[L3893]  CALL        call ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s794, symbol_s794, decimals_s794);
[L3848]              assume msgsender_MSG != null;
[L3849]              Balance[this] := 0;
[L3850]              _name_ERC20DetailedChangeable[this] := 929111217;
[L3851]              _symbol_ERC20DetailedChangeable[this] := 929111217;
[L3852]              _decimals_ERC20DetailedChangeable[this] := 0;
[L3854]              _name_ERC20DetailedChangeable[this] := name_s794;
[L3855]              _symbol_ERC20DetailedChangeable[this] := symbol_s794;
[L3856]              _decimals_ERC20DetailedChangeable[this] := decimals_s794;
[L3893]  RET         call ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s794, symbol_s794, decimals_s794);
[L3894]  COND FALSE  !(revert)
[L4057]  RET         call ERC20DetailedChangeable_ERC20DetailedChangeable__success(this, msgsender_MSG, msgvalue_MSG, 1501229100, 1119552200, DECIMALS_ISF[this]);
[L4058]  COND FALSE  !(revert)
[L4061]  CALL        call ERC20Protected_ERC20Protected__success(this, msgsender_MSG, msgvalue_MSG);
[L3687]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3687]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3688]  COND FALSE  !(revert)
[L3691]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2782]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2783]  COND FALSE  !(revert)
[L2786]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2758]              assume msgsender_MSG != null;
[L2759]              Balance[this] := 0;
[L2760]              _balances_ERC20[this] := zeroRefintArr();
[L2761]              sum__balances0[this] := 0;
[L2762]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2763]              sum__allowed1[this] := 0;
[L2764]              _totalSupply_ERC20[this] := 0;
[L2786]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L3691]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3692]  COND FALSE  !(revert)
[L3695]  CALL        call ERC20Protected_ERC20Protected_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3664]              assume msgsender_MSG != null;
[L3665]              Balance[this] := 0;
[L3695]  RET         call ERC20Protected_ERC20Protected_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  COND FALSE  !(revert)
[L4061]  RET         call ERC20Protected_ERC20Protected__success(this, msgsender_MSG, msgvalue_MSG);
[L4062]  COND FALSE  !(revert)
[L4065]  CALL        call ISF_ISF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]              assume msgsender_MSG != null;
[L3998]              Balance[this] := 0;
[L3999]              DECIMALS_ISF[this] := 18;
[L4000]              __var_25 := DECIMALS_ISF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4001]              INITIAL_SUPPLY_ISF[this] := 40000000000 * (nonlinearPow(10, DECIMALS_ISF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4003]  COND TRUE   DType[this] == ISF
[L4004]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_ISF[this]);
[L3276]              __var_7 := null;
[L3277]  COND TRUE   !(account_s464 != null)
[L3278]              revert := true;
[L4004]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_ISF[this]);
[L4005]  COND TRUE   revert
[L4065]  RET         call ISF_ISF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND TRUE   revert
[L1640]  RET         call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L1641]              assume !revert && gas >= 0;
[L6434]  RET         call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L6435]              assume !revert && gas >= 0;
[L6438]  CALL        call CorralChoice_ISF(this);
[L6248]              havoc msgsender_MSG;
[L6249]              havoc msgvalue_MSG;
[L6250]              havoc choice;
[L6251]              havoc to_s717;
[L6252]              havoc value_s717;
[L6253]              havoc __ret_0_transfer;
[L6254]              havoc spender_s287;
[L6255]              havoc value_s287;
[L6256]              havoc __ret_0_approve;
[L6257]              havoc from_s744;
[L6258]              havoc to_s744;
[L6259]              havoc value_s744;
[L6260]              havoc __ret_0_transferFrom;
[L6261]              havoc __ret_0_totalSupply;
[L6262]              havoc owner_s233;
[L6263]              havoc __ret_0_balanceOf;
[L6264]              havoc owner_s249;
[L6265]              havoc spender_s249;
[L6266]              havoc __ret_0_allowance;
[L6267]              havoc spender_s349;
[L6268]              havoc addedValue_s349;
[L6269]              havoc __ret_0_increaseAllowance;
[L6270]              havoc spender_s376;
[L6271]              havoc subtractedValue_s376;
[L6272]              havoc __ret_0_decreaseAllowance;
[L6273]              havoc __ret_0_owner;
[L6274]              havoc __ret_0_isOwner;
[L6275]              havoc newOwner_s659;
[L6276]              havoc name_s794;
[L6277]              havoc symbol_s794;
[L6278]              havoc decimals_s794;
[L6279]              havoc __ret_0_name;
[L6280]              havoc __ret_0_symbol;
[L6281]              havoc __ret_0_decimals;
[L6282]              havoc newName_s837;
[L6283]              havoc newSymbol_s856;
[L6284]              havoc __ret_0_DECIMALS;
[L6285]              havoc __ret_0_INITIAL_SUPPLY;
[L6286]              havoc tmpNow;
[L6287]              havoc gas;
[L6288]              assume gas > 4000000 && gas <= 8000000;
[L6289]              tmpNow := now;
[L6290]              havoc now;
[L6291]              assume now > tmpNow;
[L6292]              assume msgsender_MSG != null;
[L6293]              assume DType[msgsender_MSG] != IERC20;
[L6294]              assume DType[msgsender_MSG] != SafeMath;
[L6295]              assume DType[msgsender_MSG] != ERC20;
[L6296]              assume DType[msgsender_MSG] != Ownable;
[L6297]              assume DType[msgsender_MSG] != ERC20Protected;
[L6298]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6299]              assume DType[msgsender_MSG] != ISF;
[L6300]              Alloc[msgsender_MSG] := true;
[L6301]  COND FALSE  !(choice == 19)
[L6308]  COND TRUE   choice == 18
[L6309]              gas := gas - 21000;
[L6310]  COND TRUE   gas >= 0
[L6311]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6312]              assume msgvalue_MSG == 0;
[L6313]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L503]               havoc __exception;
[L504]               revert := false;
[L505]   COND FALSE  !(__exception)
[L529]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2917]  COND FALSE  !(DType[this] == ISF)
[L2922]  COND TRUE   DType[this] == ERC20DetailedChangeable
[L2923]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L3368]              __var_13 := null;
[L3369]  COND TRUE   !(spender_s546 != null)
[L3370]              revert := true;
[L2923]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2924]  COND TRUE   revert
[L529]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L530]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s287] == value_s287) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this])) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this])) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6313]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L6438]  RET         call CorralChoice_ISF(this);

Loop:
[L6438]  CALL        call CorralChoice_ISF(this);
[L6248]              havoc msgsender_MSG;
[L6249]              havoc msgvalue_MSG;
[L6250]              havoc choice;
[L6251]              havoc to_s717;
[L6252]              havoc value_s717;
[L6253]              havoc __ret_0_transfer;
[L6254]              havoc spender_s287;
[L6255]              havoc value_s287;
[L6256]              havoc __ret_0_approve;
[L6257]              havoc from_s744;
[L6258]              havoc to_s744;
[L6259]              havoc value_s744;
[L6260]              havoc __ret_0_transferFrom;
[L6261]              havoc __ret_0_totalSupply;
[L6262]              havoc owner_s233;
[L6263]              havoc __ret_0_balanceOf;
[L6264]              havoc owner_s249;
[L6265]              havoc spender_s249;
[L6266]              havoc __ret_0_allowance;
[L6267]              havoc spender_s349;
[L6268]              havoc addedValue_s349;
[L6269]              havoc __ret_0_increaseAllowance;
[L6270]              havoc spender_s376;
[L6271]              havoc subtractedValue_s376;
[L6272]              havoc __ret_0_decreaseAllowance;
[L6273]              havoc __ret_0_owner;
[L6274]              havoc __ret_0_isOwner;
[L6275]              havoc newOwner_s659;
[L6276]              havoc name_s794;
[L6277]              havoc symbol_s794;
[L6278]              havoc decimals_s794;
[L6279]              havoc __ret_0_name;
[L6280]              havoc __ret_0_symbol;
[L6281]              havoc __ret_0_decimals;
[L6282]              havoc newName_s837;
[L6283]              havoc newSymbol_s856;
[L6284]              havoc __ret_0_DECIMALS;
[L6285]              havoc __ret_0_INITIAL_SUPPLY;
[L6286]              havoc tmpNow;
[L6287]              havoc gas;
[L6288]              assume gas > 4000000 && gas <= 8000000;
[L6289]              tmpNow := now;
[L6290]              havoc now;
[L6291]              assume now > tmpNow;
[L6292]              assume msgsender_MSG != null;
[L6293]              assume DType[msgsender_MSG] != IERC20;
[L6294]              assume DType[msgsender_MSG] != SafeMath;
[L6295]              assume DType[msgsender_MSG] != ERC20;
[L6296]              assume DType[msgsender_MSG] != Ownable;
[L6297]              assume DType[msgsender_MSG] != ERC20Protected;
[L6298]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6299]              assume DType[msgsender_MSG] != ISF;
[L6300]              Alloc[msgsender_MSG] := true;
[L6301]  COND FALSE  !(choice == 19)
[L6308]  COND TRUE   choice == 18
[L6309]              gas := gas - 21000;
[L6310]  COND TRUE   gas >= 0
[L6311]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6312]              assume msgvalue_MSG == 0;
[L6313]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L503]               havoc __exception;
[L504]               revert := false;
[L505]   COND FALSE  !(__exception)
[L529]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2917]  COND FALSE  !(DType[this] == ISF)
[L2922]  COND TRUE   DType[this] == ERC20DetailedChangeable
[L2923]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L3368]              __var_13 := null;
[L3369]  COND TRUE   !(spender_s546 != null)
[L3370]              revert := true;
[L2923]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2924]  COND TRUE   revert
[L529]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L530]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s287] == value_s287) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this])) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this])) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6313]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L6438]  RET         call CorralChoice_ISF(this);

[2020-11-25 18:15:56,705 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:15:56,705 INFO  L82        PathProgramCache]: Analyzing trace with hash 1353006562, now seen corresponding path program 1 times
[2020-11-25 18:15:56,706 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:15:56,721 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:15:56,804 INFO  L134       CoverageAnalysis]: Checked inductivity of 220 backedges. 0 proven. 35 refuted. 0 times theorem prover too weak. 185 trivial. 0 not checked.
[2020-11-25 18:15:56,804 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 18:15:56,804 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 18:15:56,805 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:15:56,805 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 18:15:56,805 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 18:15:56,805 INFO  L87              Difference]: Start difference. First operand 3700 states and 4411 transitions. cyclomatic complexity: 713 Second operand 7 states.
[2020-11-25 18:15:56,896 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:15:56,896 INFO  L93              Difference]: Finished difference Result 3708 states and 4418 transitions.
[2020-11-25 18:15:56,896 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 18:15:56,896 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3708 states and 4418 transitions.
[2020-11-25 18:15:56,904 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:15:56,915 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3708 states to 3699 states and 4409 transitions.
[2020-11-25 18:15:56,916 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1265
[2020-11-25 18:15:56,916 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1265
[2020-11-25 18:15:56,916 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3699 states and 4409 transitions.
[2020-11-25 18:15:56,919 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:15:56,919 INFO  L728         BuchiCegarLoop]: Abstraction has 3699 states and 4409 transitions.
[2020-11-25 18:15:56,923 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3699 states and 4409 transitions.
[2020-11-25 18:15:56,952 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3699 to 3699.
[2020-11-25 18:15:56,952 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3699 states.
[2020-11-25 18:15:56,956 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3699 states to 3699 states and 4409 transitions.
[2020-11-25 18:15:56,956 INFO  L751         BuchiCegarLoop]: Abstraction has 3699 states and 4409 transitions.
[2020-11-25 18:15:56,956 INFO  L631         BuchiCegarLoop]: Abstraction has 3699 states and 4409 transitions.
[2020-11-25 18:15:56,956 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 18:15:56,956 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3699 states and 4409 transitions.
[2020-11-25 18:15:56,961 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:15:56,961 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:15:56,961 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:15:56,963 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:15:56,963 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6428]              assume null == 0;
[L6429]  CALL        call this := FreshRefGenerator__success();
[L2548]              havoc newRef;
[L2549]              assume Alloc[newRef] == false;
[L2550]              Alloc[newRef] := true;
[L2551]              assume newRef != null;
[L6429]  RET         call this := FreshRefGenerator__success();
[L6430]              assume now >= 0;
[L6431]              assume DType[this] == ISF;
[L6432]              assume msgvalue_MSG == 0;
[L6433]              gas := gas - 53000;
[L6434]  CALL        call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L1614]              havoc __exception;
[L1615]              revert := false;
[L1616]  COND FALSE  !(__exception)
[L1640]  CALL        call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L4045]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4046]  COND FALSE  !(revert)
[L4049]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2782]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2783]  COND FALSE  !(revert)
[L2786]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2758]              assume msgsender_MSG != null;
[L2759]              Balance[this] := 0;
[L2760]              _balances_ERC20[this] := zeroRefintArr();
[L2761]              sum__balances0[this] := 0;
[L2762]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2763]              sum__allowed1[this] := 0;
[L2764]              _totalSupply_ERC20[this] := 0;
[L2786]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L4049]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]  COND FALSE  !(revert)
[L4053]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3525]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3507]              assume msgsender_MSG != null;
[L3508]              Balance[this] := 0;
[L3509]              _owner_Ownable[this] := null;
[L3511]              _owner_Ownable[this] := msgsender_MSG;
[L3512]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3525]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3526]  COND FALSE  !(revert)
[L4053]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4054]  COND FALSE  !(revert)
[L4057]  CALL        call ERC20DetailedChangeable_ERC20DetailedChangeable__success(this, msgsender_MSG, msgvalue_MSG, 1501229100, 1119552200, DECIMALS_ISF[this]);
[L3881]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3881]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3882]  COND FALSE  !(revert)
[L3885]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2782]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2783]  COND FALSE  !(revert)
[L2786]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2758]              assume msgsender_MSG != null;
[L2759]              Balance[this] := 0;
[L2760]              _balances_ERC20[this] := zeroRefintArr();
[L2761]              sum__balances0[this] := 0;
[L2762]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2763]              sum__allowed1[this] := 0;
[L2764]              _totalSupply_ERC20[this] := 0;
[L2786]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L3885]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3886]  COND FALSE  !(revert)
[L3889]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3525]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3507]              assume msgsender_MSG != null;
[L3508]              Balance[this] := 0;
[L3509]              _owner_Ownable[this] := null;
[L3511]              _owner_Ownable[this] := msgsender_MSG;
[L3512]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3525]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3526]  COND FALSE  !(revert)
[L3889]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3890]  COND FALSE  !(revert)
[L3893]  CALL        call ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s794, symbol_s794, decimals_s794);
[L3848]              assume msgsender_MSG != null;
[L3849]              Balance[this] := 0;
[L3850]              _name_ERC20DetailedChangeable[this] := 929111217;
[L3851]              _symbol_ERC20DetailedChangeable[this] := 929111217;
[L3852]              _decimals_ERC20DetailedChangeable[this] := 0;
[L3854]              _name_ERC20DetailedChangeable[this] := name_s794;
[L3855]              _symbol_ERC20DetailedChangeable[this] := symbol_s794;
[L3856]              _decimals_ERC20DetailedChangeable[this] := decimals_s794;
[L3893]  RET         call ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s794, symbol_s794, decimals_s794);
[L3894]  COND FALSE  !(revert)
[L4057]  RET         call ERC20DetailedChangeable_ERC20DetailedChangeable__success(this, msgsender_MSG, msgvalue_MSG, 1501229100, 1119552200, DECIMALS_ISF[this]);
[L4058]  COND FALSE  !(revert)
[L4061]  CALL        call ERC20Protected_ERC20Protected__success(this, msgsender_MSG, msgvalue_MSG);
[L3687]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3687]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3688]  COND FALSE  !(revert)
[L3691]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2782]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2783]  COND FALSE  !(revert)
[L2786]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2758]              assume msgsender_MSG != null;
[L2759]              Balance[this] := 0;
[L2760]              _balances_ERC20[this] := zeroRefintArr();
[L2761]              sum__balances0[this] := 0;
[L2762]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2763]              sum__allowed1[this] := 0;
[L2764]              _totalSupply_ERC20[this] := 0;
[L2786]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L3691]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3692]  COND FALSE  !(revert)
[L3695]  CALL        call ERC20Protected_ERC20Protected_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3664]              assume msgsender_MSG != null;
[L3665]              Balance[this] := 0;
[L3695]  RET         call ERC20Protected_ERC20Protected_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  COND FALSE  !(revert)
[L4061]  RET         call ERC20Protected_ERC20Protected__success(this, msgsender_MSG, msgvalue_MSG);
[L4062]  COND FALSE  !(revert)
[L4065]  CALL        call ISF_ISF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]              assume msgsender_MSG != null;
[L3998]              Balance[this] := 0;
[L3999]              DECIMALS_ISF[this] := 18;
[L4000]              __var_25 := DECIMALS_ISF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4001]              INITIAL_SUPPLY_ISF[this] := 40000000000 * (nonlinearPow(10, DECIMALS_ISF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4003]  COND TRUE   DType[this] == ISF
[L4004]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_ISF[this]);
[L3276]              __var_7 := null;
[L3277]  COND FALSE  !(!(account_s464 != null))
[L3281]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2713]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2714]  COND TRUE   !(c_s174 >= a_s174)
[L2715]              revert := true;
[L3281]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L3282]  COND TRUE   revert
[L4004]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_ISF[this]);
[L4005]  COND TRUE   revert
[L4065]  RET         call ISF_ISF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND TRUE   revert
[L1640]  RET         call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L1641]              assume !revert && gas >= 0;
[L6434]  RET         call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L6435]              assume !revert && gas >= 0;
[L6438]  CALL        call CorralChoice_ISF(this);
[L6248]              havoc msgsender_MSG;
[L6249]              havoc msgvalue_MSG;
[L6250]              havoc choice;
[L6251]              havoc to_s717;
[L6252]              havoc value_s717;
[L6253]              havoc __ret_0_transfer;
[L6254]              havoc spender_s287;
[L6255]              havoc value_s287;
[L6256]              havoc __ret_0_approve;
[L6257]              havoc from_s744;
[L6258]              havoc to_s744;
[L6259]              havoc value_s744;
[L6260]              havoc __ret_0_transferFrom;
[L6261]              havoc __ret_0_totalSupply;
[L6262]              havoc owner_s233;
[L6263]              havoc __ret_0_balanceOf;
[L6264]              havoc owner_s249;
[L6265]              havoc spender_s249;
[L6266]              havoc __ret_0_allowance;
[L6267]              havoc spender_s349;
[L6268]              havoc addedValue_s349;
[L6269]              havoc __ret_0_increaseAllowance;
[L6270]              havoc spender_s376;
[L6271]              havoc subtractedValue_s376;
[L6272]              havoc __ret_0_decreaseAllowance;
[L6273]              havoc __ret_0_owner;
[L6274]              havoc __ret_0_isOwner;
[L6275]              havoc newOwner_s659;
[L6276]              havoc name_s794;
[L6277]              havoc symbol_s794;
[L6278]              havoc decimals_s794;
[L6279]              havoc __ret_0_name;
[L6280]              havoc __ret_0_symbol;
[L6281]              havoc __ret_0_decimals;
[L6282]              havoc newName_s837;
[L6283]              havoc newSymbol_s856;
[L6284]              havoc __ret_0_DECIMALS;
[L6285]              havoc __ret_0_INITIAL_SUPPLY;
[L6286]              havoc tmpNow;
[L6287]              havoc gas;
[L6288]              assume gas > 4000000 && gas <= 8000000;
[L6289]              tmpNow := now;
[L6290]              havoc now;
[L6291]              assume now > tmpNow;
[L6292]              assume msgsender_MSG != null;
[L6293]              assume DType[msgsender_MSG] != IERC20;
[L6294]              assume DType[msgsender_MSG] != SafeMath;
[L6295]              assume DType[msgsender_MSG] != ERC20;
[L6296]              assume DType[msgsender_MSG] != Ownable;
[L6297]              assume DType[msgsender_MSG] != ERC20Protected;
[L6298]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6299]              assume DType[msgsender_MSG] != ISF;
[L6300]              Alloc[msgsender_MSG] := true;
[L6301]  COND FALSE  !(choice == 19)
[L6308]  COND TRUE   choice == 18
[L6309]              gas := gas - 21000;
[L6310]  COND TRUE   gas >= 0
[L6311]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6312]              assume msgvalue_MSG == 0;
[L6313]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L503]               havoc __exception;
[L504]               revert := false;
[L505]   COND FALSE  !(__exception)
[L529]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2917]  COND TRUE   DType[this] == ISF
[L2918]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L3368]              __var_13 := null;
[L3369]  COND TRUE   !(spender_s546 != null)
[L3370]              revert := true;
[L2918]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2919]  COND TRUE   revert
[L529]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L530]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s287] == value_s287) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this])) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this])) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6313]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L6438]  RET         call CorralChoice_ISF(this);

Loop:
[L6438]  CALL        call CorralChoice_ISF(this);
[L6248]              havoc msgsender_MSG;
[L6249]              havoc msgvalue_MSG;
[L6250]              havoc choice;
[L6251]              havoc to_s717;
[L6252]              havoc value_s717;
[L6253]              havoc __ret_0_transfer;
[L6254]              havoc spender_s287;
[L6255]              havoc value_s287;
[L6256]              havoc __ret_0_approve;
[L6257]              havoc from_s744;
[L6258]              havoc to_s744;
[L6259]              havoc value_s744;
[L6260]              havoc __ret_0_transferFrom;
[L6261]              havoc __ret_0_totalSupply;
[L6262]              havoc owner_s233;
[L6263]              havoc __ret_0_balanceOf;
[L6264]              havoc owner_s249;
[L6265]              havoc spender_s249;
[L6266]              havoc __ret_0_allowance;
[L6267]              havoc spender_s349;
[L6268]              havoc addedValue_s349;
[L6269]              havoc __ret_0_increaseAllowance;
[L6270]              havoc spender_s376;
[L6271]              havoc subtractedValue_s376;
[L6272]              havoc __ret_0_decreaseAllowance;
[L6273]              havoc __ret_0_owner;
[L6274]              havoc __ret_0_isOwner;
[L6275]              havoc newOwner_s659;
[L6276]              havoc name_s794;
[L6277]              havoc symbol_s794;
[L6278]              havoc decimals_s794;
[L6279]              havoc __ret_0_name;
[L6280]              havoc __ret_0_symbol;
[L6281]              havoc __ret_0_decimals;
[L6282]              havoc newName_s837;
[L6283]              havoc newSymbol_s856;
[L6284]              havoc __ret_0_DECIMALS;
[L6285]              havoc __ret_0_INITIAL_SUPPLY;
[L6286]              havoc tmpNow;
[L6287]              havoc gas;
[L6288]              assume gas > 4000000 && gas <= 8000000;
[L6289]              tmpNow := now;
[L6290]              havoc now;
[L6291]              assume now > tmpNow;
[L6292]              assume msgsender_MSG != null;
[L6293]              assume DType[msgsender_MSG] != IERC20;
[L6294]              assume DType[msgsender_MSG] != SafeMath;
[L6295]              assume DType[msgsender_MSG] != ERC20;
[L6296]              assume DType[msgsender_MSG] != Ownable;
[L6297]              assume DType[msgsender_MSG] != ERC20Protected;
[L6298]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6299]              assume DType[msgsender_MSG] != ISF;
[L6300]              Alloc[msgsender_MSG] := true;
[L6301]  COND FALSE  !(choice == 19)
[L6308]  COND TRUE   choice == 18
[L6309]              gas := gas - 21000;
[L6310]  COND TRUE   gas >= 0
[L6311]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6312]              assume msgvalue_MSG == 0;
[L6313]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L503]               havoc __exception;
[L504]               revert := false;
[L505]   COND FALSE  !(__exception)
[L529]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2917]  COND TRUE   DType[this] == ISF
[L2918]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L3368]              __var_13 := null;
[L3369]  COND TRUE   !(spender_s546 != null)
[L3370]              revert := true;
[L2918]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2919]  COND TRUE   revert
[L529]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L530]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s287] == value_s287) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this])) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this])) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6313]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L6438]  RET         call CorralChoice_ISF(this);

[2020-11-25 18:15:56,967 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:15:56,967 INFO  L82        PathProgramCache]: Analyzing trace with hash -110842641, now seen corresponding path program 1 times
[2020-11-25 18:15:56,967 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:15:56,978 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:15:57,023 INFO  L134       CoverageAnalysis]: Checked inductivity of 220 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 220 trivial. 0 not checked.
[2020-11-25 18:15:57,023 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:15:57,023 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 18:15:57,024 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:15:57,024 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 18:15:57,024 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 18:15:57,024 INFO  L87              Difference]: Start difference. First operand 3699 states and 4409 transitions. cyclomatic complexity: 712 Second operand 3 states.
[2020-11-25 18:15:57,077 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:15:57,077 INFO  L93              Difference]: Finished difference Result 4317 states and 4979 transitions.
[2020-11-25 18:15:57,077 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 18:15:57,078 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4317 states and 4979 transitions.
[2020-11-25 18:15:57,087 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:15:57,098 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4317 states to 3984 states and 4575 transitions.
[2020-11-25 18:15:57,098 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1347
[2020-11-25 18:15:57,099 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1368
[2020-11-25 18:15:57,099 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3984 states and 4575 transitions.
[2020-11-25 18:15:57,103 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:15:57,103 INFO  L728         BuchiCegarLoop]: Abstraction has 3984 states and 4575 transitions.
[2020-11-25 18:15:57,106 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3984 states and 4575 transitions.
[2020-11-25 18:15:57,130 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3984 to 3442.
[2020-11-25 18:15:57,130 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3442 states.
[2020-11-25 18:15:57,134 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3442 states to 3442 states and 3893 transitions.
[2020-11-25 18:15:57,134 INFO  L751         BuchiCegarLoop]: Abstraction has 3442 states and 3893 transitions.
[2020-11-25 18:15:57,134 INFO  L631         BuchiCegarLoop]: Abstraction has 3442 states and 3893 transitions.
[2020-11-25 18:15:57,134 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 18:15:57,134 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3442 states and 3893 transitions.
[2020-11-25 18:15:57,138 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:15:57,138 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:15:57,139 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:15:57,140 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:15:57,141 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6428]              assume null == 0;
[L6429]  CALL        call this := FreshRefGenerator__success();
[L2548]              havoc newRef;
[L2549]              assume Alloc[newRef] == false;
[L2550]              Alloc[newRef] := true;
[L2551]              assume newRef != null;
[L6429]  RET         call this := FreshRefGenerator__success();
[L6430]              assume now >= 0;
[L6431]              assume DType[this] == ISF;
[L6432]              assume msgvalue_MSG == 0;
[L6433]              gas := gas - 53000;
[L6434]  CALL        call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L1614]              havoc __exception;
[L1615]              revert := false;
[L1616]  COND FALSE  !(__exception)
[L1640]  CALL        call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L4045]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4046]  COND FALSE  !(revert)
[L4049]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2782]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2783]  COND FALSE  !(revert)
[L2786]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2758]              assume msgsender_MSG != null;
[L2759]              Balance[this] := 0;
[L2760]              _balances_ERC20[this] := zeroRefintArr();
[L2761]              sum__balances0[this] := 0;
[L2762]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2763]              sum__allowed1[this] := 0;
[L2764]              _totalSupply_ERC20[this] := 0;
[L2786]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L4049]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]  COND FALSE  !(revert)
[L4053]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3525]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3507]              assume msgsender_MSG != null;
[L3508]              Balance[this] := 0;
[L3509]              _owner_Ownable[this] := null;
[L3511]              _owner_Ownable[this] := msgsender_MSG;
[L3512]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3525]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3526]  COND FALSE  !(revert)
[L4053]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4054]  COND FALSE  !(revert)
[L4057]  CALL        call ERC20DetailedChangeable_ERC20DetailedChangeable__success(this, msgsender_MSG, msgvalue_MSG, 1501229100, 1119552200, DECIMALS_ISF[this]);
[L3881]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3881]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3882]  COND FALSE  !(revert)
[L3885]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2782]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2783]  COND FALSE  !(revert)
[L2786]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2758]              assume msgsender_MSG != null;
[L2759]              Balance[this] := 0;
[L2760]              _balances_ERC20[this] := zeroRefintArr();
[L2761]              sum__balances0[this] := 0;
[L2762]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2763]              sum__allowed1[this] := 0;
[L2764]              _totalSupply_ERC20[this] := 0;
[L2786]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L3885]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3886]  COND FALSE  !(revert)
[L3889]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3525]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3507]              assume msgsender_MSG != null;
[L3508]              Balance[this] := 0;
[L3509]              _owner_Ownable[this] := null;
[L3511]              _owner_Ownable[this] := msgsender_MSG;
[L3512]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3525]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3526]  COND FALSE  !(revert)
[L3889]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3890]  COND FALSE  !(revert)
[L3893]  CALL        call ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s794, symbol_s794, decimals_s794);
[L3848]              assume msgsender_MSG != null;
[L3849]              Balance[this] := 0;
[L3850]              _name_ERC20DetailedChangeable[this] := 929111217;
[L3851]              _symbol_ERC20DetailedChangeable[this] := 929111217;
[L3852]              _decimals_ERC20DetailedChangeable[this] := 0;
[L3854]              _name_ERC20DetailedChangeable[this] := name_s794;
[L3855]              _symbol_ERC20DetailedChangeable[this] := symbol_s794;
[L3856]              _decimals_ERC20DetailedChangeable[this] := decimals_s794;
[L3893]  RET         call ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s794, symbol_s794, decimals_s794);
[L3894]  COND FALSE  !(revert)
[L4057]  RET         call ERC20DetailedChangeable_ERC20DetailedChangeable__success(this, msgsender_MSG, msgvalue_MSG, 1501229100, 1119552200, DECIMALS_ISF[this]);
[L4058]  COND FALSE  !(revert)
[L4061]  CALL        call ERC20Protected_ERC20Protected__success(this, msgsender_MSG, msgvalue_MSG);
[L3687]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3687]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3688]  COND FALSE  !(revert)
[L3691]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2782]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2783]  COND FALSE  !(revert)
[L2786]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2758]              assume msgsender_MSG != null;
[L2759]              Balance[this] := 0;
[L2760]              _balances_ERC20[this] := zeroRefintArr();
[L2761]              sum__balances0[this] := 0;
[L2762]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2763]              sum__allowed1[this] := 0;
[L2764]              _totalSupply_ERC20[this] := 0;
[L2786]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L3691]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3692]  COND FALSE  !(revert)
[L3695]  CALL        call ERC20Protected_ERC20Protected_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3664]              assume msgsender_MSG != null;
[L3665]              Balance[this] := 0;
[L3695]  RET         call ERC20Protected_ERC20Protected_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  COND FALSE  !(revert)
[L4061]  RET         call ERC20Protected_ERC20Protected__success(this, msgsender_MSG, msgvalue_MSG);
[L4062]  COND FALSE  !(revert)
[L4065]  CALL        call ISF_ISF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]              assume msgsender_MSG != null;
[L3998]              Balance[this] := 0;
[L3999]              DECIMALS_ISF[this] := 18;
[L4000]              __var_25 := DECIMALS_ISF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4001]              INITIAL_SUPPLY_ISF[this] := 40000000000 * (nonlinearPow(10, DECIMALS_ISF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4003]  COND TRUE   DType[this] == ISF
[L4004]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_ISF[this]);
[L3276]              __var_7 := null;
[L3277]  COND FALSE  !(!(account_s464 != null))
[L3281]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2713]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2714]  COND FALSE  !(!(c_s174 >= a_s174))
[L2718]              __ret_0_ := c_s174;
[L3281]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L3282]  COND FALSE  !(revert)
[L3285]              _totalSupply_ERC20[this] := __var_8;
[L3286]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L2713]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2714]  COND FALSE  !(!(c_s174 >= a_s174))
[L2718]              __ret_0_ := c_s174;
[L3286]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L3287]  COND FALSE  !(revert)
[L3290]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s464];
[L3291]              _balances_ERC20[this][account_s464] := __var_9;
[L3292]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s464];
[L3293]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4004]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_ISF[this]);
[L4005]  COND FALSE  !(revert)
[L4065]  RET         call ISF_ISF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L1640]  RET         call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L1641]              assume !revert && gas >= 0;
[L6434]  RET         call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L6435]              assume !revert && gas >= 0;
[L6438]  CALL        call CorralChoice_ISF(this);
[L6248]              havoc msgsender_MSG;
[L6249]              havoc msgvalue_MSG;
[L6250]              havoc choice;
[L6251]              havoc to_s717;
[L6252]              havoc value_s717;
[L6253]              havoc __ret_0_transfer;
[L6254]              havoc spender_s287;
[L6255]              havoc value_s287;
[L6256]              havoc __ret_0_approve;
[L6257]              havoc from_s744;
[L6258]              havoc to_s744;
[L6259]              havoc value_s744;
[L6260]              havoc __ret_0_transferFrom;
[L6261]              havoc __ret_0_totalSupply;
[L6262]              havoc owner_s233;
[L6263]              havoc __ret_0_balanceOf;
[L6264]              havoc owner_s249;
[L6265]              havoc spender_s249;
[L6266]              havoc __ret_0_allowance;
[L6267]              havoc spender_s349;
[L6268]              havoc addedValue_s349;
[L6269]              havoc __ret_0_increaseAllowance;
[L6270]              havoc spender_s376;
[L6271]              havoc subtractedValue_s376;
[L6272]              havoc __ret_0_decreaseAllowance;
[L6273]              havoc __ret_0_owner;
[L6274]              havoc __ret_0_isOwner;
[L6275]              havoc newOwner_s659;
[L6276]              havoc name_s794;
[L6277]              havoc symbol_s794;
[L6278]              havoc decimals_s794;
[L6279]              havoc __ret_0_name;
[L6280]              havoc __ret_0_symbol;
[L6281]              havoc __ret_0_decimals;
[L6282]              havoc newName_s837;
[L6283]              havoc newSymbol_s856;
[L6284]              havoc __ret_0_DECIMALS;
[L6285]              havoc __ret_0_INITIAL_SUPPLY;
[L6286]              havoc tmpNow;
[L6287]              havoc gas;
[L6288]              assume gas > 4000000 && gas <= 8000000;
[L6289]              tmpNow := now;
[L6290]              havoc now;
[L6291]              assume now > tmpNow;
[L6292]              assume msgsender_MSG != null;
[L6293]              assume DType[msgsender_MSG] != IERC20;
[L6294]              assume DType[msgsender_MSG] != SafeMath;
[L6295]              assume DType[msgsender_MSG] != ERC20;
[L6296]              assume DType[msgsender_MSG] != Ownable;
[L6297]              assume DType[msgsender_MSG] != ERC20Protected;
[L6298]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6299]              assume DType[msgsender_MSG] != ISF;
[L6300]              Alloc[msgsender_MSG] := true;
[L6301]  COND FALSE  !(choice == 19)
[L6308]  COND TRUE   choice == 18
[L6309]              gas := gas - 21000;
[L6310]  COND TRUE   gas >= 0
[L6311]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6312]              assume msgvalue_MSG == 0;
[L6313]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L503]               havoc __exception;
[L504]               revert := false;
[L505]   COND FALSE  !(__exception)
[L529]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2917]  COND TRUE   DType[this] == ISF
[L2918]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L3368]              __var_13 := null;
[L3369]  COND FALSE  !(!(spender_s546 != null))
[L3373]              __var_14 := null;
[L3374]  COND FALSE  !(!(owner_s546 != null))
[L3378]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] - _allowed_ERC20[this][owner_s546][spender_s546];
[L3379]              _allowed_ERC20[this][owner_s546][spender_s546] := value_s546;
[L3380]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] + _allowed_ERC20[this][owner_s546][spender_s546];
[L3381]              assert { :EventEmitted "Approval_ERC20" } true;
[L2918]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2919]  COND FALSE  !(revert)
[L2940]              __ret_0_ := true;
[L529]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L530]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s287] == value_s287) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this])) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this])) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6313]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L6438]  RET         call CorralChoice_ISF(this);

Loop:
[L6438]  CALL        call CorralChoice_ISF(this);
[L6248]              havoc msgsender_MSG;
[L6249]              havoc msgvalue_MSG;
[L6250]              havoc choice;
[L6251]              havoc to_s717;
[L6252]              havoc value_s717;
[L6253]              havoc __ret_0_transfer;
[L6254]              havoc spender_s287;
[L6255]              havoc value_s287;
[L6256]              havoc __ret_0_approve;
[L6257]              havoc from_s744;
[L6258]              havoc to_s744;
[L6259]              havoc value_s744;
[L6260]              havoc __ret_0_transferFrom;
[L6261]              havoc __ret_0_totalSupply;
[L6262]              havoc owner_s233;
[L6263]              havoc __ret_0_balanceOf;
[L6264]              havoc owner_s249;
[L6265]              havoc spender_s249;
[L6266]              havoc __ret_0_allowance;
[L6267]              havoc spender_s349;
[L6268]              havoc addedValue_s349;
[L6269]              havoc __ret_0_increaseAllowance;
[L6270]              havoc spender_s376;
[L6271]              havoc subtractedValue_s376;
[L6272]              havoc __ret_0_decreaseAllowance;
[L6273]              havoc __ret_0_owner;
[L6274]              havoc __ret_0_isOwner;
[L6275]              havoc newOwner_s659;
[L6276]              havoc name_s794;
[L6277]              havoc symbol_s794;
[L6278]              havoc decimals_s794;
[L6279]              havoc __ret_0_name;
[L6280]              havoc __ret_0_symbol;
[L6281]              havoc __ret_0_decimals;
[L6282]              havoc newName_s837;
[L6283]              havoc newSymbol_s856;
[L6284]              havoc __ret_0_DECIMALS;
[L6285]              havoc __ret_0_INITIAL_SUPPLY;
[L6286]              havoc tmpNow;
[L6287]              havoc gas;
[L6288]              assume gas > 4000000 && gas <= 8000000;
[L6289]              tmpNow := now;
[L6290]              havoc now;
[L6291]              assume now > tmpNow;
[L6292]              assume msgsender_MSG != null;
[L6293]              assume DType[msgsender_MSG] != IERC20;
[L6294]              assume DType[msgsender_MSG] != SafeMath;
[L6295]              assume DType[msgsender_MSG] != ERC20;
[L6296]              assume DType[msgsender_MSG] != Ownable;
[L6297]              assume DType[msgsender_MSG] != ERC20Protected;
[L6298]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6299]              assume DType[msgsender_MSG] != ISF;
[L6300]              Alloc[msgsender_MSG] := true;
[L6301]  COND FALSE  !(choice == 19)
[L6308]  COND TRUE   choice == 18
[L6309]              gas := gas - 21000;
[L6310]  COND TRUE   gas >= 0
[L6311]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6312]              assume msgvalue_MSG == 0;
[L6313]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L503]               havoc __exception;
[L504]               revert := false;
[L505]   COND FALSE  !(__exception)
[L529]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2917]  COND TRUE   DType[this] == ISF
[L2918]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L3368]              __var_13 := null;
[L3369]  COND FALSE  !(!(spender_s546 != null))
[L3373]              __var_14 := null;
[L3374]  COND FALSE  !(!(owner_s546 != null))
[L3378]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] - _allowed_ERC20[this][owner_s546][spender_s546];
[L3379]              _allowed_ERC20[this][owner_s546][spender_s546] := value_s546;
[L3380]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] + _allowed_ERC20[this][owner_s546][spender_s546];
[L3381]              assert { :EventEmitted "Approval_ERC20" } true;
[L2918]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2919]  COND FALSE  !(revert)
[L2940]              __ret_0_ := true;
[L529]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L530]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s287] == value_s287) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_ERC20DetailedChangeable[this] == old(_name_ERC20DetailedChangeable[this])) && _symbol_ERC20DetailedChangeable[this] == old(_symbol_ERC20DetailedChangeable[this])) && _decimals_ERC20DetailedChangeable[this] == old(_decimals_ERC20DetailedChangeable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6313]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L6438]  RET         call CorralChoice_ISF(this);

[2020-11-25 18:15:57,144 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:15:57,144 INFO  L82        PathProgramCache]: Analyzing trace with hash 728511346, now seen corresponding path program 1 times
[2020-11-25 18:15:57,145 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:15:57,187 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:15:57,413 INFO  L134       CoverageAnalysis]: Checked inductivity of 225 backedges. 16 proven. 0 refuted. 0 times theorem prover too weak. 209 trivial. 0 not checked.
[2020-11-25 18:15:57,413 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:15:57,414 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [15] imperfect sequences [] total 15
[2020-11-25 18:15:57,414 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:15:57,414 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 16 interpolants.
[2020-11-25 18:15:57,414 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=31, Invalid=209, Unknown=0, NotChecked=0, Total=240
[2020-11-25 18:15:57,414 INFO  L87              Difference]: Start difference. First operand 3442 states and 3893 transitions. cyclomatic complexity: 453 Second operand 16 states.
[2020-11-25 18:15:59,679 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:15:59,679 INFO  L93              Difference]: Finished difference Result 3567 states and 4040 transitions.
[2020-11-25 18:15:59,679 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 16 states. 
[2020-11-25 18:15:59,679 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3567 states and 4040 transitions.
[2020-11-25 18:15:59,687 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 18:15:59,697 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3567 states to 3567 states and 4040 transitions.
[2020-11-25 18:15:59,697 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1250
[2020-11-25 18:15:59,699 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1250
[2020-11-25 18:15:59,699 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3567 states and 4040 transitions.
[2020-11-25 18:15:59,702 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:15:59,702 INFO  L728         BuchiCegarLoop]: Abstraction has 3567 states and 4040 transitions.
[2020-11-25 18:15:59,704 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3567 states and 4040 transitions.
[2020-11-25 18:15:59,728 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3567 to 3535.
[2020-11-25 18:15:59,728 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3535 states.
[2020-11-25 18:15:59,732 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3535 states to 3535 states and 3999 transitions.
[2020-11-25 18:15:59,732 INFO  L751         BuchiCegarLoop]: Abstraction has 3535 states and 3999 transitions.
[2020-11-25 18:15:59,732 INFO  L631         BuchiCegarLoop]: Abstraction has 3535 states and 3999 transitions.
[2020-11-25 18:15:59,732 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 18:15:59,732 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3535 states and 3999 transitions.
[2020-11-25 18:15:59,738 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 18:15:59,738 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:15:59,738 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:15:59,740 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:15:59,740 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6428]              assume null == 0;
[L6429]  CALL        call this := FreshRefGenerator__success();
[L2548]              havoc newRef;
[L2549]              assume Alloc[newRef] == false;
[L2550]              Alloc[newRef] := true;
[L2551]              assume newRef != null;
[L6429]  RET         call this := FreshRefGenerator__success();
[L6430]              assume now >= 0;
[L6431]              assume DType[this] == ISF;
[L6432]              assume msgvalue_MSG == 0;
[L6433]              gas := gas - 53000;
[L6434]  CALL        call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L1614]              havoc __exception;
[L1615]              revert := false;
[L1616]  COND FALSE  !(__exception)
[L1640]  CALL        call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L4045]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4046]  COND FALSE  !(revert)
[L4049]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2782]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2783]  COND FALSE  !(revert)
[L2786]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2758]              assume msgsender_MSG != null;
[L2759]              Balance[this] := 0;
[L2760]              _balances_ERC20[this] := zeroRefintArr();
[L2761]              sum__balances0[this] := 0;
[L2762]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2763]              sum__allowed1[this] := 0;
[L2764]              _totalSupply_ERC20[this] := 0;
[L2786]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L4049]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]  COND FALSE  !(revert)
[L4053]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3525]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3507]              assume msgsender_MSG != null;
[L3508]              Balance[this] := 0;
[L3509]              _owner_Ownable[this] := null;
[L3511]              _owner_Ownable[this] := msgsender_MSG;
[L3512]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3525]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3526]  COND FALSE  !(revert)
[L4053]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4054]  COND FALSE  !(revert)
[L4057]  CALL        call ERC20DetailedChangeable_ERC20DetailedChangeable__success(this, msgsender_MSG, msgvalue_MSG, 1501229100, 1119552200, DECIMALS_ISF[this]);
[L3881]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3881]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3882]  COND FALSE  !(revert)
[L3885]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2782]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2783]  COND FALSE  !(revert)
[L2786]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2758]              assume msgsender_MSG != null;
[L2759]              Balance[this] := 0;
[L2760]              _balances_ERC20[this] := zeroRefintArr();
[L2761]              sum__balances0[this] := 0;
[L2762]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2763]              sum__allowed1[this] := 0;
[L2764]              _totalSupply_ERC20[this] := 0;
[L2786]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L3885]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3886]  COND FALSE  !(revert)
[L3889]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3525]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3507]              assume msgsender_MSG != null;
[L3508]              Balance[this] := 0;
[L3509]              _owner_Ownable[this] := null;
[L3511]              _owner_Ownable[this] := msgsender_MSG;
[L3512]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3525]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3526]  COND FALSE  !(revert)
[L3889]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3890]  COND FALSE  !(revert)
[L3893]  CALL        call ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s794, symbol_s794, decimals_s794);
[L3848]              assume msgsender_MSG != null;
[L3849]              Balance[this] := 0;
[L3850]              _name_ERC20DetailedChangeable[this] := 929111217;
[L3851]              _symbol_ERC20DetailedChangeable[this] := 929111217;
[L3852]              _decimals_ERC20DetailedChangeable[this] := 0;
[L3854]              _name_ERC20DetailedChangeable[this] := name_s794;
[L3855]              _symbol_ERC20DetailedChangeable[this] := symbol_s794;
[L3856]              _decimals_ERC20DetailedChangeable[this] := decimals_s794;
[L3893]  RET         call ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s794, symbol_s794, decimals_s794);
[L3894]  COND FALSE  !(revert)
[L4057]  RET         call ERC20DetailedChangeable_ERC20DetailedChangeable__success(this, msgsender_MSG, msgvalue_MSG, 1501229100, 1119552200, DECIMALS_ISF[this]);
[L4058]  COND FALSE  !(revert)
[L4061]  CALL        call ERC20Protected_ERC20Protected__success(this, msgsender_MSG, msgvalue_MSG);
[L3687]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3687]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3688]  COND FALSE  !(revert)
[L3691]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2782]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2783]  COND FALSE  !(revert)
[L2786]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2758]              assume msgsender_MSG != null;
[L2759]              Balance[this] := 0;
[L2760]              _balances_ERC20[this] := zeroRefintArr();
[L2761]              sum__balances0[this] := 0;
[L2762]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2763]              sum__allowed1[this] := 0;
[L2764]              _totalSupply_ERC20[this] := 0;
[L2786]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L3691]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3692]  COND FALSE  !(revert)
[L3695]  CALL        call ERC20Protected_ERC20Protected_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3664]              assume msgsender_MSG != null;
[L3665]              Balance[this] := 0;
[L3695]  RET         call ERC20Protected_ERC20Protected_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  COND FALSE  !(revert)
[L4061]  RET         call ERC20Protected_ERC20Protected__success(this, msgsender_MSG, msgvalue_MSG);
[L4062]  COND FALSE  !(revert)
[L4065]  CALL        call ISF_ISF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]              assume msgsender_MSG != null;
[L3998]              Balance[this] := 0;
[L3999]              DECIMALS_ISF[this] := 18;
[L4000]              __var_25 := DECIMALS_ISF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4001]              INITIAL_SUPPLY_ISF[this] := 40000000000 * (nonlinearPow(10, DECIMALS_ISF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4003]  COND TRUE   DType[this] == ISF
[L4004]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_ISF[this]);
[L3276]              __var_7 := null;
[L3277]  COND FALSE  !(!(account_s464 != null))
[L3281]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2713]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2714]  COND FALSE  !(!(c_s174 >= a_s174))
[L2718]              __ret_0_ := c_s174;
[L3281]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L3282]  COND FALSE  !(revert)
[L3285]              _totalSupply_ERC20[this] := __var_8;
[L3286]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L2713]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2714]  COND FALSE  !(!(c_s174 >= a_s174))
[L2718]              __ret_0_ := c_s174;
[L3286]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L3287]  COND FALSE  !(revert)
[L3290]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s464];
[L3291]              _balances_ERC20[this][account_s464] := __var_9;
[L3292]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s464];
[L3293]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4004]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_ISF[this]);
[L4005]  COND FALSE  !(revert)
[L4065]  RET         call ISF_ISF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L1640]  RET         call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L1641]              assume !revert && gas >= 0;
[L6434]  RET         call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
[L6435]              assume !revert && gas >= 0;
[L6438]  CALL        call CorralChoice_ISF(this);
[L6248]              havoc msgsender_MSG;
[L6249]              havoc msgvalue_MSG;
[L6250]              havoc choice;
[L6251]              havoc to_s717;
[L6252]              havoc value_s717;
[L6253]              havoc __ret_0_transfer;
[L6254]              havoc spender_s287;
[L6255]              havoc value_s287;
[L6256]              havoc __ret_0_approve;
[L6257]              havoc from_s744;
[L6258]              havoc to_s744;
[L6259]              havoc value_s744;
[L6260]              havoc __ret_0_transferFrom;
[L6261]              havoc __ret_0_totalSupply;
[L6262]              havoc owner_s233;
[L6263]              havoc __ret_0_balanceOf;
[L6264]              havoc owner_s249;
[L6265]              havoc spender_s249;
[L6266]              havoc __ret_0_allowance;
[L6267]              havoc spender_s349;
[L6268]              havoc addedValue_s349;
[L6269]              havoc __ret_0_increaseAllowance;
[L6270]              havoc spender_s376;
[L6271]              havoc subtractedValue_s376;
[L6272]              havoc __ret_0_decreaseAllowance;
[L6273]              havoc __ret_0_owner;
[L6274]              havoc __ret_0_isOwner;
[L6275]              havoc newOwner_s659;
[L6276]              havoc name_s794;
[L6277]              havoc symbol_s794;
[L6278]              havoc decimals_s794;
[L6279]              havoc __ret_0_name;
[L6280]              havoc __ret_0_symbol;
[L6281]              havoc __ret_0_decimals;
[L6282]              havoc newName_s837;
[L6283]              havoc newSymbol_s856;
[L6284]              havoc __ret_0_DECIMALS;
[L6285]              havoc __ret_0_INITIAL_SUPPLY;
[L6286]              havoc tmpNow;
[L6287]              havoc gas;
[L6288]              assume gas > 4000000 && gas <= 8000000;
[L6289]              tmpNow := now;
[L6290]              havoc now;
[L6291]              assume now > tmpNow;
[L6292]              assume msgsender_MSG != null;
[L6293]              assume DType[msgsender_MSG] != IERC20;
[L6294]              assume DType[msgsender_MSG] != SafeMath;
[L6295]              assume DType[msgsender_MSG] != ERC20;
[L6296]              assume DType[msgsender_MSG] != Ownable;
[L6297]              assume DType[msgsender_MSG] != ERC20Protected;
[L6298]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6299]              assume DType[msgsender_MSG] != ISF;
[L6300]              Alloc[msgsender_MSG] := true;
[L6301]  COND FALSE  !(choice == 19)
[L6308]  COND TRUE   choice == 18
[L6309]              gas := gas - 21000;
[L6310]  COND TRUE   gas >= 0
[L6311]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6312]              assume msgvalue_MSG == 0;
[L6313]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L503]               havoc __exception;
[L504]               revert := false;
[L505]   COND TRUE   __exception
[L506]               __tmp__Balance := Balance;
[L507]               __tmp__DType := DType;
[L508]               __tmp__Alloc := Alloc;
[L509]               __tmp__balance_ADDR := balance_ADDR;
[L510]               __tmp__M_Ref_int := M_Ref_int;
[L511]               __tmp__sum__balances0 := sum__balances0;
[L512]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L513]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L514]               __tmp__sum__allowed1 := sum__allowed1;
[L515]               __tmp__Length := Length;
[L516]               __tmp__now := now;
[L517]               __tmp___balances_ERC20 := _balances_ERC20;
[L518]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L519]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L520]               __tmp___owner_Ownable := _owner_Ownable;
[L521]               __tmp___name_ERC20DetailedChangeable := _name_ERC20DetailedChangeable;
[L522]               __tmp___symbol_ERC20DetailedChangeable := _symbol_ERC20DetailedChangeable;
[L523]               __tmp___decimals_ERC20DetailedChangeable := _decimals_ERC20DetailedChangeable;
[L524]               __tmp__DECIMALS_ISF := DECIMALS_ISF;
[L525]               __tmp__INITIAL_SUPPLY_ISF := INITIAL_SUPPLY_ISF;
[L526]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2888]  COND TRUE   __tmp__DType[this] == ISF
[L2889]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L3349]              __var_13 := null;
[L3350]  COND TRUE   !(spender_s546 != null)
[L3351]              revert := true;
[L2889]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2890]  COND TRUE   revert
[L526]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L527]               assume revert || gas < 0;
[L6313]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L6438]  RET         call CorralChoice_ISF(this);

Loop:
[L6438]  CALL        call CorralChoice_ISF(this);
[L6248]              havoc msgsender_MSG;
[L6249]              havoc msgvalue_MSG;
[L6250]              havoc choice;
[L6251]              havoc to_s717;
[L6252]              havoc value_s717;
[L6253]              havoc __ret_0_transfer;
[L6254]              havoc spender_s287;
[L6255]              havoc value_s287;
[L6256]              havoc __ret_0_approve;
[L6257]              havoc from_s744;
[L6258]              havoc to_s744;
[L6259]              havoc value_s744;
[L6260]              havoc __ret_0_transferFrom;
[L6261]              havoc __ret_0_totalSupply;
[L6262]              havoc owner_s233;
[L6263]              havoc __ret_0_balanceOf;
[L6264]              havoc owner_s249;
[L6265]              havoc spender_s249;
[L6266]              havoc __ret_0_allowance;
[L6267]              havoc spender_s349;
[L6268]              havoc addedValue_s349;
[L6269]              havoc __ret_0_increaseAllowance;
[L6270]              havoc spender_s376;
[L6271]              havoc subtractedValue_s376;
[L6272]              havoc __ret_0_decreaseAllowance;
[L6273]              havoc __ret_0_owner;
[L6274]              havoc __ret_0_isOwner;
[L6275]              havoc newOwner_s659;
[L6276]              havoc name_s794;
[L6277]              havoc symbol_s794;
[L6278]              havoc decimals_s794;
[L6279]              havoc __ret_0_name;
[L6280]              havoc __ret_0_symbol;
[L6281]              havoc __ret_0_decimals;
[L6282]              havoc newName_s837;
[L6283]              havoc newSymbol_s856;
[L6284]              havoc __ret_0_DECIMALS;
[L6285]              havoc __ret_0_INITIAL_SUPPLY;
[L6286]              havoc tmpNow;
[L6287]              havoc gas;
[L6288]              assume gas > 4000000 && gas <= 8000000;
[L6289]              tmpNow := now;
[L6290]              havoc now;
[L6291]              assume now > tmpNow;
[L6292]              assume msgsender_MSG != null;
[L6293]              assume DType[msgsender_MSG] != IERC20;
[L6294]              assume DType[msgsender_MSG] != SafeMath;
[L6295]              assume DType[msgsender_MSG] != ERC20;
[L6296]              assume DType[msgsender_MSG] != Ownable;
[L6297]              assume DType[msgsender_MSG] != ERC20Protected;
[L6298]              assume DType[msgsender_MSG] != ERC20DetailedChangeable;
[L6299]              assume DType[msgsender_MSG] != ISF;
[L6300]              Alloc[msgsender_MSG] := true;
[L6301]  COND FALSE  !(choice == 19)
[L6308]  COND TRUE   choice == 18
[L6309]              gas := gas - 21000;
[L6310]  COND TRUE   gas >= 0
[L6311]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6312]              assume msgvalue_MSG == 0;
[L6313]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L503]               havoc __exception;
[L504]               revert := false;
[L505]   COND TRUE   __exception
[L506]               __tmp__Balance := Balance;
[L507]               __tmp__DType := DType;
[L508]               __tmp__Alloc := Alloc;
[L509]               __tmp__balance_ADDR := balance_ADDR;
[L510]               __tmp__M_Ref_int := M_Ref_int;
[L511]               __tmp__sum__balances0 := sum__balances0;
[L512]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L513]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L514]               __tmp__sum__allowed1 := sum__allowed1;
[L515]               __tmp__Length := Length;
[L516]               __tmp__now := now;
[L517]               __tmp___balances_ERC20 := _balances_ERC20;
[L518]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L519]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L520]               __tmp___owner_Ownable := _owner_Ownable;
[L521]               __tmp___name_ERC20DetailedChangeable := _name_ERC20DetailedChangeable;
[L522]               __tmp___symbol_ERC20DetailedChangeable := _symbol_ERC20DetailedChangeable;
[L523]               __tmp___decimals_ERC20DetailedChangeable := _decimals_ERC20DetailedChangeable;
[L524]               __tmp__DECIMALS_ISF := DECIMALS_ISF;
[L525]               __tmp__INITIAL_SUPPLY_ISF := INITIAL_SUPPLY_ISF;
[L526]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2888]  COND TRUE   __tmp__DType[this] == ISF
[L2889]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L3349]              __var_13 := null;
[L3350]  COND TRUE   !(spender_s546 != null)
[L3351]              revert := true;
[L2889]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2890]  COND TRUE   revert
[L526]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L527]               assume revert || gas < 0;
[L6313]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L6438]  RET         call CorralChoice_ISF(this);

[2020-11-25 18:15:59,745 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:15:59,745 INFO  L82        PathProgramCache]: Analyzing trace with hash -1504017491, now seen corresponding path program 1 times
[2020-11-25 18:15:59,746 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:15:59,762 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:15:59,780 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:15:59,860 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:15:59,860 INFO  L82        PathProgramCache]: Analyzing trace with hash -599469015, now seen corresponding path program 1 times
[2020-11-25 18:15:59,861 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:15:59,866 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:15:59,871 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:15:59,880 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:15:59,880 INFO  L82        PathProgramCache]: Analyzing trace with hash 141898965, now seen corresponding path program 1 times
[2020-11-25 18:15:59,881 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:15:59,901 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:15:59,923 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-25 18:16:00,121 WARN  L188               SmtUtils]: Spent 105.00 ms on a formula simplification. DAG size of input: 132 DAG size of output: 128
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #1: 97 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
[2020-11-25 18:16:00,637 WARN  L188               SmtUtils]: Spent 315.00 ms on a formula simplification. DAG size of input: 189 DAG size of output: 189
[2020-11-25 18:16:01,145 WARN  L188               SmtUtils]: Spent 504.00 ms on a formula simplification. DAG size of input: 243 DAG size of output: 238
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.003s / 0.004s total
Resizing node table from 10559 to 21107
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3517 to 7027
[2020-11-25 18:16:01,314 WARN  L188               SmtUtils]: Spent 136.00 ms on a formula simplification. DAG size of input: 146 DAG size of output: 140
[2020-11-25 18:16:01,481 WARN  L188               SmtUtils]: Spent 166.00 ms on a formula simplification that was a NOOP. DAG size: 302
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-25 18:16:01,843 WARN  L188               SmtUtils]: Spent 353.00 ms on a formula simplification. DAG size of input: 243 DAG size of output: 243
[2020-11-25 18:16:02,035 WARN  L188               SmtUtils]: Spent 190.00 ms on a formula simplification that was a NOOP. DAG size: 243
Garbage collection #1: 97 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 18:16:02,257 WARN  L188               SmtUtils]: Spent 207.00 ms on a formula simplification. DAG size of input: 174 DAG size of output: 155
[2020-11-25 18:16:02,265 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
[2020-11-25 18:16:03,239 WARN  L188               SmtUtils]: Spent 415.00 ms on a formula simplification. DAG size of input: 272 DAG size of output: 259
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 18:16:04,032 WARN  L188               SmtUtils]: Spent 243.00 ms on a formula simplification. DAG size of input: 189 DAG size of output: 189
[2020-11-25 18:16:04,431 WARN  L188               SmtUtils]: Spent 396.00 ms on a formula simplification. DAG size of input: 242 DAG size of output: 238
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 18:16:04,550 WARN  L188               SmtUtils]: Spent 106.00 ms on a formula simplification. DAG size of input: 147 DAG size of output: 141
[2020-11-25 18:16:04,691 WARN  L188               SmtUtils]: Spent 140.00 ms on a formula simplification that was a NOOP. DAG size: 303
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 18:16:05,023 WARN  L188               SmtUtils]: Spent 324.00 ms on a formula simplification. DAG size of input: 247 DAG size of output: 243
[2020-11-25 18:16:05,891 WARN  L188               SmtUtils]: Spent 866.00 ms on a formula simplification. DAG size of input: 447 DAG size of output: 440
Garbage collection #1: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #2: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #3: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #4: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #5: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #6: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #7: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 18:16:06,221 WARN  L188               SmtUtils]: Spent 314.00 ms on a formula simplification. DAG size of input: 194 DAG size of output: 194
[2020-11-25 18:16:06,442 WARN  L188               SmtUtils]: Spent 205.00 ms on a formula simplification that was a NOOP. DAG size: 302
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 18:16:06,751 WARN  L188               SmtUtils]: Spent 303.00 ms on a formula simplification. DAG size of input: 194 DAG size of output: 194
[2020-11-25 18:16:07,283 WARN  L188               SmtUtils]: Spent 530.00 ms on a formula simplification. DAG size of input: 304 DAG size of output: 303
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
[2020-11-25 18:16:07,887 WARN  L188               SmtUtils]: Spent 601.00 ms on a formula simplification. DAG size of input: 298 DAG size of output: 298
[2020-11-25 18:16:07,901 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:16:07,920 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:16:07,928 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:16:07 BasicIcfg
[2020-11-25 18:16:07,928 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 18:16:07,929 INFO  L168              Benchmark]: Toolchain (without parser) took 15546.98 ms. Allocated memory was 1.0 GB in the beginning and 2.3 GB in the end (delta: 1.2 GB). Free memory was 929.8 MB in the beginning and 1.2 GB in the end (delta: -227.0 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
[2020-11-25 18:16:07,929 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 18:16:07,929 INFO  L168              Benchmark]: Boogie Preprocessor took 119.67 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 18:16:07,930 INFO  L168              Benchmark]: UtopiaSpecLang took 64.74 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 908.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 18:16:07,930 INFO  L168              Benchmark]: Boogie Printer took 20.62 ms. Allocated memory is still 1.0 GB. Free memory is still 908.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 18:16:07,930 INFO  L168              Benchmark]: RCFGBuilder took 943.38 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 48.8 MB). Free memory was 908.4 MB in the beginning and 1.0 GB in the end (delta: -104.8 MB). Peak memory consumption was 197.3 MB. Max. memory is 15.3 GB.
[2020-11-25 18:16:07,931 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.10 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 13.0 MB). Peak memory consumption was 13.0 MB. Max. memory is 15.3 GB.
[2020-11-25 18:16:07,931 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1494.87 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 175.6 MB). Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: -6.7 MB). Peak memory consumption was 493.7 MB. Max. memory is 15.3 GB.
[2020-11-25 18:16:07,931 INFO  L168              Benchmark]: BlockEncodingV2 took 159.70 ms. Allocated memory is still 1.3 GB. Free memory was 1.0 GB in the beginning and 898.8 MB in the end (delta: 108.0 MB). Peak memory consumption was 108.0 MB. Max. memory is 15.3 GB.
[2020-11-25 18:16:07,931 INFO  L168              Benchmark]: BuchiAutomizer took 12702.06 ms. Allocated memory was 1.3 GB in the beginning and 2.3 GB in the end (delta: 1.0 GB). Free memory was 898.8 MB in the beginning and 1.2 GB in the end (delta: -258.0 MB). Peak memory consumption was 904.6 MB. Max. memory is 15.3 GB.
[2020-11-25 18:16:07,934 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5982 locations, 11102 edges
  - StatisticsResult: Encoded RCFG
    5884 locations, 10834 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 119.67 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 64.74 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 908.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 20.62 ms. Allocated memory is still 1.0 GB. Free memory is still 908.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 943.38 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 48.8 MB). Free memory was 908.4 MB in the beginning and 1.0 GB in the end (delta: -104.8 MB). Peak memory consumption was 197.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.10 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 13.0 MB). Peak memory consumption was 13.0 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1494.87 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 175.6 MB). Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: -6.7 MB). Peak memory consumption was 493.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 159.70 ms. Allocated memory is still 1.3 GB. Free memory was 1.0 GB in the beginning and 898.8 MB in the end (delta: 108.0 MB). Peak memory consumption was 108.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 12702.06 ms. Allocated memory was 1.3 GB in the beginning and 2.3 GB in the end (delta: 1.0 GB). Free memory was 898.8 MB in the beginning and 1.2 GB in the end (delta: -258.0 MB). Peak memory consumption was 904.6 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2329 locations, 3366 edges
  - StatisticsResult: BuchiProgram size
    5982 locations, 11102 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 16 locations. The remainder module has 3535 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 12.6s and 6 iterations.  TraceHistogramMax:6. Analysis of lassos took 9.0s. Construction of modules took 2.1s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 5 MinimizatonAttempts, 1198 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3700 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 19997 SDtfs, 11516 SDslu, 39325 SDs, 0 SdLazy, 35253 SolverSat, 2644 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.1s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1501229116) = (new ISF)({from : 1501229119});
[L1614]              havoc __exception;
[L1615]              revert := false;
[L1616]  COND FALSE  !(__exception)
[L1640]  CALL        call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L4045]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4046]  COND FALSE  !(revert)
[L4049]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2782]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2783]  COND FALSE  !(revert)
[L2786]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2758]              assume msgsender_MSG != null;
[L2759]              Balance[this] := 0;
[L2760]              _balances_ERC20[this] := zeroRefintArr();
[L2761]              sum__balances0[this] := 0;
[L2762]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2763]              sum__allowed1[this] := 0;
[L2764]              _totalSupply_ERC20[this] := 0;
[L2786]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L4049]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]  COND FALSE  !(revert)
[L4053]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3525]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3507]              assume msgsender_MSG != null;
[L3508]              Balance[this] := 0;
[L3509]              _owner_Ownable[this] := null;
[L3511]              _owner_Ownable[this] := msgsender_MSG;
[L3512]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3525]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3526]  COND FALSE  !(revert)
[L4053]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4054]  COND FALSE  !(revert)
[L4057]  CALL        call ERC20DetailedChangeable_ERC20DetailedChangeable__success(this, msgsender_MSG, msgvalue_MSG, 1501229100, 1119552200, DECIMALS_ISF[this]);
[L3881]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3881]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3882]  COND FALSE  !(revert)
[L3885]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2782]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2783]  COND FALSE  !(revert)
[L2786]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2758]              assume msgsender_MSG != null;
[L2759]              Balance[this] := 0;
[L2760]              _balances_ERC20[this] := zeroRefintArr();
[L2761]              sum__balances0[this] := 0;
[L2762]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2763]              sum__allowed1[this] := 0;
[L2764]              _totalSupply_ERC20[this] := 0;
[L2786]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L3885]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3886]  COND FALSE  !(revert)
[L3889]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3525]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3507]              assume msgsender_MSG != null;
[L3508]              Balance[this] := 0;
[L3509]              _owner_Ownable[this] := null;
[L3511]              _owner_Ownable[this] := msgsender_MSG;
[L3512]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3525]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3526]  COND FALSE  !(revert)
[L3889]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3890]  COND FALSE  !(revert)
[L3893]  CALL        call ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s794, symbol_s794, decimals_s794);
[L3848]              assume msgsender_MSG != null;
[L3849]              Balance[this] := 0;
[L3850]              _name_ERC20DetailedChangeable[this] := 929111217;
[L3851]              _symbol_ERC20DetailedChangeable[this] := 929111217;
[L3852]              _decimals_ERC20DetailedChangeable[this] := 0;
[L3854]              _name_ERC20DetailedChangeable[this] := name_s794;
[L3855]              _symbol_ERC20DetailedChangeable[this] := symbol_s794;
[L3856]              _decimals_ERC20DetailedChangeable[this] := decimals_s794;
[L3893]  RET         call ERC20DetailedChangeable_ERC20DetailedChangeable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s794, symbol_s794, decimals_s794);
[L3894]  COND FALSE  !(revert)
[L4057]  RET         call ERC20DetailedChangeable_ERC20DetailedChangeable__success(this, msgsender_MSG, msgvalue_MSG, 1501229100, 1119552200, DECIMALS_ISF[this]);
[L4058]  COND FALSE  !(revert)
[L4061]  CALL        call ERC20Protected_ERC20Protected__success(this, msgsender_MSG, msgvalue_MSG);
[L3687]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3687]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3688]  COND FALSE  !(revert)
[L3691]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2782]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2782]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2783]  COND FALSE  !(revert)
[L2786]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2758]              assume msgsender_MSG != null;
[L2759]              Balance[this] := 0;
[L2760]              _balances_ERC20[this] := zeroRefintArr();
[L2761]              sum__balances0[this] := 0;
[L2762]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2763]              sum__allowed1[this] := 0;
[L2764]              _totalSupply_ERC20[this] := 0;
[L2786]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L3691]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3692]  COND FALSE  !(revert)
[L3695]  CALL        call ERC20Protected_ERC20Protected_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3664]              assume msgsender_MSG != null;
[L3665]              Balance[this] := 0;
[L3695]  RET         call ERC20Protected_ERC20Protected_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  COND FALSE  !(revert)
[L4061]  RET         call ERC20Protected_ERC20Protected__success(this, msgsender_MSG, msgvalue_MSG);
[L4062]  COND FALSE  !(revert)
[L4065]  CALL        call ISF_ISF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]              assume msgsender_MSG != null;
[L3998]              Balance[this] := 0;
[L3999]              DECIMALS_ISF[this] := 18;
[L4000]              __var_25 := DECIMALS_ISF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4001]              INITIAL_SUPPLY_ISF[this] := 40000000000 * (nonlinearPow(10, DECIMALS_ISF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4003]  COND TRUE   DType[this] == ISF
[L4004]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_ISF[this]);
[L3276]              __var_7 := null;
[L3277]  COND FALSE  !(!(account_s464 != null))
[L3281]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2713]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2714]  COND FALSE  !(!(c_s174 >= a_s174))
[L2718]              __ret_0_ := c_s174;
[L3281]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L3282]  COND FALSE  !(revert)
[L3285]              _totalSupply_ERC20[this] := __var_8;
[L3286]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L2713]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2714]  COND FALSE  !(!(c_s174 >= a_s174))
[L2718]              __ret_0_ := c_s174;
[L3286]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L3287]  COND FALSE  !(revert)
[L3290]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s464];
[L3291]              _balances_ERC20[this][account_s464] := __var_9;
[L3292]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s464];
[L3293]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4004]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_ISF[this]);
[L4005]  COND FALSE  !(revert)
[L4065]  RET         call ISF_ISF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L1640]  RET         call ISF_ISF__success(this, msgsender_MSG, msgvalue_MSG);
[L1641]              assume !revert && gas >= 0;
[L6434]  RET         call ISF_ISF(this, msgsender_MSG, msgvalue_MSG);
ERC20(1501229116).approve~address~uint256.gas(3979002)({from : 1501229108, spender : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                call_approve_ERC200 := true;
[L3]                call_approve_ERC200 := false;
[L3]                revert := revert_hold;
[L503]              havoc __exception;
[L504]              revert := false;
[L505]   COND TRUE  __exception
[L506]              __tmp__Balance := Balance;
[L507]              __tmp__DType := DType;
[L508]              __tmp__Alloc := Alloc;
[L509]              __tmp__balance_ADDR := balance_ADDR;
[L510]              __tmp__M_Ref_int := M_Ref_int;
[L511]              __tmp__sum__balances0 := sum__balances0;
[L512]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L513]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L514]              __tmp__sum__allowed1 := sum__allowed1;
[L515]              __tmp__Length := Length;
[L516]              __tmp__now := now;
[L517]              __tmp___balances_ERC20 := _balances_ERC20;
[L518]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L519]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L520]              __tmp___owner_Ownable := _owner_Ownable;
[L521]              __tmp___name_ERC20DetailedChangeable := _name_ERC20DetailedChangeable;
[L522]              __tmp___symbol_ERC20DetailedChangeable := _symbol_ERC20DetailedChangeable;
[L523]              __tmp___decimals_ERC20DetailedChangeable := _decimals_ERC20DetailedChangeable;
[L524]              __tmp__DECIMALS_ISF := DECIMALS_ISF;
[L525]              __tmp__INITIAL_SUPPLY_ISF := INITIAL_SUPPLY_ISF;
[L526]   CALL       call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2888]  COND TRUE  __tmp__DType[this] == ISF
[L2889]  CALL       call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L3349]             __var_13 := null;
[L3350]  COND TRUE  !(spender_s546 != null)
[L3351]             revert := true;
[L2889]  RET        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2890]  COND TRUE  revert
[L526]   RET        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L527]              assume revert || gas < 0;
[L6313]  RET        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);

Loop:
ERC20(1501229116).approve~address~uint256.gas(3979001)({from : 1501229112, spender : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume p1 != msgsender_MSG || p2 != spender_s287;
[L3]                call_approve_ERC200 := true;
[L3]                call_approve_ERC200 := false;
[L3]                revert := revert_hold;
[L503]              havoc __exception;
[L504]              revert := false;
[L505]   COND TRUE  __exception
[L506]              __tmp__Balance := Balance;
[L507]              __tmp__DType := DType;
[L508]              __tmp__Alloc := Alloc;
[L509]              __tmp__balance_ADDR := balance_ADDR;
[L510]              __tmp__M_Ref_int := M_Ref_int;
[L511]              __tmp__sum__balances0 := sum__balances0;
[L512]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L513]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L514]              __tmp__sum__allowed1 := sum__allowed1;
[L515]              __tmp__Length := Length;
[L516]              __tmp__now := now;
[L517]              __tmp___balances_ERC20 := _balances_ERC20;
[L518]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L519]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L520]              __tmp___owner_Ownable := _owner_Ownable;
[L521]              __tmp___name_ERC20DetailedChangeable := _name_ERC20DetailedChangeable;
[L522]              __tmp___symbol_ERC20DetailedChangeable := _symbol_ERC20DetailedChangeable;
[L523]              __tmp___decimals_ERC20DetailedChangeable := _decimals_ERC20DetailedChangeable;
[L524]              __tmp__DECIMALS_ISF := DECIMALS_ISF;
[L525]              __tmp__INITIAL_SUPPLY_ISF := INITIAL_SUPPLY_ISF;
[L526]   CALL       call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L2888]  COND TRUE  __tmp__DType[this] == ISF
[L2889]  CALL       call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L3349]             __var_13 := null;
[L3350]  COND TRUE  !(spender_s546 != null)
[L3351]             revert := true;
[L2889]  RET        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2890]  COND TRUE  revert
[L526]   RET        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L527]              assume revert || gas < 0;
[L6313]  RET        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
