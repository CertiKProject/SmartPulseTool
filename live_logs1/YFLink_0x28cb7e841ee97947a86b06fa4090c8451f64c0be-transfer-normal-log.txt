This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 09:34:01,686 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 09:34:01,688 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 09:34:01,698 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 09:34:01,698 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 09:34:01,699 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 09:34:01,700 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 09:34:01,701 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 09:34:01,703 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 09:34:01,703 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 09:34:01,704 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 09:34:01,704 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 09:34:01,705 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 09:34:01,706 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 09:34:01,707 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 09:34:01,707 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 09:34:01,708 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 09:34:01,709 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 09:34:01,710 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 09:34:01,711 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 09:34:01,712 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 09:34:01,713 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 09:34:01,714 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 09:34:01,715 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 09:34:01,715 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 09:34:01,715 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 09:34:01,716 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 09:34:01,716 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 09:34:01,716 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 09:34:01,717 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 09:34:01,717 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 09:34:01,718 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 09:34:01,718 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 09:34:01,719 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 09:34:01,719 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 09:34:01,719 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 09:34:01,720 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 09:34:01,720 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 09:34:01,720 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 09:34:01,721 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 09:34:01,721 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 09:34:01,722 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 09:34:01,730 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 09:34:01,730 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 09:34:01,731 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 09:34:01,731 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 09:34:01,731 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 09:34:01,731 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 09:34:01,731 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 09:34:01,731 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 09:34:01,731 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 09:34:01,731 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 09:34:01,732 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 09:34:01,732 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 09:34:01,732 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 09:34:01,732 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 09:34:01,732 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 09:34:01,732 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 09:34:01,732 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 09:34:01,732 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 09:34:01,732 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 09:34:01,732 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 09:34:01,732 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 09:34:01,733 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 09:34:01,733 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 09:34:01,733 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 09:34:01,733 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 09:34:01,733 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 09:34:01,754 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 09:34:01,764 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 09:34:01,767 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 09:34:01,768 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 09:34:01,768 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 09:34:01,769 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl
[2020-11-25 09:34:01,769 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl'
[2020-11-25 09:34:01,852 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 09:34:01,854 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 09:34:01,854 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 09:34:01,854 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 09:34:01,854 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 09:34:01,872 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:34:01" (1/1) ...
[2020-11-25 09:34:01,873 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:34:01" (1/1) ...
[2020-11-25 09:34:01,908 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:34:01" (1/1) ...
[2020-11-25 09:34:01,909 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:34:01" (1/1) ...
[2020-11-25 09:34:01,933 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:34:01" (1/1) ...
[2020-11-25 09:34:01,945 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:34:01" (1/1) ...
[2020-11-25 09:34:01,953 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:34:01" (1/1) ...
[2020-11-25 09:34:01,964 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 09:34:01,964 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 09:34:01,965 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 09:34:01,967 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 09:34:01,971 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:34:01" (1/1) ...
[2020-11-25 09:34:01,993 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && governance_YFLink[this] == old(governance_YFLink[this]) && minters_YFLink[this] == old(minters_YFLink[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 09:34:01,999 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && governance_YFLink[this] == old(governance_YFLink[this]) && minters_YFLink[this] == old(minters_YFLink[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 09:34:02,007 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && governance_YFLink[this] == old(governance_YFLink[this]) && minters_YFLink[this] == old(minters_YFLink[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 09:34:02,015 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=recipient_s140 ) && msg.sender!=recipient_s140 ) && amount_s140<=_balances_ERC20[this][msg.sender] ) && ( _balances_ERC20[this][recipient_s140] + amount_s140 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && amount_s140>=0 ) && amount_s140<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s140]>=0 ) && _balances_ERC20[this][recipient_s140]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 09:34:02,018 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( __ret_0_==true && _balances_ERC20[this][msg.sender]==( ( old(_balances_ERC20[this][msg.sender]) ) - amount_s140 ) ) && _balances_ERC20[this][recipient_s140]==( ( old(_balances_ERC20[this][recipient_s140]) ) + amount_s140 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _allowances_ERC20[this]==( old(_allowances_ERC20[this]) ) ) && _balances_ERC20[this][p1]==( old(_balances_ERC20[this][p1]) ) ) && governance_YFLink[this]==( old(governance_YFLink[this]) ) ) && minters_YFLink[this]==( old(minters_YFLink[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[governance_YFLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[governance_YFLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[minters_YFLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[minters_YFLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]]
[2020-11-25 09:34:02,025 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && governance_YFLink[this] == old(governance_YFLink[this]) && minters_YFLink[this] == old(minters_YFLink[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 09:34:02,025 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(success_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 09:34:02,035 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:34:02 PropertyContainer
[2020-11-25 09:34:02,035 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 09:34:02,035 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 09:34:02,035 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 09:34:02,035 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 09:34:02,036 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:34:01" (1/2) ...
[2020-11-25 09:34:02,036 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 09:34:02,037 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 09:34:02,054 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:34:02" (2/2) ...
[2020-11-25 09:34:02,054 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 09:34:02,054 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 09:34:02,054 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 09:34:02,054 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 09:34:02,055 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:34:01" (1/2) ...
[2020-11-25 09:34:02,092 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 09:34:02,092 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 09:34:02,092 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 09:34:02,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 09:34:02,092 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 09:34:02,092 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 09:34:02,092 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 09:34:02,092 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 09:34:02,092 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 09:34:02,092 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 09:34:02,092 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-25 09:34:02,092 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-25 09:34:02,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-25 09:34:02,093 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-25 09:34:02,093 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 09:34:02,093 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 09:34:02,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 09:34:02,093 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 09:34:02,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 09:34:02,093 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 09:34:02,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 09:34:02,093 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 09:34:02,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 09:34:02,093 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 09:34:02,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 09:34:02,094 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 09:34:02,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 09:34:02,094 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 09:34:02,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 09:34:02,094 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 09:34:02,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 09:34:02,094 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 09:34:02,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 09:34:02,094 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 09:34:02,094 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 09:34:02,094 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 09:34:02,094 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 09:34:02,095 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 09:34:02,095 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 09:34:02,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 09:34:02,095 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 09:34:02,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 09:34:02,095 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 09:34:02,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 09:34:02,095 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 09:34:02,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 09:34:02,095 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 09:34:02,095 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 09:34:02,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 09:34:02,095 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 09:34:02,095 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 09:34:02,095 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 09:34:02,096 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 09:34:02,096 INFO  L130     BoogieDeclarations]: Found specification of procedure YFLink_YFLink_NoBaseCtor__success
[2020-11-25 09:34:02,096 INFO  L130     BoogieDeclarations]: Found specification of procedure YFLink_YFLink
[2020-11-25 09:34:02,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure YFLink_YFLink
[2020-11-25 09:34:02,096 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_YFLink
[2020-11-25 09:34:02,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_YFLink
[2020-11-25 09:34:02,096 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_YFLink
[2020-11-25 09:34:02,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_YFLink
[2020-11-25 09:34:02,096 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_YFLink
[2020-11-25 09:34:02,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_YFLink
[2020-11-25 09:34:02,096 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_YFLink
[2020-11-25 09:34:02,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_YFLink
[2020-11-25 09:34:02,096 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_YFLink
[2020-11-25 09:34:02,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_YFLink
[2020-11-25 09:34:02,096 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_YFLink
[2020-11-25 09:34:02,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_YFLink
[2020-11-25 09:34:02,097 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 09:34:02,097 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 09:34:02,097 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 09:34:02,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 09:34:02,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 09:34:02,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-25 09:34:02,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-25 09:34:02,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 09:34:02,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 09:34:02,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 09:34:02,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 09:34:02,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 09:34:02,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 09:34:02,098 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_YFLink
[2020-11-25 09:34:02,098 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 09:34:02,098 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 09:34:02,098 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 09:34:02,098 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 09:34:02,098 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 09:34:02,098 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 09:34:02,098 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-25 09:34:02,098 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-25 09:34:02,098 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-25 09:34:02,098 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 09:34:02,098 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 09:34:02,098 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 09:34:02,098 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 09:34:02,098 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 09:34:02,098 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 09:34:02,099 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 09:34:02,099 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 09:34:02,099 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 09:34:02,099 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 09:34:02,099 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 09:34:02,099 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 09:34:02,099 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 09:34:02,099 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 09:34:02,099 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 09:34:02,099 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 09:34:02,099 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 09:34:02,099 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 09:34:02,099 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 09:34:02,099 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 09:34:02,099 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 09:34:02,100 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 09:34:02,100 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 09:34:02,100 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 09:34:02,100 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 09:34:02,100 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 09:34:02,100 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 09:34:02,100 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 09:34:02,100 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 09:34:02,100 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 09:34:02,100 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 09:34:02,100 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 09:34:02,100 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 09:34:02,100 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 09:34:02,100 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 09:34:02,101 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 09:34:02,101 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 09:34:02,101 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 09:34:02,101 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 09:34:02,101 INFO  L130     BoogieDeclarations]: Found specification of procedure YFLink_YFLink_NoBaseCtor__fail
[2020-11-25 09:34:02,101 INFO  L130     BoogieDeclarations]: Found specification of procedure YFLink_YFLink__success
[2020-11-25 09:34:02,101 INFO  L130     BoogieDeclarations]: Found specification of procedure YFLink_YFLink__fail
[2020-11-25 09:34:02,101 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_YFLink__success
[2020-11-25 09:34:02,101 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_YFLink__fail
[2020-11-25 09:34:02,101 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_YFLink__success
[2020-11-25 09:34:02,101 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_YFLink__fail
[2020-11-25 09:34:02,101 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_YFLink__success
[2020-11-25 09:34:02,101 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_YFLink__fail
[2020-11-25 09:34:02,101 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_YFLink__success
[2020-11-25 09:34:02,102 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_YFLink__fail
[2020-11-25 09:34:02,102 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_YFLink__success
[2020-11-25 09:34:02,102 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_YFLink__fail
[2020-11-25 09:34:02,102 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_YFLink__success
[2020-11-25 09:34:02,102 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_YFLink__fail
[2020-11-25 09:34:02,102 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 09:34:02,102 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 09:34:02,102 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 09:34:02,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 09:34:02,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 09:34:02,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 09:34:02,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 09:34:02,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 09:34:02,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 09:34:02,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 09:34:02,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-25 09:34:02,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-25 09:34:02,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-25 09:34:02,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-25 09:34:02,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-25 09:34:02,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 09:34:02,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 09:34:02,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 09:34:02,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 09:34:02,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 09:34:02,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 09:34:02,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 09:34:02,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 09:34:02,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 09:34:02,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 09:34:02,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 09:34:02,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 09:34:02,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 09:34:02,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 09:34:02,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 09:34:02,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 09:34:02,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 09:34:02,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 09:34:02,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 09:34:02,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 09:34:02,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 09:34:02,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 09:34:02,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 09:34:02,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 09:34:02,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 09:34:02,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure YFLink_YFLink_NoBaseCtor__fail
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure YFLink_YFLink_NoBaseCtor__success
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure YFLink_YFLink__fail
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure YFLink_YFLink__success
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_YFLink__fail
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_YFLink__success
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_YFLink__fail
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_YFLink__success
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_YFLink__fail
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_YFLink__success
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_YFLink__fail
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_YFLink__success
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_YFLink__fail
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_YFLink__success
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_YFLink__fail
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_YFLink__success
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 09:34:02,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 09:34:02,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 09:34:02,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 09:34:02,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 09:34:02,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 09:34:02,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 09:34:02,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-25 09:34:02,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-25 09:34:02,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 09:34:02,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 09:34:02,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 09:34:02,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 09:34:02,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 09:34:02,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 09:34:02,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_YFLink
[2020-11-25 09:34:02,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 09:34:02,107 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 09:34:02,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 09:34:02,286 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:34:02,287 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:34:02,287 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:34:02,511 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:34:02,760 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 09:34:02,760 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 09:34:02,762 INFO  L202        PluginConnector]: Adding new model YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:34:02 BoogieIcfgContainer
[2020-11-25 09:34:02,762 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:34:02" (2/2) ...
[2020-11-25 09:34:02,762 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 09:34:02,763 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@13601585 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:34:02, skipping insertion in model container
[2020-11-25 09:34:02,763 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 09:34:02,763 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 09:34:02,763 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 09:34:02,764 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 09:34:02,764 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:34:01" (1/3) ...
[2020-11-25 09:34:02,765 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1b6e65c8 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:34:02, skipping insertion in model container
[2020-11-25 09:34:02,765 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:34:02" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 09:34:02,800 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:34:02 NWAContainer
[2020-11-25 09:34:02,800 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 09:34:02,800 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 09:34:02,800 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 09:34:02,801 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 09:34:02,802 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:34:02" (3/4) ...
[2020-11-25 09:34:02,802 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@322ba298 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:34:02, skipping insertion in model container
[2020-11-25 09:34:02,802 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:34:02" (4/4) ...
[2020-11-25 09:34:02,805 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 09:34:02,809 INFO  L110   BuchiProductObserver]: Initial RCFG 1788 locations, 2446 edges
[2020-11-25 09:34:02,810 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 09:34:02,822 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 09:34:04,234 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 09:34:04,240 INFO  L110   BuchiProductObserver]: BuchiProgram size 4438 locations, 7956 edges
[2020-11-25 09:34:04,240 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:34:04 BoogieIcfgContainer
[2020-11-25 09:34:04,240 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 09:34:04,241 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 09:34:04,241 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 09:34:04,242 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 09:34:04,243 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:34:04" (1/1) ...
[2020-11-25 09:34:04,333 INFO  L313           BlockEncoder]: Initial Icfg 4438 locations, 7956 edges
[2020-11-25 09:34:04,333 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 09:34:04,334 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 09:34:04,334 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 09:34:04,334 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 09:34:04,346 INFO  L70    emoveInfeasibleEdges]: Removed 144 edges and 15 locations because of local infeasibility
[2020-11-25 09:34:04,357 INFO  L70        RemoveSinkStates]: Removed 92 edges and 61 locations by removing sink states
[2020-11-25 09:34:04,367 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 09:34:04,370 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 09:34:04,373 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 09:34:04,373 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 09:34:04,378 INFO  L313           BlockEncoder]: Encoded RCFG 4342 locations, 7691 edges
[2020-11-25 09:34:04,378 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 09:34:04 BasicIcfg
[2020-11-25 09:34:04,378 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 09:34:04,378 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 09:34:04,378 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 09:34:04,381 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 09:34:04,381 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:34:04,381 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:34:01" (1/6) ...
[2020-11-25 09:34:04,383 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@49b39e7d and model type YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:34:04, skipping insertion in model container
[2020-11-25 09:34:04,383 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:34:04,383 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:34:02" (2/6) ...
[2020-11-25 09:34:04,384 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@49b39e7d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:34:04, skipping insertion in model container
[2020-11-25 09:34:04,384 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:34:04,384 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:34:02" (3/6) ...
[2020-11-25 09:34:04,384 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@49b39e7d and model type YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 09:34:04, skipping insertion in model container
[2020-11-25 09:34:04,384 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:34:04,384 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:34:02" (4/6) ...
[2020-11-25 09:34:04,384 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@49b39e7d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:34:04, skipping insertion in model container
[2020-11-25 09:34:04,384 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:34:04,385 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:34:04" (5/6) ...
[2020-11-25 09:34:04,385 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@49b39e7d and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 09:34:04, skipping insertion in model container
[2020-11-25 09:34:04,385 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:34:04,385 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 09:34:04" (6/6) ...
[2020-11-25 09:34:04,386 INFO  L404   chiAutomizerObserver]: Analyzing ICFG YFLink_0x28cb7e841ee97947a86b06fa4090c8451f64c0be_transfer-normal.bpl_BEv2
[2020-11-25 09:34:04,422 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 09:34:04,422 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 09:34:04,422 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 09:34:04,422 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 09:34:04,422 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 09:34:04,422 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 09:34:04,422 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 09:34:04,422 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 09:34:04,422 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 09:34:04,455 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4342 states.
[2020-11-25 09:34:04,508 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:34:04,508 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:34:04,508 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:34:04,515 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:34:04,515 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:34:04,515 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 09:34:04,515 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4342 states.
[2020-11-25 09:34:04,533 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:34:04,533 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:34:04,533 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:34:04,535 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:34:04,535 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4864]              assume null == 0;
[L4865]  CALL        call this := FreshRefGenerator__success();
[L2052]              havoc newRef;
[L2053]              assume Alloc[newRef] == false;
[L2054]              Alloc[newRef] := true;
[L2055]              assume newRef != null;
[L4865]  RET         call this := FreshRefGenerator__success();
[L4866]              assume now >= 0;
[L4867]              assume DType[this] == YFLink;
[L4868]              assume msgvalue_MSG == 0;
[L4869]              gas := gas - 53000;
[L4870]  CALL        call YFLink_YFLink(this, msgsender_MSG, msgvalue_MSG);
[L1099]              havoc __exception;
[L1100]              revert := false;
[L1101]  COND FALSE  !(__exception)
[L1126]  CALL        call YFLink_YFLink__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2101]              assume msgsender_MSG != null;
[L2102]              Balance[this] := 0;
[L2116]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L3180]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3181]  COND TRUE   revert
[L1126]  RET         call YFLink_YFLink__success(this, msgsender_MSG, msgvalue_MSG);
[L1127]              assume !revert && gas >= 0;
[L4870]  RET         call YFLink_YFLink(this, msgsender_MSG, msgvalue_MSG);
[L4871]              assume !revert && gas >= 0;

Loop:
[L4874]  CALL        call CorralChoice_YFLink(this);
[L4695]              havoc msgsender_MSG;
[L4696]              havoc msgvalue_MSG;
[L4697]              havoc choice;
[L4698]              havoc __ret_0_totalSupply;
[L4699]              havoc account_s121;
[L4700]              havoc __ret_0_balanceOf;
[L4701]              havoc recipient_s140;
[L4702]              havoc amount_s140;
[L4703]              havoc __ret_0_transfer;
[L4704]              havoc owner_s156;
[L4705]              havoc spender_s156;
[L4706]              havoc __ret_0_allowance;
[L4707]              havoc spender_s175;
[L4708]              havoc amount_s175;
[L4709]              havoc __ret_0_approve;
[L4710]              havoc sender_s211;
[L4711]              havoc recipient_s211;
[L4712]              havoc amount_s211;
[L4713]              havoc __ret_0_transferFrom;
[L4714]              havoc spender_s238;
[L4715]              havoc addedValue_s238;
[L4716]              havoc __ret_0_increaseAllowance;
[L4717]              havoc spender_s266;
[L4718]              havoc subtractedValue_s266;
[L4719]              havoc __ret_0_decreaseAllowance;
[L4720]              havoc name_s484;
[L4721]              havoc symbol_s484;
[L4722]              havoc decimals_s484;
[L4723]              havoc __ret_0_name;
[L4724]              havoc __ret_0_symbol;
[L4725]              havoc __ret_0_decimals;
[L4726]              havoc __ret_0_governance;
[L4727]              havoc arg732_s0;
[L4728]              havoc __ret_0_minters;
[L4729]              havoc account_s671;
[L4730]              havoc amount_s671;
[L4731]              havoc _governance_s689;
[L4732]              havoc _minter_s709;
[L4733]              havoc _minter_s729;
[L4734]              havoc tmpNow;
[L4735]              havoc gas;
[L4736]              assume gas > 4000000 && gas <= 8000000;
[L4737]              tmpNow := now;
[L4738]              havoc now;
[L4739]              assume now > tmpNow;
[L4740]              assume msgsender_MSG != null;
[L4741]              assume DType[msgsender_MSG] != IERC20;
[L4742]              assume DType[msgsender_MSG] != Context;
[L4743]              assume DType[msgsender_MSG] != ERC20;
[L4744]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4745]              assume DType[msgsender_MSG] != SafeMath;
[L4746]              assume DType[msgsender_MSG] != YFLink;
[L4747]              Alloc[msgsender_MSG] := true;
[L4748]  COND TRUE   choice == 17
[L4749]              gas := gas - 21000;
[L4750]  COND FALSE  !(gas >= 0)
[L4874]  RET         call CorralChoice_YFLink(this);

[2020-11-25 09:34:04,548 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:34:04,548 INFO  L82        PathProgramCache]: Analyzing trace with hash -2109121102, now seen corresponding path program 1 times
[2020-11-25 09:34:04,552 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:34:04,570 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:34:04,601 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:34:04,603 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:34:04,603 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:34:04,864 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:34:04,873 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:34:04,873 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:34:04,874 INFO  L87              Difference]: Start difference. First operand 4342 states. Second operand 4 states.
[2020-11-25 09:34:05,265 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:34:05,265 INFO  L93              Difference]: Finished difference Result 2912 states and 3415 transitions.
[2020-11-25 09:34:05,266 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:34:05,267 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2912 states and 3415 transitions.
[2020-11-25 09:34:05,283 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:34:05,303 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2912 states to 2912 states and 3415 transitions.
[2020-11-25 09:34:05,304 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 09:34:05,306 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 771
[2020-11-25 09:34:05,306 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2912 states and 3415 transitions.
[2020-11-25 09:34:05,314 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:34:05,314 INFO  L728         BuchiCegarLoop]: Abstraction has 2912 states and 3415 transitions.
[2020-11-25 09:34:05,328 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2912 states and 3415 transitions.
[2020-11-25 09:34:05,369 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2912 to 2912.
[2020-11-25 09:34:05,369 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2912 states.
[2020-11-25 09:34:05,374 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2912 states to 2912 states and 3415 transitions.
[2020-11-25 09:34:05,375 INFO  L751         BuchiCegarLoop]: Abstraction has 2912 states and 3415 transitions.
[2020-11-25 09:34:05,375 INFO  L631         BuchiCegarLoop]: Abstraction has 2912 states and 3415 transitions.
[2020-11-25 09:34:05,375 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 09:34:05,375 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2912 states and 3415 transitions.
[2020-11-25 09:34:05,382 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:34:05,382 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:34:05,382 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:34:05,384 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:34:05,384 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4864]              assume null == 0;
[L4865]  CALL        call this := FreshRefGenerator__success();
[L2052]              havoc newRef;
[L2053]              assume Alloc[newRef] == false;
[L2054]              Alloc[newRef] := true;
[L2055]              assume newRef != null;
[L4865]  RET         call this := FreshRefGenerator__success();
[L4866]              assume now >= 0;
[L4867]              assume DType[this] == YFLink;
[L4868]              assume msgvalue_MSG == 0;
[L4869]              gas := gas - 53000;
[L4870]  CALL        call YFLink_YFLink(this, msgsender_MSG, msgvalue_MSG);
[L1099]              havoc __exception;
[L1100]              revert := false;
[L1101]  COND FALSE  !(__exception)
[L1126]  CALL        call YFLink_YFLink__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2101]              assume msgsender_MSG != null;
[L2102]              Balance[this] := 0;
[L2116]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L3180]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3181]  COND TRUE   revert
[L1126]  RET         call YFLink_YFLink__success(this, msgsender_MSG, msgvalue_MSG);
[L1127]              assume !revert && gas >= 0;
[L4870]  RET         call YFLink_YFLink(this, msgsender_MSG, msgvalue_MSG);
[L4871]              assume !revert && gas >= 0;
[L4874]  CALL        call CorralChoice_YFLink(this);
[L4695]              havoc msgsender_MSG;
[L4696]              havoc msgvalue_MSG;
[L4697]              havoc choice;
[L4698]              havoc __ret_0_totalSupply;
[L4699]              havoc account_s121;
[L4700]              havoc __ret_0_balanceOf;
[L4701]              havoc recipient_s140;
[L4702]              havoc amount_s140;
[L4703]              havoc __ret_0_transfer;
[L4704]              havoc owner_s156;
[L4705]              havoc spender_s156;
[L4706]              havoc __ret_0_allowance;
[L4707]              havoc spender_s175;
[L4708]              havoc amount_s175;
[L4709]              havoc __ret_0_approve;
[L4710]              havoc sender_s211;
[L4711]              havoc recipient_s211;
[L4712]              havoc amount_s211;
[L4713]              havoc __ret_0_transferFrom;
[L4714]              havoc spender_s238;
[L4715]              havoc addedValue_s238;
[L4716]              havoc __ret_0_increaseAllowance;
[L4717]              havoc spender_s266;
[L4718]              havoc subtractedValue_s266;
[L4719]              havoc __ret_0_decreaseAllowance;
[L4720]              havoc name_s484;
[L4721]              havoc symbol_s484;
[L4722]              havoc decimals_s484;
[L4723]              havoc __ret_0_name;
[L4724]              havoc __ret_0_symbol;
[L4725]              havoc __ret_0_decimals;
[L4726]              havoc __ret_0_governance;
[L4727]              havoc arg732_s0;
[L4728]              havoc __ret_0_minters;
[L4729]              havoc account_s671;
[L4730]              havoc amount_s671;
[L4731]              havoc _governance_s689;
[L4732]              havoc _minter_s709;
[L4733]              havoc _minter_s729;
[L4734]              havoc tmpNow;
[L4735]              havoc gas;
[L4736]              assume gas > 4000000 && gas <= 8000000;
[L4737]              tmpNow := now;
[L4738]              havoc now;
[L4739]              assume now > tmpNow;
[L4740]              assume msgsender_MSG != null;
[L4741]              assume DType[msgsender_MSG] != IERC20;
[L4742]              assume DType[msgsender_MSG] != Context;
[L4743]              assume DType[msgsender_MSG] != ERC20;
[L4744]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4745]              assume DType[msgsender_MSG] != SafeMath;
[L4746]              assume DType[msgsender_MSG] != YFLink;
[L4747]              Alloc[msgsender_MSG] := true;
[L4748]  COND FALSE  !(choice == 17)
[L4754]  COND FALSE  !(choice == 16)
[L4760]  COND TRUE   choice == 15
[L4761]              gas := gas - 21000;
[L4762]  COND TRUE   gas >= 0
[L4763]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4764]              assume msgvalue_MSG == 0;
[L4765]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L393]               havoc __exception;
[L394]               revert := false;
[L395]   COND FALSE  !(__exception)
[L420]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2252]  COND TRUE   DType[this] == YFLink
[L2253]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]              __ret_0_ := msgsender_MSG;
[L2253]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2254]  COND TRUE   revert
[L420]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L421]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s140) && _balances_ERC20[this][recipient_s140] == old(_balances_ERC20[this][recipient_s140]) + amount_s140) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && governance_YFLink[this] == old(governance_YFLink[this])) && minters_YFLink[this] == old(minters_YFLink[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4765]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L4874]  RET         call CorralChoice_YFLink(this);

Loop:
[L4874]  CALL        call CorralChoice_YFLink(this);
[L4695]              havoc msgsender_MSG;
[L4696]              havoc msgvalue_MSG;
[L4697]              havoc choice;
[L4698]              havoc __ret_0_totalSupply;
[L4699]              havoc account_s121;
[L4700]              havoc __ret_0_balanceOf;
[L4701]              havoc recipient_s140;
[L4702]              havoc amount_s140;
[L4703]              havoc __ret_0_transfer;
[L4704]              havoc owner_s156;
[L4705]              havoc spender_s156;
[L4706]              havoc __ret_0_allowance;
[L4707]              havoc spender_s175;
[L4708]              havoc amount_s175;
[L4709]              havoc __ret_0_approve;
[L4710]              havoc sender_s211;
[L4711]              havoc recipient_s211;
[L4712]              havoc amount_s211;
[L4713]              havoc __ret_0_transferFrom;
[L4714]              havoc spender_s238;
[L4715]              havoc addedValue_s238;
[L4716]              havoc __ret_0_increaseAllowance;
[L4717]              havoc spender_s266;
[L4718]              havoc subtractedValue_s266;
[L4719]              havoc __ret_0_decreaseAllowance;
[L4720]              havoc name_s484;
[L4721]              havoc symbol_s484;
[L4722]              havoc decimals_s484;
[L4723]              havoc __ret_0_name;
[L4724]              havoc __ret_0_symbol;
[L4725]              havoc __ret_0_decimals;
[L4726]              havoc __ret_0_governance;
[L4727]              havoc arg732_s0;
[L4728]              havoc __ret_0_minters;
[L4729]              havoc account_s671;
[L4730]              havoc amount_s671;
[L4731]              havoc _governance_s689;
[L4732]              havoc _minter_s709;
[L4733]              havoc _minter_s729;
[L4734]              havoc tmpNow;
[L4735]              havoc gas;
[L4736]              assume gas > 4000000 && gas <= 8000000;
[L4737]              tmpNow := now;
[L4738]              havoc now;
[L4739]              assume now > tmpNow;
[L4740]              assume msgsender_MSG != null;
[L4741]              assume DType[msgsender_MSG] != IERC20;
[L4742]              assume DType[msgsender_MSG] != Context;
[L4743]              assume DType[msgsender_MSG] != ERC20;
[L4744]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4745]              assume DType[msgsender_MSG] != SafeMath;
[L4746]              assume DType[msgsender_MSG] != YFLink;
[L4747]              Alloc[msgsender_MSG] := true;
[L4748]  COND FALSE  !(choice == 17)
[L4754]  COND FALSE  !(choice == 16)
[L4760]  COND TRUE   choice == 15
[L4761]              gas := gas - 21000;
[L4762]  COND TRUE   gas >= 0
[L4763]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4764]              assume msgvalue_MSG == 0;
[L4765]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L393]               havoc __exception;
[L394]               revert := false;
[L395]   COND FALSE  !(__exception)
[L420]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2252]  COND TRUE   DType[this] == YFLink
[L2253]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]              __ret_0_ := msgsender_MSG;
[L2253]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2254]  COND TRUE   revert
[L420]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L421]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s140) && _balances_ERC20[this][recipient_s140] == old(_balances_ERC20[this][recipient_s140]) + amount_s140) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && governance_YFLink[this] == old(governance_YFLink[this])) && minters_YFLink[this] == old(minters_YFLink[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4765]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L4874]  RET         call CorralChoice_YFLink(this);

[2020-11-25 09:34:05,388 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:34:05,388 INFO  L82        PathProgramCache]: Analyzing trace with hash 1567844467, now seen corresponding path program 1 times
[2020-11-25 09:34:05,389 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:34:05,396 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:34:05,414 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:34:05,415 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:34:05,415 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:34:05,416 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:34:05,416 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:34:05,416 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:34:05,416 INFO  L87              Difference]: Start difference. First operand 2912 states and 3415 transitions. cyclomatic complexity: 505 Second operand 4 states.
[2020-11-25 09:34:06,075 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:34:06,075 INFO  L93              Difference]: Finished difference Result 4116 states and 4765 transitions.
[2020-11-25 09:34:06,075 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:34:06,076 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4116 states and 4765 transitions.
[2020-11-25 09:34:06,092 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 09:34:06,121 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4116 states to 3922 states and 4537 transitions.
[2020-11-25 09:34:06,121 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1048
[2020-11-25 09:34:06,122 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1068
[2020-11-25 09:34:06,122 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3922 states and 4537 transitions.
[2020-11-25 09:34:06,131 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:34:06,131 INFO  L728         BuchiCegarLoop]: Abstraction has 3922 states and 4537 transitions.
[2020-11-25 09:34:06,136 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3922 states and 4537 transitions.
[2020-11-25 09:34:06,178 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3922 to 2990.
[2020-11-25 09:34:06,178 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2990 states.
[2020-11-25 09:34:06,183 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2990 states to 2990 states and 3333 transitions.
[2020-11-25 09:34:06,184 INFO  L751         BuchiCegarLoop]: Abstraction has 2990 states and 3333 transitions.
[2020-11-25 09:34:06,184 INFO  L631         BuchiCegarLoop]: Abstraction has 2990 states and 3333 transitions.
[2020-11-25 09:34:06,184 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 09:34:06,184 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2990 states and 3333 transitions.
[2020-11-25 09:34:06,193 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:34:06,193 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:34:06,193 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:34:06,197 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:34:06,197 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4864]              assume null == 0;
[L4865]  CALL        call this := FreshRefGenerator__success();
[L2052]              havoc newRef;
[L2053]              assume Alloc[newRef] == false;
[L2054]              Alloc[newRef] := true;
[L2055]              assume newRef != null;
[L4865]  RET         call this := FreshRefGenerator__success();
[L4866]              assume now >= 0;
[L4867]              assume DType[this] == YFLink;
[L4868]              assume msgvalue_MSG == 0;
[L4869]              gas := gas - 53000;
[L4870]  CALL        call YFLink_YFLink(this, msgsender_MSG, msgvalue_MSG);
[L1099]              havoc __exception;
[L1100]              revert := false;
[L1101]  COND FALSE  !(__exception)
[L1126]  CALL        call YFLink_YFLink__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2101]              assume msgsender_MSG != null;
[L2102]              Balance[this] := 0;
[L2116]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L3180]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3181]  COND FALSE  !(revert)
[L3184]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2084]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]              assume msgsender_MSG != null;
[L2070]              Balance[this] := 0;
[L2084]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2085]  COND FALSE  !(revert)
[L3184]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3185]  COND FALSE  !(revert)
[L3188]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2178]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2101]              assume msgsender_MSG != null;
[L2102]              Balance[this] := 0;
[L2116]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2178]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2179]  COND FALSE  !(revert)
[L2182]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2084]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]              assume msgsender_MSG != null;
[L2070]              Balance[this] := 0;
[L2084]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2085]  COND FALSE  !(revert)
[L2182]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2183]  COND FALSE  !(revert)
[L2186]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2150]              assume msgsender_MSG != null;
[L2151]              Balance[this] := 0;
[L2152]              _balances_ERC20[this] := zeroRefintArr();
[L2153]              sum__balances0[this] := 0;
[L2154]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2155]              sum__allowances1[this] := 0;
[L2156]              _totalSupply_ERC20[this] := 0;
[L2186]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2187]  COND FALSE  !(revert)
[L3188]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3189]  COND FALSE  !(revert)
[L3192]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 225975011, 987048806, 18);
[L2942]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2084]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]              assume msgsender_MSG != null;
[L2070]              Balance[this] := 0;
[L2084]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2085]  COND FALSE  !(revert)
[L2942]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2943]  COND FALSE  !(revert)
[L2946]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L2917]              assume msgsender_MSG != null;
[L2918]              Balance[this] := 0;
[L2919]              _name_ERC20Detailed[this] := -1446634570;
[L2920]              _symbol_ERC20Detailed[this] := -1446634570;
[L2921]              _decimals_ERC20Detailed[this] := 0;
[L2923]              _name_ERC20Detailed[this] := name_s484;
[L2924]              _symbol_ERC20Detailed[this] := symbol_s484;
[L2925]              _decimals_ERC20Detailed[this] := decimals_s484;
[L2946]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L2947]  COND FALSE  !(revert)
[L3192]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 225975011, 987048806, 18);
[L3193]  COND FALSE  !(revert)
[L3196]  CALL        call YFLink_YFLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3142]              assume msgsender_MSG != null;
[L3143]              Balance[this] := 0;
[L3144]              governance_YFLink[this] := null;
[L3145]              minters_YFLink[this] := zeroRefboolArr();
[L3148]              havoc __var_24;
[L3149]              governance_YFLink[this] := __var_24;
[L3196]  RET         call YFLink_YFLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L1126]  RET         call YFLink_YFLink__success(this, msgsender_MSG, msgvalue_MSG);
[L1127]              assume !revert && gas >= 0;
[L4870]  RET         call YFLink_YFLink(this, msgsender_MSG, msgvalue_MSG);
[L4871]              assume !revert && gas >= 0;
[L4874]  CALL        call CorralChoice_YFLink(this);
[L4695]              havoc msgsender_MSG;
[L4696]              havoc msgvalue_MSG;
[L4697]              havoc choice;
[L4698]              havoc __ret_0_totalSupply;
[L4699]              havoc account_s121;
[L4700]              havoc __ret_0_balanceOf;
[L4701]              havoc recipient_s140;
[L4702]              havoc amount_s140;
[L4703]              havoc __ret_0_transfer;
[L4704]              havoc owner_s156;
[L4705]              havoc spender_s156;
[L4706]              havoc __ret_0_allowance;
[L4707]              havoc spender_s175;
[L4708]              havoc amount_s175;
[L4709]              havoc __ret_0_approve;
[L4710]              havoc sender_s211;
[L4711]              havoc recipient_s211;
[L4712]              havoc amount_s211;
[L4713]              havoc __ret_0_transferFrom;
[L4714]              havoc spender_s238;
[L4715]              havoc addedValue_s238;
[L4716]              havoc __ret_0_increaseAllowance;
[L4717]              havoc spender_s266;
[L4718]              havoc subtractedValue_s266;
[L4719]              havoc __ret_0_decreaseAllowance;
[L4720]              havoc name_s484;
[L4721]              havoc symbol_s484;
[L4722]              havoc decimals_s484;
[L4723]              havoc __ret_0_name;
[L4724]              havoc __ret_0_symbol;
[L4725]              havoc __ret_0_decimals;
[L4726]              havoc __ret_0_governance;
[L4727]              havoc arg732_s0;
[L4728]              havoc __ret_0_minters;
[L4729]              havoc account_s671;
[L4730]              havoc amount_s671;
[L4731]              havoc _governance_s689;
[L4732]              havoc _minter_s709;
[L4733]              havoc _minter_s729;
[L4734]              havoc tmpNow;
[L4735]              havoc gas;
[L4736]              assume gas > 4000000 && gas <= 8000000;
[L4737]              tmpNow := now;
[L4738]              havoc now;
[L4739]              assume now > tmpNow;
[L4740]              assume msgsender_MSG != null;
[L4741]              assume DType[msgsender_MSG] != IERC20;
[L4742]              assume DType[msgsender_MSG] != Context;
[L4743]              assume DType[msgsender_MSG] != ERC20;
[L4744]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4745]              assume DType[msgsender_MSG] != SafeMath;
[L4746]              assume DType[msgsender_MSG] != YFLink;
[L4747]              Alloc[msgsender_MSG] := true;
[L4748]  COND FALSE  !(choice == 17)
[L4754]  COND FALSE  !(choice == 16)
[L4760]  COND TRUE   choice == 15
[L4761]              gas := gas - 21000;
[L4762]  COND TRUE   gas >= 0
[L4763]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4764]              assume msgvalue_MSG == 0;
[L4765]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L393]               havoc __exception;
[L394]               revert := false;
[L395]   COND TRUE   __exception
[L396]               __tmp__Balance := Balance;
[L397]               __tmp__DType := DType;
[L398]               __tmp__Alloc := Alloc;
[L399]               __tmp__balance_ADDR := balance_ADDR;
[L400]               __tmp__M_Ref_int := M_Ref_int;
[L401]               __tmp__sum__balances0 := sum__balances0;
[L402]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L403]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L404]               __tmp__sum__allowances1 := sum__allowances1;
[L405]               __tmp__M_Ref_bool := M_Ref_bool;
[L406]               __tmp__sum_minters2 := sum_minters2;
[L407]               __tmp__Length := Length;
[L408]               __tmp__now := now;
[L409]               __tmp___balances_ERC20 := _balances_ERC20;
[L410]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L411]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L412]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L413]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L414]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L415]               __tmp__governance_YFLink := governance_YFLink;
[L416]               __tmp__minters_YFLink := minters_YFLink;
[L417]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2219]  COND FALSE  !(__tmp__DType[this] == YFLink)
[L2224]  COND TRUE   __tmp__DType[this] == ERC20
[L2225]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2124]              __ret_0_ := msgsender_MSG;
[L2225]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2226]  COND FALSE  !(revert)
[L2232]  COND TRUE   __tmp__DType[this] == YFLink
[L2233]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2704]              __var_12 := null;
[L2705]  COND TRUE   !(sender_s323 != null)
[L2706]              revert := true;
[L2233]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2234]  COND TRUE   revert
[L417]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L418]               assume revert || gas < 0;
[L4765]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L4874]  RET         call CorralChoice_YFLink(this);

Loop:
[L4874]  CALL        call CorralChoice_YFLink(this);
[L4695]              havoc msgsender_MSG;
[L4696]              havoc msgvalue_MSG;
[L4697]              havoc choice;
[L4698]              havoc __ret_0_totalSupply;
[L4699]              havoc account_s121;
[L4700]              havoc __ret_0_balanceOf;
[L4701]              havoc recipient_s140;
[L4702]              havoc amount_s140;
[L4703]              havoc __ret_0_transfer;
[L4704]              havoc owner_s156;
[L4705]              havoc spender_s156;
[L4706]              havoc __ret_0_allowance;
[L4707]              havoc spender_s175;
[L4708]              havoc amount_s175;
[L4709]              havoc __ret_0_approve;
[L4710]              havoc sender_s211;
[L4711]              havoc recipient_s211;
[L4712]              havoc amount_s211;
[L4713]              havoc __ret_0_transferFrom;
[L4714]              havoc spender_s238;
[L4715]              havoc addedValue_s238;
[L4716]              havoc __ret_0_increaseAllowance;
[L4717]              havoc spender_s266;
[L4718]              havoc subtractedValue_s266;
[L4719]              havoc __ret_0_decreaseAllowance;
[L4720]              havoc name_s484;
[L4721]              havoc symbol_s484;
[L4722]              havoc decimals_s484;
[L4723]              havoc __ret_0_name;
[L4724]              havoc __ret_0_symbol;
[L4725]              havoc __ret_0_decimals;
[L4726]              havoc __ret_0_governance;
[L4727]              havoc arg732_s0;
[L4728]              havoc __ret_0_minters;
[L4729]              havoc account_s671;
[L4730]              havoc amount_s671;
[L4731]              havoc _governance_s689;
[L4732]              havoc _minter_s709;
[L4733]              havoc _minter_s729;
[L4734]              havoc tmpNow;
[L4735]              havoc gas;
[L4736]              assume gas > 4000000 && gas <= 8000000;
[L4737]              tmpNow := now;
[L4738]              havoc now;
[L4739]              assume now > tmpNow;
[L4740]              assume msgsender_MSG != null;
[L4741]              assume DType[msgsender_MSG] != IERC20;
[L4742]              assume DType[msgsender_MSG] != Context;
[L4743]              assume DType[msgsender_MSG] != ERC20;
[L4744]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4745]              assume DType[msgsender_MSG] != SafeMath;
[L4746]              assume DType[msgsender_MSG] != YFLink;
[L4747]              Alloc[msgsender_MSG] := true;
[L4748]  COND FALSE  !(choice == 17)
[L4754]  COND FALSE  !(choice == 16)
[L4760]  COND TRUE   choice == 15
[L4761]              gas := gas - 21000;
[L4762]  COND TRUE   gas >= 0
[L4763]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4764]              assume msgvalue_MSG == 0;
[L4765]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L393]               havoc __exception;
[L394]               revert := false;
[L395]   COND TRUE   __exception
[L396]               __tmp__Balance := Balance;
[L397]               __tmp__DType := DType;
[L398]               __tmp__Alloc := Alloc;
[L399]               __tmp__balance_ADDR := balance_ADDR;
[L400]               __tmp__M_Ref_int := M_Ref_int;
[L401]               __tmp__sum__balances0 := sum__balances0;
[L402]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L403]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L404]               __tmp__sum__allowances1 := sum__allowances1;
[L405]               __tmp__M_Ref_bool := M_Ref_bool;
[L406]               __tmp__sum_minters2 := sum_minters2;
[L407]               __tmp__Length := Length;
[L408]               __tmp__now := now;
[L409]               __tmp___balances_ERC20 := _balances_ERC20;
[L410]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L411]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L412]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L413]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L414]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L415]               __tmp__governance_YFLink := governance_YFLink;
[L416]               __tmp__minters_YFLink := minters_YFLink;
[L417]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2219]  COND FALSE  !(__tmp__DType[this] == YFLink)
[L2224]  COND TRUE   __tmp__DType[this] == ERC20
[L2225]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2124]              __ret_0_ := msgsender_MSG;
[L2225]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2226]  COND FALSE  !(revert)
[L2232]  COND TRUE   __tmp__DType[this] == YFLink
[L2233]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2704]              __var_12 := null;
[L2705]  COND TRUE   !(sender_s323 != null)
[L2706]              revert := true;
[L2233]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2234]  COND TRUE   revert
[L417]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L418]               assume revert || gas < 0;
[L4765]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L4874]  RET         call CorralChoice_YFLink(this);

[2020-11-25 09:34:06,202 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:34:06,202 INFO  L82        PathProgramCache]: Analyzing trace with hash -1194020665, now seen corresponding path program 1 times
[2020-11-25 09:34:06,203 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:34:06,222 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:34:06,313 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 09:34:06,313 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:34:06,313 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 09:34:06,314 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:34:06,314 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 09:34:06,314 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 09:34:06,314 INFO  L87              Difference]: Start difference. First operand 2990 states and 3333 transitions. cyclomatic complexity: 345 Second operand 3 states.
[2020-11-25 09:34:06,370 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:34:06,370 INFO  L93              Difference]: Finished difference Result 2998 states and 3341 transitions.
[2020-11-25 09:34:06,370 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 09:34:06,371 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2998 states and 3341 transitions.
[2020-11-25 09:34:06,399 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:34:06,412 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2998 states to 2998 states and 3341 transitions.
[2020-11-25 09:34:06,412 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 821
[2020-11-25 09:34:06,413 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 821
[2020-11-25 09:34:06,413 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2998 states and 3341 transitions.
[2020-11-25 09:34:06,416 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:34:06,416 INFO  L728         BuchiCegarLoop]: Abstraction has 2998 states and 3341 transitions.
[2020-11-25 09:34:06,419 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2998 states and 3341 transitions.
[2020-11-25 09:34:06,442 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2998 to 2992.
[2020-11-25 09:34:06,443 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2992 states.
[2020-11-25 09:34:06,447 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2992 states to 2992 states and 3335 transitions.
[2020-11-25 09:34:06,447 INFO  L751         BuchiCegarLoop]: Abstraction has 2992 states and 3335 transitions.
[2020-11-25 09:34:06,447 INFO  L631         BuchiCegarLoop]: Abstraction has 2992 states and 3335 transitions.
[2020-11-25 09:34:06,447 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 09:34:06,447 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2992 states and 3335 transitions.
[2020-11-25 09:34:06,452 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:34:06,452 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:34:06,452 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:34:06,454 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:34:06,454 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4864]              assume null == 0;
[L4865]  CALL        call this := FreshRefGenerator__success();
[L2052]              havoc newRef;
[L2053]              assume Alloc[newRef] == false;
[L2054]              Alloc[newRef] := true;
[L2055]              assume newRef != null;
[L4865]  RET         call this := FreshRefGenerator__success();
[L4866]              assume now >= 0;
[L4867]              assume DType[this] == YFLink;
[L4868]              assume msgvalue_MSG == 0;
[L4869]              gas := gas - 53000;
[L4870]  CALL        call YFLink_YFLink(this, msgsender_MSG, msgvalue_MSG);
[L1099]              havoc __exception;
[L1100]              revert := false;
[L1101]  COND FALSE  !(__exception)
[L1126]  CALL        call YFLink_YFLink__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2101]              assume msgsender_MSG != null;
[L2102]              Balance[this] := 0;
[L2116]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L3180]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3181]  COND FALSE  !(revert)
[L3184]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2084]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]              assume msgsender_MSG != null;
[L2070]              Balance[this] := 0;
[L2084]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2085]  COND FALSE  !(revert)
[L3184]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3185]  COND FALSE  !(revert)
[L3188]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2178]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2101]              assume msgsender_MSG != null;
[L2102]              Balance[this] := 0;
[L2116]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2178]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2179]  COND FALSE  !(revert)
[L2182]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2084]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]              assume msgsender_MSG != null;
[L2070]              Balance[this] := 0;
[L2084]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2085]  COND FALSE  !(revert)
[L2182]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2183]  COND FALSE  !(revert)
[L2186]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2150]              assume msgsender_MSG != null;
[L2151]              Balance[this] := 0;
[L2152]              _balances_ERC20[this] := zeroRefintArr();
[L2153]              sum__balances0[this] := 0;
[L2154]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2155]              sum__allowances1[this] := 0;
[L2156]              _totalSupply_ERC20[this] := 0;
[L2186]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2187]  COND FALSE  !(revert)
[L3188]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3189]  COND FALSE  !(revert)
[L3192]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 225975011, 987048806, 18);
[L2942]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2084]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]              assume msgsender_MSG != null;
[L2070]              Balance[this] := 0;
[L2084]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2085]  COND FALSE  !(revert)
[L2942]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2943]  COND FALSE  !(revert)
[L2946]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L2917]              assume msgsender_MSG != null;
[L2918]              Balance[this] := 0;
[L2919]              _name_ERC20Detailed[this] := -1446634570;
[L2920]              _symbol_ERC20Detailed[this] := -1446634570;
[L2921]              _decimals_ERC20Detailed[this] := 0;
[L2923]              _name_ERC20Detailed[this] := name_s484;
[L2924]              _symbol_ERC20Detailed[this] := symbol_s484;
[L2925]              _decimals_ERC20Detailed[this] := decimals_s484;
[L2946]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L2947]  COND FALSE  !(revert)
[L3192]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 225975011, 987048806, 18);
[L3193]  COND FALSE  !(revert)
[L3196]  CALL        call YFLink_YFLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3142]              assume msgsender_MSG != null;
[L3143]              Balance[this] := 0;
[L3144]              governance_YFLink[this] := null;
[L3145]              minters_YFLink[this] := zeroRefboolArr();
[L3148]              havoc __var_24;
[L3149]              governance_YFLink[this] := __var_24;
[L3196]  RET         call YFLink_YFLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L1126]  RET         call YFLink_YFLink__success(this, msgsender_MSG, msgvalue_MSG);
[L1127]              assume !revert && gas >= 0;
[L4870]  RET         call YFLink_YFLink(this, msgsender_MSG, msgvalue_MSG);
[L4871]              assume !revert && gas >= 0;
[L4874]  CALL        call CorralChoice_YFLink(this);
[L4695]              havoc msgsender_MSG;
[L4696]              havoc msgvalue_MSG;
[L4697]              havoc choice;
[L4698]              havoc __ret_0_totalSupply;
[L4699]              havoc account_s121;
[L4700]              havoc __ret_0_balanceOf;
[L4701]              havoc recipient_s140;
[L4702]              havoc amount_s140;
[L4703]              havoc __ret_0_transfer;
[L4704]              havoc owner_s156;
[L4705]              havoc spender_s156;
[L4706]              havoc __ret_0_allowance;
[L4707]              havoc spender_s175;
[L4708]              havoc amount_s175;
[L4709]              havoc __ret_0_approve;
[L4710]              havoc sender_s211;
[L4711]              havoc recipient_s211;
[L4712]              havoc amount_s211;
[L4713]              havoc __ret_0_transferFrom;
[L4714]              havoc spender_s238;
[L4715]              havoc addedValue_s238;
[L4716]              havoc __ret_0_increaseAllowance;
[L4717]              havoc spender_s266;
[L4718]              havoc subtractedValue_s266;
[L4719]              havoc __ret_0_decreaseAllowance;
[L4720]              havoc name_s484;
[L4721]              havoc symbol_s484;
[L4722]              havoc decimals_s484;
[L4723]              havoc __ret_0_name;
[L4724]              havoc __ret_0_symbol;
[L4725]              havoc __ret_0_decimals;
[L4726]              havoc __ret_0_governance;
[L4727]              havoc arg732_s0;
[L4728]              havoc __ret_0_minters;
[L4729]              havoc account_s671;
[L4730]              havoc amount_s671;
[L4731]              havoc _governance_s689;
[L4732]              havoc _minter_s709;
[L4733]              havoc _minter_s729;
[L4734]              havoc tmpNow;
[L4735]              havoc gas;
[L4736]              assume gas > 4000000 && gas <= 8000000;
[L4737]              tmpNow := now;
[L4738]              havoc now;
[L4739]              assume now > tmpNow;
[L4740]              assume msgsender_MSG != null;
[L4741]              assume DType[msgsender_MSG] != IERC20;
[L4742]              assume DType[msgsender_MSG] != Context;
[L4743]              assume DType[msgsender_MSG] != ERC20;
[L4744]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4745]              assume DType[msgsender_MSG] != SafeMath;
[L4746]              assume DType[msgsender_MSG] != YFLink;
[L4747]              Alloc[msgsender_MSG] := true;
[L4748]  COND FALSE  !(choice == 17)
[L4754]  COND FALSE  !(choice == 16)
[L4760]  COND TRUE   choice == 15
[L4761]              gas := gas - 21000;
[L4762]  COND TRUE   gas >= 0
[L4763]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4764]              assume msgvalue_MSG == 0;
[L4765]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L393]               havoc __exception;
[L394]               revert := false;
[L395]   COND TRUE   __exception
[L396]               __tmp__Balance := Balance;
[L397]               __tmp__DType := DType;
[L398]               __tmp__Alloc := Alloc;
[L399]               __tmp__balance_ADDR := balance_ADDR;
[L400]               __tmp__M_Ref_int := M_Ref_int;
[L401]               __tmp__sum__balances0 := sum__balances0;
[L402]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L403]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L404]               __tmp__sum__allowances1 := sum__allowances1;
[L405]               __tmp__M_Ref_bool := M_Ref_bool;
[L406]               __tmp__sum_minters2 := sum_minters2;
[L407]               __tmp__Length := Length;
[L408]               __tmp__now := now;
[L409]               __tmp___balances_ERC20 := _balances_ERC20;
[L410]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L411]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L412]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L413]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L414]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L415]               __tmp__governance_YFLink := governance_YFLink;
[L416]               __tmp__minters_YFLink := minters_YFLink;
[L417]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2219]  COND TRUE   __tmp__DType[this] == YFLink
[L2220]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2124]              __ret_0_ := msgsender_MSG;
[L2220]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2221]  COND FALSE  !(revert)
[L2232]  COND TRUE   __tmp__DType[this] == YFLink
[L2233]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2704]              __var_12 := null;
[L2705]  COND TRUE   !(sender_s323 != null)
[L2706]              revert := true;
[L2233]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2234]  COND TRUE   revert
[L417]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L418]               assume revert || gas < 0;
[L4765]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L4874]  RET         call CorralChoice_YFLink(this);

Loop:
[L4874]  CALL        call CorralChoice_YFLink(this);
[L4695]              havoc msgsender_MSG;
[L4696]              havoc msgvalue_MSG;
[L4697]              havoc choice;
[L4698]              havoc __ret_0_totalSupply;
[L4699]              havoc account_s121;
[L4700]              havoc __ret_0_balanceOf;
[L4701]              havoc recipient_s140;
[L4702]              havoc amount_s140;
[L4703]              havoc __ret_0_transfer;
[L4704]              havoc owner_s156;
[L4705]              havoc spender_s156;
[L4706]              havoc __ret_0_allowance;
[L4707]              havoc spender_s175;
[L4708]              havoc amount_s175;
[L4709]              havoc __ret_0_approve;
[L4710]              havoc sender_s211;
[L4711]              havoc recipient_s211;
[L4712]              havoc amount_s211;
[L4713]              havoc __ret_0_transferFrom;
[L4714]              havoc spender_s238;
[L4715]              havoc addedValue_s238;
[L4716]              havoc __ret_0_increaseAllowance;
[L4717]              havoc spender_s266;
[L4718]              havoc subtractedValue_s266;
[L4719]              havoc __ret_0_decreaseAllowance;
[L4720]              havoc name_s484;
[L4721]              havoc symbol_s484;
[L4722]              havoc decimals_s484;
[L4723]              havoc __ret_0_name;
[L4724]              havoc __ret_0_symbol;
[L4725]              havoc __ret_0_decimals;
[L4726]              havoc __ret_0_governance;
[L4727]              havoc arg732_s0;
[L4728]              havoc __ret_0_minters;
[L4729]              havoc account_s671;
[L4730]              havoc amount_s671;
[L4731]              havoc _governance_s689;
[L4732]              havoc _minter_s709;
[L4733]              havoc _minter_s729;
[L4734]              havoc tmpNow;
[L4735]              havoc gas;
[L4736]              assume gas > 4000000 && gas <= 8000000;
[L4737]              tmpNow := now;
[L4738]              havoc now;
[L4739]              assume now > tmpNow;
[L4740]              assume msgsender_MSG != null;
[L4741]              assume DType[msgsender_MSG] != IERC20;
[L4742]              assume DType[msgsender_MSG] != Context;
[L4743]              assume DType[msgsender_MSG] != ERC20;
[L4744]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4745]              assume DType[msgsender_MSG] != SafeMath;
[L4746]              assume DType[msgsender_MSG] != YFLink;
[L4747]              Alloc[msgsender_MSG] := true;
[L4748]  COND FALSE  !(choice == 17)
[L4754]  COND FALSE  !(choice == 16)
[L4760]  COND TRUE   choice == 15
[L4761]              gas := gas - 21000;
[L4762]  COND TRUE   gas >= 0
[L4763]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4764]              assume msgvalue_MSG == 0;
[L4765]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L393]               havoc __exception;
[L394]               revert := false;
[L395]   COND TRUE   __exception
[L396]               __tmp__Balance := Balance;
[L397]               __tmp__DType := DType;
[L398]               __tmp__Alloc := Alloc;
[L399]               __tmp__balance_ADDR := balance_ADDR;
[L400]               __tmp__M_Ref_int := M_Ref_int;
[L401]               __tmp__sum__balances0 := sum__balances0;
[L402]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L403]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L404]               __tmp__sum__allowances1 := sum__allowances1;
[L405]               __tmp__M_Ref_bool := M_Ref_bool;
[L406]               __tmp__sum_minters2 := sum_minters2;
[L407]               __tmp__Length := Length;
[L408]               __tmp__now := now;
[L409]               __tmp___balances_ERC20 := _balances_ERC20;
[L410]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L411]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L412]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L413]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L414]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L415]               __tmp__governance_YFLink := governance_YFLink;
[L416]               __tmp__minters_YFLink := minters_YFLink;
[L417]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2219]  COND TRUE   __tmp__DType[this] == YFLink
[L2220]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2124]              __ret_0_ := msgsender_MSG;
[L2220]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2221]  COND FALSE  !(revert)
[L2232]  COND TRUE   __tmp__DType[this] == YFLink
[L2233]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2704]              __var_12 := null;
[L2705]  COND TRUE   !(sender_s323 != null)
[L2706]              revert := true;
[L2233]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2234]  COND TRUE   revert
[L417]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L418]               assume revert || gas < 0;
[L4765]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L4874]  RET         call CorralChoice_YFLink(this);

[2020-11-25 09:34:06,475 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:34:06,475 INFO  L82        PathProgramCache]: Analyzing trace with hash 812450845, now seen corresponding path program 1 times
[2020-11-25 09:34:06,476 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:34:06,488 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:34:06,546 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 09:34:06,546 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:34:06,546 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-25 09:34:06,547 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:34:06,547 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-25 09:34:06,547 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-25 09:34:06,547 INFO  L87              Difference]: Start difference. First operand 2992 states and 3335 transitions. cyclomatic complexity: 345 Second operand 8 states.
[2020-11-25 09:34:06,644 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:34:06,644 INFO  L93              Difference]: Finished difference Result 3016 states and 3363 transitions.
[2020-11-25 09:34:06,644 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 09:34:06,644 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3016 states and 3363 transitions.
[2020-11-25 09:34:06,650 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:34:06,656 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3016 states to 2996 states and 3341 transitions.
[2020-11-25 09:34:06,657 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 820
[2020-11-25 09:34:06,657 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 820
[2020-11-25 09:34:06,657 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2996 states and 3341 transitions.
[2020-11-25 09:34:06,659 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:34:06,659 INFO  L728         BuchiCegarLoop]: Abstraction has 2996 states and 3341 transitions.
[2020-11-25 09:34:06,662 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2996 states and 3341 transitions.
[2020-11-25 09:34:06,676 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2996 to 2996.
[2020-11-25 09:34:06,677 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2996 states.
[2020-11-25 09:34:06,679 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2996 states to 2996 states and 3341 transitions.
[2020-11-25 09:34:06,679 INFO  L751         BuchiCegarLoop]: Abstraction has 2996 states and 3341 transitions.
[2020-11-25 09:34:06,679 INFO  L631         BuchiCegarLoop]: Abstraction has 2996 states and 3341 transitions.
[2020-11-25 09:34:06,679 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 09:34:06,679 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2996 states and 3341 transitions.
[2020-11-25 09:34:06,683 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:34:06,683 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:34:06,683 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:34:06,684 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:34:06,684 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4864]              assume null == 0;
[L4865]  CALL        call this := FreshRefGenerator__success();
[L2052]              havoc newRef;
[L2053]              assume Alloc[newRef] == false;
[L2054]              Alloc[newRef] := true;
[L2055]              assume newRef != null;
[L4865]  RET         call this := FreshRefGenerator__success();
[L4866]              assume now >= 0;
[L4867]              assume DType[this] == YFLink;
[L4868]              assume msgvalue_MSG == 0;
[L4869]              gas := gas - 53000;
[L4870]  CALL        call YFLink_YFLink(this, msgsender_MSG, msgvalue_MSG);
[L1099]              havoc __exception;
[L1100]              revert := false;
[L1101]  COND FALSE  !(__exception)
[L1126]  CALL        call YFLink_YFLink__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2101]              assume msgsender_MSG != null;
[L2102]              Balance[this] := 0;
[L2116]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L3180]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3181]  COND FALSE  !(revert)
[L3184]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2084]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]              assume msgsender_MSG != null;
[L2070]              Balance[this] := 0;
[L2084]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2085]  COND FALSE  !(revert)
[L3184]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3185]  COND FALSE  !(revert)
[L3188]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2178]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2101]              assume msgsender_MSG != null;
[L2102]              Balance[this] := 0;
[L2116]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2178]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2179]  COND FALSE  !(revert)
[L2182]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2084]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]              assume msgsender_MSG != null;
[L2070]              Balance[this] := 0;
[L2084]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2085]  COND FALSE  !(revert)
[L2182]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2183]  COND FALSE  !(revert)
[L2186]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2150]              assume msgsender_MSG != null;
[L2151]              Balance[this] := 0;
[L2152]              _balances_ERC20[this] := zeroRefintArr();
[L2153]              sum__balances0[this] := 0;
[L2154]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2155]              sum__allowances1[this] := 0;
[L2156]              _totalSupply_ERC20[this] := 0;
[L2186]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2187]  COND FALSE  !(revert)
[L3188]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3189]  COND FALSE  !(revert)
[L3192]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 225975011, 987048806, 18);
[L2942]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2084]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]              assume msgsender_MSG != null;
[L2070]              Balance[this] := 0;
[L2084]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2085]  COND FALSE  !(revert)
[L2942]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2943]  COND FALSE  !(revert)
[L2946]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L2917]              assume msgsender_MSG != null;
[L2918]              Balance[this] := 0;
[L2919]              _name_ERC20Detailed[this] := -1446634570;
[L2920]              _symbol_ERC20Detailed[this] := -1446634570;
[L2921]              _decimals_ERC20Detailed[this] := 0;
[L2923]              _name_ERC20Detailed[this] := name_s484;
[L2924]              _symbol_ERC20Detailed[this] := symbol_s484;
[L2925]              _decimals_ERC20Detailed[this] := decimals_s484;
[L2946]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L2947]  COND FALSE  !(revert)
[L3192]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 225975011, 987048806, 18);
[L3193]  COND FALSE  !(revert)
[L3196]  CALL        call YFLink_YFLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3142]              assume msgsender_MSG != null;
[L3143]              Balance[this] := 0;
[L3144]              governance_YFLink[this] := null;
[L3145]              minters_YFLink[this] := zeroRefboolArr();
[L3148]              havoc __var_24;
[L3149]              governance_YFLink[this] := __var_24;
[L3196]  RET         call YFLink_YFLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L1126]  RET         call YFLink_YFLink__success(this, msgsender_MSG, msgvalue_MSG);
[L1127]              assume !revert && gas >= 0;
[L4870]  RET         call YFLink_YFLink(this, msgsender_MSG, msgvalue_MSG);
[L4871]              assume !revert && gas >= 0;
[L4874]  CALL        call CorralChoice_YFLink(this);
[L4695]              havoc msgsender_MSG;
[L4696]              havoc msgvalue_MSG;
[L4697]              havoc choice;
[L4698]              havoc __ret_0_totalSupply;
[L4699]              havoc account_s121;
[L4700]              havoc __ret_0_balanceOf;
[L4701]              havoc recipient_s140;
[L4702]              havoc amount_s140;
[L4703]              havoc __ret_0_transfer;
[L4704]              havoc owner_s156;
[L4705]              havoc spender_s156;
[L4706]              havoc __ret_0_allowance;
[L4707]              havoc spender_s175;
[L4708]              havoc amount_s175;
[L4709]              havoc __ret_0_approve;
[L4710]              havoc sender_s211;
[L4711]              havoc recipient_s211;
[L4712]              havoc amount_s211;
[L4713]              havoc __ret_0_transferFrom;
[L4714]              havoc spender_s238;
[L4715]              havoc addedValue_s238;
[L4716]              havoc __ret_0_increaseAllowance;
[L4717]              havoc spender_s266;
[L4718]              havoc subtractedValue_s266;
[L4719]              havoc __ret_0_decreaseAllowance;
[L4720]              havoc name_s484;
[L4721]              havoc symbol_s484;
[L4722]              havoc decimals_s484;
[L4723]              havoc __ret_0_name;
[L4724]              havoc __ret_0_symbol;
[L4725]              havoc __ret_0_decimals;
[L4726]              havoc __ret_0_governance;
[L4727]              havoc arg732_s0;
[L4728]              havoc __ret_0_minters;
[L4729]              havoc account_s671;
[L4730]              havoc amount_s671;
[L4731]              havoc _governance_s689;
[L4732]              havoc _minter_s709;
[L4733]              havoc _minter_s729;
[L4734]              havoc tmpNow;
[L4735]              havoc gas;
[L4736]              assume gas > 4000000 && gas <= 8000000;
[L4737]              tmpNow := now;
[L4738]              havoc now;
[L4739]              assume now > tmpNow;
[L4740]              assume msgsender_MSG != null;
[L4741]              assume DType[msgsender_MSG] != IERC20;
[L4742]              assume DType[msgsender_MSG] != Context;
[L4743]              assume DType[msgsender_MSG] != ERC20;
[L4744]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4745]              assume DType[msgsender_MSG] != SafeMath;
[L4746]              assume DType[msgsender_MSG] != YFLink;
[L4747]              Alloc[msgsender_MSG] := true;
[L4748]  COND FALSE  !(choice == 17)
[L4754]  COND FALSE  !(choice == 16)
[L4760]  COND TRUE   choice == 15
[L4761]              gas := gas - 21000;
[L4762]  COND TRUE   gas >= 0
[L4763]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4764]              assume msgvalue_MSG == 0;
[L4765]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L393]               havoc __exception;
[L394]               revert := false;
[L395]   COND TRUE   __exception
[L396]               __tmp__Balance := Balance;
[L397]               __tmp__DType := DType;
[L398]               __tmp__Alloc := Alloc;
[L399]               __tmp__balance_ADDR := balance_ADDR;
[L400]               __tmp__M_Ref_int := M_Ref_int;
[L401]               __tmp__sum__balances0 := sum__balances0;
[L402]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L403]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L404]               __tmp__sum__allowances1 := sum__allowances1;
[L405]               __tmp__M_Ref_bool := M_Ref_bool;
[L406]               __tmp__sum_minters2 := sum_minters2;
[L407]               __tmp__Length := Length;
[L408]               __tmp__now := now;
[L409]               __tmp___balances_ERC20 := _balances_ERC20;
[L410]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L411]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L412]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L413]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L414]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L415]               __tmp__governance_YFLink := governance_YFLink;
[L416]               __tmp__minters_YFLink := minters_YFLink;
[L417]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2219]  COND TRUE   __tmp__DType[this] == YFLink
[L2220]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2124]              __ret_0_ := msgsender_MSG;
[L2220]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2221]  COND FALSE  !(revert)
[L2232]  COND TRUE   __tmp__DType[this] == YFLink
[L2233]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2704]              __var_12 := null;
[L2705]  COND FALSE  !(!(sender_s323 != null))
[L2709]              __var_13 := null;
[L2710]  COND TRUE   !(recipient_s323 != null)
[L2711]              revert := true;
[L2233]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2234]  COND TRUE   revert
[L417]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L418]               assume revert || gas < 0;
[L4765]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L4874]  RET         call CorralChoice_YFLink(this);

Loop:
[L4874]  CALL        call CorralChoice_YFLink(this);
[L4695]              havoc msgsender_MSG;
[L4696]              havoc msgvalue_MSG;
[L4697]              havoc choice;
[L4698]              havoc __ret_0_totalSupply;
[L4699]              havoc account_s121;
[L4700]              havoc __ret_0_balanceOf;
[L4701]              havoc recipient_s140;
[L4702]              havoc amount_s140;
[L4703]              havoc __ret_0_transfer;
[L4704]              havoc owner_s156;
[L4705]              havoc spender_s156;
[L4706]              havoc __ret_0_allowance;
[L4707]              havoc spender_s175;
[L4708]              havoc amount_s175;
[L4709]              havoc __ret_0_approve;
[L4710]              havoc sender_s211;
[L4711]              havoc recipient_s211;
[L4712]              havoc amount_s211;
[L4713]              havoc __ret_0_transferFrom;
[L4714]              havoc spender_s238;
[L4715]              havoc addedValue_s238;
[L4716]              havoc __ret_0_increaseAllowance;
[L4717]              havoc spender_s266;
[L4718]              havoc subtractedValue_s266;
[L4719]              havoc __ret_0_decreaseAllowance;
[L4720]              havoc name_s484;
[L4721]              havoc symbol_s484;
[L4722]              havoc decimals_s484;
[L4723]              havoc __ret_0_name;
[L4724]              havoc __ret_0_symbol;
[L4725]              havoc __ret_0_decimals;
[L4726]              havoc __ret_0_governance;
[L4727]              havoc arg732_s0;
[L4728]              havoc __ret_0_minters;
[L4729]              havoc account_s671;
[L4730]              havoc amount_s671;
[L4731]              havoc _governance_s689;
[L4732]              havoc _minter_s709;
[L4733]              havoc _minter_s729;
[L4734]              havoc tmpNow;
[L4735]              havoc gas;
[L4736]              assume gas > 4000000 && gas <= 8000000;
[L4737]              tmpNow := now;
[L4738]              havoc now;
[L4739]              assume now > tmpNow;
[L4740]              assume msgsender_MSG != null;
[L4741]              assume DType[msgsender_MSG] != IERC20;
[L4742]              assume DType[msgsender_MSG] != Context;
[L4743]              assume DType[msgsender_MSG] != ERC20;
[L4744]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4745]              assume DType[msgsender_MSG] != SafeMath;
[L4746]              assume DType[msgsender_MSG] != YFLink;
[L4747]              Alloc[msgsender_MSG] := true;
[L4748]  COND FALSE  !(choice == 17)
[L4754]  COND FALSE  !(choice == 16)
[L4760]  COND TRUE   choice == 15
[L4761]              gas := gas - 21000;
[L4762]  COND TRUE   gas >= 0
[L4763]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4764]              assume msgvalue_MSG == 0;
[L4765]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L393]               havoc __exception;
[L394]               revert := false;
[L395]   COND TRUE   __exception
[L396]               __tmp__Balance := Balance;
[L397]               __tmp__DType := DType;
[L398]               __tmp__Alloc := Alloc;
[L399]               __tmp__balance_ADDR := balance_ADDR;
[L400]               __tmp__M_Ref_int := M_Ref_int;
[L401]               __tmp__sum__balances0 := sum__balances0;
[L402]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L403]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L404]               __tmp__sum__allowances1 := sum__allowances1;
[L405]               __tmp__M_Ref_bool := M_Ref_bool;
[L406]               __tmp__sum_minters2 := sum_minters2;
[L407]               __tmp__Length := Length;
[L408]               __tmp__now := now;
[L409]               __tmp___balances_ERC20 := _balances_ERC20;
[L410]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L411]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L412]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L413]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L414]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L415]               __tmp__governance_YFLink := governance_YFLink;
[L416]               __tmp__minters_YFLink := minters_YFLink;
[L417]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2219]  COND TRUE   __tmp__DType[this] == YFLink
[L2220]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2124]              __ret_0_ := msgsender_MSG;
[L2220]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2221]  COND FALSE  !(revert)
[L2232]  COND TRUE   __tmp__DType[this] == YFLink
[L2233]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2704]              __var_12 := null;
[L2705]  COND FALSE  !(!(sender_s323 != null))
[L2709]              __var_13 := null;
[L2710]  COND TRUE   !(recipient_s323 != null)
[L2711]              revert := true;
[L2233]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2234]  COND TRUE   revert
[L417]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L418]               assume revert || gas < 0;
[L4765]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L4874]  RET         call CorralChoice_YFLink(this);

[2020-11-25 09:34:06,687 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:34:06,687 INFO  L82        PathProgramCache]: Analyzing trace with hash -1752683707, now seen corresponding path program 1 times
[2020-11-25 09:34:06,688 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:34:06,698 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 09:34:06,710 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 09:34:06,767 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:34:06,767 INFO  L82        PathProgramCache]: Analyzing trace with hash 216645807, now seen corresponding path program 1 times
[2020-11-25 09:34:06,768 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:34:06,772 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 09:34:06,777 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 09:34:06,786 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:34:06,786 INFO  L82        PathProgramCache]: Analyzing trace with hash 608414963, now seen corresponding path program 1 times
[2020-11-25 09:34:06,787 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:34:06,799 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 09:34:06,814 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
[2020-11-25 09:34:07,194 WARN  L188               SmtUtils]: Spent 118.00 ms on a formula simplification that was a NOOP. DAG size: 253
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3137 to 6271
[2020-11-25 09:34:07,399 WARN  L188               SmtUtils]: Spent 195.00 ms on a formula simplification that was a NOOP. DAG size: 203
[2020-11-25 09:34:07,798 WARN  L188               SmtUtils]: Spent 396.00 ms on a formula simplification. DAG size of input: 255 DAG size of output: 243
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.002s / 0.002s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3517 to 7027
[2020-11-25 09:34:08,074 WARN  L188               SmtUtils]: Spent 159.00 ms on a formula simplification that was a NOOP. DAG size: 311
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 09:34:08,184 WARN  L188               SmtUtils]: Spent 104.00 ms on a formula simplification that was a NOOP. DAG size: 250
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 09:34:08,337 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 09:34:08,769 WARN  L188               SmtUtils]: Spent 111.00 ms on a formula simplification that was a NOOP. DAG size: 253
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 09:34:09,142 WARN  L188               SmtUtils]: Spent 268.00 ms on a formula simplification. DAG size of input: 254 DAG size of output: 243
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 09:34:09,363 WARN  L188               SmtUtils]: Spent 139.00 ms on a formula simplification that was a NOOP. DAG size: 311
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 09:34:09,496 WARN  L188               SmtUtils]: Spent 127.00 ms on a formula simplification that was a NOOP. DAG size: 250
[2020-11-25 09:34:09,875 WARN  L188               SmtUtils]: Spent 377.00 ms on a formula simplification. DAG size of input: 435 DAG size of output: 424
Garbage collection #1: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #2: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #3: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #4: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #5: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #6: 5281 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5281 to 10559
Garbage collection #7: 10559 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 10559 to 21107
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 09:34:10,177 WARN  L188               SmtUtils]: Spent 124.00 ms on a formula simplification. DAG size of input: 279 DAG size of output: 278
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 09:34:10,253 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 09:34:10,270 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 09:34:10,278 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 09:34:10 BasicIcfg
[2020-11-25 09:34:10,278 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 09:34:10,278 INFO  L168              Benchmark]: Toolchain (without parser) took 8425.20 ms. Allocated memory was 1.0 GB in the beginning and 1.8 GB in the end (delta: 757.1 MB). Free memory was 935.2 MB in the beginning and 931.0 MB in the end (delta: 4.2 MB). Peak memory consumption was 826.2 MB. Max. memory is 15.3 GB.
[2020-11-25 09:34:10,279 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:34:10,279 INFO  L168              Benchmark]: Boogie Preprocessor took 110.21 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 09:34:10,279 INFO  L168              Benchmark]: UtopiaSpecLang took 70.34 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.0 MB in the end (delta: 5.5 MB). Peak memory consumption was 5.5 MB. Max. memory is 15.3 GB.
[2020-11-25 09:34:10,279 INFO  L168              Benchmark]: Boogie Printer took 18.88 ms. Allocated memory is still 1.0 GB. Free memory was 919.0 MB in the beginning and 913.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 09:34:10,279 INFO  L168              Benchmark]: RCFGBuilder took 708.47 ms. Allocated memory is still 1.0 GB. Free memory was 913.6 MB in the beginning and 784.7 MB in the end (delta: 128.9 MB). Peak memory consumption was 128.9 MB. Max. memory is 15.3 GB.
[2020-11-25 09:34:10,280 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.97 ms. Allocated memory is still 1.0 GB. Free memory was 784.7 MB in the beginning and 775.8 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 09:34:10,280 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1440.43 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 215.0 MB). Free memory was 775.8 MB in the beginning and 950.0 MB in the end (delta: -174.2 MB). Peak memory consumption was 173.3 MB. Max. memory is 15.3 GB.
[2020-11-25 09:34:10,280 INFO  L168              Benchmark]: BlockEncodingV2 took 137.49 ms. Allocated memory is still 1.2 GB. Free memory was 950.0 MB in the beginning and 870.5 MB in the end (delta: 79.5 MB). Peak memory consumption was 79.5 MB. Max. memory is 15.3 GB.
[2020-11-25 09:34:10,281 INFO  L168              Benchmark]: BuchiAutomizer took 5899.43 ms. Allocated memory was 1.2 GB in the beginning and 1.8 GB in the end (delta: 542.1 MB). Free memory was 870.5 MB in the beginning and 931.0 MB in the end (delta: -60.5 MB). Peak memory consumption was 546.6 MB. Max. memory is 15.3 GB.
[2020-11-25 09:34:10,283 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4438 locations, 7956 edges
  - StatisticsResult: Encoded RCFG
    4342 locations, 7691 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 110.21 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 70.34 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.0 MB in the end (delta: 5.5 MB). Peak memory consumption was 5.5 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 18.88 ms. Allocated memory is still 1.0 GB. Free memory was 919.0 MB in the beginning and 913.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 708.47 ms. Allocated memory is still 1.0 GB. Free memory was 913.6 MB in the beginning and 784.7 MB in the end (delta: 128.9 MB). Peak memory consumption was 128.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.97 ms. Allocated memory is still 1.0 GB. Free memory was 784.7 MB in the beginning and 775.8 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1440.43 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 215.0 MB). Free memory was 775.8 MB in the beginning and 950.0 MB in the end (delta: -174.2 MB). Peak memory consumption was 173.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 137.49 ms. Allocated memory is still 1.2 GB. Free memory was 950.0 MB in the beginning and 870.5 MB in the end (delta: 79.5 MB). Peak memory consumption was 79.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 5899.43 ms. Allocated memory was 1.2 GB in the beginning and 1.8 GB in the end (delta: 542.1 MB). Free memory was 870.5 MB in the beginning and 931.0 MB in the end (delta: -60.5 MB). Peak memory consumption was 546.6 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1788 locations, 2446 edges
  - StatisticsResult: BuchiProgram size
    4438 locations, 7956 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 8 locations. The remainder module has 2996 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 5.8s and 5 iterations.  TraceHistogramMax:3. Analysis of lassos took 4.1s. Construction of modules took 0.8s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 938 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2996 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 13788 SDtfs, 7856 SDslu, 27922 SDs, 0 SdLazy, 2780 SolverSat, 1800 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.8s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(987048820) = (new YFLink)({from : 987048814});
[L1099]              havoc __exception;
[L1100]              revert := false;
[L1101]  COND FALSE  !(__exception)
[L1126]  CALL        call YFLink_YFLink__success(this, msgsender_MSG, msgvalue_MSG);
[L3180]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2101]              assume msgsender_MSG != null;
[L2102]              Balance[this] := 0;
[L2116]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L3180]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3181]  COND FALSE  !(revert)
[L3184]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2084]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]              assume msgsender_MSG != null;
[L2070]              Balance[this] := 0;
[L2084]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2085]  COND FALSE  !(revert)
[L3184]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3185]  COND FALSE  !(revert)
[L3188]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2178]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2101]              assume msgsender_MSG != null;
[L2102]              Balance[this] := 0;
[L2116]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2178]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2179]  COND FALSE  !(revert)
[L2182]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2084]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]              assume msgsender_MSG != null;
[L2070]              Balance[this] := 0;
[L2084]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2085]  COND FALSE  !(revert)
[L2182]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2183]  COND FALSE  !(revert)
[L2186]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2150]              assume msgsender_MSG != null;
[L2151]              Balance[this] := 0;
[L2152]              _balances_ERC20[this] := zeroRefintArr();
[L2153]              sum__balances0[this] := 0;
[L2154]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2155]              sum__allowances1[this] := 0;
[L2156]              _totalSupply_ERC20[this] := 0;
[L2186]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2187]  COND FALSE  !(revert)
[L3188]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3189]  COND FALSE  !(revert)
[L3192]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 225975011, 987048806, 18);
[L2942]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2084]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]              assume msgsender_MSG != null;
[L2070]              Balance[this] := 0;
[L2084]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2085]  COND FALSE  !(revert)
[L2942]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2943]  COND FALSE  !(revert)
[L2946]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L2917]              assume msgsender_MSG != null;
[L2918]              Balance[this] := 0;
[L2919]              _name_ERC20Detailed[this] := -1446634570;
[L2920]              _symbol_ERC20Detailed[this] := -1446634570;
[L2921]              _decimals_ERC20Detailed[this] := 0;
[L2923]              _name_ERC20Detailed[this] := name_s484;
[L2924]              _symbol_ERC20Detailed[this] := symbol_s484;
[L2925]              _decimals_ERC20Detailed[this] := decimals_s484;
[L2946]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L2947]  COND FALSE  !(revert)
[L3192]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 225975011, 987048806, 18);
[L3193]  COND FALSE  !(revert)
[L3196]  CALL        call YFLink_YFLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3142]              assume msgsender_MSG != null;
[L3143]              Balance[this] := 0;
[L3144]              governance_YFLink[this] := null;
[L3145]              minters_YFLink[this] := zeroRefboolArr();
[L3148]              havoc __var_24;
[L3149]              governance_YFLink[this] := __var_24;
[L3196]  RET         call YFLink_YFLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L1126]  RET         call YFLink_YFLink__success(this, msgsender_MSG, msgvalue_MSG);
[L1127]              assume !revert && gas >= 0;
[L4870]  RET         call YFLink_YFLink(this, msgsender_MSG, msgvalue_MSG);
ERC20(987048820).transfer~address~uint256.gas(3979002)({from : 987048808, recipient : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L393]               havoc __exception;
[L394]               revert := false;
[L395]   COND TRUE   __exception
[L396]               __tmp__Balance := Balance;
[L397]               __tmp__DType := DType;
[L398]               __tmp__Alloc := Alloc;
[L399]               __tmp__balance_ADDR := balance_ADDR;
[L400]               __tmp__M_Ref_int := M_Ref_int;
[L401]               __tmp__sum__balances0 := sum__balances0;
[L402]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L403]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L404]               __tmp__sum__allowances1 := sum__allowances1;
[L405]               __tmp__M_Ref_bool := M_Ref_bool;
[L406]               __tmp__sum_minters2 := sum_minters2;
[L407]               __tmp__Length := Length;
[L408]               __tmp__now := now;
[L409]               __tmp___balances_ERC20 := _balances_ERC20;
[L410]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L411]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L412]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L413]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L414]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L415]               __tmp__governance_YFLink := governance_YFLink;
[L416]               __tmp__minters_YFLink := minters_YFLink;
[L417]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2219]  COND TRUE   __tmp__DType[this] == YFLink
[L2220]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2124]              __ret_0_ := msgsender_MSG;
[L2220]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2221]  COND FALSE  !(revert)
[L2232]  COND TRUE   __tmp__DType[this] == YFLink
[L2233]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2704]              __var_12 := null;
[L2705]  COND FALSE  !(!(sender_s323 != null))
[L2709]              __var_13 := null;
[L2710]  COND TRUE   !(recipient_s323 != null)
[L2711]              revert := true;
[L2233]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2234]  COND TRUE   revert
[L417]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L418]               assume revert || gas < 0;
[L4765]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);

Loop:
ERC20(987048820).transfer~address~uint256.gas(3979001)({from : 987048824, recipient : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L393]               havoc __exception;
[L394]               revert := false;
[L395]   COND TRUE   __exception
[L396]               __tmp__Balance := Balance;
[L397]               __tmp__DType := DType;
[L398]               __tmp__Alloc := Alloc;
[L399]               __tmp__balance_ADDR := balance_ADDR;
[L400]               __tmp__M_Ref_int := M_Ref_int;
[L401]               __tmp__sum__balances0 := sum__balances0;
[L402]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L403]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L404]               __tmp__sum__allowances1 := sum__allowances1;
[L405]               __tmp__M_Ref_bool := M_Ref_bool;
[L406]               __tmp__sum_minters2 := sum_minters2;
[L407]               __tmp__Length := Length;
[L408]               __tmp__now := now;
[L409]               __tmp___balances_ERC20 := _balances_ERC20;
[L410]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L411]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L412]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L413]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L414]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L415]               __tmp__governance_YFLink := governance_YFLink;
[L416]               __tmp__minters_YFLink := minters_YFLink;
[L417]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2219]  COND TRUE   __tmp__DType[this] == YFLink
[L2220]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2124]              __ret_0_ := msgsender_MSG;
[L2220]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2221]  COND FALSE  !(revert)
[L2232]  COND TRUE   __tmp__DType[this] == YFLink
[L2233]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2704]              __var_12 := null;
[L2705]  COND FALSE  !(!(sender_s323 != null))
[L2709]              __var_13 := null;
[L2710]  COND TRUE   !(recipient_s323 != null)
[L2711]              revert := true;
[L2233]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2234]  COND TRUE   revert
[L417]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L418]               assume revert || gas < 0;
[L4765]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
