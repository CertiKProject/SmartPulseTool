This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 20:01:56,351 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 20:01:56,352 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 20:01:56,363 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 20:01:56,363 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 20:01:56,364 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 20:01:56,365 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 20:01:56,366 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 20:01:56,368 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 20:01:56,368 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 20:01:56,369 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 20:01:56,370 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 20:01:56,370 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 20:01:56,371 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 20:01:56,372 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 20:01:56,373 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 20:01:56,373 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 20:01:56,374 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 20:01:56,376 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 20:01:56,377 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 20:01:56,378 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 20:01:56,379 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 20:01:56,380 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 20:01:56,381 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 20:01:56,381 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 20:01:56,381 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 20:01:56,382 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 20:01:56,382 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 20:01:56,382 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 20:01:56,383 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 20:01:56,383 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 20:01:56,383 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 20:01:56,384 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 20:01:56,385 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 20:01:56,385 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 20:01:56,385 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 20:01:56,386 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 20:01:56,386 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 20:01:56,386 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 20:01:56,387 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 20:01:56,387 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 20:01:56,388 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 20:01:56,396 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 20:01:56,396 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 20:01:56,397 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 20:01:56,397 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 20:01:56,397 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 20:01:56,397 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 20:01:56,397 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 20:01:56,397 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 20:01:56,397 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 20:01:56,397 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 20:01:56,397 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 20:01:56,398 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 20:01:56,398 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 20:01:56,398 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 20:01:56,398 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 20:01:56,398 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 20:01:56,398 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 20:01:56,398 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 20:01:56,398 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 20:01:56,398 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 20:01:56,398 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 20:01:56,399 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 20:01:56,399 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 20:01:56,399 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 20:01:56,399 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 20:01:56,399 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 20:01:56,423 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 20:01:56,437 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 20:01:56,439 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 20:01:56,441 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 20:01:56,441 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 20:01:56,442 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl
[2020-11-24 20:01:56,442 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl'
[2020-11-24 20:01:56,507 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 20:01:56,508 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 20:01:56,509 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 20:01:56,509 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 20:01:56,509 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 20:01:56,532 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:56" (1/1) ...
[2020-11-24 20:01:56,534 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:56" (1/1) ...
[2020-11-24 20:01:56,568 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:56" (1/1) ...
[2020-11-24 20:01:56,569 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:56" (1/1) ...
[2020-11-24 20:01:56,585 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:56" (1/1) ...
[2020-11-24 20:01:56,594 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:56" (1/1) ...
[2020-11-24 20:01:56,601 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:56" (1/1) ...
[2020-11-24 20:01:56,608 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 20:01:56,609 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 20:01:56,609 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 20:01:56,611 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 20:01:56,615 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:56" (1/1) ...
[2020-11-24 20:01:56,630 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(JUSToken.transferFrom(from, to, value), from != to && (value > balanceOf_JUSToken[this][from] || value > allowance_JUSToken[this][from][msg.sender] || balanceOf_JUSToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_JUSToken[this][to] >= 0 && balanceOf_JUSToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_JUSToken[this][from] >= 0 &&  balanceOf_JUSToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_JUSToken[this][from][msg.sender] >= 0 && allowance_JUSToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(JUSToken.transferFrom)))
[2020-11-24 20:01:56,635 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(JUSToken.transferFrom(from, to, value), from != to && (value > balanceOf_JUSToken[this][from] || value > allowance_JUSToken[this][from][msg.sender] || balanceOf_JUSToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_JUSToken[this][to] >= 0 && balanceOf_JUSToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_JUSToken[this][from] >= 0 &&  balanceOf_JUSToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_JUSToken[this][from][msg.sender] >= 0 && allowance_JUSToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(JUSToken.transferFrom)))
[2020-11-24 20:01:56,643 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(JUSToken.transferFrom(from, to, value), from != to && (value > balanceOf_JUSToken[this][from] || value > allowance_JUSToken[this][from][msg.sender] || balanceOf_JUSToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_JUSToken[this][to] >= 0 && balanceOf_JUSToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_JUSToken[this][from] >= 0 &&  balanceOf_JUSToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_JUSToken[this][from][msg.sender] >= 0 && allowance_JUSToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(JUSToken.transferFrom)))
[2020-11-24 20:01:56,650 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( _from_s199!=_to_s199 && ( ( _value_s199>balanceOf_JUSToken[this][_from_s199] || _value_s199>allowance_JUSToken[this][_from_s199][msg.sender] ) || ( balanceOf_JUSToken[this][_to_s199] + _value_s199 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && _value_s199>=0 ) && _value_s199<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_JUSToken[this][_to_s199]>=0 ) && balanceOf_JUSToken[this][_to_s199]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_JUSToken[this][_from_s199]>=0 ) && balanceOf_JUSToken[this][_from_s199]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_JUSToken[this][_from_s199][msg.sender]>=0 ) && allowance_JUSToken[this][_from_s199][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[_from_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>],IdentifierExpression[_to_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]],BinaryExpression[LOGICOR,BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[_value_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_from_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]]],BinaryExpression[COMPGT,IdentifierExpression[_value_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_from_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_to_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],IdentifierExpression[_value_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_to_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_to_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_from_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_from_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_from_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_JUSToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[_from_s199,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_JUSToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 20:01:56,654 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(JUSToken.transferFrom(from, to, value), from != to && (value > balanceOf_JUSToken[this][from] || value > allowance_JUSToken[this][from][msg.sender] || balanceOf_JUSToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_JUSToken[this][to] >= 0 && balanceOf_JUSToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_JUSToken[this][from] >= 0 &&  balanceOf_JUSToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_JUSToken[this][from][msg.sender] >= 0 && allowance_JUSToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(JUSToken.transferFrom)))
[2020-11-24 20:01:56,655 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_JUSToken0) ==> ( <>AP(fail_transferFrom_JUSToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 20:01:56,660 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:01:56 PropertyContainer
[2020-11-24 20:01:56,660 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 20:01:56,661 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 20:01:56,661 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 20:01:56,661 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 20:01:56,662 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:56" (1/2) ...
[2020-11-24 20:01:56,662 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 20:01:56,662 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 20:01:56,671 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:01:56" (2/2) ...
[2020-11-24 20:01:56,671 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 20:01:56,671 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 20:01:56,672 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 20:01:56,672 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 20:01:56,672 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:56" (1/2) ...
[2020-11-24 20:01:56,728 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 20:01:56,728 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-24 20:01:56,728 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-24 20:01:56,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-24 20:01:56,728 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-24 20:01:56,728 INFO  L130     BoogieDeclarations]: Found specification of procedure JUSToken_JUSToken_NoBaseCtor__success
[2020-11-24 20:01:56,728 INFO  L130     BoogieDeclarations]: Found specification of procedure JUSToken_JUSToken
[2020-11-24 20:01:56,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure JUSToken_JUSToken
[2020-11-24 20:01:56,728 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_JUSToken__success
[2020-11-24 20:01:56,729 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_JUSToken
[2020-11-24 20:01:56,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_JUSToken
[2020-11-24 20:01:56,729 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_JUSToken
[2020-11-24 20:01:56,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_JUSToken
[2020-11-24 20:01:56,729 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_JUSToken
[2020-11-24 20:01:56,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_JUSToken
[2020-11-24 20:01:56,729 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_JUSToken
[2020-11-24 20:01:56,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_JUSToken
[2020-11-24 20:01:56,729 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_JUSToken
[2020-11-24 20:01:56,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_JUSToken
[2020-11-24 20:01:56,729 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_JUSToken
[2020-11-24 20:01:56,730 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_JUSToken
[2020-11-24 20:01:56,730 INFO  L130     BoogieDeclarations]: Found specification of procedure name_JUSToken
[2020-11-24 20:01:56,730 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_JUSToken
[2020-11-24 20:01:56,730 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_JUSToken
[2020-11-24 20:01:56,730 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_JUSToken
[2020-11-24 20:01:56,730 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_JUSToken
[2020-11-24 20:01:56,731 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_JUSToken
[2020-11-24 20:01:56,731 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_JUSToken
[2020-11-24 20:01:56,731 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_JUSToken
[2020-11-24 20:01:56,731 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_JUSToken
[2020-11-24 20:01:56,731 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_JUSToken
[2020-11-24 20:01:56,732 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_JUSToken
[2020-11-24 20:01:56,732 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_JUSToken
[2020-11-24 20:01:56,732 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 20:01:56,732 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 20:01:56,732 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 20:01:56,732 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-24 20:01:56,732 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-24 20:01:56,732 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_JUSToken
[2020-11-24 20:01:56,732 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 20:01:56,732 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 20:01:56,732 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-24 20:01:56,732 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-24 20:01:56,732 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-24 20:01:56,733 INFO  L130     BoogieDeclarations]: Found specification of procedure JUSToken_JUSToken_NoBaseCtor__fail
[2020-11-24 20:01:56,733 INFO  L130     BoogieDeclarations]: Found specification of procedure JUSToken_JUSToken__success
[2020-11-24 20:01:56,733 INFO  L130     BoogieDeclarations]: Found specification of procedure JUSToken_JUSToken__fail
[2020-11-24 20:01:56,733 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_JUSToken__fail
[2020-11-24 20:01:56,733 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_JUSToken__success
[2020-11-24 20:01:56,733 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_JUSToken__fail
[2020-11-24 20:01:56,733 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_JUSToken__success
[2020-11-24 20:01:56,733 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_JUSToken__fail
[2020-11-24 20:01:56,733 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_JUSToken__success
[2020-11-24 20:01:56,733 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_JUSToken__fail
[2020-11-24 20:01:56,733 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_JUSToken__success
[2020-11-24 20:01:56,733 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_JUSToken__fail
[2020-11-24 20:01:56,733 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_JUSToken__success
[2020-11-24 20:01:56,733 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_JUSToken__fail
[2020-11-24 20:01:56,734 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_JUSToken__success
[2020-11-24 20:01:56,734 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_JUSToken__fail
[2020-11-24 20:01:56,734 INFO  L130     BoogieDeclarations]: Found specification of procedure name_JUSToken__success
[2020-11-24 20:01:56,734 INFO  L130     BoogieDeclarations]: Found specification of procedure name_JUSToken__fail
[2020-11-24 20:01:56,734 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_JUSToken__success
[2020-11-24 20:01:56,734 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_JUSToken__fail
[2020-11-24 20:01:56,734 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_JUSToken__success
[2020-11-24 20:01:56,734 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_JUSToken__fail
[2020-11-24 20:01:56,734 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_JUSToken__success
[2020-11-24 20:01:56,734 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_JUSToken__fail
[2020-11-24 20:01:56,734 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_JUSToken__success
[2020-11-24 20:01:56,734 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_JUSToken__fail
[2020-11-24 20:01:56,734 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_JUSToken__success
[2020-11-24 20:01:56,735 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_JUSToken__fail
[2020-11-24 20:01:56,735 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 20:01:56,735 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 20:01:56,735 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 20:01:56,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 20:01:56,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 20:01:56,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-24 20:01:56,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-24 20:01:56,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-24 20:01:56,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-24 20:01:56,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure JUSToken_JUSToken_NoBaseCtor__fail
[2020-11-24 20:01:56,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure JUSToken_JUSToken_NoBaseCtor__success
[2020-11-24 20:01:56,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure JUSToken_JUSToken__fail
[2020-11-24 20:01:56,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure JUSToken_JUSToken__success
[2020-11-24 20:01:56,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_JUSToken__fail
[2020-11-24 20:01:56,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_JUSToken__success
[2020-11-24 20:01:56,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_JUSToken__fail
[2020-11-24 20:01:56,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_JUSToken__success
[2020-11-24 20:01:56,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_JUSToken__fail
[2020-11-24 20:01:56,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_JUSToken__success
[2020-11-24 20:01:56,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_JUSToken__fail
[2020-11-24 20:01:56,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_JUSToken__success
[2020-11-24 20:01:56,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_JUSToken__fail
[2020-11-24 20:01:56,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_JUSToken__success
[2020-11-24 20:01:56,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_JUSToken__fail
[2020-11-24 20:01:56,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_JUSToken__success
[2020-11-24 20:01:56,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_JUSToken__fail
[2020-11-24 20:01:56,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_JUSToken__success
[2020-11-24 20:01:56,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_JUSToken__fail
[2020-11-24 20:01:56,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_JUSToken__success
[2020-11-24 20:01:56,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_JUSToken__fail
[2020-11-24 20:01:56,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_JUSToken__success
[2020-11-24 20:01:56,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_JUSToken__fail
[2020-11-24 20:01:56,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_JUSToken__success
[2020-11-24 20:01:56,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_JUSToken__fail
[2020-11-24 20:01:56,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_JUSToken__success
[2020-11-24 20:01:56,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_JUSToken__fail
[2020-11-24 20:01:56,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_JUSToken__success
[2020-11-24 20:01:56,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_JUSToken__fail
[2020-11-24 20:01:56,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_JUSToken__success
[2020-11-24 20:01:56,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 20:01:56,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 20:01:56,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 20:01:56,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 20:01:56,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 20:01:56,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 20:01:56,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-24 20:01:56,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-24 20:01:56,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_JUSToken
[2020-11-24 20:01:56,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 20:01:56,739 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 20:01:56,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 20:01:57,239 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:01:57,240 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:01:57,274 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 20:01:57,274 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-24 20:01:57,276 INFO  L202        PluginConnector]: Adding new model JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:01:57 BoogieIcfgContainer
[2020-11-24 20:01:57,276 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:01:56" (2/2) ...
[2020-11-24 20:01:57,276 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 20:01:57,276 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@601fcf5a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:01:57, skipping insertion in model container
[2020-11-24 20:01:57,276 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 20:01:57,277 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 20:01:57,277 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 20:01:57,278 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 20:01:57,279 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:56" (1/3) ...
[2020-11-24 20:01:57,279 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5245812e and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:01:57, skipping insertion in model container
[2020-11-24 20:01:57,279 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:01:56" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 20:01:57,317 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:01:57 NWAContainer
[2020-11-24 20:01:57,317 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 20:01:57,318 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 20:01:57,318 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 20:01:57,319 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 20:01:57,320 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:01:57" (3/4) ...
[2020-11-24 20:01:57,320 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@76623f93 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:01:57, skipping insertion in model container
[2020-11-24 20:01:57,321 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:01:57" (4/4) ...
[2020-11-24 20:01:57,324 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 20:01:57,327 INFO  L110   BuchiProductObserver]: Initial RCFG 799 locations, 970 edges
[2020-11-24 20:01:57,327 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 20:01:57,339 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 20:01:58,368 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 20:01:58,371 INFO  L110   BuchiProductObserver]: BuchiProgram size 1864 locations, 3122 edges
[2020-11-24 20:01:58,371 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:01:58 BoogieIcfgContainer
[2020-11-24 20:01:58,371 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 20:01:58,371 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 20:01:58,371 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 20:01:58,373 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 20:01:58,373 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:01:58" (1/1) ...
[2020-11-24 20:01:58,415 INFO  L313           BlockEncoder]: Initial Icfg 1864 locations, 3122 edges
[2020-11-24 20:01:58,416 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 20:01:58,416 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 20:01:58,416 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 20:01:58,417 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 20:01:58,423 INFO  L70    emoveInfeasibleEdges]: Removed 27 edges and 7 locations because of local infeasibility
[2020-11-24 20:01:58,426 INFO  L70        RemoveSinkStates]: Removed 40 edges and 20 locations by removing sink states
[2020-11-24 20:01:58,431 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 20:01:58,433 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 20:01:58,434 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 20:01:58,434 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 20:01:58,436 INFO  L313           BlockEncoder]: Encoded RCFG 1827 locations, 3041 edges
[2020-11-24 20:01:58,437 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:01:58 BasicIcfg
[2020-11-24 20:01:58,437 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 20:01:58,437 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 20:01:58,437 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 20:01:58,439 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 20:01:58,439 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:01:58,439 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:01:56" (1/6) ...
[2020-11-24 20:01:58,440 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d2c3acf and model type JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:01:58, skipping insertion in model container
[2020-11-24 20:01:58,440 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:01:58,440 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:01:56" (2/6) ...
[2020-11-24 20:01:58,441 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d2c3acf and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:01:58, skipping insertion in model container
[2020-11-24 20:01:58,441 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:01:58,441 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:01:57" (3/6) ...
[2020-11-24 20:01:58,441 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d2c3acf and model type JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:01:58, skipping insertion in model container
[2020-11-24 20:01:58,441 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:01:58,441 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:01:57" (4/6) ...
[2020-11-24 20:01:58,441 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d2c3acf and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:01:58, skipping insertion in model container
[2020-11-24 20:01:58,441 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:01:58,441 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:01:58" (5/6) ...
[2020-11-24 20:01:58,441 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d2c3acf and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 08:01:58, skipping insertion in model container
[2020-11-24 20:01:58,441 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:01:58,442 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:01:58" (6/6) ...
[2020-11-24 20:01:58,443 INFO  L404   chiAutomizerObserver]: Analyzing ICFG JUSToken_0x14ca41eecd7d81d5d13098586c0d2314eba285be_transferfrom-fail.bpl_BEv2
[2020-11-24 20:01:58,475 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 20:01:58,475 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 20:01:58,475 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 20:01:58,476 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 20:01:58,476 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 20:01:58,476 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 20:01:58,476 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 20:01:58,476 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 20:01:58,476 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 20:01:58,493 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1827 states.
[2020-11-24 20:01:58,531 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:01:58,531 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:01:58,531 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:01:58,537 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:01:58,538 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:01:58,538 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 20:01:58,538 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1827 states.
[2020-11-24 20:01:58,547 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:01:58,547 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:01:58,547 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:01:58,548 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:01:58,549 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_JUSToken0 := false;
[L2]                 call_transferFrom_JUSToken0 := false;
[L2]     CALL        call main();
[L2140]              assume null == 0;
[L2141]  CALL        call this := FreshRefGenerator__success();
[L1075]              havoc newRef;
[L1076]              assume Alloc[newRef] == false;
[L1077]              Alloc[newRef] := true;
[L1078]              assume newRef != null;
[L2141]  RET         call this := FreshRefGenerator__success();
[L2142]              assume now >= 0;
[L2143]              assume DType[this] == JUSToken;
[L2144]              assume msgvalue_MSG == 0;
[L2145]              gas := gas - 53000;
[L2146]  CALL        call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1161]  CALL        call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1135]              assume msgsender_MSG != null;
[L1136]              Balance[this] := 0;
[L1137]              name_JUSToken[this] := 34996628;
[L1138]              symbol_JUSToken[this] := -1545090883;
[L1139]              decimals_JUSToken[this] := 18;
[L1140]              totalSupply_JUSToken[this] := nonlinearMul(40000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_JUSToken[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1141]              balanceOf_JUSToken[this] := zeroRefintArr();
[L1142]              sum_balanceOf0[this] := 0;
[L1143]              allowance_JUSToken[this] := zeroRefRefintArr();
[L1144]              sum_allowance1[this] := 0;
[L1146]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][msgsender_MSG];
[L1147]              balanceOf_JUSToken[this][msgsender_MSG] := totalSupply_JUSToken[this];
[L1148]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][msgsender_MSG];
[L1161]  RET         call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1162]  COND FALSE  !(revert)
[L162]   RET         call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L163]               assume !revert && gas >= 0;
[L2146]  RET         call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L2147]              assume !revert && gas >= 0;

Loop:
[L2150]  CALL        call CorralChoice_JUSToken(this);
[L2014]              havoc msgsender_MSG;
[L2015]              havoc msgvalue_MSG;
[L2016]              havoc choice;
[L2017]              havoc __ret_0_name;
[L2018]              havoc __ret_0_symbol;
[L2019]              havoc __ret_0_decimals;
[L2020]              havoc __ret_0_totalSupply;
[L2021]              havoc arg352_s0;
[L2022]              havoc __ret_0_balanceOf;
[L2023]              havoc arg353_s0;
[L2024]              havoc arg354_s0;
[L2025]              havoc __ret_0_allowance;
[L2026]              havoc _to_s159;
[L2027]              havoc _value_s159;
[L2028]              havoc _from_s199;
[L2029]              havoc _to_s199;
[L2030]              havoc _value_s199;
[L2031]              havoc success_s199;
[L2032]              havoc _spender_s220;
[L2033]              havoc _value_s220;
[L2034]              havoc success_s220;
[L2035]              havoc _spender_s258;
[L2036]              havoc _value_s258;
[L2037]              havoc _extraData_s258;
[L2038]              havoc success_s258;
[L2039]              havoc _value_s294;
[L2040]              havoc success_s294;
[L2041]              havoc _from_s349;
[L2042]              havoc _value_s349;
[L2043]              havoc success_s349;
[L2044]              havoc tmpNow;
[L2045]              havoc gas;
[L2046]              assume gas > 4000000 && gas <= 8000000;
[L2047]              tmpNow := now;
[L2048]              havoc now;
[L2049]              assume now > tmpNow;
[L2050]              assume msgsender_MSG != null;
[L2051]              assume DType[msgsender_MSG] != tokenRecipient;
[L2052]              assume DType[msgsender_MSG] != JUSToken;
[L2053]              Alloc[msgsender_MSG] := true;
[L2054]  COND TRUE   choice == 12
[L2055]              gas := gas - 21000;
[L2056]  COND FALSE  !(gas >= 0)
[L2150]  RET         call CorralChoice_JUSToken(this);

[2020-11-24 20:01:58,575 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:01:58,575 INFO  L82        PathProgramCache]: Analyzing trace with hash -1231243812, now seen corresponding path program 1 times
[2020-11-24 20:01:58,580 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:01:58,605 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:01:58,647 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:01:58,649 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:01:58,650 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:01:58,653 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:01:58,768 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:01:58,768 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:01:58,770 INFO  L87              Difference]: Start difference. First operand 1827 states. Second operand 4 states.
[2020-11-24 20:01:59,016 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:01:59,016 INFO  L93              Difference]: Finished difference Result 1449 states and 1579 transitions.
[2020-11-24 20:01:59,017 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:01:59,018 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1449 states and 1579 transitions.
[2020-11-24 20:01:59,028 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:01:59,042 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1449 states to 1447 states and 1575 transitions.
[2020-11-24 20:01:59,043 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-24 20:01:59,045 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 658
[2020-11-24 20:01:59,046 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1447 states and 1575 transitions.
[2020-11-24 20:01:59,051 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:01:59,051 INFO  L728         BuchiCegarLoop]: Abstraction has 1447 states and 1575 transitions.
[2020-11-24 20:01:59,068 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1447 states and 1575 transitions.
[2020-11-24 20:01:59,107 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1447 to 1447.
[2020-11-24 20:01:59,107 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1447 states.
[2020-11-24 20:01:59,111 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1447 states to 1447 states and 1575 transitions.
[2020-11-24 20:01:59,112 INFO  L751         BuchiCegarLoop]: Abstraction has 1447 states and 1575 transitions.
[2020-11-24 20:01:59,112 INFO  L631         BuchiCegarLoop]: Abstraction has 1447 states and 1575 transitions.
[2020-11-24 20:01:59,112 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 20:01:59,113 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1447 states and 1575 transitions.
[2020-11-24 20:01:59,119 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:01:59,119 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:01:59,119 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:01:59,121 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:01:59,121 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_JUSToken0 := false;
[L2]                 call_transferFrom_JUSToken0 := false;
[L2]     CALL        call main();
[L2140]              assume null == 0;
[L2141]  CALL        call this := FreshRefGenerator__success();
[L1075]              havoc newRef;
[L1076]              assume Alloc[newRef] == false;
[L1077]              Alloc[newRef] := true;
[L1078]              assume newRef != null;
[L2141]  RET         call this := FreshRefGenerator__success();
[L2142]              assume now >= 0;
[L2143]              assume DType[this] == JUSToken;
[L2144]              assume msgvalue_MSG == 0;
[L2145]              gas := gas - 53000;
[L2146]  CALL        call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1161]  CALL        call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1135]              assume msgsender_MSG != null;
[L1136]              Balance[this] := 0;
[L1137]              name_JUSToken[this] := 34996628;
[L1138]              symbol_JUSToken[this] := -1545090883;
[L1139]              decimals_JUSToken[this] := 18;
[L1140]              totalSupply_JUSToken[this] := nonlinearMul(40000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_JUSToken[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1141]              balanceOf_JUSToken[this] := zeroRefintArr();
[L1142]              sum_balanceOf0[this] := 0;
[L1143]              allowance_JUSToken[this] := zeroRefRefintArr();
[L1144]              sum_allowance1[this] := 0;
[L1146]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][msgsender_MSG];
[L1147]              balanceOf_JUSToken[this][msgsender_MSG] := totalSupply_JUSToken[this];
[L1148]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][msgsender_MSG];
[L1161]  RET         call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1162]  COND FALSE  !(revert)
[L162]   RET         call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L163]               assume !revert && gas >= 0;
[L2146]  RET         call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L2147]              assume !revert && gas >= 0;
[L2150]  CALL        call CorralChoice_JUSToken(this);
[L2014]              havoc msgsender_MSG;
[L2015]              havoc msgvalue_MSG;
[L2016]              havoc choice;
[L2017]              havoc __ret_0_name;
[L2018]              havoc __ret_0_symbol;
[L2019]              havoc __ret_0_decimals;
[L2020]              havoc __ret_0_totalSupply;
[L2021]              havoc arg352_s0;
[L2022]              havoc __ret_0_balanceOf;
[L2023]              havoc arg353_s0;
[L2024]              havoc arg354_s0;
[L2025]              havoc __ret_0_allowance;
[L2026]              havoc _to_s159;
[L2027]              havoc _value_s159;
[L2028]              havoc _from_s199;
[L2029]              havoc _to_s199;
[L2030]              havoc _value_s199;
[L2031]              havoc success_s199;
[L2032]              havoc _spender_s220;
[L2033]              havoc _value_s220;
[L2034]              havoc success_s220;
[L2035]              havoc _spender_s258;
[L2036]              havoc _value_s258;
[L2037]              havoc _extraData_s258;
[L2038]              havoc success_s258;
[L2039]              havoc _value_s294;
[L2040]              havoc success_s294;
[L2041]              havoc _from_s349;
[L2042]              havoc _value_s349;
[L2043]              havoc success_s349;
[L2044]              havoc tmpNow;
[L2045]              havoc gas;
[L2046]              assume gas > 4000000 && gas <= 8000000;
[L2047]              tmpNow := now;
[L2048]              havoc now;
[L2049]              assume now > tmpNow;
[L2050]              assume msgsender_MSG != null;
[L2051]              assume DType[msgsender_MSG] != tokenRecipient;
[L2052]              assume DType[msgsender_MSG] != JUSToken;
[L2053]              Alloc[msgsender_MSG] := true;
[L2054]  COND FALSE  !(choice == 12)
[L2060]  COND FALSE  !(choice == 11)
[L2066]  COND FALSE  !(choice == 10)
[L2072]  COND FALSE  !(choice == 9)
[L2078]  COND FALSE  !(choice == 8)
[L2084]  COND FALSE  !(choice == 7)
[L2090]  COND FALSE  !(choice == 6)
[L2097]  COND TRUE   choice == 5
[L2098]              gas := gas - 21000;
[L2099]  COND TRUE   gas >= 0
[L2100]              assume _value_s199 >= 0 && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2101]              assume msgvalue_MSG == 0;
[L2102]  CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s199 != _to_s199 && ((_value_s199 > balanceOf_JUSToken[this][_from_s199] || _value_s199 > allowance_JUSToken[this][_from_s199][msgsender_MSG]) || balanceOf_JUSToken[this][_to_s199] + _value_s199 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s199 >= 0) && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_to_s199] >= 0) && balanceOf_JUSToken[this][_to_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_from_s199] >= 0) && balanceOf_JUSToken[this][_from_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_JUSToken[this][_from_s199][msgsender_MSG] >= 0) && allowance_JUSToken[this][_from_s199][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_JUSToken0 := true;
[L2]                 call_transferFrom_JUSToken0 := false;
[L2]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1256]  COND TRUE   !(_value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG])
[L1257]              revert := true;
[L272]   RET         call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L273]               assume !revert && gas >= 0;
[L2102]  RET         call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2150]  RET         call CorralChoice_JUSToken(this);

Loop:
[L2150]  CALL        call CorralChoice_JUSToken(this);
[L2014]              havoc msgsender_MSG;
[L2015]              havoc msgvalue_MSG;
[L2016]              havoc choice;
[L2017]              havoc __ret_0_name;
[L2018]              havoc __ret_0_symbol;
[L2019]              havoc __ret_0_decimals;
[L2020]              havoc __ret_0_totalSupply;
[L2021]              havoc arg352_s0;
[L2022]              havoc __ret_0_balanceOf;
[L2023]              havoc arg353_s0;
[L2024]              havoc arg354_s0;
[L2025]              havoc __ret_0_allowance;
[L2026]              havoc _to_s159;
[L2027]              havoc _value_s159;
[L2028]              havoc _from_s199;
[L2029]              havoc _to_s199;
[L2030]              havoc _value_s199;
[L2031]              havoc success_s199;
[L2032]              havoc _spender_s220;
[L2033]              havoc _value_s220;
[L2034]              havoc success_s220;
[L2035]              havoc _spender_s258;
[L2036]              havoc _value_s258;
[L2037]              havoc _extraData_s258;
[L2038]              havoc success_s258;
[L2039]              havoc _value_s294;
[L2040]              havoc success_s294;
[L2041]              havoc _from_s349;
[L2042]              havoc _value_s349;
[L2043]              havoc success_s349;
[L2044]              havoc tmpNow;
[L2045]              havoc gas;
[L2046]              assume gas > 4000000 && gas <= 8000000;
[L2047]              tmpNow := now;
[L2048]              havoc now;
[L2049]              assume now > tmpNow;
[L2050]              assume msgsender_MSG != null;
[L2051]              assume DType[msgsender_MSG] != tokenRecipient;
[L2052]              assume DType[msgsender_MSG] != JUSToken;
[L2053]              Alloc[msgsender_MSG] := true;
[L2054]  COND FALSE  !(choice == 12)
[L2060]  COND FALSE  !(choice == 11)
[L2066]  COND FALSE  !(choice == 10)
[L2072]  COND FALSE  !(choice == 9)
[L2078]  COND FALSE  !(choice == 8)
[L2084]  COND FALSE  !(choice == 7)
[L2090]  COND FALSE  !(choice == 6)
[L2097]  COND TRUE   choice == 5
[L2098]              gas := gas - 21000;
[L2099]  COND TRUE   gas >= 0
[L2100]              assume _value_s199 >= 0 && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2101]              assume msgvalue_MSG == 0;
[L2102]  CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s199 != _to_s199 && ((_value_s199 > balanceOf_JUSToken[this][_from_s199] || _value_s199 > allowance_JUSToken[this][_from_s199][msgsender_MSG]) || balanceOf_JUSToken[this][_to_s199] + _value_s199 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s199 >= 0) && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_to_s199] >= 0) && balanceOf_JUSToken[this][_to_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_from_s199] >= 0) && balanceOf_JUSToken[this][_from_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_JUSToken[this][_from_s199][msgsender_MSG] >= 0) && allowance_JUSToken[this][_from_s199][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_JUSToken0 := true;
[L2]                 call_transferFrom_JUSToken0 := false;
[L2]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1256]  COND TRUE   !(_value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG])
[L1257]              revert := true;
[L272]   RET         call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L273]               assume !revert && gas >= 0;
[L2102]  RET         call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2150]  RET         call CorralChoice_JUSToken(this);

[2020-11-24 20:01:59,126 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:01:59,126 INFO  L82        PathProgramCache]: Analyzing trace with hash 2072351304, now seen corresponding path program 1 times
[2020-11-24 20:01:59,128 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:01:59,144 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:01:59,169 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:01:59,170 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:01:59,170 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:01:59,172 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:01:59,172 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:01:59,172 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:01:59,173 INFO  L87              Difference]: Start difference. First operand 1447 states and 1575 transitions. cyclomatic complexity: 130 Second operand 3 states.
[2020-11-24 20:01:59,214 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:01:59,214 INFO  L93              Difference]: Finished difference Result 1878 states and 2084 transitions.
[2020-11-24 20:01:59,214 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:01:59,214 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1878 states and 2084 transitions.
[2020-11-24 20:01:59,224 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:01:59,233 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1878 states to 1800 states and 1994 transitions.
[2020-11-24 20:01:59,233 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 830
[2020-11-24 20:01:59,233 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 830
[2020-11-24 20:01:59,234 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1800 states and 1994 transitions.
[2020-11-24 20:01:59,237 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:01:59,237 INFO  L728         BuchiCegarLoop]: Abstraction has 1800 states and 1994 transitions.
[2020-11-24 20:01:59,239 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1800 states and 1994 transitions.
[2020-11-24 20:01:59,258 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1800 to 1552.
[2020-11-24 20:01:59,258 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1552 states.
[2020-11-24 20:01:59,262 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1552 states to 1552 states and 1685 transitions.
[2020-11-24 20:01:59,262 INFO  L751         BuchiCegarLoop]: Abstraction has 1552 states and 1685 transitions.
[2020-11-24 20:01:59,262 INFO  L631         BuchiCegarLoop]: Abstraction has 1552 states and 1685 transitions.
[2020-11-24 20:01:59,262 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 20:01:59,262 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1552 states and 1685 transitions.
[2020-11-24 20:01:59,266 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:01:59,266 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:01:59,266 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:01:59,267 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:01:59,268 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_JUSToken0 := false;
[L2]                 call_transferFrom_JUSToken0 := false;
[L2]     CALL        call main();
[L2140]              assume null == 0;
[L2141]  CALL        call this := FreshRefGenerator__success();
[L1075]              havoc newRef;
[L1076]              assume Alloc[newRef] == false;
[L1077]              Alloc[newRef] := true;
[L1078]              assume newRef != null;
[L2141]  RET         call this := FreshRefGenerator__success();
[L2142]              assume now >= 0;
[L2143]              assume DType[this] == JUSToken;
[L2144]              assume msgvalue_MSG == 0;
[L2145]              gas := gas - 53000;
[L2146]  CALL        call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1161]  CALL        call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1135]              assume msgsender_MSG != null;
[L1136]              Balance[this] := 0;
[L1137]              name_JUSToken[this] := 34996628;
[L1138]              symbol_JUSToken[this] := -1545090883;
[L1139]              decimals_JUSToken[this] := 18;
[L1140]              totalSupply_JUSToken[this] := nonlinearMul(40000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_JUSToken[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1141]              balanceOf_JUSToken[this] := zeroRefintArr();
[L1142]              sum_balanceOf0[this] := 0;
[L1143]              allowance_JUSToken[this] := zeroRefRefintArr();
[L1144]              sum_allowance1[this] := 0;
[L1146]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][msgsender_MSG];
[L1147]              balanceOf_JUSToken[this][msgsender_MSG] := totalSupply_JUSToken[this];
[L1148]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][msgsender_MSG];
[L1161]  RET         call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1162]  COND FALSE  !(revert)
[L162]   RET         call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L163]               assume !revert && gas >= 0;
[L2146]  RET         call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L2147]              assume !revert && gas >= 0;
[L2150]  CALL        call CorralChoice_JUSToken(this);
[L2014]              havoc msgsender_MSG;
[L2015]              havoc msgvalue_MSG;
[L2016]              havoc choice;
[L2017]              havoc __ret_0_name;
[L2018]              havoc __ret_0_symbol;
[L2019]              havoc __ret_0_decimals;
[L2020]              havoc __ret_0_totalSupply;
[L2021]              havoc arg352_s0;
[L2022]              havoc __ret_0_balanceOf;
[L2023]              havoc arg353_s0;
[L2024]              havoc arg354_s0;
[L2025]              havoc __ret_0_allowance;
[L2026]              havoc _to_s159;
[L2027]              havoc _value_s159;
[L2028]              havoc _from_s199;
[L2029]              havoc _to_s199;
[L2030]              havoc _value_s199;
[L2031]              havoc success_s199;
[L2032]              havoc _spender_s220;
[L2033]              havoc _value_s220;
[L2034]              havoc success_s220;
[L2035]              havoc _spender_s258;
[L2036]              havoc _value_s258;
[L2037]              havoc _extraData_s258;
[L2038]              havoc success_s258;
[L2039]              havoc _value_s294;
[L2040]              havoc success_s294;
[L2041]              havoc _from_s349;
[L2042]              havoc _value_s349;
[L2043]              havoc success_s349;
[L2044]              havoc tmpNow;
[L2045]              havoc gas;
[L2046]              assume gas > 4000000 && gas <= 8000000;
[L2047]              tmpNow := now;
[L2048]              havoc now;
[L2049]              assume now > tmpNow;
[L2050]              assume msgsender_MSG != null;
[L2051]              assume DType[msgsender_MSG] != tokenRecipient;
[L2052]              assume DType[msgsender_MSG] != JUSToken;
[L2053]              Alloc[msgsender_MSG] := true;
[L2054]  COND FALSE  !(choice == 12)
[L2060]  COND FALSE  !(choice == 11)
[L2066]  COND FALSE  !(choice == 10)
[L2072]  COND FALSE  !(choice == 9)
[L2078]  COND FALSE  !(choice == 8)
[L2084]  COND FALSE  !(choice == 7)
[L2090]  COND FALSE  !(choice == 6)
[L2097]  COND TRUE   choice == 5
[L2098]              gas := gas - 21000;
[L2099]  COND TRUE   gas >= 0
[L2100]              assume _value_s199 >= 0 && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2101]              assume msgvalue_MSG == 0;
[L2102]  CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s199 != _to_s199 && ((_value_s199 > balanceOf_JUSToken[this][_from_s199] || _value_s199 > allowance_JUSToken[this][_from_s199][msgsender_MSG]) || balanceOf_JUSToken[this][_to_s199] + _value_s199 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s199 >= 0) && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_to_s199] >= 0) && balanceOf_JUSToken[this][_to_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_from_s199] >= 0) && balanceOf_JUSToken[this][_from_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_JUSToken[this][_from_s199][msgsender_MSG] >= 0) && allowance_JUSToken[this][_from_s199][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_JUSToken0 := true;
[L2]                 call_transferFrom_JUSToken0 := false;
[L2]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1256]  COND FALSE  !(!(_value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG]))
[L1260]              sum_allowance1[_from_s199] := sum_allowance1[_from_s199] - allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1261]              allowance_JUSToken[this][_from_s199][msgsender_MSG] := (allowance_JUSToken[this][_from_s199][msgsender_MSG] - _value_s199) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1262]              sum_allowance1[_from_s199] := sum_allowance1[_from_s199] + allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1263]  CALL        call _transfer~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1197]              __var_1 := null;
[L1198]  COND FALSE  !(!(_to_s144 != null))
[L1202]  COND FALSE  !(!(balanceOf_JUSToken[this][_from_s144] >= _value_s144))
[L1206]  COND FALSE  !(!((balanceOf_JUSToken[this][_to_s144] + _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_JUSToken[this][_to_s144]))
[L1210]              previousBalances_s144 := (balanceOf_JUSToken[this][_from_s144] + balanceOf_JUSToken[this][_to_s144]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1211]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][_from_s144];
[L1212]              balanceOf_JUSToken[this][_from_s144] := (balanceOf_JUSToken[this][_from_s144] - _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1213]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][_from_s144];
[L1214]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][_to_s144];
[L1215]              balanceOf_JUSToken[this][_to_s144] := (balanceOf_JUSToken[this][_to_s144] + _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1216]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][_to_s144];
[L1217]              assert { :EventEmitted "Transfer_JUSToken" } true;
[L1218]              assert (balanceOf_JUSToken[this][_from_s144] + balanceOf_JUSToken[this][_to_s144]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s144;
[L1263]  RET         call _transfer~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1264]  COND FALSE  !(revert)
[L1267]              success_s199 := true;
[L272]   RET         call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L273]               assume !revert && gas >= 0;
[L2102]  RET         call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2150]  RET         call CorralChoice_JUSToken(this);

Loop:
[L2150]  CALL        call CorralChoice_JUSToken(this);
[L2014]              havoc msgsender_MSG;
[L2015]              havoc msgvalue_MSG;
[L2016]              havoc choice;
[L2017]              havoc __ret_0_name;
[L2018]              havoc __ret_0_symbol;
[L2019]              havoc __ret_0_decimals;
[L2020]              havoc __ret_0_totalSupply;
[L2021]              havoc arg352_s0;
[L2022]              havoc __ret_0_balanceOf;
[L2023]              havoc arg353_s0;
[L2024]              havoc arg354_s0;
[L2025]              havoc __ret_0_allowance;
[L2026]              havoc _to_s159;
[L2027]              havoc _value_s159;
[L2028]              havoc _from_s199;
[L2029]              havoc _to_s199;
[L2030]              havoc _value_s199;
[L2031]              havoc success_s199;
[L2032]              havoc _spender_s220;
[L2033]              havoc _value_s220;
[L2034]              havoc success_s220;
[L2035]              havoc _spender_s258;
[L2036]              havoc _value_s258;
[L2037]              havoc _extraData_s258;
[L2038]              havoc success_s258;
[L2039]              havoc _value_s294;
[L2040]              havoc success_s294;
[L2041]              havoc _from_s349;
[L2042]              havoc _value_s349;
[L2043]              havoc success_s349;
[L2044]              havoc tmpNow;
[L2045]              havoc gas;
[L2046]              assume gas > 4000000 && gas <= 8000000;
[L2047]              tmpNow := now;
[L2048]              havoc now;
[L2049]              assume now > tmpNow;
[L2050]              assume msgsender_MSG != null;
[L2051]              assume DType[msgsender_MSG] != tokenRecipient;
[L2052]              assume DType[msgsender_MSG] != JUSToken;
[L2053]              Alloc[msgsender_MSG] := true;
[L2054]  COND FALSE  !(choice == 12)
[L2060]  COND FALSE  !(choice == 11)
[L2066]  COND FALSE  !(choice == 10)
[L2072]  COND FALSE  !(choice == 9)
[L2078]  COND FALSE  !(choice == 8)
[L2084]  COND FALSE  !(choice == 7)
[L2090]  COND FALSE  !(choice == 6)
[L2097]  COND TRUE   choice == 5
[L2098]              gas := gas - 21000;
[L2099]  COND TRUE   gas >= 0
[L2100]              assume _value_s199 >= 0 && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2101]              assume msgvalue_MSG == 0;
[L2102]  CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s199 != _to_s199 && ((_value_s199 > balanceOf_JUSToken[this][_from_s199] || _value_s199 > allowance_JUSToken[this][_from_s199][msgsender_MSG]) || balanceOf_JUSToken[this][_to_s199] + _value_s199 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s199 >= 0) && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_to_s199] >= 0) && balanceOf_JUSToken[this][_to_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_from_s199] >= 0) && balanceOf_JUSToken[this][_from_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_JUSToken[this][_from_s199][msgsender_MSG] >= 0) && allowance_JUSToken[this][_from_s199][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_JUSToken0 := true;
[L2]                 call_transferFrom_JUSToken0 := false;
[L2]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1256]  COND FALSE  !(!(_value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG]))
[L1260]              sum_allowance1[_from_s199] := sum_allowance1[_from_s199] - allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1261]              allowance_JUSToken[this][_from_s199][msgsender_MSG] := (allowance_JUSToken[this][_from_s199][msgsender_MSG] - _value_s199) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1262]              sum_allowance1[_from_s199] := sum_allowance1[_from_s199] + allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1263]  CALL        call _transfer~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1197]              __var_1 := null;
[L1198]  COND FALSE  !(!(_to_s144 != null))
[L1202]  COND FALSE  !(!(balanceOf_JUSToken[this][_from_s144] >= _value_s144))
[L1206]  COND FALSE  !(!((balanceOf_JUSToken[this][_to_s144] + _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_JUSToken[this][_to_s144]))
[L1210]              previousBalances_s144 := (balanceOf_JUSToken[this][_from_s144] + balanceOf_JUSToken[this][_to_s144]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1211]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][_from_s144];
[L1212]              balanceOf_JUSToken[this][_from_s144] := (balanceOf_JUSToken[this][_from_s144] - _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1213]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][_from_s144];
[L1214]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][_to_s144];
[L1215]              balanceOf_JUSToken[this][_to_s144] := (balanceOf_JUSToken[this][_to_s144] + _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1216]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][_to_s144];
[L1217]              assert { :EventEmitted "Transfer_JUSToken" } true;
[L1218]              assert (balanceOf_JUSToken[this][_from_s144] + balanceOf_JUSToken[this][_to_s144]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s144;
[L1263]  RET         call _transfer~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1264]  COND FALSE  !(revert)
[L1267]              success_s199 := true;
[L272]   RET         call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L273]               assume !revert && gas >= 0;
[L2102]  RET         call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2150]  RET         call CorralChoice_JUSToken(this);

[2020-11-24 20:01:59,271 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:01:59,271 INFO  L82        PathProgramCache]: Analyzing trace with hash 2013402446, now seen corresponding path program 1 times
[2020-11-24 20:01:59,271 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:01:59,285 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:01:59,372 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:01:59,373 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:01:59,373 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-24 20:01:59,373 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:01:59,373 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-24 20:01:59,373 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=22, Invalid=110, Unknown=0, NotChecked=0, Total=132
[2020-11-24 20:01:59,374 INFO  L87              Difference]: Start difference. First operand 1552 states and 1685 transitions. cyclomatic complexity: 135 Second operand 12 states.
[2020-11-24 20:02:00,225 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:02:00,225 INFO  L93              Difference]: Finished difference Result 1636 states and 1781 transitions.
[2020-11-24 20:02:00,225 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 12 states. 
[2020-11-24 20:02:00,226 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1636 states and 1781 transitions.
[2020-11-24 20:02:00,231 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:02:00,237 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1636 states to 1636 states and 1781 transitions.
[2020-11-24 20:02:00,237 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 787
[2020-11-24 20:02:00,238 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 787
[2020-11-24 20:02:00,238 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1636 states and 1781 transitions.
[2020-11-24 20:02:00,240 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:02:00,240 INFO  L728         BuchiCegarLoop]: Abstraction has 1636 states and 1781 transitions.
[2020-11-24 20:02:00,241 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1636 states and 1781 transitions.
[2020-11-24 20:02:00,260 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1636 to 1487.
[2020-11-24 20:02:00,260 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1487 states.
[2020-11-24 20:02:00,263 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1487 states to 1487 states and 1599 transitions.
[2020-11-24 20:02:00,263 INFO  L751         BuchiCegarLoop]: Abstraction has 1487 states and 1599 transitions.
[2020-11-24 20:02:00,263 INFO  L631         BuchiCegarLoop]: Abstraction has 1487 states and 1599 transitions.
[2020-11-24 20:02:00,263 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 20:02:00,263 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1487 states and 1599 transitions.
[2020-11-24 20:02:00,266 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:02:00,266 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:02:00,266 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:02:00,267 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:02:00,267 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_JUSToken0 := false;
[L2]                 call_transferFrom_JUSToken0 := false;
[L2]     CALL        call main();
[L2140]              assume null == 0;
[L2141]  CALL        call this := FreshRefGenerator__success();
[L1075]              havoc newRef;
[L1076]              assume Alloc[newRef] == false;
[L1077]              Alloc[newRef] := true;
[L1078]              assume newRef != null;
[L2141]  RET         call this := FreshRefGenerator__success();
[L2142]              assume now >= 0;
[L2143]              assume DType[this] == JUSToken;
[L2144]              assume msgvalue_MSG == 0;
[L2145]              gas := gas - 53000;
[L2146]  CALL        call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND TRUE   __exception
[L142]               __tmp__Balance := Balance;
[L143]               __tmp__DType := DType;
[L144]               __tmp__Alloc := Alloc;
[L145]               __tmp__balance_ADDR := balance_ADDR;
[L146]               __tmp__M_Ref_int := M_Ref_int;
[L147]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L148]               __tmp__alloc_allowance_JUSToken_lvl0 := alloc_allowance_JUSToken_lvl0;
[L149]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L150]               __tmp__sum_allowance1 := sum_allowance1;
[L151]               __tmp__Length := Length;
[L152]               __tmp__now := now;
[L153]               __tmp__name_JUSToken := name_JUSToken;
[L154]               __tmp__symbol_JUSToken := symbol_JUSToken;
[L155]               __tmp__decimals_JUSToken := decimals_JUSToken;
[L156]               __tmp__totalSupply_JUSToken := totalSupply_JUSToken;
[L157]               __tmp__balanceOf_JUSToken := balanceOf_JUSToken;
[L158]               __tmp__allowance_JUSToken := allowance_JUSToken;
[L159]   CALL        call JUSToken_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1153]  CALL        call JUSToken_JUSToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1116]              assume msgsender_MSG != null;
[L1117]              __tmp__Balance[this] := 0;
[L1118]              __tmp__name_JUSToken[this] := 34996628;
[L1119]              __tmp__symbol_JUSToken[this] := -1545090883;
[L1120]              __tmp__decimals_JUSToken[this] := 18;
[L1121]              __tmp__totalSupply_JUSToken[this] := nonlinearMul(40000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, __tmp__decimals_JUSToken[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1122]              __tmp__balanceOf_JUSToken[this] := zeroRefintArr();
[L1123]              __tmp__sum_balanceOf0[this] := 0;
[L1124]              __tmp__allowance_JUSToken[this] := zeroRefRefintArr();
[L1125]              __tmp__sum_allowance1[this] := 0;
[L1127]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_JUSToken[this][msgsender_MSG];
[L1128]              __tmp__balanceOf_JUSToken[this][msgsender_MSG] := __tmp__totalSupply_JUSToken[this];
[L1129]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_JUSToken[this][msgsender_MSG];
[L1153]  RET         call JUSToken_JUSToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1154]  COND FALSE  !(revert)
[L159]   RET         call JUSToken_JUSToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L160]               assume revert || gas < 0;
[L2146]  RET         call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L2147]              assume !revert && gas >= 0;
[L2150]  CALL        call CorralChoice_JUSToken(this);
[L2014]              havoc msgsender_MSG;
[L2015]              havoc msgvalue_MSG;
[L2016]              havoc choice;
[L2017]              havoc __ret_0_name;
[L2018]              havoc __ret_0_symbol;
[L2019]              havoc __ret_0_decimals;
[L2020]              havoc __ret_0_totalSupply;
[L2021]              havoc arg352_s0;
[L2022]              havoc __ret_0_balanceOf;
[L2023]              havoc arg353_s0;
[L2024]              havoc arg354_s0;
[L2025]              havoc __ret_0_allowance;
[L2026]              havoc _to_s159;
[L2027]              havoc _value_s159;
[L2028]              havoc _from_s199;
[L2029]              havoc _to_s199;
[L2030]              havoc _value_s199;
[L2031]              havoc success_s199;
[L2032]              havoc _spender_s220;
[L2033]              havoc _value_s220;
[L2034]              havoc success_s220;
[L2035]              havoc _spender_s258;
[L2036]              havoc _value_s258;
[L2037]              havoc _extraData_s258;
[L2038]              havoc success_s258;
[L2039]              havoc _value_s294;
[L2040]              havoc success_s294;
[L2041]              havoc _from_s349;
[L2042]              havoc _value_s349;
[L2043]              havoc success_s349;
[L2044]              havoc tmpNow;
[L2045]              havoc gas;
[L2046]              assume gas > 4000000 && gas <= 8000000;
[L2047]              tmpNow := now;
[L2048]              havoc now;
[L2049]              assume now > tmpNow;
[L2050]              assume msgsender_MSG != null;
[L2051]              assume DType[msgsender_MSG] != tokenRecipient;
[L2052]              assume DType[msgsender_MSG] != JUSToken;
[L2053]              Alloc[msgsender_MSG] := true;
[L2054]  COND FALSE  !(choice == 12)
[L2060]  COND FALSE  !(choice == 11)
[L2066]  COND FALSE  !(choice == 10)
[L2072]  COND FALSE  !(choice == 9)
[L2078]  COND FALSE  !(choice == 8)
[L2084]  COND FALSE  !(choice == 7)
[L2090]  COND FALSE  !(choice == 6)
[L2097]  COND TRUE   choice == 5
[L2098]              gas := gas - 21000;
[L2099]  COND TRUE   gas >= 0
[L2100]              assume _value_s199 >= 0 && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2101]              assume msgvalue_MSG == 0;
[L2102]  CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s199 != _to_s199 && ((_value_s199 > balanceOf_JUSToken[this][_from_s199] || _value_s199 > allowance_JUSToken[this][_from_s199][msgsender_MSG]) || balanceOf_JUSToken[this][_to_s199] + _value_s199 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s199 >= 0) && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_to_s199] >= 0) && balanceOf_JUSToken[this][_to_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_from_s199] >= 0) && balanceOf_JUSToken[this][_from_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_JUSToken[this][_from_s199][msgsender_MSG] >= 0) && allowance_JUSToken[this][_from_s199][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_JUSToken0 := true;
[L2]                 call_transferFrom_JUSToken0 := false;
[L2]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1256]  COND FALSE  !(!(_value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG]))
[L1260]              sum_allowance1[_from_s199] := sum_allowance1[_from_s199] - allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1261]              allowance_JUSToken[this][_from_s199][msgsender_MSG] := (allowance_JUSToken[this][_from_s199][msgsender_MSG] - _value_s199) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1262]              sum_allowance1[_from_s199] := sum_allowance1[_from_s199] + allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1263]  CALL        call _transfer~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1197]              __var_1 := null;
[L1198]  COND FALSE  !(!(_to_s144 != null))
[L1202]  COND FALSE  !(!(balanceOf_JUSToken[this][_from_s144] >= _value_s144))
[L1206]  COND FALSE  !(!((balanceOf_JUSToken[this][_to_s144] + _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_JUSToken[this][_to_s144]))
[L1210]              previousBalances_s144 := (balanceOf_JUSToken[this][_from_s144] + balanceOf_JUSToken[this][_to_s144]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1211]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][_from_s144];
[L1212]              balanceOf_JUSToken[this][_from_s144] := (balanceOf_JUSToken[this][_from_s144] - _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1213]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][_from_s144];
[L1214]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][_to_s144];
[L1215]              balanceOf_JUSToken[this][_to_s144] := (balanceOf_JUSToken[this][_to_s144] + _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1216]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][_to_s144];
[L1217]              assert { :EventEmitted "Transfer_JUSToken" } true;
[L1218]              assert (balanceOf_JUSToken[this][_from_s144] + balanceOf_JUSToken[this][_to_s144]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s144;
[L1263]  RET         call _transfer~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1264]  COND FALSE  !(revert)
[L1267]              success_s199 := true;
[L272]   RET         call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L273]               assume !revert && gas >= 0;
[L2102]  RET         call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2150]  RET         call CorralChoice_JUSToken(this);

Loop:
[L2150]  CALL        call CorralChoice_JUSToken(this);
[L2014]              havoc msgsender_MSG;
[L2015]              havoc msgvalue_MSG;
[L2016]              havoc choice;
[L2017]              havoc __ret_0_name;
[L2018]              havoc __ret_0_symbol;
[L2019]              havoc __ret_0_decimals;
[L2020]              havoc __ret_0_totalSupply;
[L2021]              havoc arg352_s0;
[L2022]              havoc __ret_0_balanceOf;
[L2023]              havoc arg353_s0;
[L2024]              havoc arg354_s0;
[L2025]              havoc __ret_0_allowance;
[L2026]              havoc _to_s159;
[L2027]              havoc _value_s159;
[L2028]              havoc _from_s199;
[L2029]              havoc _to_s199;
[L2030]              havoc _value_s199;
[L2031]              havoc success_s199;
[L2032]              havoc _spender_s220;
[L2033]              havoc _value_s220;
[L2034]              havoc success_s220;
[L2035]              havoc _spender_s258;
[L2036]              havoc _value_s258;
[L2037]              havoc _extraData_s258;
[L2038]              havoc success_s258;
[L2039]              havoc _value_s294;
[L2040]              havoc success_s294;
[L2041]              havoc _from_s349;
[L2042]              havoc _value_s349;
[L2043]              havoc success_s349;
[L2044]              havoc tmpNow;
[L2045]              havoc gas;
[L2046]              assume gas > 4000000 && gas <= 8000000;
[L2047]              tmpNow := now;
[L2048]              havoc now;
[L2049]              assume now > tmpNow;
[L2050]              assume msgsender_MSG != null;
[L2051]              assume DType[msgsender_MSG] != tokenRecipient;
[L2052]              assume DType[msgsender_MSG] != JUSToken;
[L2053]              Alloc[msgsender_MSG] := true;
[L2054]  COND TRUE   choice == 12
[L2055]              gas := gas - 21000;
[L2056]  COND FALSE  !(gas >= 0)
[L2150]  RET         call CorralChoice_JUSToken(this);

[2020-11-24 20:02:00,270 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:02:00,270 INFO  L82        PathProgramCache]: Analyzing trace with hash 997599066, now seen corresponding path program 1 times
[2020-11-24 20:02:00,270 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:02:00,276 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:02:00,293 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:02:00,293 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:02:00,293 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:02:00,293 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:02:00,293 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:02:00,293 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:02:00,293 INFO  L87              Difference]: Start difference. First operand 1487 states and 1599 transitions. cyclomatic complexity: 115 Second operand 4 states.
[2020-11-24 20:02:00,401 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:02:00,402 INFO  L93              Difference]: Finished difference Result 1981 states and 2225 transitions.
[2020-11-24 20:02:00,402 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:02:00,402 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1981 states and 2225 transitions.
[2020-11-24 20:02:00,409 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-24 20:02:00,416 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1981 states to 1935 states and 2179 transitions.
[2020-11-24 20:02:00,416 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 905
[2020-11-24 20:02:00,417 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 905
[2020-11-24 20:02:00,417 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1935 states and 2179 transitions.
[2020-11-24 20:02:00,419 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:02:00,419 INFO  L728         BuchiCegarLoop]: Abstraction has 1935 states and 2179 transitions.
[2020-11-24 20:02:00,421 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1935 states and 2179 transitions.
[2020-11-24 20:02:00,435 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1935 to 1454.
[2020-11-24 20:02:00,435 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1454 states.
[2020-11-24 20:02:00,437 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1454 states to 1454 states and 1563 transitions.
[2020-11-24 20:02:00,437 INFO  L751         BuchiCegarLoop]: Abstraction has 1454 states and 1563 transitions.
[2020-11-24 20:02:00,437 INFO  L631         BuchiCegarLoop]: Abstraction has 1454 states and 1563 transitions.
[2020-11-24 20:02:00,437 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 20:02:00,437 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1454 states and 1563 transitions.
[2020-11-24 20:02:00,441 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:02:00,441 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:02:00,441 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:02:00,442 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:02:00,442 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_JUSToken0 := false;
[L2]                 call_transferFrom_JUSToken0 := false;
[L2]     CALL        call main();
[L2140]              assume null == 0;
[L2141]  CALL        call this := FreshRefGenerator__success();
[L1075]              havoc newRef;
[L1076]              assume Alloc[newRef] == false;
[L1077]              Alloc[newRef] := true;
[L1078]              assume newRef != null;
[L2141]  RET         call this := FreshRefGenerator__success();
[L2142]              assume now >= 0;
[L2143]              assume DType[this] == JUSToken;
[L2144]              assume msgvalue_MSG == 0;
[L2145]              gas := gas - 53000;
[L2146]  CALL        call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1161]  CALL        call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1135]              assume msgsender_MSG != null;
[L1136]              Balance[this] := 0;
[L1137]              name_JUSToken[this] := 34996628;
[L1138]              symbol_JUSToken[this] := -1545090883;
[L1139]              decimals_JUSToken[this] := 18;
[L1140]              totalSupply_JUSToken[this] := nonlinearMul(40000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_JUSToken[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1141]              balanceOf_JUSToken[this] := zeroRefintArr();
[L1142]              sum_balanceOf0[this] := 0;
[L1143]              allowance_JUSToken[this] := zeroRefRefintArr();
[L1144]              sum_allowance1[this] := 0;
[L1146]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][msgsender_MSG];
[L1147]              balanceOf_JUSToken[this][msgsender_MSG] := totalSupply_JUSToken[this];
[L1148]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][msgsender_MSG];
[L1161]  RET         call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1162]  COND FALSE  !(revert)
[L162]   RET         call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L163]               assume !revert && gas >= 0;
[L2146]  RET         call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L2147]              assume !revert && gas >= 0;
[L2150]  CALL        call CorralChoice_JUSToken(this);
[L2014]              havoc msgsender_MSG;
[L2015]              havoc msgvalue_MSG;
[L2016]              havoc choice;
[L2017]              havoc __ret_0_name;
[L2018]              havoc __ret_0_symbol;
[L2019]              havoc __ret_0_decimals;
[L2020]              havoc __ret_0_totalSupply;
[L2021]              havoc arg352_s0;
[L2022]              havoc __ret_0_balanceOf;
[L2023]              havoc arg353_s0;
[L2024]              havoc arg354_s0;
[L2025]              havoc __ret_0_allowance;
[L2026]              havoc _to_s159;
[L2027]              havoc _value_s159;
[L2028]              havoc _from_s199;
[L2029]              havoc _to_s199;
[L2030]              havoc _value_s199;
[L2031]              havoc success_s199;
[L2032]              havoc _spender_s220;
[L2033]              havoc _value_s220;
[L2034]              havoc success_s220;
[L2035]              havoc _spender_s258;
[L2036]              havoc _value_s258;
[L2037]              havoc _extraData_s258;
[L2038]              havoc success_s258;
[L2039]              havoc _value_s294;
[L2040]              havoc success_s294;
[L2041]              havoc _from_s349;
[L2042]              havoc _value_s349;
[L2043]              havoc success_s349;
[L2044]              havoc tmpNow;
[L2045]              havoc gas;
[L2046]              assume gas > 4000000 && gas <= 8000000;
[L2047]              tmpNow := now;
[L2048]              havoc now;
[L2049]              assume now > tmpNow;
[L2050]              assume msgsender_MSG != null;
[L2051]              assume DType[msgsender_MSG] != tokenRecipient;
[L2052]              assume DType[msgsender_MSG] != JUSToken;
[L2053]              Alloc[msgsender_MSG] := true;
[L2054]  COND FALSE  !(choice == 12)
[L2060]  COND FALSE  !(choice == 11)
[L2066]  COND FALSE  !(choice == 10)
[L2072]  COND FALSE  !(choice == 9)
[L2078]  COND FALSE  !(choice == 8)
[L2084]  COND FALSE  !(choice == 7)
[L2090]  COND FALSE  !(choice == 6)
[L2097]  COND FALSE  !(choice == 5)
[L2104]  COND TRUE   choice == 4
[L2105]              gas := gas - 21000;
[L2106]  COND TRUE   gas >= 0
[L2107]              assume _value_s220 >= 0 && _value_s220 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2108]              assume msgvalue_MSG == 0;
[L2109]  CALL        call success_s220 := approve~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _spender_s220, _value_s220);
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L324]   CALL        call success_s220 := approve~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s220, _value_s220);
[L1282]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_JUSToken[this][msgsender_MSG][_spender_s220];
[L1283]              allowance_JUSToken[this][msgsender_MSG][_spender_s220] := _value_s220;
[L1284]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_JUSToken[this][msgsender_MSG][_spender_s220];
[L1285]              success_s220 := true;
[L324]   RET         call success_s220 := approve~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s220, _value_s220);
[L325]               assume !revert && gas >= 0;
[L2109]  RET         call success_s220 := approve~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _spender_s220, _value_s220);
[L2150]  RET         call CorralChoice_JUSToken(this);
[L2150]  CALL        call CorralChoice_JUSToken(this);
[L2014]              havoc msgsender_MSG;
[L2015]              havoc msgvalue_MSG;
[L2016]              havoc choice;
[L2017]              havoc __ret_0_name;
[L2018]              havoc __ret_0_symbol;
[L2019]              havoc __ret_0_decimals;
[L2020]              havoc __ret_0_totalSupply;
[L2021]              havoc arg352_s0;
[L2022]              havoc __ret_0_balanceOf;
[L2023]              havoc arg353_s0;
[L2024]              havoc arg354_s0;
[L2025]              havoc __ret_0_allowance;
[L2026]              havoc _to_s159;
[L2027]              havoc _value_s159;
[L2028]              havoc _from_s199;
[L2029]              havoc _to_s199;
[L2030]              havoc _value_s199;
[L2031]              havoc success_s199;
[L2032]              havoc _spender_s220;
[L2033]              havoc _value_s220;
[L2034]              havoc success_s220;
[L2035]              havoc _spender_s258;
[L2036]              havoc _value_s258;
[L2037]              havoc _extraData_s258;
[L2038]              havoc success_s258;
[L2039]              havoc _value_s294;
[L2040]              havoc success_s294;
[L2041]              havoc _from_s349;
[L2042]              havoc _value_s349;
[L2043]              havoc success_s349;
[L2044]              havoc tmpNow;
[L2045]              havoc gas;
[L2046]              assume gas > 4000000 && gas <= 8000000;
[L2047]              tmpNow := now;
[L2048]              havoc now;
[L2049]              assume now > tmpNow;
[L2050]              assume msgsender_MSG != null;
[L2051]              assume DType[msgsender_MSG] != tokenRecipient;
[L2052]              assume DType[msgsender_MSG] != JUSToken;
[L2053]              Alloc[msgsender_MSG] := true;
[L2054]  COND FALSE  !(choice == 12)
[L2060]  COND FALSE  !(choice == 11)
[L2066]  COND FALSE  !(choice == 10)
[L2072]  COND FALSE  !(choice == 9)
[L2078]  COND FALSE  !(choice == 8)
[L2084]  COND FALSE  !(choice == 7)
[L2090]  COND FALSE  !(choice == 6)
[L2097]  COND TRUE   choice == 5
[L2098]              gas := gas - 21000;
[L2099]  COND TRUE   gas >= 0
[L2100]              assume _value_s199 >= 0 && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2101]              assume msgvalue_MSG == 0;
[L2102]  CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s199 != _to_s199 && ((_value_s199 > balanceOf_JUSToken[this][_from_s199] || _value_s199 > allowance_JUSToken[this][_from_s199][msgsender_MSG]) || balanceOf_JUSToken[this][_to_s199] + _value_s199 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s199 >= 0) && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_to_s199] >= 0) && balanceOf_JUSToken[this][_to_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_from_s199] >= 0) && balanceOf_JUSToken[this][_from_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_JUSToken[this][_from_s199][msgsender_MSG] >= 0) && allowance_JUSToken[this][_from_s199][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_JUSToken0 := true;
[L2]                 call_transferFrom_JUSToken0 := false;
[L2]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1256]  COND FALSE  !(!(_value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG]))
[L1260]              sum_allowance1[_from_s199] := sum_allowance1[_from_s199] - allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1261]              allowance_JUSToken[this][_from_s199][msgsender_MSG] := (allowance_JUSToken[this][_from_s199][msgsender_MSG] - _value_s199) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1262]              sum_allowance1[_from_s199] := sum_allowance1[_from_s199] + allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1263]  CALL        call _transfer~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1197]              __var_1 := null;
[L1198]  COND FALSE  !(!(_to_s144 != null))
[L1202]  COND FALSE  !(!(balanceOf_JUSToken[this][_from_s144] >= _value_s144))
[L1206]  COND FALSE  !(!((balanceOf_JUSToken[this][_to_s144] + _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_JUSToken[this][_to_s144]))
[L1210]              previousBalances_s144 := (balanceOf_JUSToken[this][_from_s144] + balanceOf_JUSToken[this][_to_s144]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1211]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][_from_s144];
[L1212]              balanceOf_JUSToken[this][_from_s144] := (balanceOf_JUSToken[this][_from_s144] - _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1213]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][_from_s144];
[L1214]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][_to_s144];
[L1215]              balanceOf_JUSToken[this][_to_s144] := (balanceOf_JUSToken[this][_to_s144] + _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1216]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][_to_s144];
[L1217]              assert { :EventEmitted "Transfer_JUSToken" } true;
[L1218]              assert (balanceOf_JUSToken[this][_from_s144] + balanceOf_JUSToken[this][_to_s144]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s144;
[L1263]  RET         call _transfer~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1264]  COND FALSE  !(revert)
[L1267]              success_s199 := true;
[L272]   RET         call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L273]               assume !revert && gas >= 0;
[L2102]  RET         call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2150]  RET         call CorralChoice_JUSToken(this);

Loop:
[L2150]  CALL        call CorralChoice_JUSToken(this);
[L2014]              havoc msgsender_MSG;
[L2015]              havoc msgvalue_MSG;
[L2016]              havoc choice;
[L2017]              havoc __ret_0_name;
[L2018]              havoc __ret_0_symbol;
[L2019]              havoc __ret_0_decimals;
[L2020]              havoc __ret_0_totalSupply;
[L2021]              havoc arg352_s0;
[L2022]              havoc __ret_0_balanceOf;
[L2023]              havoc arg353_s0;
[L2024]              havoc arg354_s0;
[L2025]              havoc __ret_0_allowance;
[L2026]              havoc _to_s159;
[L2027]              havoc _value_s159;
[L2028]              havoc _from_s199;
[L2029]              havoc _to_s199;
[L2030]              havoc _value_s199;
[L2031]              havoc success_s199;
[L2032]              havoc _spender_s220;
[L2033]              havoc _value_s220;
[L2034]              havoc success_s220;
[L2035]              havoc _spender_s258;
[L2036]              havoc _value_s258;
[L2037]              havoc _extraData_s258;
[L2038]              havoc success_s258;
[L2039]              havoc _value_s294;
[L2040]              havoc success_s294;
[L2041]              havoc _from_s349;
[L2042]              havoc _value_s349;
[L2043]              havoc success_s349;
[L2044]              havoc tmpNow;
[L2045]              havoc gas;
[L2046]              assume gas > 4000000 && gas <= 8000000;
[L2047]              tmpNow := now;
[L2048]              havoc now;
[L2049]              assume now > tmpNow;
[L2050]              assume msgsender_MSG != null;
[L2051]              assume DType[msgsender_MSG] != tokenRecipient;
[L2052]              assume DType[msgsender_MSG] != JUSToken;
[L2053]              Alloc[msgsender_MSG] := true;
[L2054]  COND TRUE   choice == 12
[L2055]              gas := gas - 21000;
[L2056]  COND FALSE  !(gas >= 0)
[L2150]  RET         call CorralChoice_JUSToken(this);

[2020-11-24 20:02:00,445 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:02:00,445 INFO  L82        PathProgramCache]: Analyzing trace with hash 1484183231, now seen corresponding path program 1 times
[2020-11-24 20:02:00,445 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:02:00,456 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:02:00,613 INFO  L134       CoverageAnalysis]: Checked inductivity of 50 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 50 trivial. 0 not checked.
[2020-11-24 20:02:00,613 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:02:00,613 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [17] imperfect sequences [] total 17
[2020-11-24 20:02:00,613 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:02:00,613 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 18 interpolants.
[2020-11-24 20:02:00,614 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=43, Invalid=263, Unknown=0, NotChecked=0, Total=306
[2020-11-24 20:02:00,614 INFO  L87              Difference]: Start difference. First operand 1454 states and 1563 transitions. cyclomatic complexity: 112 Second operand 18 states.
[2020-11-24 20:02:02,148 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:02:02,148 INFO  L93              Difference]: Finished difference Result 1514 states and 1634 transitions.
[2020-11-24 20:02:02,148 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 18 states. 
[2020-11-24 20:02:02,148 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1514 states and 1634 transitions.
[2020-11-24 20:02:02,151 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:02:02,155 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1514 states to 1514 states and 1634 transitions.
[2020-11-24 20:02:02,155 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 686
[2020-11-24 20:02:02,155 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 686
[2020-11-24 20:02:02,155 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1514 states and 1634 transitions.
[2020-11-24 20:02:02,157 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:02:02,157 INFO  L728         BuchiCegarLoop]: Abstraction has 1514 states and 1634 transitions.
[2020-11-24 20:02:02,158 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1514 states and 1634 transitions.
[2020-11-24 20:02:02,167 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1514 to 1468.
[2020-11-24 20:02:02,167 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1468 states.
[2020-11-24 20:02:02,169 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1468 states to 1468 states and 1587 transitions.
[2020-11-24 20:02:02,169 INFO  L751         BuchiCegarLoop]: Abstraction has 1468 states and 1587 transitions.
[2020-11-24 20:02:02,169 INFO  L631         BuchiCegarLoop]: Abstraction has 1468 states and 1587 transitions.
[2020-11-24 20:02:02,169 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 20:02:02,169 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1468 states and 1587 transitions.
[2020-11-24 20:02:02,171 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:02:02,171 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:02:02,171 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:02:02,173 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:02:02,173 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_JUSToken0 := false;
[L2]                 call_transferFrom_JUSToken0 := false;
[L2]     CALL        call main();
[L2140]              assume null == 0;
[L2141]  CALL        call this := FreshRefGenerator__success();
[L1075]              havoc newRef;
[L1076]              assume Alloc[newRef] == false;
[L1077]              Alloc[newRef] := true;
[L1078]              assume newRef != null;
[L2141]  RET         call this := FreshRefGenerator__success();
[L2142]              assume now >= 0;
[L2143]              assume DType[this] == JUSToken;
[L2144]              assume msgvalue_MSG == 0;
[L2145]              gas := gas - 53000;
[L2146]  CALL        call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1161]  CALL        call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1135]              assume msgsender_MSG != null;
[L1136]              Balance[this] := 0;
[L1137]              name_JUSToken[this] := 34996628;
[L1138]              symbol_JUSToken[this] := -1545090883;
[L1139]              decimals_JUSToken[this] := 18;
[L1140]              totalSupply_JUSToken[this] := nonlinearMul(40000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_JUSToken[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1141]              balanceOf_JUSToken[this] := zeroRefintArr();
[L1142]              sum_balanceOf0[this] := 0;
[L1143]              allowance_JUSToken[this] := zeroRefRefintArr();
[L1144]              sum_allowance1[this] := 0;
[L1146]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][msgsender_MSG];
[L1147]              balanceOf_JUSToken[this][msgsender_MSG] := totalSupply_JUSToken[this];
[L1148]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][msgsender_MSG];
[L1161]  RET         call JUSToken_JUSToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1162]  COND FALSE  !(revert)
[L162]   RET         call JUSToken_JUSToken__success(this, msgsender_MSG, msgvalue_MSG);
[L163]               assume !revert && gas >= 0;
[L2146]  RET         call JUSToken_JUSToken(this, msgsender_MSG, msgvalue_MSG);
[L2147]              assume !revert && gas >= 0;
[L2150]  CALL        call CorralChoice_JUSToken(this);
[L2014]              havoc msgsender_MSG;
[L2015]              havoc msgvalue_MSG;
[L2016]              havoc choice;
[L2017]              havoc __ret_0_name;
[L2018]              havoc __ret_0_symbol;
[L2019]              havoc __ret_0_decimals;
[L2020]              havoc __ret_0_totalSupply;
[L2021]              havoc arg352_s0;
[L2022]              havoc __ret_0_balanceOf;
[L2023]              havoc arg353_s0;
[L2024]              havoc arg354_s0;
[L2025]              havoc __ret_0_allowance;
[L2026]              havoc _to_s159;
[L2027]              havoc _value_s159;
[L2028]              havoc _from_s199;
[L2029]              havoc _to_s199;
[L2030]              havoc _value_s199;
[L2031]              havoc success_s199;
[L2032]              havoc _spender_s220;
[L2033]              havoc _value_s220;
[L2034]              havoc success_s220;
[L2035]              havoc _spender_s258;
[L2036]              havoc _value_s258;
[L2037]              havoc _extraData_s258;
[L2038]              havoc success_s258;
[L2039]              havoc _value_s294;
[L2040]              havoc success_s294;
[L2041]              havoc _from_s349;
[L2042]              havoc _value_s349;
[L2043]              havoc success_s349;
[L2044]              havoc tmpNow;
[L2045]              havoc gas;
[L2046]              assume gas > 4000000 && gas <= 8000000;
[L2047]              tmpNow := now;
[L2048]              havoc now;
[L2049]              assume now > tmpNow;
[L2050]              assume msgsender_MSG != null;
[L2051]              assume DType[msgsender_MSG] != tokenRecipient;
[L2052]              assume DType[msgsender_MSG] != JUSToken;
[L2053]              Alloc[msgsender_MSG] := true;
[L2054]  COND FALSE  !(choice == 12)
[L2060]  COND FALSE  !(choice == 11)
[L2066]  COND FALSE  !(choice == 10)
[L2072]  COND FALSE  !(choice == 9)
[L2078]  COND FALSE  !(choice == 8)
[L2084]  COND FALSE  !(choice == 7)
[L2090]  COND FALSE  !(choice == 6)
[L2097]  COND FALSE  !(choice == 5)
[L2104]  COND FALSE  !(choice == 4)
[L2111]  COND FALSE  !(choice == 3)
[L2118]  COND FALSE  !(choice == 2)
[L2125]  COND TRUE   choice == 1
[L2126]              gas := gas - 21000;
[L2127]  COND TRUE   gas >= 0
[L2128]              assume _value_s349 >= 0 && _value_s349 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2129]              assume msgvalue_MSG == 0;
[L2130]  CALL        call success_s349 := burnFrom~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s349, _value_s349);
[L461]               havoc __exception;
[L462]               revert := false;
[L463]   COND FALSE  !(__exception)
[L484]   CALL        call success_s349 := burnFrom~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s349, _value_s349);
[L1381]  COND FALSE  !(!(balanceOf_JUSToken[this][_from_s349] >= _value_s349))
[L1385]  COND FALSE  !(!(_value_s349 <= allowance_JUSToken[this][_from_s349][msgsender_MSG]))
[L1389]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][_from_s349];
[L1390]              balanceOf_JUSToken[this][_from_s349] := (balanceOf_JUSToken[this][_from_s349] - _value_s349) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1391]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][_from_s349];
[L1392]              sum_allowance1[_from_s349] := sum_allowance1[_from_s349] - allowance_JUSToken[this][_from_s349][msgsender_MSG];
[L1393]              allowance_JUSToken[this][_from_s349][msgsender_MSG] := (allowance_JUSToken[this][_from_s349][msgsender_MSG] - _value_s349) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1394]              sum_allowance1[_from_s349] := sum_allowance1[_from_s349] + allowance_JUSToken[this][_from_s349][msgsender_MSG];
[L1395]              totalSupply_JUSToken[this] := (totalSupply_JUSToken[this] - _value_s349) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1396]              assert { :EventEmitted "Burn_JUSToken" } true;
[L1397]              success_s349 := true;
[L484]   RET         call success_s349 := burnFrom~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s349, _value_s349);
[L485]               assume !revert && gas >= 0;
[L2130]  RET         call success_s349 := burnFrom~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s349, _value_s349);
[L2150]  RET         call CorralChoice_JUSToken(this);
[L2150]  CALL        call CorralChoice_JUSToken(this);
[L2014]              havoc msgsender_MSG;
[L2015]              havoc msgvalue_MSG;
[L2016]              havoc choice;
[L2017]              havoc __ret_0_name;
[L2018]              havoc __ret_0_symbol;
[L2019]              havoc __ret_0_decimals;
[L2020]              havoc __ret_0_totalSupply;
[L2021]              havoc arg352_s0;
[L2022]              havoc __ret_0_balanceOf;
[L2023]              havoc arg353_s0;
[L2024]              havoc arg354_s0;
[L2025]              havoc __ret_0_allowance;
[L2026]              havoc _to_s159;
[L2027]              havoc _value_s159;
[L2028]              havoc _from_s199;
[L2029]              havoc _to_s199;
[L2030]              havoc _value_s199;
[L2031]              havoc success_s199;
[L2032]              havoc _spender_s220;
[L2033]              havoc _value_s220;
[L2034]              havoc success_s220;
[L2035]              havoc _spender_s258;
[L2036]              havoc _value_s258;
[L2037]              havoc _extraData_s258;
[L2038]              havoc success_s258;
[L2039]              havoc _value_s294;
[L2040]              havoc success_s294;
[L2041]              havoc _from_s349;
[L2042]              havoc _value_s349;
[L2043]              havoc success_s349;
[L2044]              havoc tmpNow;
[L2045]              havoc gas;
[L2046]              assume gas > 4000000 && gas <= 8000000;
[L2047]              tmpNow := now;
[L2048]              havoc now;
[L2049]              assume now > tmpNow;
[L2050]              assume msgsender_MSG != null;
[L2051]              assume DType[msgsender_MSG] != tokenRecipient;
[L2052]              assume DType[msgsender_MSG] != JUSToken;
[L2053]              Alloc[msgsender_MSG] := true;
[L2054]  COND FALSE  !(choice == 12)
[L2060]  COND FALSE  !(choice == 11)
[L2066]  COND FALSE  !(choice == 10)
[L2072]  COND FALSE  !(choice == 9)
[L2078]  COND FALSE  !(choice == 8)
[L2084]  COND FALSE  !(choice == 7)
[L2090]  COND FALSE  !(choice == 6)
[L2097]  COND TRUE   choice == 5
[L2098]              gas := gas - 21000;
[L2099]  COND TRUE   gas >= 0
[L2100]              assume _value_s199 >= 0 && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2101]              assume msgvalue_MSG == 0;
[L2102]  CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s199 != _to_s199 && ((_value_s199 > balanceOf_JUSToken[this][_from_s199] || _value_s199 > allowance_JUSToken[this][_from_s199][msgsender_MSG]) || balanceOf_JUSToken[this][_to_s199] + _value_s199 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s199 >= 0) && _value_s199 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_to_s199] >= 0) && balanceOf_JUSToken[this][_to_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_JUSToken[this][_from_s199] >= 0) && balanceOf_JUSToken[this][_from_s199] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_JUSToken[this][_from_s199][msgsender_MSG] >= 0) && allowance_JUSToken[this][_from_s199][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_JUSToken0 := true;
[L2]                 call_transferFrom_JUSToken0 := false;
[L2]                 revert := revert_hold;
[L249]               havoc __exception;
[L250]               revert := false;
[L251]   COND FALSE  !(__exception)
[L272]   CALL        call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1256]  COND FALSE  !(!(_value_s199 <= allowance_JUSToken[this][_from_s199][msgsender_MSG]))
[L1260]              sum_allowance1[_from_s199] := sum_allowance1[_from_s199] - allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1261]              allowance_JUSToken[this][_from_s199][msgsender_MSG] := (allowance_JUSToken[this][_from_s199][msgsender_MSG] - _value_s199) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1262]              sum_allowance1[_from_s199] := sum_allowance1[_from_s199] + allowance_JUSToken[this][_from_s199][msgsender_MSG];
[L1263]  CALL        call _transfer~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1197]              __var_1 := null;
[L1198]  COND FALSE  !(!(_to_s144 != null))
[L1202]  COND FALSE  !(!(balanceOf_JUSToken[this][_from_s144] >= _value_s144))
[L1206]  COND FALSE  !(!((balanceOf_JUSToken[this][_to_s144] + _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_JUSToken[this][_to_s144]))
[L1210]              previousBalances_s144 := (balanceOf_JUSToken[this][_from_s144] + balanceOf_JUSToken[this][_to_s144]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1211]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][_from_s144];
[L1212]              balanceOf_JUSToken[this][_from_s144] := (balanceOf_JUSToken[this][_from_s144] - _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1213]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][_from_s144];
[L1214]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_JUSToken[this][_to_s144];
[L1215]              balanceOf_JUSToken[this][_to_s144] := (balanceOf_JUSToken[this][_to_s144] + _value_s144) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1216]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_JUSToken[this][_to_s144];
[L1217]              assert { :EventEmitted "Transfer_JUSToken" } true;
[L1218]              assert (balanceOf_JUSToken[this][_from_s144] + balanceOf_JUSToken[this][_to_s144]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s144;
[L1263]  RET         call _transfer~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L1264]  COND FALSE  !(revert)
[L1267]              success_s199 := true;
[L272]   RET         call success_s199 := transferFrom~address~address~uint256_JUSToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L273]               assume !revert && gas >= 0;
[L2102]  RET         call success_s199 := transferFrom~address~address~uint256_JUSToken(this, msgsender_MSG, msgvalue_MSG, _from_s199, _to_s199, _value_s199);
[L2150]  RET         call CorralChoice_JUSToken(this);

Loop:
[L2150]  CALL        call CorralChoice_JUSToken(this);
[L2014]              havoc msgsender_MSG;
[L2015]              havoc msgvalue_MSG;
[L2016]              havoc choice;
[L2017]              havoc __ret_0_name;
[L2018]              havoc __ret_0_symbol;
[L2019]              havoc __ret_0_decimals;
[L2020]              havoc __ret_0_totalSupply;
[L2021]              havoc arg352_s0;
[L2022]              havoc __ret_0_balanceOf;
[L2023]              havoc arg353_s0;
[L2024]              havoc arg354_s0;
[L2025]              havoc __ret_0_allowance;
[L2026]              havoc _to_s159;
[L2027]              havoc _value_s159;
[L2028]              havoc _from_s199;
[L2029]              havoc _to_s199;
[L2030]              havoc _value_s199;
[L2031]              havoc success_s199;
[L2032]              havoc _spender_s220;
[L2033]              havoc _value_s220;
[L2034]              havoc success_s220;
[L2035]              havoc _spender_s258;
[L2036]              havoc _value_s258;
[L2037]              havoc _extraData_s258;
[L2038]              havoc success_s258;
[L2039]              havoc _value_s294;
[L2040]              havoc success_s294;
[L2041]              havoc _from_s349;
[L2042]              havoc _value_s349;
[L2043]              havoc success_s349;
[L2044]              havoc tmpNow;
[L2045]              havoc gas;
[L2046]              assume gas > 4000000 && gas <= 8000000;
[L2047]              tmpNow := now;
[L2048]              havoc now;
[L2049]              assume now > tmpNow;
[L2050]              assume msgsender_MSG != null;
[L2051]              assume DType[msgsender_MSG] != tokenRecipient;
[L2052]              assume DType[msgsender_MSG] != JUSToken;
[L2053]              Alloc[msgsender_MSG] := true;
[L2054]  COND TRUE   choice == 12
[L2055]              gas := gas - 21000;
[L2056]  COND FALSE  !(gas >= 0)
[L2150]  RET         call CorralChoice_JUSToken(this);

[2020-11-24 20:02:02,175 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:02:02,175 INFO  L82        PathProgramCache]: Analyzing trace with hash -1786190609, now seen corresponding path program 1 times
[2020-11-24 20:02:02,176 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:02:02,187 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:02:02,255 INFO  L134       CoverageAnalysis]: Checked inductivity of 50 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 50 trivial. 0 not checked.
[2020-11-24 20:02:02,255 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:02:02,255 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-24 20:02:02,255 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:02:02,256 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 11 interpolants.
[2020-11-24 20:02:02,256 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=27, Invalid=83, Unknown=0, NotChecked=0, Total=110
[2020-11-24 20:02:02,256 INFO  L87              Difference]: Start difference. First operand 1468 states and 1587 transitions. cyclomatic complexity: 124 Second operand 11 states.
[2020-11-24 20:02:02,753 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:02:02,753 INFO  L93              Difference]: Finished difference Result 854 states and 922 transitions.
[2020-11-24 20:02:02,753 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 11 states. 
[2020-11-24 20:02:02,754 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 854 states and 922 transitions.
[2020-11-24 20:02:02,755 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 20:02:02,755 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 854 states to 0 states and 0 transitions.
[2020-11-24 20:02:02,755 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 20:02:02,756 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 20:02:02,756 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 20:02:02,756 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:02:02,756 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:02:02,756 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:02:02,756 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:02:02,756 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 20:02:02,756 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 20:02:02,756 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 20:02:02,756 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 20:02:02,759 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:02:02 BasicIcfg
[2020-11-24 20:02:02,759 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 20:02:02,759 INFO  L168              Benchmark]: Toolchain (without parser) took 6251.41 ms. Allocated memory was 1.0 GB in the beginning and 1.5 GB in the end (delta: 473.4 MB). Free memory was 940.6 MB in the beginning and 1.3 GB in the end (delta: -311.6 MB). Peak memory consumption was 161.8 MB. Max. memory is 15.3 GB.
[2020-11-24 20:02:02,760 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:02:02,761 INFO  L168              Benchmark]: Boogie Preprocessor took 100.09 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:02:02,761 INFO  L168              Benchmark]: UtopiaSpecLang took 51.46 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:02:02,761 INFO  L168              Benchmark]: Boogie Printer took 10.50 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:02:02,761 INFO  L168              Benchmark]: RCFGBuilder took 605.15 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.8 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
[2020-11-24 20:02:02,762 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.74 ms. Allocated memory is still 1.0 GB. Free memory was 870.8 MB in the beginning and 867.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 20:02:02,762 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1053.29 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.5 MB). Free memory was 867.2 MB in the beginning and 878.7 MB in the end (delta: -11.5 MB). Peak memory consumption was 151.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:02:02,762 INFO  L168              Benchmark]: BlockEncodingV2 took 65.45 ms. Allocated memory is still 1.1 GB. Free memory was 878.7 MB in the beginning and 845.5 MB in the end (delta: 33.2 MB). Peak memory consumption was 33.2 MB. Max. memory is 15.3 GB.
[2020-11-24 20:02:02,763 INFO  L168              Benchmark]: BuchiAutomizer took 4321.86 ms. Allocated memory was 1.1 GB in the beginning and 1.5 GB in the end (delta: 418.9 MB). Free memory was 845.5 MB in the beginning and 1.3 GB in the end (delta: -406.7 MB). Peak memory consumption was 12.2 MB. Max. memory is 15.3 GB.
[2020-11-24 20:02:02,766 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1864 locations, 3122 edges
  - StatisticsResult: Encoded RCFG
    1827 locations, 3041 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 100.09 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 51.46 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.50 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 605.15 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.8 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.74 ms. Allocated memory is still 1.0 GB. Free memory was 870.8 MB in the beginning and 867.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1053.29 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.5 MB). Free memory was 867.2 MB in the beginning and 878.7 MB in the end (delta: -11.5 MB). Peak memory consumption was 151.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 65.45 ms. Allocated memory is still 1.1 GB. Free memory was 878.7 MB in the beginning and 845.5 MB in the end (delta: 33.2 MB). Peak memory consumption was 33.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 4321.86 ms. Allocated memory was 1.1 GB in the beginning and 1.5 GB in the end (delta: 418.9 MB). Free memory was 845.5 MB in the beginning and 1.3 GB in the end (delta: -406.7 MB). Peak memory consumption was 12.2 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    799 locations, 970 edges
  - StatisticsResult: BuchiProgram size
    1864 locations, 3122 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 18 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 4.2s and 7 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.5s. Construction of modules took 2.4s. BÃ¼chi inclusion checks took 0.9s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 924 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1552 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 8832 SDtfs, 8044 SDslu, 18495 SDs, 0 SdLazy, 27787 SolverSat, 1319 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.4s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_JUSToken0) ==> ( <>(fail_transferFrom_JUSToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
