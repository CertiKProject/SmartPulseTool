This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 18:03:51,582 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 18:03:51,583 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 18:03:51,594 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 18:03:51,594 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 18:03:51,595 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 18:03:51,596 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 18:03:51,597 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 18:03:51,598 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 18:03:51,599 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 18:03:51,600 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 18:03:51,600 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 18:03:51,601 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 18:03:51,601 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 18:03:51,602 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 18:03:51,603 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 18:03:51,603 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 18:03:51,604 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 18:03:51,606 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 18:03:51,607 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 18:03:51,608 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 18:03:51,608 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 18:03:51,610 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 18:03:51,610 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 18:03:51,610 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 18:03:51,611 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 18:03:51,611 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 18:03:51,612 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 18:03:51,612 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 18:03:51,612 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 18:03:51,613 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 18:03:51,613 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 18:03:51,614 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 18:03:51,614 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 18:03:51,615 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 18:03:51,615 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 18:03:51,615 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 18:03:51,616 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 18:03:51,616 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 18:03:51,616 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 18:03:51,617 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 18:03:51,617 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 18:03:51,625 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 18:03:51,625 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 18:03:51,626 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 18:03:51,626 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 18:03:51,626 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 18:03:51,626 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 18:03:51,626 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 18:03:51,626 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 18:03:51,626 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 18:03:51,626 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 18:03:51,627 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 18:03:51,627 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 18:03:51,627 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 18:03:51,627 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 18:03:51,627 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 18:03:51,627 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 18:03:51,627 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 18:03:51,627 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 18:03:51,627 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 18:03:51,627 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 18:03:51,628 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 18:03:51,628 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 18:03:51,628 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 18:03:51,628 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 18:03:51,628 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 18:03:51,628 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 18:03:51,649 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 18:03:51,660 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 18:03:51,662 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 18:03:51,663 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 18:03:51,664 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 18:03:51,664 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl
[2020-11-25 18:03:51,665 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl'
[2020-11-25 18:03:51,749 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 18:03:51,750 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 18:03:51,751 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 18:03:51,751 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 18:03:51,751 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 18:03:51,767 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:03:51" (1/1) ...
[2020-11-25 18:03:51,769 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:03:51" (1/1) ...
[2020-11-25 18:03:51,806 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:03:51" (1/1) ...
[2020-11-25 18:03:51,808 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:03:51" (1/1) ...
[2020-11-25 18:03:51,828 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:03:51" (1/1) ...
[2020-11-25 18:03:51,838 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:03:51" (1/1) ...
[2020-11-25 18:03:51,845 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:03:51" (1/1) ...
[2020-11-25 18:03:51,854 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 18:03:51,855 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 18:03:51,855 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 18:03:51,857 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 18:03:51,861 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:03:51" (1/1) ...
[2020-11-25 18:03:51,880 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(HY.transferFrom(from, to, value), from == to && (value > balances_HY[this][from] || value > allowed_HY[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_HY[this][to] >= 0 && balances_HY[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_HY[this][from] >= 0 &&  balances_HY[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_HY[this][from][msg.sender] >= 0 && allowed_HY[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(HY.transferFrom)))
[2020-11-25 18:03:51,886 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(HY.transferFrom(from, to, value), from == to && (value > balances_HY[this][from] || value > allowed_HY[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_HY[this][to] >= 0 && balances_HY[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_HY[this][from] >= 0 &&  balances_HY[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_HY[this][from][msg.sender] >= 0 && allowed_HY[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(HY.transferFrom)))
[2020-11-25 18:03:51,893 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(HY.transferFrom(from, to, value), from == to && (value > balances_HY[this][from] || value > allowed_HY[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_HY[this][to] >= 0 && balances_HY[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_HY[this][from] >= 0 &&  balances_HY[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_HY[this][from][msg.sender] >= 0 && allowed_HY[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(HY.transferFrom)))
[2020-11-25 18:03:51,902 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( from_s458==to_s458 && ( tokens_s458>balances_HY[this][from_s458] || tokens_s458>allowed_HY[this][from_s458][msg.sender] ) ) && tokens_s458>=0 ) && tokens_s458<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_HY[this][to_s458]>=0 ) && balances_HY[this][to_s458]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_HY[this][from_s458]>=0 ) && balances_HY[this][from_s458]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_HY[this][from_s458][msg.sender]>=0 ) && allowed_HY[this][from_s458][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>],IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[tokens_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_HY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]]],BinaryExpression[COMPGT,IdentifierExpression[tokens_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_HY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_HY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]],[IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_HY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]],[IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_HY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_HY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_HY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_HY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]],[IdentifierExpression[from_s458,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HY>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 18:03:51,906 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(HY.transferFrom(from, to, value), from == to && (value > balances_HY[this][from] || value > allowed_HY[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_HY[this][to] >= 0 && balances_HY[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_HY[this][from] >= 0 &&  balances_HY[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_HY[this][from][msg.sender] >= 0 && allowed_HY[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(HY.transferFrom)))
[2020-11-25 18:03:51,907 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_HY0) ==> ( <>AP(fail_transferFrom_HY0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 18:03:51,916 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:03:51 PropertyContainer
[2020-11-25 18:03:51,916 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 18:03:51,916 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 18:03:51,916 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 18:03:51,916 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 18:03:51,917 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:03:51" (1/2) ...
[2020-11-25 18:03:51,917 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 18:03:51,917 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 18:03:51,932 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:03:51" (2/2) ...
[2020-11-25 18:03:51,932 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 18:03:51,932 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 18:03:51,932 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 18:03:51,932 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 18:03:51,933 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:03:51" (1/2) ...
[2020-11-25 18:03:51,985 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 18:03:51,986 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 18:03:51,986 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 18:03:51,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 18:03:51,986 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 18:03:51,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 18:03:51,986 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 18:03:51,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 18:03:51,986 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 18:03:51,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 18:03:51,986 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 18:03:51,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 18:03:51,987 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 18:03:51,987 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 18:03:51,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 18:03:51,987 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 18:03:51,988 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 18:03:51,988 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 18:03:51,988 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 18:03:51,988 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 18:03:51,988 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 18:03:51,989 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 18:03:51,989 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 18:03:51,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 18:03:51,989 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 18:03:51,989 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 18:03:51,989 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 18:03:51,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 18:03:51,989 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 18:03:51,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 18:03:51,989 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 18:03:51,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 18:03:51,989 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 18:03:51,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 18:03:51,990 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 18:03:51,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 18:03:51,990 INFO  L130     BoogieDeclarations]: Found specification of procedure HY_HY_NoBaseCtor__success
[2020-11-25 18:03:51,990 INFO  L130     BoogieDeclarations]: Found specification of procedure HY_HY
[2020-11-25 18:03:51,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure HY_HY
[2020-11-25 18:03:51,990 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_HY
[2020-11-25 18:03:51,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_HY
[2020-11-25 18:03:51,990 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_HY
[2020-11-25 18:03:51,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_HY
[2020-11-25 18:03:51,990 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_HY
[2020-11-25 18:03:51,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_HY
[2020-11-25 18:03:51,990 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_HY
[2020-11-25 18:03:51,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_HY
[2020-11-25 18:03:51,991 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_HY
[2020-11-25 18:03:51,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_HY
[2020-11-25 18:03:51,991 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_HY
[2020-11-25 18:03:51,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_HY
[2020-11-25 18:03:51,991 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_HY
[2020-11-25 18:03:51,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_HY
[2020-11-25 18:03:51,991 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_HY__success
[2020-11-25 18:03:51,991 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_HY
[2020-11-25 18:03:51,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_HY
[2020-11-25 18:03:51,991 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_HY
[2020-11-25 18:03:51,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_HY
[2020-11-25 18:03:51,991 INFO  L130     BoogieDeclarations]: Found specification of procedure name_HY
[2020-11-25 18:03:51,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_HY
[2020-11-25 18:03:51,992 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_HY
[2020-11-25 18:03:51,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_HY
[2020-11-25 18:03:51,992 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_HY
[2020-11-25 18:03:51,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_HY
[2020-11-25 18:03:51,992 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 18:03:51,992 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 18:03:51,992 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 18:03:51,992 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 18:03:51,992 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 18:03:51,992 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 18:03:51,992 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 18:03:51,993 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 18:03:51,993 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 18:03:51,993 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 18:03:51,993 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 18:03:51,993 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 18:03:51,993 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_HY
[2020-11-25 18:03:51,993 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 18:03:51,993 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 18:03:51,993 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 18:03:51,993 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 18:03:51,994 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 18:03:51,994 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 18:03:51,994 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 18:03:51,994 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 18:03:51,994 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 18:03:51,994 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 18:03:51,994 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 18:03:51,994 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 18:03:51,995 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 18:03:51,995 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 18:03:51,995 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 18:03:51,995 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 18:03:51,995 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 18:03:51,995 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 18:03:51,995 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 18:03:51,995 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 18:03:51,995 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 18:03:51,995 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 18:03:51,996 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 18:03:51,996 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 18:03:51,996 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 18:03:51,996 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 18:03:51,996 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 18:03:51,996 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 18:03:51,996 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 18:03:51,996 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 18:03:51,996 INFO  L130     BoogieDeclarations]: Found specification of procedure HY_HY_NoBaseCtor__fail
[2020-11-25 18:03:51,996 INFO  L130     BoogieDeclarations]: Found specification of procedure HY_HY__success
[2020-11-25 18:03:51,997 INFO  L130     BoogieDeclarations]: Found specification of procedure HY_HY__fail
[2020-11-25 18:03:51,997 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_HY__success
[2020-11-25 18:03:51,997 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_HY__fail
[2020-11-25 18:03:51,997 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_HY__success
[2020-11-25 18:03:51,997 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_HY__fail
[2020-11-25 18:03:51,997 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_HY__success
[2020-11-25 18:03:51,997 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_HY__fail
[2020-11-25 18:03:51,997 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_HY__success
[2020-11-25 18:03:51,997 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_HY__fail
[2020-11-25 18:03:51,998 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_HY__success
[2020-11-25 18:03:51,998 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_HY__fail
[2020-11-25 18:03:51,998 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_HY__success
[2020-11-25 18:03:51,998 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_HY__fail
[2020-11-25 18:03:51,998 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_HY__success
[2020-11-25 18:03:51,998 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_HY__fail
[2020-11-25 18:03:51,998 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_HY__fail
[2020-11-25 18:03:51,998 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_HY__success
[2020-11-25 18:03:51,998 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_HY__fail
[2020-11-25 18:03:51,998 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_HY__success
[2020-11-25 18:03:51,999 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_HY__fail
[2020-11-25 18:03:51,999 INFO  L130     BoogieDeclarations]: Found specification of procedure name_HY__success
[2020-11-25 18:03:51,999 INFO  L130     BoogieDeclarations]: Found specification of procedure name_HY__fail
[2020-11-25 18:03:51,999 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_HY__success
[2020-11-25 18:03:51,999 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_HY__fail
[2020-11-25 18:03:51,999 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_HY__success
[2020-11-25 18:03:51,999 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_HY__fail
[2020-11-25 18:03:51,999 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 18:03:51,999 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 18:03:52,000 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 18:03:52,000 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 18:03:52,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 18:03:52,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 18:03:52,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 18:03:52,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 18:03:52,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 18:03:52,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 18:03:52,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 18:03:52,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 18:03:52,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 18:03:52,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 18:03:52,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 18:03:52,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 18:03:52,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 18:03:52,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 18:03:52,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 18:03:52,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 18:03:52,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 18:03:52,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 18:03:52,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 18:03:52,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 18:03:52,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 18:03:52,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 18:03:52,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 18:03:52,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 18:03:52,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 18:03:52,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 18:03:52,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 18:03:52,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 18:03:52,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 18:03:52,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 18:03:52,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 18:03:52,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 18:03:52,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 18:03:52,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 18:03:52,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure HY_HY_NoBaseCtor__fail
[2020-11-25 18:03:52,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure HY_HY_NoBaseCtor__success
[2020-11-25 18:03:52,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure HY_HY__fail
[2020-11-25 18:03:52,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure HY_HY__success
[2020-11-25 18:03:52,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_HY__fail
[2020-11-25 18:03:52,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_HY__success
[2020-11-25 18:03:52,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_HY__fail
[2020-11-25 18:03:52,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_HY__success
[2020-11-25 18:03:52,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_HY__fail
[2020-11-25 18:03:52,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_HY__success
[2020-11-25 18:03:52,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_HY__fail
[2020-11-25 18:03:52,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_HY__success
[2020-11-25 18:03:52,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_HY__fail
[2020-11-25 18:03:52,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_HY__success
[2020-11-25 18:03:52,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_HY__fail
[2020-11-25 18:03:52,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_HY__success
[2020-11-25 18:03:52,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_HY__fail
[2020-11-25 18:03:52,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_HY__success
[2020-11-25 18:03:52,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_HY__fail
[2020-11-25 18:03:52,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_HY__success
[2020-11-25 18:03:52,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_HY__fail
[2020-11-25 18:03:52,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_HY__success
[2020-11-25 18:03:52,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_HY__fail
[2020-11-25 18:03:52,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_HY__success
[2020-11-25 18:03:52,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_HY__fail
[2020-11-25 18:03:52,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_HY__success
[2020-11-25 18:03:52,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_HY__fail
[2020-11-25 18:03:52,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_HY__success
[2020-11-25 18:03:52,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_HY__fail
[2020-11-25 18:03:52,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_HY__success
[2020-11-25 18:03:52,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 18:03:52,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 18:03:52,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 18:03:52,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 18:03:52,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 18:03:52,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 18:03:52,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 18:03:52,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 18:03:52,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 18:03:52,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 18:03:52,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 18:03:52,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 18:03:52,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 18:03:52,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 18:03:52,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 18:03:52,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 18:03:52,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_HY
[2020-11-25 18:03:52,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 18:03:52,010 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 18:03:52,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 18:03:52,484 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:03:52,484 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:03:52,689 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 18:03:52,689 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 18:03:52,691 INFO  L202        PluginConnector]: Adding new model HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:03:52 BoogieIcfgContainer
[2020-11-25 18:03:52,691 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:03:51" (2/2) ...
[2020-11-25 18:03:52,692 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 18:03:52,692 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@460d8fe0 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:03:52, skipping insertion in model container
[2020-11-25 18:03:52,692 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 18:03:52,692 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 18:03:52,692 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 18:03:52,694 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 18:03:52,694 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:03:51" (1/3) ...
[2020-11-25 18:03:52,694 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@409c683f and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:03:52, skipping insertion in model container
[2020-11-25 18:03:52,694 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:03:51" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 18:03:52,735 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:03:52 NWAContainer
[2020-11-25 18:03:52,736 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 18:03:52,736 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 18:03:52,736 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 18:03:52,737 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 18:03:52,737 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:03:52" (3/4) ...
[2020-11-25 18:03:52,738 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@434656a7 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:03:52, skipping insertion in model container
[2020-11-25 18:03:52,738 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:03:52" (4/4) ...
[2020-11-25 18:03:52,741 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 18:03:52,745 INFO  L110   BuchiProductObserver]: Initial RCFG 1562 locations, 1973 edges
[2020-11-25 18:03:52,745 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 18:03:52,756 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 18:03:54,091 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 18:03:54,096 INFO  L110   BuchiProductObserver]: BuchiProgram size 3716 locations, 6393 edges
[2020-11-25 18:03:54,097 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:03:54 BoogieIcfgContainer
[2020-11-25 18:03:54,097 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 18:03:54,097 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 18:03:54,097 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 18:03:54,099 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 18:03:54,099 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:03:54" (1/1) ...
[2020-11-25 18:03:54,181 INFO  L313           BlockEncoder]: Initial Icfg 3716 locations, 6393 edges
[2020-11-25 18:03:54,181 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 18:03:54,182 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 18:03:54,182 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 18:03:54,182 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 18:03:54,193 INFO  L70    emoveInfeasibleEdges]: Removed 90 edges and 13 locations because of local infeasibility
[2020-11-25 18:03:54,202 INFO  L70        RemoveSinkStates]: Removed 80 edges and 46 locations by removing sink states
[2020-11-25 18:03:54,211 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 18:03:54,215 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 18:03:54,218 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 18:03:54,219 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 18:03:54,223 INFO  L313           BlockEncoder]: Encoded RCFG 3635 locations, 6191 edges
[2020-11-25 18:03:54,224 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:03:54 BasicIcfg
[2020-11-25 18:03:54,224 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 18:03:54,224 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 18:03:54,224 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 18:03:54,226 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 18:03:54,227 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:03:54,227 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:03:51" (1/6) ...
[2020-11-25 18:03:54,228 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@65aff5b5 and model type HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:03:54, skipping insertion in model container
[2020-11-25 18:03:54,228 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:03:54,229 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:03:51" (2/6) ...
[2020-11-25 18:03:54,229 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@65aff5b5 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:03:54, skipping insertion in model container
[2020-11-25 18:03:54,229 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:03:54,229 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:03:52" (3/6) ...
[2020-11-25 18:03:54,229 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@65aff5b5 and model type HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:03:54, skipping insertion in model container
[2020-11-25 18:03:54,229 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:03:54,229 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:03:52" (4/6) ...
[2020-11-25 18:03:54,229 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@65aff5b5 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:03:54, skipping insertion in model container
[2020-11-25 18:03:54,229 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:03:54,229 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:03:54" (5/6) ...
[2020-11-25 18:03:54,229 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@65aff5b5 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 06:03:54, skipping insertion in model container
[2020-11-25 18:03:54,230 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:03:54,230 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:03:54" (6/6) ...
[2020-11-25 18:03:54,231 INFO  L404   chiAutomizerObserver]: Analyzing ICFG HY_0x9b53e429b0badd98ef7f01f03702986c516a5715_transferfrom-self-fail.bpl_BEv2
[2020-11-25 18:03:54,258 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 18:03:54,259 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 18:03:54,259 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 18:03:54,259 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 18:03:54,259 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 18:03:54,259 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 18:03:54,259 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 18:03:54,259 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 18:03:54,259 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 18:03:54,290 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3635 states.
[2020-11-25 18:03:54,334 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:03:54,334 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:03:54,334 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:03:54,342 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:03:54,342 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:03:54,342 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 18:03:54,343 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3635 states.
[2020-11-25 18:03:54,358 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:03:54,358 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:03:54,358 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:03:54,360 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:03:54,360 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_HY0 := false;
[L2]                 call_transferFrom_HY0 := false;
[L2]     CALL        call main();
[L4250]              assume null == 0;
[L4251]  CALL        call this := FreshRefGenerator__success();
[L1927]              havoc newRef;
[L1928]              assume Alloc[newRef] == false;
[L1929]              Alloc[newRef] := true;
[L1930]              assume newRef != null;
[L4251]  RET         call this := FreshRefGenerator__success();
[L4252]              assume now >= 0;
[L4253]              assume DType[this] == HY;
[L4254]              assume msgvalue_MSG == 0;
[L4255]              gas := gas - 53000;
[L4256]  CALL        call HY_HY(this, msgsender_MSG, msgvalue_MSG);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call HY_HY__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2063]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2048]              assume msgsender_MSG != null;
[L2049]              Balance[this] := 0;
[L2063]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  COND FALSE  !(revert)
[L2275]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND TRUE   revert
[L793]   RET         call HY_HY__success(this, msgsender_MSG, msgvalue_MSG);
[L794]               assume !revert && gas >= 0;
[L4256]  RET         call HY_HY(this, msgsender_MSG, msgvalue_MSG);
[L4257]              assume !revert && gas >= 0;

Loop:
[L4260]  CALL        call CorralChoice_HY(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != HY;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND TRUE   choice == 20
[L4110]              gas := gas - 21000;
[L4111]  COND FALSE  !(gas >= 0)
[L4260]  RET         call CorralChoice_HY(this);

[2020-11-25 18:03:54,374 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:03:54,374 INFO  L82        PathProgramCache]: Analyzing trace with hash 778997863, now seen corresponding path program 1 times
[2020-11-25 18:03:54,377 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:03:54,394 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:03:54,425 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 18:03:54,427 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:03:54,427 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 18:03:54,606 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:03:54,614 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 18:03:54,614 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 18:03:54,615 INFO  L87              Difference]: Start difference. First operand 3635 states. Second operand 4 states.
[2020-11-25 18:03:54,896 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:03:54,896 INFO  L93              Difference]: Finished difference Result 2459 states and 2680 transitions.
[2020-11-25 18:03:54,896 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 18:03:54,897 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2459 states and 2680 transitions.
[2020-11-25 18:03:54,911 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:03:54,929 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2459 states to 2459 states and 2680 transitions.
[2020-11-25 18:03:54,930 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 18:03:54,933 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 943
[2020-11-25 18:03:54,933 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2459 states and 2680 transitions.
[2020-11-25 18:03:54,940 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:03:54,940 INFO  L728         BuchiCegarLoop]: Abstraction has 2459 states and 2680 transitions.
[2020-11-25 18:03:54,955 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2459 states and 2680 transitions.
[2020-11-25 18:03:54,994 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2459 to 2459.
[2020-11-25 18:03:54,995 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2459 states.
[2020-11-25 18:03:55,000 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2459 states to 2459 states and 2680 transitions.
[2020-11-25 18:03:55,001 INFO  L751         BuchiCegarLoop]: Abstraction has 2459 states and 2680 transitions.
[2020-11-25 18:03:55,001 INFO  L631         BuchiCegarLoop]: Abstraction has 2459 states and 2680 transitions.
[2020-11-25 18:03:55,001 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 18:03:55,001 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2459 states and 2680 transitions.
[2020-11-25 18:03:55,008 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:03:55,008 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:03:55,008 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:03:55,010 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:03:55,010 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_HY0 := false;
[L2]                 call_transferFrom_HY0 := false;
[L2]     CALL        call main();
[L4250]              assume null == 0;
[L4251]  CALL        call this := FreshRefGenerator__success();
[L1927]              havoc newRef;
[L1928]              assume Alloc[newRef] == false;
[L1929]              Alloc[newRef] := true;
[L1930]              assume newRef != null;
[L4251]  RET         call this := FreshRefGenerator__success();
[L4252]              assume now >= 0;
[L4253]              assume DType[this] == HY;
[L4254]              assume msgvalue_MSG == 0;
[L4255]              gas := gas - 53000;
[L4256]  CALL        call HY_HY(this, msgsender_MSG, msgvalue_MSG);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call HY_HY__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2063]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2048]              assume msgsender_MSG != null;
[L2049]              Balance[this] := 0;
[L2063]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  COND FALSE  !(revert)
[L2275]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND TRUE   revert
[L793]   RET         call HY_HY__success(this, msgsender_MSG, msgvalue_MSG);
[L794]               assume !revert && gas >= 0;
[L4256]  RET         call HY_HY(this, msgsender_MSG, msgvalue_MSG);
[L4257]              assume !revert && gas >= 0;
[L4260]  CALL        call CorralChoice_HY(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != HY;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND FALSE  !(choice == 16)
[L4147]  COND FALSE  !(choice == 15)
[L4153]  COND FALSE  !(choice == 14)
[L4159]  COND FALSE  !(choice == 13)
[L4166]  COND FALSE  !(choice == 12)
[L4173]  COND TRUE   choice == 11
[L4174]              gas := gas - 21000;
[L4175]  COND TRUE   gas >= 0
[L4176]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4177]              assume msgvalue_MSG == 0;
[L4178]  CALL        call success_s458 := transferFrom~address~address~uint256_HY(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s458 == to_s458 && (tokens_s458 > balances_HY[this][from_s458] || tokens_s458 > allowed_HY[this][from_s458][msgsender_MSG])) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HY[this][to_s458] >= 0) && balances_HY[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HY[this][from_s458] >= 0) && balances_HY[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_HY[this][from_s458][msgsender_MSG] >= 0) && allowed_HY[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_HY0 := true;
[L2]                 call_transferFrom_HY0 := false;
[L2]                 revert := revert_hold;
[L1046]              havoc __exception;
[L1047]              revert := false;
[L1048]  COND FALSE  !(__exception)
[L1071]  CALL        call success_s458 := transferFrom~address~address~uint256_HY__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2448]  COND TRUE   DType[this] == HY
[L2449]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][from_s458], tokens_s458);
[L1994]  COND TRUE   !(b_s45 <= a_s45)
[L1995]              revert := true;
[L2449]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][from_s458], tokens_s458);
[L2450]  COND TRUE   revert
[L1071]  RET         call success_s458 := transferFrom~address~address~uint256_HY__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1072]              assume !revert && gas >= 0;
[L4178]  RET         call success_s458 := transferFrom~address~address~uint256_HY(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4260]  RET         call CorralChoice_HY(this);

Loop:
[L4260]  CALL        call CorralChoice_HY(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != HY;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND FALSE  !(choice == 16)
[L4147]  COND FALSE  !(choice == 15)
[L4153]  COND FALSE  !(choice == 14)
[L4159]  COND FALSE  !(choice == 13)
[L4166]  COND FALSE  !(choice == 12)
[L4173]  COND TRUE   choice == 11
[L4174]              gas := gas - 21000;
[L4175]  COND TRUE   gas >= 0
[L4176]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4177]              assume msgvalue_MSG == 0;
[L4178]  CALL        call success_s458 := transferFrom~address~address~uint256_HY(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s458 == to_s458 && (tokens_s458 > balances_HY[this][from_s458] || tokens_s458 > allowed_HY[this][from_s458][msgsender_MSG])) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HY[this][to_s458] >= 0) && balances_HY[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HY[this][from_s458] >= 0) && balances_HY[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_HY[this][from_s458][msgsender_MSG] >= 0) && allowed_HY[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_HY0 := true;
[L2]                 call_transferFrom_HY0 := false;
[L2]                 revert := revert_hold;
[L1046]              havoc __exception;
[L1047]              revert := false;
[L1048]  COND FALSE  !(__exception)
[L1071]  CALL        call success_s458 := transferFrom~address~address~uint256_HY__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2448]  COND TRUE   DType[this] == HY
[L2449]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][from_s458], tokens_s458);
[L1994]  COND TRUE   !(b_s45 <= a_s45)
[L1995]              revert := true;
[L2449]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][from_s458], tokens_s458);
[L2450]  COND TRUE   revert
[L1071]  RET         call success_s458 := transferFrom~address~address~uint256_HY__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1072]              assume !revert && gas >= 0;
[L4178]  RET         call success_s458 := transferFrom~address~address~uint256_HY(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4260]  RET         call CorralChoice_HY(this);

[2020-11-25 18:03:55,014 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:03:55,015 INFO  L82        PathProgramCache]: Analyzing trace with hash 799429976, now seen corresponding path program 1 times
[2020-11-25 18:03:55,015 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:03:55,026 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:03:55,045 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 18:03:55,046 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:03:55,046 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 18:03:55,047 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:03:55,048 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 18:03:55,048 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 18:03:55,048 INFO  L87              Difference]: Start difference. First operand 2459 states and 2680 transitions. cyclomatic complexity: 223 Second operand 4 states.
[2020-11-25 18:03:55,425 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:03:55,425 INFO  L93              Difference]: Finished difference Result 3193 states and 3522 transitions.
[2020-11-25 18:03:55,425 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 18:03:55,426 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3193 states and 3522 transitions.
[2020-11-25 18:03:55,438 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:03:55,451 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3193 states to 3073 states and 3394 transitions.
[2020-11-25 18:03:55,451 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1132
[2020-11-25 18:03:55,452 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1132
[2020-11-25 18:03:55,452 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3073 states and 3394 transitions.
[2020-11-25 18:03:55,456 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:03:55,456 INFO  L728         BuchiCegarLoop]: Abstraction has 3073 states and 3394 transitions.
[2020-11-25 18:03:55,458 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3073 states and 3394 transitions.
[2020-11-25 18:03:55,486 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3073 to 2666.
[2020-11-25 18:03:55,486 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2666 states.
[2020-11-25 18:03:55,490 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2666 states to 2666 states and 2886 transitions.
[2020-11-25 18:03:55,490 INFO  L751         BuchiCegarLoop]: Abstraction has 2666 states and 2886 transitions.
[2020-11-25 18:03:55,490 INFO  L631         BuchiCegarLoop]: Abstraction has 2666 states and 2886 transitions.
[2020-11-25 18:03:55,490 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 18:03:55,491 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2666 states and 2886 transitions.
[2020-11-25 18:03:55,496 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:03:55,496 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:03:55,496 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:03:55,498 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:03:55,498 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_HY0 := false;
[L2]                 call_transferFrom_HY0 := false;
[L2]     CALL        call main();
[L4250]              assume null == 0;
[L4251]  CALL        call this := FreshRefGenerator__success();
[L1927]              havoc newRef;
[L1928]              assume Alloc[newRef] == false;
[L1929]              Alloc[newRef] := true;
[L1930]              assume newRef != null;
[L4251]  RET         call this := FreshRefGenerator__success();
[L4252]              assume now >= 0;
[L4253]              assume DType[this] == HY;
[L4254]              assume msgvalue_MSG == 0;
[L4255]              gas := gas - 53000;
[L4256]  CALL        call HY_HY(this, msgsender_MSG, msgvalue_MSG);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call HY_HY__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2063]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2048]              assume msgsender_MSG != null;
[L2049]              Balance[this] := 0;
[L2063]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  COND FALSE  !(revert)
[L2275]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND FALSE  !(revert)
[L2279]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2133]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2117]              owner_Owned[this] := null;
[L2118]              newOwner_Owned[this] := null;
[L2120]              owner_Owned[this] := msgsender_MSG;
[L2133]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  COND FALSE  !(revert)
[L2279]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND FALSE  !(revert)
[L2283]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1959]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1944]              assume msgsender_MSG != null;
[L1945]              Balance[this] := 0;
[L1959]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  COND FALSE  !(revert)
[L2283]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2284]  COND FALSE  !(revert)
[L2287]  CALL        call HY_HY_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2232]              assume msgsender_MSG != null;
[L2233]              Balance[this] := 0;
[L2234]              symbol_HY[this] := 1792990956;
[L2235]              name_HY[this] := 1792990956;
[L2236]              decimals_HY[this] := 0;
[L2237]              _totalSupply_HY[this] := 0;
[L2238]              balances_HY[this] := zeroRefintArr();
[L2239]              sum_balances0[this] := 0;
[L2240]              allowed_HY[this] := zeroRefRefintArr();
[L2241]              sum_allowed1[this] := 0;
[L2243]              symbol_HY[this] := 1159622092;
[L2244]              name_HY[this] := -1506217422;
[L2245]              decimals_HY[this] := 18;
[L2246]              _totalSupply_HY[this] := 7000000000000000000000000;
[L2247]              sum_balances0[this] := sum_balances0[this] - balances_HY[this][615403135660766958745290992591269755305743528583];
[L2248]              balances_HY[this][615403135660766958745290992591269755305743528583] := _totalSupply_HY[this];
[L2249]              sum_balances0[this] := sum_balances0[this] + balances_HY[this][615403135660766958745290992591269755305743528583];
[L2250]              assert { :EventEmitted "Transfer_HY" } true;
[L2287]  RET         call HY_HY_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2288]  COND FALSE  !(revert)
[L793]   RET         call HY_HY__success(this, msgsender_MSG, msgvalue_MSG);
[L794]               assume !revert && gas >= 0;
[L4256]  RET         call HY_HY(this, msgsender_MSG, msgvalue_MSG);
[L4257]              assume !revert && gas >= 0;
[L4260]  CALL        call CorralChoice_HY(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != HY;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND FALSE  !(choice == 16)
[L4147]  COND FALSE  !(choice == 15)
[L4153]  COND FALSE  !(choice == 14)
[L4159]  COND FALSE  !(choice == 13)
[L4166]  COND FALSE  !(choice == 12)
[L4173]  COND TRUE   choice == 11
[L4174]              gas := gas - 21000;
[L4175]  COND TRUE   gas >= 0
[L4176]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4177]              assume msgvalue_MSG == 0;
[L4178]  CALL        call success_s458 := transferFrom~address~address~uint256_HY(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s458 == to_s458 && (tokens_s458 > balances_HY[this][from_s458] || tokens_s458 > allowed_HY[this][from_s458][msgsender_MSG])) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HY[this][to_s458] >= 0) && balances_HY[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HY[this][from_s458] >= 0) && balances_HY[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_HY[this][from_s458][msgsender_MSG] >= 0) && allowed_HY[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_HY0 := true;
[L2]                 call_transferFrom_HY0 := false;
[L2]                 revert := revert_hold;
[L1046]              havoc __exception;
[L1047]              revert := false;
[L1048]  COND FALSE  !(__exception)
[L1071]  CALL        call success_s458 := transferFrom~address~address~uint256_HY__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2448]  COND TRUE   DType[this] == HY
[L2449]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][from_s458], tokens_s458);
[L1994]  COND FALSE  !(!(b_s45 <= a_s45))
[L1998]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2449]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][from_s458], tokens_s458);
[L2450]  COND FALSE  !(revert)
[L2456]              sum_balances0[this] := sum_balances0[this] - balances_HY[this][from_s458];
[L2457]              balances_HY[this][from_s458] := __var_5;
[L2458]              sum_balances0[this] := sum_balances0[this] + balances_HY[this][from_s458];
[L2459]  COND TRUE   DType[this] == HY
[L2460]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_HY[this][from_s458][msgsender_MSG], tokens_s458);
[L1994]  COND FALSE  !(!(b_s45 <= a_s45))
[L1998]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2460]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_HY[this][from_s458][msgsender_MSG], tokens_s458);
[L2461]  COND FALSE  !(revert)
[L2467]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_HY[this][from_s458][msgsender_MSG];
[L2468]              allowed_HY[this][from_s458][msgsender_MSG] := __var_6;
[L2469]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_HY[this][from_s458][msgsender_MSG];
[L2470]  COND TRUE   DType[this] == HY
[L2471]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][to_s458], tokens_s458);
[L1976]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1977]  COND FALSE  !(!(c_s23 >= a_s23))
[L2471]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][to_s458], tokens_s458);
[L2472]  COND FALSE  !(revert)
[L2478]              sum_balances0[this] := sum_balances0[this] - balances_HY[this][to_s458];
[L2479]              balances_HY[this][to_s458] := __var_7;
[L2480]              sum_balances0[this] := sum_balances0[this] + balances_HY[this][to_s458];
[L2481]              assert { :EventEmitted "Transfer_HY" } true;
[L2482]              success_s458 := true;
[L1071]  RET         call success_s458 := transferFrom~address~address~uint256_HY__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1072]              assume !revert && gas >= 0;
[L4178]  RET         call success_s458 := transferFrom~address~address~uint256_HY(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4260]  RET         call CorralChoice_HY(this);

Loop:
[L4260]  CALL        call CorralChoice_HY(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != HY;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND FALSE  !(choice == 16)
[L4147]  COND FALSE  !(choice == 15)
[L4153]  COND FALSE  !(choice == 14)
[L4159]  COND FALSE  !(choice == 13)
[L4166]  COND FALSE  !(choice == 12)
[L4173]  COND TRUE   choice == 11
[L4174]              gas := gas - 21000;
[L4175]  COND TRUE   gas >= 0
[L4176]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4177]              assume msgvalue_MSG == 0;
[L4178]  CALL        call success_s458 := transferFrom~address~address~uint256_HY(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s458 == to_s458 && (tokens_s458 > balances_HY[this][from_s458] || tokens_s458 > allowed_HY[this][from_s458][msgsender_MSG])) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HY[this][to_s458] >= 0) && balances_HY[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HY[this][from_s458] >= 0) && balances_HY[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_HY[this][from_s458][msgsender_MSG] >= 0) && allowed_HY[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_HY0 := true;
[L2]                 call_transferFrom_HY0 := false;
[L2]                 revert := revert_hold;
[L1046]              havoc __exception;
[L1047]              revert := false;
[L1048]  COND FALSE  !(__exception)
[L1071]  CALL        call success_s458 := transferFrom~address~address~uint256_HY__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2448]  COND TRUE   DType[this] == HY
[L2449]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][from_s458], tokens_s458);
[L1994]  COND FALSE  !(!(b_s45 <= a_s45))
[L1998]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2449]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][from_s458], tokens_s458);
[L2450]  COND FALSE  !(revert)
[L2456]              sum_balances0[this] := sum_balances0[this] - balances_HY[this][from_s458];
[L2457]              balances_HY[this][from_s458] := __var_5;
[L2458]              sum_balances0[this] := sum_balances0[this] + balances_HY[this][from_s458];
[L2459]  COND TRUE   DType[this] == HY
[L2460]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_HY[this][from_s458][msgsender_MSG], tokens_s458);
[L1994]  COND FALSE  !(!(b_s45 <= a_s45))
[L1998]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2460]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_HY[this][from_s458][msgsender_MSG], tokens_s458);
[L2461]  COND FALSE  !(revert)
[L2467]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_HY[this][from_s458][msgsender_MSG];
[L2468]              allowed_HY[this][from_s458][msgsender_MSG] := __var_6;
[L2469]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_HY[this][from_s458][msgsender_MSG];
[L2470]  COND TRUE   DType[this] == HY
[L2471]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][to_s458], tokens_s458);
[L1976]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1977]  COND FALSE  !(!(c_s23 >= a_s23))
[L2471]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][to_s458], tokens_s458);
[L2472]  COND FALSE  !(revert)
[L2478]              sum_balances0[this] := sum_balances0[this] - balances_HY[this][to_s458];
[L2479]              balances_HY[this][to_s458] := __var_7;
[L2480]              sum_balances0[this] := sum_balances0[this] + balances_HY[this][to_s458];
[L2481]              assert { :EventEmitted "Transfer_HY" } true;
[L2482]              success_s458 := true;
[L1071]  RET         call success_s458 := transferFrom~address~address~uint256_HY__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1072]              assume !revert && gas >= 0;
[L4178]  RET         call success_s458 := transferFrom~address~address~uint256_HY(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4260]  RET         call CorralChoice_HY(this);

[2020-11-25 18:03:55,502 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:03:55,502 INFO  L82        PathProgramCache]: Analyzing trace with hash 417170413, now seen corresponding path program 1 times
[2020-11-25 18:03:55,503 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:03:55,521 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:03:55,689 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 3 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-25 18:03:55,689 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 18:03:55,690 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [16] total 16
[2020-11-25 18:03:55,690 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:03:55,690 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-25 18:03:55,690 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=38, Invalid=234, Unknown=0, NotChecked=0, Total=272
[2020-11-25 18:03:55,690 INFO  L87              Difference]: Start difference. First operand 2666 states and 2886 transitions. cyclomatic complexity: 222 Second operand 17 states.
[2020-11-25 18:03:57,567 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:03:57,568 INFO  L93              Difference]: Finished difference Result 2774 states and 3014 transitions.
[2020-11-25 18:03:57,568 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 16 states. 
[2020-11-25 18:03:57,568 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2774 states and 3014 transitions.
[2020-11-25 18:03:57,575 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:03:57,582 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2774 states to 2774 states and 3014 transitions.
[2020-11-25 18:03:57,583 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1072
[2020-11-25 18:03:57,583 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1072
[2020-11-25 18:03:57,583 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2774 states and 3014 transitions.
[2020-11-25 18:03:57,586 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:03:57,586 INFO  L728         BuchiCegarLoop]: Abstraction has 2774 states and 3014 transitions.
[2020-11-25 18:03:57,589 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2774 states and 3014 transitions.
[2020-11-25 18:03:57,610 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2774 to 2534.
[2020-11-25 18:03:57,610 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2534 states.
[2020-11-25 18:03:57,612 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2534 states to 2534 states and 2717 transitions.
[2020-11-25 18:03:57,612 INFO  L751         BuchiCegarLoop]: Abstraction has 2534 states and 2717 transitions.
[2020-11-25 18:03:57,612 INFO  L631         BuchiCegarLoop]: Abstraction has 2534 states and 2717 transitions.
[2020-11-25 18:03:57,612 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 18:03:57,612 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2534 states and 2717 transitions.
[2020-11-25 18:03:57,617 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:03:57,617 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:03:57,617 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:03:57,619 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:03:57,619 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_HY0 := false;
[L2]                 call_transferFrom_HY0 := false;
[L2]     CALL        call main();
[L4250]              assume null == 0;
[L4251]  CALL        call this := FreshRefGenerator__success();
[L1927]              havoc newRef;
[L1928]              assume Alloc[newRef] == false;
[L1929]              Alloc[newRef] := true;
[L1930]              assume newRef != null;
[L4251]  RET         call this := FreshRefGenerator__success();
[L4252]              assume now >= 0;
[L4253]              assume DType[this] == HY;
[L4254]              assume msgvalue_MSG == 0;
[L4255]              gas := gas - 53000;
[L4256]  CALL        call HY_HY(this, msgsender_MSG, msgvalue_MSG);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND TRUE   __exception
[L771]               __tmp__Balance := Balance;
[L772]               __tmp__DType := DType;
[L773]               __tmp__Alloc := Alloc;
[L774]               __tmp__balance_ADDR := balance_ADDR;
[L775]               __tmp__M_Ref_int := M_Ref_int;
[L776]               __tmp__sum_balances0 := sum_balances0;
[L777]               __tmp__alloc_allowed_HY_lvl0 := alloc_allowed_HY_lvl0;
[L778]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L779]               __tmp__sum_allowed1 := sum_allowed1;
[L780]               __tmp__Length := Length;
[L781]               __tmp__now := now;
[L782]               __tmp__owner_Owned := owner_Owned;
[L783]               __tmp__newOwner_Owned := newOwner_Owned;
[L784]               __tmp__symbol_HY := symbol_HY;
[L785]               __tmp__name_HY := name_HY;
[L786]               __tmp__decimals_HY := decimals_HY;
[L787]               __tmp___totalSupply_HY := _totalSupply_HY;
[L788]               __tmp__balances_HY := balances_HY;
[L789]               __tmp__allowed_HY := allowed_HY;
[L790]   CALL        call HY_HY__fail(this, msgsender_MSG, msgvalue_MSG);
[L2255]  CALL        call ERC20Interface_ERC20Interface__fail(this, msgsender_MSG, msgvalue_MSG);
[L2055]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2040]              assume msgsender_MSG != null;
[L2041]              __tmp__Balance[this] := 0;
[L2055]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2056]  COND FALSE  !(revert)
[L2255]  RET         call ERC20Interface_ERC20Interface__fail(this, msgsender_MSG, msgvalue_MSG);
[L2256]  COND FALSE  !(revert)
[L2259]  CALL        call Owned_Owned__fail(this, msgsender_MSG, msgvalue_MSG);
[L2125]  CALL        call Owned_Owned_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2104]              assume msgsender_MSG != null;
[L2105]              __tmp__Balance[this] := 0;
[L2106]              __tmp__owner_Owned[this] := null;
[L2107]              __tmp__newOwner_Owned[this] := null;
[L2109]              __tmp__owner_Owned[this] := msgsender_MSG;
[L2125]  RET         call Owned_Owned_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2126]  COND FALSE  !(revert)
[L2259]  RET         call Owned_Owned__fail(this, msgsender_MSG, msgvalue_MSG);
[L2260]  COND FALSE  !(revert)
[L2263]  CALL        call SafeMath_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG);
[L1951]  CALL        call SafeMath_SafeMath_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1936]              assume msgsender_MSG != null;
[L1937]              __tmp__Balance[this] := 0;
[L1951]  RET         call SafeMath_SafeMath_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1952]  COND FALSE  !(revert)
[L2263]  RET         call SafeMath_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG);
[L2264]  COND FALSE  !(revert)
[L2267]  CALL        call HY_HY_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2209]              assume msgsender_MSG != null;
[L2210]              __tmp__Balance[this] := 0;
[L2211]              __tmp__symbol_HY[this] := 1792990956;
[L2212]              __tmp__name_HY[this] := 1792990956;
[L2213]              __tmp__decimals_HY[this] := 0;
[L2214]              __tmp___totalSupply_HY[this] := 0;
[L2215]              __tmp__balances_HY[this] := zeroRefintArr();
[L2216]              __tmp__sum_balances0[this] := 0;
[L2217]              __tmp__allowed_HY[this] := zeroRefRefintArr();
[L2218]              __tmp__sum_allowed1[this] := 0;
[L2220]              __tmp__symbol_HY[this] := 1159622092;
[L2221]              __tmp__name_HY[this] := -1506217422;
[L2222]              __tmp__decimals_HY[this] := 18;
[L2223]              __tmp___totalSupply_HY[this] := 7000000000000000000000000;
[L2224]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_HY[this][615403135660766958745290992591269755305743528583];
[L2225]              __tmp__balances_HY[this][615403135660766958745290992591269755305743528583] := __tmp___totalSupply_HY[this];
[L2226]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_HY[this][615403135660766958745290992591269755305743528583];
[L2267]  RET         call HY_HY_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2268]  COND FALSE  !(revert)
[L790]   RET         call HY_HY__fail(this, msgsender_MSG, msgvalue_MSG);
[L791]               assume revert || gas < 0;
[L4256]  RET         call HY_HY(this, msgsender_MSG, msgvalue_MSG);
[L4257]              assume !revert && gas >= 0;
[L4260]  CALL        call CorralChoice_HY(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != HY;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND FALSE  !(choice == 16)
[L4147]  COND FALSE  !(choice == 15)
[L4153]  COND FALSE  !(choice == 14)
[L4159]  COND FALSE  !(choice == 13)
[L4166]  COND FALSE  !(choice == 12)
[L4173]  COND TRUE   choice == 11
[L4174]              gas := gas - 21000;
[L4175]  COND TRUE   gas >= 0
[L4176]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4177]              assume msgvalue_MSG == 0;
[L4178]  CALL        call success_s458 := transferFrom~address~address~uint256_HY(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s458 == to_s458 && (tokens_s458 > balances_HY[this][from_s458] || tokens_s458 > allowed_HY[this][from_s458][msgsender_MSG])) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HY[this][to_s458] >= 0) && balances_HY[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HY[this][from_s458] >= 0) && balances_HY[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_HY[this][from_s458][msgsender_MSG] >= 0) && allowed_HY[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_HY0 := true;
[L2]                 call_transferFrom_HY0 := false;
[L2]                 revert := revert_hold;
[L1046]              havoc __exception;
[L1047]              revert := false;
[L1048]  COND FALSE  !(__exception)
[L1071]  CALL        call success_s458 := transferFrom~address~address~uint256_HY__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2448]  COND TRUE   DType[this] == HY
[L2449]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][from_s458], tokens_s458);
[L1994]  COND FALSE  !(!(b_s45 <= a_s45))
[L1998]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2449]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][from_s458], tokens_s458);
[L2450]  COND FALSE  !(revert)
[L2456]              sum_balances0[this] := sum_balances0[this] - balances_HY[this][from_s458];
[L2457]              balances_HY[this][from_s458] := __var_5;
[L2458]              sum_balances0[this] := sum_balances0[this] + balances_HY[this][from_s458];
[L2459]  COND TRUE   DType[this] == HY
[L2460]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_HY[this][from_s458][msgsender_MSG], tokens_s458);
[L1994]  COND FALSE  !(!(b_s45 <= a_s45))
[L1998]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2460]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_HY[this][from_s458][msgsender_MSG], tokens_s458);
[L2461]  COND FALSE  !(revert)
[L2467]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_HY[this][from_s458][msgsender_MSG];
[L2468]              allowed_HY[this][from_s458][msgsender_MSG] := __var_6;
[L2469]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_HY[this][from_s458][msgsender_MSG];
[L2470]  COND TRUE   DType[this] == HY
[L2471]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][to_s458], tokens_s458);
[L1976]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1977]  COND FALSE  !(!(c_s23 >= a_s23))
[L2471]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][to_s458], tokens_s458);
[L2472]  COND FALSE  !(revert)
[L2478]              sum_balances0[this] := sum_balances0[this] - balances_HY[this][to_s458];
[L2479]              balances_HY[this][to_s458] := __var_7;
[L2480]              sum_balances0[this] := sum_balances0[this] + balances_HY[this][to_s458];
[L2481]              assert { :EventEmitted "Transfer_HY" } true;
[L2482]              success_s458 := true;
[L1071]  RET         call success_s458 := transferFrom~address~address~uint256_HY__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1072]              assume !revert && gas >= 0;
[L4178]  RET         call success_s458 := transferFrom~address~address~uint256_HY(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4260]  RET         call CorralChoice_HY(this);

Loop:
[L4260]  CALL        call CorralChoice_HY(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != HY;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND FALSE  !(choice == 16)
[L4147]  COND FALSE  !(choice == 15)
[L4153]  COND FALSE  !(choice == 14)
[L4159]  COND FALSE  !(choice == 13)
[L4166]  COND FALSE  !(choice == 12)
[L4173]  COND TRUE   choice == 11
[L4174]              gas := gas - 21000;
[L4175]  COND TRUE   gas >= 0
[L4176]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4177]              assume msgvalue_MSG == 0;
[L4178]  CALL        call success_s458 := transferFrom~address~address~uint256_HY(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s458 == to_s458 && (tokens_s458 > balances_HY[this][from_s458] || tokens_s458 > allowed_HY[this][from_s458][msgsender_MSG])) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HY[this][to_s458] >= 0) && balances_HY[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HY[this][from_s458] >= 0) && balances_HY[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_HY[this][from_s458][msgsender_MSG] >= 0) && allowed_HY[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_HY0 := true;
[L2]                 call_transferFrom_HY0 := false;
[L2]                 revert := revert_hold;
[L1046]              havoc __exception;
[L1047]              revert := false;
[L1048]  COND FALSE  !(__exception)
[L1071]  CALL        call success_s458 := transferFrom~address~address~uint256_HY__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2448]  COND TRUE   DType[this] == HY
[L2449]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][from_s458], tokens_s458);
[L1994]  COND FALSE  !(!(b_s45 <= a_s45))
[L1998]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2449]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][from_s458], tokens_s458);
[L2450]  COND FALSE  !(revert)
[L2456]              sum_balances0[this] := sum_balances0[this] - balances_HY[this][from_s458];
[L2457]              balances_HY[this][from_s458] := __var_5;
[L2458]              sum_balances0[this] := sum_balances0[this] + balances_HY[this][from_s458];
[L2459]  COND TRUE   DType[this] == HY
[L2460]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_HY[this][from_s458][msgsender_MSG], tokens_s458);
[L1994]  COND FALSE  !(!(b_s45 <= a_s45))
[L1998]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2460]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_HY[this][from_s458][msgsender_MSG], tokens_s458);
[L2461]  COND FALSE  !(revert)
[L2467]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_HY[this][from_s458][msgsender_MSG];
[L2468]              allowed_HY[this][from_s458][msgsender_MSG] := __var_6;
[L2469]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_HY[this][from_s458][msgsender_MSG];
[L2470]  COND TRUE   DType[this] == HY
[L2471]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][to_s458], tokens_s458);
[L1976]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1977]  COND FALSE  !(!(c_s23 >= a_s23))
[L2471]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][to_s458], tokens_s458);
[L2472]  COND FALSE  !(revert)
[L2478]              sum_balances0[this] := sum_balances0[this] - balances_HY[this][to_s458];
[L2479]              balances_HY[this][to_s458] := __var_7;
[L2480]              sum_balances0[this] := sum_balances0[this] + balances_HY[this][to_s458];
[L2481]              assert { :EventEmitted "Transfer_HY" } true;
[L2482]              success_s458 := true;
[L1071]  RET         call success_s458 := transferFrom~address~address~uint256_HY__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1072]              assume !revert && gas >= 0;
[L4178]  RET         call success_s458 := transferFrom~address~address~uint256_HY(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4260]  RET         call CorralChoice_HY(this);

[2020-11-25 18:03:57,622 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:03:57,623 INFO  L82        PathProgramCache]: Analyzing trace with hash -438043836, now seen corresponding path program 1 times
[2020-11-25 18:03:57,623 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:03:57,632 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:03:57,673 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 4 trivial. 0 not checked.
[2020-11-25 18:03:57,673 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:03:57,673 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 18:03:57,674 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:03:57,674 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 18:03:57,674 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 18:03:57,674 INFO  L87              Difference]: Start difference. First operand 2534 states and 2717 transitions. cyclomatic complexity: 186 Second operand 4 states.
[2020-11-25 18:03:57,883 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:03:57,883 INFO  L93              Difference]: Finished difference Result 3330 states and 3721 transitions.
[2020-11-25 18:03:57,883 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 18:03:57,883 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3330 states and 3721 transitions.
[2020-11-25 18:03:57,891 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 18:03:57,900 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3330 states to 3233 states and 3624 transitions.
[2020-11-25 18:03:57,900 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1201
[2020-11-25 18:03:57,901 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1201
[2020-11-25 18:03:57,901 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3233 states and 3624 transitions.
[2020-11-25 18:03:57,904 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:03:57,904 INFO  L728         BuchiCegarLoop]: Abstraction has 3233 states and 3624 transitions.
[2020-11-25 18:03:57,906 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3233 states and 3624 transitions.
[2020-11-25 18:03:57,921 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3233 to 2437.
[2020-11-25 18:03:57,922 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2437 states.
[2020-11-25 18:03:57,924 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2437 states to 2437 states and 2619 transitions.
[2020-11-25 18:03:57,924 INFO  L751         BuchiCegarLoop]: Abstraction has 2437 states and 2619 transitions.
[2020-11-25 18:03:57,924 INFO  L631         BuchiCegarLoop]: Abstraction has 2437 states and 2619 transitions.
[2020-11-25 18:03:57,924 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 18:03:57,924 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2437 states and 2619 transitions.
[2020-11-25 18:03:57,927 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:03:57,927 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:03:57,927 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:03:57,928 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:03:57,928 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_HY0 := false;
[L2]                 call_transferFrom_HY0 := false;
[L2]     CALL        call main();
[L4250]              assume null == 0;
[L4251]  CALL        call this := FreshRefGenerator__success();
[L1927]              havoc newRef;
[L1928]              assume Alloc[newRef] == false;
[L1929]              Alloc[newRef] := true;
[L1930]              assume newRef != null;
[L4251]  RET         call this := FreshRefGenerator__success();
[L4252]              assume now >= 0;
[L4253]              assume DType[this] == HY;
[L4254]              assume msgvalue_MSG == 0;
[L4255]              gas := gas - 53000;
[L4256]  CALL        call HY_HY(this, msgsender_MSG, msgvalue_MSG);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call HY_HY__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2063]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2048]              assume msgsender_MSG != null;
[L2049]              Balance[this] := 0;
[L2063]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  COND FALSE  !(revert)
[L2275]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND FALSE  !(revert)
[L2279]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2133]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2117]              owner_Owned[this] := null;
[L2118]              newOwner_Owned[this] := null;
[L2120]              owner_Owned[this] := msgsender_MSG;
[L2133]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  COND FALSE  !(revert)
[L2279]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND FALSE  !(revert)
[L2283]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1959]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1944]              assume msgsender_MSG != null;
[L1945]              Balance[this] := 0;
[L1959]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  COND FALSE  !(revert)
[L2283]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2284]  COND FALSE  !(revert)
[L2287]  CALL        call HY_HY_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2232]              assume msgsender_MSG != null;
[L2233]              Balance[this] := 0;
[L2234]              symbol_HY[this] := 1792990956;
[L2235]              name_HY[this] := 1792990956;
[L2236]              decimals_HY[this] := 0;
[L2237]              _totalSupply_HY[this] := 0;
[L2238]              balances_HY[this] := zeroRefintArr();
[L2239]              sum_balances0[this] := 0;
[L2240]              allowed_HY[this] := zeroRefRefintArr();
[L2241]              sum_allowed1[this] := 0;
[L2243]              symbol_HY[this] := 1159622092;
[L2244]              name_HY[this] := -1506217422;
[L2245]              decimals_HY[this] := 18;
[L2246]              _totalSupply_HY[this] := 7000000000000000000000000;
[L2247]              sum_balances0[this] := sum_balances0[this] - balances_HY[this][615403135660766958745290992591269755305743528583];
[L2248]              balances_HY[this][615403135660766958745290992591269755305743528583] := _totalSupply_HY[this];
[L2249]              sum_balances0[this] := sum_balances0[this] + balances_HY[this][615403135660766958745290992591269755305743528583];
[L2250]              assert { :EventEmitted "Transfer_HY" } true;
[L2287]  RET         call HY_HY_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2288]  COND FALSE  !(revert)
[L793]   RET         call HY_HY__success(this, msgsender_MSG, msgvalue_MSG);
[L794]               assume !revert && gas >= 0;
[L4256]  RET         call HY_HY(this, msgsender_MSG, msgvalue_MSG);
[L4257]              assume !revert && gas >= 0;
[L4260]  CALL        call CorralChoice_HY(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != HY;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND FALSE  !(choice == 16)
[L4147]  COND FALSE  !(choice == 15)
[L4153]  COND FALSE  !(choice == 14)
[L4159]  COND FALSE  !(choice == 13)
[L4166]  COND TRUE   choice == 12
[L4167]              gas := gas - 21000;
[L4168]  COND TRUE   gas >= 0
[L4169]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4170]              assume msgvalue_MSG == 0;
[L4171]  CALL        call success_s399 := approve~address~uint256_HY(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L988]               havoc __exception;
[L989]               revert := false;
[L990]   COND FALSE  !(__exception)
[L1013]  CALL        call success_s399 := approve~address~uint256_HY__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2393]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_HY[this][msgsender_MSG][spender_s399];
[L2394]              allowed_HY[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2395]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_HY[this][msgsender_MSG][spender_s399];
[L2396]              assert { :EventEmitted "Approval_HY" } true;
[L2397]              success_s399 := true;
[L1013]  RET         call success_s399 := approve~address~uint256_HY__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1014]              assume !revert && gas >= 0;
[L4171]  RET         call success_s399 := approve~address~uint256_HY(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4260]  RET         call CorralChoice_HY(this);
[L4260]  CALL        call CorralChoice_HY(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != HY;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND FALSE  !(choice == 20)
[L4117]  COND FALSE  !(choice == 19)
[L4125]  COND FALSE  !(choice == 18)
[L4133]  COND FALSE  !(choice == 17)
[L4141]  COND FALSE  !(choice == 16)
[L4147]  COND FALSE  !(choice == 15)
[L4153]  COND FALSE  !(choice == 14)
[L4159]  COND FALSE  !(choice == 13)
[L4166]  COND FALSE  !(choice == 12)
[L4173]  COND TRUE   choice == 11
[L4174]              gas := gas - 21000;
[L4175]  COND TRUE   gas >= 0
[L4176]              assume tokens_s458 >= 0 && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4177]              assume msgvalue_MSG == 0;
[L4178]  CALL        call success_s458 := transferFrom~address~address~uint256_HY(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s458 == to_s458 && (tokens_s458 > balances_HY[this][from_s458] || tokens_s458 > allowed_HY[this][from_s458][msgsender_MSG])) && tokens_s458 >= 0) && tokens_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HY[this][to_s458] >= 0) && balances_HY[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HY[this][from_s458] >= 0) && balances_HY[this][from_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_HY[this][from_s458][msgsender_MSG] >= 0) && allowed_HY[this][from_s458][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_HY0 := true;
[L2]                 call_transferFrom_HY0 := false;
[L2]                 revert := revert_hold;
[L1046]              havoc __exception;
[L1047]              revert := false;
[L1048]  COND FALSE  !(__exception)
[L1071]  CALL        call success_s458 := transferFrom~address~address~uint256_HY__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L2448]  COND TRUE   DType[this] == HY
[L2449]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][from_s458], tokens_s458);
[L1994]  COND FALSE  !(!(b_s45 <= a_s45))
[L1998]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2449]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][from_s458], tokens_s458);
[L2450]  COND FALSE  !(revert)
[L2456]              sum_balances0[this] := sum_balances0[this] - balances_HY[this][from_s458];
[L2457]              balances_HY[this][from_s458] := __var_5;
[L2458]              sum_balances0[this] := sum_balances0[this] + balances_HY[this][from_s458];
[L2459]  COND TRUE   DType[this] == HY
[L2460]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_HY[this][from_s458][msgsender_MSG], tokens_s458);
[L1994]  COND FALSE  !(!(b_s45 <= a_s45))
[L1998]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2460]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_HY[this][from_s458][msgsender_MSG], tokens_s458);
[L2461]  COND FALSE  !(revert)
[L2467]              sum_allowed1[from_s458] := sum_allowed1[from_s458] - allowed_HY[this][from_s458][msgsender_MSG];
[L2468]              allowed_HY[this][from_s458][msgsender_MSG] := __var_6;
[L2469]              sum_allowed1[from_s458] := sum_allowed1[from_s458] + allowed_HY[this][from_s458][msgsender_MSG];
[L2470]  COND TRUE   DType[this] == HY
[L2471]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][to_s458], tokens_s458);
[L1976]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1977]  COND FALSE  !(!(c_s23 >= a_s23))
[L2471]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_HY[this][to_s458], tokens_s458);
[L2472]  COND FALSE  !(revert)
[L2478]              sum_balances0[this] := sum_balances0[this] - balances_HY[this][to_s458];
[L2479]              balances_HY[this][to_s458] := __var_7;
[L2480]              sum_balances0[this] := sum_balances0[this] + balances_HY[this][to_s458];
[L2481]              assert { :EventEmitted "Transfer_HY" } true;
[L2482]              success_s458 := true;
[L1071]  RET         call success_s458 := transferFrom~address~address~uint256_HY__success(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L1072]              assume !revert && gas >= 0;
[L4178]  RET         call success_s458 := transferFrom~address~address~uint256_HY(this, msgsender_MSG, msgvalue_MSG, from_s458, to_s458, tokens_s458);
[L4260]  RET         call CorralChoice_HY(this);

Loop:
[L4260]  CALL        call CorralChoice_HY(this);
[L4051]              havoc msgsender_MSG;
[L4052]              havoc msgvalue_MSG;
[L4053]              havoc choice;
[L4054]              havoc a_s23;
[L4055]              havoc b_s23;
[L4056]              havoc c_s23;
[L4057]              havoc a_s45;
[L4058]              havoc b_s45;
[L4059]              havoc c_s45;
[L4060]              havoc a_s73;
[L4061]              havoc b_s73;
[L4062]              havoc c_s73;
[L4063]              havoc a_s95;
[L4064]              havoc b_s95;
[L4065]              havoc c_s95;
[L4066]              havoc __ret_0_totalSupply;
[L4067]              havoc tokenOwner_s328;
[L4068]              havoc balance_s328;
[L4069]              havoc tokenOwner_s474;
[L4070]              havoc spender_s474;
[L4071]              havoc remaining_s474;
[L4072]              havoc to_s371;
[L4073]              havoc tokens_s371;
[L4074]              havoc success_s371;
[L4075]              havoc spender_s399;
[L4076]              havoc tokens_s399;
[L4077]              havoc success_s399;
[L4078]              havoc from_s458;
[L4079]              havoc to_s458;
[L4080]              havoc tokens_s458;
[L4081]              havoc success_s458;
[L4082]              havoc __ret_0_owner;
[L4083]              havoc __ret_0_newOwner;
[L4084]              havoc _newOwner_s217;
[L4085]              havoc __ret_0_symbol;
[L4086]              havoc __ret_0_name;
[L4087]              havoc __ret_0_decimals;
[L4088]              havoc __ret_0__totalSupply;
[L4089]              havoc spender_s517;
[L4090]              havoc tokens_s517;
[L4091]              havoc data_s517;
[L4092]              havoc success_s517;
[L4093]              havoc tokenAddress_s544;
[L4094]              havoc tokens_s544;
[L4095]              havoc success_s544;
[L4096]              havoc tmpNow;
[L4097]              havoc gas;
[L4098]              assume gas > 4000000 && gas <= 8000000;
[L4099]              tmpNow := now;
[L4100]              havoc now;
[L4101]              assume now > tmpNow;
[L4102]              assume msgsender_MSG != null;
[L4103]              assume DType[msgsender_MSG] != SafeMath;
[L4104]              assume DType[msgsender_MSG] != ERC20Interface;
[L4105]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4106]              assume DType[msgsender_MSG] != Owned;
[L4107]              assume DType[msgsender_MSG] != HY;
[L4108]              Alloc[msgsender_MSG] := true;
[L4109]  COND TRUE   choice == 20
[L4110]              gas := gas - 21000;
[L4111]  COND FALSE  !(gas >= 0)
[L4260]  RET         call CorralChoice_HY(this);

[2020-11-25 18:03:57,934 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:03:57,934 INFO  L82        PathProgramCache]: Analyzing trace with hash -1164098620, now seen corresponding path program 1 times
[2020-11-25 18:03:57,935 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:03:57,956 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:03:58,070 INFO  L134       CoverageAnalysis]: Checked inductivity of 73 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 73 trivial. 0 not checked.
[2020-11-25 18:03:58,071 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:03:58,071 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-25 18:03:58,071 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:03:58,071 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-25 18:03:58,072 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=19, Invalid=53, Unknown=0, NotChecked=0, Total=72
[2020-11-25 18:03:58,072 INFO  L87              Difference]: Start difference. First operand 2437 states and 2619 transitions. cyclomatic complexity: 185 Second operand 9 states.
[2020-11-25 18:03:58,473 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:03:58,473 INFO  L93              Difference]: Finished difference Result 1386 states and 1483 transitions.
[2020-11-25 18:03:58,473 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 9 states. 
[2020-11-25 18:03:58,473 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1386 states and 1483 transitions.
[2020-11-25 18:03:58,476 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 18:03:58,476 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1386 states to 0 states and 0 transitions.
[2020-11-25 18:03:58,476 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 18:03:58,476 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 18:03:58,476 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 18:03:58,476 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:03:58,476 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 18:03:58,476 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 18:03:58,476 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 18:03:58,476 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 18:03:58,476 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 18:03:58,476 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 18:03:58,476 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 18:03:58,479 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:03:58 BasicIcfg
[2020-11-25 18:03:58,479 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 18:03:58,479 INFO  L168              Benchmark]: Toolchain (without parser) took 6729.55 ms. Allocated memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: 582.0 MB). Free memory was 935.2 MB in the beginning and 973.1 MB in the end (delta: -37.9 MB). Peak memory consumption was 544.0 MB. Max. memory is 15.3 GB.
[2020-11-25 18:03:58,480 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 18:03:58,480 INFO  L168              Benchmark]: Boogie Preprocessor took 103.62 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 18:03:58,481 INFO  L168              Benchmark]: UtopiaSpecLang took 61.10 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 18:03:58,481 INFO  L168              Benchmark]: Boogie Printer took 15.73 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 18:03:58,481 INFO  L168              Benchmark]: RCFGBuilder took 759.98 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 795.6 MB in the end (delta: 123.5 MB). Peak memory consumption was 123.5 MB. Max. memory is 15.3 GB.
[2020-11-25 18:03:58,482 INFO  L168              Benchmark]: UtopiaLTL2Aut took 43.49 ms. Allocated memory is still 1.0 GB. Free memory was 795.6 MB in the beginning and 792.0 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 18:03:58,482 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1361.07 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 199.2 MB). Free memory was 792.0 MB in the beginning and 997.3 MB in the end (delta: -205.3 MB). Peak memory consumption was 168.9 MB. Max. memory is 15.3 GB.
[2020-11-25 18:03:58,482 INFO  L168              Benchmark]: BlockEncodingV2 took 126.75 ms. Allocated memory is still 1.2 GB. Free memory was 997.3 MB in the beginning and 936.8 MB in the end (delta: 60.5 MB). Peak memory consumption was 60.5 MB. Max. memory is 15.3 GB.
[2020-11-25 18:03:58,483 INFO  L168              Benchmark]: BuchiAutomizer took 4254.87 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 382.7 MB). Free memory was 936.8 MB in the beginning and 973.1 MB in the end (delta: -36.3 MB). Peak memory consumption was 346.4 MB. Max. memory is 15.3 GB.
[2020-11-25 18:03:58,485 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3716 locations, 6393 edges
  - StatisticsResult: Encoded RCFG
    3635 locations, 6191 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 103.62 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 61.10 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.73 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 759.98 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 795.6 MB in the end (delta: 123.5 MB). Peak memory consumption was 123.5 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 43.49 ms. Allocated memory is still 1.0 GB. Free memory was 795.6 MB in the beginning and 792.0 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1361.07 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 199.2 MB). Free memory was 792.0 MB in the beginning and 997.3 MB in the end (delta: -205.3 MB). Peak memory consumption was 168.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 126.75 ms. Allocated memory is still 1.2 GB. Free memory was 997.3 MB in the beginning and 936.8 MB in the end (delta: 60.5 MB). Peak memory consumption was 60.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 4254.87 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 382.7 MB). Free memory was 936.8 MB in the beginning and 973.1 MB in the end (delta: -36.3 MB). Peak memory consumption was 346.4 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1562 locations, 1973 edges
  - StatisticsResult: BuchiProgram size
    3716 locations, 6393 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 17 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 4.2s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.6s. Construction of modules took 2.3s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1443 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2666 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 12538 SDtfs, 14426 SDslu, 17682 SDs, 0 SdLazy, 33171 SolverSat, 2182 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_HY0) ==> ( <>(fail_transferFrom_HY0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
