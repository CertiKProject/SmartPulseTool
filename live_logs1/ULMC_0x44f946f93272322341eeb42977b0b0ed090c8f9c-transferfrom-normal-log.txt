This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 07:31:07,109 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 07:31:07,111 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 07:31:07,121 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 07:31:07,121 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 07:31:07,122 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 07:31:07,123 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 07:31:07,124 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 07:31:07,126 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 07:31:07,127 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 07:31:07,127 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 07:31:07,127 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 07:31:07,128 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 07:31:07,129 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 07:31:07,130 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 07:31:07,130 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 07:31:07,131 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 07:31:07,132 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 07:31:07,133 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 07:31:07,134 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 07:31:07,135 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 07:31:07,135 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 07:31:07,137 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 07:31:07,137 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 07:31:07,137 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 07:31:07,138 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 07:31:07,138 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 07:31:07,139 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 07:31:07,139 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 07:31:07,139 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 07:31:07,140 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 07:31:07,140 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 07:31:07,140 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 07:31:07,141 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 07:31:07,142 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 07:31:07,142 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 07:31:07,142 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 07:31:07,142 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 07:31:07,143 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 07:31:07,143 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 07:31:07,144 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 07:31:07,144 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 07:31:07,151 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 07:31:07,151 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 07:31:07,152 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 07:31:07,152 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 07:31:07,152 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 07:31:07,152 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 07:31:07,152 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 07:31:07,153 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 07:31:07,153 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 07:31:07,153 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 07:31:07,153 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 07:31:07,153 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 07:31:07,153 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 07:31:07,153 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 07:31:07,153 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 07:31:07,153 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 07:31:07,154 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 07:31:07,154 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 07:31:07,154 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 07:31:07,154 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 07:31:07,154 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 07:31:07,154 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 07:31:07,154 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 07:31:07,154 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 07:31:07,154 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 07:31:07,154 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 07:31:07,178 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 07:31:07,189 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 07:31:07,190 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 07:31:07,191 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 07:31:07,192 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 07:31:07,192 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl
[2020-11-25 07:31:07,192 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl'
[2020-11-25 07:31:07,269 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 07:31:07,270 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 07:31:07,270 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 07:31:07,271 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 07:31:07,271 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 07:31:07,287 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:07" (1/1) ...
[2020-11-25 07:31:07,289 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:07" (1/1) ...
[2020-11-25 07:31:07,317 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:07" (1/1) ...
[2020-11-25 07:31:07,318 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:07" (1/1) ...
[2020-11-25 07:31:07,337 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:07" (1/1) ...
[2020-11-25 07:31:07,346 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:07" (1/1) ...
[2020-11-25 07:31:07,355 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:07" (1/1) ...
[2020-11-25 07:31:07,363 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 07:31:07,364 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 07:31:07,364 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 07:31:07,366 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 07:31:07,370 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:07" (1/1) ...
[2020-11-25 07:31:07,387 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 07:31:07,392 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 07:31:07,400 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 07:31:07,408 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=sender_s325 && p1!=recipient_s325 ) && ( p2!=sender_s325 || p3!=msg.sender ) ) && sender_s325!=recipient_s325 ) && amount_s325<=_balances_ERC20[this][sender_s325] ) && amount_s325<=_allowances_ERC20[this][sender_s325][msg.sender] ) && ( _balances_ERC20[this][recipient_s325] + amount_s325 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && amount_s325>=0 ) && amount_s325<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s325]>=0 ) && _balances_ERC20[this][recipient_s325]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][sender_s325]>=0 ) && _balances_ERC20[this][sender_s325]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowances_ERC20[this][sender_s325][msg.sender]>=0 ) && _allowances_ERC20[this][sender_s325][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[recipient_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IdentifierExpression[recipient_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IdentifierExpression[amount_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 07:31:07,410 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( __ret_0_==true && _balances_ERC20[this][sender_s325]==( ( old(_balances_ERC20[this][sender_s325]) ) - amount_s325 ) ) && _balances_ERC20[this][recipient_s325]==( ( old(_balances_ERC20[this][recipient_s325]) ) + amount_s325 ) ) && _allowances_ERC20[this][sender_s325][msg.sender]==( ( old(_allowances_ERC20[this][sender_s325][msg.sender]) ) - amount_s325 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this][p1]==( old(_balances_ERC20[this][p1]) ) ) && _allowances_ERC20[this][p2][p3]==( old(_allowances_ERC20[this][p2][p3]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[amount_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[amount_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[amount_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]]
[2020-11-25 07:31:07,416 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 07:31:07,416 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ERC200) ==> ( <>AP(success_transferFrom_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 07:31:07,424 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:31:07 PropertyContainer
[2020-11-25 07:31:07,424 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 07:31:07,424 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 07:31:07,424 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 07:31:07,424 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 07:31:07,425 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:07" (1/2) ...
[2020-11-25 07:31:07,425 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 07:31:07,426 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 07:31:07,438 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:31:07" (2/2) ...
[2020-11-25 07:31:07,438 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 07:31:07,438 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 07:31:07,439 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 07:31:07,439 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 07:31:07,439 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:07" (1/2) ...
[2020-11-25 07:31:07,491 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 07:31:07,491 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 07:31:07,492 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 07:31:07,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 07:31:07,492 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 07:31:07,492 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 07:31:07,492 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 07:31:07,492 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 07:31:07,492 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 07:31:07,492 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 07:31:07,493 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 07:31:07,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 07:31:07,493 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 07:31:07,493 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 07:31:07,494 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 07:31:07,494 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 07:31:07,494 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 07:31:07,494 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 07:31:07,494 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 07:31:07,494 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 07:31:07,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 07:31:07,494 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 07:31:07,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 07:31:07,495 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 07:31:07,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 07:31:07,495 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 07:31:07,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 07:31:07,495 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 07:31:07,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 07:31:07,495 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 07:31:07,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 07:31:07,495 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 07:31:07,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 07:31:07,496 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 07:31:07,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 07:31:07,496 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 07:31:07,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 07:31:07,496 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 07:31:07,496 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 07:31:07,496 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 07:31:07,496 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 07:31:07,496 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 07:31:07,497 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 07:31:07,497 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 07:31:07,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 07:31:07,497 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 07:31:07,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 07:31:07,497 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 07:31:07,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 07:31:07,497 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 07:31:07,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 07:31:07,498 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC_NoBaseCtor__success
[2020-11-25 07:31:07,498 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC
[2020-11-25 07:31:07,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC
[2020-11-25 07:31:07,498 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 07:31:07,498 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 07:31:07,498 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 07:31:07,498 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 07:31:07,498 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 07:31:07,498 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 07:31:07,499 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 07:31:07,499 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 07:31:07,499 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 07:31:07,499 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 07:31:07,499 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 07:31:07,499 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ULMC
[2020-11-25 07:31:07,499 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 07:31:07,499 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 07:31:07,499 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 07:31:07,499 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 07:31:07,500 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 07:31:07,500 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:07,500 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:07,500 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:07,500 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:07,500 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:07,500 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 07:31:07,500 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 07:31:07,500 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 07:31:07,501 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 07:31:07,501 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 07:31:07,501 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 07:31:07,501 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 07:31:07,501 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 07:31:07,501 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 07:31:07,501 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 07:31:07,501 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 07:31:07,501 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 07:31:07,501 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 07:31:07,502 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 07:31:07,502 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 07:31:07,502 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 07:31:07,502 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 07:31:07,502 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 07:31:07,502 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:31:07,502 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:31:07,502 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:31:07,502 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:31:07,502 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 07:31:07,503 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 07:31:07,503 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 07:31:07,503 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 07:31:07,503 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 07:31:07,503 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 07:31:07,503 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 07:31:07,503 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 07:31:07,503 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 07:31:07,503 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 07:31:07,503 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 07:31:07,504 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 07:31:07,504 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 07:31:07,504 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 07:31:07,504 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC_NoBaseCtor__fail
[2020-11-25 07:31:07,504 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC__success
[2020-11-25 07:31:07,504 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC__fail
[2020-11-25 07:31:07,504 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 07:31:07,504 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 07:31:07,505 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 07:31:07,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 07:31:07,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 07:31:07,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 07:31:07,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 07:31:07,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 07:31:07,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 07:31:07,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:07,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 07:31:07,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:07,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 07:31:07,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:07,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 07:31:07,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:07,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 07:31:07,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 07:31:07,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 07:31:07,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 07:31:07,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 07:31:07,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 07:31:07,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 07:31:07,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 07:31:07,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 07:31:07,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 07:31:07,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 07:31:07,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 07:31:07,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 07:31:07,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 07:31:07,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 07:31:07,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 07:31:07,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 07:31:07,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 07:31:07,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 07:31:07,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 07:31:07,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 07:31:07,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 07:31:07,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 07:31:07,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:31:07,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:31:07,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:31:07,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:31:07,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 07:31:07,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 07:31:07,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 07:31:07,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 07:31:07,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 07:31:07,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 07:31:07,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 07:31:07,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 07:31:07,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 07:31:07,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 07:31:07,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 07:31:07,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 07:31:07,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 07:31:07,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 07:31:07,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 07:31:07,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 07:31:07,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 07:31:07,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 07:31:07,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 07:31:07,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 07:31:07,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC_NoBaseCtor__fail
[2020-11-25 07:31:07,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC_NoBaseCtor__success
[2020-11-25 07:31:07,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC__fail
[2020-11-25 07:31:07,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC__success
[2020-11-25 07:31:07,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 07:31:07,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 07:31:07,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 07:31:07,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 07:31:07,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 07:31:07,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 07:31:07,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 07:31:07,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 07:31:07,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 07:31:07,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 07:31:07,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 07:31:07,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 07:31:07,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 07:31:07,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 07:31:07,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ULMC
[2020-11-25 07:31:07,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 07:31:07,512 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 07:31:07,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 07:31:07,838 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:31:07,839 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:31:07,839 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:31:07,958 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:31:08,195 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 07:31:08,196 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 07:31:08,198 INFO  L202        PluginConnector]: Adding new model ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:31:08 BoogieIcfgContainer
[2020-11-25 07:31:08,198 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:31:07" (2/2) ...
[2020-11-25 07:31:08,198 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 07:31:08,198 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@622b5730 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:31:08, skipping insertion in model container
[2020-11-25 07:31:08,198 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 07:31:08,199 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 07:31:08,199 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 07:31:08,200 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 07:31:08,200 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:07" (1/3) ...
[2020-11-25 07:31:08,201 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@3974957b and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:31:08, skipping insertion in model container
[2020-11-25 07:31:08,201 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:31:07" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 07:31:08,238 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:31:08 NWAContainer
[2020-11-25 07:31:08,238 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 07:31:08,239 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 07:31:08,239 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 07:31:08,239 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 07:31:08,240 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:31:08" (3/4) ...
[2020-11-25 07:31:08,241 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@2c4f8589 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:31:08, skipping insertion in model container
[2020-11-25 07:31:08,241 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:31:08" (4/4) ...
[2020-11-25 07:31:08,244 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 07:31:08,248 INFO  L110   BuchiProductObserver]: Initial RCFG 1276 locations, 1754 edges
[2020-11-25 07:31:08,248 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 07:31:08,259 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 07:31:09,537 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 07:31:09,543 INFO  L110   BuchiProductObserver]: BuchiProgram size 3188 locations, 5746 edges
[2020-11-25 07:31:09,543 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:31:09 BoogieIcfgContainer
[2020-11-25 07:31:09,543 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 07:31:09,543 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 07:31:09,543 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 07:31:09,545 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 07:31:09,546 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:31:09" (1/1) ...
[2020-11-25 07:31:09,634 INFO  L313           BlockEncoder]: Initial Icfg 3188 locations, 5746 edges
[2020-11-25 07:31:09,634 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 07:31:09,635 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 07:31:09,635 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 07:31:09,636 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 07:31:09,647 INFO  L70    emoveInfeasibleEdges]: Removed 102 edges and 13 locations because of local infeasibility
[2020-11-25 07:31:09,656 INFO  L70        RemoveSinkStates]: Removed 56 edges and 37 locations by removing sink states
[2020-11-25 07:31:09,668 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 07:31:09,672 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 07:31:09,675 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 07:31:09,676 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 07:31:09,681 INFO  L313           BlockEncoder]: Encoded RCFG 3120 locations, 5562 edges
[2020-11-25 07:31:09,682 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 07:31:09 BasicIcfg
[2020-11-25 07:31:09,682 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 07:31:09,682 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 07:31:09,682 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 07:31:09,685 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 07:31:09,685 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:31:09,685 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:31:07" (1/6) ...
[2020-11-25 07:31:09,687 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@59c6fca6 and model type ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:31:09, skipping insertion in model container
[2020-11-25 07:31:09,687 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:31:09,687 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:31:07" (2/6) ...
[2020-11-25 07:31:09,687 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@59c6fca6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:31:09, skipping insertion in model container
[2020-11-25 07:31:09,687 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:31:09,687 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:31:08" (3/6) ...
[2020-11-25 07:31:09,688 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@59c6fca6 and model type ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 07:31:09, skipping insertion in model container
[2020-11-25 07:31:09,688 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:31:09,688 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:31:08" (4/6) ...
[2020-11-25 07:31:09,688 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@59c6fca6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:31:09, skipping insertion in model container
[2020-11-25 07:31:09,688 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:31:09,688 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:31:09" (5/6) ...
[2020-11-25 07:31:09,688 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@59c6fca6 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 07:31:09, skipping insertion in model container
[2020-11-25 07:31:09,688 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:31:09,688 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 07:31:09" (6/6) ...
[2020-11-25 07:31:09,690 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_transferfrom-normal.bpl_BEv2
[2020-11-25 07:31:09,730 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 07:31:09,731 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 07:31:09,731 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 07:31:09,731 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 07:31:09,731 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 07:31:09,731 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 07:31:09,731 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 07:31:09,731 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 07:31:09,731 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 07:31:09,766 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3120 states.
[2020-11-25 07:31:09,820 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:31:09,820 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:31:09,820 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:31:09,830 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:31:09,830 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:31:09,830 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 07:31:09,830 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3120 states.
[2020-11-25 07:31:09,849 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:31:09,849 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:31:09,849 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:31:09,851 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:31:09,851 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3682]              assume null == 0;
[L3683]  CALL        call this := FreshRefGenerator__success();
[L1394]              havoc newRef;
[L1395]              assume Alloc[newRef] == false;
[L1396]              Alloc[newRef] := true;
[L1397]              assume newRef != null;
[L3683]  RET         call this := FreshRefGenerator__success();
[L3684]              assume now >= 0;
[L3685]              assume DType[this] == ULMC;
[L3686]              assume msgvalue_MSG == 0;
[L3687]              gas := gas - 53000;
[L3688]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L916]               havoc __exception;
[L917]               revert := false;
[L918]   COND FALSE  !(__exception)
[L939]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2360]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2361]  COND TRUE   revert
[L939]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L940]               assume !revert && gas >= 0;
[L3688]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3689]              assume !revert && gas >= 0;

Loop:
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND TRUE   choice == 11
[L3604]              gas := gas - 21000;
[L3605]  COND FALSE  !(gas >= 0)
[L3692]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:31:09,876 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:31:09,876 INFO  L82        PathProgramCache]: Analyzing trace with hash 2072008138, now seen corresponding path program 1 times
[2020-11-25 07:31:09,881 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:31:09,907 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:31:09,946 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 07:31:09,948 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:31:09,948 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 07:31:10,098 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:31:10,110 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 07:31:10,110 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 07:31:10,112 INFO  L87              Difference]: Start difference. First operand 3120 states. Second operand 4 states.
[2020-11-25 07:31:10,435 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:31:10,435 INFO  L93              Difference]: Finished difference Result 1801 states and 2080 transitions.
[2020-11-25 07:31:10,435 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 07:31:10,437 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1801 states and 2080 transitions.
[2020-11-25 07:31:10,451 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:31:10,470 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1801 states to 1801 states and 2080 transitions.
[2020-11-25 07:31:10,471 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 07:31:10,473 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 493
[2020-11-25 07:31:10,473 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1801 states and 2080 transitions.
[2020-11-25 07:31:10,480 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:31:10,480 INFO  L728         BuchiCegarLoop]: Abstraction has 1801 states and 2080 transitions.
[2020-11-25 07:31:10,498 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1801 states and 2080 transitions.
[2020-11-25 07:31:10,547 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1801 to 1801.
[2020-11-25 07:31:10,548 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1801 states.
[2020-11-25 07:31:10,553 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1801 states to 1801 states and 2080 transitions.
[2020-11-25 07:31:10,554 INFO  L751         BuchiCegarLoop]: Abstraction has 1801 states and 2080 transitions.
[2020-11-25 07:31:10,554 INFO  L631         BuchiCegarLoop]: Abstraction has 1801 states and 2080 transitions.
[2020-11-25 07:31:10,554 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 07:31:10,554 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1801 states and 2080 transitions.
[2020-11-25 07:31:10,561 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:31:10,561 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:31:10,561 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:31:10,564 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:31:10,564 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3682]              assume null == 0;
[L3683]  CALL        call this := FreshRefGenerator__success();
[L1394]              havoc newRef;
[L1395]              assume Alloc[newRef] == false;
[L1396]              Alloc[newRef] := true;
[L1397]              assume newRef != null;
[L3683]  RET         call this := FreshRefGenerator__success();
[L3684]              assume now >= 0;
[L3685]              assume DType[this] == ULMC;
[L3686]              assume msgvalue_MSG == 0;
[L3687]              gas := gas - 53000;
[L3688]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L916]               havoc __exception;
[L917]               revert := false;
[L918]   COND FALSE  !(__exception)
[L939]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2360]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2361]  COND TRUE   revert
[L939]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L940]               assume !revert && gas >= 0;
[L3688]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3689]              assume !revert && gas >= 0;
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND FALSE  !(choice == 7)
[L3635]  COND TRUE   choice == 6
[L3636]              gas := gas - 21000;
[L3637]  COND TRUE   gas >= 0
[L3638]              assume amount_s325 >= 0 && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3639]              assume msgvalue_MSG == 0;
[L3640]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L510]               havoc __exception;
[L511]               revert := false;
[L512]   COND FALSE  !(__exception)
[L533]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1790]  COND TRUE   DType[this] == ULMC
[L1791]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1958]              __var_4 := null;
[L1959]  COND TRUE   !(sender_s435 != null)
[L1960]              revert := true;
[L1791]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1792]  COND TRUE   revert
[L533]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L534]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][sender_s325] == old(_balances_ERC20[this][sender_s325]) - amount_s325) && _balances_ERC20[this][recipient_s325] == old(_balances_ERC20[this][recipient_s325]) + amount_s325) && _allowances_ERC20[this][sender_s325][msgsender_MSG] == old(_allowances_ERC20[this][sender_s325][msgsender_MSG]) - amount_s325) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L3640]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3692]  RET         call CorralChoice_ULMC(this);

Loop:
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND FALSE  !(choice == 7)
[L3635]  COND TRUE   choice == 6
[L3636]              gas := gas - 21000;
[L3637]  COND TRUE   gas >= 0
[L3638]              assume amount_s325 >= 0 && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3639]              assume msgvalue_MSG == 0;
[L3640]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L510]               havoc __exception;
[L511]               revert := false;
[L512]   COND FALSE  !(__exception)
[L533]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1790]  COND TRUE   DType[this] == ULMC
[L1791]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1958]              __var_4 := null;
[L1959]  COND TRUE   !(sender_s435 != null)
[L1960]              revert := true;
[L1791]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1792]  COND TRUE   revert
[L533]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L534]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][sender_s325] == old(_balances_ERC20[this][sender_s325]) - amount_s325) && _balances_ERC20[this][recipient_s325] == old(_balances_ERC20[this][recipient_s325]) + amount_s325) && _allowances_ERC20[this][sender_s325][msgsender_MSG] == old(_allowances_ERC20[this][sender_s325][msgsender_MSG]) - amount_s325) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L3640]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3692]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:31:10,568 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:31:10,569 INFO  L82        PathProgramCache]: Analyzing trace with hash -2088095161, now seen corresponding path program 1 times
[2020-11-25 07:31:10,570 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:31:10,580 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:31:10,608 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 07:31:10,608 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:31:10,608 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 07:31:10,610 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:31:10,610 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 07:31:10,610 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 07:31:10,610 INFO  L87              Difference]: Start difference. First operand 1801 states and 2080 transitions. cyclomatic complexity: 281 Second operand 3 states.
[2020-11-25 07:31:10,673 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:31:10,674 INFO  L93              Difference]: Finished difference Result 2399 states and 2802 transitions.
[2020-11-25 07:31:10,674 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 07:31:10,674 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2399 states and 2802 transitions.
[2020-11-25 07:31:10,687 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:31:10,701 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2399 states to 2399 states and 2802 transitions.
[2020-11-25 07:31:10,701 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 669
[2020-11-25 07:31:10,702 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 669
[2020-11-25 07:31:10,702 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2399 states and 2802 transitions.
[2020-11-25 07:31:10,706 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:31:10,707 INFO  L728         BuchiCegarLoop]: Abstraction has 2399 states and 2802 transitions.
[2020-11-25 07:31:10,709 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2399 states and 2802 transitions.
[2020-11-25 07:31:10,735 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2399 to 1993.
[2020-11-25 07:31:10,735 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1993 states.
[2020-11-25 07:31:10,739 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1993 states to 1993 states and 2310 transitions.
[2020-11-25 07:31:10,739 INFO  L751         BuchiCegarLoop]: Abstraction has 1993 states and 2310 transitions.
[2020-11-25 07:31:10,739 INFO  L631         BuchiCegarLoop]: Abstraction has 1993 states and 2310 transitions.
[2020-11-25 07:31:10,740 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 07:31:10,740 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1993 states and 2310 transitions.
[2020-11-25 07:31:10,745 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:31:10,746 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:31:10,746 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:31:10,748 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:31:10,748 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3682]              assume null == 0;
[L3683]  CALL        call this := FreshRefGenerator__success();
[L1394]              havoc newRef;
[L1395]              assume Alloc[newRef] == false;
[L1396]              Alloc[newRef] := true;
[L1397]              assume newRef != null;
[L3683]  RET         call this := FreshRefGenerator__success();
[L3684]              assume now >= 0;
[L3685]              assume DType[this] == ULMC;
[L3686]              assume msgvalue_MSG == 0;
[L3687]              gas := gas - 53000;
[L3688]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L916]               havoc __exception;
[L917]               revert := false;
[L918]   COND FALSE  !(__exception)
[L939]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2360]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2361]  COND FALSE  !(revert)
[L2364]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1628]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L1628]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1629]  COND FALSE  !(revert)
[L1632]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              assume msgsender_MSG != null;
[L1605]              Balance[this] := 0;
[L1606]              _balances_ERC20[this] := zeroRefintArr();
[L1607]              sum__balances0[this] := 0;
[L1608]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1609]              sum__allowances1[this] := 0;
[L1610]              _totalSupply_ERC20[this] := 0;
[L1632]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  COND FALSE  !(revert)
[L2364]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2365]  COND FALSE  !(revert)
[L2368]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2234]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2234]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2235]  COND FALSE  !(revert)
[L2238]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2209]              assume msgsender_MSG != null;
[L2210]              Balance[this] := 0;
[L2211]              _name_ERC20Detailed[this] := -930759658;
[L2212]              _symbol_ERC20Detailed[this] := -930759658;
[L2213]              _decimals_ERC20Detailed[this] := 0;
[L2215]              _name_ERC20Detailed[this] := name_s622;
[L2216]              _symbol_ERC20Detailed[this] := symbol_s622;
[L2217]              _decimals_ERC20Detailed[this] := decimals_s622;
[L2238]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2239]  COND FALSE  !(revert)
[L2368]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2369]  COND FALSE  !(revert)
[L2372]  CALL        call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2312]              assume msgsender_MSG != null;
[L2313]              Balance[this] := 0;
[L2315]  COND TRUE   DType[this] == ULMC
[L2316]  CALL        call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2316]  RET         call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2317]  COND FALSE  !(revert)
[L2323]              __var_17 := __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2324]  COND TRUE   DType[this] == ULMC
[L2325]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2014]              __var_8 := null;
[L2015]  COND TRUE   !(account_s478 != null)
[L2016]              revert := true;
[L2325]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2326]  COND TRUE   revert
[L2372]  RET         call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2373]  COND FALSE  !(revert)
[L939]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L940]               assume !revert && gas >= 0;
[L3688]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3689]              assume !revert && gas >= 0;
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND FALSE  !(choice == 7)
[L3635]  COND TRUE   choice == 6
[L3636]              gas := gas - 21000;
[L3637]  COND TRUE   gas >= 0
[L3638]              assume amount_s325 >= 0 && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3639]              assume msgvalue_MSG == 0;
[L3640]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L510]               havoc __exception;
[L511]               revert := false;
[L512]   COND FALSE  !(__exception)
[L533]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1790]  COND TRUE   DType[this] == ULMC
[L1791]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1958]              __var_4 := null;
[L1959]  COND TRUE   !(sender_s435 != null)
[L1960]              revert := true;
[L1791]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1792]  COND TRUE   revert
[L533]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L534]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][sender_s325] == old(_balances_ERC20[this][sender_s325]) - amount_s325) && _balances_ERC20[this][recipient_s325] == old(_balances_ERC20[this][recipient_s325]) + amount_s325) && _allowances_ERC20[this][sender_s325][msgsender_MSG] == old(_allowances_ERC20[this][sender_s325][msgsender_MSG]) - amount_s325) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L3640]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3692]  RET         call CorralChoice_ULMC(this);

Loop:
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND FALSE  !(choice == 7)
[L3635]  COND TRUE   choice == 6
[L3636]              gas := gas - 21000;
[L3637]  COND TRUE   gas >= 0
[L3638]              assume amount_s325 >= 0 && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3639]              assume msgvalue_MSG == 0;
[L3640]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L510]               havoc __exception;
[L511]               revert := false;
[L512]   COND FALSE  !(__exception)
[L533]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1790]  COND TRUE   DType[this] == ULMC
[L1791]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1958]              __var_4 := null;
[L1959]  COND TRUE   !(sender_s435 != null)
[L1960]              revert := true;
[L1791]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1792]  COND TRUE   revert
[L533]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L534]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][sender_s325] == old(_balances_ERC20[this][sender_s325]) - amount_s325) && _balances_ERC20[this][recipient_s325] == old(_balances_ERC20[this][recipient_s325]) + amount_s325) && _allowances_ERC20[this][sender_s325][msgsender_MSG] == old(_allowances_ERC20[this][sender_s325][msgsender_MSG]) - amount_s325) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L3640]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3692]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:31:10,752 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:31:10,753 INFO  L82        PathProgramCache]: Analyzing trace with hash -1573297068, now seen corresponding path program 1 times
[2020-11-25 07:31:10,753 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:31:10,767 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:31:10,819 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 14 refuted. 0 times theorem prover too weak. 16 trivial. 0 not checked.
[2020-11-25 07:31:10,819 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 07:31:10,819 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 07:31:10,820 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:31:10,820 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 07:31:10,820 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 07:31:10,820 INFO  L87              Difference]: Start difference. First operand 1993 states and 2310 transitions. cyclomatic complexity: 319 Second operand 7 states.
[2020-11-25 07:31:10,862 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:31:10,863 INFO  L93              Difference]: Finished difference Result 2001 states and 2317 transitions.
[2020-11-25 07:31:10,863 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 07:31:10,863 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2001 states and 2317 transitions.
[2020-11-25 07:31:10,871 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:31:10,880 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2001 states to 1992 states and 2308 transitions.
[2020-11-25 07:31:10,880 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 549
[2020-11-25 07:31:10,881 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 549
[2020-11-25 07:31:10,881 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1992 states and 2308 transitions.
[2020-11-25 07:31:10,883 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:31:10,884 INFO  L728         BuchiCegarLoop]: Abstraction has 1992 states and 2308 transitions.
[2020-11-25 07:31:10,886 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1992 states and 2308 transitions.
[2020-11-25 07:31:10,903 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1992 to 1992.
[2020-11-25 07:31:10,903 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1992 states.
[2020-11-25 07:31:10,907 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1992 states to 1992 states and 2308 transitions.
[2020-11-25 07:31:10,907 INFO  L751         BuchiCegarLoop]: Abstraction has 1992 states and 2308 transitions.
[2020-11-25 07:31:10,908 INFO  L631         BuchiCegarLoop]: Abstraction has 1992 states and 2308 transitions.
[2020-11-25 07:31:10,908 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 07:31:10,908 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1992 states and 2308 transitions.
[2020-11-25 07:31:10,913 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:31:10,913 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:31:10,913 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:31:10,915 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:31:10,915 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3682]              assume null == 0;
[L3683]  CALL        call this := FreshRefGenerator__success();
[L1394]              havoc newRef;
[L1395]              assume Alloc[newRef] == false;
[L1396]              Alloc[newRef] := true;
[L1397]              assume newRef != null;
[L3683]  RET         call this := FreshRefGenerator__success();
[L3684]              assume now >= 0;
[L3685]              assume DType[this] == ULMC;
[L3686]              assume msgvalue_MSG == 0;
[L3687]              gas := gas - 53000;
[L3688]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L916]               havoc __exception;
[L917]               revert := false;
[L918]   COND FALSE  !(__exception)
[L939]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2360]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2361]  COND FALSE  !(revert)
[L2364]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1628]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L1628]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1629]  COND FALSE  !(revert)
[L1632]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              assume msgsender_MSG != null;
[L1605]              Balance[this] := 0;
[L1606]              _balances_ERC20[this] := zeroRefintArr();
[L1607]              sum__balances0[this] := 0;
[L1608]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1609]              sum__allowances1[this] := 0;
[L1610]              _totalSupply_ERC20[this] := 0;
[L1632]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  COND FALSE  !(revert)
[L2364]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2365]  COND FALSE  !(revert)
[L2368]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2234]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2234]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2235]  COND FALSE  !(revert)
[L2238]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2209]              assume msgsender_MSG != null;
[L2210]              Balance[this] := 0;
[L2211]              _name_ERC20Detailed[this] := -930759658;
[L2212]              _symbol_ERC20Detailed[this] := -930759658;
[L2213]              _decimals_ERC20Detailed[this] := 0;
[L2215]              _name_ERC20Detailed[this] := name_s622;
[L2216]              _symbol_ERC20Detailed[this] := symbol_s622;
[L2217]              _decimals_ERC20Detailed[this] := decimals_s622;
[L2238]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2239]  COND FALSE  !(revert)
[L2368]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2369]  COND FALSE  !(revert)
[L2372]  CALL        call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2312]              assume msgsender_MSG != null;
[L2313]              Balance[this] := 0;
[L2315]  COND TRUE   DType[this] == ULMC
[L2316]  CALL        call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2316]  RET         call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2317]  COND FALSE  !(revert)
[L2323]              __var_17 := __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2324]  COND TRUE   DType[this] == ULMC
[L2325]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2014]              __var_8 := null;
[L2015]  COND FALSE  !(!(account_s478 != null))
[L2019]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L1447]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1448]  COND TRUE   !(c_s26 >= a_s26)
[L1449]              revert := true;
[L2019]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L2020]  COND TRUE   revert
[L2325]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2326]  COND TRUE   revert
[L2372]  RET         call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2373]  COND FALSE  !(revert)
[L939]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L940]               assume !revert && gas >= 0;
[L3688]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3689]              assume !revert && gas >= 0;
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND FALSE  !(choice == 7)
[L3635]  COND TRUE   choice == 6
[L3636]              gas := gas - 21000;
[L3637]  COND TRUE   gas >= 0
[L3638]              assume amount_s325 >= 0 && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3639]              assume msgvalue_MSG == 0;
[L3640]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L510]               havoc __exception;
[L511]               revert := false;
[L512]   COND FALSE  !(__exception)
[L533]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1790]  COND TRUE   DType[this] == ULMC
[L1791]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1958]              __var_4 := null;
[L1959]  COND TRUE   !(sender_s435 != null)
[L1960]              revert := true;
[L1791]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1792]  COND TRUE   revert
[L533]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L534]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][sender_s325] == old(_balances_ERC20[this][sender_s325]) - amount_s325) && _balances_ERC20[this][recipient_s325] == old(_balances_ERC20[this][recipient_s325]) + amount_s325) && _allowances_ERC20[this][sender_s325][msgsender_MSG] == old(_allowances_ERC20[this][sender_s325][msgsender_MSG]) - amount_s325) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L3640]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3692]  RET         call CorralChoice_ULMC(this);

Loop:
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND FALSE  !(choice == 7)
[L3635]  COND TRUE   choice == 6
[L3636]              gas := gas - 21000;
[L3637]  COND TRUE   gas >= 0
[L3638]              assume amount_s325 >= 0 && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3639]              assume msgvalue_MSG == 0;
[L3640]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L510]               havoc __exception;
[L511]               revert := false;
[L512]   COND FALSE  !(__exception)
[L533]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1790]  COND TRUE   DType[this] == ULMC
[L1791]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1958]              __var_4 := null;
[L1959]  COND TRUE   !(sender_s435 != null)
[L1960]              revert := true;
[L1791]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1792]  COND TRUE   revert
[L533]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L534]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][sender_s325] == old(_balances_ERC20[this][sender_s325]) - amount_s325) && _balances_ERC20[this][recipient_s325] == old(_balances_ERC20[this][recipient_s325]) + amount_s325) && _allowances_ERC20[this][sender_s325][msgsender_MSG] == old(_allowances_ERC20[this][sender_s325][msgsender_MSG]) - amount_s325) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L3640]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3692]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:31:10,919 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:31:10,919 INFO  L82        PathProgramCache]: Analyzing trace with hash -2006607971, now seen corresponding path program 1 times
[2020-11-25 07:31:10,920 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:31:10,930 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:31:10,992 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 30 trivial. 0 not checked.
[2020-11-25 07:31:10,993 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:31:10,993 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 07:31:10,993 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:31:10,994 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 07:31:10,994 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 07:31:10,994 INFO  L87              Difference]: Start difference. First operand 1992 states and 2308 transitions. cyclomatic complexity: 318 Second operand 3 states.
[2020-11-25 07:31:11,042 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:31:11,042 INFO  L93              Difference]: Finished difference Result 2398 states and 2712 transitions.
[2020-11-25 07:31:11,042 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 07:31:11,042 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2398 states and 2712 transitions.
[2020-11-25 07:31:11,055 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:31:11,067 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2398 states to 2225 states and 2508 transitions.
[2020-11-25 07:31:11,067 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 619
[2020-11-25 07:31:11,068 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 637
[2020-11-25 07:31:11,068 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2225 states and 2508 transitions.
[2020-11-25 07:31:11,071 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:31:11,072 INFO  L728         BuchiCegarLoop]: Abstraction has 2225 states and 2508 transitions.
[2020-11-25 07:31:11,074 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2225 states and 2508 transitions.
[2020-11-25 07:31:11,097 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2225 to 1871.
[2020-11-25 07:31:11,097 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1871 states.
[2020-11-25 07:31:11,100 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1871 states to 1871 states and 2068 transitions.
[2020-11-25 07:31:11,101 INFO  L751         BuchiCegarLoop]: Abstraction has 1871 states and 2068 transitions.
[2020-11-25 07:31:11,101 INFO  L631         BuchiCegarLoop]: Abstraction has 1871 states and 2068 transitions.
[2020-11-25 07:31:11,101 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 07:31:11,101 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1871 states and 2068 transitions.
[2020-11-25 07:31:11,107 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:31:11,107 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:31:11,107 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:31:11,109 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:31:11,109 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3682]              assume null == 0;
[L3683]  CALL        call this := FreshRefGenerator__success();
[L1394]              havoc newRef;
[L1395]              assume Alloc[newRef] == false;
[L1396]              Alloc[newRef] := true;
[L1397]              assume newRef != null;
[L3683]  RET         call this := FreshRefGenerator__success();
[L3684]              assume now >= 0;
[L3685]              assume DType[this] == ULMC;
[L3686]              assume msgvalue_MSG == 0;
[L3687]              gas := gas - 53000;
[L3688]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L916]               havoc __exception;
[L917]               revert := false;
[L918]   COND FALSE  !(__exception)
[L939]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2360]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2361]  COND FALSE  !(revert)
[L2364]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1628]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L1628]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1629]  COND FALSE  !(revert)
[L1632]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              assume msgsender_MSG != null;
[L1605]              Balance[this] := 0;
[L1606]              _balances_ERC20[this] := zeroRefintArr();
[L1607]              sum__balances0[this] := 0;
[L1608]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1609]              sum__allowances1[this] := 0;
[L1610]              _totalSupply_ERC20[this] := 0;
[L1632]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  COND FALSE  !(revert)
[L2364]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2365]  COND FALSE  !(revert)
[L2368]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2234]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2234]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2235]  COND FALSE  !(revert)
[L2238]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2209]              assume msgsender_MSG != null;
[L2210]              Balance[this] := 0;
[L2211]              _name_ERC20Detailed[this] := -930759658;
[L2212]              _symbol_ERC20Detailed[this] := -930759658;
[L2213]              _decimals_ERC20Detailed[this] := 0;
[L2215]              _name_ERC20Detailed[this] := name_s622;
[L2216]              _symbol_ERC20Detailed[this] := symbol_s622;
[L2217]              _decimals_ERC20Detailed[this] := decimals_s622;
[L2238]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2239]  COND FALSE  !(revert)
[L2368]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2369]  COND FALSE  !(revert)
[L2372]  CALL        call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2312]              assume msgsender_MSG != null;
[L2313]              Balance[this] := 0;
[L2315]  COND TRUE   DType[this] == ULMC
[L2316]  CALL        call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2316]  RET         call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2317]  COND FALSE  !(revert)
[L2323]              __var_17 := __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2324]  COND TRUE   DType[this] == ULMC
[L2325]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2014]              __var_8 := null;
[L2015]  COND FALSE  !(!(account_s478 != null))
[L2019]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L1447]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1448]  COND FALSE  !(!(c_s26 >= a_s26))
[L1452]              __ret_0_ := c_s26;
[L2019]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L2020]  COND FALSE  !(revert)
[L2023]              _totalSupply_ERC20[this] := __var_9;
[L2024]  CALL        call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s478], amount_s478);
[L1447]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1448]  COND FALSE  !(!(c_s26 >= a_s26))
[L1452]              __ret_0_ := c_s26;
[L2024]  RET         call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s478], amount_s478);
[L2025]  COND FALSE  !(revert)
[L2028]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s478];
[L2029]              _balances_ERC20[this][account_s478] := __var_10;
[L2030]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s478];
[L2031]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2325]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2326]  COND FALSE  !(revert)
[L2372]  RET         call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2373]  COND FALSE  !(revert)
[L939]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L940]               assume !revert && gas >= 0;
[L3688]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3689]              assume !revert && gas >= 0;
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND FALSE  !(choice == 7)
[L3635]  COND TRUE   choice == 6
[L3636]              gas := gas - 21000;
[L3637]  COND TRUE   gas >= 0
[L3638]              assume amount_s325 >= 0 && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3639]              assume msgvalue_MSG == 0;
[L3640]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L510]               havoc __exception;
[L511]               revert := false;
[L512]   COND TRUE   __exception
[L513]               __tmp__Balance := Balance;
[L514]               __tmp__DType := DType;
[L515]               __tmp__Alloc := Alloc;
[L516]               __tmp__balance_ADDR := balance_ADDR;
[L517]               __tmp__M_Ref_int := M_Ref_int;
[L518]               __tmp__sum__balances0 := sum__balances0;
[L519]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L520]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L521]               __tmp__sum__allowances1 := sum__allowances1;
[L522]               __tmp__Length := Length;
[L523]               __tmp__now := now;
[L524]               __tmp___balances_ERC20 := _balances_ERC20;
[L525]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L526]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L527]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L528]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L529]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L530]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1753]  COND TRUE   __tmp__DType[this] == ULMC
[L1754]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1926]              __var_4 := null;
[L1927]  COND TRUE   !(sender_s435 != null)
[L1928]              revert := true;
[L1754]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1755]  COND TRUE   revert
[L530]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L531]               assume revert || gas < 0;
[L3640]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3692]  RET         call CorralChoice_ULMC(this);

Loop:
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND FALSE  !(choice == 7)
[L3635]  COND TRUE   choice == 6
[L3636]              gas := gas - 21000;
[L3637]  COND TRUE   gas >= 0
[L3638]              assume amount_s325 >= 0 && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3639]              assume msgvalue_MSG == 0;
[L3640]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L510]               havoc __exception;
[L511]               revert := false;
[L512]   COND TRUE   __exception
[L513]               __tmp__Balance := Balance;
[L514]               __tmp__DType := DType;
[L515]               __tmp__Alloc := Alloc;
[L516]               __tmp__balance_ADDR := balance_ADDR;
[L517]               __tmp__M_Ref_int := M_Ref_int;
[L518]               __tmp__sum__balances0 := sum__balances0;
[L519]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L520]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L521]               __tmp__sum__allowances1 := sum__allowances1;
[L522]               __tmp__Length := Length;
[L523]               __tmp__now := now;
[L524]               __tmp___balances_ERC20 := _balances_ERC20;
[L525]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L526]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L527]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L528]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L529]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L530]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1753]  COND TRUE   __tmp__DType[this] == ULMC
[L1754]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1926]              __var_4 := null;
[L1927]  COND TRUE   !(sender_s435 != null)
[L1928]              revert := true;
[L1754]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1755]  COND TRUE   revert
[L530]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L531]               assume revert || gas < 0;
[L3640]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3692]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:31:11,114 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:31:11,114 INFO  L82        PathProgramCache]: Analyzing trace with hash 1934711906, now seen corresponding path program 1 times
[2020-11-25 07:31:11,115 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:31:11,172 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:31:11,212 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:31:11,288 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:31:11,288 INFO  L82        PathProgramCache]: Analyzing trace with hash 2012597840, now seen corresponding path program 1 times
[2020-11-25 07:31:11,289 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:31:11,296 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:31:11,304 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:31:11,321 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:31:11,321 INFO  L82        PathProgramCache]: Analyzing trace with hash -382363279, now seen corresponding path program 1 times
[2020-11-25 07:31:11,322 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:31:11,358 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:31:11,413 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 07:31:11,656 WARN  L188               SmtUtils]: Spent 141.00 ms on a formula simplification. DAG size of input: 160 DAG size of output: 153
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1759 to 3517
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
[2020-11-25 07:31:11,888 WARN  L188               SmtUtils]: Spent 193.00 ms on a formula simplification. DAG size of input: 111 DAG size of output: 105
[2020-11-25 07:31:12,073 WARN  L188               SmtUtils]: Spent 183.00 ms on a formula simplification that was a NOOP. DAG size: 245
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3019 to 6037
[2020-11-25 07:31:12,555 WARN  L188               SmtUtils]: Spent 469.00 ms on a formula simplification. DAG size of input: 205 DAG size of output: 205
[2020-11-25 07:31:13,255 WARN  L188               SmtUtils]: Spent 696.00 ms on a formula simplification. DAG size of input: 263 DAG size of output: 244
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.003s / 0.006s total
Resizing node table from 12073 to 24137
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7027 to 14051
[2020-11-25 07:31:13,451 WARN  L188               SmtUtils]: Spent 165.00 ms on a formula simplification. DAG size of input: 155 DAG size of output: 149
[2020-11-25 07:31:13,588 WARN  L188               SmtUtils]: Spent 135.00 ms on a formula simplification that was a NOOP. DAG size: 284
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 07:31:13,942 WARN  L188               SmtUtils]: Spent 346.00 ms on a formula simplification. DAG size of input: 227 DAG size of output: 227
[2020-11-25 07:31:14,096 WARN  L188               SmtUtils]: Spent 152.00 ms on a formula simplification that was a NOOP. DAG size: 227
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 07:31:14,344 WARN  L188               SmtUtils]: Spent 234.00 ms on a formula simplification. DAG size of input: 177 DAG size of output: 156
[2020-11-25 07:31:14,352 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 07:31:14,935 WARN  L188               SmtUtils]: Spent 166.00 ms on a formula simplification. DAG size of input: 173 DAG size of output: 164
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
[2020-11-25 07:31:15,835 WARN  L188               SmtUtils]: Spent 399.00 ms on a formula simplification. DAG size of input: 205 DAG size of output: 205
[2020-11-25 07:31:16,411 WARN  L188               SmtUtils]: Spent 574.00 ms on a formula simplification. DAG size of input: 262 DAG size of output: 244
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 07:31:16,639 WARN  L188               SmtUtils]: Spent 212.00 ms on a formula simplification. DAG size of input: 158 DAG size of output: 152
[2020-11-25 07:31:16,828 WARN  L188               SmtUtils]: Spent 188.00 ms on a formula simplification that was a NOOP. DAG size: 287
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-25 07:31:17,207 WARN  L188               SmtUtils]: Spent 368.00 ms on a formula simplification. DAG size of input: 236 DAG size of output: 229
[2020-11-25 07:31:18,088 WARN  L188               SmtUtils]: Spent 879.00 ms on a formula simplification. DAG size of input: 404 DAG size of output: 388
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-25 07:31:18,589 WARN  L188               SmtUtils]: Spent 479.00 ms on a formula simplification. DAG size of input: 214 DAG size of output: 187
[2020-11-25 07:31:18,799 WARN  L188               SmtUtils]: Spent 198.00 ms on a formula simplification that was a NOOP. DAG size: 283
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 07:31:19,549 WARN  L188               SmtUtils]: Spent 732.00 ms on a formula simplification. DAG size of input: 198 DAG size of output: 187
[2020-11-25 07:31:20,033 WARN  L188               SmtUtils]: Spent 483.00 ms on a formula simplification. DAG size of input: 285 DAG size of output: 284
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12541 to 25073
Garbage collection #9: 25073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 25073 to 50131
[2020-11-25 07:31:21,160 WARN  L188               SmtUtils]: Spent 1.12 s on a formula simplification. DAG size of input: 287 DAG size of output: 279
[2020-11-25 07:31:21,175 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:31:21,193 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:31:21,201 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 07:31:21 BasicIcfg
[2020-11-25 07:31:21,202 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 07:31:21,202 INFO  L168              Benchmark]: Toolchain (without parser) took 13932.41 ms. Allocated memory was 1.0 GB in the beginning and 2.2 GB in the end (delta: 1.2 GB). Free memory was 935.2 MB in the beginning and 1.9 GB in the end (delta: -997.4 MB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
[2020-11-25 07:31:21,202 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 07:31:21,203 INFO  L168              Benchmark]: Boogie Preprocessor took 93.36 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:31:21,203 INFO  L168              Benchmark]: UtopiaSpecLang took 59.94 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 07:31:21,203 INFO  L168              Benchmark]: Boogie Printer took 13.96 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 07:31:21,203 INFO  L168              Benchmark]: RCFGBuilder took 759.92 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 811.7 MB in the end (delta: 102.0 MB). Peak memory consumption was 102.0 MB. Max. memory is 15.3 GB.
[2020-11-25 07:31:21,204 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.81 ms. Allocated memory is still 1.0 GB. Free memory was 811.7 MB in the beginning and 802.8 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 07:31:21,204 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1304.49 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 202.9 MB). Free memory was 802.8 MB in the beginning and 1.1 GB in the end (delta: -309.0 MB). Peak memory consumption was 182.6 MB. Max. memory is 15.3 GB.
[2020-11-25 07:31:21,204 INFO  L168              Benchmark]: BlockEncodingV2 took 138.43 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 60.1 MB). Peak memory consumption was 60.1 MB. Max. memory is 15.3 GB.
[2020-11-25 07:31:21,204 INFO  L168              Benchmark]: BuchiAutomizer took 11519.46 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 963.6 MB). Free memory was 1.1 GB in the beginning and 1.9 GB in the end (delta: -881.0 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
[2020-11-25 07:31:21,207 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3188 locations, 5746 edges
  - StatisticsResult: Encoded RCFG
    3120 locations, 5562 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 93.36 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 59.94 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 13.96 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 759.92 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 811.7 MB in the end (delta: 102.0 MB). Peak memory consumption was 102.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.81 ms. Allocated memory is still 1.0 GB. Free memory was 811.7 MB in the beginning and 802.8 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1304.49 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 202.9 MB). Free memory was 802.8 MB in the beginning and 1.1 GB in the end (delta: -309.0 MB). Peak memory consumption was 182.6 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 138.43 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 60.1 MB). Peak memory consumption was 60.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 11519.46 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 963.6 MB). Free memory was 1.1 GB in the beginning and 1.9 GB in the end (delta: -881.0 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1276 locations, 1754 edges
  - StatisticsResult: BuchiProgram size
    3188 locations, 5746 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 7 locations. The remainder module has 1871 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 11.4s and 5 iterations.  TraceHistogramMax:3. Analysis of lassos took 10.5s. Construction of modules took 0.2s. BÃ¼chi inclusion checks took 0.2s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 760 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 1993 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 8772 SDtfs, 4581 SDslu, 14413 SDs, 0 SdLazy, 926 SolverSat, 1220 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.2s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115787428790991736226411098954254884178879543113989747471779898303288945549144) = (new ULMC)({from : 115787428790991736226411098954254884178879543113989747471779898303288945549149});
[L916]               havoc __exception;
[L917]               revert := false;
[L918]   COND FALSE  !(__exception)
[L939]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2360]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2361]  COND FALSE  !(revert)
[L2364]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1628]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L1628]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1629]  COND FALSE  !(revert)
[L1632]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              assume msgsender_MSG != null;
[L1605]              Balance[this] := 0;
[L1606]              _balances_ERC20[this] := zeroRefintArr();
[L1607]              sum__balances0[this] := 0;
[L1608]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1609]              sum__allowances1[this] := 0;
[L1610]              _totalSupply_ERC20[this] := 0;
[L1632]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  COND FALSE  !(revert)
[L2364]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2365]  COND FALSE  !(revert)
[L2368]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2234]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2234]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2235]  COND FALSE  !(revert)
[L2238]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2209]              assume msgsender_MSG != null;
[L2210]              Balance[this] := 0;
[L2211]              _name_ERC20Detailed[this] := -930759658;
[L2212]              _symbol_ERC20Detailed[this] := -930759658;
[L2213]              _decimals_ERC20Detailed[this] := 0;
[L2215]              _name_ERC20Detailed[this] := name_s622;
[L2216]              _symbol_ERC20Detailed[this] := symbol_s622;
[L2217]              _decimals_ERC20Detailed[this] := decimals_s622;
[L2238]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2239]  COND FALSE  !(revert)
[L2368]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2369]  COND FALSE  !(revert)
[L2372]  CALL        call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2312]              assume msgsender_MSG != null;
[L2313]              Balance[this] := 0;
[L2315]  COND TRUE   DType[this] == ULMC
[L2316]  CALL        call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2316]  RET         call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2317]  COND FALSE  !(revert)
[L2323]              __var_17 := __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2324]  COND TRUE   DType[this] == ULMC
[L2325]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2014]              __var_8 := null;
[L2015]  COND FALSE  !(!(account_s478 != null))
[L2019]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L1447]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1448]  COND FALSE  !(!(c_s26 >= a_s26))
[L1452]              __ret_0_ := c_s26;
[L2019]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L2020]  COND FALSE  !(revert)
[L2023]              _totalSupply_ERC20[this] := __var_9;
[L2024]  CALL        call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s478], amount_s478);
[L1447]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1448]  COND FALSE  !(!(c_s26 >= a_s26))
[L1452]              __ret_0_ := c_s26;
[L2024]  RET         call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s478], amount_s478);
[L2025]  COND FALSE  !(revert)
[L2028]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s478];
[L2029]              _balances_ERC20[this][account_s478] := __var_10;
[L2030]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s478];
[L2031]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2325]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2326]  COND FALSE  !(revert)
[L2372]  RET         call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2373]  COND FALSE  !(revert)
[L939]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L940]               assume !revert && gas >= 0;
[L3688]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
ERC20(115787428790991736226411098954254884178879543113989747471779898303288945549144).transferFrom~address~address~uint256.gas(3979002)({from : 115787428790991736226411098954254884178879543113989747471779898303288945549138, sender : 0, recipient : 115787428790991736226411098954254884178879543113989747471779898303288945549143, amount : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_ERC200 := true;
[L3]                call_transferFrom_ERC200 := false;
[L3]                revert := revert_hold;
[L510]              havoc __exception;
[L511]              revert := false;
[L512]   COND TRUE  __exception
[L513]              __tmp__Balance := Balance;
[L514]              __tmp__DType := DType;
[L515]              __tmp__Alloc := Alloc;
[L516]              __tmp__balance_ADDR := balance_ADDR;
[L517]              __tmp__M_Ref_int := M_Ref_int;
[L518]              __tmp__sum__balances0 := sum__balances0;
[L519]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L520]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L521]              __tmp__sum__allowances1 := sum__allowances1;
[L522]              __tmp__Length := Length;
[L523]              __tmp__now := now;
[L524]              __tmp___balances_ERC20 := _balances_ERC20;
[L525]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L526]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L527]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L528]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L529]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L530]   CALL       call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1753]  COND TRUE  __tmp__DType[this] == ULMC
[L1754]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1926]             __var_4 := null;
[L1927]  COND TRUE  !(sender_s435 != null)
[L1928]             revert := true;
[L1754]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1755]  COND TRUE  revert
[L530]   RET        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L531]              assume revert || gas < 0;
[L3640]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);

Loop:
ERC20(115787428790991736226411098954254884178879543113989747471779898303288945549144).transferFrom~address~address~uint256.gas(3979001)({from : 115787428790991736226411098954254884178879543113989747471779898303288945549148, sender : 0, recipient : 115787428790991736226411098954254884178879543113989747471779898303288945549149, amount : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_ERC200 := true;
[L3]                call_transferFrom_ERC200 := false;
[L3]                revert := revert_hold;
[L510]              havoc __exception;
[L511]              revert := false;
[L512]   COND TRUE  __exception
[L513]              __tmp__Balance := Balance;
[L514]              __tmp__DType := DType;
[L515]              __tmp__Alloc := Alloc;
[L516]              __tmp__balance_ADDR := balance_ADDR;
[L517]              __tmp__M_Ref_int := M_Ref_int;
[L518]              __tmp__sum__balances0 := sum__balances0;
[L519]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L520]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L521]              __tmp__sum__allowances1 := sum__allowances1;
[L522]              __tmp__Length := Length;
[L523]              __tmp__now := now;
[L524]              __tmp___balances_ERC20 := _balances_ERC20;
[L525]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L526]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L527]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L528]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L529]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L530]   CALL       call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1753]  COND TRUE  __tmp__DType[this] == ULMC
[L1754]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1926]             __var_4 := null;
[L1927]  COND TRUE  !(sender_s435 != null)
[L1928]             revert := true;
[L1754]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L1755]  COND TRUE  revert
[L530]   RET        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L531]              assume revert || gas < 0;
[L3640]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
