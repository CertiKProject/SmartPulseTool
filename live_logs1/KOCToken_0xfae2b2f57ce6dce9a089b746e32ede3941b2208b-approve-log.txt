This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 20:10:55,738 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 20:10:55,739 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 20:10:55,750 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 20:10:55,750 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 20:10:55,751 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 20:10:55,752 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 20:10:55,753 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 20:10:55,755 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 20:10:55,756 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 20:10:55,756 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 20:10:55,756 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 20:10:55,757 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 20:10:55,758 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 20:10:55,759 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 20:10:55,760 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 20:10:55,760 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 20:10:55,761 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 20:10:55,763 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 20:10:55,764 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 20:10:55,765 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 20:10:55,766 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 20:10:55,768 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 20:10:55,768 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 20:10:55,768 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 20:10:55,768 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 20:10:55,769 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 20:10:55,769 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 20:10:55,770 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 20:10:55,770 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 20:10:55,770 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 20:10:55,771 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 20:10:55,771 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 20:10:55,772 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 20:10:55,773 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 20:10:55,773 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 20:10:55,773 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 20:10:55,773 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 20:10:55,774 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 20:10:55,774 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 20:10:55,775 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 20:10:55,775 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 20:10:55,783 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 20:10:55,783 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 20:10:55,784 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 20:10:55,784 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 20:10:55,784 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 20:10:55,784 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 20:10:55,784 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 20:10:55,785 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 20:10:55,785 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 20:10:55,785 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 20:10:55,785 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 20:10:55,785 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 20:10:55,785 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 20:10:55,785 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 20:10:55,785 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 20:10:55,786 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 20:10:55,786 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 20:10:55,786 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 20:10:55,786 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 20:10:55,786 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 20:10:55,786 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 20:10:55,786 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 20:10:55,786 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 20:10:55,787 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 20:10:55,787 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 20:10:55,787 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 20:10:55,808 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 20:10:55,819 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 20:10:55,821 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 20:10:55,822 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 20:10:55,823 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 20:10:55,823 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl
[2020-11-24 20:10:55,824 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl'
[2020-11-24 20:10:55,927 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 20:10:55,928 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 20:10:55,929 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 20:10:55,929 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 20:10:55,929 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 20:10:55,946 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:55" (1/1) ...
[2020-11-24 20:10:55,948 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:55" (1/1) ...
[2020-11-24 20:10:55,988 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:55" (1/1) ...
[2020-11-24 20:10:55,989 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:55" (1/1) ...
[2020-11-24 20:10:56,015 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:55" (1/1) ...
[2020-11-24 20:10:56,029 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:55" (1/1) ...
[2020-11-24 20:10:56,042 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:55" (1/1) ...
[2020-11-24 20:10:56,056 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 20:10:56,057 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 20:10:56,057 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 20:10:56,059 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 20:10:56,063 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:55" (1/1) ...
[2020-11-24 20:10:56,084 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowed_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && amount_KOCToken[this] == old(amount_KOCToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:10:56,090 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowed_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && amount_KOCToken[this] == old(amount_KOCToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:10:56,097 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowed_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && amount_KOCToken[this] == old(amount_KOCToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:10:56,105 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=spender_s477 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[spender_s477,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]
[2020-11-24 20:10:56,108 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( __ret_0_==true && _allowed_ERC20[this][msg.sender][spender_s477]==value_s477 ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowed_ERC20[this][p1][p2]==( old(_allowed_ERC20[this][p1][p2]) ) ) && amount_KOCToken[this]==( old(amount_KOCToken[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[spender_s477,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],IdentifierExpression[value_s477,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[amount_KOCToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[amount_KOCToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]]
[2020-11-24 20:10:56,115 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowed_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && amount_KOCToken[this] == old(amount_KOCToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:10:56,115 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_ERC200) ==> ( <>AP(success_approve_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 20:10:56,129 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:10:56 PropertyContainer
[2020-11-24 20:10:56,130 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 20:10:56,130 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 20:10:56,130 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 20:10:56,130 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 20:10:56,131 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:55" (1/2) ...
[2020-11-24 20:10:56,131 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 20:10:56,132 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 20:10:56,152 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:10:56" (2/2) ...
[2020-11-24 20:10:56,153 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 20:10:56,153 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 20:10:56,153 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 20:10:56,153 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 20:10:56,154 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:55" (1/2) ...
[2020-11-24 20:10:56,209 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 20:10:56,210 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__success
[2020-11-24 20:10:56,210 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:10:56,210 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 20:10:56,210 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 20:10:56,210 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:10:56,210 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 20:10:56,210 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 20:10:56,210 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:10:56,211 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-24 20:10:56,211 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles_NoBaseCtor__success
[2020-11-24 20:10:56,211 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles
[2020-11-24 20:10:56,211 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles
[2020-11-24 20:10:56,211 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__success
[2020-11-24 20:10:56,211 INFO  L130     BoogieDeclarations]: Found specification of procedure remove~Role~address_Roles__success
[2020-11-24 20:10:56,211 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__success
[2020-11-24 20:10:56,212 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole_NoBaseCtor__success
[2020-11-24 20:10:56,212 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole
[2020-11-24 20:10:56,212 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole
[2020-11-24 20:10:56,212 INFO  L130     BoogieDeclarations]: Found specification of procedure isMinter~address_MinterRole
[2020-11-24 20:10:56,212 INFO  L138     BoogieDeclarations]: Found implementation of procedure isMinter~address_MinterRole
[2020-11-24 20:10:56,212 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_MinterRole
[2020-11-24 20:10:56,212 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_MinterRole
[2020-11-24 20:10:56,212 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceMinter_MinterRole
[2020-11-24 20:10:56,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceMinter_MinterRole
[2020-11-24 20:10:56,213 INFO  L130     BoogieDeclarations]: Found specification of procedure _addMinter~address_MinterRole__success
[2020-11-24 20:10:56,213 INFO  L130     BoogieDeclarations]: Found specification of procedure _removeMinter~address_MinterRole__success
[2020-11-24 20:10:56,213 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 20:10:56,213 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-24 20:10:56,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-24 20:10:56,213 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-24 20:10:56,213 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-24 20:10:56,213 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-24 20:10:56,213 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-24 20:10:56,214 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-24 20:10:56,214 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-24 20:10:56,214 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 20:10:56,214 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-24 20:10:56,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-24 20:10:56,214 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-24 20:10:56,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-24 20:10:56,214 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-24 20:10:56,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-24 20:10:56,214 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 20:10:56,215 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-24 20:10:56,215 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-24 20:10:56,215 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-24 20:10:56,215 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 20:10:56,215 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-24 20:10:56,215 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 20:10:56,215 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 20:10:56,215 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-24 20:10:56,215 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-24 20:10:56,216 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-24 20:10:56,216 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-24 20:10:56,216 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 20:10:56,216 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-24 20:10:56,216 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-24 20:10:56,216 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 20:10:56,216 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-24 20:10:56,216 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-24 20:10:56,216 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-24 20:10:56,217 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-24 20:10:56,217 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-24 20:10:56,217 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-24 20:10:56,217 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-24 20:10:56,217 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-24 20:10:56,217 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-24 20:10:56,217 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-24 20:10:56,217 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__success
[2020-11-24 20:10:56,217 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable
[2020-11-24 20:10:56,218 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable
[2020-11-24 20:10:56,218 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20Mintable
[2020-11-24 20:10:56,218 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20Mintable
[2020-11-24 20:10:56,218 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped_NoBaseCtor__success
[2020-11-24 20:10:56,218 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped
[2020-11-24 20:10:56,218 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped
[2020-11-24 20:10:56,218 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Capped
[2020-11-24 20:10:56,218 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Capped
[2020-11-24 20:10:56,218 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20Capped__success
[2020-11-24 20:10:56,218 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-24 20:10:56,219 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable
[2020-11-24 20:10:56,219 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable
[2020-11-24 20:10:56,219 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable
[2020-11-24 20:10:56,219 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable
[2020-11-24 20:10:56,220 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-24 20:10:56,220 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-24 20:10:56,220 INFO  L130     BoogieDeclarations]: Found specification of procedure KOCToken_KOCToken_NoBaseCtor__success
[2020-11-24 20:10:56,220 INFO  L130     BoogieDeclarations]: Found specification of procedure KOCToken_KOCToken
[2020-11-24 20:10:56,221 INFO  L138     BoogieDeclarations]: Found implementation of procedure KOCToken_KOCToken
[2020-11-24 20:10:56,221 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 20:10:56,221 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 20:10:56,221 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 20:10:56,222 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__success
[2020-11-24 20:10:56,222 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 20:10:56,222 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 20:10:56,222 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Roles
[2020-11-24 20:10:56,222 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Roles
[2020-11-24 20:10:56,223 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MinterRole
[2020-11-24 20:10:56,223 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_MinterRole
[2020-11-24 20:10:56,223 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 20:10:56,223 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 20:10:56,224 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 20:10:56,224 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 20:10:56,224 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 20:10:56,224 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 20:10:56,224 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Mintable
[2020-11-24 20:10:56,224 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Mintable
[2020-11-24 20:10:56,225 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Capped
[2020-11-24 20:10:56,225 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Capped
[2020-11-24 20:10:56,225 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-24 20:10:56,225 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-24 20:10:56,225 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_KOCToken
[2020-11-24 20:10:56,225 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 20:10:56,225 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 20:10:56,226 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__fail
[2020-11-24 20:10:56,226 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:10:56,226 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 20:10:56,226 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 20:10:56,226 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:56,226 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:56,226 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:56,226 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:56,226 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:56,227 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles_NoBaseCtor__fail
[2020-11-24 20:10:56,227 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles__success
[2020-11-24 20:10:56,227 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles__fail
[2020-11-24 20:10:56,227 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__fail
[2020-11-24 20:10:56,227 INFO  L130     BoogieDeclarations]: Found specification of procedure remove~Role~address_Roles__fail
[2020-11-24 20:10:56,227 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__fail
[2020-11-24 20:10:56,227 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole_NoBaseCtor__fail
[2020-11-24 20:10:56,228 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole__success
[2020-11-24 20:10:56,228 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole__fail
[2020-11-24 20:10:56,228 INFO  L130     BoogieDeclarations]: Found specification of procedure isMinter~address_MinterRole__success
[2020-11-24 20:10:56,228 INFO  L130     BoogieDeclarations]: Found specification of procedure isMinter~address_MinterRole__fail
[2020-11-24 20:10:56,228 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_MinterRole__success
[2020-11-24 20:10:56,228 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_MinterRole__fail
[2020-11-24 20:10:56,229 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceMinter_MinterRole__success
[2020-11-24 20:10:56,229 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceMinter_MinterRole__fail
[2020-11-24 20:10:56,229 INFO  L130     BoogieDeclarations]: Found specification of procedure _addMinter~address_MinterRole__fail
[2020-11-24 20:10:56,229 INFO  L130     BoogieDeclarations]: Found specification of procedure _removeMinter~address_MinterRole__fail
[2020-11-24 20:10:56,229 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 20:10:56,229 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-24 20:10:56,229 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-24 20:10:56,229 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 20:10:56,230 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-24 20:10:56,230 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-24 20:10:56,230 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-24 20:10:56,230 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-24 20:10:56,230 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-24 20:10:56,230 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-24 20:10:56,230 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-24 20:10:56,230 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-24 20:10:56,231 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-24 20:10:56,231 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 20:10:56,231 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-24 20:10:56,231 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-24 20:10:56,231 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 20:10:56,231 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 20:10:56,231 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:10:56,231 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:10:56,231 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:10:56,232 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:10:56,232 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 20:10:56,232 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-24 20:10:56,232 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-24 20:10:56,232 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 20:10:56,232 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-24 20:10:56,232 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-24 20:10:56,232 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-24 20:10:56,232 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-24 20:10:56,233 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-24 20:10:56,233 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-24 20:10:56,233 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-24 20:10:56,233 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-24 20:10:56,233 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-24 20:10:56,233 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-24 20:10:56,233 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__fail
[2020-11-24 20:10:56,233 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable__success
[2020-11-24 20:10:56,233 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable__fail
[2020-11-24 20:10:56,234 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20Mintable__success
[2020-11-24 20:10:56,234 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20Mintable__fail
[2020-11-24 20:10:56,234 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped_NoBaseCtor__fail
[2020-11-24 20:10:56,234 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped__success
[2020-11-24 20:10:56,234 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped__fail
[2020-11-24 20:10:56,234 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Capped__success
[2020-11-24 20:10:56,234 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Capped__fail
[2020-11-24 20:10:56,234 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20Capped__fail
[2020-11-24 20:10:56,234 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-24 20:10:56,235 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-24 20:10:56,235 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-24 20:10:56,235 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__success
[2020-11-24 20:10:56,235 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__fail
[2020-11-24 20:10:56,235 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-24 20:10:56,235 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-24 20:10:56,235 INFO  L130     BoogieDeclarations]: Found specification of procedure KOCToken_KOCToken_NoBaseCtor__fail
[2020-11-24 20:10:56,235 INFO  L130     BoogieDeclarations]: Found specification of procedure KOCToken_KOCToken__success
[2020-11-24 20:10:56,235 INFO  L130     BoogieDeclarations]: Found specification of procedure KOCToken_KOCToken__fail
[2020-11-24 20:10:56,235 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 20:10:56,236 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 20:10:56,236 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 20:10:56,236 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__fail
[2020-11-24 20:10:56,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 20:10:56,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 20:10:56,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__fail
[2020-11-24 20:10:56,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__success
[2020-11-24 20:10:56,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:10:56,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:10:56,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 20:10:56,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 20:10:56,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:56,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:10:56,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:56,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 20:10:56,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:56,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 20:10:56,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:56,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:10:56,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:56,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-24 20:10:56,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles_NoBaseCtor__fail
[2020-11-24 20:10:56,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles_NoBaseCtor__success
[2020-11-24 20:10:56,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles__fail
[2020-11-24 20:10:56,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles__success
[2020-11-24 20:10:56,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__fail
[2020-11-24 20:10:56,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__success
[2020-11-24 20:10:56,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure remove~Role~address_Roles__fail
[2020-11-24 20:10:56,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure remove~Role~address_Roles__success
[2020-11-24 20:10:56,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__fail
[2020-11-24 20:10:56,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__success
[2020-11-24 20:10:56,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole_NoBaseCtor__fail
[2020-11-24 20:10:56,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole_NoBaseCtor__success
[2020-11-24 20:10:56,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole__fail
[2020-11-24 20:10:56,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole__success
[2020-11-24 20:10:56,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure isMinter~address_MinterRole__fail
[2020-11-24 20:10:56,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure isMinter~address_MinterRole__success
[2020-11-24 20:10:56,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_MinterRole__fail
[2020-11-24 20:10:56,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_MinterRole__success
[2020-11-24 20:10:56,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceMinter_MinterRole__fail
[2020-11-24 20:10:56,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceMinter_MinterRole__success
[2020-11-24 20:10:56,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure _addMinter~address_MinterRole__fail
[2020-11-24 20:10:56,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure _addMinter~address_MinterRole__success
[2020-11-24 20:10:56,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure _removeMinter~address_MinterRole__fail
[2020-11-24 20:10:56,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure _removeMinter~address_MinterRole__success
[2020-11-24 20:10:56,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 20:10:56,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 20:10:56,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-24 20:10:56,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-24 20:10:56,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 20:10:56,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 20:10:56,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-24 20:10:56,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-24 20:10:56,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-24 20:10:56,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-24 20:10:56,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-24 20:10:56,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-24 20:10:56,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-24 20:10:56,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-24 20:10:56,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 20:10:56,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-24 20:10:56,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-24 20:10:56,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-24 20:10:56,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 20:10:56,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 20:10:56,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:10:56,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:10:56,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:10:56,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:10:56,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 20:10:56,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 20:10:56,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-24 20:10:56,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-24 20:10:56,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-24 20:10:56,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-24 20:10:56,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 20:10:56,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 20:10:56,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-24 20:10:56,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-24 20:10:56,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-24 20:10:56,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-24 20:10:56,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-24 20:10:56,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-24 20:10:56,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-24 20:10:56,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-24 20:10:56,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-24 20:10:56,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-24 20:10:56,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-24 20:10:56,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-24 20:10:56,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__fail
[2020-11-24 20:10:56,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__success
[2020-11-24 20:10:56,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable__fail
[2020-11-24 20:10:56,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable__success
[2020-11-24 20:10:56,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20Mintable__fail
[2020-11-24 20:10:56,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20Mintable__success
[2020-11-24 20:10:56,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped_NoBaseCtor__fail
[2020-11-24 20:10:56,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped_NoBaseCtor__success
[2020-11-24 20:10:56,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped__fail
[2020-11-24 20:10:56,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped__success
[2020-11-24 20:10:56,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Capped__fail
[2020-11-24 20:10:56,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Capped__success
[2020-11-24 20:10:56,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20Capped__fail
[2020-11-24 20:10:56,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20Capped__success
[2020-11-24 20:10:56,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-24 20:10:56,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-24 20:10:56,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-24 20:10:56,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-24 20:10:56,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__fail
[2020-11-24 20:10:56,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__success
[2020-11-24 20:10:56,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-24 20:10:56,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-24 20:10:56,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure KOCToken_KOCToken_NoBaseCtor__fail
[2020-11-24 20:10:56,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure KOCToken_KOCToken_NoBaseCtor__success
[2020-11-24 20:10:56,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure KOCToken_KOCToken__fail
[2020-11-24 20:10:56,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure KOCToken_KOCToken__success
[2020-11-24 20:10:56,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 20:10:56,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 20:10:56,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 20:10:56,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 20:10:56,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 20:10:56,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 20:10:56,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__fail
[2020-11-24 20:10:56,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__success
[2020-11-24 20:10:56,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 20:10:56,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 20:10:56,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Roles
[2020-11-24 20:10:56,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Roles
[2020-11-24 20:10:56,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MinterRole
[2020-11-24 20:10:56,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_MinterRole
[2020-11-24 20:10:56,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 20:10:56,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 20:10:56,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 20:10:56,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 20:10:56,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 20:10:56,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 20:10:56,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Mintable
[2020-11-24 20:10:56,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Mintable
[2020-11-24 20:10:56,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Capped
[2020-11-24 20:10:56,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Capped
[2020-11-24 20:10:56,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-24 20:10:56,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-24 20:10:56,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_KOCToken
[2020-11-24 20:10:56,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 20:10:56,248 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 20:10:56,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 20:10:56,594 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:10:56,594 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:10:56,594 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:10:56,909 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:10:57,395 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 20:10:57,395 INFO  L286             CfgBuilder]: Removed 10 assue(true) statements.
[2020-11-24 20:10:57,398 INFO  L202        PluginConnector]: Adding new model KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:10:57 BoogieIcfgContainer
[2020-11-24 20:10:57,398 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:10:56" (2/2) ...
[2020-11-24 20:10:57,398 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 20:10:57,398 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@213582a4 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:10:57, skipping insertion in model container
[2020-11-24 20:10:57,398 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 20:10:57,399 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 20:10:57,399 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 20:10:57,400 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 20:10:57,400 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:55" (1/3) ...
[2020-11-24 20:10:57,401 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@17efb1a0 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:10:57, skipping insertion in model container
[2020-11-24 20:10:57,401 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:10:56" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 20:10:57,435 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:10:57 NWAContainer
[2020-11-24 20:10:57,435 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 20:10:57,435 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 20:10:57,435 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 20:10:57,436 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 20:10:57,437 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:10:57" (3/4) ...
[2020-11-24 20:10:57,437 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@2bbfb32e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:10:57, skipping insertion in model container
[2020-11-24 20:10:57,438 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:10:57" (4/4) ...
[2020-11-24 20:10:57,441 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 20:10:57,446 INFO  L110   BuchiProductObserver]: Initial RCFG 2793 locations, 4113 edges
[2020-11-24 20:10:57,446 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 20:10:57,458 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 20:10:59,664 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 20:10:59,673 INFO  L110   BuchiProductObserver]: BuchiProgram size 7218 locations, 13516 edges
[2020-11-24 20:10:59,673 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:10:59 BoogieIcfgContainer
[2020-11-24 20:10:59,674 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 20:10:59,674 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 20:10:59,674 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 20:10:59,675 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 20:10:59,675 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:10:59" (1/1) ...
[2020-11-24 20:10:59,799 INFO  L313           BlockEncoder]: Initial Icfg 7218 locations, 13516 edges
[2020-11-24 20:10:59,799 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 20:10:59,799 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 20:10:59,799 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 20:10:59,800 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 20:10:59,819 INFO  L70    emoveInfeasibleEdges]: Removed 195 edges and 23 locations because of local infeasibility
[2020-11-24 20:10:59,831 INFO  L70        RemoveSinkStates]: Removed 110 edges and 73 locations by removing sink states
[2020-11-24 20:10:59,858 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 20:10:59,863 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 20:10:59,870 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 20:10:59,870 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 20:10:59,875 INFO  L313           BlockEncoder]: Encoded RCFG 7088 locations, 13161 edges
[2020-11-24 20:10:59,876 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:10:59 BasicIcfg
[2020-11-24 20:10:59,876 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 20:10:59,877 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 20:10:59,877 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 20:10:59,879 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 20:10:59,879 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:10:59,879 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:55" (1/6) ...
[2020-11-24 20:10:59,881 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7227e32a and model type KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:10:59, skipping insertion in model container
[2020-11-24 20:10:59,881 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:10:59,881 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:10:56" (2/6) ...
[2020-11-24 20:10:59,881 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7227e32a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:10:59, skipping insertion in model container
[2020-11-24 20:10:59,882 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:10:59,882 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:10:57" (3/6) ...
[2020-11-24 20:10:59,882 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7227e32a and model type KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:10:59, skipping insertion in model container
[2020-11-24 20:10:59,882 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:10:59,882 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:10:57" (4/6) ...
[2020-11-24 20:10:59,882 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7227e32a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:10:59, skipping insertion in model container
[2020-11-24 20:10:59,882 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:10:59,882 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:10:59" (5/6) ...
[2020-11-24 20:10:59,883 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7227e32a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 08:10:59, skipping insertion in model container
[2020-11-24 20:10:59,883 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:10:59,883 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:10:59" (6/6) ...
[2020-11-24 20:10:59,884 INFO  L404   chiAutomizerObserver]: Analyzing ICFG KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_approve.bpl_BEv2
[2020-11-24 20:10:59,922 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 20:10:59,922 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 20:10:59,922 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 20:10:59,922 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 20:10:59,923 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 20:10:59,923 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 20:10:59,923 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 20:10:59,923 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 20:10:59,923 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 20:10:59,980 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7088 states.
[2020-11-24 20:11:00,046 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:11:00,047 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:11:00,047 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:11:00,056 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:11:00,056 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:11:00,056 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 20:11:00,056 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7088 states.
[2020-11-24 20:11:00,081 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:11:00,082 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:11:00,082 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:11:00,084 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:11:00,084 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7800]              assume null == 0;
[L7801]  CALL        call this := FreshRefGenerator__success();
[L2940]              havoc newRef;
[L2941]              assume Alloc[newRef] == false;
[L2942]              Alloc[newRef] := true;
[L2943]              assume newRef != null;
[L7801]  RET         call this := FreshRefGenerator__success();
[L7802]              assume now >= 0;
[L7803]              assume DType[this] == KOCToken;
[L7804]              assume msgvalue_MSG == 0;
[L7805]              gas := gas - 53000;
[L7806]  CALL        call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L1941]              havoc __exception;
[L1942]              revert := false;
[L1943]  COND FALSE  !(__exception)
[L1970]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4871]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4872]  COND TRUE   revert
[L1970]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1971]              assume !revert && gas >= 0;
[L7806]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L7807]              assume !revert && gas >= 0;

Loop:
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND TRUE   choice == 13
[L7708]              gas := gas - 21000;
[L7709]  COND FALSE  !(gas >= 0)
[L7810]  RET         call CorralChoice_KOCToken(this);

[2020-11-24 20:11:00,102 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:11:00,102 INFO  L82        PathProgramCache]: Analyzing trace with hash -444420180, now seen corresponding path program 1 times
[2020-11-24 20:11:00,108 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:11:00,131 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:11:00,172 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:11:00,174 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:11:00,175 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:11:00,538 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:11:00,546 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:11:00,547 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:11:00,548 INFO  L87              Difference]: Start difference. First operand 7088 states. Second operand 3 states.
[2020-11-24 20:11:00,799 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:11:00,799 INFO  L93              Difference]: Finished difference Result 2905 states and 3588 transitions.
[2020-11-24 20:11:00,799 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:11:00,800 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2905 states and 3588 transitions.
[2020-11-24 20:11:00,818 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:11:00,841 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2905 states to 2905 states and 3588 transitions.
[2020-11-24 20:11:00,842 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 20:11:00,844 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 754
[2020-11-24 20:11:00,844 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2905 states and 3588 transitions.
[2020-11-24 20:11:00,852 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:11:00,852 INFO  L728         BuchiCegarLoop]: Abstraction has 2905 states and 3588 transitions.
[2020-11-24 20:11:00,866 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2905 states and 3588 transitions.
[2020-11-24 20:11:00,911 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2905 to 2905.
[2020-11-24 20:11:00,912 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2905 states.
[2020-11-24 20:11:00,917 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2905 states to 2905 states and 3588 transitions.
[2020-11-24 20:11:00,918 INFO  L751         BuchiCegarLoop]: Abstraction has 2905 states and 3588 transitions.
[2020-11-24 20:11:00,918 INFO  L631         BuchiCegarLoop]: Abstraction has 2905 states and 3588 transitions.
[2020-11-24 20:11:00,918 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 20:11:00,918 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2905 states and 3588 transitions.
[2020-11-24 20:11:00,925 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:11:00,925 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:11:00,925 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:11:00,927 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:11:00,927 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7800]              assume null == 0;
[L7801]  CALL        call this := FreshRefGenerator__success();
[L2940]              havoc newRef;
[L2941]              assume Alloc[newRef] == false;
[L2942]              Alloc[newRef] := true;
[L2943]              assume newRef != null;
[L7801]  RET         call this := FreshRefGenerator__success();
[L7802]              assume now >= 0;
[L7803]              assume DType[this] == KOCToken;
[L7804]              assume msgvalue_MSG == 0;
[L7805]              gas := gas - 53000;
[L7806]  CALL        call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L1941]              havoc __exception;
[L1942]              revert := false;
[L1943]  COND FALSE  !(__exception)
[L1970]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4871]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4872]  COND TRUE   revert
[L1970]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1971]              assume !revert && gas >= 0;
[L7806]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L7807]              assume !revert && gas >= 0;
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND FALSE  !(choice == 13)
[L7714]  COND TRUE   choice == 12
[L7715]              gas := gas - 21000;
[L7716]  COND TRUE   gas >= 0
[L7717]              assume value_s477 >= 0 && value_s477 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7718]              assume msgvalue_MSG == 0;
[L7719]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s477;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L898]               havoc __exception;
[L899]               revert := false;
[L900]   COND FALSE  !(__exception)
[L927]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3706]  COND TRUE   DType[this] == KOCToken
[L3707]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L4202]              __var_21 := null;
[L4203]  COND TRUE   !(spender_s736 != null)
[L4204]              revert := true;
[L3707]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L3708]  COND TRUE   revert
[L927]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L928]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s477] == value_s477) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7719]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L7810]  RET         call CorralChoice_KOCToken(this);

Loop:
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND FALSE  !(choice == 13)
[L7714]  COND TRUE   choice == 12
[L7715]              gas := gas - 21000;
[L7716]  COND TRUE   gas >= 0
[L7717]              assume value_s477 >= 0 && value_s477 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7718]              assume msgvalue_MSG == 0;
[L7719]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s477;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L898]               havoc __exception;
[L899]               revert := false;
[L900]   COND FALSE  !(__exception)
[L927]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3706]  COND TRUE   DType[this] == KOCToken
[L3707]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L4202]              __var_21 := null;
[L4203]  COND TRUE   !(spender_s736 != null)
[L4204]              revert := true;
[L3707]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L3708]  COND TRUE   revert
[L927]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L928]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s477] == value_s477) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7719]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L7810]  RET         call CorralChoice_KOCToken(this);

[2020-11-24 20:11:00,931 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:11:00,931 INFO  L82        PathProgramCache]: Analyzing trace with hash -972445725, now seen corresponding path program 1 times
[2020-11-24 20:11:00,932 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:11:00,943 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:11:00,963 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:11:00,963 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:11:00,963 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:11:00,964 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:11:00,964 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:11:00,964 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:11:00,964 INFO  L87              Difference]: Start difference. First operand 2905 states and 3588 transitions. cyclomatic complexity: 685 Second operand 3 states.
[2020-11-24 20:11:01,072 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:11:01,072 INFO  L93              Difference]: Finished difference Result 3895 states and 4844 transitions.
[2020-11-24 20:11:01,072 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:11:01,073 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3895 states and 4844 transitions.
[2020-11-24 20:11:01,088 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:11:01,105 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3895 states to 3895 states and 4844 transitions.
[2020-11-24 20:11:01,105 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1045
[2020-11-24 20:11:01,106 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1045
[2020-11-24 20:11:01,106 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3895 states and 4844 transitions.
[2020-11-24 20:11:01,113 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:11:01,113 INFO  L728         BuchiCegarLoop]: Abstraction has 3895 states and 4844 transitions.
[2020-11-24 20:11:01,116 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3895 states and 4844 transitions.
[2020-11-24 20:11:01,151 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3895 to 3393.
[2020-11-24 20:11:01,151 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3393 states.
[2020-11-24 20:11:01,156 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3393 states to 3393 states and 4240 transitions.
[2020-11-24 20:11:01,156 INFO  L751         BuchiCegarLoop]: Abstraction has 3393 states and 4240 transitions.
[2020-11-24 20:11:01,156 INFO  L631         BuchiCegarLoop]: Abstraction has 3393 states and 4240 transitions.
[2020-11-24 20:11:01,156 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 20:11:01,156 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3393 states and 4240 transitions.
[2020-11-24 20:11:01,162 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:11:01,162 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:11:01,162 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:11:01,164 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:11:01,164 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7800]              assume null == 0;
[L7801]  CALL        call this := FreshRefGenerator__success();
[L2940]              havoc newRef;
[L2941]              assume Alloc[newRef] == false;
[L2942]              Alloc[newRef] := true;
[L2943]              assume newRef != null;
[L7801]  RET         call this := FreshRefGenerator__success();
[L7802]              assume now >= 0;
[L7803]              assume DType[this] == KOCToken;
[L7804]              assume msgvalue_MSG == 0;
[L7805]              gas := gas - 53000;
[L7806]  CALL        call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L1941]              havoc __exception;
[L1942]              revert := false;
[L1943]  COND FALSE  !(__exception)
[L1970]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4871]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4872]  COND FALSE  !(revert)
[L4875]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3532]              assume msgsender_MSG != null;
[L3533]              Balance[this] := 0;
[L3534]              _balances_ERC20[this] := zeroRefintArr();
[L3535]              sum__balances0[this] := 0;
[L3536]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3537]              sum__allowed1[this] := 0;
[L3538]              _totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4875]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4876]  COND FALSE  !(revert)
[L4879]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4390]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4390]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4391]  COND FALSE  !(revert)
[L4394]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4365]              assume msgsender_MSG != null;
[L4366]              Balance[this] := 0;
[L4367]              _name_ERC20Detailed[this] := 1767506099;
[L4368]              _symbol_ERC20Detailed[this] := 1767506099;
[L4369]              _decimals_ERC20Detailed[this] := 0;
[L4371]              _name_ERC20Detailed[this] := name_s795;
[L4372]              _symbol_ERC20Detailed[this] := symbol_s795;
[L4373]              _decimals_ERC20Detailed[this] := decimals_s795;
[L4394]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4395]  COND FALSE  !(revert)
[L4879]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4880]  COND FALSE  !(revert)
[L4883]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4722]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4722]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4723]  COND FALSE  !(revert)
[L4726]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3532]              assume msgsender_MSG != null;
[L3533]              Balance[this] := 0;
[L3534]              _balances_ERC20[this] := zeroRefintArr();
[L3535]              sum__balances0[this] := 0;
[L3536]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3537]              sum__allowed1[this] := 0;
[L3538]              _totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4726]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4727]  COND FALSE  !(revert)
[L4730]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4699]              assume msgsender_MSG != null;
[L4700]              Balance[this] := 0;
[L4730]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4731]  COND FALSE  !(revert)
[L4883]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4884]  COND FALSE  !(revert)
[L4887]  CALL        call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4827]              assume msgsender_MSG != null;
[L4828]              Balance[this] := 0;
[L4829]              amount_KOCToken[this] := 10000000;
[L4831]              __var_27 := ConstantToRef(7544919301613266970804652377014389568456575767);
[L4832]  COND TRUE   DType[this] == KOCToken
[L4833]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4110]              __var_15 := null;
[L4111]  COND TRUE   !(account_s654 != null)
[L4112]              revert := true;
[L4833]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4834]  COND TRUE   revert
[L4887]  RET         call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]  COND FALSE  !(revert)
[L1970]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1971]              assume !revert && gas >= 0;
[L7806]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L7807]              assume !revert && gas >= 0;
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND FALSE  !(choice == 13)
[L7714]  COND TRUE   choice == 12
[L7715]              gas := gas - 21000;
[L7716]  COND TRUE   gas >= 0
[L7717]              assume value_s477 >= 0 && value_s477 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7718]              assume msgvalue_MSG == 0;
[L7719]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s477;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L898]               havoc __exception;
[L899]               revert := false;
[L900]   COND FALSE  !(__exception)
[L927]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3706]  COND TRUE   DType[this] == KOCToken
[L3707]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L4202]              __var_21 := null;
[L4203]  COND TRUE   !(spender_s736 != null)
[L4204]              revert := true;
[L3707]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L3708]  COND TRUE   revert
[L927]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L928]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s477] == value_s477) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7719]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L7810]  RET         call CorralChoice_KOCToken(this);

Loop:
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND FALSE  !(choice == 13)
[L7714]  COND TRUE   choice == 12
[L7715]              gas := gas - 21000;
[L7716]  COND TRUE   gas >= 0
[L7717]              assume value_s477 >= 0 && value_s477 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7718]              assume msgvalue_MSG == 0;
[L7719]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s477;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L898]               havoc __exception;
[L899]               revert := false;
[L900]   COND FALSE  !(__exception)
[L927]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3706]  COND TRUE   DType[this] == KOCToken
[L3707]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L4202]              __var_21 := null;
[L4203]  COND TRUE   !(spender_s736 != null)
[L4204]              revert := true;
[L3707]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L3708]  COND TRUE   revert
[L927]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L928]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s477] == value_s477) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7719]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L7810]  RET         call CorralChoice_KOCToken(this);

[2020-11-24 20:11:01,168 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:11:01,168 INFO  L82        PathProgramCache]: Analyzing trace with hash -1012420599, now seen corresponding path program 1 times
[2020-11-24 20:11:01,169 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:11:01,182 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:11:01,236 INFO  L134       CoverageAnalysis]: Checked inductivity of 119 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 119 trivial. 0 not checked.
[2020-11-24 20:11:01,237 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:11:01,237 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 20:11:01,237 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:11:01,237 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 20:11:01,237 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 20:11:01,237 INFO  L87              Difference]: Start difference. First operand 3393 states and 4240 transitions. cyclomatic complexity: 849 Second operand 5 states.
[2020-11-24 20:11:01,268 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:11:01,268 INFO  L93              Difference]: Finished difference Result 3395 states and 4241 transitions.
[2020-11-24 20:11:01,268 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:11:01,268 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3395 states and 4241 transitions.
[2020-11-24 20:11:01,277 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:11:01,288 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3395 states to 3392 states and 4238 transitions.
[2020-11-24 20:11:01,288 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 914
[2020-11-24 20:11:01,289 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 914
[2020-11-24 20:11:01,289 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3392 states and 4238 transitions.
[2020-11-24 20:11:01,292 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:11:01,292 INFO  L728         BuchiCegarLoop]: Abstraction has 3392 states and 4238 transitions.
[2020-11-24 20:11:01,295 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3392 states and 4238 transitions.
[2020-11-24 20:11:01,321 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3392 to 3392.
[2020-11-24 20:11:01,321 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3392 states.
[2020-11-24 20:11:01,326 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3392 states to 3392 states and 4238 transitions.
[2020-11-24 20:11:01,326 INFO  L751         BuchiCegarLoop]: Abstraction has 3392 states and 4238 transitions.
[2020-11-24 20:11:01,326 INFO  L631         BuchiCegarLoop]: Abstraction has 3392 states and 4238 transitions.
[2020-11-24 20:11:01,326 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 20:11:01,326 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3392 states and 4238 transitions.
[2020-11-24 20:11:01,330 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:11:01,330 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:11:01,331 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:11:01,332 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:11:01,332 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7800]              assume null == 0;
[L7801]  CALL        call this := FreshRefGenerator__success();
[L2940]              havoc newRef;
[L2941]              assume Alloc[newRef] == false;
[L2942]              Alloc[newRef] := true;
[L2943]              assume newRef != null;
[L7801]  RET         call this := FreshRefGenerator__success();
[L7802]              assume now >= 0;
[L7803]              assume DType[this] == KOCToken;
[L7804]              assume msgvalue_MSG == 0;
[L7805]              gas := gas - 53000;
[L7806]  CALL        call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L1941]              havoc __exception;
[L1942]              revert := false;
[L1943]  COND FALSE  !(__exception)
[L1970]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4871]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4872]  COND FALSE  !(revert)
[L4875]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3532]              assume msgsender_MSG != null;
[L3533]              Balance[this] := 0;
[L3534]              _balances_ERC20[this] := zeroRefintArr();
[L3535]              sum__balances0[this] := 0;
[L3536]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3537]              sum__allowed1[this] := 0;
[L3538]              _totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4875]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4876]  COND FALSE  !(revert)
[L4879]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4390]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4390]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4391]  COND FALSE  !(revert)
[L4394]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4365]              assume msgsender_MSG != null;
[L4366]              Balance[this] := 0;
[L4367]              _name_ERC20Detailed[this] := 1767506099;
[L4368]              _symbol_ERC20Detailed[this] := 1767506099;
[L4369]              _decimals_ERC20Detailed[this] := 0;
[L4371]              _name_ERC20Detailed[this] := name_s795;
[L4372]              _symbol_ERC20Detailed[this] := symbol_s795;
[L4373]              _decimals_ERC20Detailed[this] := decimals_s795;
[L4394]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4395]  COND FALSE  !(revert)
[L4879]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4880]  COND FALSE  !(revert)
[L4883]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4722]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4722]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4723]  COND FALSE  !(revert)
[L4726]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3532]              assume msgsender_MSG != null;
[L3533]              Balance[this] := 0;
[L3534]              _balances_ERC20[this] := zeroRefintArr();
[L3535]              sum__balances0[this] := 0;
[L3536]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3537]              sum__allowed1[this] := 0;
[L3538]              _totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4726]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4727]  COND FALSE  !(revert)
[L4730]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4699]              assume msgsender_MSG != null;
[L4700]              Balance[this] := 0;
[L4730]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4731]  COND FALSE  !(revert)
[L4883]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4884]  COND FALSE  !(revert)
[L4887]  CALL        call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4827]              assume msgsender_MSG != null;
[L4828]              Balance[this] := 0;
[L4829]              amount_KOCToken[this] := 10000000;
[L4831]              __var_27 := ConstantToRef(7544919301613266970804652377014389568456575767);
[L4832]  COND TRUE   DType[this] == KOCToken
[L4833]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4110]              __var_15 := null;
[L4111]  COND FALSE  !(!(account_s654 != null))
[L4115]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L3083]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3084]  COND TRUE   !(c_s106 >= a_s106)
[L3085]              revert := true;
[L4115]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L4116]  COND TRUE   revert
[L4833]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4834]  COND TRUE   revert
[L4887]  RET         call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]  COND FALSE  !(revert)
[L1970]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1971]              assume !revert && gas >= 0;
[L7806]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L7807]              assume !revert && gas >= 0;
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND FALSE  !(choice == 13)
[L7714]  COND TRUE   choice == 12
[L7715]              gas := gas - 21000;
[L7716]  COND TRUE   gas >= 0
[L7717]              assume value_s477 >= 0 && value_s477 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7718]              assume msgvalue_MSG == 0;
[L7719]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s477;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L898]               havoc __exception;
[L899]               revert := false;
[L900]   COND FALSE  !(__exception)
[L927]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3706]  COND TRUE   DType[this] == KOCToken
[L3707]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L4202]              __var_21 := null;
[L4203]  COND TRUE   !(spender_s736 != null)
[L4204]              revert := true;
[L3707]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L3708]  COND TRUE   revert
[L927]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L928]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s477] == value_s477) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7719]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L7810]  RET         call CorralChoice_KOCToken(this);

Loop:
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND FALSE  !(choice == 13)
[L7714]  COND TRUE   choice == 12
[L7715]              gas := gas - 21000;
[L7716]  COND TRUE   gas >= 0
[L7717]              assume value_s477 >= 0 && value_s477 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7718]              assume msgvalue_MSG == 0;
[L7719]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s477;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L898]               havoc __exception;
[L899]               revert := false;
[L900]   COND FALSE  !(__exception)
[L927]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3706]  COND TRUE   DType[this] == KOCToken
[L3707]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L4202]              __var_21 := null;
[L4203]  COND TRUE   !(spender_s736 != null)
[L4204]              revert := true;
[L3707]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L3708]  COND TRUE   revert
[L927]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L928]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s477] == value_s477) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7719]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L7810]  RET         call CorralChoice_KOCToken(this);

[2020-11-24 20:11:01,336 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:11:01,336 INFO  L82        PathProgramCache]: Analyzing trace with hash 1261344113, now seen corresponding path program 1 times
[2020-11-24 20:11:01,337 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:11:01,345 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:11:01,379 INFO  L134       CoverageAnalysis]: Checked inductivity of 119 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 119 trivial. 0 not checked.
[2020-11-24 20:11:01,379 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:11:01,380 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:11:01,380 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:11:01,380 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:11:01,380 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:11:01,380 INFO  L87              Difference]: Start difference. First operand 3392 states and 4238 transitions. cyclomatic complexity: 848 Second operand 3 states.
[2020-11-24 20:11:01,480 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:11:01,481 INFO  L93              Difference]: Finished difference Result 3894 states and 4610 transitions.
[2020-11-24 20:11:01,481 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:11:01,481 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3894 states and 4610 transitions.
[2020-11-24 20:11:01,493 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:11:01,508 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3894 states to 3557 states and 4180 transitions.
[2020-11-24 20:11:01,508 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 935
[2020-11-24 20:11:01,509 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 975
[2020-11-24 20:11:01,509 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3557 states and 4180 transitions.
[2020-11-24 20:11:01,514 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:11:01,514 INFO  L728         BuchiCegarLoop]: Abstraction has 3557 states and 4180 transitions.
[2020-11-24 20:11:01,517 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3557 states and 4180 transitions.
[2020-11-24 20:11:01,550 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3557 to 3123.
[2020-11-24 20:11:01,550 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3123 states.
[2020-11-24 20:11:01,555 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3123 states to 3123 states and 3644 transitions.
[2020-11-24 20:11:01,555 INFO  L751         BuchiCegarLoop]: Abstraction has 3123 states and 3644 transitions.
[2020-11-24 20:11:01,556 INFO  L631         BuchiCegarLoop]: Abstraction has 3123 states and 3644 transitions.
[2020-11-24 20:11:01,556 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 20:11:01,556 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3123 states and 3644 transitions.
[2020-11-24 20:11:01,561 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:11:01,561 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:11:01,561 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:11:01,563 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:11:01,563 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7800]              assume null == 0;
[L7801]  CALL        call this := FreshRefGenerator__success();
[L2940]              havoc newRef;
[L2941]              assume Alloc[newRef] == false;
[L2942]              Alloc[newRef] := true;
[L2943]              assume newRef != null;
[L7801]  RET         call this := FreshRefGenerator__success();
[L7802]              assume now >= 0;
[L7803]              assume DType[this] == KOCToken;
[L7804]              assume msgvalue_MSG == 0;
[L7805]              gas := gas - 53000;
[L7806]  CALL        call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L1941]              havoc __exception;
[L1942]              revert := false;
[L1943]  COND FALSE  !(__exception)
[L1970]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4871]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4872]  COND FALSE  !(revert)
[L4875]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3532]              assume msgsender_MSG != null;
[L3533]              Balance[this] := 0;
[L3534]              _balances_ERC20[this] := zeroRefintArr();
[L3535]              sum__balances0[this] := 0;
[L3536]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3537]              sum__allowed1[this] := 0;
[L3538]              _totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4875]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4876]  COND FALSE  !(revert)
[L4879]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4390]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4390]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4391]  COND FALSE  !(revert)
[L4394]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4365]              assume msgsender_MSG != null;
[L4366]              Balance[this] := 0;
[L4367]              _name_ERC20Detailed[this] := 1767506099;
[L4368]              _symbol_ERC20Detailed[this] := 1767506099;
[L4369]              _decimals_ERC20Detailed[this] := 0;
[L4371]              _name_ERC20Detailed[this] := name_s795;
[L4372]              _symbol_ERC20Detailed[this] := symbol_s795;
[L4373]              _decimals_ERC20Detailed[this] := decimals_s795;
[L4394]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4395]  COND FALSE  !(revert)
[L4879]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4880]  COND FALSE  !(revert)
[L4883]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4722]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4722]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4723]  COND FALSE  !(revert)
[L4726]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3532]              assume msgsender_MSG != null;
[L3533]              Balance[this] := 0;
[L3534]              _balances_ERC20[this] := zeroRefintArr();
[L3535]              sum__balances0[this] := 0;
[L3536]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3537]              sum__allowed1[this] := 0;
[L3538]              _totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4726]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4727]  COND FALSE  !(revert)
[L4730]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4699]              assume msgsender_MSG != null;
[L4700]              Balance[this] := 0;
[L4730]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4731]  COND FALSE  !(revert)
[L4883]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4884]  COND FALSE  !(revert)
[L4887]  CALL        call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4827]              assume msgsender_MSG != null;
[L4828]              Balance[this] := 0;
[L4829]              amount_KOCToken[this] := 10000000;
[L4831]              __var_27 := ConstantToRef(7544919301613266970804652377014389568456575767);
[L4832]  COND TRUE   DType[this] == KOCToken
[L4833]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4110]              __var_15 := null;
[L4111]  COND FALSE  !(!(account_s654 != null))
[L4115]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L3083]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3084]  COND FALSE  !(!(c_s106 >= a_s106))
[L3088]              __ret_0_ := c_s106;
[L4115]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L4116]  COND FALSE  !(revert)
[L4119]              _totalSupply_ERC20[this] := __var_16;
[L4120]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], value_s654);
[L3083]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3084]  COND FALSE  !(!(c_s106 >= a_s106))
[L3088]              __ret_0_ := c_s106;
[L4120]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], value_s654);
[L4121]  COND FALSE  !(revert)
[L4124]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s654];
[L4125]              _balances_ERC20[this][account_s654] := __var_17;
[L4126]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s654];
[L4127]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4833]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4834]  COND FALSE  !(revert)
[L4840]              assert { :EventEmitted "CreateTokenSuccess_KOCToken" } true;
[L4887]  RET         call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]  COND FALSE  !(revert)
[L1970]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1971]              assume !revert && gas >= 0;
[L7806]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L7807]              assume !revert && gas >= 0;
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND FALSE  !(choice == 13)
[L7714]  COND TRUE   choice == 12
[L7715]              gas := gas - 21000;
[L7716]  COND TRUE   gas >= 0
[L7717]              assume value_s477 >= 0 && value_s477 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7718]              assume msgvalue_MSG == 0;
[L7719]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s477;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L898]               havoc __exception;
[L899]               revert := false;
[L900]   COND FALSE  !(__exception)
[L927]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3706]  COND TRUE   DType[this] == KOCToken
[L3707]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L4202]              __var_21 := null;
[L4203]  COND FALSE  !(!(spender_s736 != null))
[L4207]              __var_22 := null;
[L4208]  COND FALSE  !(!(owner_s736 != null))
[L4212]              sum__allowed1[owner_s736] := sum__allowed1[owner_s736] - _allowed_ERC20[this][owner_s736][spender_s736];
[L4213]              _allowed_ERC20[this][owner_s736][spender_s736] := value_s736;
[L4214]              sum__allowed1[owner_s736] := sum__allowed1[owner_s736] + _allowed_ERC20[this][owner_s736][spender_s736];
[L4215]              assert { :EventEmitted "Approval_ERC20" } true;
[L3707]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L3708]  COND FALSE  !(revert)
[L3734]              __ret_0_ := true;
[L927]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L928]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s477] == value_s477) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7719]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L7810]  RET         call CorralChoice_KOCToken(this);

Loop:
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND FALSE  !(choice == 13)
[L7714]  COND TRUE   choice == 12
[L7715]              gas := gas - 21000;
[L7716]  COND TRUE   gas >= 0
[L7717]              assume value_s477 >= 0 && value_s477 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7718]              assume msgvalue_MSG == 0;
[L7719]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s477;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L898]               havoc __exception;
[L899]               revert := false;
[L900]   COND FALSE  !(__exception)
[L927]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3706]  COND TRUE   DType[this] == KOCToken
[L3707]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L4202]              __var_21 := null;
[L4203]  COND FALSE  !(!(spender_s736 != null))
[L4207]              __var_22 := null;
[L4208]  COND FALSE  !(!(owner_s736 != null))
[L4212]              sum__allowed1[owner_s736] := sum__allowed1[owner_s736] - _allowed_ERC20[this][owner_s736][spender_s736];
[L4213]              _allowed_ERC20[this][owner_s736][spender_s736] := value_s736;
[L4214]              sum__allowed1[owner_s736] := sum__allowed1[owner_s736] + _allowed_ERC20[this][owner_s736][spender_s736];
[L4215]              assert { :EventEmitted "Approval_ERC20" } true;
[L3707]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L3708]  COND FALSE  !(revert)
[L3734]              __ret_0_ := true;
[L927]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L928]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_ERC20[this][msgsender_MSG][spender_s477] == value_s477) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7719]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L7810]  RET         call CorralChoice_KOCToken(this);

[2020-11-24 20:11:01,567 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:11:01,567 INFO  L82        PathProgramCache]: Analyzing trace with hash -1994753012, now seen corresponding path program 1 times
[2020-11-24 20:11:01,568 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:11:01,597 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:11:01,887 INFO  L134       CoverageAnalysis]: Checked inductivity of 124 backedges. 8 proven. 0 refuted. 0 times theorem prover too weak. 116 trivial. 0 not checked.
[2020-11-24 20:11:01,888 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:11:01,888 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [15] imperfect sequences [] total 15
[2020-11-24 20:11:01,888 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:11:01,888 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 16 interpolants.
[2020-11-24 20:11:01,889 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=31, Invalid=209, Unknown=0, NotChecked=0, Total=240
[2020-11-24 20:11:01,889 INFO  L87              Difference]: Start difference. First operand 3123 states and 3644 transitions. cyclomatic complexity: 523 Second operand 16 states.
[2020-11-24 20:11:04,561 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:11:04,561 INFO  L93              Difference]: Finished difference Result 3278 states and 3821 transitions.
[2020-11-24 20:11:04,561 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 18 states. 
[2020-11-24 20:11:04,561 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3278 states and 3821 transitions.
[2020-11-24 20:11:04,569 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-24 20:11:04,579 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3278 states to 3278 states and 3821 transitions.
[2020-11-24 20:11:04,579 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 937
[2020-11-24 20:11:04,580 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 937
[2020-11-24 20:11:04,580 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3278 states and 3821 transitions.
[2020-11-24 20:11:04,584 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:11:04,584 INFO  L728         BuchiCegarLoop]: Abstraction has 3278 states and 3821 transitions.
[2020-11-24 20:11:04,587 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3278 states and 3821 transitions.
[2020-11-24 20:11:04,615 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3278 to 3243.
[2020-11-24 20:11:04,615 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3243 states.
[2020-11-24 20:11:04,620 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3243 states to 3243 states and 3777 transitions.
[2020-11-24 20:11:04,620 INFO  L751         BuchiCegarLoop]: Abstraction has 3243 states and 3777 transitions.
[2020-11-24 20:11:04,620 INFO  L631         BuchiCegarLoop]: Abstraction has 3243 states and 3777 transitions.
[2020-11-24 20:11:04,620 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 20:11:04,620 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3243 states and 3777 transitions.
[2020-11-24 20:11:04,625 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-24 20:11:04,625 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:11:04,625 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:11:04,627 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:11:04,627 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7800]              assume null == 0;
[L7801]  CALL        call this := FreshRefGenerator__success();
[L2940]              havoc newRef;
[L2941]              assume Alloc[newRef] == false;
[L2942]              Alloc[newRef] := true;
[L2943]              assume newRef != null;
[L7801]  RET         call this := FreshRefGenerator__success();
[L7802]              assume now >= 0;
[L7803]              assume DType[this] == KOCToken;
[L7804]              assume msgvalue_MSG == 0;
[L7805]              gas := gas - 53000;
[L7806]  CALL        call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L1941]              havoc __exception;
[L1942]              revert := false;
[L1943]  COND FALSE  !(__exception)
[L1970]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4871]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4872]  COND FALSE  !(revert)
[L4875]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3532]              assume msgsender_MSG != null;
[L3533]              Balance[this] := 0;
[L3534]              _balances_ERC20[this] := zeroRefintArr();
[L3535]              sum__balances0[this] := 0;
[L3536]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3537]              sum__allowed1[this] := 0;
[L3538]              _totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4875]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4876]  COND FALSE  !(revert)
[L4879]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4390]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4390]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4391]  COND FALSE  !(revert)
[L4394]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4365]              assume msgsender_MSG != null;
[L4366]              Balance[this] := 0;
[L4367]              _name_ERC20Detailed[this] := 1767506099;
[L4368]              _symbol_ERC20Detailed[this] := 1767506099;
[L4369]              _decimals_ERC20Detailed[this] := 0;
[L4371]              _name_ERC20Detailed[this] := name_s795;
[L4372]              _symbol_ERC20Detailed[this] := symbol_s795;
[L4373]              _decimals_ERC20Detailed[this] := decimals_s795;
[L4394]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4395]  COND FALSE  !(revert)
[L4879]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4880]  COND FALSE  !(revert)
[L4883]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4722]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4722]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4723]  COND FALSE  !(revert)
[L4726]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3532]              assume msgsender_MSG != null;
[L3533]              Balance[this] := 0;
[L3534]              _balances_ERC20[this] := zeroRefintArr();
[L3535]              sum__balances0[this] := 0;
[L3536]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3537]              sum__allowed1[this] := 0;
[L3538]              _totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4726]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4727]  COND FALSE  !(revert)
[L4730]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4699]              assume msgsender_MSG != null;
[L4700]              Balance[this] := 0;
[L4730]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4731]  COND FALSE  !(revert)
[L4883]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4884]  COND FALSE  !(revert)
[L4887]  CALL        call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4827]              assume msgsender_MSG != null;
[L4828]              Balance[this] := 0;
[L4829]              amount_KOCToken[this] := 10000000;
[L4831]              __var_27 := ConstantToRef(7544919301613266970804652377014389568456575767);
[L4832]  COND TRUE   DType[this] == KOCToken
[L4833]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4110]              __var_15 := null;
[L4111]  COND FALSE  !(!(account_s654 != null))
[L4115]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L3083]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3084]  COND FALSE  !(!(c_s106 >= a_s106))
[L3088]              __ret_0_ := c_s106;
[L4115]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L4116]  COND FALSE  !(revert)
[L4119]              _totalSupply_ERC20[this] := __var_16;
[L4120]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], value_s654);
[L3083]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3084]  COND FALSE  !(!(c_s106 >= a_s106))
[L3088]              __ret_0_ := c_s106;
[L4120]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], value_s654);
[L4121]  COND FALSE  !(revert)
[L4124]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s654];
[L4125]              _balances_ERC20[this][account_s654] := __var_17;
[L4126]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s654];
[L4127]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4833]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4834]  COND FALSE  !(revert)
[L4840]              assert { :EventEmitted "CreateTokenSuccess_KOCToken" } true;
[L4887]  RET         call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]  COND FALSE  !(revert)
[L1970]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1971]              assume !revert && gas >= 0;
[L7806]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L7807]              assume !revert && gas >= 0;
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND FALSE  !(choice == 13)
[L7714]  COND TRUE   choice == 12
[L7715]              gas := gas - 21000;
[L7716]  COND TRUE   gas >= 0
[L7717]              assume value_s477 >= 0 && value_s477 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7718]              assume msgvalue_MSG == 0;
[L7719]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s477;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L898]               havoc __exception;
[L899]               revert := false;
[L900]   COND TRUE   __exception
[L901]               __tmp__Balance := Balance;
[L902]               __tmp__DType := DType;
[L903]               __tmp__Alloc := Alloc;
[L904]               __tmp__balance_ADDR := balance_ADDR;
[L905]               __tmp__M_Ref_bool := M_Ref_bool;
[L906]               __tmp__sum := sum;
[L907]               __tmp__M_Ref_int := M_Ref_int;
[L908]               __tmp__sum__balances0 := sum__balances0;
[L909]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L910]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L911]               __tmp__sum__allowed1 := sum__allowed1;
[L912]               __tmp__Length := Length;
[L913]               __tmp__now := now;
[L914]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L915]               __tmp___minters_MinterRole := _minters_MinterRole;
[L916]               __tmp___balances_ERC20 := _balances_ERC20;
[L917]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L918]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L919]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L920]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L921]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L922]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L923]               __tmp__amount_KOCToken := amount_KOCToken;
[L924]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3672]  COND TRUE   __tmp__DType[this] == KOCToken
[L3673]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L4183]              __var_21 := null;
[L4184]  COND TRUE   !(spender_s736 != null)
[L4185]              revert := true;
[L3673]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L3674]  COND TRUE   revert
[L924]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L925]               assume revert || gas < 0;
[L7719]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L7810]  RET         call CorralChoice_KOCToken(this);

Loop:
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND FALSE  !(choice == 13)
[L7714]  COND TRUE   choice == 12
[L7715]              gas := gas - 21000;
[L7716]  COND TRUE   gas >= 0
[L7717]              assume value_s477 >= 0 && value_s477 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7718]              assume msgvalue_MSG == 0;
[L7719]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s477;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L898]               havoc __exception;
[L899]               revert := false;
[L900]   COND TRUE   __exception
[L901]               __tmp__Balance := Balance;
[L902]               __tmp__DType := DType;
[L903]               __tmp__Alloc := Alloc;
[L904]               __tmp__balance_ADDR := balance_ADDR;
[L905]               __tmp__M_Ref_bool := M_Ref_bool;
[L906]               __tmp__sum := sum;
[L907]               __tmp__M_Ref_int := M_Ref_int;
[L908]               __tmp__sum__balances0 := sum__balances0;
[L909]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L910]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L911]               __tmp__sum__allowed1 := sum__allowed1;
[L912]               __tmp__Length := Length;
[L913]               __tmp__now := now;
[L914]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L915]               __tmp___minters_MinterRole := _minters_MinterRole;
[L916]               __tmp___balances_ERC20 := _balances_ERC20;
[L917]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L918]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L919]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L920]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L921]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L922]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L923]               __tmp__amount_KOCToken := amount_KOCToken;
[L924]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3672]  COND TRUE   __tmp__DType[this] == KOCToken
[L3673]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L4183]              __var_21 := null;
[L4184]  COND TRUE   !(spender_s736 != null)
[L4185]              revert := true;
[L3673]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L3674]  COND TRUE   revert
[L924]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L925]               assume revert || gas < 0;
[L7719]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L7810]  RET         call CorralChoice_KOCToken(this);

[2020-11-24 20:11:04,631 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:11:04,631 INFO  L82        PathProgramCache]: Analyzing trace with hash -833082767, now seen corresponding path program 1 times
[2020-11-24 20:11:04,632 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:11:04,645 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:11:04,659 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:11:04,807 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:11:04,807 INFO  L82        PathProgramCache]: Analyzing trace with hash 357190114, now seen corresponding path program 1 times
[2020-11-24 20:11:04,810 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:11:04,816 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:11:04,823 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:11:04,836 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:11:04,836 INFO  L82        PathProgramCache]: Analyzing trace with hash 1185127506, now seen corresponding path program 1 times
[2020-11-24 20:11:04,837 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:11:04,855 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:11:04,876 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
[2020-11-24 20:11:05,264 WARN  L188               SmtUtils]: Spent 100.00 ms on a formula simplification that was a NOOP. DAG size: 259
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 6271 to 12541
[2020-11-24 20:11:05,682 WARN  L188               SmtUtils]: Spent 401.00 ms on a formula simplification. DAG size of input: 207 DAG size of output: 207
[2020-11-24 20:11:06,284 WARN  L188               SmtUtils]: Spent 599.00 ms on a formula simplification. DAG size of input: 270 DAG size of output: 265
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.003s / 0.006s total
Resizing node table from 12073 to 24137
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3517 to 7027
[2020-11-24 20:11:06,464 WARN  L188               SmtUtils]: Spent 152.00 ms on a formula simplification. DAG size of input: 164 DAG size of output: 158
[2020-11-24 20:11:06,630 WARN  L188               SmtUtils]: Spent 164.00 ms on a formula simplification that was a NOOP. DAG size: 327
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 8053 to 16103
[2020-11-24 20:11:07,034 WARN  L188               SmtUtils]: Spent 394.00 ms on a formula simplification. DAG size of input: 262 DAG size of output: 262
[2020-11-24 20:11:07,245 WARN  L188               SmtUtils]: Spent 209.00 ms on a formula simplification that was a NOOP. DAG size: 262
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-24 20:11:07,374 WARN  L188               SmtUtils]: Spent 117.00 ms on a formula simplification. DAG size of input: 150 DAG size of output: 150
[2020-11-24 20:11:07,382 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
[2020-11-24 20:11:08,073 WARN  L188               SmtUtils]: Spent 234.00 ms on a formula simplification. DAG size of input: 214 DAG size of output: 203
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-24 20:11:08,924 WARN  L188               SmtUtils]: Spent 328.00 ms on a formula simplification. DAG size of input: 207 DAG size of output: 207
[2020-11-24 20:11:09,477 WARN  L188               SmtUtils]: Spent 551.00 ms on a formula simplification. DAG size of input: 269 DAG size of output: 265
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7027 to 14051
[2020-11-24 20:11:09,661 WARN  L188               SmtUtils]: Spent 165.00 ms on a formula simplification. DAG size of input: 164 DAG size of output: 158
[2020-11-24 20:11:09,815 WARN  L188               SmtUtils]: Spent 153.00 ms on a formula simplification that was a NOOP. DAG size: 327
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 8053 to 16103
[2020-11-24 20:11:10,245 WARN  L188               SmtUtils]: Spent 413.00 ms on a formula simplification. DAG size of input: 262 DAG size of output: 262
[2020-11-24 20:11:11,193 WARN  L188               SmtUtils]: Spent 945.00 ms on a formula simplification. DAG size of input: 465 DAG size of output: 456
Garbage collection #1: 179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 179 to 353
Garbage collection #2: 353 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 353 to 701
Garbage collection #3: 701 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 701 to 1399
Garbage collection #4: 1399 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1399 to 2797
Garbage collection #5: 2797 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2797 to 5591
Garbage collection #6: 5591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5591 to 11177
Garbage collection #7: 11177 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 11177 to 22349
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-24 20:11:11,462 WARN  L188               SmtUtils]: Spent 254.00 ms on a formula simplification. DAG size of input: 202 DAG size of output: 202
[2020-11-24 20:11:11,668 WARN  L188               SmtUtils]: Spent 189.00 ms on a formula simplification that was a NOOP. DAG size: 315
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-24 20:11:11,901 WARN  L188               SmtUtils]: Spent 226.00 ms on a formula simplification. DAG size of input: 202 DAG size of output: 202
[2020-11-24 20:11:12,364 WARN  L188               SmtUtils]: Spent 462.00 ms on a formula simplification. DAG size of input: 317 DAG size of output: 316
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
[2020-11-24 20:11:12,823 WARN  L188               SmtUtils]: Spent 454.00 ms on a formula simplification. DAG size of input: 311 DAG size of output: 311
[2020-11-24 20:11:12,841 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:11:12,858 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:11:12,867 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:11:12 BasicIcfg
[2020-11-24 20:11:12,867 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 20:11:12,867 INFO  L168              Benchmark]: Toolchain (without parser) took 16939.72 ms. Allocated memory was 1.0 GB in the beginning and 2.4 GB in the end (delta: 1.4 GB). Free memory was 929.8 MB in the beginning and 1.6 GB in the end (delta: -664.6 MB). Peak memory consumption was 1.5 GB. Max. memory is 15.3 GB.
[2020-11-24 20:11:12,868 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:11:12,868 INFO  L168              Benchmark]: Boogie Preprocessor took 128.07 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-24 20:11:12,868 INFO  L168              Benchmark]: UtopiaSpecLang took 72.74 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 903.0 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:11:12,868 INFO  L168              Benchmark]: Boogie Printer took 22.85 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 897.4 MB in the end (delta: 5.6 MB). Peak memory consumption was 5.6 MB. Max. memory is 15.3 GB.
[2020-11-24 20:11:12,869 INFO  L168              Benchmark]: RCFGBuilder took 1245.46 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 67.1 MB). Free memory was 897.4 MB in the beginning and 943.7 MB in the end (delta: -46.3 MB). Peak memory consumption was 185.3 MB. Max. memory is 15.3 GB.
[2020-11-24 20:11:12,869 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.56 ms. Allocated memory is still 1.1 GB. Free memory was 943.7 MB in the beginning and 936.7 MB in the end (delta: 7.0 MB). Peak memory consumption was 7.0 MB. Max. memory is 15.3 GB.
[2020-11-24 20:11:12,869 INFO  L168              Benchmark]: BÃ¼chi Program Product took 2238.24 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 186.6 MB). Free memory was 936.7 MB in the beginning and 1.1 GB in the end (delta: -185.8 MB). Peak memory consumption was 503.0 MB. Max. memory is 15.3 GB.
[2020-11-24 20:11:12,869 INFO  L168              Benchmark]: BlockEncodingV2 took 202.41 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 1.0 GB in the end (delta: 116.4 MB). Peak memory consumption was 116.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:11:12,870 INFO  L168              Benchmark]: BuchiAutomizer took 12990.31 ms. Allocated memory was 1.3 GB in the beginning and 2.4 GB in the end (delta: 1.2 GB). Free memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: -588.4 MB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
[2020-11-24 20:11:12,872 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    7218 locations, 13516 edges
  - StatisticsResult: Encoded RCFG
    7088 locations, 13161 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 128.07 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 72.74 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 903.0 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 22.85 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 897.4 MB in the end (delta: 5.6 MB). Peak memory consumption was 5.6 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1245.46 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 67.1 MB). Free memory was 897.4 MB in the beginning and 943.7 MB in the end (delta: -46.3 MB). Peak memory consumption was 185.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.56 ms. Allocated memory is still 1.1 GB. Free memory was 943.7 MB in the beginning and 936.7 MB in the end (delta: 7.0 MB). Peak memory consumption was 7.0 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 2238.24 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 186.6 MB). Free memory was 936.7 MB in the beginning and 1.1 GB in the end (delta: -185.8 MB). Peak memory consumption was 503.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 202.41 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 1.0 GB in the end (delta: 116.4 MB). Peak memory consumption was 116.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 12990.31 ms. Allocated memory was 1.3 GB in the beginning and 2.4 GB in the end (delta: 1.2 GB). Free memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: -588.4 MB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2793 locations, 4113 edges
  - StatisticsResult: BuchiProgram size
    7218 locations, 13516 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 16 locations. The remainder module has 3243 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 12.9s and 6 iterations.  TraceHistogramMax:5. Analysis of lassos took 9.1s. Construction of modules took 2.2s. BÃ¼chi inclusion checks took 0.9s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 5 MinimizatonAttempts, 971 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3393 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 18353 SDtfs, 14056 SDslu, 25228 SDs, 0 SdLazy, 29626 SolverSat, 2566 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.2s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(7544919301613266970804652377014389568456575788) = (new KOCToken)({from : 7544919301613266970804652377014389568456575780});
[L1941]              havoc __exception;
[L1942]              revert := false;
[L1943]  COND FALSE  !(__exception)
[L1970]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4871]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4872]  COND FALSE  !(revert)
[L4875]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3532]              assume msgsender_MSG != null;
[L3533]              Balance[this] := 0;
[L3534]              _balances_ERC20[this] := zeroRefintArr();
[L3535]              sum__balances0[this] := 0;
[L3536]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3537]              sum__allowed1[this] := 0;
[L3538]              _totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4875]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4876]  COND FALSE  !(revert)
[L4879]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4390]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4390]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4391]  COND FALSE  !(revert)
[L4394]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4365]              assume msgsender_MSG != null;
[L4366]              Balance[this] := 0;
[L4367]              _name_ERC20Detailed[this] := 1767506099;
[L4368]              _symbol_ERC20Detailed[this] := 1767506099;
[L4369]              _decimals_ERC20Detailed[this] := 0;
[L4371]              _name_ERC20Detailed[this] := name_s795;
[L4372]              _symbol_ERC20Detailed[this] := symbol_s795;
[L4373]              _decimals_ERC20Detailed[this] := decimals_s795;
[L4394]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4395]  COND FALSE  !(revert)
[L4879]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4880]  COND FALSE  !(revert)
[L4883]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4722]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4722]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4723]  COND FALSE  !(revert)
[L4726]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3532]              assume msgsender_MSG != null;
[L3533]              Balance[this] := 0;
[L3534]              _balances_ERC20[this] := zeroRefintArr();
[L3535]              sum__balances0[this] := 0;
[L3536]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3537]              sum__allowed1[this] := 0;
[L3538]              _totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4726]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4727]  COND FALSE  !(revert)
[L4730]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4699]              assume msgsender_MSG != null;
[L4700]              Balance[this] := 0;
[L4730]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4731]  COND FALSE  !(revert)
[L4883]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4884]  COND FALSE  !(revert)
[L4887]  CALL        call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4827]              assume msgsender_MSG != null;
[L4828]              Balance[this] := 0;
[L4829]              amount_KOCToken[this] := 10000000;
[L4831]              __var_27 := ConstantToRef(7544919301613266970804652377014389568456575767);
[L4832]  COND TRUE   DType[this] == KOCToken
[L4833]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4110]              __var_15 := null;
[L4111]  COND FALSE  !(!(account_s654 != null))
[L4115]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L3083]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3084]  COND FALSE  !(!(c_s106 >= a_s106))
[L3088]              __ret_0_ := c_s106;
[L4115]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L4116]  COND FALSE  !(revert)
[L4119]              _totalSupply_ERC20[this] := __var_16;
[L4120]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], value_s654);
[L3083]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3084]  COND FALSE  !(!(c_s106 >= a_s106))
[L3088]              __ret_0_ := c_s106;
[L4120]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], value_s654);
[L4121]  COND FALSE  !(revert)
[L4124]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s654];
[L4125]              _balances_ERC20[this][account_s654] := __var_17;
[L4126]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s654];
[L4127]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4833]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4834]  COND FALSE  !(revert)
[L4840]              assert { :EventEmitted "CreateTokenSuccess_KOCToken" } true;
[L4887]  RET         call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]  COND FALSE  !(revert)
[L1970]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1971]              assume !revert && gas >= 0;
[L7806]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
ERC20(7544919301613266970804652377014389568456575788).approve~address~uint256.gas(3979002)({from : 7544919301613266970804652377014389568456575778, spender : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume p1 != msgsender_MSG || p2 != spender_s477;
[L3]                call_approve_ERC200 := true;
[L3]                call_approve_ERC200 := false;
[L3]                revert := revert_hold;
[L898]              havoc __exception;
[L899]              revert := false;
[L900]   COND TRUE  __exception
[L901]              __tmp__Balance := Balance;
[L902]              __tmp__DType := DType;
[L903]              __tmp__Alloc := Alloc;
[L904]              __tmp__balance_ADDR := balance_ADDR;
[L905]              __tmp__M_Ref_bool := M_Ref_bool;
[L906]              __tmp__sum := sum;
[L907]              __tmp__M_Ref_int := M_Ref_int;
[L908]              __tmp__sum__balances0 := sum__balances0;
[L909]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L910]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L911]              __tmp__sum__allowed1 := sum__allowed1;
[L912]              __tmp__Length := Length;
[L913]              __tmp__now := now;
[L914]              __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L915]              __tmp___minters_MinterRole := _minters_MinterRole;
[L916]              __tmp___balances_ERC20 := _balances_ERC20;
[L917]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L918]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L919]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L920]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L921]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L922]              __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L923]              __tmp__amount_KOCToken := amount_KOCToken;
[L924]   CALL       call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3672]  COND TRUE  __tmp__DType[this] == KOCToken
[L3673]  CALL       call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L4183]             __var_21 := null;
[L4184]  COND TRUE  !(spender_s736 != null)
[L4185]             revert := true;
[L3673]  RET        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L3674]  COND TRUE  revert
[L924]   RET        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L925]              assume revert || gas < 0;
[L7719]  RET        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);

Loop:
ERC20(7544919301613266970804652377014389568456575788).approve~address~uint256.gas(3979001)({from : 7544919301613266970804652377014389568456575782, spender : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume p1 != msgsender_MSG || p2 != spender_s477;
[L3]                call_approve_ERC200 := true;
[L3]                call_approve_ERC200 := false;
[L3]                revert := revert_hold;
[L898]              havoc __exception;
[L899]              revert := false;
[L900]   COND TRUE  __exception
[L901]              __tmp__Balance := Balance;
[L902]              __tmp__DType := DType;
[L903]              __tmp__Alloc := Alloc;
[L904]              __tmp__balance_ADDR := balance_ADDR;
[L905]              __tmp__M_Ref_bool := M_Ref_bool;
[L906]              __tmp__sum := sum;
[L907]              __tmp__M_Ref_int := M_Ref_int;
[L908]              __tmp__sum__balances0 := sum__balances0;
[L909]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L910]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L911]              __tmp__sum__allowed1 := sum__allowed1;
[L912]              __tmp__Length := Length;
[L913]              __tmp__now := now;
[L914]              __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L915]              __tmp___minters_MinterRole := _minters_MinterRole;
[L916]              __tmp___balances_ERC20 := _balances_ERC20;
[L917]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L918]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L919]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L920]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L921]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L922]              __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L923]              __tmp__amount_KOCToken := amount_KOCToken;
[L924]   CALL       call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L3672]  COND TRUE  __tmp__DType[this] == KOCToken
[L3673]  CALL       call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L4183]             __var_21 := null;
[L4184]  COND TRUE  !(spender_s736 != null)
[L4185]             revert := true;
[L3673]  RET        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s477, value_s477);
[L3674]  COND TRUE  revert
[L924]   RET        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);
[L925]              assume revert || gas < 0;
[L7719]  RET        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s477, value_s477);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
