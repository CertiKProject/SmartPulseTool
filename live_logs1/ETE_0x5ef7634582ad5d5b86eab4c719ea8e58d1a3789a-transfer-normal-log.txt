This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 15:10:36,118 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 15:10:36,119 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 15:10:36,127 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 15:10:36,127 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 15:10:36,127 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 15:10:36,128 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 15:10:36,129 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 15:10:36,130 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 15:10:36,130 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 15:10:36,131 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 15:10:36,131 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 15:10:36,131 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 15:10:36,132 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 15:10:36,133 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 15:10:36,133 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 15:10:36,133 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 15:10:36,134 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 15:10:36,136 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 15:10:36,137 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 15:10:36,138 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 15:10:36,138 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 15:10:36,140 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 15:10:36,140 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 15:10:36,141 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 15:10:36,141 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 15:10:36,141 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 15:10:36,142 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 15:10:36,142 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 15:10:36,142 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 15:10:36,143 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 15:10:36,143 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 15:10:36,144 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 15:10:36,144 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 15:10:36,145 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 15:10:36,145 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 15:10:36,146 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 15:10:36,146 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 15:10:36,146 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 15:10:36,147 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 15:10:36,147 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 15:10:36,147 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 15:10:36,153 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 15:10:36,153 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 15:10:36,154 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 15:10:36,154 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 15:10:36,154 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 15:10:36,154 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 15:10:36,154 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 15:10:36,154 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 15:10:36,154 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 15:10:36,154 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 15:10:36,155 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 15:10:36,155 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 15:10:36,155 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 15:10:36,155 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 15:10:36,155 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 15:10:36,155 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 15:10:36,155 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 15:10:36,155 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 15:10:36,155 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 15:10:36,155 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 15:10:36,155 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 15:10:36,155 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 15:10:36,156 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 15:10:36,156 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 15:10:36,156 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 15:10:36,156 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 15:10:36,173 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 15:10:36,183 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 15:10:36,185 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 15:10:36,186 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 15:10:36,187 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 15:10:36,187 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl
[2020-11-25 15:10:36,188 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl'
[2020-11-25 15:10:36,264 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 15:10:36,266 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 15:10:36,266 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 15:10:36,266 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 15:10:36,266 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 15:10:36,282 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:36" (1/1) ...
[2020-11-25 15:10:36,284 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:36" (1/1) ...
[2020-11-25 15:10:36,311 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:36" (1/1) ...
[2020-11-25 15:10:36,312 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:36" (1/1) ...
[2020-11-25 15:10:36,330 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:36" (1/1) ...
[2020-11-25 15:10:36,340 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:36" (1/1) ...
[2020-11-25 15:10:36,346 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:36" (1/1) ...
[2020-11-25 15:10:36,355 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 15:10:36,355 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 15:10:36,355 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 15:10:36,357 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 15:10:36,361 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:36" (1/1) ...
[2020-11-25 15:10:36,379 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 15:10:36,384 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 15:10:36,391 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 15:10:36,398 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=recipient_s336 ) && msg.sender!=recipient_s336 ) && amount_s336<=_balances_ERC20[this][msg.sender] ) && ( _balances_ERC20[this][recipient_s336] + amount_s336 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && amount_s336>=0 ) && amount_s336<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s336]>=0 ) && _balances_ERC20[this][recipient_s336]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[recipient_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[recipient_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IdentifierExpression[amount_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 15:10:36,401 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( __ret_0_==true && _balances_ERC20[this][msg.sender]==( ( old(_balances_ERC20[this][msg.sender]) ) - amount_s336 ) ) && _balances_ERC20[this][recipient_s336]==( ( old(_balances_ERC20[this][recipient_s336]) ) + amount_s336 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _allowances_ERC20[this]==( old(_allowances_ERC20[this]) ) ) && _balances_ERC20[this][p1]==( old(_balances_ERC20[this][p1]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],IdentifierExpression[amount_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],IdentifierExpression[amount_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]]
[2020-11-25 15:10:36,408 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 15:10:36,408 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(success_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 15:10:36,418 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:10:36 PropertyContainer
[2020-11-25 15:10:36,418 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 15:10:36,419 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 15:10:36,419 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 15:10:36,419 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 15:10:36,420 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:36" (1/2) ...
[2020-11-25 15:10:36,420 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 15:10:36,420 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 15:10:36,434 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:10:36" (2/2) ...
[2020-11-25 15:10:36,434 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 15:10:36,434 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 15:10:36,434 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 15:10:36,434 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 15:10:36,435 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:36" (1/2) ...
[2020-11-25 15:10:36,484 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 15:10:36,485 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 15:10:36,485 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 15:10:36,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 15:10:36,485 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 15:10:36,485 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 15:10:36,485 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 15:10:36,485 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 15:10:36,485 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 15:10:36,485 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 15:10:36,485 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 15:10:36,486 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 15:10:36,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 15:10:36,486 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 15:10:36,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 15:10:36,486 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 15:10:36,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 15:10:36,486 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 15:10:36,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 15:10:36,487 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-25 15:10:36,487 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-25 15:10:36,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-25 15:10:36,487 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-25 15:10:36,487 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:10:36,487 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 15:10:36,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 15:10:36,487 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:10:36,487 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 15:10:36,487 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:10:36,487 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 15:10:36,487 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 15:10:36,488 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:10:36,488 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 15:10:36,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 15:10:36,488 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 15:10:36,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 15:10:36,488 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 15:10:36,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 15:10:36,488 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 15:10:36,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 15:10:36,488 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 15:10:36,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 15:10:36,488 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 15:10:36,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 15:10:36,489 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 15:10:36,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 15:10:36,489 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 15:10:36,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 15:10:36,489 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 15:10:36,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 15:10:36,489 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 15:10:36,489 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 15:10:36,489 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 15:10:36,489 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 15:10:36,489 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 15:10:36,489 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE_NoBaseCtor__success
[2020-11-25 15:10:36,489 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE
[2020-11-25 15:10:36,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE
[2020-11-25 15:10:36,490 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 15:10:36,490 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 15:10:36,490 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 15:10:36,490 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 15:10:36,490 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 15:10:36,490 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 15:10:36,490 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 15:10:36,490 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-25 15:10:36,490 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-25 15:10:36,490 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 15:10:36,490 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 15:10:36,491 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 15:10:36,491 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 15:10:36,491 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ETE
[2020-11-25 15:10:36,491 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 15:10:36,491 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 15:10:36,491 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 15:10:36,491 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 15:10:36,491 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 15:10:36,491 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 15:10:36,491 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 15:10:36,492 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 15:10:36,492 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 15:10:36,492 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 15:10:36,492 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 15:10:36,492 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 15:10:36,492 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 15:10:36,492 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 15:10:36,492 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 15:10:36,492 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-25 15:10:36,492 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-25 15:10:36,493 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-25 15:10:36,493 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:10:36,493 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 15:10:36,493 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 15:10:36,493 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:10:36,493 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:10:36,493 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:10:36,493 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:10:36,493 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:10:36,493 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:10:36,493 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 15:10:36,494 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 15:10:36,494 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 15:10:36,494 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 15:10:36,494 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 15:10:36,494 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 15:10:36,494 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 15:10:36,494 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 15:10:36,494 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 15:10:36,494 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 15:10:36,494 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 15:10:36,495 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 15:10:36,495 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 15:10:36,495 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 15:10:36,495 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:10:36,495 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:10:36,495 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:10:36,495 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:10:36,495 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 15:10:36,495 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 15:10:36,495 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 15:10:36,496 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 15:10:36,496 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 15:10:36,496 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE_NoBaseCtor__fail
[2020-11-25 15:10:36,496 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE__success
[2020-11-25 15:10:36,496 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE__fail
[2020-11-25 15:10:36,496 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 15:10:36,496 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 15:10:36,496 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 15:10:36,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 15:10:36,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 15:10:36,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 15:10:36,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 15:10:36,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 15:10:36,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 15:10:36,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 15:10:36,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 15:10:36,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 15:10:36,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 15:10:36,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 15:10:36,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 15:10:36,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 15:10:36,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 15:10:36,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 15:10:36,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 15:10:36,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 15:10:36,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-25 15:10:36,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-25 15:10:36,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-25 15:10:36,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-25 15:10:36,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-25 15:10:36,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:10:36,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:10:36,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 15:10:36,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 15:10:36,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:10:36,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:10:36,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:10:36,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 15:10:36,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:10:36,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:10:36,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:10:36,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 15:10:36,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:10:36,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 15:10:36,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:10:36,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:10:36,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 15:10:36,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 15:10:36,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 15:10:36,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 15:10:36,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 15:10:36,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 15:10:36,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 15:10:36,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 15:10:36,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 15:10:36,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 15:10:36,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 15:10:36,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 15:10:36,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 15:10:36,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 15:10:36,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:10:36,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:10:36,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:10:36,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:10:36,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 15:10:36,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 15:10:36,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 15:10:36,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 15:10:36,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 15:10:36,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 15:10:36,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 15:10:36,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 15:10:36,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 15:10:36,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 15:10:36,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE_NoBaseCtor__fail
[2020-11-25 15:10:36,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE_NoBaseCtor__success
[2020-11-25 15:10:36,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE__fail
[2020-11-25 15:10:36,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE__success
[2020-11-25 15:10:36,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 15:10:36,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 15:10:36,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 15:10:36,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 15:10:36,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 15:10:36,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 15:10:36,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 15:10:36,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 15:10:36,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 15:10:36,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 15:10:36,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-25 15:10:36,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-25 15:10:36,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 15:10:36,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 15:10:36,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 15:10:36,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 15:10:36,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ETE
[2020-11-25 15:10:36,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 15:10:36,504 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 15:10:36,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 15:10:36,686 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:10:36,686 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:10:36,687 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:10:36,907 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:10:37,134 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 15:10:37,135 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 15:10:37,136 INFO  L202        PluginConnector]: Adding new model ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:10:37 BoogieIcfgContainer
[2020-11-25 15:10:37,137 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:10:36" (2/2) ...
[2020-11-25 15:10:37,137 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 15:10:37,137 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@2ddb83f0 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:10:37, skipping insertion in model container
[2020-11-25 15:10:37,137 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 15:10:37,137 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 15:10:37,137 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 15:10:37,139 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 15:10:37,139 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:36" (1/3) ...
[2020-11-25 15:10:37,139 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@62c3a30e and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:10:37, skipping insertion in model container
[2020-11-25 15:10:37,139 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:10:36" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 15:10:37,175 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:10:37 NWAContainer
[2020-11-25 15:10:37,175 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 15:10:37,175 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 15:10:37,176 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 15:10:37,176 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 15:10:37,177 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:10:37" (3/4) ...
[2020-11-25 15:10:37,178 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1421eaf3 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:10:37, skipping insertion in model container
[2020-11-25 15:10:37,178 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:10:37" (4/4) ...
[2020-11-25 15:10:37,181 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 15:10:37,184 INFO  L110   BuchiProductObserver]: Initial RCFG 1503 locations, 2161 edges
[2020-11-25 15:10:37,185 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 15:10:37,195 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 15:10:38,488 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 15:10:38,496 INFO  L110   BuchiProductObserver]: BuchiProgram size 3844 locations, 7073 edges
[2020-11-25 15:10:38,496 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:10:38 BoogieIcfgContainer
[2020-11-25 15:10:38,496 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 15:10:38,496 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 15:10:38,496 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 15:10:38,498 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 15:10:38,499 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:10:38" (1/1) ...
[2020-11-25 15:10:38,584 INFO  L313           BlockEncoder]: Initial Icfg 3844 locations, 7073 edges
[2020-11-25 15:10:38,584 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 15:10:38,585 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 15:10:38,585 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 15:10:38,585 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 15:10:38,597 INFO  L70    emoveInfeasibleEdges]: Removed 168 edges and 15 locations because of local infeasibility
[2020-11-25 15:10:38,606 INFO  L70        RemoveSinkStates]: Removed 116 edges and 77 locations by removing sink states
[2020-11-25 15:10:38,617 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 15:10:38,620 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 15:10:38,623 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 15:10:38,624 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 15:10:38,628 INFO  L313           BlockEncoder]: Encoded RCFG 3732 locations, 6760 edges
[2020-11-25 15:10:38,628 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:10:38 BasicIcfg
[2020-11-25 15:10:38,628 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 15:10:38,629 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 15:10:38,629 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 15:10:38,631 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 15:10:38,631 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:10:38,631 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:36" (1/6) ...
[2020-11-25 15:10:38,633 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6372e6df and model type ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:10:38, skipping insertion in model container
[2020-11-25 15:10:38,633 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:10:38,633 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:10:36" (2/6) ...
[2020-11-25 15:10:38,633 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6372e6df and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:10:38, skipping insertion in model container
[2020-11-25 15:10:38,633 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:10:38,633 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:10:37" (3/6) ...
[2020-11-25 15:10:38,633 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6372e6df and model type ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:10:38, skipping insertion in model container
[2020-11-25 15:10:38,633 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:10:38,633 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:10:37" (4/6) ...
[2020-11-25 15:10:38,634 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6372e6df and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:10:38, skipping insertion in model container
[2020-11-25 15:10:38,634 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:10:38,634 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:10:38" (5/6) ...
[2020-11-25 15:10:38,634 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6372e6df and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 03:10:38, skipping insertion in model container
[2020-11-25 15:10:38,634 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:10:38,634 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:10:38" (6/6) ...
[2020-11-25 15:10:38,635 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transfer-normal.bpl_BEv2
[2020-11-25 15:10:38,665 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 15:10:38,666 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 15:10:38,666 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 15:10:38,666 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 15:10:38,666 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 15:10:38,666 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 15:10:38,666 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 15:10:38,666 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 15:10:38,666 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 15:10:38,701 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3732 states.
[2020-11-25 15:10:38,747 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:38,747 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:38,747 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:38,755 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:38,755 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:38,755 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 15:10:38,755 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3732 states.
[2020-11-25 15:10:38,776 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:38,776 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:38,776 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:38,778 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:38,778 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4164]              assume null == 0;
[L4165]  CALL        call this := FreshRefGenerator__success();
[L1483]              havoc newRef;
[L1484]              assume Alloc[newRef] == false;
[L1485]              Alloc[newRef] := true;
[L1486]              assume newRef != null;
[L4165]  RET         call this := FreshRefGenerator__success();
[L4166]              assume now >= 0;
[L4167]              assume DType[this] == ETE;
[L4168]              assume msgvalue_MSG == 0;
[L4169]              gas := gas - 53000;
[L4170]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND TRUE   revert
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND TRUE   revert
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume !revert && gas >= 0;

Loop:
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND TRUE   choice == 11
[L4086]              gas := gas - 21000;
[L4087]  COND FALSE  !(gas >= 0)
[L4174]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:38,791 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:38,791 INFO  L82        PathProgramCache]: Analyzing trace with hash 294281339, now seen corresponding path program 1 times
[2020-11-25 15:10:38,795 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:38,811 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:10:38,845 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:10:38,846 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:10:38,846 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 15:10:39,008 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:10:39,016 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 15:10:39,016 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 15:10:39,017 INFO  L87              Difference]: Start difference. First operand 3732 states. Second operand 3 states.
[2020-11-25 15:10:39,159 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:10:39,159 INFO  L93              Difference]: Finished difference Result 2169 states and 2612 transitions.
[2020-11-25 15:10:39,159 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 15:10:39,160 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2169 states and 2612 transitions.
[2020-11-25 15:10:39,172 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:39,189 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2169 states to 2169 states and 2612 transitions.
[2020-11-25 15:10:39,190 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 15:10:39,191 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 468
[2020-11-25 15:10:39,191 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2169 states and 2612 transitions.
[2020-11-25 15:10:39,197 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:10:39,198 INFO  L728         BuchiCegarLoop]: Abstraction has 2169 states and 2612 transitions.
[2020-11-25 15:10:39,211 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2169 states and 2612 transitions.
[2020-11-25 15:10:39,257 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2169 to 2169.
[2020-11-25 15:10:39,257 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2169 states.
[2020-11-25 15:10:39,265 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2169 states to 2169 states and 2612 transitions.
[2020-11-25 15:10:39,266 INFO  L751         BuchiCegarLoop]: Abstraction has 2169 states and 2612 transitions.
[2020-11-25 15:10:39,267 INFO  L631         BuchiCegarLoop]: Abstraction has 2169 states and 2612 transitions.
[2020-11-25 15:10:39,267 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 15:10:39,267 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2169 states and 2612 transitions.
[2020-11-25 15:10:39,274 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:39,275 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:39,275 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:39,277 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:39,277 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4164]              assume null == 0;
[L4165]  CALL        call this := FreshRefGenerator__success();
[L1483]              havoc newRef;
[L1484]              assume Alloc[newRef] == false;
[L1485]              Alloc[newRef] := true;
[L1486]              assume newRef != null;
[L4165]  RET         call this := FreshRefGenerator__success();
[L4166]              assume now >= 0;
[L4167]              assume DType[this] == ETE;
[L4168]              assume msgvalue_MSG == 0;
[L4169]              gas := gas - 53000;
[L4170]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND TRUE   revert
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume !revert && gas >= 0;
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND TRUE   choice == 9
[L4098]              gas := gas - 21000;
[L4099]  COND TRUE   gas >= 0
[L4100]              assume amount_s336 >= 0 && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4101]              assume msgvalue_MSG == 0;
[L4102]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s336) && msgsender_MSG != recipient_s336) && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s336] + amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L621]               havoc __exception;
[L622]               revert := false;
[L623]   COND FALSE  !(__exception)
[L644]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1927]  COND TRUE   DType[this] == ETE
[L1928]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1649]              __ret_0_ := msgsender_MSG;
[L1928]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1929]  COND TRUE   revert
[L644]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L645]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s336) && _balances_ERC20[this][recipient_s336] == old(_balances_ERC20[this][recipient_s336]) + amount_s336) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4102]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L4174]  RET         call CorralChoice_ETE(this);

Loop:
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND TRUE   choice == 9
[L4098]              gas := gas - 21000;
[L4099]  COND TRUE   gas >= 0
[L4100]              assume amount_s336 >= 0 && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4101]              assume msgvalue_MSG == 0;
[L4102]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s336) && msgsender_MSG != recipient_s336) && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s336] + amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L621]               havoc __exception;
[L622]               revert := false;
[L623]   COND FALSE  !(__exception)
[L644]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1927]  COND TRUE   DType[this] == ETE
[L1928]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1649]              __ret_0_ := msgsender_MSG;
[L1928]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1929]  COND TRUE   revert
[L644]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L645]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s336) && _balances_ERC20[this][recipient_s336] == old(_balances_ERC20[this][recipient_s336]) + amount_s336) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4102]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L4174]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:39,281 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:39,281 INFO  L82        PathProgramCache]: Analyzing trace with hash 1805667438, now seen corresponding path program 1 times
[2020-11-25 15:10:39,283 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:39,293 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:10:39,325 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:10:39,325 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:10:39,325 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 15:10:39,327 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:10:39,327 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 15:10:39,327 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 15:10:39,327 INFO  L87              Difference]: Start difference. First operand 2169 states and 2612 transitions. cyclomatic complexity: 445 Second operand 3 states.
[2020-11-25 15:10:39,413 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:10:39,413 INFO  L93              Difference]: Finished difference Result 2769 states and 3266 transitions.
[2020-11-25 15:10:39,413 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 15:10:39,414 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2769 states and 3266 transitions.
[2020-11-25 15:10:39,428 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:10:39,445 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2769 states to 2769 states and 3266 transitions.
[2020-11-25 15:10:39,445 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 633
[2020-11-25 15:10:39,446 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 633
[2020-11-25 15:10:39,446 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2769 states and 3266 transitions.
[2020-11-25 15:10:39,452 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:10:39,452 INFO  L728         BuchiCegarLoop]: Abstraction has 2769 states and 3266 transitions.
[2020-11-25 15:10:39,455 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2769 states and 3266 transitions.
[2020-11-25 15:10:39,488 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2769 to 2361.
[2020-11-25 15:10:39,488 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2361 states.
[2020-11-25 15:10:39,493 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2361 states to 2361 states and 2772 transitions.
[2020-11-25 15:10:39,493 INFO  L751         BuchiCegarLoop]: Abstraction has 2361 states and 2772 transitions.
[2020-11-25 15:10:39,494 INFO  L631         BuchiCegarLoop]: Abstraction has 2361 states and 2772 transitions.
[2020-11-25 15:10:39,494 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 15:10:39,494 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2361 states and 2772 transitions.
[2020-11-25 15:10:39,500 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:39,500 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:39,500 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:39,503 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:39,503 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4164]              assume null == 0;
[L4165]  CALL        call this := FreshRefGenerator__success();
[L1483]              havoc newRef;
[L1484]              assume Alloc[newRef] == false;
[L1485]              Alloc[newRef] := true;
[L1486]              assume newRef != null;
[L4165]  RET         call this := FreshRefGenerator__success();
[L4166]              assume now >= 0;
[L4167]              assume DType[this] == ETE;
[L4168]              assume msgvalue_MSG == 0;
[L4169]              gas := gas - 53000;
[L4170]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L2789]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L2789]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2790]  COND FALSE  !(revert)
[L2793]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L1853]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1857]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1825]              assume msgsender_MSG != null;
[L1826]              Balance[this] := 0;
[L1827]              _balances_ERC20[this] := zeroRefintArr();
[L1828]              sum__balances0[this] := 0;
[L1829]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1830]              sum__allowances1[this] := 0;
[L1831]              _totalSupply_ERC20[this] := 0;
[L1861]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L2793]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2797]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1563]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1563]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]  COND FALSE  !(revert)
[L1567]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1538]              assume msgsender_MSG != null;
[L1539]              Balance[this] := 0;
[L1540]              _name_ERC20Detailed[this] := 284814211;
[L1541]              _symbol_ERC20Detailed[this] := 284814211;
[L1542]              _decimals_ERC20Detailed[this] := 0;
[L1544]              _name_ERC20Detailed[this] := name_s99;
[L1545]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1546]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1567]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1568]  COND FALSE  !(revert)
[L2797]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2798]  COND FALSE  !(revert)
[L2801]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2733]              assume msgsender_MSG != null;
[L2734]              Balance[this] := 0;
[L2736]  COND TRUE   DType[this] == ETE
[L2737]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1605]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2737]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2738]  COND FALSE  !(revert)
[L2744]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2745]  COND TRUE   DType[this] == ETE
[L2746]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2467]              __var_16 := null;
[L2468]  COND TRUE   !(account_s562 != null)
[L2469]              revert := true;
[L2746]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2747]  COND TRUE   revert
[L2801]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2802]  COND FALSE  !(revert)
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume !revert && gas >= 0;
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND TRUE   choice == 9
[L4098]              gas := gas - 21000;
[L4099]  COND TRUE   gas >= 0
[L4100]              assume amount_s336 >= 0 && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4101]              assume msgvalue_MSG == 0;
[L4102]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s336) && msgsender_MSG != recipient_s336) && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s336] + amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L621]               havoc __exception;
[L622]               revert := false;
[L623]   COND FALSE  !(__exception)
[L644]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1927]  COND TRUE   DType[this] == ETE
[L1928]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1649]              __ret_0_ := msgsender_MSG;
[L1928]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1929]  COND FALSE  !(revert)
[L1940]  COND TRUE   DType[this] == ETE
[L1941]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L2411]              __var_12 := null;
[L2412]  COND TRUE   !(sender_s519 != null)
[L2413]              revert := true;
[L1941]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1942]  COND TRUE   revert
[L644]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L645]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s336) && _balances_ERC20[this][recipient_s336] == old(_balances_ERC20[this][recipient_s336]) + amount_s336) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4102]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L4174]  RET         call CorralChoice_ETE(this);

Loop:
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND TRUE   choice == 9
[L4098]              gas := gas - 21000;
[L4099]  COND TRUE   gas >= 0
[L4100]              assume amount_s336 >= 0 && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4101]              assume msgvalue_MSG == 0;
[L4102]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s336) && msgsender_MSG != recipient_s336) && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s336] + amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L621]               havoc __exception;
[L622]               revert := false;
[L623]   COND FALSE  !(__exception)
[L644]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1927]  COND TRUE   DType[this] == ETE
[L1928]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1649]              __ret_0_ := msgsender_MSG;
[L1928]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1929]  COND FALSE  !(revert)
[L1940]  COND TRUE   DType[this] == ETE
[L1941]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L2411]              __var_12 := null;
[L2412]  COND TRUE   !(sender_s519 != null)
[L2413]              revert := true;
[L1941]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1942]  COND TRUE   revert
[L644]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L645]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s336) && _balances_ERC20[this][recipient_s336] == old(_balances_ERC20[this][recipient_s336]) + amount_s336) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4102]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L4174]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:39,508 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:39,508 INFO  L82        PathProgramCache]: Analyzing trace with hash -1355229833, now seen corresponding path program 1 times
[2020-11-25 15:10:39,509 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:39,524 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:10:39,584 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 7 refuted. 0 times theorem prover too weak. 33 trivial. 0 not checked.
[2020-11-25 15:10:39,584 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 15:10:39,584 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 15:10:39,585 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:10:39,585 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 15:10:39,585 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 15:10:39,586 INFO  L87              Difference]: Start difference. First operand 2361 states and 2772 transitions. cyclomatic complexity: 413 Second operand 7 states.
[2020-11-25 15:10:39,631 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:10:39,631 INFO  L93              Difference]: Finished difference Result 2369 states and 2779 transitions.
[2020-11-25 15:10:39,631 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 15:10:39,631 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2369 states and 2779 transitions.
[2020-11-25 15:10:39,640 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:39,650 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2369 states to 2360 states and 2770 transitions.
[2020-11-25 15:10:39,650 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 524
[2020-11-25 15:10:39,650 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 524
[2020-11-25 15:10:39,650 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2360 states and 2770 transitions.
[2020-11-25 15:10:39,653 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:10:39,653 INFO  L728         BuchiCegarLoop]: Abstraction has 2360 states and 2770 transitions.
[2020-11-25 15:10:39,655 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2360 states and 2770 transitions.
[2020-11-25 15:10:39,672 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2360 to 2360.
[2020-11-25 15:10:39,673 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2360 states.
[2020-11-25 15:10:39,675 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2360 states to 2360 states and 2770 transitions.
[2020-11-25 15:10:39,676 INFO  L751         BuchiCegarLoop]: Abstraction has 2360 states and 2770 transitions.
[2020-11-25 15:10:39,676 INFO  L631         BuchiCegarLoop]: Abstraction has 2360 states and 2770 transitions.
[2020-11-25 15:10:39,676 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 15:10:39,676 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2360 states and 2770 transitions.
[2020-11-25 15:10:39,680 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:39,680 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:39,680 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:39,682 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:39,682 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4164]              assume null == 0;
[L4165]  CALL        call this := FreshRefGenerator__success();
[L1483]              havoc newRef;
[L1484]              assume Alloc[newRef] == false;
[L1485]              Alloc[newRef] := true;
[L1486]              assume newRef != null;
[L4165]  RET         call this := FreshRefGenerator__success();
[L4166]              assume now >= 0;
[L4167]              assume DType[this] == ETE;
[L4168]              assume msgvalue_MSG == 0;
[L4169]              gas := gas - 53000;
[L4170]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L2789]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L2789]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2790]  COND FALSE  !(revert)
[L2793]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L1853]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1857]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1825]              assume msgsender_MSG != null;
[L1826]              Balance[this] := 0;
[L1827]              _balances_ERC20[this] := zeroRefintArr();
[L1828]              sum__balances0[this] := 0;
[L1829]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1830]              sum__allowances1[this] := 0;
[L1831]              _totalSupply_ERC20[this] := 0;
[L1861]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L2793]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2797]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1563]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1563]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]  COND FALSE  !(revert)
[L1567]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1538]              assume msgsender_MSG != null;
[L1539]              Balance[this] := 0;
[L1540]              _name_ERC20Detailed[this] := 284814211;
[L1541]              _symbol_ERC20Detailed[this] := 284814211;
[L1542]              _decimals_ERC20Detailed[this] := 0;
[L1544]              _name_ERC20Detailed[this] := name_s99;
[L1545]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1546]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1567]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1568]  COND FALSE  !(revert)
[L2797]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2798]  COND FALSE  !(revert)
[L2801]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2733]              assume msgsender_MSG != null;
[L2734]              Balance[this] := 0;
[L2736]  COND TRUE   DType[this] == ETE
[L2737]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1605]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2737]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2738]  COND FALSE  !(revert)
[L2744]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2745]  COND TRUE   DType[this] == ETE
[L2746]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2467]              __var_16 := null;
[L2468]  COND FALSE  !(!(account_s562 != null))
[L2472]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND TRUE   !(c_s165 >= a_s165)
[L1702]              revert := true;
[L2472]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2473]  COND TRUE   revert
[L2746]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2747]  COND TRUE   revert
[L2801]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2802]  COND FALSE  !(revert)
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume !revert && gas >= 0;
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND TRUE   choice == 9
[L4098]              gas := gas - 21000;
[L4099]  COND TRUE   gas >= 0
[L4100]              assume amount_s336 >= 0 && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4101]              assume msgvalue_MSG == 0;
[L4102]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s336) && msgsender_MSG != recipient_s336) && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s336] + amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L621]               havoc __exception;
[L622]               revert := false;
[L623]   COND FALSE  !(__exception)
[L644]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1927]  COND TRUE   DType[this] == ETE
[L1928]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1649]              __ret_0_ := msgsender_MSG;
[L1928]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1929]  COND FALSE  !(revert)
[L1940]  COND TRUE   DType[this] == ETE
[L1941]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L2411]              __var_12 := null;
[L2412]  COND TRUE   !(sender_s519 != null)
[L2413]              revert := true;
[L1941]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1942]  COND TRUE   revert
[L644]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L645]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s336) && _balances_ERC20[this][recipient_s336] == old(_balances_ERC20[this][recipient_s336]) + amount_s336) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4102]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L4174]  RET         call CorralChoice_ETE(this);

Loop:
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND TRUE   choice == 9
[L4098]              gas := gas - 21000;
[L4099]  COND TRUE   gas >= 0
[L4100]              assume amount_s336 >= 0 && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4101]              assume msgvalue_MSG == 0;
[L4102]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s336) && msgsender_MSG != recipient_s336) && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s336] + amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L621]               havoc __exception;
[L622]               revert := false;
[L623]   COND FALSE  !(__exception)
[L644]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1927]  COND TRUE   DType[this] == ETE
[L1928]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1649]              __ret_0_ := msgsender_MSG;
[L1928]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1929]  COND FALSE  !(revert)
[L1940]  COND TRUE   DType[this] == ETE
[L1941]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L2411]              __var_12 := null;
[L2412]  COND TRUE   !(sender_s519 != null)
[L2413]              revert := true;
[L1941]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1942]  COND TRUE   revert
[L644]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L645]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s336) && _balances_ERC20[this][recipient_s336] == old(_balances_ERC20[this][recipient_s336]) + amount_s336) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4102]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L4174]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:39,685 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:39,685 INFO  L82        PathProgramCache]: Analyzing trace with hash 234613724, now seen corresponding path program 1 times
[2020-11-25 15:10:39,686 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:39,694 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:10:39,737 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 15:10:39,737 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:10:39,737 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 15:10:39,738 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:10:39,738 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 15:10:39,738 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 15:10:39,738 INFO  L87              Difference]: Start difference. First operand 2360 states and 2770 transitions. cyclomatic complexity: 412 Second operand 3 states.
[2020-11-25 15:10:39,784 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:10:39,784 INFO  L93              Difference]: Finished difference Result 2768 states and 3176 transitions.
[2020-11-25 15:10:39,784 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 15:10:39,785 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2768 states and 3176 transitions.
[2020-11-25 15:10:39,794 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:10:39,804 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2768 states to 2595 states and 2972 transitions.
[2020-11-25 15:10:39,805 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 583
[2020-11-25 15:10:39,805 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 601
[2020-11-25 15:10:39,805 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2595 states and 2972 transitions.
[2020-11-25 15:10:39,808 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:10:39,809 INFO  L728         BuchiCegarLoop]: Abstraction has 2595 states and 2972 transitions.
[2020-11-25 15:10:39,811 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2595 states and 2972 transitions.
[2020-11-25 15:10:39,831 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2595 to 2239.
[2020-11-25 15:10:39,831 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2239 states.
[2020-11-25 15:10:39,834 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2239 states to 2239 states and 2530 transitions.
[2020-11-25 15:10:39,834 INFO  L751         BuchiCegarLoop]: Abstraction has 2239 states and 2530 transitions.
[2020-11-25 15:10:39,834 INFO  L631         BuchiCegarLoop]: Abstraction has 2239 states and 2530 transitions.
[2020-11-25 15:10:39,834 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 15:10:39,835 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2239 states and 2530 transitions.
[2020-11-25 15:10:39,846 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:39,846 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:39,846 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:39,850 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:39,850 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4164]              assume null == 0;
[L4165]  CALL        call this := FreshRefGenerator__success();
[L1483]              havoc newRef;
[L1484]              assume Alloc[newRef] == false;
[L1485]              Alloc[newRef] := true;
[L1486]              assume newRef != null;
[L4165]  RET         call this := FreshRefGenerator__success();
[L4166]              assume now >= 0;
[L4167]              assume DType[this] == ETE;
[L4168]              assume msgvalue_MSG == 0;
[L4169]              gas := gas - 53000;
[L4170]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L2789]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L2789]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2790]  COND FALSE  !(revert)
[L2793]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L1853]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1857]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1825]              assume msgsender_MSG != null;
[L1826]              Balance[this] := 0;
[L1827]              _balances_ERC20[this] := zeroRefintArr();
[L1828]              sum__balances0[this] := 0;
[L1829]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1830]              sum__allowances1[this] := 0;
[L1831]              _totalSupply_ERC20[this] := 0;
[L1861]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L2793]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2797]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1563]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1563]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]  COND FALSE  !(revert)
[L1567]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1538]              assume msgsender_MSG != null;
[L1539]              Balance[this] := 0;
[L1540]              _name_ERC20Detailed[this] := 284814211;
[L1541]              _symbol_ERC20Detailed[this] := 284814211;
[L1542]              _decimals_ERC20Detailed[this] := 0;
[L1544]              _name_ERC20Detailed[this] := name_s99;
[L1545]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1546]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1567]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1568]  COND FALSE  !(revert)
[L2797]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2798]  COND FALSE  !(revert)
[L2801]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2733]              assume msgsender_MSG != null;
[L2734]              Balance[this] := 0;
[L2736]  COND TRUE   DType[this] == ETE
[L2737]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1605]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2737]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2738]  COND FALSE  !(revert)
[L2744]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2745]  COND TRUE   DType[this] == ETE
[L2746]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2467]              __var_16 := null;
[L2468]  COND FALSE  !(!(account_s562 != null))
[L2472]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2472]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2473]  COND FALSE  !(revert)
[L2476]              _totalSupply_ERC20[this] := __var_17;
[L2477]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2477]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L2478]  COND FALSE  !(revert)
[L2481]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s562];
[L2482]              _balances_ERC20[this][account_s562] := __var_18;
[L2483]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s562];
[L2484]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2746]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2747]  COND FALSE  !(revert)
[L2801]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2802]  COND FALSE  !(revert)
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume !revert && gas >= 0;
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND TRUE   choice == 9
[L4098]              gas := gas - 21000;
[L4099]  COND TRUE   gas >= 0
[L4100]              assume amount_s336 >= 0 && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4101]              assume msgvalue_MSG == 0;
[L4102]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s336) && msgsender_MSG != recipient_s336) && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s336] + amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L621]               havoc __exception;
[L622]               revert := false;
[L623]   COND TRUE   __exception
[L624]               __tmp__Balance := Balance;
[L625]               __tmp__DType := DType;
[L626]               __tmp__Alloc := Alloc;
[L627]               __tmp__balance_ADDR := balance_ADDR;
[L628]               __tmp__M_Ref_int := M_Ref_int;
[L629]               __tmp__sum__balances0 := sum__balances0;
[L630]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L631]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L632]               __tmp__sum__allowances1 := sum__allowances1;
[L633]               __tmp__Length := Length;
[L634]               __tmp__now := now;
[L635]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L636]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L637]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L638]               __tmp___balances_ERC20 := _balances_ERC20;
[L639]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L640]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L641]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1894]  COND TRUE   __tmp__DType[this] == ETE
[L1895]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1643]              __ret_0_ := msgsender_MSG;
[L1895]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1907]  COND TRUE   __tmp__DType[this] == ETE
[L1908]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L2379]              __var_12 := null;
[L2380]  COND TRUE   !(sender_s519 != null)
[L2381]              revert := true;
[L1908]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1909]  COND TRUE   revert
[L641]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L642]               assume revert || gas < 0;
[L4102]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L4174]  RET         call CorralChoice_ETE(this);

Loop:
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND TRUE   choice == 9
[L4098]              gas := gas - 21000;
[L4099]  COND TRUE   gas >= 0
[L4100]              assume amount_s336 >= 0 && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4101]              assume msgvalue_MSG == 0;
[L4102]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s336) && msgsender_MSG != recipient_s336) && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s336] + amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L621]               havoc __exception;
[L622]               revert := false;
[L623]   COND TRUE   __exception
[L624]               __tmp__Balance := Balance;
[L625]               __tmp__DType := DType;
[L626]               __tmp__Alloc := Alloc;
[L627]               __tmp__balance_ADDR := balance_ADDR;
[L628]               __tmp__M_Ref_int := M_Ref_int;
[L629]               __tmp__sum__balances0 := sum__balances0;
[L630]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L631]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L632]               __tmp__sum__allowances1 := sum__allowances1;
[L633]               __tmp__Length := Length;
[L634]               __tmp__now := now;
[L635]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L636]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L637]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L638]               __tmp___balances_ERC20 := _balances_ERC20;
[L639]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L640]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L641]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1894]  COND TRUE   __tmp__DType[this] == ETE
[L1895]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1643]              __ret_0_ := msgsender_MSG;
[L1895]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1907]  COND TRUE   __tmp__DType[this] == ETE
[L1908]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L2379]              __var_12 := null;
[L2380]  COND TRUE   !(sender_s519 != null)
[L2381]              revert := true;
[L1908]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1909]  COND TRUE   revert
[L641]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L642]               assume revert || gas < 0;
[L4102]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L4174]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:39,855 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:39,855 INFO  L82        PathProgramCache]: Analyzing trace with hash -1538164047, now seen corresponding path program 1 times
[2020-11-25 15:10:39,856 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:39,874 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:10:39,951 INFO  L134       CoverageAnalysis]: Checked inductivity of 45 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 45 trivial. 0 not checked.
[2020-11-25 15:10:39,951 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:10:39,952 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-25 15:10:39,952 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:10:39,952 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-25 15:10:39,952 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-25 15:10:39,952 INFO  L87              Difference]: Start difference. First operand 2239 states and 2530 transitions. cyclomatic complexity: 293 Second operand 8 states.
[2020-11-25 15:10:40,046 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:10:40,047 INFO  L93              Difference]: Finished difference Result 2263 states and 2558 transitions.
[2020-11-25 15:10:40,047 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 15:10:40,047 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2263 states and 2558 transitions.
[2020-11-25 15:10:40,053 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:40,061 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2263 states to 2243 states and 2536 transitions.
[2020-11-25 15:10:40,061 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 514
[2020-11-25 15:10:40,062 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 514
[2020-11-25 15:10:40,062 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2243 states and 2536 transitions.
[2020-11-25 15:10:40,064 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:10:40,064 INFO  L728         BuchiCegarLoop]: Abstraction has 2243 states and 2536 transitions.
[2020-11-25 15:10:40,067 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2243 states and 2536 transitions.
[2020-11-25 15:10:40,086 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2243 to 2243.
[2020-11-25 15:10:40,087 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2243 states.
[2020-11-25 15:10:40,090 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2243 states to 2243 states and 2536 transitions.
[2020-11-25 15:10:40,090 INFO  L751         BuchiCegarLoop]: Abstraction has 2243 states and 2536 transitions.
[2020-11-25 15:10:40,090 INFO  L631         BuchiCegarLoop]: Abstraction has 2243 states and 2536 transitions.
[2020-11-25 15:10:40,090 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 15:10:40,091 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2243 states and 2536 transitions.
[2020-11-25 15:10:40,094 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:40,094 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:40,094 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:40,096 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:40,096 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4164]              assume null == 0;
[L4165]  CALL        call this := FreshRefGenerator__success();
[L1483]              havoc newRef;
[L1484]              assume Alloc[newRef] == false;
[L1485]              Alloc[newRef] := true;
[L1486]              assume newRef != null;
[L4165]  RET         call this := FreshRefGenerator__success();
[L4166]              assume now >= 0;
[L4167]              assume DType[this] == ETE;
[L4168]              assume msgvalue_MSG == 0;
[L4169]              gas := gas - 53000;
[L4170]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L2789]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L2789]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2790]  COND FALSE  !(revert)
[L2793]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L1853]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1857]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1825]              assume msgsender_MSG != null;
[L1826]              Balance[this] := 0;
[L1827]              _balances_ERC20[this] := zeroRefintArr();
[L1828]              sum__balances0[this] := 0;
[L1829]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1830]              sum__allowances1[this] := 0;
[L1831]              _totalSupply_ERC20[this] := 0;
[L1861]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L2793]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2797]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1563]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1563]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]  COND FALSE  !(revert)
[L1567]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1538]              assume msgsender_MSG != null;
[L1539]              Balance[this] := 0;
[L1540]              _name_ERC20Detailed[this] := 284814211;
[L1541]              _symbol_ERC20Detailed[this] := 284814211;
[L1542]              _decimals_ERC20Detailed[this] := 0;
[L1544]              _name_ERC20Detailed[this] := name_s99;
[L1545]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1546]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1567]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1568]  COND FALSE  !(revert)
[L2797]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2798]  COND FALSE  !(revert)
[L2801]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2733]              assume msgsender_MSG != null;
[L2734]              Balance[this] := 0;
[L2736]  COND TRUE   DType[this] == ETE
[L2737]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1605]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2737]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2738]  COND FALSE  !(revert)
[L2744]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2745]  COND TRUE   DType[this] == ETE
[L2746]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2467]              __var_16 := null;
[L2468]  COND FALSE  !(!(account_s562 != null))
[L2472]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2472]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2473]  COND FALSE  !(revert)
[L2476]              _totalSupply_ERC20[this] := __var_17;
[L2477]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2477]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L2478]  COND FALSE  !(revert)
[L2481]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s562];
[L2482]              _balances_ERC20[this][account_s562] := __var_18;
[L2483]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s562];
[L2484]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2746]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2747]  COND FALSE  !(revert)
[L2801]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2802]  COND FALSE  !(revert)
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume !revert && gas >= 0;
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND TRUE   choice == 9
[L4098]              gas := gas - 21000;
[L4099]  COND TRUE   gas >= 0
[L4100]              assume amount_s336 >= 0 && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4101]              assume msgvalue_MSG == 0;
[L4102]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s336) && msgsender_MSG != recipient_s336) && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s336] + amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L621]               havoc __exception;
[L622]               revert := false;
[L623]   COND TRUE   __exception
[L624]               __tmp__Balance := Balance;
[L625]               __tmp__DType := DType;
[L626]               __tmp__Alloc := Alloc;
[L627]               __tmp__balance_ADDR := balance_ADDR;
[L628]               __tmp__M_Ref_int := M_Ref_int;
[L629]               __tmp__sum__balances0 := sum__balances0;
[L630]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L631]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L632]               __tmp__sum__allowances1 := sum__allowances1;
[L633]               __tmp__Length := Length;
[L634]               __tmp__now := now;
[L635]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L636]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L637]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L638]               __tmp___balances_ERC20 := _balances_ERC20;
[L639]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L640]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L641]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1894]  COND TRUE   __tmp__DType[this] == ETE
[L1895]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1643]              __ret_0_ := msgsender_MSG;
[L1895]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1907]  COND TRUE   __tmp__DType[this] == ETE
[L1908]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L2379]              __var_12 := null;
[L2380]  COND FALSE  !(!(sender_s519 != null))
[L2384]              __var_13 := null;
[L2385]  COND TRUE   !(recipient_s519 != null)
[L2386]              revert := true;
[L1908]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1909]  COND TRUE   revert
[L641]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L642]               assume revert || gas < 0;
[L4102]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L4174]  RET         call CorralChoice_ETE(this);

Loop:
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND TRUE   choice == 9
[L4098]              gas := gas - 21000;
[L4099]  COND TRUE   gas >= 0
[L4100]              assume amount_s336 >= 0 && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4101]              assume msgvalue_MSG == 0;
[L4102]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s336) && msgsender_MSG != recipient_s336) && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s336] + amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L621]               havoc __exception;
[L622]               revert := false;
[L623]   COND TRUE   __exception
[L624]               __tmp__Balance := Balance;
[L625]               __tmp__DType := DType;
[L626]               __tmp__Alloc := Alloc;
[L627]               __tmp__balance_ADDR := balance_ADDR;
[L628]               __tmp__M_Ref_int := M_Ref_int;
[L629]               __tmp__sum__balances0 := sum__balances0;
[L630]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L631]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L632]               __tmp__sum__allowances1 := sum__allowances1;
[L633]               __tmp__Length := Length;
[L634]               __tmp__now := now;
[L635]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L636]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L637]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L638]               __tmp___balances_ERC20 := _balances_ERC20;
[L639]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L640]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L641]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1894]  COND TRUE   __tmp__DType[this] == ETE
[L1895]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1643]              __ret_0_ := msgsender_MSG;
[L1895]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1907]  COND TRUE   __tmp__DType[this] == ETE
[L1908]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L2379]              __var_12 := null;
[L2380]  COND FALSE  !(!(sender_s519 != null))
[L2384]              __var_13 := null;
[L2385]  COND TRUE   !(recipient_s519 != null)
[L2386]              revert := true;
[L1908]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1909]  COND TRUE   revert
[L641]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L642]               assume revert || gas < 0;
[L4102]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L4174]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:40,101 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:40,101 INFO  L82        PathProgramCache]: Analyzing trace with hash -1261586455, now seen corresponding path program 1 times
[2020-11-25 15:10:40,102 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:40,142 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:10:40,175 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:10:40,253 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:40,254 INFO  L82        PathProgramCache]: Analyzing trace with hash 1386362715, now seen corresponding path program 1 times
[2020-11-25 15:10:40,254 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:40,261 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:10:40,267 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:10:40,279 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:40,280 INFO  L82        PathProgramCache]: Analyzing trace with hash 438560067, now seen corresponding path program 1 times
[2020-11-25 15:10:40,280 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:40,311 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:10:40,341 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2473 to 4943
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 2647 to 5281
[2020-11-25 15:10:40,858 WARN  L188               SmtUtils]: Spent 156.00 ms on a formula simplification that was a NOOP. DAG size: 179
[2020-11-25 15:10:41,340 WARN  L188               SmtUtils]: Spent 478.00 ms on a formula simplification. DAG size of input: 231 DAG size of output: 219
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 5003 to 9973
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
[2020-11-25 15:10:41,565 WARN  L188               SmtUtils]: Spent 120.00 ms on a formula simplification that was a NOOP. DAG size: 267
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
[2020-11-25 15:10:41,830 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 15:10:42,469 WARN  L188               SmtUtils]: Spent 228.00 ms on a formula simplification. DAG size of input: 186 DAG size of output: 175
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2179 to 4357
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 15:10:43,325 WARN  L188               SmtUtils]: Spent 267.00 ms on a formula simplification. DAG size of input: 230 DAG size of output: 219
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 15:10:43,515 WARN  L188               SmtUtils]: Spent 114.00 ms on a formula simplification that was a NOOP. DAG size: 267
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 15:10:43,690 WARN  L188               SmtUtils]: Spent 167.00 ms on a formula simplification that was a NOOP. DAG size: 214
[2020-11-25 15:10:44,361 WARN  L188               SmtUtils]: Spent 668.00 ms on a formula simplification. DAG size of input: 389 DAG size of output: 377
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9181 to 18353
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 15:10:44,474 WARN  L188               SmtUtils]: Spent 106.00 ms on a formula simplification. DAG size of input: 170 DAG size of output: 167
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 15:10:44,842 WARN  L188               SmtUtils]: Spent 206.00 ms on a formula simplification. DAG size of input: 258 DAG size of output: 257
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 15:10:44,950 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:10:44,970 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:10:44,979 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:10:44 BasicIcfg
[2020-11-25 15:10:44,979 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 15:10:44,979 INFO  L168              Benchmark]: Toolchain (without parser) took 8714.44 ms. Allocated memory was 1.0 GB in the beginning and 1.9 GB in the end (delta: 823.1 MB). Free memory was 940.6 MB in the beginning and 1.5 GB in the end (delta: -568.4 MB). Peak memory consumption was 869.9 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:44,980 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:10:44,980 INFO  L168              Benchmark]: Boogie Preprocessor took 89.18 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:44,980 INFO  L168              Benchmark]: UtopiaSpecLang took 63.01 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:44,980 INFO  L168              Benchmark]: Boogie Printer took 15.25 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:10:44,981 INFO  L168              Benchmark]: RCFGBuilder took 703.02 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 801.0 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:44,981 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.10 ms. Allocated memory is still 1.0 GB. Free memory was 801.0 MB in the beginning and 792.0 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:44,981 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1320.56 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 245.9 MB). Free memory was 792.0 MB in the beginning and 1.1 GB in the end (delta: -281.9 MB). Peak memory consumption was 185.0 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:44,982 INFO  L168              Benchmark]: BlockEncodingV2 took 132.08 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 1.0 GB in the end (delta: 70.9 MB). Peak memory consumption was 70.9 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:44,982 INFO  L168              Benchmark]: BuchiAutomizer took 6350.21 ms. Allocated memory was 1.3 GB in the beginning and 1.9 GB in the end (delta: 577.2 MB). Free memory was 1.0 GB in the beginning and 1.5 GB in the end (delta: -505.9 MB). Peak memory consumption was 686.5 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:44,984 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3844 locations, 7073 edges
  - StatisticsResult: Encoded RCFG
    3732 locations, 6760 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 89.18 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 63.01 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.25 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 703.02 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 801.0 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.10 ms. Allocated memory is still 1.0 GB. Free memory was 801.0 MB in the beginning and 792.0 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1320.56 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 245.9 MB). Free memory was 792.0 MB in the beginning and 1.1 GB in the end (delta: -281.9 MB). Peak memory consumption was 185.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 132.08 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 1.0 GB in the end (delta: 70.9 MB). Peak memory consumption was 70.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 6350.21 ms. Allocated memory was 1.3 GB in the beginning and 1.9 GB in the end (delta: 577.2 MB). Free memory was 1.0 GB in the beginning and 1.5 GB in the end (delta: -505.9 MB). Peak memory consumption was 686.5 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1503 locations, 2161 edges
  - StatisticsResult: BuchiProgram size
    3844 locations, 7073 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 8 locations. The remainder module has 2243 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 6.2s and 6 iterations.  TraceHistogramMax:3. Analysis of lassos took 5.3s. Construction of modules took 0.1s. BÃ¼chi inclusion checks took 0.2s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 764 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2361 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 13016 SDtfs, 5795 SDslu, 29475 SDs, 0 SdLazy, 1154 SolverSat, 1471 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.1s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115768787005693899437771554736522789481317776907386481201069155484792209185912) = (new ETE)({from : 115768787005693899437771554736522789481317776907386481201069155484792209185903});
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L2789]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L2789]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2790]  COND FALSE  !(revert)
[L2793]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L1853]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1857]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1825]              assume msgsender_MSG != null;
[L1826]              Balance[this] := 0;
[L1827]              _balances_ERC20[this] := zeroRefintArr();
[L1828]              sum__balances0[this] := 0;
[L1829]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1830]              sum__allowances1[this] := 0;
[L1831]              _totalSupply_ERC20[this] := 0;
[L1861]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L2793]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2797]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1563]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1563]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]  COND FALSE  !(revert)
[L1567]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1538]              assume msgsender_MSG != null;
[L1539]              Balance[this] := 0;
[L1540]              _name_ERC20Detailed[this] := 284814211;
[L1541]              _symbol_ERC20Detailed[this] := 284814211;
[L1542]              _decimals_ERC20Detailed[this] := 0;
[L1544]              _name_ERC20Detailed[this] := name_s99;
[L1545]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1546]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1567]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1568]  COND FALSE  !(revert)
[L2797]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2798]  COND FALSE  !(revert)
[L2801]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2733]              assume msgsender_MSG != null;
[L2734]              Balance[this] := 0;
[L2736]  COND TRUE   DType[this] == ETE
[L2737]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1605]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2737]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2738]  COND FALSE  !(revert)
[L2744]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2745]  COND TRUE   DType[this] == ETE
[L2746]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2467]              __var_16 := null;
[L2468]  COND FALSE  !(!(account_s562 != null))
[L2472]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2472]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2473]  COND FALSE  !(revert)
[L2476]              _totalSupply_ERC20[this] := __var_17;
[L2477]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2477]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L2478]  COND FALSE  !(revert)
[L2481]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s562];
[L2482]              _balances_ERC20[this][account_s562] := __var_18;
[L2483]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s562];
[L2484]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2746]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2747]  COND FALSE  !(revert)
[L2801]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2802]  COND FALSE  !(revert)
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
ERC20(115768787005693899437771554736522789481317776907386481201069155484792209185912).transfer~address~uint256.gas(3979002)({from : 115768787005693899437771554736522789481317776907386481201069155484792209185915, recipient : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s336) && msgsender_MSG != recipient_s336) && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s336] + amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L621]               havoc __exception;
[L622]               revert := false;
[L623]   COND TRUE   __exception
[L624]               __tmp__Balance := Balance;
[L625]               __tmp__DType := DType;
[L626]               __tmp__Alloc := Alloc;
[L627]               __tmp__balance_ADDR := balance_ADDR;
[L628]               __tmp__M_Ref_int := M_Ref_int;
[L629]               __tmp__sum__balances0 := sum__balances0;
[L630]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L631]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L632]               __tmp__sum__allowances1 := sum__allowances1;
[L633]               __tmp__Length := Length;
[L634]               __tmp__now := now;
[L635]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L636]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L637]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L638]               __tmp___balances_ERC20 := _balances_ERC20;
[L639]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L640]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L641]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1894]  COND TRUE   __tmp__DType[this] == ETE
[L1895]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1643]              __ret_0_ := msgsender_MSG;
[L1895]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1907]  COND TRUE   __tmp__DType[this] == ETE
[L1908]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L2379]              __var_12 := null;
[L2380]  COND FALSE  !(!(sender_s519 != null))
[L2384]              __var_13 := null;
[L2385]  COND TRUE   !(recipient_s519 != null)
[L2386]              revert := true;
[L1908]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1909]  COND TRUE   revert
[L641]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L642]               assume revert || gas < 0;
[L4102]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);

Loop:
ERC20(115768787005693899437771554736522789481317776907386481201069155484792209185912).transfer~address~uint256.gas(3979001)({from : 115768787005693899437771554736522789481317776907386481201069155484792209185903, recipient : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s336) && msgsender_MSG != recipient_s336) && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s336] + amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L621]               havoc __exception;
[L622]               revert := false;
[L623]   COND TRUE   __exception
[L624]               __tmp__Balance := Balance;
[L625]               __tmp__DType := DType;
[L626]               __tmp__Alloc := Alloc;
[L627]               __tmp__balance_ADDR := balance_ADDR;
[L628]               __tmp__M_Ref_int := M_Ref_int;
[L629]               __tmp__sum__balances0 := sum__balances0;
[L630]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L631]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L632]               __tmp__sum__allowances1 := sum__allowances1;
[L633]               __tmp__Length := Length;
[L634]               __tmp__now := now;
[L635]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L636]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L637]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L638]               __tmp___balances_ERC20 := _balances_ERC20;
[L639]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L640]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L641]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1894]  COND TRUE   __tmp__DType[this] == ETE
[L1895]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1643]              __ret_0_ := msgsender_MSG;
[L1895]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1907]  COND TRUE   __tmp__DType[this] == ETE
[L1908]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L2379]              __var_12 := null;
[L2380]  COND FALSE  !(!(sender_s519 != null))
[L2384]              __var_13 := null;
[L2385]  COND TRUE   !(recipient_s519 != null)
[L2386]              revert := true;
[L1908]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1909]  COND TRUE   revert
[L641]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L642]               assume revert || gas < 0;
[L4102]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
