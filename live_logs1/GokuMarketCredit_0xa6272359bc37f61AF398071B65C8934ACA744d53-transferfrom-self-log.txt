This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 17:35:39,936 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 17:35:39,937 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 17:35:39,949 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 17:35:39,950 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 17:35:39,950 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 17:35:39,951 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 17:35:39,953 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 17:35:39,954 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 17:35:39,955 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 17:35:39,956 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 17:35:39,956 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 17:35:39,957 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 17:35:39,958 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 17:35:39,959 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 17:35:39,959 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 17:35:39,960 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 17:35:39,961 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 17:35:39,963 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 17:35:39,964 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 17:35:39,965 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 17:35:39,966 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 17:35:39,968 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 17:35:39,968 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 17:35:39,968 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 17:35:39,969 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 17:35:39,969 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 17:35:39,969 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 17:35:39,970 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 17:35:39,970 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 17:35:39,970 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 17:35:39,971 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 17:35:39,971 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 17:35:39,972 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 17:35:39,973 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 17:35:39,973 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 17:35:39,973 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 17:35:39,974 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 17:35:39,974 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 17:35:39,974 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 17:35:39,975 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 17:35:39,975 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 17:35:39,983 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 17:35:39,983 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 17:35:39,984 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 17:35:39,984 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 17:35:39,984 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 17:35:39,985 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 17:35:39,985 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 17:35:39,985 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 17:35:39,985 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 17:35:39,985 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 17:35:39,985 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 17:35:39,985 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 17:35:39,985 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 17:35:39,985 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 17:35:39,985 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 17:35:39,986 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 17:35:39,986 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 17:35:39,986 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 17:35:39,986 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 17:35:39,986 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 17:35:39,986 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 17:35:39,986 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 17:35:39,986 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 17:35:39,986 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 17:35:39,987 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 17:35:39,987 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 17:35:40,010 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 17:35:40,022 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 17:35:40,025 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 17:35:40,027 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 17:35:40,027 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 17:35:40,028 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl
[2020-11-25 17:35:40,028 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl'
[2020-11-25 17:35:40,116 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 17:35:40,117 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 17:35:40,117 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 17:35:40,117 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 17:35:40,117 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 17:35:40,134 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:40" (1/1) ...
[2020-11-25 17:35:40,136 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:40" (1/1) ...
[2020-11-25 17:35:40,172 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:40" (1/1) ...
[2020-11-25 17:35:40,173 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:40" (1/1) ...
[2020-11-25 17:35:40,200 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:40" (1/1) ...
[2020-11-25 17:35:40,215 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:40" (1/1) ...
[2020-11-25 17:35:40,226 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:40" (1/1) ...
[2020-11-25 17:35:40,236 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 17:35:40,237 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 17:35:40,237 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 17:35:40,239 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 17:35:40,243 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:40" (1/1) ...
[2020-11-25 17:35:40,265 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(StandardToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 17:35:40,271 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(StandardToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 17:35:40,279 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(StandardToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 17:35:40,287 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s419 || p2!=msg.sender ) && _from_s419==_to_s419 ) && _value_s419<=balances_BasicToken[this][_from_s419] ) && _value_s419<=allowed_StandardToken[this][_from_s419][msg.sender] ) && _value_s419>=0 ) && _value_s419<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][_to_s419]>=0 ) && balances_BasicToken[this][_to_s419]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][_from_s419]>=0 ) && balances_BasicToken[this][_from_s419]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_StandardToken[this][_from_s419][msg.sender]>=0 ) && allowed_StandardToken[this][_from_s419][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[COMPEQ,IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],IdentifierExpression[_to_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_to_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_to_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 17:35:40,290 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( __ret_0_==true && allowed_StandardToken[this][_from_s419][msg.sender]==( ( old(allowed_StandardToken[this][_from_s419][msg.sender]) ) - _value_s419 ) ) && totalSupply__BasicToken[this]==( old(totalSupply__BasicToken[this]) ) ) && balances_BasicToken[this]==( old(balances_BasicToken[this]) ) ) && allowed_StandardToken[this][p1][p2]==( old(allowed_StandardToken[this][p1][p2]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_StandardToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],IdentifierExpression[_value_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]]
[2020-11-25 17:35:40,297 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(StandardToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 17:35:40,297 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_StandardToken0) ==> ( <>AP(success_transferFrom_StandardToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 17:35:40,308 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:35:40 PropertyContainer
[2020-11-25 17:35:40,308 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 17:35:40,308 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 17:35:40,308 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 17:35:40,308 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 17:35:40,309 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:40" (1/2) ...
[2020-11-25 17:35:40,309 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 17:35:40,310 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 17:35:40,325 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:35:40" (2/2) ...
[2020-11-25 17:35:40,326 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 17:35:40,326 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 17:35:40,326 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 17:35:40,326 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 17:35:40,327 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:40" (1/2) ...
[2020-11-25 17:35:40,381 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 17:35:40,381 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 17:35:40,381 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-25 17:35:40,382 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-25 17:35:40,382 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-25 17:35:40,382 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-25 17:35:40,382 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-25 17:35:40,382 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 17:35:40,382 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 17:35:40,382 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 17:35:40,382 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 17:35:40,382 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 17:35:40,383 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 17:35:40,383 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 17:35:40,383 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 17:35:40,383 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-25 17:35:40,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-25 17:35:40,383 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken
[2020-11-25 17:35:40,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken
[2020-11-25 17:35:40,383 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-25 17:35:40,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-25 17:35:40,384 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-25 17:35:40,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-25 17:35:40,384 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-25 17:35:40,384 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken
[2020-11-25 17:35:40,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken
[2020-11-25 17:35:40,384 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken
[2020-11-25 17:35:40,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken
[2020-11-25 17:35:40,384 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_BurnableToken__success
[2020-11-25 17:35:40,384 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 17:35:40,385 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 17:35:40,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 17:35:40,385 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 17:35:40,385 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 17:35:40,385 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 17:35:40,385 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 17:35:40,385 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-25 17:35:40,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-25 17:35:40,385 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 17:35:40,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 17:35:40,386 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-25 17:35:40,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-25 17:35:40,386 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-25 17:35:40,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-25 17:35:40,386 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 17:35:40,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 17:35:40,386 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 17:35:40,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 17:35:40,386 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 17:35:40,386 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 17:35:40,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 17:35:40,387 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 17:35:40,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 17:35:40,387 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__success
[2020-11-25 17:35:40,387 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 17:35:40,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 17:35:40,387 INFO  L130     BoogieDeclarations]: Found specification of procedure GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success
[2020-11-25 17:35:40,387 INFO  L130     BoogieDeclarations]: Found specification of procedure GokuMarketCredit_GokuMarketCredit
[2020-11-25 17:35:40,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure GokuMarketCredit_GokuMarketCredit
[2020-11-25 17:35:40,387 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_GokuMarketCredit
[2020-11-25 17:35:40,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_GokuMarketCredit
[2020-11-25 17:35:40,387 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GokuMarketCredit
[2020-11-25 17:35:40,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GokuMarketCredit
[2020-11-25 17:35:40,388 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GokuMarketCredit
[2020-11-25 17:35:40,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GokuMarketCredit
[2020-11-25 17:35:40,388 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GokuMarketCredit
[2020-11-25 17:35:40,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GokuMarketCredit
[2020-11-25 17:35:40,388 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_GokuMarketCredit
[2020-11-25 17:35:40,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_GokuMarketCredit
[2020-11-25 17:35:40,388 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 17:35:40,388 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 17:35:40,388 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 17:35:40,389 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 17:35:40,389 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-25 17:35:40,389 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-25 17:35:40,389 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 17:35:40,389 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 17:35:40,389 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-25 17:35:40,389 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-25 17:35:40,389 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BurnableToken
[2020-11-25 17:35:40,390 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BurnableToken
[2020-11-25 17:35:40,390 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 17:35:40,390 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 17:35:40,390 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-25 17:35:40,390 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-25 17:35:40,390 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 17:35:40,390 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 17:35:40,390 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_GokuMarketCredit
[2020-11-25 17:35:40,390 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 17:35:40,390 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 17:35:40,391 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 17:35:40,391 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 17:35:40,391 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 17:35:40,391 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 17:35:40,391 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 17:35:40,391 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 17:35:40,391 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 17:35:40,391 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 17:35:40,391 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 17:35:40,391 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 17:35:40,392 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 17:35:40,392 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-25 17:35:40,392 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-25 17:35:40,392 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__success
[2020-11-25 17:35:40,392 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__fail
[2020-11-25 17:35:40,392 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 17:35:40,392 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 17:35:40,392 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-25 17:35:40,392 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-25 17:35:40,392 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-25 17:35:40,393 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__success
[2020-11-25 17:35:40,393 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__fail
[2020-11-25 17:35:40,393 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__success
[2020-11-25 17:35:40,393 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__fail
[2020-11-25 17:35:40,393 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_BurnableToken__fail
[2020-11-25 17:35:40,393 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 17:35:40,393 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 17:35:40,393 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 17:35:40,393 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 17:35:40,393 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-25 17:35:40,394 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-25 17:35:40,394 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 17:35:40,394 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 17:35:40,394 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-25 17:35:40,394 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 17:35:40,394 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-25 17:35:40,394 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-25 17:35:40,394 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 17:35:40,394 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 17:35:40,394 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 17:35:40,395 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 17:35:40,395 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 17:35:40,395 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 17:35:40,395 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 17:35:40,395 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 17:35:40,395 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 17:35:40,395 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 17:35:40,395 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 17:35:40,395 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 17:35:40,395 INFO  L130     BoogieDeclarations]: Found specification of procedure GokuMarketCredit_GokuMarketCredit_NoBaseCtor__fail
[2020-11-25 17:35:40,396 INFO  L130     BoogieDeclarations]: Found specification of procedure GokuMarketCredit_GokuMarketCredit__success
[2020-11-25 17:35:40,396 INFO  L130     BoogieDeclarations]: Found specification of procedure GokuMarketCredit_GokuMarketCredit__fail
[2020-11-25 17:35:40,396 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_GokuMarketCredit__success
[2020-11-25 17:35:40,396 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_GokuMarketCredit__fail
[2020-11-25 17:35:40,396 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GokuMarketCredit__success
[2020-11-25 17:35:40,396 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GokuMarketCredit__fail
[2020-11-25 17:35:40,396 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GokuMarketCredit__success
[2020-11-25 17:35:40,396 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GokuMarketCredit__fail
[2020-11-25 17:35:40,396 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GokuMarketCredit__success
[2020-11-25 17:35:40,397 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GokuMarketCredit__fail
[2020-11-25 17:35:40,397 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_GokuMarketCredit__success
[2020-11-25 17:35:40,397 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_GokuMarketCredit__fail
[2020-11-25 17:35:40,397 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 17:35:40,397 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 17:35:40,397 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 17:35:40,397 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 17:35:40,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 17:35:40,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 17:35:40,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 17:35:40,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 17:35:40,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 17:35:40,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 17:35:40,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 17:35:40,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 17:35:40,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 17:35:40,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 17:35:40,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 17:35:40,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 17:35:40,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 17:35:40,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 17:35:40,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 17:35:40,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 17:35:40,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 17:35:40,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 17:35:40,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 17:35:40,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 17:35:40,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-25 17:35:40,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-25 17:35:40,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__fail
[2020-11-25 17:35:40,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__success
[2020-11-25 17:35:40,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 17:35:40,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 17:35:40,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-25 17:35:40,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-25 17:35:40,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-25 17:35:40,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-25 17:35:40,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__fail
[2020-11-25 17:35:40,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__success
[2020-11-25 17:35:40,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__fail
[2020-11-25 17:35:40,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__success
[2020-11-25 17:35:40,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_BurnableToken__fail
[2020-11-25 17:35:40,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_BurnableToken__success
[2020-11-25 17:35:40,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 17:35:40,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 17:35:40,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 17:35:40,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 17:35:40,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 17:35:40,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 17:35:40,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-25 17:35:40,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-25 17:35:40,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 17:35:40,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 17:35:40,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 17:35:40,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-25 17:35:40,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-25 17:35:40,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-25 17:35:40,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 17:35:40,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 17:35:40,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 17:35:40,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 17:35:40,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 17:35:40,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 17:35:40,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 17:35:40,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 17:35:40,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 17:35:40,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 17:35:40,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 17:35:40,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__success
[2020-11-25 17:35:40,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 17:35:40,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 17:35:40,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure GokuMarketCredit_GokuMarketCredit_NoBaseCtor__fail
[2020-11-25 17:35:40,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success
[2020-11-25 17:35:40,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure GokuMarketCredit_GokuMarketCredit__fail
[2020-11-25 17:35:40,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure GokuMarketCredit_GokuMarketCredit__success
[2020-11-25 17:35:40,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_GokuMarketCredit__fail
[2020-11-25 17:35:40,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_GokuMarketCredit__success
[2020-11-25 17:35:40,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GokuMarketCredit__fail
[2020-11-25 17:35:40,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GokuMarketCredit__success
[2020-11-25 17:35:40,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GokuMarketCredit__fail
[2020-11-25 17:35:40,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GokuMarketCredit__success
[2020-11-25 17:35:40,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GokuMarketCredit__fail
[2020-11-25 17:35:40,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GokuMarketCredit__success
[2020-11-25 17:35:40,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_GokuMarketCredit__fail
[2020-11-25 17:35:40,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_GokuMarketCredit__success
[2020-11-25 17:35:40,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 17:35:40,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 17:35:40,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 17:35:40,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 17:35:40,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 17:35:40,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 17:35:40,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 17:35:40,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 17:35:40,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-25 17:35:40,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-25 17:35:40,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 17:35:40,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 17:35:40,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-25 17:35:40,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-25 17:35:40,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BurnableToken
[2020-11-25 17:35:40,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BurnableToken
[2020-11-25 17:35:40,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 17:35:40,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 17:35:40,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-25 17:35:40,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-25 17:35:40,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 17:35:40,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 17:35:40,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_GokuMarketCredit
[2020-11-25 17:35:40,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 17:35:40,405 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 17:35:40,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 17:35:40,646 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 17:35:40,646 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 17:35:40,650 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 17:35:40,884 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 17:35:41,182 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 17:35:41,182 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-25 17:35:41,184 INFO  L202        PluginConnector]: Adding new model GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:35:41 BoogieIcfgContainer
[2020-11-25 17:35:41,184 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:35:40" (2/2) ...
[2020-11-25 17:35:41,184 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 17:35:41,185 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@611f6726 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:35:41, skipping insertion in model container
[2020-11-25 17:35:41,185 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 17:35:41,185 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 17:35:41,185 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 17:35:41,187 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 17:35:41,187 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:40" (1/3) ...
[2020-11-25 17:35:41,187 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@17c7e488 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:35:41, skipping insertion in model container
[2020-11-25 17:35:41,188 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:35:40" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 17:35:41,225 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:35:41 NWAContainer
[2020-11-25 17:35:41,225 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 17:35:41,225 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 17:35:41,225 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 17:35:41,226 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 17:35:41,227 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:35:41" (3/4) ...
[2020-11-25 17:35:41,227 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@16e0bf31 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:35:41, skipping insertion in model container
[2020-11-25 17:35:41,228 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:35:41" (4/4) ...
[2020-11-25 17:35:41,230 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 17:35:41,234 INFO  L110   BuchiProductObserver]: Initial RCFG 1781 locations, 2380 edges
[2020-11-25 17:35:41,234 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 17:35:41,245 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 17:35:42,802 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 17:35:42,808 INFO  L110   BuchiProductObserver]: BuchiProgram size 4396 locations, 7803 edges
[2020-11-25 17:35:42,809 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:35:42 BoogieIcfgContainer
[2020-11-25 17:35:42,809 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 17:35:42,809 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 17:35:42,809 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 17:35:42,811 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 17:35:42,811 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:35:42" (1/1) ...
[2020-11-25 17:35:42,939 INFO  L313           BlockEncoder]: Initial Icfg 4396 locations, 7803 edges
[2020-11-25 17:35:42,939 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 17:35:42,940 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 17:35:42,940 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 17:35:42,941 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 17:35:42,956 INFO  L70    emoveInfeasibleEdges]: Removed 96 edges and 19 locations because of local infeasibility
[2020-11-25 17:35:42,967 INFO  L70        RemoveSinkStates]: Removed 20 edges and 13 locations by removing sink states
[2020-11-25 17:35:42,982 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 17:35:42,987 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 17:35:42,991 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 17:35:42,992 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 17:35:42,999 INFO  L313           BlockEncoder]: Encoded RCFG 4332 locations, 7640 edges
[2020-11-25 17:35:43,000 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:35:43 BasicIcfg
[2020-11-25 17:35:43,000 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 17:35:43,001 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 17:35:43,001 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 17:35:43,003 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 17:35:43,003 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:35:43,004 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:40" (1/6) ...
[2020-11-25 17:35:43,005 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@739ed614 and model type GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:35:43, skipping insertion in model container
[2020-11-25 17:35:43,005 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:35:43,006 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:35:40" (2/6) ...
[2020-11-25 17:35:43,006 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@739ed614 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:35:43, skipping insertion in model container
[2020-11-25 17:35:43,006 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:35:43,006 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:35:41" (3/6) ...
[2020-11-25 17:35:43,006 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@739ed614 and model type GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:35:43, skipping insertion in model container
[2020-11-25 17:35:43,006 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:35:43,006 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:35:41" (4/6) ...
[2020-11-25 17:35:43,007 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@739ed614 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:35:43, skipping insertion in model container
[2020-11-25 17:35:43,007 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:35:43,007 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:35:42" (5/6) ...
[2020-11-25 17:35:43,007 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@739ed614 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:35:43, skipping insertion in model container
[2020-11-25 17:35:43,007 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:35:43,008 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:35:43" (6/6) ...
[2020-11-25 17:35:43,009 INFO  L404   chiAutomizerObserver]: Analyzing ICFG GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-self.bpl_BEv2
[2020-11-25 17:35:43,048 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 17:35:43,049 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 17:35:43,049 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 17:35:43,049 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 17:35:43,049 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 17:35:43,049 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 17:35:43,049 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 17:35:43,049 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 17:35:43,049 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 17:35:43,095 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4332 states.
[2020-11-25 17:35:43,144 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:35:43,145 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:35:43,145 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:35:43,152 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:35:43,152 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:35:43,152 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 17:35:43,152 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4332 states.
[2020-11-25 17:35:43,170 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:35:43,170 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:35:43,171 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:35:43,172 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:35:43,172 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5004]              assume null == 0;
[L5005]  CALL        call this := FreshRefGenerator__success();
[L2075]              havoc newRef;
[L2076]              assume Alloc[newRef] == false;
[L2077]              Alloc[newRef] := true;
[L2078]              assume newRef != null;
[L5005]  RET         call this := FreshRefGenerator__success();
[L5006]              assume now >= 0;
[L5007]              assume DType[this] == GokuMarketCredit;
[L5008]              assume msgvalue_MSG == 0;
[L5009]              gas := gas - 53000;
[L5010]  CALL        call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L1142]              havoc __exception;
[L1143]              revert := false;
[L1144]  COND FALSE  !(__exception)
[L1167]  CALL        call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L2950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND TRUE   revert
[L1167]  RET         call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L1168]              assume !revert && gas >= 0;
[L5010]  RET         call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L5011]              assume !revert && gas >= 0;

Loop:
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND TRUE   choice == 16
[L4894]              gas := gas - 21000;
[L4895]  COND FALSE  !(gas >= 0)
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

[2020-11-25 17:35:43,185 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:35:43,185 INFO  L82        PathProgramCache]: Analyzing trace with hash -1767416434, now seen corresponding path program 1 times
[2020-11-25 17:35:43,189 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:35:43,203 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:35:43,242 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 17:35:43,244 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:35:43,244 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 17:35:43,498 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:35:43,509 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 17:35:43,510 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 17:35:43,511 INFO  L87              Difference]: Start difference. First operand 4332 states. Second operand 3 states.
[2020-11-25 17:35:43,743 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:35:43,743 INFO  L93              Difference]: Finished difference Result 2559 states and 2916 transitions.
[2020-11-25 17:35:43,743 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 17:35:43,745 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2559 states and 2916 transitions.
[2020-11-25 17:35:43,763 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:35:43,786 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2559 states to 2555 states and 2908 transitions.
[2020-11-25 17:35:43,787 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 17:35:43,789 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 652
[2020-11-25 17:35:43,789 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2555 states and 2908 transitions.
[2020-11-25 17:35:43,796 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:35:43,796 INFO  L728         BuchiCegarLoop]: Abstraction has 2555 states and 2908 transitions.
[2020-11-25 17:35:43,810 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2555 states and 2908 transitions.
[2020-11-25 17:35:43,848 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2555 to 2555.
[2020-11-25 17:35:43,848 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2555 states.
[2020-11-25 17:35:43,852 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2555 states to 2555 states and 2908 transitions.
[2020-11-25 17:35:43,853 INFO  L751         BuchiCegarLoop]: Abstraction has 2555 states and 2908 transitions.
[2020-11-25 17:35:43,853 INFO  L631         BuchiCegarLoop]: Abstraction has 2555 states and 2908 transitions.
[2020-11-25 17:35:43,853 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 17:35:43,853 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2555 states and 2908 transitions.
[2020-11-25 17:35:43,859 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:35:43,859 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:35:43,859 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:35:43,860 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:35:43,860 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5004]              assume null == 0;
[L5005]  CALL        call this := FreshRefGenerator__success();
[L2075]              havoc newRef;
[L2076]              assume Alloc[newRef] == false;
[L2077]              Alloc[newRef] := true;
[L2078]              assume newRef != null;
[L5005]  RET         call this := FreshRefGenerator__success();
[L5006]              assume now >= 0;
[L5007]              assume DType[this] == GokuMarketCredit;
[L5008]              assume msgvalue_MSG == 0;
[L5009]              gas := gas - 53000;
[L5010]  CALL        call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L1142]              havoc __exception;
[L1143]              revert := false;
[L1144]  COND FALSE  !(__exception)
[L1167]  CALL        call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L2950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND TRUE   revert
[L1167]  RET         call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L1168]              assume !revert && gas >= 0;
[L5010]  RET         call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L5011]              assume !revert && gas >= 0;
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND TRUE   choice == 11
[L4926]              gas := gas - 21000;
[L4927]  COND TRUE   gas >= 0
[L4928]              assume _value_s419 >= 0 && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4929]              assume msgvalue_MSG == 0;
[L4930]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s419 || p2 != msgsender_MSG) && _from_s419 == _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L695]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2621]  COND TRUE   !(_value_s419 <= balances_BasicToken[this][_from_s419])
[L2622]              revert := true;
[L695]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L696]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((__ret_0_ == true && allowed_StandardToken[this][_from_s419][msgsender_MSG] == old(allowed_StandardToken[this][_from_s419][msgsender_MSG]) - _value_s419) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

Loop:
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND TRUE   choice == 11
[L4926]              gas := gas - 21000;
[L4927]  COND TRUE   gas >= 0
[L4928]              assume _value_s419 >= 0 && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4929]              assume msgvalue_MSG == 0;
[L4930]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s419 || p2 != msgsender_MSG) && _from_s419 == _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L695]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2621]  COND TRUE   !(_value_s419 <= balances_BasicToken[this][_from_s419])
[L2622]              revert := true;
[L695]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L696]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((__ret_0_ == true && allowed_StandardToken[this][_from_s419][msgsender_MSG] == old(allowed_StandardToken[this][_from_s419][msgsender_MSG]) - _value_s419) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

[2020-11-25 17:35:43,864 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:35:43,864 INFO  L82        PathProgramCache]: Analyzing trace with hash 2057420532, now seen corresponding path program 1 times
[2020-11-25 17:35:43,865 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:35:43,874 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:35:43,898 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 17:35:43,898 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:35:43,899 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 17:35:43,900 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:35:43,900 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 17:35:43,900 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 17:35:43,900 INFO  L87              Difference]: Start difference. First operand 2555 states and 2908 transitions. cyclomatic complexity: 355 Second operand 4 states.
[2020-11-25 17:35:44,306 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:35:44,306 INFO  L93              Difference]: Finished difference Result 3539 states and 4038 transitions.
[2020-11-25 17:35:44,306 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 17:35:44,306 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3539 states and 4038 transitions.
[2020-11-25 17:35:44,319 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 17:35:44,333 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3539 states to 3431 states and 3910 transitions.
[2020-11-25 17:35:44,333 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 857
[2020-11-25 17:35:44,335 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 862
[2020-11-25 17:35:44,335 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3431 states and 3910 transitions.
[2020-11-25 17:35:44,340 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:35:44,340 INFO  L728         BuchiCegarLoop]: Abstraction has 3431 states and 3910 transitions.
[2020-11-25 17:35:44,343 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3431 states and 3910 transitions.
[2020-11-25 17:35:44,371 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3431 to 2595.
[2020-11-25 17:35:44,371 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2595 states.
[2020-11-25 17:35:44,375 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2595 states to 2595 states and 2830 transitions.
[2020-11-25 17:35:44,375 INFO  L751         BuchiCegarLoop]: Abstraction has 2595 states and 2830 transitions.
[2020-11-25 17:35:44,375 INFO  L631         BuchiCegarLoop]: Abstraction has 2595 states and 2830 transitions.
[2020-11-25 17:35:44,375 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 17:35:44,375 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2595 states and 2830 transitions.
[2020-11-25 17:35:44,380 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:35:44,380 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:35:44,380 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:35:44,383 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:35:44,383 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5004]              assume null == 0;
[L5005]  CALL        call this := FreshRefGenerator__success();
[L2075]              havoc newRef;
[L2076]              assume Alloc[newRef] == false;
[L2077]              Alloc[newRef] := true;
[L2078]              assume newRef != null;
[L5005]  RET         call this := FreshRefGenerator__success();
[L5006]              assume now >= 0;
[L5007]              assume DType[this] == GokuMarketCredit;
[L5008]              assume msgvalue_MSG == 0;
[L5009]              gas := gas - 53000;
[L5010]  CALL        call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L1142]              havoc __exception;
[L1143]              revert := false;
[L1144]  COND FALSE  !(__exception)
[L1167]  CALL        call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L2950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND FALSE  !(revert)
[L2954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2955]  COND FALSE  !(revert)
[L2958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2959]  COND FALSE  !(revert)
[L2962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2553]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2553]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2554]  COND FALSE  !(revert)
[L2557]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2557]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2558]  COND FALSE  !(revert)
[L2561]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2561]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2565]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2524]              assume msgsender_MSG != null;
[L2525]              Balance[this] := 0;
[L2526]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2527]              sum_allowed1[this] := 0;
[L2565]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2566]  COND FALSE  !(revert)
[L2962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2377]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2377]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2378]  COND FALSE  !(revert)
[L2381]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2381]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2382]  COND FALSE  !(revert)
[L2385]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2354]              assume msgsender_MSG != null;
[L2355]              Balance[this] := 0;
[L2385]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  COND FALSE  !(revert)
[L2966]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2780]              owner_Ownable[this] := null;
[L2782]              owner_Ownable[this] := msgsender_MSG;
[L2795]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2970]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L2974]  CALL        call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              Balance[this] := 0;
[L2902]              name_GokuMarketCredit[this] := -1649829923;
[L2903]              symbol_GokuMarketCredit[this] := 1836184011;
[L2904]              decimals_GokuMarketCredit[this] := 18;
[L2905]              __var_13 := decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2906]              INITIAL_SUPPLY_GokuMarketCredit[this] := 50000000 * (nonlinearPow(10, decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2908]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2909]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L2910]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2911]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L2974]  RET         call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2975]  COND FALSE  !(revert)
[L1167]  RET         call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L1168]              assume !revert && gas >= 0;
[L5010]  RET         call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L5011]              assume !revert && gas >= 0;
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND TRUE   choice == 11
[L4926]              gas := gas - 21000;
[L4927]  COND TRUE   gas >= 0
[L4928]              assume _value_s419 >= 0 && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4929]              assume msgvalue_MSG == 0;
[L4930]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s419 || p2 != msgsender_MSG) && _from_s419 == _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum_balances0 := sum_balances0;
[L679]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum_allowed1 := sum_allowed1;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp__balances_BasicToken := balances_BasicToken;
[L685]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L686]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L687]               __tmp__owner_Ownable := owner_Ownable;
[L688]               __tmp__name_GokuMarketCredit := name_GokuMarketCredit;
[L689]               __tmp__symbol_GokuMarketCredit := symbol_GokuMarketCredit;
[L690]               __tmp__decimals_GokuMarketCredit := decimals_GokuMarketCredit;
[L691]               __tmp__INITIAL_SUPPLY_GokuMarketCredit := INITIAL_SUPPLY_GokuMarketCredit;
[L692]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2577]  COND TRUE   !(_value_s419 <= __tmp__balances_BasicToken[this][_from_s419])
[L2578]              revert := true;
[L692]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L693]               assume revert || gas < 0;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

Loop:
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND TRUE   choice == 11
[L4926]              gas := gas - 21000;
[L4927]  COND TRUE   gas >= 0
[L4928]              assume _value_s419 >= 0 && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4929]              assume msgvalue_MSG == 0;
[L4930]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s419 || p2 != msgsender_MSG) && _from_s419 == _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum_balances0 := sum_balances0;
[L679]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum_allowed1 := sum_allowed1;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp__balances_BasicToken := balances_BasicToken;
[L685]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L686]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L687]               __tmp__owner_Ownable := owner_Ownable;
[L688]               __tmp__name_GokuMarketCredit := name_GokuMarketCredit;
[L689]               __tmp__symbol_GokuMarketCredit := symbol_GokuMarketCredit;
[L690]               __tmp__decimals_GokuMarketCredit := decimals_GokuMarketCredit;
[L691]               __tmp__INITIAL_SUPPLY_GokuMarketCredit := INITIAL_SUPPLY_GokuMarketCredit;
[L692]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2577]  COND TRUE   !(_value_s419 <= __tmp__balances_BasicToken[this][_from_s419])
[L2578]              revert := true;
[L692]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L693]               assume revert || gas < 0;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

[2020-11-25 17:35:44,388 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:35:44,388 INFO  L82        PathProgramCache]: Analyzing trace with hash 767247064, now seen corresponding path program 1 times
[2020-11-25 17:35:44,389 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:35:44,407 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:35:44,562 INFO  L134       CoverageAnalysis]: Checked inductivity of 345 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 345 trivial. 0 not checked.
[2020-11-25 17:35:44,562 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:35:44,563 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 17:35:44,563 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:35:44,563 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 17:35:44,564 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 17:35:44,564 INFO  L87              Difference]: Start difference. First operand 2595 states and 2830 transitions. cyclomatic complexity: 237 Second operand 6 states.
[2020-11-25 17:35:45,228 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:35:45,228 INFO  L93              Difference]: Finished difference Result 2787 states and 3039 transitions.
[2020-11-25 17:35:45,228 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 17:35:45,228 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2787 states and 3039 transitions.
[2020-11-25 17:35:45,236 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 17:35:45,253 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2787 states to 2787 states and 3039 transitions.
[2020-11-25 17:35:45,254 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 744
[2020-11-25 17:35:45,255 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 744
[2020-11-25 17:35:45,255 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2787 states and 3039 transitions.
[2020-11-25 17:35:45,258 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:35:45,258 INFO  L728         BuchiCegarLoop]: Abstraction has 2787 states and 3039 transitions.
[2020-11-25 17:35:45,261 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2787 states and 3039 transitions.
[2020-11-25 17:35:45,281 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2787 to 2651.
[2020-11-25 17:35:45,281 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2651 states.
[2020-11-25 17:35:45,284 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2651 states to 2651 states and 2890 transitions.
[2020-11-25 17:35:45,284 INFO  L751         BuchiCegarLoop]: Abstraction has 2651 states and 2890 transitions.
[2020-11-25 17:35:45,284 INFO  L631         BuchiCegarLoop]: Abstraction has 2651 states and 2890 transitions.
[2020-11-25 17:35:45,284 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 17:35:45,284 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2651 states and 2890 transitions.
[2020-11-25 17:35:45,289 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:35:45,289 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:35:45,289 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:35:45,291 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:35:45,292 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5004]              assume null == 0;
[L5005]  CALL        call this := FreshRefGenerator__success();
[L2075]              havoc newRef;
[L2076]              assume Alloc[newRef] == false;
[L2077]              Alloc[newRef] := true;
[L2078]              assume newRef != null;
[L5005]  RET         call this := FreshRefGenerator__success();
[L5006]              assume now >= 0;
[L5007]              assume DType[this] == GokuMarketCredit;
[L5008]              assume msgvalue_MSG == 0;
[L5009]              gas := gas - 53000;
[L5010]  CALL        call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L1142]              havoc __exception;
[L1143]              revert := false;
[L1144]  COND FALSE  !(__exception)
[L1167]  CALL        call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L2950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND FALSE  !(revert)
[L2954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2955]  COND FALSE  !(revert)
[L2958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2959]  COND FALSE  !(revert)
[L2962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2553]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2553]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2554]  COND FALSE  !(revert)
[L2557]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2557]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2558]  COND FALSE  !(revert)
[L2561]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2561]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2565]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2524]              assume msgsender_MSG != null;
[L2525]              Balance[this] := 0;
[L2526]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2527]              sum_allowed1[this] := 0;
[L2565]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2566]  COND FALSE  !(revert)
[L2962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2377]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2377]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2378]  COND FALSE  !(revert)
[L2381]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2381]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2382]  COND FALSE  !(revert)
[L2385]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2354]              assume msgsender_MSG != null;
[L2355]              Balance[this] := 0;
[L2385]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  COND FALSE  !(revert)
[L2966]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2780]              owner_Ownable[this] := null;
[L2782]              owner_Ownable[this] := msgsender_MSG;
[L2795]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2970]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L2974]  CALL        call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              Balance[this] := 0;
[L2902]              name_GokuMarketCredit[this] := -1649829923;
[L2903]              symbol_GokuMarketCredit[this] := 1836184011;
[L2904]              decimals_GokuMarketCredit[this] := 18;
[L2905]              __var_13 := decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2906]              INITIAL_SUPPLY_GokuMarketCredit[this] := 50000000 * (nonlinearPow(10, decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2908]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2909]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L2910]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2911]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L2974]  RET         call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2975]  COND FALSE  !(revert)
[L1167]  RET         call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L1168]              assume !revert && gas >= 0;
[L5010]  RET         call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L5011]              assume !revert && gas >= 0;
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND TRUE   choice == 11
[L4926]              gas := gas - 21000;
[L4927]  COND TRUE   gas >= 0
[L4928]              assume _value_s419 >= 0 && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4929]              assume msgvalue_MSG == 0;
[L4930]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s419 || p2 != msgsender_MSG) && _from_s419 == _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum_balances0 := sum_balances0;
[L679]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum_allowed1 := sum_allowed1;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp__balances_BasicToken := balances_BasicToken;
[L685]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L686]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L687]               __tmp__owner_Ownable := owner_Ownable;
[L688]               __tmp__name_GokuMarketCredit := name_GokuMarketCredit;
[L689]               __tmp__symbol_GokuMarketCredit := symbol_GokuMarketCredit;
[L690]               __tmp__decimals_GokuMarketCredit := decimals_GokuMarketCredit;
[L691]               __tmp__INITIAL_SUPPLY_GokuMarketCredit := INITIAL_SUPPLY_GokuMarketCredit;
[L692]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2577]  COND FALSE  !(!(_value_s419 <= __tmp__balances_BasicToken[this][_from_s419]))
[L2581]  COND TRUE   !(_value_s419 <= __tmp__allowed_StandardToken[this][_from_s419][msgsender_MSG])
[L2582]              revert := true;
[L692]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L693]               assume revert || gas < 0;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

Loop:
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND TRUE   choice == 11
[L4926]              gas := gas - 21000;
[L4927]  COND TRUE   gas >= 0
[L4928]              assume _value_s419 >= 0 && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4929]              assume msgvalue_MSG == 0;
[L4930]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s419 || p2 != msgsender_MSG) && _from_s419 == _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum_balances0 := sum_balances0;
[L679]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum_allowed1 := sum_allowed1;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp__balances_BasicToken := balances_BasicToken;
[L685]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L686]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L687]               __tmp__owner_Ownable := owner_Ownable;
[L688]               __tmp__name_GokuMarketCredit := name_GokuMarketCredit;
[L689]               __tmp__symbol_GokuMarketCredit := symbol_GokuMarketCredit;
[L690]               __tmp__decimals_GokuMarketCredit := decimals_GokuMarketCredit;
[L691]               __tmp__INITIAL_SUPPLY_GokuMarketCredit := INITIAL_SUPPLY_GokuMarketCredit;
[L692]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2577]  COND FALSE  !(!(_value_s419 <= __tmp__balances_BasicToken[this][_from_s419]))
[L2581]  COND TRUE   !(_value_s419 <= __tmp__allowed_StandardToken[this][_from_s419][msgsender_MSG])
[L2582]              revert := true;
[L692]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L693]               assume revert || gas < 0;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

[2020-11-25 17:35:45,295 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:35:45,296 INFO  L82        PathProgramCache]: Analyzing trace with hash -270844802, now seen corresponding path program 1 times
[2020-11-25 17:35:45,296 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:35:45,308 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:35:45,374 INFO  L134       CoverageAnalysis]: Checked inductivity of 345 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 345 trivial. 0 not checked.
[2020-11-25 17:35:45,375 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:35:45,375 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 17:35:45,375 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:35:45,375 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 17:35:45,375 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 17:35:45,376 INFO  L87              Difference]: Start difference. First operand 2651 states and 2890 transitions. cyclomatic complexity: 241 Second operand 6 states.
[2020-11-25 17:35:45,915 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:35:45,916 INFO  L93              Difference]: Finished difference Result 2781 states and 3033 transitions.
[2020-11-25 17:35:45,916 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 17:35:45,917 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2781 states and 3033 transitions.
[2020-11-25 17:35:45,925 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 17:35:45,936 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2781 states to 2781 states and 3033 transitions.
[2020-11-25 17:35:45,936 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 741
[2020-11-25 17:35:45,937 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 741
[2020-11-25 17:35:45,937 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2781 states and 3033 transitions.
[2020-11-25 17:35:45,940 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:35:45,940 INFO  L728         BuchiCegarLoop]: Abstraction has 2781 states and 3033 transitions.
[2020-11-25 17:35:45,944 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2781 states and 3033 transitions.
[2020-11-25 17:35:45,967 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2781 to 2651.
[2020-11-25 17:35:45,967 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2651 states.
[2020-11-25 17:35:45,971 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2651 states to 2651 states and 2890 transitions.
[2020-11-25 17:35:45,971 INFO  L751         BuchiCegarLoop]: Abstraction has 2651 states and 2890 transitions.
[2020-11-25 17:35:45,971 INFO  L631         BuchiCegarLoop]: Abstraction has 2651 states and 2890 transitions.
[2020-11-25 17:35:45,971 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 17:35:45,972 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2651 states and 2890 transitions.
[2020-11-25 17:35:45,976 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:35:45,976 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:35:45,976 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:35:45,977 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:35:45,977 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5004]              assume null == 0;
[L5005]  CALL        call this := FreshRefGenerator__success();
[L2075]              havoc newRef;
[L2076]              assume Alloc[newRef] == false;
[L2077]              Alloc[newRef] := true;
[L2078]              assume newRef != null;
[L5005]  RET         call this := FreshRefGenerator__success();
[L5006]              assume now >= 0;
[L5007]              assume DType[this] == GokuMarketCredit;
[L5008]              assume msgvalue_MSG == 0;
[L5009]              gas := gas - 53000;
[L5010]  CALL        call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L1142]              havoc __exception;
[L1143]              revert := false;
[L1144]  COND FALSE  !(__exception)
[L1167]  CALL        call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L2950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND FALSE  !(revert)
[L2954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2955]  COND FALSE  !(revert)
[L2958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2959]  COND FALSE  !(revert)
[L2962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2553]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2553]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2554]  COND FALSE  !(revert)
[L2557]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2557]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2558]  COND FALSE  !(revert)
[L2561]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2561]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2565]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2524]              assume msgsender_MSG != null;
[L2525]              Balance[this] := 0;
[L2526]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2527]              sum_allowed1[this] := 0;
[L2565]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2566]  COND FALSE  !(revert)
[L2962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2377]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2377]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2378]  COND FALSE  !(revert)
[L2381]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2381]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2382]  COND FALSE  !(revert)
[L2385]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2354]              assume msgsender_MSG != null;
[L2355]              Balance[this] := 0;
[L2385]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  COND FALSE  !(revert)
[L2966]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2780]              owner_Ownable[this] := null;
[L2782]              owner_Ownable[this] := msgsender_MSG;
[L2795]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2970]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L2974]  CALL        call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              Balance[this] := 0;
[L2902]              name_GokuMarketCredit[this] := -1649829923;
[L2903]              symbol_GokuMarketCredit[this] := 1836184011;
[L2904]              decimals_GokuMarketCredit[this] := 18;
[L2905]              __var_13 := decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2906]              INITIAL_SUPPLY_GokuMarketCredit[this] := 50000000 * (nonlinearPow(10, decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2908]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2909]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L2910]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2911]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L2974]  RET         call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2975]  COND FALSE  !(revert)
[L1167]  RET         call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L1168]              assume !revert && gas >= 0;
[L5010]  RET         call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L5011]              assume !revert && gas >= 0;
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND TRUE   choice == 11
[L4926]              gas := gas - 21000;
[L4927]  COND TRUE   gas >= 0
[L4928]              assume _value_s419 >= 0 && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4929]              assume msgvalue_MSG == 0;
[L4930]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s419 || p2 != msgsender_MSG) && _from_s419 == _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum_balances0 := sum_balances0;
[L679]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum_allowed1 := sum_allowed1;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp__balances_BasicToken := balances_BasicToken;
[L685]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L686]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L687]               __tmp__owner_Ownable := owner_Ownable;
[L688]               __tmp__name_GokuMarketCredit := name_GokuMarketCredit;
[L689]               __tmp__symbol_GokuMarketCredit := symbol_GokuMarketCredit;
[L690]               __tmp__decimals_GokuMarketCredit := decimals_GokuMarketCredit;
[L691]               __tmp__INITIAL_SUPPLY_GokuMarketCredit := INITIAL_SUPPLY_GokuMarketCredit;
[L692]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2577]  COND FALSE  !(!(_value_s419 <= __tmp__balances_BasicToken[this][_from_s419]))
[L2581]  COND FALSE  !(!(_value_s419 <= __tmp__allowed_StandardToken[this][_from_s419][msgsender_MSG]))
[L2585]              __var_6 := null;
[L2586]  COND TRUE   !(_to_s419 != null)
[L2587]              revert := true;
[L692]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L693]               assume revert || gas < 0;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

Loop:
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND TRUE   choice == 11
[L4926]              gas := gas - 21000;
[L4927]  COND TRUE   gas >= 0
[L4928]              assume _value_s419 >= 0 && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4929]              assume msgvalue_MSG == 0;
[L4930]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s419 || p2 != msgsender_MSG) && _from_s419 == _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum_balances0 := sum_balances0;
[L679]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum_allowed1 := sum_allowed1;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp__balances_BasicToken := balances_BasicToken;
[L685]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L686]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L687]               __tmp__owner_Ownable := owner_Ownable;
[L688]               __tmp__name_GokuMarketCredit := name_GokuMarketCredit;
[L689]               __tmp__symbol_GokuMarketCredit := symbol_GokuMarketCredit;
[L690]               __tmp__decimals_GokuMarketCredit := decimals_GokuMarketCredit;
[L691]               __tmp__INITIAL_SUPPLY_GokuMarketCredit := INITIAL_SUPPLY_GokuMarketCredit;
[L692]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2577]  COND FALSE  !(!(_value_s419 <= __tmp__balances_BasicToken[this][_from_s419]))
[L2581]  COND FALSE  !(!(_value_s419 <= __tmp__allowed_StandardToken[this][_from_s419][msgsender_MSG]))
[L2585]              __var_6 := null;
[L2586]  COND TRUE   !(_to_s419 != null)
[L2587]              revert := true;
[L692]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L693]               assume revert || gas < 0;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

[2020-11-25 17:35:45,981 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:35:45,981 INFO  L82        PathProgramCache]: Analyzing trace with hash -2133685095, now seen corresponding path program 1 times
[2020-11-25 17:35:45,982 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:35:45,998 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:35:46,015 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:35:46,081 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:35:46,082 INFO  L82        PathProgramCache]: Analyzing trace with hash -681737447, now seen corresponding path program 1 times
[2020-11-25 17:35:46,082 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:35:46,086 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:35:46,090 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:35:46,098 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:35:46,098 INFO  L82        PathProgramCache]: Analyzing trace with hash -1396636239, now seen corresponding path program 1 times
[2020-11-25 17:35:46,098 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:35:46,114 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:35:46,132 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 29 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 199 to 397
[2020-11-25 17:35:46,353 WARN  L188               SmtUtils]: Spent 128.00 ms on a formula simplification. DAG size of input: 164 DAG size of output: 153
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1259 to 2503
Garbage collection #7: 2503 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 2503 to 5003
[2020-11-25 17:35:46,502 WARN  L188               SmtUtils]: Spent 116.00 ms on a formula simplification. DAG size of input: 109 DAG size of output: 103
[2020-11-25 17:35:46,620 WARN  L188               SmtUtils]: Spent 116.00 ms on a formula simplification that was a NOOP. DAG size: 253
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 6271 to 12541
[2020-11-25 17:35:47,169 WARN  L188               SmtUtils]: Spent 530.00 ms on a formula simplification. DAG size of input: 209 DAG size of output: 209
[2020-11-25 17:35:47,826 WARN  L188               SmtUtils]: Spent 654.00 ms on a formula simplification. DAG size of input: 277 DAG size of output: 258
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.003s total
Resizing node table from 12073 to 24137
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 17:35:48,031 WARN  L188               SmtUtils]: Spent 180.00 ms on a formula simplification. DAG size of input: 163 DAG size of output: 157
[2020-11-25 17:35:48,229 WARN  L188               SmtUtils]: Spent 196.00 ms on a formula simplification that was a NOOP. DAG size: 310
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-25 17:35:48,616 WARN  L188               SmtUtils]: Spent 378.00 ms on a formula simplification. DAG size of input: 249 DAG size of output: 249
[2020-11-25 17:35:48,806 WARN  L188               SmtUtils]: Spent 188.00 ms on a formula simplification that was a NOOP. DAG size: 249
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 17:35:48,936 WARN  L188               SmtUtils]: Spent 120.00 ms on a formula simplification that was a NOOP. DAG size: 158
[2020-11-25 17:35:48,945 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
[2020-11-25 17:35:49,523 WARN  L188               SmtUtils]: Spent 294.00 ms on a formula simplification. DAG size of input: 231 DAG size of output: 219
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #7: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6271 to 12541
[2020-11-25 17:35:50,519 WARN  L188               SmtUtils]: Spent 444.00 ms on a formula simplification. DAG size of input: 207 DAG size of output: 207
[2020-11-25 17:35:51,087 WARN  L188               SmtUtils]: Spent 566.00 ms on a formula simplification. DAG size of input: 274 DAG size of output: 256
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4027 to 8053
[2020-11-25 17:35:51,404 WARN  L188               SmtUtils]: Spent 297.00 ms on a formula simplification. DAG size of input: 196 DAG size of output: 165
[2020-11-25 17:35:51,657 WARN  L188               SmtUtils]: Spent 251.00 ms on a formula simplification that was a NOOP. DAG size: 318
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 17:35:52,659 WARN  L188               SmtUtils]: Spent 989.00 ms on a formula simplification. DAG size of input: 266 DAG size of output: 257
[2020-11-25 17:35:53,655 WARN  L188               SmtUtils]: Spent 995.00 ms on a formula simplification. DAG size of input: 447 DAG size of output: 428
Garbage collection #1: 167 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 167 to 331
Garbage collection #2: 331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 331 to 661
Garbage collection #3: 661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 661 to 1321
Garbage collection #4: 1321 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1321 to 2633
Garbage collection #5: 2633 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2633 to 5261
Garbage collection #6: 5261 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5261 to 10513
Garbage collection #7: 10513 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10513 to 21023
Garbage collection #8: 21023 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 21023 to 42043
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2017 to 4027
[2020-11-25 17:35:53,921 WARN  L188               SmtUtils]: Spent 245.00 ms on a formula simplification. DAG size of input: 192 DAG size of output: 187
[2020-11-25 17:35:54,147 WARN  L188               SmtUtils]: Spent 211.00 ms on a formula simplification that was a NOOP. DAG size: 290
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 17:35:54,688 WARN  L188               SmtUtils]: Spent 532.00 ms on a formula simplification. DAG size of input: 219 DAG size of output: 208
[2020-11-25 17:35:55,211 WARN  L188               SmtUtils]: Spent 521.00 ms on a formula simplification. DAG size of input: 313 DAG size of output: 312
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3517 to 7027
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
Garbage collection #9: 26597 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 26597 to 53189
[2020-11-25 17:35:56,352 WARN  L188               SmtUtils]: Spent 1.12 s on a formula simplification. DAG size of input: 324 DAG size of output: 307
[2020-11-25 17:35:56,366 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:35:56,383 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:35:56,392 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:35:56 BasicIcfg
[2020-11-25 17:35:56,392 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 17:35:56,392 INFO  L168              Benchmark]: Toolchain (without parser) took 16275.94 ms. Allocated memory was 1.0 GB in the beginning and 2.3 GB in the end (delta: 1.3 GB). Free memory was 935.2 MB in the beginning and 1.2 GB in the end (delta: -227.2 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
[2020-11-25 17:35:56,393 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.21 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 17:35:56,393 INFO  L168              Benchmark]: Boogie Preprocessor took 119.10 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 17:35:56,393 INFO  L168              Benchmark]: UtopiaSpecLang took 71.13 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 17:35:56,393 INFO  L168              Benchmark]: Boogie Printer took 17.78 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 17:35:56,393 INFO  L168              Benchmark]: RCFGBuilder took 858.86 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 763.4 MB in the end (delta: 150.3 MB). Peak memory consumption was 150.3 MB. Max. memory is 15.3 GB.
[2020-11-25 17:35:56,394 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.98 ms. Allocated memory is still 1.0 GB. Free memory was 763.4 MB in the beginning and 759.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 17:35:56,394 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1583.64 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 228.1 MB). Free memory was 759.8 MB in the beginning and 821.5 MB in the end (delta: -61.7 MB). Peak memory consumption was 166.4 MB. Max. memory is 15.3 GB.
[2020-11-25 17:35:56,394 INFO  L168              Benchmark]: BlockEncodingV2 took 191.19 ms. Allocated memory is still 1.3 GB. Free memory was 821.5 MB in the beginning and 753.1 MB in the end (delta: 68.4 MB). Peak memory consumption was 68.4 MB. Max. memory is 15.3 GB.
[2020-11-25 17:35:56,395 INFO  L168              Benchmark]: BuchiAutomizer took 13391.12 ms. Allocated memory was 1.3 GB in the beginning and 2.3 GB in the end (delta: 1.0 GB). Free memory was 753.1 MB in the beginning and 1.2 GB in the end (delta: -409.3 MB). Peak memory consumption was 821.0 MB. Max. memory is 15.3 GB.
[2020-11-25 17:35:56,397 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4396 locations, 7803 edges
  - StatisticsResult: Encoded RCFG
    4332 locations, 7640 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.21 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 119.10 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 71.13 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 17.78 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 858.86 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 763.4 MB in the end (delta: 150.3 MB). Peak memory consumption was 150.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.98 ms. Allocated memory is still 1.0 GB. Free memory was 763.4 MB in the beginning and 759.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1583.64 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 228.1 MB). Free memory was 759.8 MB in the beginning and 821.5 MB in the end (delta: -61.7 MB). Peak memory consumption was 166.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 191.19 ms. Allocated memory is still 1.3 GB. Free memory was 821.5 MB in the beginning and 753.1 MB in the end (delta: 68.4 MB). Peak memory consumption was 68.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 13391.12 ms. Allocated memory was 1.3 GB in the beginning and 2.3 GB in the end (delta: 1.0 GB). Free memory was 753.1 MB in the beginning and 1.2 GB in the end (delta: -409.3 MB). Peak memory consumption was 821.0 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1781 locations, 2380 edges
  - StatisticsResult: BuchiProgram size
    4396 locations, 7803 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 6 locations. The remainder module has 2651 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 13.3s and 5 iterations.  TraceHistogramMax:8. Analysis of lassos took 11.0s. Construction of modules took 1.3s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1102 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2651 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 11522 SDtfs, 10441 SDslu, 13320 SDs, 0 SdLazy, 9081 SolverSat, 2106 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.3s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1836184027) = (new GokuMarketCredit)({from : 1836184029});
[L1142]              havoc __exception;
[L1143]              revert := false;
[L1144]  COND FALSE  !(__exception)
[L1167]  CALL        call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L2950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND FALSE  !(revert)
[L2954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2955]  COND FALSE  !(revert)
[L2958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2959]  COND FALSE  !(revert)
[L2962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2553]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2553]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2554]  COND FALSE  !(revert)
[L2557]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2557]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2558]  COND FALSE  !(revert)
[L2561]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2561]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2565]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2524]              assume msgsender_MSG != null;
[L2525]              Balance[this] := 0;
[L2526]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2527]              sum_allowed1[this] := 0;
[L2565]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2566]  COND FALSE  !(revert)
[L2962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2377]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2377]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2378]  COND FALSE  !(revert)
[L2381]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2381]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2382]  COND FALSE  !(revert)
[L2385]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2354]              assume msgsender_MSG != null;
[L2355]              Balance[this] := 0;
[L2385]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  COND FALSE  !(revert)
[L2966]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2780]              owner_Ownable[this] := null;
[L2782]              owner_Ownable[this] := msgsender_MSG;
[L2795]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2970]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L2974]  CALL        call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              Balance[this] := 0;
[L2902]              name_GokuMarketCredit[this] := -1649829923;
[L2903]              symbol_GokuMarketCredit[this] := 1836184011;
[L2904]              decimals_GokuMarketCredit[this] := 18;
[L2905]              __var_13 := decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2906]              INITIAL_SUPPLY_GokuMarketCredit[this] := 50000000 * (nonlinearPow(10, decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2908]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2909]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L2910]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2911]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L2974]  RET         call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2975]  COND FALSE  !(revert)
[L1167]  RET         call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L1168]              assume !revert && gas >= 0;
[L5010]  RET         call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
StandardToken(1836184027).transferFrom~address~address~uint256.gas(3979002)({from : 1836184022, _from : 0, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s419 || p2 != msgsender_MSG) && _from_s419 == _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum_balances0 := sum_balances0;
[L679]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum_allowed1 := sum_allowed1;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp__balances_BasicToken := balances_BasicToken;
[L685]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L686]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L687]               __tmp__owner_Ownable := owner_Ownable;
[L688]               __tmp__name_GokuMarketCredit := name_GokuMarketCredit;
[L689]               __tmp__symbol_GokuMarketCredit := symbol_GokuMarketCredit;
[L690]               __tmp__decimals_GokuMarketCredit := decimals_GokuMarketCredit;
[L691]               __tmp__INITIAL_SUPPLY_GokuMarketCredit := INITIAL_SUPPLY_GokuMarketCredit;
[L692]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2577]  COND FALSE  !(!(_value_s419 <= __tmp__balances_BasicToken[this][_from_s419]))
[L2581]  COND FALSE  !(!(_value_s419 <= __tmp__allowed_StandardToken[this][_from_s419][msgsender_MSG]))
[L2585]              __var_6 := null;
[L2586]  COND TRUE   !(_to_s419 != null)
[L2587]              revert := true;
[L692]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L693]               assume revert || gas < 0;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);

Loop:
StandardToken(1836184027).transferFrom~address~address~uint256.gas(3979001)({from : 1836184023, _from : 0, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s419 || p2 != msgsender_MSG) && _from_s419 == _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum_balances0 := sum_balances0;
[L679]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum_allowed1 := sum_allowed1;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp__balances_BasicToken := balances_BasicToken;
[L685]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L686]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L687]               __tmp__owner_Ownable := owner_Ownable;
[L688]               __tmp__name_GokuMarketCredit := name_GokuMarketCredit;
[L689]               __tmp__symbol_GokuMarketCredit := symbol_GokuMarketCredit;
[L690]               __tmp__decimals_GokuMarketCredit := decimals_GokuMarketCredit;
[L691]               __tmp__INITIAL_SUPPLY_GokuMarketCredit := INITIAL_SUPPLY_GokuMarketCredit;
[L692]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2577]  COND FALSE  !(!(_value_s419 <= __tmp__balances_BasicToken[this][_from_s419]))
[L2581]  COND FALSE  !(!(_value_s419 <= __tmp__allowed_StandardToken[this][_from_s419][msgsender_MSG]))
[L2585]              __var_6 := null;
[L2586]  COND TRUE   !(_to_s419 != null)
[L2587]              revert := true;
[L692]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L693]               assume revert || gas < 0;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
