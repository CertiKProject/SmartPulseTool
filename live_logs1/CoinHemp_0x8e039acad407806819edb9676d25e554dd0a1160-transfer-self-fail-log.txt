This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 11:57:47,782 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 11:57:47,783 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 11:57:47,790 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 11:57:47,790 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 11:57:47,791 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 11:57:47,792 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 11:57:47,793 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 11:57:47,794 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 11:57:47,794 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 11:57:47,795 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 11:57:47,795 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 11:57:47,795 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 11:57:47,796 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 11:57:47,796 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 11:57:47,797 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 11:57:47,797 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 11:57:47,798 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 11:57:47,799 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 11:57:47,800 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 11:57:47,800 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 11:57:47,801 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 11:57:47,802 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 11:57:47,802 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 11:57:47,802 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 11:57:47,803 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 11:57:47,803 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 11:57:47,804 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 11:57:47,804 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 11:57:47,804 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 11:57:47,804 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 11:57:47,804 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 11:57:47,805 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 11:57:47,805 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 11:57:47,806 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 11:57:47,806 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 11:57:47,806 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 11:57:47,806 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 11:57:47,806 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 11:57:47,807 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 11:57:47,807 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 11:57:47,807 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 11:57:47,813 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 11:57:47,814 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 11:57:47,814 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 11:57:47,815 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 11:57:47,815 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 11:57:47,815 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 11:57:47,815 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 11:57:47,815 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 11:57:47,815 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 11:57:47,815 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 11:57:47,815 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 11:57:47,815 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 11:57:47,816 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 11:57:47,816 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 11:57:47,816 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 11:57:47,816 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 11:57:47,816 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 11:57:47,816 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 11:57:47,816 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 11:57:47,816 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 11:57:47,816 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 11:57:47,816 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 11:57:47,817 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 11:57:47,817 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 11:57:47,817 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 11:57:47,817 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 11:57:47,836 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 11:57:47,850 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 11:57:47,854 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 11:57:47,855 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 11:57:47,856 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 11:57:47,857 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl
[2020-11-25 11:57:47,857 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl'
[2020-11-25 11:57:47,930 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 11:57:47,931 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 11:57:47,932 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 11:57:47,932 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 11:57:47,932 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 11:57:47,948 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:47" (1/1) ...
[2020-11-25 11:57:47,949 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:47" (1/1) ...
[2020-11-25 11:57:47,974 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:47" (1/1) ...
[2020-11-25 11:57:47,974 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:47" (1/1) ...
[2020-11-25 11:57:47,989 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:47" (1/1) ...
[2020-11-25 11:57:47,995 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:47" (1/1) ...
[2020-11-25 11:57:48,000 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:47" (1/1) ...
[2020-11-25 11:57:48,007 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 11:57:48,007 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 11:57:48,008 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 11:57:48,009 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 11:57:48,013 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:47" (1/1) ...
[2020-11-25 11:57:48,028 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(CoinHemp.transfer(to, value), msg.sender == to && value > balances_CoinHemp[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][to] >= 0 && balances_CoinHemp[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][msg.sender] >= 0 &&  balances_CoinHemp[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(CoinHemp.transfer)))
[2020-11-25 11:57:48,033 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(CoinHemp.transfer(to, value), msg.sender == to && value > balances_CoinHemp[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][to] >= 0 && balances_CoinHemp[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][msg.sender] >= 0 &&  balances_CoinHemp[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(CoinHemp.transfer)))
[2020-11-25 11:57:48,039 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(CoinHemp.transfer(to, value), msg.sender == to && value > balances_CoinHemp[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][to] >= 0 && balances_CoinHemp[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][msg.sender] >= 0 &&  balances_CoinHemp[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(CoinHemp.transfer)))
[2020-11-25 11:57:48,044 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==_to_s131 && _value_s131>balances_CoinHemp[this][msg.sender] ) && _value_s131>=0 ) && _value_s131<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_CoinHemp[this][_to_s131]>=0 ) && balances_CoinHemp[this][_to_s131]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_CoinHemp[this][msg.sender]>=0 ) && balances_CoinHemp[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>],IdentifierExpression[_to_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]],BinaryExpression[COMPGT,IdentifierExpression[_value_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],[IdentifierExpression[_to_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],[IdentifierExpression[_to_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 11:57:48,049 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(CoinHemp.transfer(to, value), msg.sender == to && value > balances_CoinHemp[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][to] >= 0 && balances_CoinHemp[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][msg.sender] >= 0 &&  balances_CoinHemp[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(CoinHemp.transfer)))
[2020-11-25 11:57:48,050 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_CoinHemp0) ==> ( <>AP(fail_transfer_CoinHemp0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 11:57:48,056 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:48 PropertyContainer
[2020-11-25 11:57:48,056 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 11:57:48,056 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 11:57:48,057 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 11:57:48,057 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 11:57:48,057 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:47" (1/2) ...
[2020-11-25 11:57:48,058 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 11:57:48,058 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 11:57:48,067 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:48" (2/2) ...
[2020-11-25 11:57:48,067 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 11:57:48,068 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 11:57:48,068 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 11:57:48,068 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 11:57:48,069 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:47" (1/2) ...
[2020-11-25 11:57:48,133 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 11:57:48,133 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp_NoBaseCtor__success
[2020-11-25 11:57:48,134 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp
[2020-11-25 11:57:48,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp
[2020-11-25 11:57:48,134 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CoinHemp
[2020-11-25 11:57:48,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CoinHemp
[2020-11-25 11:57:48,135 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CoinHemp
[2020-11-25 11:57:48,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CoinHemp
[2020-11-25 11:57:48,135 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CoinHemp
[2020-11-25 11:57:48,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CoinHemp
[2020-11-25 11:57:48,135 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CoinHemp
[2020-11-25 11:57:48,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CoinHemp
[2020-11-25 11:57:48,136 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CoinHemp
[2020-11-25 11:57:48,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CoinHemp
[2020-11-25 11:57:48,136 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_CoinHemp
[2020-11-25 11:57:48,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_CoinHemp
[2020-11-25 11:57:48,137 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_CoinHemp
[2020-11-25 11:57:48,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_CoinHemp
[2020-11-25 11:57:48,137 INFO  L130     BoogieDeclarations]: Found specification of procedure setAdmin~address_CoinHemp
[2020-11-25 11:57:48,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAdmin~address_CoinHemp
[2020-11-25 11:57:48,138 INFO  L130     BoogieDeclarations]: Found specification of procedure withDraw_CoinHemp
[2020-11-25 11:57:48,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure withDraw_CoinHemp
[2020-11-25 11:57:48,138 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_CoinHemp__success
[2020-11-25 11:57:48,138 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:48,139 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:48,139 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:48,139 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:48,139 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_address_CoinHemp
[2020-11-25 11:57:48,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_address_CoinHemp
[2020-11-25 11:57:48,139 INFO  L130     BoogieDeclarations]: Found specification of procedure account_address_CoinHemp
[2020-11-25 11:57:48,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure account_address_CoinHemp
[2020-11-25 11:57:48,140 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CoinHemp
[2020-11-25 11:57:48,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CoinHemp
[2020-11-25 11:57:48,140 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CoinHemp
[2020-11-25 11:57:48,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CoinHemp
[2020-11-25 11:57:48,140 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CoinHemp
[2020-11-25 11:57:48,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CoinHemp
[2020-11-25 11:57:48,141 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CoinHemp
[2020-11-25 11:57:48,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CoinHemp
[2020-11-25 11:57:48,141 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 11:57:48,141 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 11:57:48,141 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 11:57:48,142 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_only_pre__success
[2020-11-25 11:57:48,142 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_CoinHemp
[2020-11-25 11:57:48,142 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 11:57:48,142 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 11:57:48,142 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp_NoBaseCtor__fail
[2020-11-25 11:57:48,142 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp__success
[2020-11-25 11:57:48,143 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp__fail
[2020-11-25 11:57:48,143 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CoinHemp__success
[2020-11-25 11:57:48,143 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CoinHemp__fail
[2020-11-25 11:57:48,143 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CoinHemp__success
[2020-11-25 11:57:48,143 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CoinHemp__fail
[2020-11-25 11:57:48,143 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CoinHemp__success
[2020-11-25 11:57:48,144 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CoinHemp__fail
[2020-11-25 11:57:48,144 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CoinHemp__success
[2020-11-25 11:57:48,144 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CoinHemp__fail
[2020-11-25 11:57:48,144 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CoinHemp__success
[2020-11-25 11:57:48,144 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CoinHemp__fail
[2020-11-25 11:57:48,144 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:57:48,144 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:57:48,144 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:57:48,144 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:57:48,145 INFO  L130     BoogieDeclarations]: Found specification of procedure setAdmin~address_CoinHemp__success
[2020-11-25 11:57:48,145 INFO  L130     BoogieDeclarations]: Found specification of procedure setAdmin~address_CoinHemp__fail
[2020-11-25 11:57:48,145 INFO  L130     BoogieDeclarations]: Found specification of procedure withDraw_CoinHemp__success
[2020-11-25 11:57:48,145 INFO  L130     BoogieDeclarations]: Found specification of procedure withDraw_CoinHemp__fail
[2020-11-25 11:57:48,145 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_CoinHemp__fail
[2020-11-25 11:57:48,145 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:48,145 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:48,145 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:48,145 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:48,145 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_address_CoinHemp__success
[2020-11-25 11:57:48,145 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_address_CoinHemp__fail
[2020-11-25 11:57:48,145 INFO  L130     BoogieDeclarations]: Found specification of procedure account_address_CoinHemp__success
[2020-11-25 11:57:48,145 INFO  L130     BoogieDeclarations]: Found specification of procedure account_address_CoinHemp__fail
[2020-11-25 11:57:48,146 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CoinHemp__success
[2020-11-25 11:57:48,146 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CoinHemp__fail
[2020-11-25 11:57:48,146 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CoinHemp__success
[2020-11-25 11:57:48,146 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CoinHemp__fail
[2020-11-25 11:57:48,146 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CoinHemp__success
[2020-11-25 11:57:48,146 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CoinHemp__fail
[2020-11-25 11:57:48,146 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CoinHemp__success
[2020-11-25 11:57:48,146 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CoinHemp__fail
[2020-11-25 11:57:48,146 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 11:57:48,146 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 11:57:48,146 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 11:57:48,146 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_only_pre__fail
[2020-11-25 11:57:48,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 11:57:48,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 11:57:48,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp_NoBaseCtor__fail
[2020-11-25 11:57:48,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp_NoBaseCtor__success
[2020-11-25 11:57:48,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp__fail
[2020-11-25 11:57:48,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp__success
[2020-11-25 11:57:48,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CoinHemp__fail
[2020-11-25 11:57:48,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CoinHemp__success
[2020-11-25 11:57:48,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CoinHemp__fail
[2020-11-25 11:57:48,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CoinHemp__success
[2020-11-25 11:57:48,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CoinHemp__fail
[2020-11-25 11:57:48,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CoinHemp__success
[2020-11-25 11:57:48,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CoinHemp__fail
[2020-11-25 11:57:48,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CoinHemp__success
[2020-11-25 11:57:48,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CoinHemp__fail
[2020-11-25 11:57:48,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CoinHemp__success
[2020-11-25 11:57:48,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:57:48,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:57:48,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:57:48,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:57:48,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAdmin~address_CoinHemp__fail
[2020-11-25 11:57:48,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAdmin~address_CoinHemp__success
[2020-11-25 11:57:48,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure withDraw_CoinHemp__fail
[2020-11-25 11:57:48,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure withDraw_CoinHemp__success
[2020-11-25 11:57:48,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_CoinHemp__fail
[2020-11-25 11:57:48,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_CoinHemp__success
[2020-11-25 11:57:48,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:48,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:48,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:48,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:48,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:48,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:48,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:48,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:48,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_address_CoinHemp__fail
[2020-11-25 11:57:48,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_address_CoinHemp__success
[2020-11-25 11:57:48,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure account_address_CoinHemp__fail
[2020-11-25 11:57:48,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure account_address_CoinHemp__success
[2020-11-25 11:57:48,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CoinHemp__fail
[2020-11-25 11:57:48,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CoinHemp__success
[2020-11-25 11:57:48,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CoinHemp__fail
[2020-11-25 11:57:48,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CoinHemp__success
[2020-11-25 11:57:48,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CoinHemp__fail
[2020-11-25 11:57:48,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CoinHemp__success
[2020-11-25 11:57:48,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CoinHemp__fail
[2020-11-25 11:57:48,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CoinHemp__success
[2020-11-25 11:57:48,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 11:57:48,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 11:57:48,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 11:57:48,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 11:57:48,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 11:57:48,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 11:57:48,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_only_pre__fail
[2020-11-25 11:57:48,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_only_pre__success
[2020-11-25 11:57:48,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_CoinHemp
[2020-11-25 11:57:48,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 11:57:48,151 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 11:57:48,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 11:57:48,606 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:57:48,606 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:57:48,693 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 11:57:48,693 INFO  L286             CfgBuilder]: Removed 1 assue(true) statements.
[2020-11-25 11:57:48,695 INFO  L202        PluginConnector]: Adding new model CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:57:48 BoogieIcfgContainer
[2020-11-25 11:57:48,695 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:48" (2/2) ...
[2020-11-25 11:57:48,695 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 11:57:48,695 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@8b88883 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:57:48, skipping insertion in model container
[2020-11-25 11:57:48,695 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 11:57:48,696 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 11:57:48,696 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 11:57:48,697 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 11:57:48,697 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:47" (1/3) ...
[2020-11-25 11:57:48,698 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@366b0113 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:57:48, skipping insertion in model container
[2020-11-25 11:57:48,698 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:48" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 11:57:48,734 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:57:48 NWAContainer
[2020-11-25 11:57:48,734 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 11:57:48,734 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 11:57:48,734 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 11:57:48,735 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 11:57:48,735 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:57:48" (3/4) ...
[2020-11-25 11:57:48,736 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@32303d86 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:57:48, skipping insertion in model container
[2020-11-25 11:57:48,736 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:57:48" (4/4) ...
[2020-11-25 11:57:48,739 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 11:57:48,743 INFO  L110   BuchiProductObserver]: Initial RCFG 1295 locations, 1653 edges
[2020-11-25 11:57:48,743 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 11:57:48,755 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 11:57:49,583 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 11:57:49,587 INFO  L110   BuchiProductObserver]: BuchiProgram size 3032 locations, 5195 edges
[2020-11-25 11:57:49,587 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:57:49 BoogieIcfgContainer
[2020-11-25 11:57:49,587 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 11:57:49,587 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 11:57:49,587 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 11:57:49,589 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 11:57:49,589 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:57:49" (1/1) ...
[2020-11-25 11:57:49,642 INFO  L313           BlockEncoder]: Initial Icfg 3032 locations, 5195 edges
[2020-11-25 11:57:49,642 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 11:57:49,642 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 11:57:49,643 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 11:57:49,643 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 11:57:49,652 INFO  L70    emoveInfeasibleEdges]: Removed 30 edges and 6 locations because of local infeasibility
[2020-11-25 11:57:49,660 INFO  L70        RemoveSinkStates]: Removed 92 edges and 46 locations by removing sink states
[2020-11-25 11:57:49,669 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 11:57:49,672 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 11:57:49,674 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 11:57:49,674 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 11:57:49,677 INFO  L313           BlockEncoder]: Encoded RCFG 2968 locations, 5056 edges
[2020-11-25 11:57:49,678 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:57:49 BasicIcfg
[2020-11-25 11:57:49,678 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 11:57:49,678 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 11:57:49,678 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 11:57:49,680 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 11:57:49,680 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:49,680 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:47" (1/6) ...
[2020-11-25 11:57:49,682 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7b7b3c20 and model type CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:57:49, skipping insertion in model container
[2020-11-25 11:57:49,682 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:49,682 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:48" (2/6) ...
[2020-11-25 11:57:49,682 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7b7b3c20 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:57:49, skipping insertion in model container
[2020-11-25 11:57:49,682 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:49,682 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:57:48" (3/6) ...
[2020-11-25 11:57:49,683 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7b7b3c20 and model type CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:57:49, skipping insertion in model container
[2020-11-25 11:57:49,683 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:49,683 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:57:48" (4/6) ...
[2020-11-25 11:57:49,683 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7b7b3c20 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:57:49, skipping insertion in model container
[2020-11-25 11:57:49,683 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:49,683 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:57:49" (5/6) ...
[2020-11-25 11:57:49,683 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7b7b3c20 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 11:57:49, skipping insertion in model container
[2020-11-25 11:57:49,683 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:49,683 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:57:49" (6/6) ...
[2020-11-25 11:57:49,684 INFO  L404   chiAutomizerObserver]: Analyzing ICFG CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-self-fail.bpl_BEv2
[2020-11-25 11:57:49,725 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 11:57:49,726 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 11:57:49,726 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 11:57:49,726 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 11:57:49,726 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 11:57:49,726 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 11:57:49,726 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 11:57:49,726 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 11:57:49,726 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 11:57:49,756 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2968 states.
[2020-11-25 11:57:49,817 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:49,817 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:49,818 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:49,827 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:49,828 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:49,828 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 11:57:49,828 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2968 states.
[2020-11-25 11:57:49,854 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:49,854 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:49,854 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:49,856 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:49,857 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_CoinHemp0 := false;
[L2]                 call_transfer_CoinHemp0 := false;
[L2]     CALL        call main();
[L2767]              assume null == 0;
[L2768]  CALL        call this := FreshRefGenerator__success();
[L1410]              havoc newRef;
[L1411]              assume Alloc[newRef] == false;
[L1412]              Alloc[newRef] := true;
[L1413]              assume newRef != null;
[L2768]  RET         call this := FreshRefGenerator__success();
[L2769]              assume now >= 0;
[L2770]              assume DType[this] == CoinHemp;
[L2771]              assume msgvalue_MSG >= 0;
[L2772]              gas := gas - 53000;
[L2773]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L95]                havoc __exception;
[L96]                revert := false;
[L97]    COND FALSE  !(__exception)
[L121]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1512]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1462]              assume msgsender_MSG != null;
[L1463]              Balance[this] := 0;
[L1464]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1465]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              balances_CoinHemp[this] := zeroRefintArr();
[L1469]              sum_balances0[this] := 0;
[L1470]              name_CoinHemp[this] := -1920728545;
[L1471]              symbol_CoinHemp[this] := 294157574;
[L1472]              decimals_CoinHemp[this] := 18;
[L1473]              initSupply_CoinHemp[this] := 400000000;
[L1474]              totalSupply_CoinHemp[this] := 0;
[L1475]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1476]              sum_allowed1[this] := 0;
[L1479]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1480]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1481]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1483]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1484]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1912]  COND TRUE   a_s472 == 0
[L1913]              c_s472 := 0;
[L1484]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1485]  COND TRUE   revert
[L1512]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  COND FALSE  !(revert)
[L121]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L122]               assume !revert && gas >= 0;
[L2773]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2774]              assume !revert && gas >= 0;

Loop:
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND TRUE   choice == 15
[L2665]              gas := gas - 21000;
[L2666]  COND FALSE  !(gas >= 0)
[L2777]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:49,876 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:49,876 INFO  L82        PathProgramCache]: Analyzing trace with hash 1075143665, now seen corresponding path program 1 times
[2020-11-25 11:57:49,881 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:49,911 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:57:49,971 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:57:49,974 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:57:49,974 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:57:49,979 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:57:50,096 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:57:50,097 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:57:50,100 INFO  L87              Difference]: Start difference. First operand 2968 states. Second operand 4 states.
[2020-11-25 11:57:50,462 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:57:50,462 INFO  L93              Difference]: Finished difference Result 2824 states and 3311 transitions.
[2020-11-25 11:57:50,462 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:57:50,463 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2824 states and 3311 transitions.
[2020-11-25 11:57:50,476 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:50,496 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2824 states to 2819 states and 3301 transitions.
[2020-11-25 11:57:50,496 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 11:57:50,497 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 117
[2020-11-25 11:57:50,497 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2819 states and 3301 transitions.
[2020-11-25 11:57:50,507 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:57:50,508 INFO  L728         BuchiCegarLoop]: Abstraction has 2819 states and 3301 transitions.
[2020-11-25 11:57:50,529 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2819 states and 3301 transitions.
[2020-11-25 11:57:50,582 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2819 to 2819.
[2020-11-25 11:57:50,583 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2819 states.
[2020-11-25 11:57:50,589 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2819 states to 2819 states and 3301 transitions.
[2020-11-25 11:57:50,591 INFO  L751         BuchiCegarLoop]: Abstraction has 2819 states and 3301 transitions.
[2020-11-25 11:57:50,591 INFO  L631         BuchiCegarLoop]: Abstraction has 2819 states and 3301 transitions.
[2020-11-25 11:57:50,591 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 11:57:50,591 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2819 states and 3301 transitions.
[2020-11-25 11:57:50,600 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:50,600 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:50,600 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:50,602 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:50,602 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_CoinHemp0 := false;
[L2]                 call_transfer_CoinHemp0 := false;
[L2]     CALL        call main();
[L2767]              assume null == 0;
[L2768]  CALL        call this := FreshRefGenerator__success();
[L1410]              havoc newRef;
[L1411]              assume Alloc[newRef] == false;
[L1412]              Alloc[newRef] := true;
[L1413]              assume newRef != null;
[L2768]  RET         call this := FreshRefGenerator__success();
[L2769]              assume now >= 0;
[L2770]              assume DType[this] == CoinHemp;
[L2771]              assume msgvalue_MSG >= 0;
[L2772]              gas := gas - 53000;
[L2773]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L95]                havoc __exception;
[L96]                revert := false;
[L97]    COND FALSE  !(__exception)
[L121]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1512]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1462]              assume msgsender_MSG != null;
[L1463]              Balance[this] := 0;
[L1464]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1465]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              balances_CoinHemp[this] := zeroRefintArr();
[L1469]              sum_balances0[this] := 0;
[L1470]              name_CoinHemp[this] := -1920728545;
[L1471]              symbol_CoinHemp[this] := 294157574;
[L1472]              decimals_CoinHemp[this] := 18;
[L1473]              initSupply_CoinHemp[this] := 400000000;
[L1474]              totalSupply_CoinHemp[this] := 0;
[L1475]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1476]              sum_allowed1[this] := 0;
[L1479]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1480]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1481]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1483]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1484]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1912]  COND TRUE   a_s472 == 0
[L1913]              c_s472 := 0;
[L1484]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1485]  COND TRUE   revert
[L1512]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  COND FALSE  !(revert)
[L121]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L122]               assume !revert && gas >= 0;
[L2773]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2774]              assume !revert && gas >= 0;
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND FALSE  !(choice == 10)
[L2700]  COND FALSE  !(choice == 9)
[L2706]  COND TRUE   choice == 8
[L2707]              gas := gas - 21000;
[L2708]  COND TRUE   gas >= 0
[L2709]              assume _value_s131 >= 0 && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2710]              assume msgvalue_MSG == 0;
[L2711]  CALL        call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s131 && _value_s131 > balances_CoinHemp[this][msgsender_MSG]) && _value_s131 >= 0) && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s131] >= 0) && balances_CoinHemp[this][_to_s131] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][msgsender_MSG] >= 0) && balances_CoinHemp[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_CoinHemp0 := true;
[L2]                 call_transfer_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L235]   CALL        call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L1567]              __var_5 := null;
[L1568]  COND TRUE   !(_to_s131 != null)
[L1569]              revert := true;
[L235]   RET         call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L236]               assume !revert && gas >= 0;
[L2711]  RET         call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L2777]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND FALSE  !(choice == 10)
[L2700]  COND FALSE  !(choice == 9)
[L2706]  COND TRUE   choice == 8
[L2707]              gas := gas - 21000;
[L2708]  COND TRUE   gas >= 0
[L2709]              assume _value_s131 >= 0 && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2710]              assume msgvalue_MSG == 0;
[L2711]  CALL        call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s131 && _value_s131 > balances_CoinHemp[this][msgsender_MSG]) && _value_s131 >= 0) && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s131] >= 0) && balances_CoinHemp[this][_to_s131] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][msgsender_MSG] >= 0) && balances_CoinHemp[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_CoinHemp0 := true;
[L2]                 call_transfer_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L235]   CALL        call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L1567]              __var_5 := null;
[L1568]  COND TRUE   !(_to_s131 != null)
[L1569]              revert := true;
[L235]   RET         call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L236]               assume !revert && gas >= 0;
[L2711]  RET         call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L2777]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:50,608 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:50,608 INFO  L82        PathProgramCache]: Analyzing trace with hash -1512432906, now seen corresponding path program 1 times
[2020-11-25 11:57:50,609 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:50,619 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:57:50,653 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:57:50,653 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:57:50,653 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:57:50,654 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:57:50,654 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:57:50,654 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:57:50,655 INFO  L87              Difference]: Start difference. First operand 2819 states and 3301 transitions. cyclomatic complexity: 488 Second operand 4 states.
[2020-11-25 11:57:50,699 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:57:50,699 INFO  L93              Difference]: Finished difference Result 2821 states and 3302 transitions.
[2020-11-25 11:57:50,699 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:57:50,699 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2821 states and 3302 transitions.
[2020-11-25 11:57:50,709 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:50,719 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2821 states to 2818 states and 3299 transitions.
[2020-11-25 11:57:50,720 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 117
[2020-11-25 11:57:50,720 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 117
[2020-11-25 11:57:50,720 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2818 states and 3299 transitions.
[2020-11-25 11:57:50,724 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:57:50,724 INFO  L728         BuchiCegarLoop]: Abstraction has 2818 states and 3299 transitions.
[2020-11-25 11:57:50,727 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2818 states and 3299 transitions.
[2020-11-25 11:57:50,755 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2818 to 2818.
[2020-11-25 11:57:50,755 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2818 states.
[2020-11-25 11:57:50,760 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2818 states to 2818 states and 3299 transitions.
[2020-11-25 11:57:50,760 INFO  L751         BuchiCegarLoop]: Abstraction has 2818 states and 3299 transitions.
[2020-11-25 11:57:50,760 INFO  L631         BuchiCegarLoop]: Abstraction has 2818 states and 3299 transitions.
[2020-11-25 11:57:50,760 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 11:57:50,760 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2818 states and 3299 transitions.
[2020-11-25 11:57:50,767 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:50,768 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:50,768 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:50,769 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:50,769 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_CoinHemp0 := false;
[L2]                 call_transfer_CoinHemp0 := false;
[L2]     CALL        call main();
[L2767]              assume null == 0;
[L2768]  CALL        call this := FreshRefGenerator__success();
[L1410]              havoc newRef;
[L1411]              assume Alloc[newRef] == false;
[L1412]              Alloc[newRef] := true;
[L1413]              assume newRef != null;
[L2768]  RET         call this := FreshRefGenerator__success();
[L2769]              assume now >= 0;
[L2770]              assume DType[this] == CoinHemp;
[L2771]              assume msgvalue_MSG >= 0;
[L2772]              gas := gas - 53000;
[L2773]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L95]                havoc __exception;
[L96]                revert := false;
[L97]    COND FALSE  !(__exception)
[L121]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1512]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1462]              assume msgsender_MSG != null;
[L1463]              Balance[this] := 0;
[L1464]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1465]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              balances_CoinHemp[this] := zeroRefintArr();
[L1469]              sum_balances0[this] := 0;
[L1470]              name_CoinHemp[this] := -1920728545;
[L1471]              symbol_CoinHemp[this] := 294157574;
[L1472]              decimals_CoinHemp[this] := 18;
[L1473]              initSupply_CoinHemp[this] := 400000000;
[L1474]              totalSupply_CoinHemp[this] := 0;
[L1475]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1476]              sum_allowed1[this] := 0;
[L1479]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1480]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1481]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1483]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1484]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1912]  COND FALSE  !(a_s472 == 0)
[L1916]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1917]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1918]              c_s472 := c_s472;
[L1484]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1485]  COND TRUE   revert
[L1512]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  COND FALSE  !(revert)
[L121]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L122]               assume !revert && gas >= 0;
[L2773]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2774]              assume !revert && gas >= 0;
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND FALSE  !(choice == 10)
[L2700]  COND FALSE  !(choice == 9)
[L2706]  COND TRUE   choice == 8
[L2707]              gas := gas - 21000;
[L2708]  COND TRUE   gas >= 0
[L2709]              assume _value_s131 >= 0 && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2710]              assume msgvalue_MSG == 0;
[L2711]  CALL        call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s131 && _value_s131 > balances_CoinHemp[this][msgsender_MSG]) && _value_s131 >= 0) && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s131] >= 0) && balances_CoinHemp[this][_to_s131] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][msgsender_MSG] >= 0) && balances_CoinHemp[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_CoinHemp0 := true;
[L2]                 call_transfer_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L235]   CALL        call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L1567]              __var_5 := null;
[L1568]  COND TRUE   !(_to_s131 != null)
[L1569]              revert := true;
[L235]   RET         call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L236]               assume !revert && gas >= 0;
[L2711]  RET         call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L2777]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND FALSE  !(choice == 10)
[L2700]  COND FALSE  !(choice == 9)
[L2706]  COND TRUE   choice == 8
[L2707]              gas := gas - 21000;
[L2708]  COND TRUE   gas >= 0
[L2709]              assume _value_s131 >= 0 && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2710]              assume msgvalue_MSG == 0;
[L2711]  CALL        call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s131 && _value_s131 > balances_CoinHemp[this][msgsender_MSG]) && _value_s131 >= 0) && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s131] >= 0) && balances_CoinHemp[this][_to_s131] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][msgsender_MSG] >= 0) && balances_CoinHemp[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_CoinHemp0 := true;
[L2]                 call_transfer_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L235]   CALL        call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L1567]              __var_5 := null;
[L1568]  COND TRUE   !(_to_s131 != null)
[L1569]              revert := true;
[L235]   RET         call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L236]               assume !revert && gas >= 0;
[L2711]  RET         call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L2777]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:50,773 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:50,773 INFO  L82        PathProgramCache]: Analyzing trace with hash -681242457, now seen corresponding path program 1 times
[2020-11-25 11:57:50,774 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:50,785 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:57:50,809 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:57:50,809 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:57:50,810 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:57:50,810 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:57:50,810 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:57:50,810 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:57:50,810 INFO  L87              Difference]: Start difference. First operand 2818 states and 3299 transitions. cyclomatic complexity: 487 Second operand 4 states.
[2020-11-25 11:57:51,348 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:57:51,348 INFO  L93              Difference]: Finished difference Result 3409 states and 3902 transitions.
[2020-11-25 11:57:51,350 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:57:51,350 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3409 states and 3902 transitions.
[2020-11-25 11:57:51,364 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 11:57:51,376 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3409 states to 3305 states and 3778 transitions.
[2020-11-25 11:57:51,376 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 139
[2020-11-25 11:57:51,377 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 139
[2020-11-25 11:57:51,377 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3305 states and 3778 transitions.
[2020-11-25 11:57:51,380 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:57:51,380 INFO  L728         BuchiCegarLoop]: Abstraction has 3305 states and 3778 transitions.
[2020-11-25 11:57:51,383 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3305 states and 3778 transitions.
[2020-11-25 11:57:51,411 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3305 to 2973.
[2020-11-25 11:57:51,411 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2973 states.
[2020-11-25 11:57:51,415 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2973 states to 2973 states and 3376 transitions.
[2020-11-25 11:57:51,415 INFO  L751         BuchiCegarLoop]: Abstraction has 2973 states and 3376 transitions.
[2020-11-25 11:57:51,415 INFO  L631         BuchiCegarLoop]: Abstraction has 2973 states and 3376 transitions.
[2020-11-25 11:57:51,415 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 11:57:51,415 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2973 states and 3376 transitions.
[2020-11-25 11:57:51,420 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 11:57:51,420 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:51,420 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:51,422 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:51,422 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_CoinHemp0 := false;
[L2]                 call_transfer_CoinHemp0 := false;
[L2]     CALL        call main();
[L2767]              assume null == 0;
[L2768]  CALL        call this := FreshRefGenerator__success();
[L1410]              havoc newRef;
[L1411]              assume Alloc[newRef] == false;
[L1412]              Alloc[newRef] := true;
[L1413]              assume newRef != null;
[L2768]  RET         call this := FreshRefGenerator__success();
[L2769]              assume now >= 0;
[L2770]              assume DType[this] == CoinHemp;
[L2771]              assume msgvalue_MSG >= 0;
[L2772]              gas := gas - 53000;
[L2773]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L95]                havoc __exception;
[L96]                revert := false;
[L97]    COND FALSE  !(__exception)
[L121]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1512]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1462]              assume msgsender_MSG != null;
[L1463]              Balance[this] := 0;
[L1464]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1465]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              balances_CoinHemp[this] := zeroRefintArr();
[L1469]              sum_balances0[this] := 0;
[L1470]              name_CoinHemp[this] := -1920728545;
[L1471]              symbol_CoinHemp[this] := 294157574;
[L1472]              decimals_CoinHemp[this] := 18;
[L1473]              initSupply_CoinHemp[this] := 400000000;
[L1474]              totalSupply_CoinHemp[this] := 0;
[L1475]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1476]              sum_allowed1[this] := 0;
[L1479]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1480]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1481]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1483]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1484]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1912]  COND FALSE  !(a_s472 == 0)
[L1916]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1917]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1918]              c_s472 := c_s472;
[L1484]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1485]  COND FALSE  !(revert)
[L1488]              totalSupply_CoinHemp[this] := __var_1;
[L1489]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1490]              balances_CoinHemp[this][account_address_CoinHemp[this]] := totalSupply_CoinHemp[this];
[L1491]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1512]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  COND FALSE  !(revert)
[L121]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L122]               assume !revert && gas >= 0;
[L2773]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2774]              assume !revert && gas >= 0;
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND FALSE  !(choice == 10)
[L2700]  COND FALSE  !(choice == 9)
[L2706]  COND TRUE   choice == 8
[L2707]              gas := gas - 21000;
[L2708]  COND TRUE   gas >= 0
[L2709]              assume _value_s131 >= 0 && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2710]              assume msgvalue_MSG == 0;
[L2711]  CALL        call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s131 && _value_s131 > balances_CoinHemp[this][msgsender_MSG]) && _value_s131 >= 0) && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s131] >= 0) && balances_CoinHemp[this][_to_s131] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][msgsender_MSG] >= 0) && balances_CoinHemp[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_CoinHemp0 := true;
[L2]                 call_transfer_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L235]   CALL        call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L1567]              __var_5 := null;
[L1568]  COND FALSE  !(!(_to_s131 != null))
[L1572]  COND FALSE  !(!(_value_s131 <= balances_CoinHemp[this][msgsender_MSG]))
[L1576]  CALL        call __var_6 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][msgsender_MSG], _value_s131);
[L1942]              assert b_s506 <= a_s506;
[L1943]              __ret_0_ := (a_s506 - b_s506) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1576]  RET         call __var_6 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][msgsender_MSG], _value_s131);
[L1577]  COND FALSE  !(revert)
[L1580]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][msgsender_MSG];
[L1581]              balances_CoinHemp[this][msgsender_MSG] := __var_6;
[L1582]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][msgsender_MSG];
[L1583]  CALL        call __var_7 := add~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_to_s131], _value_s131);
[L1956]              c_s530 := (a_s530 + b_s530) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1957]              assert c_s530 >= a_s530;
[L1958]              c_s530 := c_s530;
[L1583]  RET         call __var_7 := add~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_to_s131], _value_s131);
[L1584]  COND FALSE  !(revert)
[L1587]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][_to_s131];
[L1588]              balances_CoinHemp[this][_to_s131] := __var_7;
[L1589]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][_to_s131];
[L1590]              assert { :EventEmitted "Transfer_CoinHemp" } true;
[L1591]              __ret_0_ := true;
[L235]   RET         call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L236]               assume !revert && gas >= 0;
[L2711]  RET         call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L2777]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND FALSE  !(choice == 10)
[L2700]  COND FALSE  !(choice == 9)
[L2706]  COND TRUE   choice == 8
[L2707]              gas := gas - 21000;
[L2708]  COND TRUE   gas >= 0
[L2709]              assume _value_s131 >= 0 && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2710]              assume msgvalue_MSG == 0;
[L2711]  CALL        call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s131 && _value_s131 > balances_CoinHemp[this][msgsender_MSG]) && _value_s131 >= 0) && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s131] >= 0) && balances_CoinHemp[this][_to_s131] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][msgsender_MSG] >= 0) && balances_CoinHemp[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_CoinHemp0 := true;
[L2]                 call_transfer_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L235]   CALL        call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L1567]              __var_5 := null;
[L1568]  COND FALSE  !(!(_to_s131 != null))
[L1572]  COND FALSE  !(!(_value_s131 <= balances_CoinHemp[this][msgsender_MSG]))
[L1576]  CALL        call __var_6 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][msgsender_MSG], _value_s131);
[L1942]              assert b_s506 <= a_s506;
[L1943]              __ret_0_ := (a_s506 - b_s506) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1576]  RET         call __var_6 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][msgsender_MSG], _value_s131);
[L1577]  COND FALSE  !(revert)
[L1580]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][msgsender_MSG];
[L1581]              balances_CoinHemp[this][msgsender_MSG] := __var_6;
[L1582]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][msgsender_MSG];
[L1583]  CALL        call __var_7 := add~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_to_s131], _value_s131);
[L1956]              c_s530 := (a_s530 + b_s530) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1957]              assert c_s530 >= a_s530;
[L1958]              c_s530 := c_s530;
[L1583]  RET         call __var_7 := add~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_to_s131], _value_s131);
[L1584]  COND FALSE  !(revert)
[L1587]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][_to_s131];
[L1588]              balances_CoinHemp[this][_to_s131] := __var_7;
[L1589]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][_to_s131];
[L1590]              assert { :EventEmitted "Transfer_CoinHemp" } true;
[L1591]              __ret_0_ := true;
[L235]   RET         call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L236]               assume !revert && gas >= 0;
[L2711]  RET         call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L2777]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:51,425 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:51,425 INFO  L82        PathProgramCache]: Analyzing trace with hash -1881744553, now seen corresponding path program 1 times
[2020-11-25 11:57:51,426 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:51,438 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:57:51,501 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:57:51,501 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:57:51,501 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 11:57:51,501 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:57:51,501 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 11:57:51,501 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-25 11:57:51,502 INFO  L87              Difference]: Start difference. First operand 2973 states and 3376 transitions. cyclomatic complexity: 409 Second operand 7 states.
[2020-11-25 11:57:52,048 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:57:52,048 INFO  L93              Difference]: Finished difference Result 1652 states and 1850 transitions.
[2020-11-25 11:57:52,048 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 11:57:52,048 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1652 states and 1850 transitions.
[2020-11-25 11:57:52,053 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 11:57:52,053 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1652 states to 0 states and 0 transitions.
[2020-11-25 11:57:52,053 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 11:57:52,053 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 11:57:52,053 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 11:57:52,053 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:57:52,053 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:57:52,053 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:57:52,053 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:57:52,053 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 11:57:52,053 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 11:57:52,053 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 11:57:52,053 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 11:57:52,056 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:57:52 BasicIcfg
[2020-11-25 11:57:52,056 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 11:57:52,057 INFO  L168              Benchmark]: Toolchain (without parser) took 4126.05 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 274.2 MB). Free memory was 940.6 MB in the beginning and 1.0 GB in the end (delta: -103.4 MB). Peak memory consumption was 170.8 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:52,057 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.23 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:57:52,058 INFO  L168              Benchmark]: Boogie Preprocessor took 75.54 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:52,058 INFO  L168              Benchmark]: UtopiaSpecLang took 48.84 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:52,058 INFO  L168              Benchmark]: Boogie Printer took 11.14 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:52,058 INFO  L168              Benchmark]: RCFGBuilder took 627.55 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 854.7 MB in the end (delta: 69.8 MB). Peak memory consumption was 69.8 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:52,059 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.31 ms. Allocated memory is still 1.0 GB. Free memory was 854.7 MB in the beginning and 845.7 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:52,059 INFO  L168              Benchmark]: BÃ¼chi Program Product took 853.02 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 69.2 MB). Free memory was 845.7 MB in the beginning and 827.2 MB in the end (delta: 18.5 MB). Peak memory consumption was 131.2 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:52,059 INFO  L168              Benchmark]: BlockEncodingV2 took 90.42 ms. Allocated memory is still 1.1 GB. Free memory was 827.2 MB in the beginning and 781.9 MB in the end (delta: 45.3 MB). Peak memory consumption was 45.3 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:52,060 INFO  L168              Benchmark]: BuchiAutomizer took 2378.53 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 205.0 MB). Free memory was 781.9 MB in the beginning and 1.0 GB in the end (delta: -262.1 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:57:52,062 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3032 locations, 5195 edges
  - StatisticsResult: Encoded RCFG
    2968 locations, 5056 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.23 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 75.54 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 48.84 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.14 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 627.55 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 854.7 MB in the end (delta: 69.8 MB). Peak memory consumption was 69.8 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.31 ms. Allocated memory is still 1.0 GB. Free memory was 854.7 MB in the beginning and 845.7 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 853.02 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 69.2 MB). Free memory was 845.7 MB in the beginning and 827.2 MB in the end (delta: 18.5 MB). Peak memory consumption was 131.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 90.42 ms. Allocated memory is still 1.1 GB. Free memory was 827.2 MB in the beginning and 781.9 MB in the end (delta: 45.3 MB). Peak memory consumption was 45.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2378.53 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 205.0 MB). Free memory was 781.9 MB in the beginning and 1.0 GB in the end (delta: -262.1 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1295 locations, 1653 edges
  - StatisticsResult: BuchiProgram size
    3032 locations, 5195 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 7 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.3s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.2s. Construction of modules took 1.1s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 332 StatesRemovedByMinimization, 1 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2973 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 11893 SDtfs, 8495 SDslu, 15005 SDs, 0 SdLazy, 6309 SolverSat, 1774 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.1s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_CoinHemp0) ==> ( <>(fail_transfer_CoinHemp0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
