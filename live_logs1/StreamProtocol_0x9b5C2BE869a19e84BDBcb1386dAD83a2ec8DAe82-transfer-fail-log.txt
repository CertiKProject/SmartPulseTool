This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 05:51:11,865 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 05:51:11,867 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 05:51:11,878 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 05:51:11,878 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 05:51:11,880 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 05:51:11,881 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 05:51:11,882 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 05:51:11,884 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 05:51:11,885 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 05:51:11,885 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 05:51:11,886 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 05:51:11,886 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 05:51:11,887 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 05:51:11,888 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 05:51:11,889 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 05:51:11,889 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 05:51:11,891 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 05:51:11,892 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 05:51:11,893 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 05:51:11,894 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 05:51:11,895 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 05:51:11,897 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 05:51:11,897 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 05:51:11,897 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 05:51:11,898 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 05:51:11,898 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 05:51:11,899 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 05:51:11,899 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 05:51:11,899 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 05:51:11,899 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 05:51:11,900 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 05:51:11,900 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 05:51:11,901 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 05:51:11,902 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 05:51:11,902 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 05:51:11,903 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 05:51:11,903 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 05:51:11,903 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 05:51:11,904 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 05:51:11,904 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 05:51:11,904 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 05:51:11,913 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 05:51:11,913 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 05:51:11,914 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 05:51:11,914 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 05:51:11,914 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 05:51:11,915 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 05:51:11,915 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 05:51:11,915 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 05:51:11,915 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 05:51:11,915 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 05:51:11,915 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 05:51:11,915 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 05:51:11,915 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 05:51:11,916 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 05:51:11,916 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 05:51:11,916 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 05:51:11,916 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 05:51:11,916 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 05:51:11,916 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 05:51:11,916 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 05:51:11,916 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 05:51:11,916 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 05:51:11,916 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 05:51:11,917 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 05:51:11,917 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 05:51:11,917 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 05:51:11,938 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 05:51:11,951 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 05:51:11,955 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 05:51:11,956 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 05:51:11,956 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 05:51:11,957 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl
[2020-11-25 05:51:11,957 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl'
[2020-11-25 05:51:12,035 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 05:51:12,036 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 05:51:12,036 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 05:51:12,036 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 05:51:12,036 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 05:51:12,053 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:12" (1/1) ...
[2020-11-25 05:51:12,055 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:12" (1/1) ...
[2020-11-25 05:51:12,085 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:12" (1/1) ...
[2020-11-25 05:51:12,085 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:12" (1/1) ...
[2020-11-25 05:51:12,104 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:12" (1/1) ...
[2020-11-25 05:51:12,113 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:12" (1/1) ...
[2020-11-25 05:51:12,119 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:12" (1/1) ...
[2020-11-25 05:51:12,129 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 05:51:12,129 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 05:51:12,129 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 05:51:12,131 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 05:51:12,135 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:12" (1/1) ...
[2020-11-25 05:51:12,153 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(StreamProtocol.transfer(to, value), msg.sender != to && (value > balances_StreamProtocol[this][msg.sender] || balances_StreamProtocol[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][to] >= 0 && balances_StreamProtocol[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][msg.sender] >= 0 &&  balances_StreamProtocol[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(StreamProtocol.transfer)))
[2020-11-25 05:51:12,158 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(StreamProtocol.transfer(to, value), msg.sender != to && (value > balances_StreamProtocol[this][msg.sender] || balances_StreamProtocol[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][to] >= 0 && balances_StreamProtocol[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][msg.sender] >= 0 &&  balances_StreamProtocol[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(StreamProtocol.transfer)))
[2020-11-25 05:51:12,166 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(StreamProtocol.transfer(to, value), msg.sender != to && (value > balances_StreamProtocol[this][msg.sender] || balances_StreamProtocol[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][to] >= 0 && balances_StreamProtocol[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][msg.sender] >= 0 &&  balances_StreamProtocol[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(StreamProtocol.transfer)))
[2020-11-25 05:51:12,172 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender!=to_s385 && ( tokens_s385>balances_StreamProtocol[this][msg.sender] || ( balances_StreamProtocol[this][to_s385] + tokens_s385 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && tokens_s385>=0 ) && tokens_s385<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_StreamProtocol[this][to_s385]>=0 ) && balances_StreamProtocol[this][to_s385]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_StreamProtocol[this][msg.sender]>=0 ) && balances_StreamProtocol[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>],IdentifierExpression[to_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[tokens_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],[IdentifierExpression[to_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],IdentifierExpression[tokens_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],[IdentifierExpression[to_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],[IdentifierExpression[to_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 05:51:12,177 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(StreamProtocol.transfer(to, value), msg.sender != to && (value > balances_StreamProtocol[this][msg.sender] || balances_StreamProtocol[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][to] >= 0 && balances_StreamProtocol[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][msg.sender] >= 0 &&  balances_StreamProtocol[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(StreamProtocol.transfer)))
[2020-11-25 05:51:12,177 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_StreamProtocol0) ==> ( <>AP(fail_transfer_StreamProtocol0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 05:51:12,185 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:51:12 PropertyContainer
[2020-11-25 05:51:12,186 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 05:51:12,186 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 05:51:12,186 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 05:51:12,186 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 05:51:12,187 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:12" (1/2) ...
[2020-11-25 05:51:12,187 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 05:51:12,187 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 05:51:12,200 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:51:12" (2/2) ...
[2020-11-25 05:51:12,200 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 05:51:12,201 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 05:51:12,201 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 05:51:12,201 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 05:51:12,201 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:12" (1/2) ...
[2020-11-25 05:51:12,254 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 05:51:12,254 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:51:12,254 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 05:51:12,254 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 05:51:12,254 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:51:12,254 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 05:51:12,254 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:51:12,255 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 05:51:12,255 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 05:51:12,255 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 05:51:12,255 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 05:51:12,255 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 05:51:12,255 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 05:51:12,255 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 05:51:12,255 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 05:51:12,255 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 05:51:12,255 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 05:51:12,256 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 05:51:12,256 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 05:51:12,256 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 05:51:12,256 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 05:51:12,256 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 05:51:12,256 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 05:51:12,256 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 05:51:12,256 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 05:51:12,256 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 05:51:12,256 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol_NoBaseCtor__success
[2020-11-25 05:51:12,256 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol
[2020-11-25 05:51:12,256 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol
[2020-11-25 05:51:12,257 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_StreamProtocol
[2020-11-25 05:51:12,257 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_StreamProtocol
[2020-11-25 05:51:12,257 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_StreamProtocol
[2020-11-25 05:51:12,257 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_StreamProtocol
[2020-11-25 05:51:12,257 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_StreamProtocol
[2020-11-25 05:51:12,257 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_StreamProtocol
[2020-11-25 05:51:12,257 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StreamProtocol
[2020-11-25 05:51:12,257 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StreamProtocol
[2020-11-25 05:51:12,257 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StreamProtocol
[2020-11-25 05:51:12,257 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StreamProtocol
[2020-11-25 05:51:12,257 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StreamProtocol
[2020-11-25 05:51:12,257 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StreamProtocol
[2020-11-25 05:51:12,257 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StreamProtocol
[2020-11-25 05:51:12,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StreamProtocol
[2020-11-25 05:51:12,258 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StreamProtocol
[2020-11-25 05:51:12,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StreamProtocol
[2020-11-25 05:51:12,258 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_StreamProtocol
[2020-11-25 05:51:12,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_StreamProtocol
[2020-11-25 05:51:12,258 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_StreamProtocol__success
[2020-11-25 05:51:12,258 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_StreamProtocol
[2020-11-25 05:51:12,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_StreamProtocol
[2020-11-25 05:51:12,258 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_StreamProtocol
[2020-11-25 05:51:12,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_StreamProtocol
[2020-11-25 05:51:12,258 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_StreamProtocol
[2020-11-25 05:51:12,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_StreamProtocol
[2020-11-25 05:51:12,258 INFO  L130     BoogieDeclarations]: Found specification of procedure name_StreamProtocol
[2020-11-25 05:51:12,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_StreamProtocol
[2020-11-25 05:51:12,259 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_StreamProtocol
[2020-11-25 05:51:12,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_StreamProtocol
[2020-11-25 05:51:12,259 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 05:51:12,259 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 05:51:12,259 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 05:51:12,259 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 05:51:12,259 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 05:51:12,259 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 05:51:12,259 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 05:51:12,259 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 05:51:12,259 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 05:51:12,259 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 05:51:12,260 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 05:51:12,260 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 05:51:12,260 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StreamProtocol
[2020-11-25 05:51:12,260 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 05:51:12,260 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 05:51:12,260 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:51:12,260 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 05:51:12,260 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 05:51:12,260 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:51:12,260 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 05:51:12,260 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:51:12,260 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 05:51:12,261 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 05:51:12,261 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 05:51:12,261 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 05:51:12,261 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 05:51:12,261 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 05:51:12,261 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 05:51:12,261 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 05:51:12,261 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 05:51:12,261 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 05:51:12,261 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 05:51:12,261 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 05:51:12,261 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol_NoBaseCtor__fail
[2020-11-25 05:51:12,262 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol__success
[2020-11-25 05:51:12,262 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol__fail
[2020-11-25 05:51:12,262 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_StreamProtocol__success
[2020-11-25 05:51:12,262 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_StreamProtocol__fail
[2020-11-25 05:51:12,262 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_StreamProtocol__success
[2020-11-25 05:51:12,262 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_StreamProtocol__fail
[2020-11-25 05:51:12,262 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_StreamProtocol__success
[2020-11-25 05:51:12,262 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_StreamProtocol__fail
[2020-11-25 05:51:12,262 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StreamProtocol__success
[2020-11-25 05:51:12,262 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StreamProtocol__fail
[2020-11-25 05:51:12,262 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StreamProtocol__success
[2020-11-25 05:51:12,262 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StreamProtocol__fail
[2020-11-25 05:51:12,262 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StreamProtocol__success
[2020-11-25 05:51:12,263 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StreamProtocol__fail
[2020-11-25 05:51:12,263 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StreamProtocol__success
[2020-11-25 05:51:12,263 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StreamProtocol__fail
[2020-11-25 05:51:12,263 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StreamProtocol__success
[2020-11-25 05:51:12,263 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StreamProtocol__fail
[2020-11-25 05:51:12,263 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_StreamProtocol__success
[2020-11-25 05:51:12,263 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_StreamProtocol__fail
[2020-11-25 05:51:12,263 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_StreamProtocol__fail
[2020-11-25 05:51:12,263 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_StreamProtocol__success
[2020-11-25 05:51:12,263 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_StreamProtocol__fail
[2020-11-25 05:51:12,263 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_StreamProtocol__success
[2020-11-25 05:51:12,263 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_StreamProtocol__fail
[2020-11-25 05:51:12,264 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_StreamProtocol__success
[2020-11-25 05:51:12,264 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_StreamProtocol__fail
[2020-11-25 05:51:12,264 INFO  L130     BoogieDeclarations]: Found specification of procedure name_StreamProtocol__success
[2020-11-25 05:51:12,264 INFO  L130     BoogieDeclarations]: Found specification of procedure name_StreamProtocol__fail
[2020-11-25 05:51:12,264 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_StreamProtocol__success
[2020-11-25 05:51:12,264 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_StreamProtocol__fail
[2020-11-25 05:51:12,264 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 05:51:12,264 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 05:51:12,264 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 05:51:12,264 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 05:51:12,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 05:51:12,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 05:51:12,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:51:12,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:51:12,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 05:51:12,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 05:51:12,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:51:12,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:51:12,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 05:51:12,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 05:51:12,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:51:12,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:51:12,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 05:51:12,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 05:51:12,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 05:51:12,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 05:51:12,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 05:51:12,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 05:51:12,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 05:51:12,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 05:51:12,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 05:51:12,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 05:51:12,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 05:51:12,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 05:51:12,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 05:51:12,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 05:51:12,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 05:51:12,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 05:51:12,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol_NoBaseCtor__fail
[2020-11-25 05:51:12,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol_NoBaseCtor__success
[2020-11-25 05:51:12,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol__fail
[2020-11-25 05:51:12,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol__success
[2020-11-25 05:51:12,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_StreamProtocol__fail
[2020-11-25 05:51:12,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_StreamProtocol__success
[2020-11-25 05:51:12,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_StreamProtocol__fail
[2020-11-25 05:51:12,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_StreamProtocol__success
[2020-11-25 05:51:12,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_StreamProtocol__fail
[2020-11-25 05:51:12,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_StreamProtocol__success
[2020-11-25 05:51:12,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StreamProtocol__fail
[2020-11-25 05:51:12,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StreamProtocol__success
[2020-11-25 05:51:12,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StreamProtocol__fail
[2020-11-25 05:51:12,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StreamProtocol__success
[2020-11-25 05:51:12,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StreamProtocol__fail
[2020-11-25 05:51:12,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StreamProtocol__success
[2020-11-25 05:51:12,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StreamProtocol__fail
[2020-11-25 05:51:12,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StreamProtocol__success
[2020-11-25 05:51:12,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StreamProtocol__fail
[2020-11-25 05:51:12,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StreamProtocol__success
[2020-11-25 05:51:12,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_StreamProtocol__fail
[2020-11-25 05:51:12,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_StreamProtocol__success
[2020-11-25 05:51:12,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_StreamProtocol__fail
[2020-11-25 05:51:12,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_StreamProtocol__success
[2020-11-25 05:51:12,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_StreamProtocol__fail
[2020-11-25 05:51:12,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_StreamProtocol__success
[2020-11-25 05:51:12,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_StreamProtocol__fail
[2020-11-25 05:51:12,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_StreamProtocol__success
[2020-11-25 05:51:12,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_StreamProtocol__fail
[2020-11-25 05:51:12,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_StreamProtocol__success
[2020-11-25 05:51:12,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_StreamProtocol__fail
[2020-11-25 05:51:12,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_StreamProtocol__success
[2020-11-25 05:51:12,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_StreamProtocol__fail
[2020-11-25 05:51:12,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_StreamProtocol__success
[2020-11-25 05:51:12,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 05:51:12,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 05:51:12,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 05:51:12,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 05:51:12,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 05:51:12,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 05:51:12,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 05:51:12,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 05:51:12,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 05:51:12,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 05:51:12,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 05:51:12,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 05:51:12,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 05:51:12,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 05:51:12,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 05:51:12,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 05:51:12,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StreamProtocol
[2020-11-25 05:51:12,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 05:51:12,272 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 05:51:12,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 05:51:12,847 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:51:12,847 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:51:12,942 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 05:51:12,943 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 05:51:12,944 INFO  L202        PluginConnector]: Adding new model StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:51:12 BoogieIcfgContainer
[2020-11-25 05:51:12,945 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:51:12" (2/2) ...
[2020-11-25 05:51:12,945 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 05:51:12,945 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@330b9122 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:51:12, skipping insertion in model container
[2020-11-25 05:51:12,945 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 05:51:12,945 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 05:51:12,945 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 05:51:12,947 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 05:51:12,947 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:12" (1/3) ...
[2020-11-25 05:51:12,947 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5f47a821 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:51:12, skipping insertion in model container
[2020-11-25 05:51:12,948 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:51:12" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 05:51:12,986 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:51:12 NWAContainer
[2020-11-25 05:51:12,986 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 05:51:12,986 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 05:51:12,986 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 05:51:12,987 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 05:51:12,988 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:51:12" (3/4) ...
[2020-11-25 05:51:12,989 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@749c27e8 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:51:12, skipping insertion in model container
[2020-11-25 05:51:12,989 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:51:12" (4/4) ...
[2020-11-25 05:51:12,992 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 05:51:12,996 INFO  L110   BuchiProductObserver]: Initial RCFG 1318 locations, 1643 edges
[2020-11-25 05:51:12,996 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 05:51:13,006 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 05:51:14,290 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 05:51:14,294 INFO  L110   BuchiProductObserver]: BuchiProgram size 3110 locations, 5294 edges
[2020-11-25 05:51:14,294 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:51:14 BoogieIcfgContainer
[2020-11-25 05:51:14,294 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 05:51:14,294 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 05:51:14,294 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 05:51:14,296 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 05:51:14,296 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:51:14" (1/1) ...
[2020-11-25 05:51:14,358 INFO  L313           BlockEncoder]: Initial Icfg 3110 locations, 5294 edges
[2020-11-25 05:51:14,358 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 05:51:14,358 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 05:51:14,358 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 05:51:14,359 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 05:51:14,370 INFO  L70    emoveInfeasibleEdges]: Removed 66 edges and 15 locations because of local infeasibility
[2020-11-25 05:51:14,384 INFO  L70        RemoveSinkStates]: Removed 138 edges and 70 locations by removing sink states
[2020-11-25 05:51:14,395 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 05:51:14,399 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 05:51:14,402 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 05:51:14,403 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 05:51:14,407 INFO  L313           BlockEncoder]: Encoded RCFG 3003 locations, 5058 edges
[2020-11-25 05:51:14,408 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:51:14 BasicIcfg
[2020-11-25 05:51:14,408 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 05:51:14,408 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 05:51:14,408 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 05:51:14,411 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 05:51:14,411 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:51:14,411 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:12" (1/6) ...
[2020-11-25 05:51:14,413 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4fc0029a and model type StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:51:14, skipping insertion in model container
[2020-11-25 05:51:14,413 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:51:14,413 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:51:12" (2/6) ...
[2020-11-25 05:51:14,413 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4fc0029a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:51:14, skipping insertion in model container
[2020-11-25 05:51:14,413 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:51:14,413 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:51:12" (3/6) ...
[2020-11-25 05:51:14,414 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4fc0029a and model type StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:51:14, skipping insertion in model container
[2020-11-25 05:51:14,414 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:51:14,414 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:51:12" (4/6) ...
[2020-11-25 05:51:14,414 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4fc0029a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:51:14, skipping insertion in model container
[2020-11-25 05:51:14,414 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:51:14,414 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:51:14" (5/6) ...
[2020-11-25 05:51:14,415 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4fc0029a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:51:14, skipping insertion in model container
[2020-11-25 05:51:14,415 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:51:14,415 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:51:14" (6/6) ...
[2020-11-25 05:51:14,416 INFO  L404   chiAutomizerObserver]: Analyzing ICFG StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-fail.bpl_BEv2
[2020-11-25 05:51:14,456 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 05:51:14,457 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 05:51:14,457 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 05:51:14,457 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 05:51:14,457 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 05:51:14,457 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 05:51:14,457 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 05:51:14,457 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 05:51:14,457 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 05:51:14,490 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3003 states.
[2020-11-25 05:51:14,549 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:51:14,549 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:51:14,550 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:51:14,560 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:51:14,561 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:51:14,561 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 05:51:14,561 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3003 states.
[2020-11-25 05:51:14,580 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:51:14,580 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:51:14,580 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:51:14,582 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:51:14,582 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_StreamProtocol0 := false;
[L2]                 call_transfer_StreamProtocol0 := false;
[L2]     CALL        call main();
[L3606]              assume null == 0;
[L3607]  CALL        call this := FreshRefGenerator__success();
[L1625]              havoc newRef;
[L1626]              assume Alloc[newRef] == false;
[L1627]              Alloc[newRef] := true;
[L1628]              assume newRef != null;
[L3607]  RET         call this := FreshRefGenerator__success();
[L3608]              assume now >= 0;
[L3609]              assume DType[this] == StreamProtocol;
[L3610]              assume msgvalue_MSG == 0;
[L3611]              gas := gas - 53000;
[L3612]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L394]               havoc __exception;
[L395]               revert := false;
[L396]   COND FALSE  !(__exception)
[L419]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1922]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1761]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1746]              assume msgsender_MSG != null;
[L1747]              Balance[this] := 0;
[L1761]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  COND FALSE  !(revert)
[L1922]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  COND TRUE   revert
[L419]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L420]               assume !revert && gas >= 0;
[L3612]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3613]              assume !revert && gas >= 0;

Loop:
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND TRUE   choice == 15
[L3503]              gas := gas - 21000;
[L3504]  COND FALSE  !(gas >= 0)
[L3616]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:51:14,599 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:51:14,600 INFO  L82        PathProgramCache]: Analyzing trace with hash 1649356788, now seen corresponding path program 1 times
[2020-11-25 05:51:14,604 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:51:14,624 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:51:14,662 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:51:14,664 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:51:14,665 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:51:14,668 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:51:14,803 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:51:14,804 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:51:14,807 INFO  L87              Difference]: Start difference. First operand 3003 states. Second operand 3 states.
[2020-11-25 05:51:14,981 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:51:14,981 INFO  L93              Difference]: Finished difference Result 2014 states and 2244 transitions.
[2020-11-25 05:51:14,981 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:51:14,983 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2014 states and 2244 transitions.
[2020-11-25 05:51:14,995 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:51:15,014 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2014 states to 2014 states and 2244 transitions.
[2020-11-25 05:51:15,015 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 05:51:15,017 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 597
[2020-11-25 05:51:15,018 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2014 states and 2244 transitions.
[2020-11-25 05:51:15,024 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:51:15,025 INFO  L728         BuchiCegarLoop]: Abstraction has 2014 states and 2244 transitions.
[2020-11-25 05:51:15,042 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2014 states and 2244 transitions.
[2020-11-25 05:51:15,082 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2014 to 2014.
[2020-11-25 05:51:15,083 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2014 states.
[2020-11-25 05:51:15,089 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2014 states to 2014 states and 2244 transitions.
[2020-11-25 05:51:15,090 INFO  L751         BuchiCegarLoop]: Abstraction has 2014 states and 2244 transitions.
[2020-11-25 05:51:15,090 INFO  L631         BuchiCegarLoop]: Abstraction has 2014 states and 2244 transitions.
[2020-11-25 05:51:15,090 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 05:51:15,091 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2014 states and 2244 transitions.
[2020-11-25 05:51:15,098 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:51:15,098 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:51:15,098 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:51:15,100 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:51:15,100 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_StreamProtocol0 := false;
[L2]                 call_transfer_StreamProtocol0 := false;
[L2]     CALL        call main();
[L3606]              assume null == 0;
[L3607]  CALL        call this := FreshRefGenerator__success();
[L1625]              havoc newRef;
[L1626]              assume Alloc[newRef] == false;
[L1627]              Alloc[newRef] := true;
[L1628]              assume newRef != null;
[L3607]  RET         call this := FreshRefGenerator__success();
[L3608]              assume now >= 0;
[L3609]              assume DType[this] == StreamProtocol;
[L3610]              assume msgvalue_MSG == 0;
[L3611]              gas := gas - 53000;
[L3612]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L394]               havoc __exception;
[L395]               revert := false;
[L396]   COND FALSE  !(__exception)
[L419]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1922]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1761]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1746]              assume msgsender_MSG != null;
[L1747]              Balance[this] := 0;
[L1761]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  COND FALSE  !(revert)
[L1922]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  COND TRUE   revert
[L419]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L420]               assume !revert && gas >= 0;
[L3612]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3613]              assume !revert && gas >= 0;
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND FALSE  !(choice == 13)
[L3520]  COND TRUE   choice == 12
[L3521]              gas := gas - 21000;
[L3522]  COND TRUE   gas >= 0
[L3523]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3524]              assume msgvalue_MSG == 0;
[L3525]  CALL        call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s385 && (tokens_s385 > balances_StreamProtocol[this][msgsender_MSG] || balances_StreamProtocol[this][to_s385] + tokens_s385 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s385] >= 0) && balances_StreamProtocol[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][msgsender_MSG] >= 0) && balances_StreamProtocol[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_StreamProtocol0 := true;
[L2]                 call_transfer_StreamProtocol0 := false;
[L2]                 revert := revert_hold;
[L668]               havoc __exception;
[L669]               revert := false;
[L670]   COND FALSE  !(__exception)
[L693]   CALL        call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2063]  COND TRUE   !(_stopTrade_StreamProtocol[this] != true)
[L2064]              revert := true;
[L693]   RET         call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L694]               assume !revert && gas >= 0;
[L3525]  RET         call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3616]  RET         call CorralChoice_StreamProtocol(this);

Loop:
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND FALSE  !(choice == 13)
[L3520]  COND TRUE   choice == 12
[L3521]              gas := gas - 21000;
[L3522]  COND TRUE   gas >= 0
[L3523]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3524]              assume msgvalue_MSG == 0;
[L3525]  CALL        call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s385 && (tokens_s385 > balances_StreamProtocol[this][msgsender_MSG] || balances_StreamProtocol[this][to_s385] + tokens_s385 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s385] >= 0) && balances_StreamProtocol[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][msgsender_MSG] >= 0) && balances_StreamProtocol[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_StreamProtocol0 := true;
[L2]                 call_transfer_StreamProtocol0 := false;
[L2]                 revert := revert_hold;
[L668]               havoc __exception;
[L669]               revert := false;
[L670]   COND FALSE  !(__exception)
[L693]   CALL        call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2063]  COND TRUE   !(_stopTrade_StreamProtocol[this] != true)
[L2064]              revert := true;
[L693]   RET         call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L694]               assume !revert && gas >= 0;
[L3525]  RET         call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3616]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:51:15,104 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:51:15,104 INFO  L82        PathProgramCache]: Analyzing trace with hash -1731838852, now seen corresponding path program 1 times
[2020-11-25 05:51:15,105 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:51:15,116 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:51:15,137 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:51:15,137 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:51:15,137 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:51:15,138 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:51:15,139 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:51:15,139 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:51:15,139 INFO  L87              Difference]: Start difference. First operand 2014 states and 2244 transitions. cyclomatic complexity: 232 Second operand 4 states.
[2020-11-25 05:51:15,487 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:51:15,487 INFO  L93              Difference]: Finished difference Result 2685 states and 2994 transitions.
[2020-11-25 05:51:15,487 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:51:15,488 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2685 states and 2994 transitions.
[2020-11-25 05:51:15,498 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:51:15,508 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2685 states to 2517 states and 2800 transitions.
[2020-11-25 05:51:15,508 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 714
[2020-11-25 05:51:15,509 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 719
[2020-11-25 05:51:15,509 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2517 states and 2800 transitions.
[2020-11-25 05:51:15,512 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:51:15,512 INFO  L728         BuchiCegarLoop]: Abstraction has 2517 states and 2800 transitions.
[2020-11-25 05:51:15,514 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2517 states and 2800 transitions.
[2020-11-25 05:51:15,544 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2517 to 2189.
[2020-11-25 05:51:15,544 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2189 states.
[2020-11-25 05:51:15,549 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2189 states to 2189 states and 2391 transitions.
[2020-11-25 05:51:15,549 INFO  L751         BuchiCegarLoop]: Abstraction has 2189 states and 2391 transitions.
[2020-11-25 05:51:15,549 INFO  L631         BuchiCegarLoop]: Abstraction has 2189 states and 2391 transitions.
[2020-11-25 05:51:15,549 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 05:51:15,549 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2189 states and 2391 transitions.
[2020-11-25 05:51:15,555 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:51:15,555 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:51:15,555 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:51:15,557 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:51:15,557 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_StreamProtocol0 := false;
[L2]                 call_transfer_StreamProtocol0 := false;
[L2]     CALL        call main();
[L3606]              assume null == 0;
[L3607]  CALL        call this := FreshRefGenerator__success();
[L1625]              havoc newRef;
[L1626]              assume Alloc[newRef] == false;
[L1627]              Alloc[newRef] := true;
[L1628]              assume newRef != null;
[L3607]  RET         call this := FreshRefGenerator__success();
[L3608]              assume now >= 0;
[L3609]              assume DType[this] == StreamProtocol;
[L3610]              assume msgvalue_MSG == 0;
[L3611]              gas := gas - 53000;
[L3612]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L394]               havoc __exception;
[L395]               revert := false;
[L396]   COND FALSE  !(__exception)
[L419]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1922]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1761]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1746]              assume msgsender_MSG != null;
[L1747]              Balance[this] := 0;
[L1761]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  COND FALSE  !(revert)
[L1922]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  COND FALSE  !(revert)
[L1926]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1829]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1812]              assume msgsender_MSG != null;
[L1813]              Balance[this] := 0;
[L1814]              owner_Owned[this] := null;
[L1816]              owner_Owned[this] := msgsender_MSG;
[L1829]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1830]  COND FALSE  !(revert)
[L1926]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1927]  COND FALSE  !(revert)
[L1930]  CALL        call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              assume msgsender_MSG != null;
[L1879]              Balance[this] := 0;
[L1880]              symbol_StreamProtocol[this] := 1491346165;
[L1881]              name_StreamProtocol[this] := 1491346165;
[L1882]              decimals_StreamProtocol[this] := 0;
[L1883]              _totalSupply_StreamProtocol[this] := 0;
[L1884]              _stopTrade_StreamProtocol[this] := false;
[L1885]              balances_StreamProtocol[this] := zeroRefintArr();
[L1886]              sum_balances0[this] := 0;
[L1887]              allowed_StreamProtocol[this] := zeroRefRefintArr();
[L1888]              sum_allowed1[this] := 0;
[L1890]              symbol_StreamProtocol[this] := 1357906882;
[L1891]              name_StreamProtocol[this] := -1605590943;
[L1892]              decimals_StreamProtocol[this] := 18;
[L1893]              __var_1 := decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1894]              _totalSupply_StreamProtocol[this] := 2000000000 * (nonlinearPow(10, decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1895]              _stopTrade_StreamProtocol[this] := false;
[L1896]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][owner_Owned[this]];
[L1897]              balances_StreamProtocol[this][owner_Owned[this]] := _totalSupply_StreamProtocol[this];
[L1898]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][owner_Owned[this]];
[L1899]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L1930]  RET         call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1931]  COND FALSE  !(revert)
[L419]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L420]               assume !revert && gas >= 0;
[L3612]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3613]              assume !revert && gas >= 0;
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND FALSE  !(choice == 13)
[L3520]  COND TRUE   choice == 12
[L3521]              gas := gas - 21000;
[L3522]  COND TRUE   gas >= 0
[L3523]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3524]              assume msgvalue_MSG == 0;
[L3525]  CALL        call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s385 && (tokens_s385 > balances_StreamProtocol[this][msgsender_MSG] || balances_StreamProtocol[this][to_s385] + tokens_s385 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s385] >= 0) && balances_StreamProtocol[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][msgsender_MSG] >= 0) && balances_StreamProtocol[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_StreamProtocol0 := true;
[L2]                 call_transfer_StreamProtocol0 := false;
[L2]                 revert := revert_hold;
[L668]               havoc __exception;
[L669]               revert := false;
[L670]   COND FALSE  !(__exception)
[L693]   CALL        call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2063]  COND FALSE  !(!(_stopTrade_StreamProtocol[this] != true))
[L2067]              __var_4 := null;
[L2068]  COND FALSE  !(!(to_s385 > null))
[L2072]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][msgsender_MSG], tokens_s385);
[L1692]  COND FALSE  !(!(b_s45 <= a_s45))
[L1696]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2072]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][msgsender_MSG], tokens_s385);
[L2073]  COND FALSE  !(revert)
[L2076]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][msgsender_MSG];
[L2077]              balances_StreamProtocol[this][msgsender_MSG] := __var_5;
[L2078]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][msgsender_MSG];
[L2079]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][to_s385], tokens_s385);
[L1674]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1675]  COND FALSE  !(!(c_s23 >= a_s23))
[L2079]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][to_s385], tokens_s385);
[L2080]  COND FALSE  !(revert)
[L2083]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][to_s385];
[L2084]              balances_StreamProtocol[this][to_s385] := __var_6;
[L2085]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][to_s385];
[L2086]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L2087]              success_s385 := true;
[L693]   RET         call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L694]               assume !revert && gas >= 0;
[L3525]  RET         call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3616]  RET         call CorralChoice_StreamProtocol(this);

Loop:
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND FALSE  !(choice == 13)
[L3520]  COND TRUE   choice == 12
[L3521]              gas := gas - 21000;
[L3522]  COND TRUE   gas >= 0
[L3523]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3524]              assume msgvalue_MSG == 0;
[L3525]  CALL        call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s385 && (tokens_s385 > balances_StreamProtocol[this][msgsender_MSG] || balances_StreamProtocol[this][to_s385] + tokens_s385 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s385] >= 0) && balances_StreamProtocol[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][msgsender_MSG] >= 0) && balances_StreamProtocol[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_StreamProtocol0 := true;
[L2]                 call_transfer_StreamProtocol0 := false;
[L2]                 revert := revert_hold;
[L668]               havoc __exception;
[L669]               revert := false;
[L670]   COND FALSE  !(__exception)
[L693]   CALL        call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2063]  COND FALSE  !(!(_stopTrade_StreamProtocol[this] != true))
[L2067]              __var_4 := null;
[L2068]  COND FALSE  !(!(to_s385 > null))
[L2072]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][msgsender_MSG], tokens_s385);
[L1692]  COND FALSE  !(!(b_s45 <= a_s45))
[L1696]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2072]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][msgsender_MSG], tokens_s385);
[L2073]  COND FALSE  !(revert)
[L2076]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][msgsender_MSG];
[L2077]              balances_StreamProtocol[this][msgsender_MSG] := __var_5;
[L2078]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][msgsender_MSG];
[L2079]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][to_s385], tokens_s385);
[L1674]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1675]  COND FALSE  !(!(c_s23 >= a_s23))
[L2079]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][to_s385], tokens_s385);
[L2080]  COND FALSE  !(revert)
[L2083]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][to_s385];
[L2084]              balances_StreamProtocol[this][to_s385] := __var_6;
[L2085]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][to_s385];
[L2086]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L2087]              success_s385 := true;
[L693]   RET         call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L694]               assume !revert && gas >= 0;
[L3525]  RET         call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3616]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:51:15,561 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:51:15,561 INFO  L82        PathProgramCache]: Analyzing trace with hash 1380666697, now seen corresponding path program 1 times
[2020-11-25 05:51:15,562 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:51:15,583 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:51:15,792 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:51:15,792 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:51:15,792 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-25 05:51:15,793 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:51:15,793 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-25 05:51:15,793 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=32, Invalid=178, Unknown=0, NotChecked=0, Total=210
[2020-11-25 05:51:15,793 INFO  L87              Difference]: Start difference. First operand 2189 states and 2391 transitions. cyclomatic complexity: 204 Second operand 15 states.
[2020-11-25 05:51:17,543 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:51:17,544 INFO  L93              Difference]: Finished difference Result 2282 states and 2497 transitions.
[2020-11-25 05:51:17,544 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-25 05:51:17,544 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2282 states and 2497 transitions.
[2020-11-25 05:51:17,550 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:51:17,558 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2282 states to 2282 states and 2497 transitions.
[2020-11-25 05:51:17,558 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 692
[2020-11-25 05:51:17,558 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 692
[2020-11-25 05:51:17,559 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2282 states and 2497 transitions.
[2020-11-25 05:51:17,561 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:51:17,561 INFO  L728         BuchiCegarLoop]: Abstraction has 2282 states and 2497 transitions.
[2020-11-25 05:51:17,564 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2282 states and 2497 transitions.
[2020-11-25 05:51:17,579 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2282 to 2095.
[2020-11-25 05:51:17,579 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2095 states.
[2020-11-25 05:51:17,581 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2095 states to 2095 states and 2270 transitions.
[2020-11-25 05:51:17,581 INFO  L751         BuchiCegarLoop]: Abstraction has 2095 states and 2270 transitions.
[2020-11-25 05:51:17,581 INFO  L631         BuchiCegarLoop]: Abstraction has 2095 states and 2270 transitions.
[2020-11-25 05:51:17,581 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 05:51:17,581 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2095 states and 2270 transitions.
[2020-11-25 05:51:17,585 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:51:17,585 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:51:17,585 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:51:17,586 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:51:17,586 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_StreamProtocol0 := false;
[L2]                 call_transfer_StreamProtocol0 := false;
[L2]     CALL        call main();
[L3606]              assume null == 0;
[L3607]  CALL        call this := FreshRefGenerator__success();
[L1625]              havoc newRef;
[L1626]              assume Alloc[newRef] == false;
[L1627]              Alloc[newRef] := true;
[L1628]              assume newRef != null;
[L3607]  RET         call this := FreshRefGenerator__success();
[L3608]              assume now >= 0;
[L3609]              assume DType[this] == StreamProtocol;
[L3610]              assume msgvalue_MSG == 0;
[L3611]              gas := gas - 53000;
[L3612]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L394]               havoc __exception;
[L395]               revert := false;
[L396]   COND TRUE   __exception
[L397]               __tmp__Balance := Balance;
[L398]               __tmp__DType := DType;
[L399]               __tmp__Alloc := Alloc;
[L400]               __tmp__balance_ADDR := balance_ADDR;
[L401]               __tmp__M_Ref_int := M_Ref_int;
[L402]               __tmp__sum_balances0 := sum_balances0;
[L403]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L404]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L405]               __tmp__sum_allowed1 := sum_allowed1;
[L406]               __tmp__Length := Length;
[L407]               __tmp__now := now;
[L408]               __tmp__owner_Owned := owner_Owned;
[L409]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L410]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L411]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L412]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L413]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L414]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L415]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L416]   CALL        call StreamProtocol_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call ERC20Interface_ERC20Interface__fail(this, msgsender_MSG, msgvalue_MSG);
[L1753]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1738]              assume msgsender_MSG != null;
[L1739]              __tmp__Balance[this] := 0;
[L1753]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1754]  COND FALSE  !(revert)
[L1905]  RET         call ERC20Interface_ERC20Interface__fail(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L1909]  CALL        call Owned_Owned__fail(this, msgsender_MSG, msgvalue_MSG);
[L1821]  CALL        call Owned_Owned_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1802]              assume msgsender_MSG != null;
[L1803]              __tmp__Balance[this] := 0;
[L1804]              __tmp__owner_Owned[this] := null;
[L1806]              __tmp__owner_Owned[this] := msgsender_MSG;
[L1821]  RET         call Owned_Owned_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1822]  COND FALSE  !(revert)
[L1909]  RET         call Owned_Owned__fail(this, msgsender_MSG, msgvalue_MSG);
[L1910]  COND FALSE  !(revert)
[L1913]  CALL        call StreamProtocol_StreamProtocol_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1851]              assume msgsender_MSG != null;
[L1852]              __tmp__Balance[this] := 0;
[L1853]              __tmp__symbol_StreamProtocol[this] := 1491346165;
[L1854]              __tmp__name_StreamProtocol[this] := 1491346165;
[L1855]              __tmp__decimals_StreamProtocol[this] := 0;
[L1856]              __tmp___totalSupply_StreamProtocol[this] := 0;
[L1857]              __tmp___stopTrade_StreamProtocol[this] := false;
[L1858]              __tmp__balances_StreamProtocol[this] := zeroRefintArr();
[L1859]              __tmp__sum_balances0[this] := 0;
[L1860]              __tmp__allowed_StreamProtocol[this] := zeroRefRefintArr();
[L1861]              __tmp__sum_allowed1[this] := 0;
[L1863]              __tmp__symbol_StreamProtocol[this] := 1357906882;
[L1864]              __tmp__name_StreamProtocol[this] := -1605590943;
[L1865]              __tmp__decimals_StreamProtocol[this] := 18;
[L1866]              __var_1 := __tmp__decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1867]              __tmp___totalSupply_StreamProtocol[this] := 2000000000 * (nonlinearPow(10, __tmp__decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1868]              __tmp___stopTrade_StreamProtocol[this] := false;
[L1869]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_StreamProtocol[this][__tmp__owner_Owned[this]];
[L1870]              __tmp__balances_StreamProtocol[this][__tmp__owner_Owned[this]] := __tmp___totalSupply_StreamProtocol[this];
[L1871]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_StreamProtocol[this][__tmp__owner_Owned[this]];
[L1913]  RET         call StreamProtocol_StreamProtocol_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1914]  COND FALSE  !(revert)
[L416]   RET         call StreamProtocol_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG);
[L417]               assume revert || gas < 0;
[L3612]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3613]              assume !revert && gas >= 0;
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND FALSE  !(choice == 13)
[L3520]  COND TRUE   choice == 12
[L3521]              gas := gas - 21000;
[L3522]  COND TRUE   gas >= 0
[L3523]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3524]              assume msgvalue_MSG == 0;
[L3525]  CALL        call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s385 && (tokens_s385 > balances_StreamProtocol[this][msgsender_MSG] || balances_StreamProtocol[this][to_s385] + tokens_s385 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s385] >= 0) && balances_StreamProtocol[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][msgsender_MSG] >= 0) && balances_StreamProtocol[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_StreamProtocol0 := true;
[L2]                 call_transfer_StreamProtocol0 := false;
[L2]                 revert := revert_hold;
[L668]               havoc __exception;
[L669]               revert := false;
[L670]   COND FALSE  !(__exception)
[L693]   CALL        call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2063]  COND FALSE  !(!(_stopTrade_StreamProtocol[this] != true))
[L2067]              __var_4 := null;
[L2068]  COND FALSE  !(!(to_s385 > null))
[L2072]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][msgsender_MSG], tokens_s385);
[L1692]  COND FALSE  !(!(b_s45 <= a_s45))
[L1696]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2072]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][msgsender_MSG], tokens_s385);
[L2073]  COND FALSE  !(revert)
[L2076]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][msgsender_MSG];
[L2077]              balances_StreamProtocol[this][msgsender_MSG] := __var_5;
[L2078]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][msgsender_MSG];
[L2079]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][to_s385], tokens_s385);
[L1674]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1675]  COND FALSE  !(!(c_s23 >= a_s23))
[L2079]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][to_s385], tokens_s385);
[L2080]  COND FALSE  !(revert)
[L2083]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][to_s385];
[L2084]              balances_StreamProtocol[this][to_s385] := __var_6;
[L2085]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][to_s385];
[L2086]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L2087]              success_s385 := true;
[L693]   RET         call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L694]               assume !revert && gas >= 0;
[L3525]  RET         call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3616]  RET         call CorralChoice_StreamProtocol(this);

Loop:
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND TRUE   choice == 15
[L3503]              gas := gas - 21000;
[L3504]  COND FALSE  !(gas >= 0)
[L3616]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:51:17,589 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:51:17,589 INFO  L82        PathProgramCache]: Analyzing trace with hash 579103062, now seen corresponding path program 1 times
[2020-11-25 05:51:17,590 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:51:17,596 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:51:17,616 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:51:17,616 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:51:17,616 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:51:17,617 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:51:17,617 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:51:17,617 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:51:17,617 INFO  L87              Difference]: Start difference. First operand 2095 states and 2270 transitions. cyclomatic complexity: 178 Second operand 4 states.
[2020-11-25 05:51:17,695 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:51:17,695 INFO  L93              Difference]: Finished difference Result 2796 states and 3156 transitions.
[2020-11-25 05:51:17,695 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-25 05:51:17,695 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2796 states and 3156 transitions.
[2020-11-25 05:51:17,703 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 8
[2020-11-25 05:51:17,711 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2796 states to 2711 states and 3071 transitions.
[2020-11-25 05:51:17,711 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 771
[2020-11-25 05:51:17,711 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 771
[2020-11-25 05:51:17,711 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2711 states and 3071 transitions.
[2020-11-25 05:51:17,713 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:51:17,714 INFO  L728         BuchiCegarLoop]: Abstraction has 2711 states and 3071 transitions.
[2020-11-25 05:51:17,715 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2711 states and 3071 transitions.
[2020-11-25 05:51:17,732 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2711 to 2010.
[2020-11-25 05:51:17,732 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2010 states.
[2020-11-25 05:51:17,734 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2010 states to 2010 states and 2184 transitions.
[2020-11-25 05:51:17,734 INFO  L751         BuchiCegarLoop]: Abstraction has 2010 states and 2184 transitions.
[2020-11-25 05:51:17,734 INFO  L631         BuchiCegarLoop]: Abstraction has 2010 states and 2184 transitions.
[2020-11-25 05:51:17,734 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 05:51:17,735 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2010 states and 2184 transitions.
[2020-11-25 05:51:17,738 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:51:17,738 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:51:17,738 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:51:17,740 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:51:17,740 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_StreamProtocol0 := false;
[L2]                 call_transfer_StreamProtocol0 := false;
[L2]     CALL        call main();
[L3606]              assume null == 0;
[L3607]  CALL        call this := FreshRefGenerator__success();
[L1625]              havoc newRef;
[L1626]              assume Alloc[newRef] == false;
[L1627]              Alloc[newRef] := true;
[L1628]              assume newRef != null;
[L3607]  RET         call this := FreshRefGenerator__success();
[L3608]              assume now >= 0;
[L3609]              assume DType[this] == StreamProtocol;
[L3610]              assume msgvalue_MSG == 0;
[L3611]              gas := gas - 53000;
[L3612]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L394]               havoc __exception;
[L395]               revert := false;
[L396]   COND FALSE  !(__exception)
[L419]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1922]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1761]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1746]              assume msgsender_MSG != null;
[L1747]              Balance[this] := 0;
[L1761]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  COND FALSE  !(revert)
[L1922]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  COND FALSE  !(revert)
[L1926]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1829]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1812]              assume msgsender_MSG != null;
[L1813]              Balance[this] := 0;
[L1814]              owner_Owned[this] := null;
[L1816]              owner_Owned[this] := msgsender_MSG;
[L1829]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1830]  COND FALSE  !(revert)
[L1926]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1927]  COND FALSE  !(revert)
[L1930]  CALL        call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              assume msgsender_MSG != null;
[L1879]              Balance[this] := 0;
[L1880]              symbol_StreamProtocol[this] := 1491346165;
[L1881]              name_StreamProtocol[this] := 1491346165;
[L1882]              decimals_StreamProtocol[this] := 0;
[L1883]              _totalSupply_StreamProtocol[this] := 0;
[L1884]              _stopTrade_StreamProtocol[this] := false;
[L1885]              balances_StreamProtocol[this] := zeroRefintArr();
[L1886]              sum_balances0[this] := 0;
[L1887]              allowed_StreamProtocol[this] := zeroRefRefintArr();
[L1888]              sum_allowed1[this] := 0;
[L1890]              symbol_StreamProtocol[this] := 1357906882;
[L1891]              name_StreamProtocol[this] := -1605590943;
[L1892]              decimals_StreamProtocol[this] := 18;
[L1893]              __var_1 := decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1894]              _totalSupply_StreamProtocol[this] := 2000000000 * (nonlinearPow(10, decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1895]              _stopTrade_StreamProtocol[this] := false;
[L1896]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][owner_Owned[this]];
[L1897]              balances_StreamProtocol[this][owner_Owned[this]] := _totalSupply_StreamProtocol[this];
[L1898]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][owner_Owned[this]];
[L1899]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L1930]  RET         call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1931]  COND FALSE  !(revert)
[L419]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L420]               assume !revert && gas >= 0;
[L3612]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3613]              assume !revert && gas >= 0;
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND FALSE  !(choice == 13)
[L3520]  COND TRUE   choice == 12
[L3521]              gas := gas - 21000;
[L3522]  COND TRUE   gas >= 0
[L3523]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3524]              assume msgvalue_MSG == 0;
[L3525]  CALL        call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((msgsender_MSG != to_s385 && (tokens_s385 > balances_StreamProtocol[this][msgsender_MSG] || balances_StreamProtocol[this][to_s385] + tokens_s385 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s385] >= 0) && balances_StreamProtocol[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][msgsender_MSG] >= 0) && balances_StreamProtocol[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L668]               havoc __exception;
[L669]               revert := false;
[L670]   COND FALSE  !(__exception)
[L693]   CALL        call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2063]  COND FALSE  !(!(_stopTrade_StreamProtocol[this] != true))
[L2067]              __var_4 := null;
[L2068]  COND FALSE  !(!(to_s385 > null))
[L2072]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][msgsender_MSG], tokens_s385);
[L1692]  COND FALSE  !(!(b_s45 <= a_s45))
[L1696]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2072]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][msgsender_MSG], tokens_s385);
[L2073]  COND FALSE  !(revert)
[L2076]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][msgsender_MSG];
[L2077]              balances_StreamProtocol[this][msgsender_MSG] := __var_5;
[L2078]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][msgsender_MSG];
[L2079]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][to_s385], tokens_s385);
[L1674]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1675]  COND FALSE  !(!(c_s23 >= a_s23))
[L2079]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][to_s385], tokens_s385);
[L2080]  COND FALSE  !(revert)
[L2083]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][to_s385];
[L2084]              balances_StreamProtocol[this][to_s385] := __var_6;
[L2085]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][to_s385];
[L2086]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L2087]              success_s385 := true;
[L693]   RET         call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L694]               assume !revert && gas >= 0;
[L3525]  RET         call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3616]  RET         call CorralChoice_StreamProtocol(this);
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND FALSE  !(choice == 13)
[L3520]  COND TRUE   choice == 12
[L3521]              gas := gas - 21000;
[L3522]  COND TRUE   gas >= 0
[L3523]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3524]              assume msgvalue_MSG == 0;
[L3525]  CALL        call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s385 && (tokens_s385 > balances_StreamProtocol[this][msgsender_MSG] || balances_StreamProtocol[this][to_s385] + tokens_s385 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s385] >= 0) && balances_StreamProtocol[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][msgsender_MSG] >= 0) && balances_StreamProtocol[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_StreamProtocol0 := true;
[L2]                 call_transfer_StreamProtocol0 := false;
[L2]                 revert := revert_hold;
[L668]               havoc __exception;
[L669]               revert := false;
[L670]   COND FALSE  !(__exception)
[L693]   CALL        call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2063]  COND FALSE  !(!(_stopTrade_StreamProtocol[this] != true))
[L2067]              __var_4 := null;
[L2068]  COND FALSE  !(!(to_s385 > null))
[L2072]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][msgsender_MSG], tokens_s385);
[L1692]  COND FALSE  !(!(b_s45 <= a_s45))
[L1696]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2072]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][msgsender_MSG], tokens_s385);
[L2073]  COND FALSE  !(revert)
[L2076]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][msgsender_MSG];
[L2077]              balances_StreamProtocol[this][msgsender_MSG] := __var_5;
[L2078]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][msgsender_MSG];
[L2079]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][to_s385], tokens_s385);
[L1674]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1675]  COND FALSE  !(!(c_s23 >= a_s23))
[L2079]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][to_s385], tokens_s385);
[L2080]  COND FALSE  !(revert)
[L2083]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][to_s385];
[L2084]              balances_StreamProtocol[this][to_s385] := __var_6;
[L2085]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][to_s385];
[L2086]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L2087]              success_s385 := true;
[L693]   RET         call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L694]               assume !revert && gas >= 0;
[L3525]  RET         call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3616]  RET         call CorralChoice_StreamProtocol(this);

Loop:
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND FALSE  !(choice == 13)
[L3520]  COND TRUE   choice == 12
[L3521]              gas := gas - 21000;
[L3522]  COND TRUE   gas >= 0
[L3523]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3524]              assume msgvalue_MSG == 0;
[L3525]  CALL        call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s385 && (tokens_s385 > balances_StreamProtocol[this][msgsender_MSG] || balances_StreamProtocol[this][to_s385] + tokens_s385 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s385] >= 0) && balances_StreamProtocol[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][msgsender_MSG] >= 0) && balances_StreamProtocol[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_StreamProtocol0 := true;
[L2]                 call_transfer_StreamProtocol0 := false;
[L2]                 revert := revert_hold;
[L668]               havoc __exception;
[L669]               revert := false;
[L670]   COND FALSE  !(__exception)
[L693]   CALL        call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2063]  COND FALSE  !(!(_stopTrade_StreamProtocol[this] != true))
[L2067]              __var_4 := null;
[L2068]  COND FALSE  !(!(to_s385 > null))
[L2072]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][msgsender_MSG], tokens_s385);
[L1692]  COND FALSE  !(!(b_s45 <= a_s45))
[L1696]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2072]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][msgsender_MSG], tokens_s385);
[L2073]  COND FALSE  !(revert)
[L2076]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][msgsender_MSG];
[L2077]              balances_StreamProtocol[this][msgsender_MSG] := __var_5;
[L2078]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][msgsender_MSG];
[L2079]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][to_s385], tokens_s385);
[L1674]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1675]  COND FALSE  !(!(c_s23 >= a_s23))
[L2079]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_StreamProtocol[this][to_s385], tokens_s385);
[L2080]  COND FALSE  !(revert)
[L2083]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][to_s385];
[L2084]              balances_StreamProtocol[this][to_s385] := __var_6;
[L2085]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][to_s385];
[L2086]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L2087]              success_s385 := true;
[L693]   RET         call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L694]               assume !revert && gas >= 0;
[L3525]  RET         call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3616]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:51:17,744 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:51:17,744 INFO  L82        PathProgramCache]: Analyzing trace with hash 1263313765, now seen corresponding path program 1 times
[2020-11-25 05:51:17,745 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:51:17,772 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:51:17,859 INFO  L134       CoverageAnalysis]: Checked inductivity of 59 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 57 trivial. 0 not checked.
[2020-11-25 05:51:17,859 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:51:17,859 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 05:51:17,860 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:51:17,860 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 05:51:17,860 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=27, Invalid=129, Unknown=0, NotChecked=0, Total=156
[2020-11-25 05:51:17,860 INFO  L87              Difference]: Start difference. First operand 2010 states and 2184 transitions. cyclomatic complexity: 177 Second operand 13 states.
[2020-11-25 05:51:18,488 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:51:18,488 INFO  L93              Difference]: Finished difference Result 1226 states and 1331 transitions.
[2020-11-25 05:51:18,488 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-25 05:51:18,488 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1226 states and 1331 transitions.
[2020-11-25 05:51:18,490 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 05:51:18,490 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1226 states to 0 states and 0 transitions.
[2020-11-25 05:51:18,490 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 05:51:18,490 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 05:51:18,490 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 05:51:18,490 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:51:18,490 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 05:51:18,490 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 05:51:18,490 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 05:51:18,490 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 05:51:18,490 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 05:51:18,491 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 05:51:18,491 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 05:51:18,493 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:51:18 BasicIcfg
[2020-11-25 05:51:18,494 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 05:51:18,494 INFO  L168              Benchmark]: Toolchain (without parser) took 6458.94 ms. Allocated memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: 532.7 MB). Free memory was 940.6 MB in the beginning and 1.3 GB in the end (delta: -388.8 MB). Peak memory consumption was 143.9 MB. Max. memory is 15.3 GB.
[2020-11-25 05:51:18,495 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:51:18,495 INFO  L168              Benchmark]: Boogie Preprocessor took 92.79 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:51:18,495 INFO  L168              Benchmark]: UtopiaSpecLang took 56.46 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:51:18,495 INFO  L168              Benchmark]: Boogie Printer took 14.58 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:51:18,496 INFO  L168              Benchmark]: RCFGBuilder took 744.52 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 816.9 MB in the end (delta: 102.1 MB). Peak memory consumption was 102.1 MB. Max. memory is 15.3 GB.
[2020-11-25 05:51:18,496 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.82 ms. Allocated memory is still 1.0 GB. Free memory was 816.9 MB in the beginning and 813.3 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:51:18,496 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1307.65 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 200.8 MB). Free memory was 813.3 MB in the beginning and 1.1 GB in the end (delta: -298.1 MB). Peak memory consumption was 187.2 MB. Max. memory is 15.3 GB.
[2020-11-25 05:51:18,497 INFO  L168              Benchmark]: BlockEncodingV2 took 113.60 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 58.1 MB). Peak memory consumption was 58.1 MB. Max. memory is 15.3 GB.
[2020-11-25 05:51:18,497 INFO  L168              Benchmark]: BuchiAutomizer took 4085.47 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 331.9 MB). Free memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: -276.0 MB). Peak memory consumption was 55.9 MB. Max. memory is 15.3 GB.
[2020-11-25 05:51:18,500 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3110 locations, 5294 edges
  - StatisticsResult: Encoded RCFG
    3003 locations, 5058 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 92.79 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 56.46 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 14.58 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 744.52 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 816.9 MB in the end (delta: 102.1 MB). Peak memory consumption was 102.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.82 ms. Allocated memory is still 1.0 GB. Free memory was 816.9 MB in the beginning and 813.3 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1307.65 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 200.8 MB). Free memory was 813.3 MB in the beginning and 1.1 GB in the end (delta: -298.1 MB). Peak memory consumption was 187.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 113.60 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 58.1 MB). Peak memory consumption was 58.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 4085.47 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 331.9 MB). Free memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: -276.0 MB). Peak memory consumption was 55.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1318 locations, 1643 edges
  - StatisticsResult: BuchiProgram size
    3110 locations, 5294 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 15 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 4.0s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.5s. Construction of modules took 2.2s. BÃ¼chi inclusion checks took 0.9s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1216 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2189 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 10556 SDtfs, 10091 SDslu, 17739 SDs, 0 SdLazy, 25369 SolverSat, 1705 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.2s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_StreamProtocol0) ==> ( <>(fail_transfer_StreamProtocol0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
