This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 05:14:54,840 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 05:14:54,841 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 05:14:54,852 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 05:14:54,852 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 05:14:54,853 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 05:14:54,854 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 05:14:54,856 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 05:14:54,858 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 05:14:54,858 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 05:14:54,859 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 05:14:54,860 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 05:14:54,861 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 05:14:54,862 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 05:14:54,863 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 05:14:54,863 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 05:14:54,864 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 05:14:54,866 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 05:14:54,867 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 05:14:54,868 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 05:14:54,869 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 05:14:54,870 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 05:14:54,872 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 05:14:54,872 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 05:14:54,872 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 05:14:54,873 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 05:14:54,873 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 05:14:54,874 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 05:14:54,874 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 05:14:54,874 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 05:14:54,875 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 05:14:54,876 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 05:14:54,876 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 05:14:54,877 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 05:14:54,878 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 05:14:54,878 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 05:14:54,878 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 05:14:54,878 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 05:14:54,879 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 05:14:54,879 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 05:14:54,880 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 05:14:54,880 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 05:14:54,888 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 05:14:54,888 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 05:14:54,889 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 05:14:54,889 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 05:14:54,890 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 05:14:54,890 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 05:14:54,890 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 05:14:54,890 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 05:14:54,890 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 05:14:54,890 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 05:14:54,890 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 05:14:54,890 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 05:14:54,890 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 05:14:54,891 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 05:14:54,891 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 05:14:54,891 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 05:14:54,891 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 05:14:54,891 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 05:14:54,891 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 05:14:54,891 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 05:14:54,891 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 05:14:54,891 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 05:14:54,891 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 05:14:54,892 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 05:14:54,892 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 05:14:54,892 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 05:14:54,915 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 05:14:54,928 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 05:14:54,931 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 05:14:54,932 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 05:14:54,933 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 05:14:54,933 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl
[2020-11-25 05:14:54,933 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl'
[2020-11-25 05:14:55,009 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 05:14:55,010 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 05:14:55,010 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 05:14:55,010 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 05:14:55,011 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 05:14:55,027 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:14:55" (1/1) ...
[2020-11-25 05:14:55,029 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:14:55" (1/1) ...
[2020-11-25 05:14:55,058 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:14:55" (1/1) ...
[2020-11-25 05:14:55,059 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:14:55" (1/1) ...
[2020-11-25 05:14:55,081 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:14:55" (1/1) ...
[2020-11-25 05:14:55,090 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:14:55" (1/1) ...
[2020-11-25 05:14:55,100 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:14:55" (1/1) ...
[2020-11-25 05:14:55,110 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 05:14:55,110 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 05:14:55,111 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 05:14:55,113 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 05:14:55,116 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:14:55" (1/1) ...
[2020-11-25 05:14:55,136 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(SpaghettiTokenV2.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_SpaghettiTokenV2[this][from] && value <= allowance_SpaghettiTokenV2[this][from][msg.sender] && balanceOf_SpaghettiTokenV2[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][to] >= 0 && balanceOf_SpaghettiTokenV2[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][from] >= 0 &&  balanceOf_SpaghettiTokenV2[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_SpaghettiTokenV2[this][from][msg.sender] >= 0 && allowance_SpaghettiTokenV2[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiTokenV2.transferFrom(from, to, value), return == true && balanceOf_SpaghettiTokenV2[this][from] == old(balanceOf_SpaghettiTokenV2[this][from]) - value && balanceOf_SpaghettiTokenV2[this][to] == old(balanceOf_SpaghettiTokenV2[this][to]) + value && allowance_SpaghettiTokenV2[this][from][msg.sender] == old(allowance_SpaghettiTokenV2[this][from][msg.sender]) - value && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this]) && balanceOf_SpaghettiTokenV2[this][p1] == old(balanceOf_SpaghettiTokenV2[this][p1]) && allowance_SpaghettiTokenV2[this][p2][p3] == old(allowance_SpaghettiTokenV2[this][p2][p3]) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this]) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this]) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this]) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this]) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this]) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this]) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this]) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]))))
[2020-11-25 05:14:55,142 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(SpaghettiTokenV2.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_SpaghettiTokenV2[this][from] && value <= allowance_SpaghettiTokenV2[this][from][msg.sender] && balanceOf_SpaghettiTokenV2[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][to] >= 0 && balanceOf_SpaghettiTokenV2[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][from] >= 0 &&  balanceOf_SpaghettiTokenV2[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_SpaghettiTokenV2[this][from][msg.sender] >= 0 && allowance_SpaghettiTokenV2[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiTokenV2.transferFrom(from, to, value), return == true && balanceOf_SpaghettiTokenV2[this][from] == old(balanceOf_SpaghettiTokenV2[this][from]) - value && balanceOf_SpaghettiTokenV2[this][to] == old(balanceOf_SpaghettiTokenV2[this][to]) + value && allowance_SpaghettiTokenV2[this][from][msg.sender] == old(allowance_SpaghettiTokenV2[this][from][msg.sender]) - value && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this]) && balanceOf_SpaghettiTokenV2[this][p1] == old(balanceOf_SpaghettiTokenV2[this][p1]) && allowance_SpaghettiTokenV2[this][p2][p3] == old(allowance_SpaghettiTokenV2[this][p2][p3]) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this]) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this]) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this]) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this]) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this]) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this]) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this]) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]))))
[2020-11-25 05:14:55,150 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(SpaghettiTokenV2.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_SpaghettiTokenV2[this][from] && value <= allowance_SpaghettiTokenV2[this][from][msg.sender] && balanceOf_SpaghettiTokenV2[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][to] >= 0 && balanceOf_SpaghettiTokenV2[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][from] >= 0 &&  balanceOf_SpaghettiTokenV2[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_SpaghettiTokenV2[this][from][msg.sender] >= 0 && allowance_SpaghettiTokenV2[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiTokenV2.transferFrom(from, to, value), return == true && balanceOf_SpaghettiTokenV2[this][from] == old(balanceOf_SpaghettiTokenV2[this][from]) - value && balanceOf_SpaghettiTokenV2[this][to] == old(balanceOf_SpaghettiTokenV2[this][to]) + value && allowance_SpaghettiTokenV2[this][from][msg.sender] == old(allowance_SpaghettiTokenV2[this][from][msg.sender]) - value && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this]) && balanceOf_SpaghettiTokenV2[this][p1] == old(balanceOf_SpaghettiTokenV2[this][p1]) && allowance_SpaghettiTokenV2[this][p2][p3] == old(allowance_SpaghettiTokenV2[this][p2][p3]) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this]) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this]) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this]) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this]) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this]) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this]) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this]) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]))))
[2020-11-25 05:14:55,157 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=src_s399 && p1!=dst_s399 ) && ( p2!=src_s399 || p3!=msg.sender ) ) && src_s399!=dst_s399 ) && wad_s399<=balanceOf_SpaghettiTokenV2[this][src_s399] ) && wad_s399<=allowance_SpaghettiTokenV2[this][src_s399][msg.sender] ) && ( balanceOf_SpaghettiTokenV2[this][dst_s399] + wad_s399 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && wad_s399>=0 ) && wad_s399<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_SpaghettiTokenV2[this][dst_s399]>=0 ) && balanceOf_SpaghettiTokenV2[this][dst_s399]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_SpaghettiTokenV2[this][src_s399]>=0 ) && balanceOf_SpaghettiTokenV2[this][src_s399]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_SpaghettiTokenV2[this][src_s399][msg.sender]>=0 ) && allowance_SpaghettiTokenV2[this][src_s399][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[src_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[dst_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[src_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[src_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>],IdentifierExpression[dst_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],BinaryExpression[COMPLEQ,IdentifierExpression[wad_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[src_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[wad_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[src_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[dst_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],IdentifierExpression[wad_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[wad_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[wad_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[dst_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[dst_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[src_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[src_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[src_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[src_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 05:14:55,161 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && balanceOf_SpaghettiTokenV2[this][src_s399]==( ( old(balanceOf_SpaghettiTokenV2[this][src_s399]) ) - wad_s399 ) ) && balanceOf_SpaghettiTokenV2[this][dst_s399]==( ( old(balanceOf_SpaghettiTokenV2[this][dst_s399]) ) + wad_s399 ) ) && allowance_SpaghettiTokenV2[this][src_s399][msg.sender]==( ( old(allowance_SpaghettiTokenV2[this][src_s399][msg.sender]) ) - wad_s399 ) ) && totalSupply_SpaghettiTokenV2[this]==( old(totalSupply_SpaghettiTokenV2[this]) ) ) && balanceOf_SpaghettiTokenV2[this][p1]==( old(balanceOf_SpaghettiTokenV2[this][p1]) ) ) && allowance_SpaghettiTokenV2[this][p2][p3]==( old(allowance_SpaghettiTokenV2[this][p2][p3]) ) ) && symbol_SpaghettiTokenV2[this]==( old(symbol_SpaghettiTokenV2[this]) ) ) && decimals_SpaghettiTokenV2[this]==( old(decimals_SpaghettiTokenV2[this]) ) ) && name_SpaghettiTokenV2[this]==( old(name_SpaghettiTokenV2[this]) ) ) && pastav1_SpaghettiTokenV2[this]==( old(pastav1_SpaghettiTokenV2[this]) ) ) && foodbank_SpaghettiTokenV2[this]==( old(foodbank_SpaghettiTokenV2[this]) ) ) && governance_SpaghettiTokenV2[this]==( old(governance_SpaghettiTokenV2[this]) ) ) && food_SpaghettiTokenV2[this]==( old(food_SpaghettiTokenV2[this]) ) ) && oven_SpaghettiTokenV2[this]==( old(oven_SpaghettiTokenV2[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[src_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[src_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]]],IdentifierExpression[wad_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[dst_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[dst_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]]],IdentifierExpression[wad_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[src_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[src_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]]],IdentifierExpression[wad_s399,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[pastav1_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[pastav1_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[foodbank_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[foodbank_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[governance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[governance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[food_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[food_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[oven_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[oven_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiTokenV2>]]]]]]
[2020-11-25 05:14:55,167 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(SpaghettiTokenV2.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_SpaghettiTokenV2[this][from] && value <= allowance_SpaghettiTokenV2[this][from][msg.sender] && balanceOf_SpaghettiTokenV2[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][to] >= 0 && balanceOf_SpaghettiTokenV2[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][from] >= 0 &&  balanceOf_SpaghettiTokenV2[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_SpaghettiTokenV2[this][from][msg.sender] >= 0 && allowance_SpaghettiTokenV2[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiTokenV2.transferFrom(from, to, value), return == true && balanceOf_SpaghettiTokenV2[this][from] == old(balanceOf_SpaghettiTokenV2[this][from]) - value && balanceOf_SpaghettiTokenV2[this][to] == old(balanceOf_SpaghettiTokenV2[this][to]) + value && allowance_SpaghettiTokenV2[this][from][msg.sender] == old(allowance_SpaghettiTokenV2[this][from][msg.sender]) - value && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this]) && balanceOf_SpaghettiTokenV2[this][p1] == old(balanceOf_SpaghettiTokenV2[this][p1]) && allowance_SpaghettiTokenV2[this][p2][p3] == old(allowance_SpaghettiTokenV2[this][p2][p3]) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this]) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this]) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this]) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this]) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this]) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this]) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this]) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]))))
[2020-11-25 05:14:55,167 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_SpaghettiTokenV20) ==> ( <>AP(success_transferFrom_SpaghettiTokenV20) ) ) )
Executed UtopiaSpecLang
[2020-11-25 05:14:55,176 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:14:55 PropertyContainer
[2020-11-25 05:14:55,177 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 05:14:55,177 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 05:14:55,177 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 05:14:55,177 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 05:14:55,178 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:14:55" (1/2) ...
[2020-11-25 05:14:55,178 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 05:14:55,179 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 05:14:55,192 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:14:55" (2/2) ...
[2020-11-25 05:14:55,192 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 05:14:55,192 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 05:14:55,192 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 05:14:55,192 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 05:14:55,193 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:14:55" (1/2) ...
[2020-11-25 05:14:55,256 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 05:14:55,256 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:14:55,256 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 05:14:55,256 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 05:14:55,256 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 05:14:55,256 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 05:14:55,256 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 05:14:55,257 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_ERC20
[2020-11-25 05:14:55,257 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath_NoBaseCtor__success
[2020-11-25 05:14:55,257 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath
[2020-11-25 05:14:55,257 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath
[2020-11-25 05:14:55,257 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__success
[2020-11-25 05:14:55,257 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__success
[2020-11-25 05:14:55,257 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_DSMath__success
[2020-11-25 05:14:55,257 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success
[2020-11-25 05:14:55,257 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2
[2020-11-25 05:14:55,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2
[2020-11-25 05:14:55,258 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiTokenV2
[2020-11-25 05:14:55,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiTokenV2
[2020-11-25 05:14:55,258 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiTokenV2
[2020-11-25 05:14:55,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiTokenV2
[2020-11-25 05:14:55,258 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiTokenV2
[2020-11-25 05:14:55,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiTokenV2
[2020-11-25 05:14:55,258 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiTokenV2
[2020-11-25 05:14:55,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiTokenV2
[2020-11-25 05:14:55,258 INFO  L130     BoogieDeclarations]: Found specification of procedure mint_SpaghettiTokenV2
[2020-11-25 05:14:55,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint_SpaghettiTokenV2
[2020-11-25 05:14:55,258 INFO  L130     BoogieDeclarations]: Found specification of procedure give_SpaghettiTokenV2
[2020-11-25 05:14:55,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure give_SpaghettiTokenV2
[2020-11-25 05:14:55,259 INFO  L130     BoogieDeclarations]: Found specification of procedure burn_SpaghettiTokenV2
[2020-11-25 05:14:55,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn_SpaghettiTokenV2
[2020-11-25 05:14:55,259 INFO  L130     BoogieDeclarations]: Found specification of procedure setFoodbank~address_SpaghettiTokenV2
[2020-11-25 05:14:55,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure setFoodbank~address_SpaghettiTokenV2
[2020-11-25 05:14:55,259 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_SpaghettiTokenV2
[2020-11-25 05:14:55,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_SpaghettiTokenV2
[2020-11-25 05:14:55,259 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiTokenV2
[2020-11-25 05:14:55,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiTokenV2
[2020-11-25 05:14:55,259 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiTokenV2
[2020-11-25 05:14:55,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiTokenV2
[2020-11-25 05:14:55,259 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiTokenV2
[2020-11-25 05:14:55,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiTokenV2
[2020-11-25 05:14:55,259 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_SpaghettiTokenV2
[2020-11-25 05:14:55,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_SpaghettiTokenV2
[2020-11-25 05:14:55,260 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_SpaghettiTokenV2
[2020-11-25 05:14:55,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_SpaghettiTokenV2
[2020-11-25 05:14:55,260 INFO  L130     BoogieDeclarations]: Found specification of procedure name_SpaghettiTokenV2
[2020-11-25 05:14:55,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_SpaghettiTokenV2
[2020-11-25 05:14:55,260 INFO  L130     BoogieDeclarations]: Found specification of procedure pastav1_SpaghettiTokenV2
[2020-11-25 05:14:55,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure pastav1_SpaghettiTokenV2
[2020-11-25 05:14:55,260 INFO  L130     BoogieDeclarations]: Found specification of procedure foodbank_SpaghettiTokenV2
[2020-11-25 05:14:55,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure foodbank_SpaghettiTokenV2
[2020-11-25 05:14:55,260 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_SpaghettiTokenV2
[2020-11-25 05:14:55,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_SpaghettiTokenV2
[2020-11-25 05:14:55,260 INFO  L130     BoogieDeclarations]: Found specification of procedure food_SpaghettiTokenV2
[2020-11-25 05:14:55,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure food_SpaghettiTokenV2
[2020-11-25 05:14:55,260 INFO  L130     BoogieDeclarations]: Found specification of procedure oven_SpaghettiTokenV2
[2020-11-25 05:14:55,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure oven_SpaghettiTokenV2
[2020-11-25 05:14:55,261 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 05:14:55,261 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 05:14:55,261 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 05:14:55,261 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 05:14:55,261 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 05:14:55,261 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DSMath
[2020-11-25 05:14:55,261 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_DSMath
[2020-11-25 05:14:55,261 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SpaghettiTokenV2
[2020-11-25 05:14:55,261 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 05:14:55,261 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 05:14:55,261 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:14:55,261 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 05:14:55,262 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 05:14:55,262 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath_NoBaseCtor__fail
[2020-11-25 05:14:55,262 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath__success
[2020-11-25 05:14:55,262 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath__fail
[2020-11-25 05:14:55,262 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__fail
[2020-11-25 05:14:55,262 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__fail
[2020-11-25 05:14:55,262 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_DSMath__fail
[2020-11-25 05:14:55,262 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__fail
[2020-11-25 05:14:55,262 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2__success
[2020-11-25 05:14:55,263 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,263 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiTokenV2__success
[2020-11-25 05:14:55,263 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,263 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:14:55,263 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,263 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:14:55,263 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,263 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:14:55,263 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,264 INFO  L130     BoogieDeclarations]: Found specification of procedure mint_SpaghettiTokenV2__success
[2020-11-25 05:14:55,264 INFO  L130     BoogieDeclarations]: Found specification of procedure mint_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,264 INFO  L130     BoogieDeclarations]: Found specification of procedure give_SpaghettiTokenV2__success
[2020-11-25 05:14:55,264 INFO  L130     BoogieDeclarations]: Found specification of procedure give_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,264 INFO  L130     BoogieDeclarations]: Found specification of procedure burn_SpaghettiTokenV2__success
[2020-11-25 05:14:55,264 INFO  L130     BoogieDeclarations]: Found specification of procedure burn_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,264 INFO  L130     BoogieDeclarations]: Found specification of procedure setFoodbank~address_SpaghettiTokenV2__success
[2020-11-25 05:14:55,264 INFO  L130     BoogieDeclarations]: Found specification of procedure setFoodbank~address_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,264 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_SpaghettiTokenV2__success
[2020-11-25 05:14:55,264 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,265 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiTokenV2__success
[2020-11-25 05:14:55,265 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,265 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiTokenV2__success
[2020-11-25 05:14:55,265 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,265 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiTokenV2__success
[2020-11-25 05:14:55,265 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,265 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_SpaghettiTokenV2__success
[2020-11-25 05:14:55,265 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,265 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_SpaghettiTokenV2__success
[2020-11-25 05:14:55,265 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,266 INFO  L130     BoogieDeclarations]: Found specification of procedure name_SpaghettiTokenV2__success
[2020-11-25 05:14:55,266 INFO  L130     BoogieDeclarations]: Found specification of procedure name_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,266 INFO  L130     BoogieDeclarations]: Found specification of procedure pastav1_SpaghettiTokenV2__success
[2020-11-25 05:14:55,266 INFO  L130     BoogieDeclarations]: Found specification of procedure pastav1_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,266 INFO  L130     BoogieDeclarations]: Found specification of procedure foodbank_SpaghettiTokenV2__success
[2020-11-25 05:14:55,266 INFO  L130     BoogieDeclarations]: Found specification of procedure foodbank_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,266 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_SpaghettiTokenV2__success
[2020-11-25 05:14:55,266 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,266 INFO  L130     BoogieDeclarations]: Found specification of procedure food_SpaghettiTokenV2__success
[2020-11-25 05:14:55,266 INFO  L130     BoogieDeclarations]: Found specification of procedure food_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,267 INFO  L130     BoogieDeclarations]: Found specification of procedure oven_SpaghettiTokenV2__success
[2020-11-25 05:14:55,267 INFO  L130     BoogieDeclarations]: Found specification of procedure oven_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,267 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 05:14:55,267 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 05:14:55,267 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 05:14:55,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 05:14:55,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 05:14:55,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:14:55,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:14:55,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 05:14:55,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 05:14:55,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath_NoBaseCtor__fail
[2020-11-25 05:14:55,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath_NoBaseCtor__success
[2020-11-25 05:14:55,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath__fail
[2020-11-25 05:14:55,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath__success
[2020-11-25 05:14:55,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__fail
[2020-11-25 05:14:55,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__success
[2020-11-25 05:14:55,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__fail
[2020-11-25 05:14:55,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__success
[2020-11-25 05:14:55,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_DSMath__fail
[2020-11-25 05:14:55,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_DSMath__success
[2020-11-25 05:14:55,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__fail
[2020-11-25 05:14:55,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success
[2020-11-25 05:14:55,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2__success
[2020-11-25 05:14:55,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiTokenV2__success
[2020-11-25 05:14:55,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:14:55,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:14:55,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:14:55,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint_SpaghettiTokenV2__success
[2020-11-25 05:14:55,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure give_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure give_SpaghettiTokenV2__success
[2020-11-25 05:14:55,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn_SpaghettiTokenV2__success
[2020-11-25 05:14:55,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure setFoodbank~address_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure setFoodbank~address_SpaghettiTokenV2__success
[2020-11-25 05:14:55,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_SpaghettiTokenV2__success
[2020-11-25 05:14:55,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiTokenV2__success
[2020-11-25 05:14:55,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiTokenV2__success
[2020-11-25 05:14:55,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiTokenV2__success
[2020-11-25 05:14:55,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_SpaghettiTokenV2__success
[2020-11-25 05:14:55,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_SpaghettiTokenV2__success
[2020-11-25 05:14:55,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_SpaghettiTokenV2__success
[2020-11-25 05:14:55,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure pastav1_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure pastav1_SpaghettiTokenV2__success
[2020-11-25 05:14:55,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure foodbank_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure foodbank_SpaghettiTokenV2__success
[2020-11-25 05:14:55,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_SpaghettiTokenV2__success
[2020-11-25 05:14:55,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure food_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure food_SpaghettiTokenV2__success
[2020-11-25 05:14:55,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure oven_SpaghettiTokenV2__fail
[2020-11-25 05:14:55,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure oven_SpaghettiTokenV2__success
[2020-11-25 05:14:55,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 05:14:55,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 05:14:55,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 05:14:55,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 05:14:55,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 05:14:55,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 05:14:55,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 05:14:55,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 05:14:55,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DSMath
[2020-11-25 05:14:55,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_DSMath
[2020-11-25 05:14:55,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SpaghettiTokenV2
[2020-11-25 05:14:55,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 05:14:55,274 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 05:14:55,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 05:14:55,654 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:14:55,655 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:14:55,655 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:14:55,722 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:14:55,944 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 05:14:55,944 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 05:14:55,946 INFO  L202        PluginConnector]: Adding new model SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:14:55 BoogieIcfgContainer
[2020-11-25 05:14:55,946 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:14:55" (2/2) ...
[2020-11-25 05:14:55,946 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 05:14:55,946 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4812df62 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:14:55, skipping insertion in model container
[2020-11-25 05:14:55,947 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 05:14:55,947 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 05:14:55,947 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 05:14:55,948 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 05:14:55,949 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:14:55" (1/3) ...
[2020-11-25 05:14:55,950 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5f3d758e and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:14:55, skipping insertion in model container
[2020-11-25 05:14:55,950 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:14:55" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 05:14:55,997 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:14:55 NWAContainer
[2020-11-25 05:14:55,997 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 05:14:55,997 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 05:14:55,998 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 05:14:55,998 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 05:14:55,999 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:14:55" (3/4) ...
[2020-11-25 05:14:56,000 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@33c7c3a2 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:14:56, skipping insertion in model container
[2020-11-25 05:14:56,000 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:14:55" (4/4) ...
[2020-11-25 05:14:56,004 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 05:14:56,007 INFO  L110   BuchiProductObserver]: Initial RCFG 1444 locations, 1809 edges
[2020-11-25 05:14:56,007 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 05:14:56,018 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 05:14:57,390 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 05:14:57,395 INFO  L110   BuchiProductObserver]: BuchiProgram size 3400 locations, 5806 edges
[2020-11-25 05:14:57,396 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:14:57 BoogieIcfgContainer
[2020-11-25 05:14:57,396 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 05:14:57,396 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 05:14:57,396 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 05:14:57,398 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 05:14:57,399 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:14:57" (1/1) ...
[2020-11-25 05:14:57,481 INFO  L313           BlockEncoder]: Initial Icfg 3400 locations, 5806 edges
[2020-11-25 05:14:57,481 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 05:14:57,481 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 05:14:57,482 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 05:14:57,482 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 05:14:57,494 INFO  L70    emoveInfeasibleEdges]: Removed 114 edges and 9 locations because of local infeasibility
[2020-11-25 05:14:57,502 INFO  L70        RemoveSinkStates]: Removed 80 edges and 53 locations by removing sink states
[2020-11-25 05:14:57,518 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 05:14:57,522 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 05:14:57,525 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 05:14:57,525 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 05:14:57,530 INFO  L313           BlockEncoder]: Encoded RCFG 3324 locations, 5592 edges
[2020-11-25 05:14:57,531 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:14:57 BasicIcfg
[2020-11-25 05:14:57,531 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 05:14:57,531 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 05:14:57,531 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 05:14:57,533 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 05:14:57,534 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:14:57,534 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:14:55" (1/6) ...
[2020-11-25 05:14:57,535 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@339ea2f9 and model type SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:14:57, skipping insertion in model container
[2020-11-25 05:14:57,536 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:14:57,536 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:14:55" (2/6) ...
[2020-11-25 05:14:57,536 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@339ea2f9 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:14:57, skipping insertion in model container
[2020-11-25 05:14:57,536 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:14:57,536 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:14:55" (3/6) ...
[2020-11-25 05:14:57,536 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@339ea2f9 and model type SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:14:57, skipping insertion in model container
[2020-11-25 05:14:57,536 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:14:57,536 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:14:55" (4/6) ...
[2020-11-25 05:14:57,537 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@339ea2f9 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:14:57, skipping insertion in model container
[2020-11-25 05:14:57,537 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:14:57,537 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:14:57" (5/6) ...
[2020-11-25 05:14:57,537 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@339ea2f9 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:14:57, skipping insertion in model container
[2020-11-25 05:14:57,537 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:14:57,537 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:14:57" (6/6) ...
[2020-11-25 05:14:57,538 INFO  L404   chiAutomizerObserver]: Analyzing ICFG SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transferfrom-normal.bpl_BEv2
[2020-11-25 05:14:57,576 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 05:14:57,577 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 05:14:57,577 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 05:14:57,577 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 05:14:57,577 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 05:14:57,577 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 05:14:57,577 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 05:14:57,577 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 05:14:57,577 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 05:14:57,610 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3324 states.
[2020-11-25 05:14:57,668 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:14:57,668 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:14:57,668 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:14:57,677 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:14:57,677 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:14:57,677 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 05:14:57,677 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3324 states.
[2020-11-25 05:14:57,701 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:14:57,701 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:14:57,701 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:14:57,703 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:14:57,704 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_SpaghettiTokenV20 := false;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND TRUE   revert
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND TRUE   choice == 20
[L3581]              gas := gas - 21000;
[L3582]  COND FALSE  !(gas >= 0)
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:14:57,721 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:14:57,722 INFO  L82        PathProgramCache]: Analyzing trace with hash 1442414937, now seen corresponding path program 1 times
[2020-11-25 05:14:57,726 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:14:57,747 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:14:57,782 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:14:57,784 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:14:57,785 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:14:57,910 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:14:57,922 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:14:57,922 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:14:57,924 INFO  L87              Difference]: Start difference. First operand 3324 states. Second operand 3 states.
[2020-11-25 05:14:58,090 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:14:58,090 INFO  L93              Difference]: Finished difference Result 2769 states and 3058 transitions.
[2020-11-25 05:14:58,091 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:14:58,092 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2769 states and 3058 transitions.
[2020-11-25 05:14:58,106 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:14:58,124 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2769 states to 2769 states and 3058 transitions.
[2020-11-25 05:14:58,125 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 05:14:58,127 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 806
[2020-11-25 05:14:58,127 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2769 states and 3058 transitions.
[2020-11-25 05:14:58,134 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:14:58,134 INFO  L728         BuchiCegarLoop]: Abstraction has 2769 states and 3058 transitions.
[2020-11-25 05:14:58,148 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2769 states and 3058 transitions.
[2020-11-25 05:14:58,186 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2769 to 2769.
[2020-11-25 05:14:58,186 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2769 states.
[2020-11-25 05:14:58,192 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2769 states to 2769 states and 3058 transitions.
[2020-11-25 05:14:58,193 INFO  L751         BuchiCegarLoop]: Abstraction has 2769 states and 3058 transitions.
[2020-11-25 05:14:58,193 INFO  L631         BuchiCegarLoop]: Abstraction has 2769 states and 3058 transitions.
[2020-11-25 05:14:58,193 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 05:14:58,193 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2769 states and 3058 transitions.
[2020-11-25 05:14:58,200 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:14:58,200 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:14:58,200 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:14:58,202 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:14:58,202 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_SpaghettiTokenV20 := false;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND TRUE   revert
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND TRUE   choice == 18
[L3593]              gas := gas - 21000;
[L3594]  COND TRUE   gas >= 0
[L3595]              assume wad_s399 >= 0 && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3596]              assume msgvalue_MSG == 0;
[L3597]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s399 && p1 != dst_s399) && (p2 != src_s399 || p3 != msgsender_MSG)) && src_s399 != dst_s399) && wad_s399 <= balanceOf_SpaghettiTokenV2[this][src_s399]) && wad_s399 <= allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s399] + wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s399 >= 0) && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][src_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][src_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= 0) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiTokenV20 := true;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L497]               havoc __exception;
[L498]               revert := false;
[L499]   COND FALSE  !(__exception)
[L525]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L2330]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2331]  COND TRUE   src_s399 != msgsender_MSG && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L2332]  COND TRUE   !(allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= wad_s399)
[L2333]              revert := true;
[L525]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L526]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && balanceOf_SpaghettiTokenV2[this][src_s399] == old(balanceOf_SpaghettiTokenV2[this][src_s399]) - wad_s399) && balanceOf_SpaghettiTokenV2[this][dst_s399] == old(balanceOf_SpaghettiTokenV2[this][dst_s399]) + wad_s399) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] == old(allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG]) - wad_s399) && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this])) && balanceOf_SpaghettiTokenV2[this][p1] == old(balanceOf_SpaghettiTokenV2[this][p1])) && allowance_SpaghettiTokenV2[this][p2][p3] == old(allowance_SpaghettiTokenV2[this][p2][p3])) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this])) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this])) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this])) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this])) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this])) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this])) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this])) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]));
[L3]                 revert := revert_hold;
[L3597]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND TRUE   choice == 18
[L3593]              gas := gas - 21000;
[L3594]  COND TRUE   gas >= 0
[L3595]              assume wad_s399 >= 0 && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3596]              assume msgvalue_MSG == 0;
[L3597]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s399 && p1 != dst_s399) && (p2 != src_s399 || p3 != msgsender_MSG)) && src_s399 != dst_s399) && wad_s399 <= balanceOf_SpaghettiTokenV2[this][src_s399]) && wad_s399 <= allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s399] + wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s399 >= 0) && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][src_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][src_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= 0) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiTokenV20 := true;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L497]               havoc __exception;
[L498]               revert := false;
[L499]   COND FALSE  !(__exception)
[L525]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L2330]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2331]  COND TRUE   src_s399 != msgsender_MSG && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L2332]  COND TRUE   !(allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= wad_s399)
[L2333]              revert := true;
[L525]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L526]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && balanceOf_SpaghettiTokenV2[this][src_s399] == old(balanceOf_SpaghettiTokenV2[this][src_s399]) - wad_s399) && balanceOf_SpaghettiTokenV2[this][dst_s399] == old(balanceOf_SpaghettiTokenV2[this][dst_s399]) + wad_s399) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] == old(allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG]) - wad_s399) && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this])) && balanceOf_SpaghettiTokenV2[this][p1] == old(balanceOf_SpaghettiTokenV2[this][p1])) && allowance_SpaghettiTokenV2[this][p2][p3] == old(allowance_SpaghettiTokenV2[this][p2][p3])) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this])) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this])) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this])) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this])) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this])) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this])) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this])) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]));
[L3]                 revert := revert_hold;
[L3597]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:14:58,205 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:14:58,205 INFO  L82        PathProgramCache]: Analyzing trace with hash 804540332, now seen corresponding path program 1 times
[2020-11-25 05:14:58,206 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:14:58,215 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:14:58,232 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:14:58,233 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:14:58,233 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:14:58,234 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:14:58,234 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:14:58,234 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:14:58,235 INFO  L87              Difference]: Start difference. First operand 2769 states and 3058 transitions. cyclomatic complexity: 291 Second operand 4 states.
[2020-11-25 05:14:58,675 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:14:58,676 INFO  L93              Difference]: Finished difference Result 3889 states and 4438 transitions.
[2020-11-25 05:14:58,676 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:14:58,676 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3889 states and 4438 transitions.
[2020-11-25 05:14:58,692 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 05:14:58,709 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3889 states to 3751 states and 4274 transitions.
[2020-11-25 05:14:58,709 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1084
[2020-11-25 05:14:58,710 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1113
[2020-11-25 05:14:58,710 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3751 states and 4274 transitions.
[2020-11-25 05:14:58,717 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:14:58,717 INFO  L728         BuchiCegarLoop]: Abstraction has 3751 states and 4274 transitions.
[2020-11-25 05:14:58,720 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3751 states and 4274 transitions.
[2020-11-25 05:14:58,750 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3751 to 2811.
[2020-11-25 05:14:58,750 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2811 states.
[2020-11-25 05:14:58,753 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2811 states to 2811 states and 3034 transitions.
[2020-11-25 05:14:58,753 INFO  L751         BuchiCegarLoop]: Abstraction has 2811 states and 3034 transitions.
[2020-11-25 05:14:58,753 INFO  L631         BuchiCegarLoop]: Abstraction has 2811 states and 3034 transitions.
[2020-11-25 05:14:58,753 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 05:14:58,754 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2811 states and 3034 transitions.
[2020-11-25 05:14:58,759 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:14:58,759 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:14:58,759 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:14:58,760 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:14:58,761 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_SpaghettiTokenV20 := false;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND FALSE  !(revert)
[L2116]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2073]              assume msgsender_MSG != null;
[L2074]              Balance[this] := 0;
[L2075]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2076]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2077]              sum_balanceOf0[this] := 0;
[L2078]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2079]              sum_allowance1[this] := 0;
[L2080]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2081]              decimals_SpaghettiTokenV2[this] := 18;
[L2082]              name_SpaghettiTokenV2[this] := -432993173;
[L2083]              __var_1 := null;
[L2084]              foodbank_SpaghettiTokenV2[this] := null;
[L2085]              governance_SpaghettiTokenV2[this] := null;
[L2086]              food_SpaghettiTokenV2[this] := 0;
[L2087]              oven_SpaghettiTokenV2[this] := 0;
[L2089]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2090]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2091]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2092]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2093]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2116]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND TRUE   choice == 18
[L3593]              gas := gas - 21000;
[L3594]  COND TRUE   gas >= 0
[L3595]              assume wad_s399 >= 0 && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3596]              assume msgvalue_MSG == 0;
[L3597]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s399 && p1 != dst_s399) && (p2 != src_s399 || p3 != msgsender_MSG)) && src_s399 != dst_s399) && wad_s399 <= balanceOf_SpaghettiTokenV2[this][src_s399]) && wad_s399 <= allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s399] + wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s399 >= 0) && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][src_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][src_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= 0) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiTokenV20 := true;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L497]               havoc __exception;
[L498]               revert := false;
[L499]   COND TRUE   __exception
[L500]               __tmp__Balance := Balance;
[L501]               __tmp__DType := DType;
[L502]               __tmp__Alloc := Alloc;
[L503]               __tmp__balance_ADDR := balance_ADDR;
[L504]               __tmp__M_Ref_int := M_Ref_int;
[L505]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L506]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L507]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L508]               __tmp__sum_allowance1 := sum_allowance1;
[L509]               __tmp__Length := Length;
[L510]               __tmp__now := now;
[L511]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L512]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L513]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L514]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L515]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L516]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L517]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L518]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L519]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L520]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L521]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L522]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND TRUE   src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L2219]  COND TRUE   !(__tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= wad_s399)
[L2220]              revert := true;
[L522]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L523]               assume revert || gas < 0;
[L3597]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND TRUE   choice == 18
[L3593]              gas := gas - 21000;
[L3594]  COND TRUE   gas >= 0
[L3595]              assume wad_s399 >= 0 && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3596]              assume msgvalue_MSG == 0;
[L3597]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s399 && p1 != dst_s399) && (p2 != src_s399 || p3 != msgsender_MSG)) && src_s399 != dst_s399) && wad_s399 <= balanceOf_SpaghettiTokenV2[this][src_s399]) && wad_s399 <= allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s399] + wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s399 >= 0) && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][src_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][src_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= 0) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiTokenV20 := true;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L497]               havoc __exception;
[L498]               revert := false;
[L499]   COND TRUE   __exception
[L500]               __tmp__Balance := Balance;
[L501]               __tmp__DType := DType;
[L502]               __tmp__Alloc := Alloc;
[L503]               __tmp__balance_ADDR := balance_ADDR;
[L504]               __tmp__M_Ref_int := M_Ref_int;
[L505]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L506]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L507]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L508]               __tmp__sum_allowance1 := sum_allowance1;
[L509]               __tmp__Length := Length;
[L510]               __tmp__now := now;
[L511]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L512]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L513]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L514]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L515]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L516]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L517]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L518]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L519]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L520]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L521]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L522]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND TRUE   src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L2219]  COND TRUE   !(__tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= wad_s399)
[L2220]              revert := true;
[L522]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L523]               assume revert || gas < 0;
[L3597]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:14:58,764 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:14:58,764 INFO  L82        PathProgramCache]: Analyzing trace with hash -1010054279, now seen corresponding path program 1 times
[2020-11-25 05:14:58,764 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:14:58,776 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:14:58,827 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:14:58,827 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:14:58,827 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 05:14:58,827 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:14:58,828 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 05:14:58,828 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 05:14:58,828 INFO  L87              Difference]: Start difference. First operand 2811 states and 3034 transitions. cyclomatic complexity: 225 Second operand 6 states.
[2020-11-25 05:14:59,819 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:14:59,819 INFO  L93              Difference]: Finished difference Result 3193 states and 3481 transitions.
[2020-11-25 05:14:59,819 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 05:14:59,819 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3193 states and 3481 transitions.
[2020-11-25 05:14:59,828 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 05:14:59,838 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3193 states to 3193 states and 3481 transitions.
[2020-11-25 05:14:59,838 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 944
[2020-11-25 05:14:59,838 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 944
[2020-11-25 05:14:59,839 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3193 states and 3481 transitions.
[2020-11-25 05:14:59,841 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:14:59,841 INFO  L728         BuchiCegarLoop]: Abstraction has 3193 states and 3481 transitions.
[2020-11-25 05:14:59,844 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3193 states and 3481 transitions.
[2020-11-25 05:14:59,867 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3193 to 2873.
[2020-11-25 05:14:59,867 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2873 states.
[2020-11-25 05:14:59,870 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2873 states to 2873 states and 3106 transitions.
[2020-11-25 05:14:59,870 INFO  L751         BuchiCegarLoop]: Abstraction has 2873 states and 3106 transitions.
[2020-11-25 05:14:59,870 INFO  L631         BuchiCegarLoop]: Abstraction has 2873 states and 3106 transitions.
[2020-11-25 05:14:59,870 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 05:14:59,870 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2873 states and 3106 transitions.
[2020-11-25 05:14:59,874 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:14:59,874 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:14:59,874 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:14:59,876 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:14:59,876 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_SpaghettiTokenV20 := false;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND FALSE  !(revert)
[L2116]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2073]              assume msgsender_MSG != null;
[L2074]              Balance[this] := 0;
[L2075]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2076]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2077]              sum_balanceOf0[this] := 0;
[L2078]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2079]              sum_allowance1[this] := 0;
[L2080]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2081]              decimals_SpaghettiTokenV2[this] := 18;
[L2082]              name_SpaghettiTokenV2[this] := -432993173;
[L2083]              __var_1 := null;
[L2084]              foodbank_SpaghettiTokenV2[this] := null;
[L2085]              governance_SpaghettiTokenV2[this] := null;
[L2086]              food_SpaghettiTokenV2[this] := 0;
[L2087]              oven_SpaghettiTokenV2[this] := 0;
[L2089]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2090]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2091]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2092]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2093]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2116]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND TRUE   choice == 18
[L3593]              gas := gas - 21000;
[L3594]  COND TRUE   gas >= 0
[L3595]              assume wad_s399 >= 0 && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3596]              assume msgvalue_MSG == 0;
[L3597]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s399 && p1 != dst_s399) && (p2 != src_s399 || p3 != msgsender_MSG)) && src_s399 != dst_s399) && wad_s399 <= balanceOf_SpaghettiTokenV2[this][src_s399]) && wad_s399 <= allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s399] + wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s399 >= 0) && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][src_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][src_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= 0) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiTokenV20 := true;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L497]               havoc __exception;
[L498]               revert := false;
[L499]   COND TRUE   __exception
[L500]               __tmp__Balance := Balance;
[L501]               __tmp__DType := DType;
[L502]               __tmp__Alloc := Alloc;
[L503]               __tmp__balance_ADDR := balance_ADDR;
[L504]               __tmp__M_Ref_int := M_Ref_int;
[L505]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L506]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L507]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L508]               __tmp__sum_allowance1 := sum_allowance1;
[L509]               __tmp__Length := Length;
[L510]               __tmp__now := now;
[L511]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L512]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L513]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L514]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L515]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L516]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L517]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L518]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L519]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L520]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L521]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L522]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2235]  COND TRUE   !(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399)
[L2236]              revert := true;
[L522]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L523]               assume revert || gas < 0;
[L3597]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND TRUE   choice == 18
[L3593]              gas := gas - 21000;
[L3594]  COND TRUE   gas >= 0
[L3595]              assume wad_s399 >= 0 && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3596]              assume msgvalue_MSG == 0;
[L3597]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s399 && p1 != dst_s399) && (p2 != src_s399 || p3 != msgsender_MSG)) && src_s399 != dst_s399) && wad_s399 <= balanceOf_SpaghettiTokenV2[this][src_s399]) && wad_s399 <= allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s399] + wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s399 >= 0) && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][src_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][src_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= 0) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiTokenV20 := true;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L497]               havoc __exception;
[L498]               revert := false;
[L499]   COND TRUE   __exception
[L500]               __tmp__Balance := Balance;
[L501]               __tmp__DType := DType;
[L502]               __tmp__Alloc := Alloc;
[L503]               __tmp__balance_ADDR := balance_ADDR;
[L504]               __tmp__M_Ref_int := M_Ref_int;
[L505]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L506]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L507]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L508]               __tmp__sum_allowance1 := sum_allowance1;
[L509]               __tmp__Length := Length;
[L510]               __tmp__now := now;
[L511]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L512]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L513]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L514]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L515]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L516]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L517]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L518]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L519]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L520]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L521]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L522]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2235]  COND TRUE   !(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399)
[L2236]              revert := true;
[L522]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L523]               assume revert || gas < 0;
[L3597]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:14:59,878 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:14:59,878 INFO  L82        PathProgramCache]: Analyzing trace with hash -1030860967, now seen corresponding path program 1 times
[2020-11-25 05:14:59,879 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:14:59,887 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:14:59,914 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:14:59,914 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:14:59,914 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 05:14:59,914 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:14:59,914 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 05:14:59,914 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 05:14:59,915 INFO  L87              Difference]: Start difference. First operand 2873 states and 3106 transitions. cyclomatic complexity: 235 Second operand 6 states.
[2020-11-25 05:15:00,394 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:15:00,394 INFO  L93              Difference]: Finished difference Result 3055 states and 3311 transitions.
[2020-11-25 05:15:00,394 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 05:15:00,395 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3055 states and 3311 transitions.
[2020-11-25 05:15:00,401 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 05:15:00,408 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3055 states to 3055 states and 3311 transitions.
[2020-11-25 05:15:00,408 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 927
[2020-11-25 05:15:00,408 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 927
[2020-11-25 05:15:00,409 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3055 states and 3311 transitions.
[2020-11-25 05:15:00,411 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:15:00,411 INFO  L728         BuchiCegarLoop]: Abstraction has 3055 states and 3311 transitions.
[2020-11-25 05:15:00,413 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3055 states and 3311 transitions.
[2020-11-25 05:15:00,431 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3055 to 2873.
[2020-11-25 05:15:00,431 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2873 states.
[2020-11-25 05:15:00,433 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2873 states to 2873 states and 3106 transitions.
[2020-11-25 05:15:00,433 INFO  L751         BuchiCegarLoop]: Abstraction has 2873 states and 3106 transitions.
[2020-11-25 05:15:00,433 INFO  L631         BuchiCegarLoop]: Abstraction has 2873 states and 3106 transitions.
[2020-11-25 05:15:00,433 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 05:15:00,434 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2873 states and 3106 transitions.
[2020-11-25 05:15:00,437 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:15:00,437 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:15:00,437 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:15:00,438 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:15:00,438 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_SpaghettiTokenV20 := false;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND FALSE  !(revert)
[L2116]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2073]              assume msgsender_MSG != null;
[L2074]              Balance[this] := 0;
[L2075]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2076]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2077]              sum_balanceOf0[this] := 0;
[L2078]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2079]              sum_allowance1[this] := 0;
[L2080]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2081]              decimals_SpaghettiTokenV2[this] := 18;
[L2082]              name_SpaghettiTokenV2[this] := -432993173;
[L2083]              __var_1 := null;
[L2084]              foodbank_SpaghettiTokenV2[this] := null;
[L2085]              governance_SpaghettiTokenV2[this] := null;
[L2086]              food_SpaghettiTokenV2[this] := 0;
[L2087]              oven_SpaghettiTokenV2[this] := 0;
[L2089]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2090]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2091]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2092]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2093]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2116]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND TRUE   choice == 18
[L3593]              gas := gas - 21000;
[L3594]  COND TRUE   gas >= 0
[L3595]              assume wad_s399 >= 0 && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3596]              assume msgvalue_MSG == 0;
[L3597]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s399 && p1 != dst_s399) && (p2 != src_s399 || p3 != msgsender_MSG)) && src_s399 != dst_s399) && wad_s399 <= balanceOf_SpaghettiTokenV2[this][src_s399]) && wad_s399 <= allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s399] + wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s399 >= 0) && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][src_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][src_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= 0) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiTokenV20 := true;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L497]               havoc __exception;
[L498]               revert := false;
[L499]   COND TRUE   __exception
[L500]               __tmp__Balance := Balance;
[L501]               __tmp__DType := DType;
[L502]               __tmp__Alloc := Alloc;
[L503]               __tmp__balance_ADDR := balance_ADDR;
[L504]               __tmp__M_Ref_int := M_Ref_int;
[L505]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L506]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L507]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L508]               __tmp__sum_allowance1 := sum_allowance1;
[L509]               __tmp__Length := Length;
[L510]               __tmp__now := now;
[L511]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L512]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L513]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L514]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L515]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L516]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L517]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L518]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L519]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L520]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L521]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L522]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND TRUE   src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L2219]  COND FALSE  !(!(__tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= wad_s399))
[L2223]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2224]  CALL        call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG], wad_s399);
[L2008]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]  COND TRUE   !((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76)
[L2010]              revert := true;
[L2224]  RET         call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG], wad_s399);
[L2225]  COND TRUE   revert
[L522]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L523]               assume revert || gas < 0;
[L3597]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND TRUE   choice == 18
[L3593]              gas := gas - 21000;
[L3594]  COND TRUE   gas >= 0
[L3595]              assume wad_s399 >= 0 && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3596]              assume msgvalue_MSG == 0;
[L3597]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s399 && p1 != dst_s399) && (p2 != src_s399 || p3 != msgsender_MSG)) && src_s399 != dst_s399) && wad_s399 <= balanceOf_SpaghettiTokenV2[this][src_s399]) && wad_s399 <= allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s399] + wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s399 >= 0) && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][src_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][src_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= 0) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiTokenV20 := true;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L497]               havoc __exception;
[L498]               revert := false;
[L499]   COND TRUE   __exception
[L500]               __tmp__Balance := Balance;
[L501]               __tmp__DType := DType;
[L502]               __tmp__Alloc := Alloc;
[L503]               __tmp__balance_ADDR := balance_ADDR;
[L504]               __tmp__M_Ref_int := M_Ref_int;
[L505]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L506]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L507]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L508]               __tmp__sum_allowance1 := sum_allowance1;
[L509]               __tmp__Length := Length;
[L510]               __tmp__now := now;
[L511]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L512]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L513]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L514]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L515]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L516]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L517]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L518]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L519]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L520]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L521]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L522]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND TRUE   src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L2219]  COND FALSE  !(!(__tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= wad_s399))
[L2223]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2224]  CALL        call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG], wad_s399);
[L2008]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]  COND TRUE   !((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76)
[L2010]              revert := true;
[L2224]  RET         call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG], wad_s399);
[L2225]  COND TRUE   revert
[L522]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L523]               assume revert || gas < 0;
[L3597]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:15:00,441 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:15:00,441 INFO  L82        PathProgramCache]: Analyzing trace with hash 573873872, now seen corresponding path program 1 times
[2020-11-25 05:15:00,441 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:15:00,451 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:15:00,569 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:15:00,569 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:15:00,569 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 05:15:00,570 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:15:00,570 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 05:15:00,570 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=26, Invalid=156, Unknown=0, NotChecked=0, Total=182
[2020-11-25 05:15:00,570 INFO  L87              Difference]: Start difference. First operand 2873 states and 3106 transitions. cyclomatic complexity: 235 Second operand 14 states.
[2020-11-25 05:15:02,920 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:15:02,920 INFO  L93              Difference]: Finished difference Result 3425 states and 3789 transitions.
[2020-11-25 05:15:02,921 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 05:15:02,921 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3425 states and 3789 transitions.
[2020-11-25 05:15:02,929 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 10
[2020-11-25 05:15:02,938 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3425 states to 3425 states and 3789 transitions.
[2020-11-25 05:15:02,938 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1003
[2020-11-25 05:15:02,938 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1003
[2020-11-25 05:15:02,938 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3425 states and 3789 transitions.
[2020-11-25 05:15:02,941 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:15:02,941 INFO  L728         BuchiCegarLoop]: Abstraction has 3425 states and 3789 transitions.
[2020-11-25 05:15:02,943 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3425 states and 3789 transitions.
[2020-11-25 05:15:02,964 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3425 to 3096.
[2020-11-25 05:15:02,965 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3096 states.
[2020-11-25 05:15:02,967 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3096 states to 3096 states and 3366 transitions.
[2020-11-25 05:15:02,967 INFO  L751         BuchiCegarLoop]: Abstraction has 3096 states and 3366 transitions.
[2020-11-25 05:15:02,967 INFO  L631         BuchiCegarLoop]: Abstraction has 3096 states and 3366 transitions.
[2020-11-25 05:15:02,967 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 05:15:02,968 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3096 states and 3366 transitions.
[2020-11-25 05:15:02,971 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 05:15:02,971 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:15:02,971 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:15:02,972 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:15:02,972 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_SpaghettiTokenV20 := false;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND FALSE  !(revert)
[L2116]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2073]              assume msgsender_MSG != null;
[L2074]              Balance[this] := 0;
[L2075]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2076]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2077]              sum_balanceOf0[this] := 0;
[L2078]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2079]              sum_allowance1[this] := 0;
[L2080]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2081]              decimals_SpaghettiTokenV2[this] := 18;
[L2082]              name_SpaghettiTokenV2[this] := -432993173;
[L2083]              __var_1 := null;
[L2084]              foodbank_SpaghettiTokenV2[this] := null;
[L2085]              governance_SpaghettiTokenV2[this] := null;
[L2086]              food_SpaghettiTokenV2[this] := 0;
[L2087]              oven_SpaghettiTokenV2[this] := 0;
[L2089]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2090]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2091]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2092]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2093]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2116]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND TRUE   choice == 18
[L3593]              gas := gas - 21000;
[L3594]  COND TRUE   gas >= 0
[L3595]              assume wad_s399 >= 0 && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3596]              assume msgvalue_MSG == 0;
[L3597]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s399 && p1 != dst_s399) && (p2 != src_s399 || p3 != msgsender_MSG)) && src_s399 != dst_s399) && wad_s399 <= balanceOf_SpaghettiTokenV2[this][src_s399]) && wad_s399 <= allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s399] + wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s399 >= 0) && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][src_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][src_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= 0) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiTokenV20 := true;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L497]               havoc __exception;
[L498]               revert := false;
[L499]   COND TRUE   __exception
[L500]               __tmp__Balance := Balance;
[L501]               __tmp__DType := DType;
[L502]               __tmp__Alloc := Alloc;
[L503]               __tmp__balance_ADDR := balance_ADDR;
[L504]               __tmp__M_Ref_int := M_Ref_int;
[L505]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L506]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L507]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L508]               __tmp__sum_allowance1 := sum_allowance1;
[L509]               __tmp__Length := Length;
[L510]               __tmp__now := now;
[L511]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L512]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L513]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L514]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L515]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L516]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L517]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L518]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L519]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L520]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L521]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L522]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2235]  COND FALSE  !(!(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399))
[L2239]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2240]  CALL        call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2008]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]  COND TRUE   !((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76)
[L2010]              revert := true;
[L2240]  RET         call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2241]  COND TRUE   revert
[L522]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L523]               assume revert || gas < 0;
[L3597]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND TRUE   choice == 18
[L3593]              gas := gas - 21000;
[L3594]  COND TRUE   gas >= 0
[L3595]              assume wad_s399 >= 0 && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3596]              assume msgvalue_MSG == 0;
[L3597]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s399 && p1 != dst_s399) && (p2 != src_s399 || p3 != msgsender_MSG)) && src_s399 != dst_s399) && wad_s399 <= balanceOf_SpaghettiTokenV2[this][src_s399]) && wad_s399 <= allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s399] + wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s399 >= 0) && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][src_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][src_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= 0) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiTokenV20 := true;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L497]               havoc __exception;
[L498]               revert := false;
[L499]   COND TRUE   __exception
[L500]               __tmp__Balance := Balance;
[L501]               __tmp__DType := DType;
[L502]               __tmp__Alloc := Alloc;
[L503]               __tmp__balance_ADDR := balance_ADDR;
[L504]               __tmp__M_Ref_int := M_Ref_int;
[L505]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L506]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L507]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L508]               __tmp__sum_allowance1 := sum_allowance1;
[L509]               __tmp__Length := Length;
[L510]               __tmp__now := now;
[L511]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L512]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L513]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L514]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L515]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L516]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L517]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L518]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L519]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L520]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L521]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L522]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2235]  COND FALSE  !(!(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399))
[L2239]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2240]  CALL        call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2008]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]  COND TRUE   !((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76)
[L2010]              revert := true;
[L2240]  RET         call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2241]  COND TRUE   revert
[L522]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L523]               assume revert || gas < 0;
[L3597]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:15:02,975 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:15:02,975 INFO  L82        PathProgramCache]: Analyzing trace with hash -644444398, now seen corresponding path program 1 times
[2020-11-25 05:15:02,975 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:15:02,985 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:15:03,008 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:15:03,008 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:15:03,009 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 05:15:03,009 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:15:03,009 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 05:15:03,009 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 05:15:03,009 INFO  L87              Difference]: Start difference. First operand 3096 states and 3366 transitions. cyclomatic complexity: 274 Second operand 7 states.
[2020-11-25 05:15:03,078 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:15:03,078 INFO  L93              Difference]: Finished difference Result 3120 states and 3397 transitions.
[2020-11-25 05:15:03,078 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 05:15:03,078 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3120 states and 3397 transitions.
[2020-11-25 05:15:03,084 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 05:15:03,113 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3120 states to 3108 states and 3384 transitions.
[2020-11-25 05:15:03,113 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 905
[2020-11-25 05:15:03,114 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 905
[2020-11-25 05:15:03,115 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3108 states and 3384 transitions.
[2020-11-25 05:15:03,117 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:15:03,117 INFO  L728         BuchiCegarLoop]: Abstraction has 3108 states and 3384 transitions.
[2020-11-25 05:15:03,120 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3108 states and 3384 transitions.
[2020-11-25 05:15:03,136 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3108 to 3104.
[2020-11-25 05:15:03,136 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3104 states.
[2020-11-25 05:15:03,138 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3104 states to 3104 states and 3378 transitions.
[2020-11-25 05:15:03,139 INFO  L751         BuchiCegarLoop]: Abstraction has 3104 states and 3378 transitions.
[2020-11-25 05:15:03,139 INFO  L631         BuchiCegarLoop]: Abstraction has 3104 states and 3378 transitions.
[2020-11-25 05:15:03,139 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 05:15:03,139 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3104 states and 3378 transitions.
[2020-11-25 05:15:03,142 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 05:15:03,142 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:15:03,142 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:15:03,143 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:15:03,143 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_SpaghettiTokenV20 := false;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND FALSE  !(revert)
[L2116]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2073]              assume msgsender_MSG != null;
[L2074]              Balance[this] := 0;
[L2075]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2076]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2077]              sum_balanceOf0[this] := 0;
[L2078]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2079]              sum_allowance1[this] := 0;
[L2080]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2081]              decimals_SpaghettiTokenV2[this] := 18;
[L2082]              name_SpaghettiTokenV2[this] := -432993173;
[L2083]              __var_1 := null;
[L2084]              foodbank_SpaghettiTokenV2[this] := null;
[L2085]              governance_SpaghettiTokenV2[this] := null;
[L2086]              food_SpaghettiTokenV2[this] := 0;
[L2087]              oven_SpaghettiTokenV2[this] := 0;
[L2089]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2090]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2091]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2092]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2093]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2116]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND TRUE   choice == 18
[L3593]              gas := gas - 21000;
[L3594]  COND TRUE   gas >= 0
[L3595]              assume wad_s399 >= 0 && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3596]              assume msgvalue_MSG == 0;
[L3597]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s399 && p1 != dst_s399) && (p2 != src_s399 || p3 != msgsender_MSG)) && src_s399 != dst_s399) && wad_s399 <= balanceOf_SpaghettiTokenV2[this][src_s399]) && wad_s399 <= allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s399] + wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s399 >= 0) && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][src_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][src_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= 0) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiTokenV20 := true;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L497]               havoc __exception;
[L498]               revert := false;
[L499]   COND TRUE   __exception
[L500]               __tmp__Balance := Balance;
[L501]               __tmp__DType := DType;
[L502]               __tmp__Alloc := Alloc;
[L503]               __tmp__balance_ADDR := balance_ADDR;
[L504]               __tmp__M_Ref_int := M_Ref_int;
[L505]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L506]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L507]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L508]               __tmp__sum_allowance1 := sum_allowance1;
[L509]               __tmp__Length := Length;
[L510]               __tmp__now := now;
[L511]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L512]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L513]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L514]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L515]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L516]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L517]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L518]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L519]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L520]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L521]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L522]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2235]  COND FALSE  !(!(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399))
[L2239]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2240]  CALL        call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2008]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]  COND FALSE  !(!((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76))
[L2240]  RET         call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2241]  COND FALSE  !(revert)
[L2247]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2248]              __tmp__balanceOf_SpaghettiTokenV2[this][src_s399] := __var_7;
[L2249]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2250]              one_s399 := wad_s399 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2251]              __var_9 := 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2252]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2253]  CALL        call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2026]              z_s104 := nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2027]  COND TRUE   !(y_s104 == 0 || nonlinearDiv(nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == x_s104)
[L2028]              revert := true;
[L2253]  RET         call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2254]  COND TRUE   revert
[L522]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L523]               assume revert || gas < 0;
[L3597]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND TRUE   choice == 18
[L3593]              gas := gas - 21000;
[L3594]  COND TRUE   gas >= 0
[L3595]              assume wad_s399 >= 0 && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3596]              assume msgvalue_MSG == 0;
[L3597]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s399 && p1 != dst_s399) && (p2 != src_s399 || p3 != msgsender_MSG)) && src_s399 != dst_s399) && wad_s399 <= balanceOf_SpaghettiTokenV2[this][src_s399]) && wad_s399 <= allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s399] + wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s399 >= 0) && wad_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][src_s399] >= 0) && balanceOf_SpaghettiTokenV2[this][src_s399] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= 0) && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiTokenV20 := true;
[L3]                 call_transferFrom_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L497]               havoc __exception;
[L498]               revert := false;
[L499]   COND TRUE   __exception
[L500]               __tmp__Balance := Balance;
[L501]               __tmp__DType := DType;
[L502]               __tmp__Alloc := Alloc;
[L503]               __tmp__balance_ADDR := balance_ADDR;
[L504]               __tmp__M_Ref_int := M_Ref_int;
[L505]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L506]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L507]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L508]               __tmp__sum_allowance1 := sum_allowance1;
[L509]               __tmp__Length := Length;
[L510]               __tmp__now := now;
[L511]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L512]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L513]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L514]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L515]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L516]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L517]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L518]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L519]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L520]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L521]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L522]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2235]  COND FALSE  !(!(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399))
[L2239]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2240]  CALL        call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2008]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]  COND FALSE  !(!((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76))
[L2240]  RET         call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2241]  COND FALSE  !(revert)
[L2247]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2248]              __tmp__balanceOf_SpaghettiTokenV2[this][src_s399] := __var_7;
[L2249]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2250]              one_s399 := wad_s399 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2251]              __var_9 := 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2252]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2253]  CALL        call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2026]              z_s104 := nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2027]  COND TRUE   !(y_s104 == 0 || nonlinearDiv(nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == x_s104)
[L2028]              revert := true;
[L2253]  RET         call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2254]  COND TRUE   revert
[L522]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L523]               assume revert || gas < 0;
[L3597]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, src_s399, dst_s399, wad_s399);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:15:03,149 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:15:03,149 INFO  L82        PathProgramCache]: Analyzing trace with hash 1572122385, now seen corresponding path program 1 times
[2020-11-25 05:15:03,150 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:15:03,159 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:15:03,181 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:15:03,239 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:15:03,239 INFO  L82        PathProgramCache]: Analyzing trace with hash -883915777, now seen corresponding path program 1 times
[2020-11-25 05:15:03,239 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:15:03,244 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:15:03,250 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:15:03,261 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:15:03,261 INFO  L82        PathProgramCache]: Analyzing trace with hash -525358353, now seen corresponding path program 1 times
[2020-11-25 05:15:03,262 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:15:03,277 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:15:03,294 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
[2020-11-25 05:15:03,909 WARN  L188               SmtUtils]: Spent 294.00 ms on a formula simplification. DAG size of input: 112 DAG size of output: 111
[2020-11-25 05:15:04,608 WARN  L188               SmtUtils]: Spent 695.00 ms on a formula simplification. DAG size of input: 226 DAG size of output: 216
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2473 to 4943
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6271 to 12541
[2020-11-25 05:15:05,554 WARN  L188               SmtUtils]: Spent 882.00 ms on a formula simplification. DAG size of input: 172 DAG size of output: 150
[2020-11-25 05:15:06,159 WARN  L188               SmtUtils]: Spent 603.00 ms on a formula simplification that was a NOOP. DAG size: 323
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 7933 to 15859
[2020-11-25 05:15:09,882 WARN  L188               SmtUtils]: Spent 3.68 s on a formula simplification. DAG size of input: 296 DAG size of output: 277
[2020-11-25 05:15:13,659 WARN  L188               SmtUtils]: Spent 3.77 s on a formula simplification. DAG size of input: 321 DAG size of output: 311
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 13313 to 26597
Garbage collection #9: 26597 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 26597 to 53189
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
[2020-11-25 05:15:19,454 WARN  L188               SmtUtils]: Spent 5.74 s on a formula simplification. DAG size of input: 282 DAG size of output: 218
[2020-11-25 05:15:21,441 WARN  L188               SmtUtils]: Spent 1.99 s on a formula simplification that was a NOOP. DAG size: 398
Garbage collection #1: 151 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 151 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 9181 to 18353
Garbage collection #8: 18353 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 18353 to 36697
[2020-11-25 05:15:41,922 WARN  L188               SmtUtils]: Spent 20.38 s on a formula simplification. DAG size of input: 362 DAG size of output: 329
[2020-11-25 05:15:48,955 WARN  L188               SmtUtils]: Spent 7.03 s on a formula simplification that was a NOOP. DAG size: 329
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 15859 to 31699
Garbage collection #9: 31699 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 31699 to 63397
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 12073 to 24137
Garbage collection #9: 24137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 24137 to 48271
Garbage collection #10: 48271 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 48271 to 96527
Received shutdown request...
Cannot interrupt operation gracefully because timeout expired. Forcing shutdown
