This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 15:01:44,694 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 15:01:44,696 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 15:01:44,706 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 15:01:44,706 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 15:01:44,707 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 15:01:44,708 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 15:01:44,709 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 15:01:44,711 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 15:01:44,711 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 15:01:44,712 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 15:01:44,712 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 15:01:44,713 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 15:01:44,713 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 15:01:44,714 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 15:01:44,715 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 15:01:44,715 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 15:01:44,717 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 15:01:44,718 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 15:01:44,719 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 15:01:44,720 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 15:01:44,720 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 15:01:44,722 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 15:01:44,722 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 15:01:44,722 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 15:01:44,723 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 15:01:44,723 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 15:01:44,724 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 15:01:44,724 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 15:01:44,724 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 15:01:44,724 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 15:01:44,725 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 15:01:44,725 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 15:01:44,726 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 15:01:44,726 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 15:01:44,727 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 15:01:44,727 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 15:01:44,727 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 15:01:44,727 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 15:01:44,728 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 15:01:44,728 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 15:01:44,729 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 15:01:44,736 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 15:01:44,736 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 15:01:44,737 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 15:01:44,737 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 15:01:44,737 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 15:01:44,738 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 15:01:44,738 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 15:01:44,738 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 15:01:44,738 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 15:01:44,738 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 15:01:44,738 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 15:01:44,739 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 15:01:44,739 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 15:01:44,739 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 15:01:44,739 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 15:01:44,739 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 15:01:44,739 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 15:01:44,739 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 15:01:44,739 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 15:01:44,740 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 15:01:44,740 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 15:01:44,740 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 15:01:44,740 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 15:01:44,740 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 15:01:44,740 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 15:01:44,740 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 15:01:44,764 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 15:01:44,779 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 15:01:44,783 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 15:01:44,784 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 15:01:44,785 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 15:01:44,785 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl
[2020-11-25 15:01:44,785 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl'
[2020-11-25 15:01:44,886 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 15:01:44,888 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 15:01:44,888 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 15:01:44,888 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 15:01:44,888 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 15:01:44,905 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:44" (1/1) ...
[2020-11-25 15:01:44,906 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:44" (1/1) ...
[2020-11-25 15:01:44,940 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:44" (1/1) ...
[2020-11-25 15:01:44,941 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:44" (1/1) ...
[2020-11-25 15:01:44,965 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:44" (1/1) ...
[2020-11-25 15:01:44,979 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:44" (1/1) ...
[2020-11-25 15:01:44,989 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:44" (1/1) ...
[2020-11-25 15:01:45,003 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 15:01:45,003 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 15:01:45,003 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 15:01:45,006 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 15:01:45,009 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:44" (1/1) ...
[2020-11-25 15:01:45,028 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(BasicToken.transfer(to, value), msg.sender == to && value > balances_BasicToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(BasicToken.transfer)))
[2020-11-25 15:01:45,033 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(BasicToken.transfer(to, value), msg.sender == to && value > balances_BasicToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(BasicToken.transfer)))
[2020-11-25 15:01:45,040 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(BasicToken.transfer(to, value), msg.sender == to && value > balances_BasicToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(BasicToken.transfer)))
[2020-11-25 15:01:45,047 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==_to_s340 && _value_s340>balances_BasicToken[this][msg.sender] ) && _value_s340>=0 ) && _value_s340<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][_to_s340]>=0 ) && balances_BasicToken[this][_to_s340]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][msg.sender]>=0 ) && balances_BasicToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>],IdentifierExpression[_to_s340,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]],BinaryExpression[COMPGT,IdentifierExpression[_value_s340,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s340,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s340,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[_to_s340,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[_to_s340,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 15:01:45,054 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(BasicToken.transfer(to, value), msg.sender == to && value > balances_BasicToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(BasicToken.transfer)))
[2020-11-25 15:01:45,054 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_BasicToken0) ==> ( <>AP(fail_transfer_BasicToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 15:01:45,067 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:01:45 PropertyContainer
[2020-11-25 15:01:45,067 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 15:01:45,067 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 15:01:45,067 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 15:01:45,067 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 15:01:45,068 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:44" (1/2) ...
[2020-11-25 15:01:45,069 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 15:01:45,069 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 15:01:45,095 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:01:45" (2/2) ...
[2020-11-25 15:01:45,095 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 15:01:45,096 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 15:01:45,096 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 15:01:45,096 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 15:01:45,097 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:44" (1/2) ...
[2020-11-25 15:01:45,148 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 15:01:45,148 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:01:45,149 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 15:01:45,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 15:01:45,149 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:01:45,149 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 15:01:45,149 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 15:01:45,149 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:01:45,149 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 15:01:45,149 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 15:01:45,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 15:01:45,149 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 15:01:45,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 15:01:45,150 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 15:01:45,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 15:01:45,150 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 15:01:45,150 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-25 15:01:45,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-25 15:01:45,150 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-25 15:01:45,150 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-25 15:01:45,150 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-25 15:01:45,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20Basic
[2020-11-25 15:01:45,150 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 15:01:45,151 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-25 15:01:45,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-25 15:01:45,151 INFO  L130     BoogieDeclarations]: Found specification of procedure allowAddress~address~bool_BasicToken
[2020-11-25 15:01:45,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowAddress~address~bool_BasicToken
[2020-11-25 15:01:45,151 INFO  L130     BoogieDeclarations]: Found specification of procedure lockAddress~address~bool_BasicToken
[2020-11-25 15:01:45,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockAddress~address~bool_BasicToken
[2020-11-25 15:01:45,151 INFO  L130     BoogieDeclarations]: Found specification of procedure setLocked~bool_BasicToken
[2020-11-25 15:01:45,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure setLocked~bool_BasicToken
[2020-11-25 15:01:45,151 INFO  L130     BoogieDeclarations]: Found specification of procedure canTransfer~address_BasicToken
[2020-11-25 15:01:45,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure canTransfer~address_BasicToken
[2020-11-25 15:01:45,152 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-25 15:01:45,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-25 15:01:45,152 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-25 15:01:45,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-25 15:01:45,152 INFO  L130     BoogieDeclarations]: Found specification of procedure allowedAddresses~address_BasicToken
[2020-11-25 15:01:45,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowedAddresses~address_BasicToken
[2020-11-25 15:01:45,152 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAddresses~address_BasicToken
[2020-11-25 15:01:45,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAddresses~address_BasicToken
[2020-11-25 15:01:45,152 INFO  L130     BoogieDeclarations]: Found specification of procedure locked_BasicToken
[2020-11-25 15:01:45,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure locked_BasicToken
[2020-11-25 15:01:45,152 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:01:45,153 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 15:01:45,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 15:01:45,153 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 15:01:45,153 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 15:01:45,153 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 15:01:45,153 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 15:01:45,153 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-25 15:01:45,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-25 15:01:45,153 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 15:01:45,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 15:01:45,153 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-25 15:01:45,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-25 15:01:45,154 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-25 15:01:45,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-25 15:01:45,154 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 15:01:45,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 15:01:45,154 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 15:01:45,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 15:01:45,154 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-25 15:01:45,154 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken
[2020-11-25 15:01:45,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken
[2020-11-25 15:01:45,155 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken
[2020-11-25 15:01:45,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken
[2020-11-25 15:01:45,155 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU_NoBaseCtor__success
[2020-11-25 15:01:45,155 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU
[2020-11-25 15:01:45,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU
[2020-11-25 15:01:45,155 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ECU
[2020-11-25 15:01:45,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ECU
[2020-11-25 15:01:45,155 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ECU
[2020-11-25 15:01:45,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ECU
[2020-11-25 15:01:45,155 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ECU
[2020-11-25 15:01:45,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ECU
[2020-11-25 15:01:45,156 INFO  L130     BoogieDeclarations]: Found specification of procedure initialSupply_ECU
[2020-11-25 15:01:45,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure initialSupply_ECU
[2020-11-25 15:01:45,156 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 15:01:45,156 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 15:01:45,156 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 15:01:45,156 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 15:01:45,156 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 15:01:45,156 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 15:01:45,156 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 15:01:45,156 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 15:01:45,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-25 15:01:45,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-25 15:01:45,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-25 15:01:45,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-25 15:01:45,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 15:01:45,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 15:01:45,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-25 15:01:45,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-25 15:01:45,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BurnableToken
[2020-11-25 15:01:45,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BurnableToken
[2020-11-25 15:01:45,158 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ECU
[2020-11-25 15:01:45,158 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 15:01:45,158 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 15:01:45,158 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:01:45,158 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 15:01:45,158 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 15:01:45,158 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:45,158 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:45,158 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:45,158 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:45,159 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 15:01:45,159 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 15:01:45,159 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 15:01:45,159 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 15:01:45,159 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 15:01:45,159 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 15:01:45,159 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 15:01:45,159 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 15:01:45,159 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 15:01:45,159 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 15:01:45,160 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic__success
[2020-11-25 15:01:45,160 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic__fail
[2020-11-25 15:01:45,160 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 15:01:45,160 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-25 15:01:45,160 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-25 15:01:45,160 INFO  L130     BoogieDeclarations]: Found specification of procedure allowAddress~address~bool_BasicToken__success
[2020-11-25 15:01:45,160 INFO  L130     BoogieDeclarations]: Found specification of procedure allowAddress~address~bool_BasicToken__fail
[2020-11-25 15:01:45,160 INFO  L130     BoogieDeclarations]: Found specification of procedure lockAddress~address~bool_BasicToken__success
[2020-11-25 15:01:45,160 INFO  L130     BoogieDeclarations]: Found specification of procedure lockAddress~address~bool_BasicToken__fail
[2020-11-25 15:01:45,160 INFO  L130     BoogieDeclarations]: Found specification of procedure setLocked~bool_BasicToken__success
[2020-11-25 15:01:45,160 INFO  L130     BoogieDeclarations]: Found specification of procedure setLocked~bool_BasicToken__fail
[2020-11-25 15:01:45,161 INFO  L130     BoogieDeclarations]: Found specification of procedure canTransfer~address_BasicToken__success
[2020-11-25 15:01:45,161 INFO  L130     BoogieDeclarations]: Found specification of procedure canTransfer~address_BasicToken__fail
[2020-11-25 15:01:45,161 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 15:01:45,161 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 15:01:45,161 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-25 15:01:45,161 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-25 15:01:45,161 INFO  L130     BoogieDeclarations]: Found specification of procedure allowedAddresses~address_BasicToken__success
[2020-11-25 15:01:45,161 INFO  L130     BoogieDeclarations]: Found specification of procedure allowedAddresses~address_BasicToken__fail
[2020-11-25 15:01:45,161 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAddresses~address_BasicToken__success
[2020-11-25 15:01:45,161 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAddresses~address_BasicToken__fail
[2020-11-25 15:01:45,162 INFO  L130     BoogieDeclarations]: Found specification of procedure locked_BasicToken__success
[2020-11-25 15:01:45,162 INFO  L130     BoogieDeclarations]: Found specification of procedure locked_BasicToken__fail
[2020-11-25 15:01:45,162 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:01:45,162 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 15:01:45,162 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 15:01:45,162 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 15:01:45,162 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-25 15:01:45,162 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-25 15:01:45,162 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 15:01:45,162 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 15:01:45,163 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-25 15:01:45,163 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 15:01:45,163 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-25 15:01:45,163 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-25 15:01:45,163 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 15:01:45,163 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 15:01:45,163 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 15:01:45,163 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 15:01:45,163 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-25 15:01:45,163 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__success
[2020-11-25 15:01:45,164 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__fail
[2020-11-25 15:01:45,164 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__success
[2020-11-25 15:01:45,164 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__fail
[2020-11-25 15:01:45,164 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU_NoBaseCtor__fail
[2020-11-25 15:01:45,164 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU__success
[2020-11-25 15:01:45,164 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU__fail
[2020-11-25 15:01:45,164 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ECU__success
[2020-11-25 15:01:45,164 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ECU__fail
[2020-11-25 15:01:45,164 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ECU__success
[2020-11-25 15:01:45,164 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ECU__fail
[2020-11-25 15:01:45,164 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ECU__success
[2020-11-25 15:01:45,165 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ECU__fail
[2020-11-25 15:01:45,165 INFO  L130     BoogieDeclarations]: Found specification of procedure initialSupply_ECU__success
[2020-11-25 15:01:45,165 INFO  L130     BoogieDeclarations]: Found specification of procedure initialSupply_ECU__fail
[2020-11-25 15:01:45,165 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 15:01:45,165 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 15:01:45,165 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 15:01:45,165 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 15:01:45,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 15:01:45,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 15:01:45,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:01:45,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:01:45,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 15:01:45,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 15:01:45,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:45,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:01:45,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:45,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 15:01:45,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:45,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 15:01:45,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:45,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:01:45,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 15:01:45,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 15:01:45,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 15:01:45,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 15:01:45,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 15:01:45,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 15:01:45,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 15:01:45,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 15:01:45,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 15:01:45,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 15:01:45,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 15:01:45,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 15:01:45,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20Basic__fail
[2020-11-25 15:01:45,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20Basic__success
[2020-11-25 15:01:45,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 15:01:45,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 15:01:45,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-25 15:01:45,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-25 15:01:45,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowAddress~address~bool_BasicToken__fail
[2020-11-25 15:01:45,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowAddress~address~bool_BasicToken__success
[2020-11-25 15:01:45,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockAddress~address~bool_BasicToken__fail
[2020-11-25 15:01:45,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockAddress~address~bool_BasicToken__success
[2020-11-25 15:01:45,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure setLocked~bool_BasicToken__fail
[2020-11-25 15:01:45,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure setLocked~bool_BasicToken__success
[2020-11-25 15:01:45,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure canTransfer~address_BasicToken__fail
[2020-11-25 15:01:45,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure canTransfer~address_BasicToken__success
[2020-11-25 15:01:45,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 15:01:45,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 15:01:45,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-25 15:01:45,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-25 15:01:45,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowedAddresses~address_BasicToken__fail
[2020-11-25 15:01:45,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowedAddresses~address_BasicToken__success
[2020-11-25 15:01:45,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAddresses~address_BasicToken__fail
[2020-11-25 15:01:45,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAddresses~address_BasicToken__success
[2020-11-25 15:01:45,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure locked_BasicToken__fail
[2020-11-25 15:01:45,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure locked_BasicToken__success
[2020-11-25 15:01:45,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:01:45,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:01:45,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 15:01:45,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 15:01:45,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 15:01:45,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 15:01:45,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-25 15:01:45,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-25 15:01:45,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 15:01:45,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 15:01:45,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 15:01:45,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-25 15:01:45,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-25 15:01:45,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-25 15:01:45,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 15:01:45,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 15:01:45,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 15:01:45,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 15:01:45,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-25 15:01:45,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-25 15:01:45,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__fail
[2020-11-25 15:01:45,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__success
[2020-11-25 15:01:45,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__fail
[2020-11-25 15:01:45,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__success
[2020-11-25 15:01:45,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU_NoBaseCtor__fail
[2020-11-25 15:01:45,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU_NoBaseCtor__success
[2020-11-25 15:01:45,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU__fail
[2020-11-25 15:01:45,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU__success
[2020-11-25 15:01:45,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ECU__fail
[2020-11-25 15:01:45,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ECU__success
[2020-11-25 15:01:45,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ECU__fail
[2020-11-25 15:01:45,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ECU__success
[2020-11-25 15:01:45,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ECU__fail
[2020-11-25 15:01:45,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ECU__success
[2020-11-25 15:01:45,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure initialSupply_ECU__fail
[2020-11-25 15:01:45,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure initialSupply_ECU__success
[2020-11-25 15:01:45,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 15:01:45,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 15:01:45,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 15:01:45,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 15:01:45,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 15:01:45,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 15:01:45,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 15:01:45,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 15:01:45,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 15:01:45,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 15:01:45,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 15:01:45,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 15:01:45,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-25 15:01:45,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-25 15:01:45,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-25 15:01:45,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-25 15:01:45,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 15:01:45,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 15:01:45,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-25 15:01:45,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-25 15:01:45,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BurnableToken
[2020-11-25 15:01:45,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BurnableToken
[2020-11-25 15:01:45,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ECU
[2020-11-25 15:01:45,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 15:01:45,175 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 15:01:45,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 15:01:45,747 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:01:45,747 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:01:46,122 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 15:01:46,122 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-25 15:01:46,124 INFO  L202        PluginConnector]: Adding new model ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:01:46 BoogieIcfgContainer
[2020-11-25 15:01:46,124 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:01:45" (2/2) ...
[2020-11-25 15:01:46,124 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 15:01:46,124 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@741fea4e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:01:46, skipping insertion in model container
[2020-11-25 15:01:46,124 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 15:01:46,124 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 15:01:46,124 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 15:01:46,125 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 15:01:46,125 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:44" (1/3) ...
[2020-11-25 15:01:46,125 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2d639098 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:01:46, skipping insertion in model container
[2020-11-25 15:01:46,126 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:01:45" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 15:01:46,157 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:01:46 NWAContainer
[2020-11-25 15:01:46,157 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 15:01:46,157 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 15:01:46,157 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 15:01:46,158 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 15:01:46,158 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:01:46" (3/4) ...
[2020-11-25 15:01:46,159 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@73c943b8 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:01:46, skipping insertion in model container
[2020-11-25 15:01:46,159 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:01:46" (4/4) ...
[2020-11-25 15:01:46,161 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 15:01:46,165 INFO  L110   BuchiProductObserver]: Initial RCFG 2504 locations, 3474 edges
[2020-11-25 15:01:46,165 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 15:01:46,176 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 15:01:47,967 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 15:01:47,975 INFO  L110   BuchiProductObserver]: BuchiProgram size 6258 locations, 11456 edges
[2020-11-25 15:01:47,976 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:01:47 BoogieIcfgContainer
[2020-11-25 15:01:47,976 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 15:01:47,976 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 15:01:47,976 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 15:01:47,977 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 15:01:47,978 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:01:47" (1/1) ...
[2020-11-25 15:01:48,108 INFO  L313           BlockEncoder]: Initial Icfg 6258 locations, 11456 edges
[2020-11-25 15:01:48,108 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 15:01:48,109 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 15:01:48,109 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 15:01:48,109 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 15:01:48,125 INFO  L70    emoveInfeasibleEdges]: Removed 93 edges and 19 locations because of local infeasibility
[2020-11-25 15:01:48,137 INFO  L70        RemoveSinkStates]: Removed 68 edges and 36 locations by removing sink states
[2020-11-25 15:01:48,151 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 15:01:48,156 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 15:01:48,160 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 15:01:48,161 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 15:01:48,164 INFO  L313           BlockEncoder]: Encoded RCFG 6169 locations, 11245 edges
[2020-11-25 15:01:48,165 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:01:48 BasicIcfg
[2020-11-25 15:01:48,165 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 15:01:48,165 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 15:01:48,165 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 15:01:48,167 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 15:01:48,167 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:01:48,167 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:44" (1/6) ...
[2020-11-25 15:01:48,169 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3a2f13bc and model type ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:01:48, skipping insertion in model container
[2020-11-25 15:01:48,169 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:01:48,169 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:01:45" (2/6) ...
[2020-11-25 15:01:48,169 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3a2f13bc and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:01:48, skipping insertion in model container
[2020-11-25 15:01:48,169 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:01:48,169 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:01:46" (3/6) ...
[2020-11-25 15:01:48,169 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3a2f13bc and model type ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:01:48, skipping insertion in model container
[2020-11-25 15:01:48,169 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:01:48,169 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:01:46" (4/6) ...
[2020-11-25 15:01:48,169 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3a2f13bc and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:01:48, skipping insertion in model container
[2020-11-25 15:01:48,169 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:01:48,170 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:01:47" (5/6) ...
[2020-11-25 15:01:48,170 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3a2f13bc and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 03:01:48, skipping insertion in model container
[2020-11-25 15:01:48,170 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:01:48,170 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:01:48" (6/6) ...
[2020-11-25 15:01:48,171 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self-fail.bpl_BEv2
[2020-11-25 15:01:48,206 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 15:01:48,206 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 15:01:48,206 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 15:01:48,207 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 15:01:48,207 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 15:01:48,207 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 15:01:48,207 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 15:01:48,207 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 15:01:48,207 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 15:01:48,257 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6169 states.
[2020-11-25 15:01:48,311 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:01:48,311 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:01:48,311 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:01:48,318 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:01:48,319 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:01:48,319 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 15:01:48,319 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6169 states.
[2020-11-25 15:01:48,344 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:01:48,344 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:01:48,344 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:01:48,346 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:01:48,346 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_BasicToken0 := false;
[L2]                 call_transfer_BasicToken0 := false;
[L2]     CALL        call main();
[L7234]              assume null == 0;
[L7235]  CALL        call this := FreshRefGenerator__success();
[L3065]              havoc newRef;
[L3066]              assume Alloc[newRef] == false;
[L3067]              Alloc[newRef] := true;
[L3068]              assume newRef != null;
[L7235]  RET         call this := FreshRefGenerator__success();
[L7236]              assume now >= 0;
[L7237]              assume DType[this] == ECU;
[L7238]              assume msgvalue_MSG == 0;
[L7239]              gas := gas - 53000;
[L7240]  CALL        call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L1849]              havoc __exception;
[L1850]              revert := false;
[L1851]  COND FALSE  !(__exception)
[L1880]  CALL        call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L4151]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L4151]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  COND TRUE   revert
[L1880]  RET         call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]              assume !revert && gas >= 0;
[L7240]  RET         call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L7241]              assume !revert && gas >= 0;

Loop:
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND TRUE   choice == 22
[L7089]              gas := gas - 21000;
[L7090]  COND FALSE  !(gas >= 0)
[L7244]  RET         call CorralChoice_ECU(this);

[2020-11-25 15:01:48,361 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:01:48,361 INFO  L82        PathProgramCache]: Analyzing trace with hash -101320514, now seen corresponding path program 1 times
[2020-11-25 15:01:48,365 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:01:48,388 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:01:48,431 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:01:48,433 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:01:48,433 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:01:48,844 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:01:48,853 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:01:48,853 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:01:48,854 INFO  L87              Difference]: Start difference. First operand 6169 states. Second operand 4 states.
[2020-11-25 15:01:49,361 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:01:49,361 INFO  L93              Difference]: Finished difference Result 3372 states and 3794 transitions.
[2020-11-25 15:01:49,361 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:01:49,363 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3372 states and 3794 transitions.
[2020-11-25 15:01:49,380 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:01:49,404 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3372 states to 3368 states and 3786 transitions.
[2020-11-25 15:01:49,405 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 15:01:49,407 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1011
[2020-11-25 15:01:49,408 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3368 states and 3786 transitions.
[2020-11-25 15:01:49,416 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:01:49,416 INFO  L728         BuchiCegarLoop]: Abstraction has 3368 states and 3786 transitions.
[2020-11-25 15:01:49,438 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3368 states and 3786 transitions.
[2020-11-25 15:01:49,491 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3368 to 3368.
[2020-11-25 15:01:49,492 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3368 states.
[2020-11-25 15:01:49,499 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3368 states to 3368 states and 3786 transitions.
[2020-11-25 15:01:49,500 INFO  L751         BuchiCegarLoop]: Abstraction has 3368 states and 3786 transitions.
[2020-11-25 15:01:49,500 INFO  L631         BuchiCegarLoop]: Abstraction has 3368 states and 3786 transitions.
[2020-11-25 15:01:49,500 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 15:01:49,500 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3368 states and 3786 transitions.
[2020-11-25 15:01:49,509 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:01:49,509 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:01:49,509 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:01:49,510 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:01:49,511 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_BasicToken0 := false;
[L2]                 call_transfer_BasicToken0 := false;
[L2]     CALL        call main();
[L7234]              assume null == 0;
[L7235]  CALL        call this := FreshRefGenerator__success();
[L3065]              havoc newRef;
[L3066]              assume Alloc[newRef] == false;
[L3067]              Alloc[newRef] := true;
[L3068]              assume newRef != null;
[L7235]  RET         call this := FreshRefGenerator__success();
[L7236]              assume now >= 0;
[L7237]              assume DType[this] == ECU;
[L7238]              assume msgvalue_MSG == 0;
[L7239]              gas := gas - 53000;
[L7240]  CALL        call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L1849]              havoc __exception;
[L1850]              revert := false;
[L1851]  COND FALSE  !(__exception)
[L1880]  CALL        call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L4151]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L4151]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  COND TRUE   revert
[L1880]  RET         call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]              assume !revert && gas >= 0;
[L7240]  RET         call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L7241]              assume !revert && gas >= 0;
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND FALSE  !(choice == 22)
[L7094]  COND FALSE  !(choice == 21)
[L7100]  COND FALSE  !(choice == 20)
[L7106]  COND FALSE  !(choice == 19)
[L7112]  COND TRUE   choice == 18
[L7113]              gas := gas - 21000;
[L7114]  COND TRUE   gas >= 0
[L7115]              assume _value_s340 >= 0 && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7116]              assume msgvalue_MSG == 0;
[L7117]  CALL        call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s340 && _value_s340 > balances_BasicToken[this][msgsender_MSG]) && _value_s340 >= 0) && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s340] >= 0) && balances_BasicToken[this][_to_s340] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BasicToken0 := true;
[L2]                 call_transfer_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND FALSE  !(__exception)
[L881]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L3511]              __var_2 := null;
[L3512]  COND TRUE   !(_to_s340 != null)
[L3513]              revert := true;
[L881]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L882]               assume !revert && gas >= 0;
[L7117]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L7244]  RET         call CorralChoice_ECU(this);

Loop:
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND FALSE  !(choice == 22)
[L7094]  COND FALSE  !(choice == 21)
[L7100]  COND FALSE  !(choice == 20)
[L7106]  COND FALSE  !(choice == 19)
[L7112]  COND TRUE   choice == 18
[L7113]              gas := gas - 21000;
[L7114]  COND TRUE   gas >= 0
[L7115]              assume _value_s340 >= 0 && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7116]              assume msgvalue_MSG == 0;
[L7117]  CALL        call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s340 && _value_s340 > balances_BasicToken[this][msgsender_MSG]) && _value_s340 >= 0) && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s340] >= 0) && balances_BasicToken[this][_to_s340] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BasicToken0 := true;
[L2]                 call_transfer_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND FALSE  !(__exception)
[L881]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L3511]              __var_2 := null;
[L3512]  COND TRUE   !(_to_s340 != null)
[L3513]              revert := true;
[L881]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L882]               assume !revert && gas >= 0;
[L7117]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L7244]  RET         call CorralChoice_ECU(this);

[2020-11-25 15:01:49,514 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:01:49,514 INFO  L82        PathProgramCache]: Analyzing trace with hash 1143790520, now seen corresponding path program 1 times
[2020-11-25 15:01:49,515 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:01:49,523 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:01:49,545 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:01:49,545 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:01:49,545 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:01:49,546 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:01:49,547 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:01:49,547 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:01:49,547 INFO  L87              Difference]: Start difference. First operand 3368 states and 3786 transitions. cyclomatic complexity: 420 Second operand 4 states.
[2020-11-25 15:01:50,098 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:01:50,098 INFO  L93              Difference]: Finished difference Result 4057 states and 4506 transitions.
[2020-11-25 15:01:50,098 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:01:50,099 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4057 states and 4506 transitions.
[2020-11-25 15:01:50,113 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:01:50,126 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4057 states to 3961 states and 4398 transitions.
[2020-11-25 15:01:50,126 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1182
[2020-11-25 15:01:50,127 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1182
[2020-11-25 15:01:50,128 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3961 states and 4398 transitions.
[2020-11-25 15:01:50,134 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:01:50,134 INFO  L728         BuchiCegarLoop]: Abstraction has 3961 states and 4398 transitions.
[2020-11-25 15:01:50,138 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3961 states and 4398 transitions.
[2020-11-25 15:01:50,169 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3961 to 3549.
[2020-11-25 15:01:50,169 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3549 states.
[2020-11-25 15:01:50,173 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3549 states to 3549 states and 3881 transitions.
[2020-11-25 15:01:50,173 INFO  L751         BuchiCegarLoop]: Abstraction has 3549 states and 3881 transitions.
[2020-11-25 15:01:50,173 INFO  L631         BuchiCegarLoop]: Abstraction has 3549 states and 3881 transitions.
[2020-11-25 15:01:50,173 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 15:01:50,173 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3549 states and 3881 transitions.
[2020-11-25 15:01:50,180 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:01:50,180 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:01:50,180 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:01:50,184 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:01:50,184 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_BasicToken0 := false;
[L2]                 call_transfer_BasicToken0 := false;
[L2]     CALL        call main();
[L7234]              assume null == 0;
[L7235]  CALL        call this := FreshRefGenerator__success();
[L3065]              havoc newRef;
[L3066]              assume Alloc[newRef] == false;
[L3067]              Alloc[newRef] := true;
[L3068]              assume newRef != null;
[L7235]  RET         call this := FreshRefGenerator__success();
[L7236]              assume now >= 0;
[L7237]              assume DType[this] == ECU;
[L7238]              assume msgvalue_MSG == 0;
[L7239]              gas := gas - 53000;
[L7240]  CALL        call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L1849]              havoc __exception;
[L1850]              revert := false;
[L1851]  COND FALSE  !(__exception)
[L1880]  CALL        call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L4151]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L4151]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  COND FALSE  !(revert)
[L4155]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L4155]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4156]  COND FALSE  !(revert)
[L4159]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L4159]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4160]  COND FALSE  !(revert)
[L4163]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L4163]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4164]  COND FALSE  !(revert)
[L4167]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3696]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3697]  COND FALSE  !(revert)
[L3700]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3700]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3701]  COND FALSE  !(revert)
[L3704]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3704]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3705]  COND FALSE  !(revert)
[L3708]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L3708]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  COND FALSE  !(revert)
[L3712]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]              assume msgsender_MSG != null;
[L3664]              Balance[this] := 0;
[L3665]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3666]              sum_allowed3[this] := 0;
[L3712]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3713]  COND FALSE  !(revert)
[L4167]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4168]  COND FALSE  !(revert)
[L4171]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3992]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3992]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3993]  COND FALSE  !(revert)
[L3996]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3996]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]  COND FALSE  !(revert)
[L4000]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L4000]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4001]  COND FALSE  !(revert)
[L4004]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L4004]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4005]  COND FALSE  !(revert)
[L4008]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3696]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3697]  COND FALSE  !(revert)
[L3700]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3700]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3701]  COND FALSE  !(revert)
[L3704]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3704]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3705]  COND FALSE  !(revert)
[L3708]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L3708]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  COND FALSE  !(revert)
[L3712]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]              assume msgsender_MSG != null;
[L3664]              Balance[this] := 0;
[L3665]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3666]              sum_allowed3[this] := 0;
[L3712]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3713]  COND FALSE  !(revert)
[L4008]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4009]  COND FALSE  !(revert)
[L4012]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3957]              assume msgsender_MSG != null;
[L3958]              Balance[this] := 0;
[L4012]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4013]  COND FALSE  !(revert)
[L4171]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]  COND FALSE  !(revert)
[L4175]  CALL        call ECU_ECU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4099]              assume msgsender_MSG != null;
[L4100]              Balance[this] := 0;
[L4101]              name_ECU[this] := -2027621617;
[L4102]              symbol_ECU[this] := 1342424742;
[L4103]              decimals_ECU[this] := 18;
[L4104]              __var_15 := decimals_ECU[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4105]              initialSupply_ECU[this] := 1000000000 * (nonlinearPow(10, decimals_ECU[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4107]              totalSupply_ERC20Basic[this] := initialSupply_ECU[this];
[L4108]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][19781008330533595146085782002824322930726574509];
[L4109]              balances_BasicToken[this][19781008330533595146085782002824322930726574509] := initialSupply_ECU[this];
[L4110]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][19781008330533595146085782002824322930726574509];
[L4111]              assert { :EventEmitted "Transfer_ECU" } true;
[L4112]              allowedAddresses_BasicToken[this][owner_Ownable[this]] := true;
[L4175]  RET         call ECU_ECU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4176]  COND FALSE  !(revert)
[L1880]  RET         call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]              assume !revert && gas >= 0;
[L7240]  RET         call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L7241]              assume !revert && gas >= 0;
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND FALSE  !(choice == 22)
[L7094]  COND FALSE  !(choice == 21)
[L7100]  COND FALSE  !(choice == 20)
[L7106]  COND FALSE  !(choice == 19)
[L7112]  COND TRUE   choice == 18
[L7113]              gas := gas - 21000;
[L7114]  COND TRUE   gas >= 0
[L7115]              assume _value_s340 >= 0 && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7116]              assume msgvalue_MSG == 0;
[L7117]  CALL        call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s340 && _value_s340 > balances_BasicToken[this][msgsender_MSG]) && _value_s340 >= 0) && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s340] >= 0) && balances_BasicToken[this][_to_s340] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BasicToken0 := true;
[L2]                 call_transfer_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND FALSE  !(__exception)
[L881]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L3511]              __var_2 := null;
[L3512]  COND FALSE  !(!(_to_s340 != null))
[L3516]  COND TRUE   DType[this] == ECU
[L3517]  CALL        call __var_3 := canTransfer~address_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3436]  COND TRUE   locked_BasicToken[this]
[L3437]  COND TRUE   !allowedAddresses_BasicToken[this][_addr_s282] && _addr_s282 != owner_Ownable[this]
[L3438]              __ret_0_ := false;
[L3517]  RET         call __var_3 := canTransfer~address_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3518]  COND FALSE  !(revert)
[L3539]  COND FALSE  !(!__var_3)
[L3543]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s340);
[L3144]              assert b_s69 <= a_s69;
[L3145]              __ret_0_ := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3543]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s340);
[L3544]  COND FALSE  !(revert)
[L3547]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L3548]              balances_BasicToken[this][msgsender_MSG] := __var_4;
[L3549]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L3550]  CALL        call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s340], _value_s340);
[L3160]              c_s93 := (a_s93 + b_s93) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3161]              assert c_s93 >= a_s93;
[L3162]              __ret_0_ := c_s93;
[L3550]  RET         call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s340], _value_s340);
[L3551]  COND FALSE  !(revert)
[L3554]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][_to_s340];
[L3555]              balances_BasicToken[this][_to_s340] := __var_5;
[L3556]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][_to_s340];
[L3557]              assert { :EventEmitted "Transfer_BasicToken" } true;
[L3558]              __ret_0_ := true;
[L881]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L882]               assume !revert && gas >= 0;
[L7117]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L7244]  RET         call CorralChoice_ECU(this);

Loop:
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND FALSE  !(choice == 22)
[L7094]  COND FALSE  !(choice == 21)
[L7100]  COND FALSE  !(choice == 20)
[L7106]  COND FALSE  !(choice == 19)
[L7112]  COND TRUE   choice == 18
[L7113]              gas := gas - 21000;
[L7114]  COND TRUE   gas >= 0
[L7115]              assume _value_s340 >= 0 && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7116]              assume msgvalue_MSG == 0;
[L7117]  CALL        call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s340 && _value_s340 > balances_BasicToken[this][msgsender_MSG]) && _value_s340 >= 0) && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s340] >= 0) && balances_BasicToken[this][_to_s340] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BasicToken0 := true;
[L2]                 call_transfer_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND FALSE  !(__exception)
[L881]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L3511]              __var_2 := null;
[L3512]  COND FALSE  !(!(_to_s340 != null))
[L3516]  COND TRUE   DType[this] == ECU
[L3517]  CALL        call __var_3 := canTransfer~address_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3436]  COND TRUE   locked_BasicToken[this]
[L3437]  COND TRUE   !allowedAddresses_BasicToken[this][_addr_s282] && _addr_s282 != owner_Ownable[this]
[L3438]              __ret_0_ := false;
[L3517]  RET         call __var_3 := canTransfer~address_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3518]  COND FALSE  !(revert)
[L3539]  COND FALSE  !(!__var_3)
[L3543]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s340);
[L3144]              assert b_s69 <= a_s69;
[L3145]              __ret_0_ := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3543]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s340);
[L3544]  COND FALSE  !(revert)
[L3547]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L3548]              balances_BasicToken[this][msgsender_MSG] := __var_4;
[L3549]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L3550]  CALL        call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s340], _value_s340);
[L3160]              c_s93 := (a_s93 + b_s93) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3161]              assert c_s93 >= a_s93;
[L3162]              __ret_0_ := c_s93;
[L3550]  RET         call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s340], _value_s340);
[L3551]  COND FALSE  !(revert)
[L3554]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][_to_s340];
[L3555]              balances_BasicToken[this][_to_s340] := __var_5;
[L3556]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][_to_s340];
[L3557]              assert { :EventEmitted "Transfer_BasicToken" } true;
[L3558]              __ret_0_ := true;
[L881]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L882]               assume !revert && gas >= 0;
[L7117]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L7244]  RET         call CorralChoice_ECU(this);

[2020-11-25 15:01:50,190 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:01:50,191 INFO  L82        PathProgramCache]: Analyzing trace with hash -31163331, now seen corresponding path program 1 times
[2020-11-25 15:01:50,191 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:01:50,217 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:01:50,396 INFO  L134       CoverageAnalysis]: Checked inductivity of 1312 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 1312 trivial. 0 not checked.
[2020-11-25 15:01:50,397 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:01:50,397 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:01:50,399 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:01:50,399 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:01:50,399 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:01:50,400 INFO  L87              Difference]: Start difference. First operand 3549 states and 3881 transitions. cyclomatic complexity: 334 Second operand 4 states.
[2020-11-25 15:01:50,457 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:01:50,457 INFO  L93              Difference]: Finished difference Result 3571 states and 3915 transitions.
[2020-11-25 15:01:50,457 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:01:50,457 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3571 states and 3915 transitions.
[2020-11-25 15:01:50,466 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:01:50,478 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3571 states to 3553 states and 3891 transitions.
[2020-11-25 15:01:50,479 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1095
[2020-11-25 15:01:50,479 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1095
[2020-11-25 15:01:50,479 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3553 states and 3891 transitions.
[2020-11-25 15:01:50,485 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:01:50,486 INFO  L728         BuchiCegarLoop]: Abstraction has 3553 states and 3891 transitions.
[2020-11-25 15:01:50,492 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3553 states and 3891 transitions.
[2020-11-25 15:01:50,515 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3553 to 3553.
[2020-11-25 15:01:50,515 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3553 states.
[2020-11-25 15:01:50,519 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3553 states to 3553 states and 3891 transitions.
[2020-11-25 15:01:50,519 INFO  L751         BuchiCegarLoop]: Abstraction has 3553 states and 3891 transitions.
[2020-11-25 15:01:50,519 INFO  L631         BuchiCegarLoop]: Abstraction has 3553 states and 3891 transitions.
[2020-11-25 15:01:50,519 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 15:01:50,519 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3553 states and 3891 transitions.
[2020-11-25 15:01:50,525 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:01:50,526 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:01:50,526 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:01:50,529 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:01:50,529 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_BasicToken0 := false;
[L2]                 call_transfer_BasicToken0 := false;
[L2]     CALL        call main();
[L7234]              assume null == 0;
[L7235]  CALL        call this := FreshRefGenerator__success();
[L3065]              havoc newRef;
[L3066]              assume Alloc[newRef] == false;
[L3067]              Alloc[newRef] := true;
[L3068]              assume newRef != null;
[L7235]  RET         call this := FreshRefGenerator__success();
[L7236]              assume now >= 0;
[L7237]              assume DType[this] == ECU;
[L7238]              assume msgvalue_MSG == 0;
[L7239]              gas := gas - 53000;
[L7240]  CALL        call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L1849]              havoc __exception;
[L1850]              revert := false;
[L1851]  COND FALSE  !(__exception)
[L1880]  CALL        call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L4151]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L4151]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  COND FALSE  !(revert)
[L4155]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L4155]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4156]  COND FALSE  !(revert)
[L4159]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L4159]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4160]  COND FALSE  !(revert)
[L4163]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L4163]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4164]  COND FALSE  !(revert)
[L4167]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3696]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3697]  COND FALSE  !(revert)
[L3700]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3700]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3701]  COND FALSE  !(revert)
[L3704]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3704]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3705]  COND FALSE  !(revert)
[L3708]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L3708]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  COND FALSE  !(revert)
[L3712]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]              assume msgsender_MSG != null;
[L3664]              Balance[this] := 0;
[L3665]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3666]              sum_allowed3[this] := 0;
[L3712]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3713]  COND FALSE  !(revert)
[L4167]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4168]  COND FALSE  !(revert)
[L4171]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3992]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3992]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3993]  COND FALSE  !(revert)
[L3996]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3996]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]  COND FALSE  !(revert)
[L4000]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L4000]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4001]  COND FALSE  !(revert)
[L4004]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L4004]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4005]  COND FALSE  !(revert)
[L4008]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3696]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3697]  COND FALSE  !(revert)
[L3700]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3700]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3701]  COND FALSE  !(revert)
[L3704]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3704]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3705]  COND FALSE  !(revert)
[L3708]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L3708]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  COND FALSE  !(revert)
[L3712]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]              assume msgsender_MSG != null;
[L3664]              Balance[this] := 0;
[L3665]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3666]              sum_allowed3[this] := 0;
[L3712]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3713]  COND FALSE  !(revert)
[L4008]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4009]  COND FALSE  !(revert)
[L4012]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3957]              assume msgsender_MSG != null;
[L3958]              Balance[this] := 0;
[L4012]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4013]  COND FALSE  !(revert)
[L4171]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]  COND FALSE  !(revert)
[L4175]  CALL        call ECU_ECU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4099]              assume msgsender_MSG != null;
[L4100]              Balance[this] := 0;
[L4101]              name_ECU[this] := -2027621617;
[L4102]              symbol_ECU[this] := 1342424742;
[L4103]              decimals_ECU[this] := 18;
[L4104]              __var_15 := decimals_ECU[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4105]              initialSupply_ECU[this] := 1000000000 * (nonlinearPow(10, decimals_ECU[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4107]              totalSupply_ERC20Basic[this] := initialSupply_ECU[this];
[L4108]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][19781008330533595146085782002824322930726574509];
[L4109]              balances_BasicToken[this][19781008330533595146085782002824322930726574509] := initialSupply_ECU[this];
[L4110]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][19781008330533595146085782002824322930726574509];
[L4111]              assert { :EventEmitted "Transfer_ECU" } true;
[L4112]              allowedAddresses_BasicToken[this][owner_Ownable[this]] := true;
[L4175]  RET         call ECU_ECU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4176]  COND FALSE  !(revert)
[L1880]  RET         call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]              assume !revert && gas >= 0;
[L7240]  RET         call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L7241]              assume !revert && gas >= 0;
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND FALSE  !(choice == 22)
[L7094]  COND FALSE  !(choice == 21)
[L7100]  COND FALSE  !(choice == 20)
[L7106]  COND FALSE  !(choice == 19)
[L7112]  COND TRUE   choice == 18
[L7113]              gas := gas - 21000;
[L7114]  COND TRUE   gas >= 0
[L7115]              assume _value_s340 >= 0 && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7116]              assume msgvalue_MSG == 0;
[L7117]  CALL        call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s340 && _value_s340 > balances_BasicToken[this][msgsender_MSG]) && _value_s340 >= 0) && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s340] >= 0) && balances_BasicToken[this][_to_s340] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BasicToken0 := true;
[L2]                 call_transfer_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND FALSE  !(__exception)
[L881]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L3511]              __var_2 := null;
[L3512]  COND FALSE  !(!(_to_s340 != null))
[L3516]  COND TRUE   DType[this] == ECU
[L3517]  CALL        call __var_3 := canTransfer~address_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3436]  COND TRUE   locked_BasicToken[this]
[L3437]  COND FALSE  !(!allowedAddresses_BasicToken[this][_addr_s282] && _addr_s282 != owner_Ownable[this])
[L3445]              __ret_0_ := true;
[L3517]  RET         call __var_3 := canTransfer~address_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3518]  COND FALSE  !(revert)
[L3539]  COND FALSE  !(!__var_3)
[L3543]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s340);
[L3144]              assert b_s69 <= a_s69;
[L3145]              __ret_0_ := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3543]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s340);
[L3544]  COND FALSE  !(revert)
[L3547]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L3548]              balances_BasicToken[this][msgsender_MSG] := __var_4;
[L3549]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L3550]  CALL        call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s340], _value_s340);
[L3160]              c_s93 := (a_s93 + b_s93) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3161]              assert c_s93 >= a_s93;
[L3162]              __ret_0_ := c_s93;
[L3550]  RET         call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s340], _value_s340);
[L3551]  COND FALSE  !(revert)
[L3554]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][_to_s340];
[L3555]              balances_BasicToken[this][_to_s340] := __var_5;
[L3556]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][_to_s340];
[L3557]              assert { :EventEmitted "Transfer_BasicToken" } true;
[L3558]              __ret_0_ := true;
[L881]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L882]               assume !revert && gas >= 0;
[L7117]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L7244]  RET         call CorralChoice_ECU(this);

Loop:
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND FALSE  !(choice == 22)
[L7094]  COND FALSE  !(choice == 21)
[L7100]  COND FALSE  !(choice == 20)
[L7106]  COND FALSE  !(choice == 19)
[L7112]  COND TRUE   choice == 18
[L7113]              gas := gas - 21000;
[L7114]  COND TRUE   gas >= 0
[L7115]              assume _value_s340 >= 0 && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7116]              assume msgvalue_MSG == 0;
[L7117]  CALL        call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s340 && _value_s340 > balances_BasicToken[this][msgsender_MSG]) && _value_s340 >= 0) && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s340] >= 0) && balances_BasicToken[this][_to_s340] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BasicToken0 := true;
[L2]                 call_transfer_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND FALSE  !(__exception)
[L881]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L3511]              __var_2 := null;
[L3512]  COND FALSE  !(!(_to_s340 != null))
[L3516]  COND TRUE   DType[this] == ECU
[L3517]  CALL        call __var_3 := canTransfer~address_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3436]  COND TRUE   locked_BasicToken[this]
[L3437]  COND FALSE  !(!allowedAddresses_BasicToken[this][_addr_s282] && _addr_s282 != owner_Ownable[this])
[L3445]              __ret_0_ := true;
[L3517]  RET         call __var_3 := canTransfer~address_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3518]  COND FALSE  !(revert)
[L3539]  COND FALSE  !(!__var_3)
[L3543]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s340);
[L3144]              assert b_s69 <= a_s69;
[L3145]              __ret_0_ := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3543]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s340);
[L3544]  COND FALSE  !(revert)
[L3547]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L3548]              balances_BasicToken[this][msgsender_MSG] := __var_4;
[L3549]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L3550]  CALL        call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s340], _value_s340);
[L3160]              c_s93 := (a_s93 + b_s93) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3161]              assert c_s93 >= a_s93;
[L3162]              __ret_0_ := c_s93;
[L3550]  RET         call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s340], _value_s340);
[L3551]  COND FALSE  !(revert)
[L3554]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][_to_s340];
[L3555]              balances_BasicToken[this][_to_s340] := __var_5;
[L3556]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][_to_s340];
[L3557]              assert { :EventEmitted "Transfer_BasicToken" } true;
[L3558]              __ret_0_ := true;
[L881]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L882]               assume !revert && gas >= 0;
[L7117]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L7244]  RET         call CorralChoice_ECU(this);

[2020-11-25 15:01:50,534 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:01:50,534 INFO  L82        PathProgramCache]: Analyzing trace with hash -614177261, now seen corresponding path program 1 times
[2020-11-25 15:01:50,535 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:01:50,558 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:01:50,748 INFO  L134       CoverageAnalysis]: Checked inductivity of 1312 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 1312 trivial. 0 not checked.
[2020-11-25 15:01:50,749 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:01:50,749 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 15:01:50,749 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:01:50,749 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 15:01:50,749 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-25 15:01:50,750 INFO  L87              Difference]: Start difference. First operand 3553 states and 3891 transitions. cyclomatic complexity: 340 Second operand 7 states.
[2020-11-25 15:01:51,242 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:01:51,242 INFO  L93              Difference]: Finished difference Result 2048 states and 2226 transitions.
[2020-11-25 15:01:51,243 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 15:01:51,243 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2048 states and 2226 transitions.
[2020-11-25 15:01:51,246 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 15:01:51,247 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2048 states to 0 states and 0 transitions.
[2020-11-25 15:01:51,247 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 15:01:51,247 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 15:01:51,247 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 15:01:51,247 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:01:51,247 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 15:01:51,247 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 15:01:51,247 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 15:01:51,247 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 15:01:51,247 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 15:01:51,247 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 15:01:51,247 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 15:01:51,250 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:01:51 BasicIcfg
[2020-11-25 15:01:51,250 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 15:01:51,251 INFO  L168              Benchmark]: Toolchain (without parser) took 6363.94 ms. Allocated memory was 1.0 GB in the beginning and 1.7 GB in the end (delta: 703.6 MB). Free memory was 935.2 MB in the beginning and 944.5 MB in the end (delta: -9.3 MB). Peak memory consumption was 694.3 MB. Max. memory is 15.3 GB.
[2020-11-25 15:01:51,252 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:01:51,252 INFO  L168              Benchmark]: Boogie Preprocessor took 114.89 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 913.7 MB in the end (delta: 21.5 MB). Peak memory consumption was 21.5 MB. Max. memory is 15.3 GB.
[2020-11-25 15:01:51,252 INFO  L168              Benchmark]: UtopiaSpecLang took 63.59 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:01:51,252 INFO  L168              Benchmark]: Boogie Printer took 28.45 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:01:51,253 INFO  L168              Benchmark]: RCFGBuilder took 1028.13 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 61.9 MB). Free memory was 903.0 MB in the beginning and 994.5 MB in the end (delta: -91.6 MB). Peak memory consumption was 192.6 MB. Max. memory is 15.3 GB.
[2020-11-25 15:01:51,253 INFO  L168              Benchmark]: UtopiaLTL2Aut took 32.98 ms. Allocated memory is still 1.1 GB. Free memory was 994.5 MB in the beginning and 987.2 MB in the end (delta: 7.3 MB). Peak memory consumption was 7.3 MB. Max. memory is 15.3 GB.
[2020-11-25 15:01:51,253 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1818.61 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 162.5 MB). Free memory was 987.2 MB in the beginning and 822.1 MB in the end (delta: 165.1 MB). Peak memory consumption was 497.5 MB. Max. memory is 15.3 GB.
[2020-11-25 15:01:51,254 INFO  L168              Benchmark]: BlockEncodingV2 took 188.72 ms. Allocated memory is still 1.3 GB. Free memory was 822.1 MB in the beginning and 724.1 MB in the end (delta: 98.0 MB). Peak memory consumption was 98.0 MB. Max. memory is 15.3 GB.
[2020-11-25 15:01:51,254 INFO  L168              Benchmark]: BuchiAutomizer took 3085.35 ms. Allocated memory was 1.3 GB in the beginning and 1.7 GB in the end (delta: 479.2 MB). Free memory was 724.1 MB in the beginning and 944.5 MB in the end (delta: -220.4 MB). Peak memory consumption was 258.8 MB. Max. memory is 15.3 GB.
[2020-11-25 15:01:51,257 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    6258 locations, 11456 edges
  - StatisticsResult: Encoded RCFG
    6169 locations, 11245 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 114.89 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 913.7 MB in the end (delta: 21.5 MB). Peak memory consumption was 21.5 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 63.59 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 28.45 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1028.13 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 61.9 MB). Free memory was 903.0 MB in the beginning and 994.5 MB in the end (delta: -91.6 MB). Peak memory consumption was 192.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 32.98 ms. Allocated memory is still 1.1 GB. Free memory was 994.5 MB in the beginning and 987.2 MB in the end (delta: 7.3 MB). Peak memory consumption was 7.3 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1818.61 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 162.5 MB). Free memory was 987.2 MB in the beginning and 822.1 MB in the end (delta: 165.1 MB). Peak memory consumption was 497.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 188.72 ms. Allocated memory is still 1.3 GB. Free memory was 822.1 MB in the beginning and 724.1 MB in the end (delta: 98.0 MB). Peak memory consumption was 98.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 3085.35 ms. Allocated memory was 1.3 GB in the beginning and 1.7 GB in the end (delta: 479.2 MB). Free memory was 724.1 MB in the beginning and 944.5 MB in the end (delta: -220.4 MB). Peak memory consumption was 258.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2504 locations, 3474 edges
  - StatisticsResult: BuchiProgram size
    6258 locations, 11456 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 7 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 3.0s and 5 iterations.  TraceHistogramMax:12. Analysis of lassos took 0.9s. Construction of modules took 1.1s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 412 StatesRemovedByMinimization, 1 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 3553 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 13665 SDtfs, 9867 SDslu, 16022 SDs, 0 SdLazy, 6651 SolverSat, 2139 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.1s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_(fail_transfer_BasicToken0)asicToken0) ==> ( <>(fail_transfer_BasicToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
