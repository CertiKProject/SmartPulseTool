This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 05:56:51,262 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 05:56:51,264 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 05:56:51,278 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 05:56:51,279 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 05:56:51,280 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 05:56:51,281 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 05:56:51,284 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 05:56:51,287 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 05:56:51,288 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 05:56:51,289 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 05:56:51,289 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 05:56:51,290 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 05:56:51,291 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 05:56:51,291 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 05:56:51,292 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 05:56:51,293 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 05:56:51,294 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 05:56:51,295 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 05:56:51,297 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 05:56:51,297 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 05:56:51,298 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 05:56:51,300 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 05:56:51,300 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 05:56:51,300 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 05:56:51,301 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 05:56:51,301 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 05:56:51,302 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 05:56:51,302 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 05:56:51,302 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 05:56:51,303 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 05:56:51,303 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 05:56:51,304 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 05:56:51,304 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 05:56:51,305 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 05:56:51,305 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 05:56:51,305 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 05:56:51,306 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 05:56:51,306 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 05:56:51,306 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 05:56:51,307 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 05:56:51,307 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 05:56:51,315 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 05:56:51,315 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 05:56:51,316 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 05:56:51,316 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 05:56:51,317 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 05:56:51,317 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 05:56:51,317 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 05:56:51,317 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 05:56:51,317 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 05:56:51,317 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 05:56:51,317 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 05:56:51,317 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 05:56:51,317 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 05:56:51,318 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 05:56:51,318 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 05:56:51,318 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 05:56:51,318 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 05:56:51,318 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 05:56:51,318 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 05:56:51,318 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 05:56:51,318 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 05:56:51,318 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 05:56:51,318 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 05:56:51,319 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 05:56:51,319 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 05:56:51,319 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 05:56:51,342 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 05:56:51,355 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 05:56:51,358 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 05:56:51,359 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 05:56:51,360 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 05:56:51,360 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl
[2020-11-25 05:56:51,361 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl'
[2020-11-25 05:56:51,457 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 05:56:51,458 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 05:56:51,458 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 05:56:51,458 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 05:56:51,459 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 05:56:51,475 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:56:51" (1/1) ...
[2020-11-25 05:56:51,477 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:56:51" (1/1) ...
[2020-11-25 05:56:51,519 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:56:51" (1/1) ...
[2020-11-25 05:56:51,519 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:56:51" (1/1) ...
[2020-11-25 05:56:51,552 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:56:51" (1/1) ...
[2020-11-25 05:56:51,564 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:56:51" (1/1) ...
[2020-11-25 05:56:51,573 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:56:51" (1/1) ...
[2020-11-25 05:56:51,584 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 05:56:51,585 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 05:56:51,585 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 05:56:51,587 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 05:56:51,591 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:56:51" (1/1) ...
[2020-11-25 05:56:51,609 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && governance_Token[this] == old(governance_Token[this]) && minters_Token[this] == old(minters_Token[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]))))
[2020-11-25 05:56:51,614 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && governance_Token[this] == old(governance_Token[this]) && minters_Token[this] == old(minters_Token[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]))))
[2020-11-25 05:56:51,622 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && governance_Token[this] == old(governance_Token[this]) && minters_Token[this] == old(minters_Token[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]))))
[2020-11-25 05:56:51,627 INFO  L636   opiaSpecLangObserver]: Parsed ( _totalSupply_ERC20[this]>=0 && _totalSupply_ERC20[this]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 05:56:51,630 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( __ret_0_==_totalSupply_ERC20[this] && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowances_ERC20[this]==( old(_allowances_ERC20[this]) ) ) && governance_Token[this]==( old(governance_Token[this]) ) ) && minters_Token[this]==( old(minters_Token[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) && exceptions_ERC20[this]==( old(exceptions_ERC20[this]) ) ) && uniswap_ERC20[this]==( old(uniswap_ERC20[this]) ) ) && _owner_ERC20[this]==( old(_owner_ERC20[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,totalSupply_ERC20>],ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[governance_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[governance_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[minters_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[minters_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[exceptions_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[exceptions_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[uniswap_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[uniswap_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_owner_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_owner_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]]
[2020-11-25 05:56:51,636 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && governance_Token[this] == old(governance_Token[this]) && minters_Token[this] == old(minters_Token[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]))))
[2020-11-25 05:56:51,636 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_totalSupply_ERC200) ==> ( <>AP(success_totalSupply_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 05:56:51,648 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:56:51 PropertyContainer
[2020-11-25 05:56:51,648 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 05:56:51,648 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 05:56:51,648 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 05:56:51,648 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 05:56:51,649 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:56:51" (1/2) ...
[2020-11-25 05:56:51,650 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 05:56:51,650 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 05:56:51,665 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:56:51" (2/2) ...
[2020-11-25 05:56:51,666 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 05:56:51,666 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 05:56:51,666 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 05:56:51,666 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 05:56:51,667 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:56:51" (1/2) ...
[2020-11-25 05:56:51,721 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 05:56:51,721 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 05:56:51,721 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 05:56:51,721 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 05:56:51,721 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 05:56:51,721 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 05:56:51,721 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 05:56:51,721 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 05:56:51,722 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 05:56:51,722 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 05:56:51,722 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-25 05:56:51,722 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-25 05:56:51,722 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-25 05:56:51,722 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-25 05:56:51,723 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:56:51,723 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 05:56:51,723 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 05:56:51,723 INFO  L130     BoogieDeclarations]: Found specification of procedure setAllow_ERC20
[2020-11-25 05:56:51,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAllow_ERC20
[2020-11-25 05:56:51,724 INFO  L130     BoogieDeclarations]: Found specification of procedure setExceptions~address_ERC20
[2020-11-25 05:56:51,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure setExceptions~address_ERC20
[2020-11-25 05:56:51,724 INFO  L130     BoogieDeclarations]: Found specification of procedure burnOwner_ERC20
[2020-11-25 05:56:51,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnOwner_ERC20
[2020-11-25 05:56:51,724 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 05:56:51,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 05:56:51,724 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 05:56:51,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 05:56:51,725 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 05:56:51,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 05:56:51,725 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 05:56:51,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 05:56:51,725 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 05:56:51,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 05:56:51,725 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 05:56:51,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 05:56:51,725 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 05:56:51,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 05:56:51,726 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 05:56:51,726 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 05:56:51,726 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 05:56:51,726 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 05:56:51,726 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 05:56:51,726 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 05:56:51,726 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 05:56:51,726 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 05:56:51,726 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 05:56:51,726 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 05:56:51,726 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 05:56:51,727 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 05:56:51,727 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 05:56:51,727 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 05:56:51,727 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 05:56:51,727 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:56:51,727 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 05:56:51,727 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 05:56:51,727 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:56:51,727 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 05:56:51,727 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:56:51,728 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 05:56:51,728 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token_NoBaseCtor__success
[2020-11-25 05:56:51,728 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token
[2020-11-25 05:56:51,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token
[2020-11-25 05:56:51,728 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_Token
[2020-11-25 05:56:51,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_Token
[2020-11-25 05:56:51,728 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_Token
[2020-11-25 05:56:51,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_Token
[2020-11-25 05:56:51,728 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_Token
[2020-11-25 05:56:51,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_Token
[2020-11-25 05:56:51,729 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_Token
[2020-11-25 05:56:51,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_Token
[2020-11-25 05:56:51,729 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_Token
[2020-11-25 05:56:51,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_Token
[2020-11-25 05:56:51,729 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_Token
[2020-11-25 05:56:51,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_Token
[2020-11-25 05:56:51,729 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 05:56:51,729 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 05:56:51,729 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 05:56:51,730 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 05:56:51,730 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 05:56:51,730 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-25 05:56:51,730 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-25 05:56:51,730 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 05:56:51,730 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 05:56:51,730 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 05:56:51,730 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 05:56:51,730 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 05:56:51,731 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 05:56:51,731 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Token
[2020-11-25 05:56:51,731 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 05:56:51,731 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 05:56:51,731 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 05:56:51,731 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 05:56:51,731 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 05:56:51,731 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 05:56:51,731 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-25 05:56:51,731 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-25 05:56:51,732 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-25 05:56:51,732 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:56:51,732 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 05:56:51,732 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 05:56:51,732 INFO  L130     BoogieDeclarations]: Found specification of procedure setAllow_ERC20__success
[2020-11-25 05:56:51,732 INFO  L130     BoogieDeclarations]: Found specification of procedure setAllow_ERC20__fail
[2020-11-25 05:56:51,732 INFO  L130     BoogieDeclarations]: Found specification of procedure setExceptions~address_ERC20__success
[2020-11-25 05:56:51,732 INFO  L130     BoogieDeclarations]: Found specification of procedure setExceptions~address_ERC20__fail
[2020-11-25 05:56:51,732 INFO  L130     BoogieDeclarations]: Found specification of procedure burnOwner_ERC20__success
[2020-11-25 05:56:51,732 INFO  L130     BoogieDeclarations]: Found specification of procedure burnOwner_ERC20__fail
[2020-11-25 05:56:51,733 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 05:56:51,733 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 05:56:51,733 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 05:56:51,733 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 05:56:51,733 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 05:56:51,733 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 05:56:51,733 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 05:56:51,733 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 05:56:51,733 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 05:56:51,734 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 05:56:51,734 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 05:56:51,734 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 05:56:51,734 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:56:51,734 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:56:51,734 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:56:51,734 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:56:51,734 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 05:56:51,734 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 05:56:51,734 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 05:56:51,735 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 05:56:51,735 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 05:56:51,735 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 05:56:51,735 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 05:56:51,735 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 05:56:51,735 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 05:56:51,735 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 05:56:51,736 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 05:56:51,736 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 05:56:51,736 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 05:56:51,736 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:56:51,736 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 05:56:51,736 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 05:56:51,736 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:56:51,736 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:56:51,736 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:56:51,736 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:56:51,736 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token_NoBaseCtor__fail
[2020-11-25 05:56:51,737 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token__success
[2020-11-25 05:56:51,737 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token__fail
[2020-11-25 05:56:51,737 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_Token__success
[2020-11-25 05:56:51,737 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_Token__fail
[2020-11-25 05:56:51,737 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_Token__success
[2020-11-25 05:56:51,737 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_Token__fail
[2020-11-25 05:56:51,737 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_Token__success
[2020-11-25 05:56:51,737 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_Token__fail
[2020-11-25 05:56:51,737 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_Token__success
[2020-11-25 05:56:51,737 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_Token__fail
[2020-11-25 05:56:51,737 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_Token__success
[2020-11-25 05:56:51,738 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_Token__fail
[2020-11-25 05:56:51,738 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_Token__success
[2020-11-25 05:56:51,738 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_Token__fail
[2020-11-25 05:56:51,738 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 05:56:51,738 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 05:56:51,738 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 05:56:51,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 05:56:51,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 05:56:51,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 05:56:51,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 05:56:51,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 05:56:51,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 05:56:51,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 05:56:51,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-25 05:56:51,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-25 05:56:51,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-25 05:56:51,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-25 05:56:51,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-25 05:56:51,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:56:51,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:56:51,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 05:56:51,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 05:56:51,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAllow_ERC20__fail
[2020-11-25 05:56:51,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAllow_ERC20__success
[2020-11-25 05:56:51,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure setExceptions~address_ERC20__fail
[2020-11-25 05:56:51,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure setExceptions~address_ERC20__success
[2020-11-25 05:56:51,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnOwner_ERC20__fail
[2020-11-25 05:56:51,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnOwner_ERC20__success
[2020-11-25 05:56:51,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 05:56:51,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 05:56:51,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 05:56:51,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 05:56:51,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 05:56:51,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 05:56:51,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 05:56:51,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 05:56:51,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 05:56:51,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 05:56:51,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 05:56:51,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 05:56:51,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:56:51,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:56:51,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:56:51,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:56:51,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 05:56:51,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 05:56:51,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 05:56:51,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 05:56:51,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 05:56:51,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 05:56:51,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 05:56:51,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 05:56:51,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 05:56:51,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 05:56:51,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 05:56:51,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 05:56:51,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 05:56:51,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 05:56:51,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 05:56:51,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 05:56:51,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 05:56:51,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 05:56:51,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:56:51,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:56:51,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 05:56:51,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 05:56:51,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:56:51,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:56:51,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:56:51,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 05:56:51,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:56:51,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:56:51,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:56:51,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 05:56:51,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token_NoBaseCtor__fail
[2020-11-25 05:56:51,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token_NoBaseCtor__success
[2020-11-25 05:56:51,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token__fail
[2020-11-25 05:56:51,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token__success
[2020-11-25 05:56:51,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_Token__fail
[2020-11-25 05:56:51,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_Token__success
[2020-11-25 05:56:51,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_Token__fail
[2020-11-25 05:56:51,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_Token__success
[2020-11-25 05:56:51,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_Token__fail
[2020-11-25 05:56:51,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_Token__success
[2020-11-25 05:56:51,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_Token__fail
[2020-11-25 05:56:51,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_Token__success
[2020-11-25 05:56:51,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_Token__fail
[2020-11-25 05:56:51,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_Token__success
[2020-11-25 05:56:51,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_Token__fail
[2020-11-25 05:56:51,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_Token__success
[2020-11-25 05:56:51,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 05:56:51,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 05:56:51,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 05:56:51,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 05:56:51,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 05:56:51,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 05:56:51,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 05:56:51,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 05:56:51,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-25 05:56:51,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-25 05:56:51,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 05:56:51,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 05:56:51,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 05:56:51,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 05:56:51,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 05:56:51,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 05:56:51,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Token
[2020-11-25 05:56:51,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 05:56:51,746 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 05:56:51,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 05:56:51,980 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:56:51,980 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:56:51,980 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:56:52,466 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 05:56:52,467 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 05:56:52,469 INFO  L202        PluginConnector]: Adding new model Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:56:52 BoogieIcfgContainer
[2020-11-25 05:56:52,469 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:56:51" (2/2) ...
[2020-11-25 05:56:52,469 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 05:56:52,469 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@37a9d1c8 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:56:52, skipping insertion in model container
[2020-11-25 05:56:52,469 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 05:56:52,470 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 05:56:52,470 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 05:56:52,471 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 05:56:52,471 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:56:51" (1/3) ...
[2020-11-25 05:56:52,472 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@7c3641a4 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:56:52, skipping insertion in model container
[2020-11-25 05:56:52,472 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:56:51" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 05:56:52,505 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:56:52 NWAContainer
[2020-11-25 05:56:52,505 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 05:56:52,505 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 05:56:52,505 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 05:56:52,506 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 05:56:52,507 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:56:52" (3/4) ...
[2020-11-25 05:56:52,507 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@5feb788c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:56:52, skipping insertion in model container
[2020-11-25 05:56:52,507 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:56:52" (4/4) ...
[2020-11-25 05:56:52,510 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 05:56:52,515 INFO  L110   BuchiProductObserver]: Initial RCFG 2126 locations, 2889 edges
[2020-11-25 05:56:52,515 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 05:56:52,526 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 05:56:53,881 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 05:56:53,887 INFO  L110   BuchiProductObserver]: BuchiProgram size 5238 locations, 9364 edges
[2020-11-25 05:56:53,888 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:56:53 BoogieIcfgContainer
[2020-11-25 05:56:53,888 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 05:56:53,888 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 05:56:53,888 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 05:56:53,889 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 05:56:53,890 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:56:53" (1/1) ...
[2020-11-25 05:56:54,004 INFO  L313           BlockEncoder]: Initial Icfg 5238 locations, 9364 edges
[2020-11-25 05:56:54,004 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 05:56:54,004 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 05:56:54,004 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 05:56:54,005 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 05:56:54,016 INFO  L70    emoveInfeasibleEdges]: Removed 156 edges and 15 locations because of local infeasibility
[2020-11-25 05:56:54,026 INFO  L70        RemoveSinkStates]: Removed 104 edges and 69 locations by removing sink states
[2020-11-25 05:56:54,037 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 05:56:54,041 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 05:56:54,045 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 05:56:54,045 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 05:56:54,048 INFO  L313           BlockEncoder]: Encoded RCFG 5134 locations, 9075 edges
[2020-11-25 05:56:54,048 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:56:54 BasicIcfg
[2020-11-25 05:56:54,048 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 05:56:54,049 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 05:56:54,049 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 05:56:54,050 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 05:56:54,051 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:56:54,051 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:56:51" (1/6) ...
[2020-11-25 05:56:54,053 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@43fe9740 and model type Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:56:54, skipping insertion in model container
[2020-11-25 05:56:54,053 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:56:54,053 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:56:51" (2/6) ...
[2020-11-25 05:56:54,054 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@43fe9740 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:56:54, skipping insertion in model container
[2020-11-25 05:56:54,054 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:56:54,054 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:56:52" (3/6) ...
[2020-11-25 05:56:54,054 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@43fe9740 and model type Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:56:54, skipping insertion in model container
[2020-11-25 05:56:54,054 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:56:54,054 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:56:52" (4/6) ...
[2020-11-25 05:56:54,054 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@43fe9740 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:56:54, skipping insertion in model container
[2020-11-25 05:56:54,054 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:56:54,054 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:56:53" (5/6) ...
[2020-11-25 05:56:54,055 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@43fe9740 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:56:54, skipping insertion in model container
[2020-11-25 05:56:54,055 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:56:54,055 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:56:54" (6/6) ...
[2020-11-25 05:56:54,056 INFO  L404   chiAutomizerObserver]: Analyzing ICFG Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_totalsupply.bpl_BEv2
[2020-11-25 05:56:54,092 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 05:56:54,092 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 05:56:54,092 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 05:56:54,093 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 05:56:54,093 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 05:56:54,093 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 05:56:54,093 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 05:56:54,093 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 05:56:54,093 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 05:56:54,136 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5134 states.
[2020-11-25 05:56:54,192 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:56:54,192 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:56:54,192 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:56:54,199 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:56:54,199 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:56:54,199 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 05:56:54,199 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5134 states.
[2020-11-25 05:56:54,221 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:56:54,221 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:56:54,221 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:56:54,223 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:56:54,223 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L5691]              assume null == 0;
[L5692]  CALL        call this := FreshRefGenerator__success();
[L2547]              havoc newRef;
[L2548]              assume Alloc[newRef] == false;
[L2549]              Alloc[newRef] := true;
[L2550]              assume newRef != null;
[L5692]  RET         call this := FreshRefGenerator__success();
[L5693]              assume now >= 0;
[L5694]              assume DType[this] == Token;
[L5695]              assume msgvalue_MSG == 0;
[L5696]              gas := gas - 53000;
[L5697]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1447]              havoc __exception;
[L1448]              revert := false;
[L1449]  COND FALSE  !(__exception)
[L1478]  CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3817]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2611]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2596]              assume msgsender_MSG != null;
[L2597]              Balance[this] := 0;
[L2611]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  COND FALSE  !(revert)
[L3817]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3818]  COND TRUE   revert
[L1478]  RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1479]              assume !revert && gas >= 0;
[L5697]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L5698]              assume !revert && gas >= 0;

Loop:
[L5701]  CALL        call CorralChoice_Token(this);
[L5496]              havoc msgsender_MSG;
[L5497]              havoc msgvalue_MSG;
[L5498]              havoc choice;
[L5499]              havoc __ret_0_totalSupply;
[L5500]              havoc account_s181;
[L5501]              havoc __ret_0_balanceOf;
[L5502]              havoc recipient_s200;
[L5503]              havoc amount_s200;
[L5504]              havoc __ret_0_transfer;
[L5505]              havoc owner_s216;
[L5506]              havoc spender_s216;
[L5507]              havoc __ret_0_allowance;
[L5508]              havoc spender_s235;
[L5509]              havoc amount_s235;
[L5510]              havoc __ret_0_approve;
[L5511]              havoc sender_s271;
[L5512]              havoc recipient_s271;
[L5513]              havoc amount_s271;
[L5514]              havoc __ret_0_transferFrom;
[L5515]              havoc owner_s119;
[L5516]              havoc someAddress_s143;
[L5517]              havoc spender_s298;
[L5518]              havoc addedValue_s298;
[L5519]              havoc __ret_0_increaseAllowance;
[L5520]              havoc spender_s326;
[L5521]              havoc subtractedValue_s326;
[L5522]              havoc __ret_0_decreaseAllowance;
[L5523]              havoc name_s544;
[L5524]              havoc symbol_s544;
[L5525]              havoc decimals_s544;
[L5526]              havoc __ret_0_name;
[L5527]              havoc __ret_0_symbol;
[L5528]              havoc __ret_0_decimals;
[L5529]              havoc __ret_0_governance;
[L5530]              havoc arg812_s0;
[L5531]              havoc __ret_0_minters;
[L5532]              havoc name_s730;
[L5533]              havoc ticker_s730;
[L5534]              havoc amount_s730;
[L5535]              havoc account_s751;
[L5536]              havoc amount_s751;
[L5537]              havoc _governance_s769;
[L5538]              havoc _minter_s789;
[L5539]              havoc _minter_s809;
[L5540]              havoc tmpNow;
[L5541]              havoc gas;
[L5542]              assume gas > 4000000 && gas <= 8000000;
[L5543]              tmpNow := now;
[L5544]              havoc now;
[L5545]              assume now > tmpNow;
[L5546]              assume msgsender_MSG != null;
[L5547]              assume DType[msgsender_MSG] != IERC20;
[L5548]              assume DType[msgsender_MSG] != Context;
[L5549]              assume DType[msgsender_MSG] != ERC20;
[L5550]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5551]              assume DType[msgsender_MSG] != SafeMath;
[L5552]              assume DType[msgsender_MSG] != Token;
[L5553]              Alloc[msgsender_MSG] := true;
[L5554]  COND TRUE   choice == 20
[L5555]              gas := gas - 21000;
[L5556]  COND FALSE  !(gas >= 0)
[L5701]  RET         call CorralChoice_Token(this);

[2020-11-25 05:56:54,239 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:56:54,239 INFO  L82        PathProgramCache]: Analyzing trace with hash -762099033, now seen corresponding path program 1 times
[2020-11-25 05:56:54,244 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:56:54,269 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:56:54,303 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:56:54,304 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:56:54,304 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:56:54,583 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:56:54,592 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:56:54,593 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:56:54,594 INFO  L87              Difference]: Start difference. First operand 5134 states. Second operand 4 states.
[2020-11-25 05:56:55,092 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:56:55,092 INFO  L93              Difference]: Finished difference Result 3491 states and 4068 transitions.
[2020-11-25 05:56:55,095 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:56:55,096 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3491 states and 4068 transitions.
[2020-11-25 05:56:55,123 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:56:55,158 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3491 states to 3491 states and 4068 transitions.
[2020-11-25 05:56:55,160 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 05:56:55,165 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 909
[2020-11-25 05:56:55,165 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3491 states and 4068 transitions.
[2020-11-25 05:56:55,176 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:56:55,176 INFO  L728         BuchiCegarLoop]: Abstraction has 3491 states and 4068 transitions.
[2020-11-25 05:56:55,196 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3491 states and 4068 transitions.
[2020-11-25 05:56:55,254 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3491 to 3491.
[2020-11-25 05:56:55,254 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3491 states.
[2020-11-25 05:56:55,262 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3491 states to 3491 states and 4068 transitions.
[2020-11-25 05:56:55,263 INFO  L751         BuchiCegarLoop]: Abstraction has 3491 states and 4068 transitions.
[2020-11-25 05:56:55,263 INFO  L631         BuchiCegarLoop]: Abstraction has 3491 states and 4068 transitions.
[2020-11-25 05:56:55,263 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 05:56:55,263 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3491 states and 4068 transitions.
[2020-11-25 05:56:55,273 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:56:55,273 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:56:55,274 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:56:55,276 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:56:55,276 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L5691]              assume null == 0;
[L5692]  CALL        call this := FreshRefGenerator__success();
[L2547]              havoc newRef;
[L2548]              assume Alloc[newRef] == false;
[L2549]              Alloc[newRef] := true;
[L2550]              assume newRef != null;
[L5692]  RET         call this := FreshRefGenerator__success();
[L5693]              assume now >= 0;
[L5694]              assume DType[this] == Token;
[L5695]              assume msgvalue_MSG == 0;
[L5696]              gas := gas - 53000;
[L5697]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1447]              havoc __exception;
[L1448]              revert := false;
[L1449]  COND FALSE  !(__exception)
[L1478]  CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3817]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2611]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2596]              assume msgsender_MSG != null;
[L2597]              Balance[this] := 0;
[L2611]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  COND FALSE  !(revert)
[L3817]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3818]  COND TRUE   revert
[L1478]  RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1479]              assume !revert && gas >= 0;
[L5697]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L5698]              assume !revert && gas >= 0;
[L5701]  CALL        call CorralChoice_Token(this);
[L5496]              havoc msgsender_MSG;
[L5497]              havoc msgvalue_MSG;
[L5498]              havoc choice;
[L5499]              havoc __ret_0_totalSupply;
[L5500]              havoc account_s181;
[L5501]              havoc __ret_0_balanceOf;
[L5502]              havoc recipient_s200;
[L5503]              havoc amount_s200;
[L5504]              havoc __ret_0_transfer;
[L5505]              havoc owner_s216;
[L5506]              havoc spender_s216;
[L5507]              havoc __ret_0_allowance;
[L5508]              havoc spender_s235;
[L5509]              havoc amount_s235;
[L5510]              havoc __ret_0_approve;
[L5511]              havoc sender_s271;
[L5512]              havoc recipient_s271;
[L5513]              havoc amount_s271;
[L5514]              havoc __ret_0_transferFrom;
[L5515]              havoc owner_s119;
[L5516]              havoc someAddress_s143;
[L5517]              havoc spender_s298;
[L5518]              havoc addedValue_s298;
[L5519]              havoc __ret_0_increaseAllowance;
[L5520]              havoc spender_s326;
[L5521]              havoc subtractedValue_s326;
[L5522]              havoc __ret_0_decreaseAllowance;
[L5523]              havoc name_s544;
[L5524]              havoc symbol_s544;
[L5525]              havoc decimals_s544;
[L5526]              havoc __ret_0_name;
[L5527]              havoc __ret_0_symbol;
[L5528]              havoc __ret_0_decimals;
[L5529]              havoc __ret_0_governance;
[L5530]              havoc arg812_s0;
[L5531]              havoc __ret_0_minters;
[L5532]              havoc name_s730;
[L5533]              havoc ticker_s730;
[L5534]              havoc amount_s730;
[L5535]              havoc account_s751;
[L5536]              havoc amount_s751;
[L5537]              havoc _governance_s769;
[L5538]              havoc _minter_s789;
[L5539]              havoc _minter_s809;
[L5540]              havoc tmpNow;
[L5541]              havoc gas;
[L5542]              assume gas > 4000000 && gas <= 8000000;
[L5543]              tmpNow := now;
[L5544]              havoc now;
[L5545]              assume now > tmpNow;
[L5546]              assume msgsender_MSG != null;
[L5547]              assume DType[msgsender_MSG] != IERC20;
[L5548]              assume DType[msgsender_MSG] != Context;
[L5549]              assume DType[msgsender_MSG] != ERC20;
[L5550]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5551]              assume DType[msgsender_MSG] != SafeMath;
[L5552]              assume DType[msgsender_MSG] != Token;
[L5553]              Alloc[msgsender_MSG] := true;
[L5554]  COND TRUE   choice == 20
[L5555]              gas := gas - 21000;
[L5556]  COND TRUE   gas >= 0
[L5557]              assume msgvalue_MSG == 0;
[L5558]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L512]               havoc __exception;
[L513]               revert := false;
[L514]   COND FALSE  !(__exception)
[L543]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2807]              __ret_0_ := _totalSupply_ERC20[this];
[L543]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L544]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && governance_Token[this] == old(governance_Token[this])) && minters_Token[this] == old(minters_Token[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && exceptions_ERC20[this] == old(exceptions_ERC20[this])) && uniswap_ERC20[this] == old(uniswap_ERC20[this])) && _owner_ERC20[this] == old(_owner_ERC20[this]));
[L2]                 revert := revert_hold;
[L5558]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L5701]  RET         call CorralChoice_Token(this);

Loop:
[L5701]  CALL        call CorralChoice_Token(this);
[L5496]              havoc msgsender_MSG;
[L5497]              havoc msgvalue_MSG;
[L5498]              havoc choice;
[L5499]              havoc __ret_0_totalSupply;
[L5500]              havoc account_s181;
[L5501]              havoc __ret_0_balanceOf;
[L5502]              havoc recipient_s200;
[L5503]              havoc amount_s200;
[L5504]              havoc __ret_0_transfer;
[L5505]              havoc owner_s216;
[L5506]              havoc spender_s216;
[L5507]              havoc __ret_0_allowance;
[L5508]              havoc spender_s235;
[L5509]              havoc amount_s235;
[L5510]              havoc __ret_0_approve;
[L5511]              havoc sender_s271;
[L5512]              havoc recipient_s271;
[L5513]              havoc amount_s271;
[L5514]              havoc __ret_0_transferFrom;
[L5515]              havoc owner_s119;
[L5516]              havoc someAddress_s143;
[L5517]              havoc spender_s298;
[L5518]              havoc addedValue_s298;
[L5519]              havoc __ret_0_increaseAllowance;
[L5520]              havoc spender_s326;
[L5521]              havoc subtractedValue_s326;
[L5522]              havoc __ret_0_decreaseAllowance;
[L5523]              havoc name_s544;
[L5524]              havoc symbol_s544;
[L5525]              havoc decimals_s544;
[L5526]              havoc __ret_0_name;
[L5527]              havoc __ret_0_symbol;
[L5528]              havoc __ret_0_decimals;
[L5529]              havoc __ret_0_governance;
[L5530]              havoc arg812_s0;
[L5531]              havoc __ret_0_minters;
[L5532]              havoc name_s730;
[L5533]              havoc ticker_s730;
[L5534]              havoc amount_s730;
[L5535]              havoc account_s751;
[L5536]              havoc amount_s751;
[L5537]              havoc _governance_s769;
[L5538]              havoc _minter_s789;
[L5539]              havoc _minter_s809;
[L5540]              havoc tmpNow;
[L5541]              havoc gas;
[L5542]              assume gas > 4000000 && gas <= 8000000;
[L5543]              tmpNow := now;
[L5544]              havoc now;
[L5545]              assume now > tmpNow;
[L5546]              assume msgsender_MSG != null;
[L5547]              assume DType[msgsender_MSG] != IERC20;
[L5548]              assume DType[msgsender_MSG] != Context;
[L5549]              assume DType[msgsender_MSG] != ERC20;
[L5550]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5551]              assume DType[msgsender_MSG] != SafeMath;
[L5552]              assume DType[msgsender_MSG] != Token;
[L5553]              Alloc[msgsender_MSG] := true;
[L5554]  COND TRUE   choice == 20
[L5555]              gas := gas - 21000;
[L5556]  COND TRUE   gas >= 0
[L5557]              assume msgvalue_MSG == 0;
[L5558]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L512]               havoc __exception;
[L513]               revert := false;
[L514]   COND FALSE  !(__exception)
[L543]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2807]              __ret_0_ := _totalSupply_ERC20[this];
[L543]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L544]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && governance_Token[this] == old(governance_Token[this])) && minters_Token[this] == old(minters_Token[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && exceptions_ERC20[this] == old(exceptions_ERC20[this])) && uniswap_ERC20[this] == old(uniswap_ERC20[this])) && _owner_ERC20[this] == old(_owner_ERC20[this]));
[L2]                 revert := revert_hold;
[L5558]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L5701]  RET         call CorralChoice_Token(this);

[2020-11-25 05:56:55,280 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:56:55,281 INFO  L82        PathProgramCache]: Analyzing trace with hash -949877079, now seen corresponding path program 1 times
[2020-11-25 05:56:55,282 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:56:55,292 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:56:55,315 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:56:55,316 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:56:55,316 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:56:55,317 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:56:55,317 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:56:55,317 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:56:55,318 INFO  L87              Difference]: Start difference. First operand 3491 states and 4068 transitions. cyclomatic complexity: 579 Second operand 3 states.
[2020-11-25 05:56:55,418 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:56:55,418 INFO  L93              Difference]: Finished difference Result 4425 states and 5118 transitions.
[2020-11-25 05:56:55,418 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:56:55,419 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4425 states and 5118 transitions.
[2020-11-25 05:56:55,437 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:56:55,458 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4425 states to 4425 states and 5118 transitions.
[2020-11-25 05:56:55,459 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1192
[2020-11-25 05:56:55,460 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1192
[2020-11-25 05:56:55,460 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4425 states and 5118 transitions.
[2020-11-25 05:56:55,467 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:56:55,467 INFO  L728         BuchiCegarLoop]: Abstraction has 4425 states and 5118 transitions.
[2020-11-25 05:56:55,472 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4425 states and 5118 transitions.
[2020-11-25 05:56:55,516 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4425 to 3715.
[2020-11-25 05:56:55,516 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3715 states.
[2020-11-25 05:56:55,521 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3715 states to 3715 states and 4254 transitions.
[2020-11-25 05:56:55,522 INFO  L751         BuchiCegarLoop]: Abstraction has 3715 states and 4254 transitions.
[2020-11-25 05:56:55,522 INFO  L631         BuchiCegarLoop]: Abstraction has 3715 states and 4254 transitions.
[2020-11-25 05:56:55,522 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 05:56:55,522 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3715 states and 4254 transitions.
[2020-11-25 05:56:55,530 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:56:55,530 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:56:55,530 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:56:55,533 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:56:55,533 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L5691]              assume null == 0;
[L5692]  CALL        call this := FreshRefGenerator__success();
[L2547]              havoc newRef;
[L2548]              assume Alloc[newRef] == false;
[L2549]              Alloc[newRef] := true;
[L2550]              assume newRef != null;
[L5692]  RET         call this := FreshRefGenerator__success();
[L5693]              assume now >= 0;
[L5694]              assume DType[this] == Token;
[L5695]              assume msgvalue_MSG == 0;
[L5696]              gas := gas - 53000;
[L5697]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1447]              havoc __exception;
[L1448]              revert := false;
[L1449]  COND FALSE  !(__exception)
[L1478]  CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3817]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2611]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2596]              assume msgsender_MSG != null;
[L2597]              Balance[this] := 0;
[L2611]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  COND FALSE  !(revert)
[L3817]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3818]  COND FALSE  !(revert)
[L3821]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L3821]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3822]  COND FALSE  !(revert)
[L3826]              havoc __var_29;
[L3827]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L2681]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2611]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2596]              assume msgsender_MSG != null;
[L2597]              Balance[this] := 0;
[L2611]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  COND FALSE  !(revert)
[L2681]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2682]  COND FALSE  !(revert)
[L2685]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L2685]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L2689]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2649]              assume msgsender_MSG != null;
[L2650]              Balance[this] := 0;
[L2651]              _balances_ERC20[this] := zeroRefintArr();
[L2652]              sum__balances0[this] := 0;
[L2653]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2654]              sum__allowances1[this] := 0;
[L2655]              exceptions_ERC20[this] := zeroRefboolArr();
[L2656]              uniswap_ERC20[this] := null;
[L2657]              _owner_ERC20[this] := null;
[L2658]              _totalSupply_ERC20[this] := 0;
[L2660]              _owner_ERC20[this] := owner_s119;
[L2689]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2690]  COND FALSE  !(revert)
[L3827]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L3828]  COND FALSE  !(revert)
[L3831]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3549]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L3549]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3550]  COND FALSE  !(revert)
[L3553]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3524]              assume msgsender_MSG != null;
[L3525]              Balance[this] := 0;
[L3526]              _name_ERC20Detailed[this] := -1081022691;
[L3527]              _symbol_ERC20Detailed[this] := -1081022691;
[L3528]              _decimals_ERC20Detailed[this] := 0;
[L3530]              _name_ERC20Detailed[this] := name_s544;
[L3531]              _symbol_ERC20Detailed[this] := symbol_s544;
[L3532]              _decimals_ERC20Detailed[this] := decimals_s544;
[L3553]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3554]  COND FALSE  !(revert)
[L3831]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3832]  COND FALSE  !(revert)
[L3835]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3763]              assume msgsender_MSG != null;
[L3764]              Balance[this] := 0;
[L3765]              governance_Token[this] := null;
[L3766]              minters_Token[this] := zeroRefboolArr();
[L3769]              havoc __var_27;
[L3770]              governance_Token[this] := __var_27;
[L3772]              havoc __var_28;
[L3773]  CALL        call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3902]  COND TRUE   !(msgsender_MSG == governance_Token[this])
[L3903]              revert := true;
[L3773]  RET         call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3774]  COND TRUE   revert
[L3835]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3836]  COND FALSE  !(revert)
[L1478]  RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1479]              assume !revert && gas >= 0;
[L5697]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L5698]              assume !revert && gas >= 0;
[L5701]  CALL        call CorralChoice_Token(this);
[L5496]              havoc msgsender_MSG;
[L5497]              havoc msgvalue_MSG;
[L5498]              havoc choice;
[L5499]              havoc __ret_0_totalSupply;
[L5500]              havoc account_s181;
[L5501]              havoc __ret_0_balanceOf;
[L5502]              havoc recipient_s200;
[L5503]              havoc amount_s200;
[L5504]              havoc __ret_0_transfer;
[L5505]              havoc owner_s216;
[L5506]              havoc spender_s216;
[L5507]              havoc __ret_0_allowance;
[L5508]              havoc spender_s235;
[L5509]              havoc amount_s235;
[L5510]              havoc __ret_0_approve;
[L5511]              havoc sender_s271;
[L5512]              havoc recipient_s271;
[L5513]              havoc amount_s271;
[L5514]              havoc __ret_0_transferFrom;
[L5515]              havoc owner_s119;
[L5516]              havoc someAddress_s143;
[L5517]              havoc spender_s298;
[L5518]              havoc addedValue_s298;
[L5519]              havoc __ret_0_increaseAllowance;
[L5520]              havoc spender_s326;
[L5521]              havoc subtractedValue_s326;
[L5522]              havoc __ret_0_decreaseAllowance;
[L5523]              havoc name_s544;
[L5524]              havoc symbol_s544;
[L5525]              havoc decimals_s544;
[L5526]              havoc __ret_0_name;
[L5527]              havoc __ret_0_symbol;
[L5528]              havoc __ret_0_decimals;
[L5529]              havoc __ret_0_governance;
[L5530]              havoc arg812_s0;
[L5531]              havoc __ret_0_minters;
[L5532]              havoc name_s730;
[L5533]              havoc ticker_s730;
[L5534]              havoc amount_s730;
[L5535]              havoc account_s751;
[L5536]              havoc amount_s751;
[L5537]              havoc _governance_s769;
[L5538]              havoc _minter_s789;
[L5539]              havoc _minter_s809;
[L5540]              havoc tmpNow;
[L5541]              havoc gas;
[L5542]              assume gas > 4000000 && gas <= 8000000;
[L5543]              tmpNow := now;
[L5544]              havoc now;
[L5545]              assume now > tmpNow;
[L5546]              assume msgsender_MSG != null;
[L5547]              assume DType[msgsender_MSG] != IERC20;
[L5548]              assume DType[msgsender_MSG] != Context;
[L5549]              assume DType[msgsender_MSG] != ERC20;
[L5550]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5551]              assume DType[msgsender_MSG] != SafeMath;
[L5552]              assume DType[msgsender_MSG] != Token;
[L5553]              Alloc[msgsender_MSG] := true;
[L5554]  COND TRUE   choice == 20
[L5555]              gas := gas - 21000;
[L5556]  COND TRUE   gas >= 0
[L5557]              assume msgvalue_MSG == 0;
[L5558]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L512]               havoc __exception;
[L513]               revert := false;
[L514]   COND FALSE  !(__exception)
[L543]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2807]              __ret_0_ := _totalSupply_ERC20[this];
[L543]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L544]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && governance_Token[this] == old(governance_Token[this])) && minters_Token[this] == old(minters_Token[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && exceptions_ERC20[this] == old(exceptions_ERC20[this])) && uniswap_ERC20[this] == old(uniswap_ERC20[this])) && _owner_ERC20[this] == old(_owner_ERC20[this]));
[L2]                 revert := revert_hold;
[L5558]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L5701]  RET         call CorralChoice_Token(this);

Loop:
[L5701]  CALL        call CorralChoice_Token(this);
[L5496]              havoc msgsender_MSG;
[L5497]              havoc msgvalue_MSG;
[L5498]              havoc choice;
[L5499]              havoc __ret_0_totalSupply;
[L5500]              havoc account_s181;
[L5501]              havoc __ret_0_balanceOf;
[L5502]              havoc recipient_s200;
[L5503]              havoc amount_s200;
[L5504]              havoc __ret_0_transfer;
[L5505]              havoc owner_s216;
[L5506]              havoc spender_s216;
[L5507]              havoc __ret_0_allowance;
[L5508]              havoc spender_s235;
[L5509]              havoc amount_s235;
[L5510]              havoc __ret_0_approve;
[L5511]              havoc sender_s271;
[L5512]              havoc recipient_s271;
[L5513]              havoc amount_s271;
[L5514]              havoc __ret_0_transferFrom;
[L5515]              havoc owner_s119;
[L5516]              havoc someAddress_s143;
[L5517]              havoc spender_s298;
[L5518]              havoc addedValue_s298;
[L5519]              havoc __ret_0_increaseAllowance;
[L5520]              havoc spender_s326;
[L5521]              havoc subtractedValue_s326;
[L5522]              havoc __ret_0_decreaseAllowance;
[L5523]              havoc name_s544;
[L5524]              havoc symbol_s544;
[L5525]              havoc decimals_s544;
[L5526]              havoc __ret_0_name;
[L5527]              havoc __ret_0_symbol;
[L5528]              havoc __ret_0_decimals;
[L5529]              havoc __ret_0_governance;
[L5530]              havoc arg812_s0;
[L5531]              havoc __ret_0_minters;
[L5532]              havoc name_s730;
[L5533]              havoc ticker_s730;
[L5534]              havoc amount_s730;
[L5535]              havoc account_s751;
[L5536]              havoc amount_s751;
[L5537]              havoc _governance_s769;
[L5538]              havoc _minter_s789;
[L5539]              havoc _minter_s809;
[L5540]              havoc tmpNow;
[L5541]              havoc gas;
[L5542]              assume gas > 4000000 && gas <= 8000000;
[L5543]              tmpNow := now;
[L5544]              havoc now;
[L5545]              assume now > tmpNow;
[L5546]              assume msgsender_MSG != null;
[L5547]              assume DType[msgsender_MSG] != IERC20;
[L5548]              assume DType[msgsender_MSG] != Context;
[L5549]              assume DType[msgsender_MSG] != ERC20;
[L5550]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5551]              assume DType[msgsender_MSG] != SafeMath;
[L5552]              assume DType[msgsender_MSG] != Token;
[L5553]              Alloc[msgsender_MSG] := true;
[L5554]  COND TRUE   choice == 20
[L5555]              gas := gas - 21000;
[L5556]  COND TRUE   gas >= 0
[L5557]              assume msgvalue_MSG == 0;
[L5558]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L512]               havoc __exception;
[L513]               revert := false;
[L514]   COND FALSE  !(__exception)
[L543]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2807]              __ret_0_ := _totalSupply_ERC20[this];
[L543]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L544]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && governance_Token[this] == old(governance_Token[this])) && minters_Token[this] == old(minters_Token[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && exceptions_ERC20[this] == old(exceptions_ERC20[this])) && uniswap_ERC20[this] == old(uniswap_ERC20[this])) && _owner_ERC20[this] == old(_owner_ERC20[this]));
[L2]                 revert := revert_hold;
[L5558]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L5701]  RET         call CorralChoice_Token(this);

[2020-11-25 05:56:55,538 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:56:55,538 INFO  L82        PathProgramCache]: Analyzing trace with hash 1683791421, now seen corresponding path program 1 times
[2020-11-25 05:56:55,539 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:56:55,552 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:56:55,595 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 05:56:55,595 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:56:55,595 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:56:55,596 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:56:55,596 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:56:55,596 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:56:55,596 INFO  L87              Difference]: Start difference. First operand 3715 states and 4254 transitions. cyclomatic complexity: 541 Second operand 3 states.
[2020-11-25 05:56:55,671 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:56:55,671 INFO  L93              Difference]: Finished difference Result 4419 states and 4996 transitions.
[2020-11-25 05:56:55,671 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:56:55,671 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4419 states and 4996 transitions.
[2020-11-25 05:56:55,685 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:56:55,706 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4419 states to 4177 states and 4718 transitions.
[2020-11-25 05:56:55,706 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1102
[2020-11-25 05:56:55,707 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1122
[2020-11-25 05:56:55,707 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4177 states and 4718 transitions.
[2020-11-25 05:56:55,713 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:56:55,713 INFO  L728         BuchiCegarLoop]: Abstraction has 4177 states and 4718 transitions.
[2020-11-25 05:56:55,718 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4177 states and 4718 transitions.
[2020-11-25 05:56:55,757 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4177 to 3769.
[2020-11-25 05:56:55,758 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3769 states.
[2020-11-25 05:56:55,762 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3769 states to 3769 states and 4204 transitions.
[2020-11-25 05:56:55,762 INFO  L751         BuchiCegarLoop]: Abstraction has 3769 states and 4204 transitions.
[2020-11-25 05:56:55,762 INFO  L631         BuchiCegarLoop]: Abstraction has 3769 states and 4204 transitions.
[2020-11-25 05:56:55,762 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 05:56:55,763 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3769 states and 4204 transitions.
[2020-11-25 05:56:55,769 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:56:55,769 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:56:55,769 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:56:55,772 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:56:55,772 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L5691]              assume null == 0;
[L5692]  CALL        call this := FreshRefGenerator__success();
[L2547]              havoc newRef;
[L2548]              assume Alloc[newRef] == false;
[L2549]              Alloc[newRef] := true;
[L2550]              assume newRef != null;
[L5692]  RET         call this := FreshRefGenerator__success();
[L5693]              assume now >= 0;
[L5694]              assume DType[this] == Token;
[L5695]              assume msgvalue_MSG == 0;
[L5696]              gas := gas - 53000;
[L5697]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1447]              havoc __exception;
[L1448]              revert := false;
[L1449]  COND FALSE  !(__exception)
[L1478]  CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3817]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2611]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2596]              assume msgsender_MSG != null;
[L2597]              Balance[this] := 0;
[L2611]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  COND FALSE  !(revert)
[L3817]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3818]  COND FALSE  !(revert)
[L3821]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L3821]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3822]  COND FALSE  !(revert)
[L3826]              havoc __var_29;
[L3827]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L2681]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2611]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2596]              assume msgsender_MSG != null;
[L2597]              Balance[this] := 0;
[L2611]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  COND FALSE  !(revert)
[L2681]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2682]  COND FALSE  !(revert)
[L2685]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L2685]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L2689]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2649]              assume msgsender_MSG != null;
[L2650]              Balance[this] := 0;
[L2651]              _balances_ERC20[this] := zeroRefintArr();
[L2652]              sum__balances0[this] := 0;
[L2653]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2654]              sum__allowances1[this] := 0;
[L2655]              exceptions_ERC20[this] := zeroRefboolArr();
[L2656]              uniswap_ERC20[this] := null;
[L2657]              _owner_ERC20[this] := null;
[L2658]              _totalSupply_ERC20[this] := 0;
[L2660]              _owner_ERC20[this] := owner_s119;
[L2689]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2690]  COND FALSE  !(revert)
[L3827]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L3828]  COND FALSE  !(revert)
[L3831]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3549]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L3549]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3550]  COND FALSE  !(revert)
[L3553]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3524]              assume msgsender_MSG != null;
[L3525]              Balance[this] := 0;
[L3526]              _name_ERC20Detailed[this] := -1081022691;
[L3527]              _symbol_ERC20Detailed[this] := -1081022691;
[L3528]              _decimals_ERC20Detailed[this] := 0;
[L3530]              _name_ERC20Detailed[this] := name_s544;
[L3531]              _symbol_ERC20Detailed[this] := symbol_s544;
[L3532]              _decimals_ERC20Detailed[this] := decimals_s544;
[L3553]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3554]  COND FALSE  !(revert)
[L3831]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3832]  COND FALSE  !(revert)
[L3835]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3763]              assume msgsender_MSG != null;
[L3764]              Balance[this] := 0;
[L3765]              governance_Token[this] := null;
[L3766]              minters_Token[this] := zeroRefboolArr();
[L3769]              havoc __var_27;
[L3770]              governance_Token[this] := __var_27;
[L3772]              havoc __var_28;
[L3773]  CALL        call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3902]  COND FALSE  !(!(msgsender_MSG == governance_Token[this]))
[L3906]              minters_Token[this][_minter_s789] := true;
[L3773]  RET         call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3774]  COND FALSE  !(revert)
[L3777]  CALL        call mint~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, governance_Token[this], amount_s730);
[L3859]  COND FALSE  !(!minters_Token[this][msgsender_MSG])
[L3863]  COND TRUE   DType[this] == Token
[L3864]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s751, amount_s751);
[L3399]              __var_19 := null;
[L3400]  COND FALSE  !(!(account_s426 != null))
[L3404]  CALL        call __var_20 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s426);
[L3642]              c_s594 := (a_s594 + b_s594) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3643]  COND FALSE  !(!(c_s594 >= a_s594))
[L3647]              __ret_0_ := c_s594;
[L3404]  RET         call __var_20 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s426);
[L3405]  COND FALSE  !(revert)
[L3408]              _totalSupply_ERC20[this] := __var_20;
[L3409]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s426], amount_s426);
[L3642]              c_s594 := (a_s594 + b_s594) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3643]  COND FALSE  !(!(c_s594 >= a_s594))
[L3647]              __ret_0_ := c_s594;
[L3409]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s426], amount_s426);
[L3410]  COND FALSE  !(revert)
[L3413]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s426];
[L3414]              _balances_ERC20[this][account_s426] := __var_21;
[L3415]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s426];
[L3416]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3864]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s751, amount_s751);
[L3865]  COND FALSE  !(revert)
[L3777]  RET         call mint~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, governance_Token[this], amount_s730);
[L3778]  COND FALSE  !(revert)
[L3835]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3836]  COND FALSE  !(revert)
[L1478]  RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1479]              assume !revert && gas >= 0;
[L5697]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L5698]              assume !revert && gas >= 0;
[L5701]  CALL        call CorralChoice_Token(this);
[L5496]              havoc msgsender_MSG;
[L5497]              havoc msgvalue_MSG;
[L5498]              havoc choice;
[L5499]              havoc __ret_0_totalSupply;
[L5500]              havoc account_s181;
[L5501]              havoc __ret_0_balanceOf;
[L5502]              havoc recipient_s200;
[L5503]              havoc amount_s200;
[L5504]              havoc __ret_0_transfer;
[L5505]              havoc owner_s216;
[L5506]              havoc spender_s216;
[L5507]              havoc __ret_0_allowance;
[L5508]              havoc spender_s235;
[L5509]              havoc amount_s235;
[L5510]              havoc __ret_0_approve;
[L5511]              havoc sender_s271;
[L5512]              havoc recipient_s271;
[L5513]              havoc amount_s271;
[L5514]              havoc __ret_0_transferFrom;
[L5515]              havoc owner_s119;
[L5516]              havoc someAddress_s143;
[L5517]              havoc spender_s298;
[L5518]              havoc addedValue_s298;
[L5519]              havoc __ret_0_increaseAllowance;
[L5520]              havoc spender_s326;
[L5521]              havoc subtractedValue_s326;
[L5522]              havoc __ret_0_decreaseAllowance;
[L5523]              havoc name_s544;
[L5524]              havoc symbol_s544;
[L5525]              havoc decimals_s544;
[L5526]              havoc __ret_0_name;
[L5527]              havoc __ret_0_symbol;
[L5528]              havoc __ret_0_decimals;
[L5529]              havoc __ret_0_governance;
[L5530]              havoc arg812_s0;
[L5531]              havoc __ret_0_minters;
[L5532]              havoc name_s730;
[L5533]              havoc ticker_s730;
[L5534]              havoc amount_s730;
[L5535]              havoc account_s751;
[L5536]              havoc amount_s751;
[L5537]              havoc _governance_s769;
[L5538]              havoc _minter_s789;
[L5539]              havoc _minter_s809;
[L5540]              havoc tmpNow;
[L5541]              havoc gas;
[L5542]              assume gas > 4000000 && gas <= 8000000;
[L5543]              tmpNow := now;
[L5544]              havoc now;
[L5545]              assume now > tmpNow;
[L5546]              assume msgsender_MSG != null;
[L5547]              assume DType[msgsender_MSG] != IERC20;
[L5548]              assume DType[msgsender_MSG] != Context;
[L5549]              assume DType[msgsender_MSG] != ERC20;
[L5550]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5551]              assume DType[msgsender_MSG] != SafeMath;
[L5552]              assume DType[msgsender_MSG] != Token;
[L5553]              Alloc[msgsender_MSG] := true;
[L5554]  COND TRUE   choice == 20
[L5555]              gas := gas - 21000;
[L5556]  COND TRUE   gas >= 0
[L5557]              assume msgvalue_MSG == 0;
[L5558]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L512]               havoc __exception;
[L513]               revert := false;
[L514]   COND FALSE  !(__exception)
[L543]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2807]              __ret_0_ := _totalSupply_ERC20[this];
[L543]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L544]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && governance_Token[this] == old(governance_Token[this])) && minters_Token[this] == old(minters_Token[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && exceptions_ERC20[this] == old(exceptions_ERC20[this])) && uniswap_ERC20[this] == old(uniswap_ERC20[this])) && _owner_ERC20[this] == old(_owner_ERC20[this]));
[L2]                 revert := revert_hold;
[L5558]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L5701]  RET         call CorralChoice_Token(this);

Loop:
[L5701]  CALL        call CorralChoice_Token(this);
[L5496]              havoc msgsender_MSG;
[L5497]              havoc msgvalue_MSG;
[L5498]              havoc choice;
[L5499]              havoc __ret_0_totalSupply;
[L5500]              havoc account_s181;
[L5501]              havoc __ret_0_balanceOf;
[L5502]              havoc recipient_s200;
[L5503]              havoc amount_s200;
[L5504]              havoc __ret_0_transfer;
[L5505]              havoc owner_s216;
[L5506]              havoc spender_s216;
[L5507]              havoc __ret_0_allowance;
[L5508]              havoc spender_s235;
[L5509]              havoc amount_s235;
[L5510]              havoc __ret_0_approve;
[L5511]              havoc sender_s271;
[L5512]              havoc recipient_s271;
[L5513]              havoc amount_s271;
[L5514]              havoc __ret_0_transferFrom;
[L5515]              havoc owner_s119;
[L5516]              havoc someAddress_s143;
[L5517]              havoc spender_s298;
[L5518]              havoc addedValue_s298;
[L5519]              havoc __ret_0_increaseAllowance;
[L5520]              havoc spender_s326;
[L5521]              havoc subtractedValue_s326;
[L5522]              havoc __ret_0_decreaseAllowance;
[L5523]              havoc name_s544;
[L5524]              havoc symbol_s544;
[L5525]              havoc decimals_s544;
[L5526]              havoc __ret_0_name;
[L5527]              havoc __ret_0_symbol;
[L5528]              havoc __ret_0_decimals;
[L5529]              havoc __ret_0_governance;
[L5530]              havoc arg812_s0;
[L5531]              havoc __ret_0_minters;
[L5532]              havoc name_s730;
[L5533]              havoc ticker_s730;
[L5534]              havoc amount_s730;
[L5535]              havoc account_s751;
[L5536]              havoc amount_s751;
[L5537]              havoc _governance_s769;
[L5538]              havoc _minter_s789;
[L5539]              havoc _minter_s809;
[L5540]              havoc tmpNow;
[L5541]              havoc gas;
[L5542]              assume gas > 4000000 && gas <= 8000000;
[L5543]              tmpNow := now;
[L5544]              havoc now;
[L5545]              assume now > tmpNow;
[L5546]              assume msgsender_MSG != null;
[L5547]              assume DType[msgsender_MSG] != IERC20;
[L5548]              assume DType[msgsender_MSG] != Context;
[L5549]              assume DType[msgsender_MSG] != ERC20;
[L5550]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5551]              assume DType[msgsender_MSG] != SafeMath;
[L5552]              assume DType[msgsender_MSG] != Token;
[L5553]              Alloc[msgsender_MSG] := true;
[L5554]  COND TRUE   choice == 20
[L5555]              gas := gas - 21000;
[L5556]  COND TRUE   gas >= 0
[L5557]              assume msgvalue_MSG == 0;
[L5558]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L512]               havoc __exception;
[L513]               revert := false;
[L514]   COND FALSE  !(__exception)
[L543]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2807]              __ret_0_ := _totalSupply_ERC20[this];
[L543]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L544]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && governance_Token[this] == old(governance_Token[this])) && minters_Token[this] == old(minters_Token[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && exceptions_ERC20[this] == old(exceptions_ERC20[this])) && uniswap_ERC20[this] == old(uniswap_ERC20[this])) && _owner_ERC20[this] == old(_owner_ERC20[this]));
[L2]                 revert := revert_hold;
[L5558]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L5701]  RET         call CorralChoice_Token(this);

[2020-11-25 05:56:55,775 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:56:55,775 INFO  L82        PathProgramCache]: Analyzing trace with hash 1503396668, now seen corresponding path program 1 times
[2020-11-25 05:56:55,776 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:56:55,793 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:56:55,865 INFO  L134       CoverageAnalysis]: Checked inductivity of 45 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 45 trivial. 0 not checked.
[2020-11-25 05:56:55,865 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:56:55,865 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:56:55,866 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:56:55,866 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:56:55,866 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:56:55,866 INFO  L87              Difference]: Start difference. First operand 3769 states and 4204 transitions. cyclomatic complexity: 437 Second operand 4 states.
[2020-11-25 05:56:55,908 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:56:55,908 INFO  L93              Difference]: Finished difference Result 3770 states and 4203 transitions.
[2020-11-25 05:56:55,908 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:56:55,908 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3770 states and 4203 transitions.
[2020-11-25 05:56:55,916 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:56:55,926 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3770 states to 3760 states and 4193 transitions.
[2020-11-25 05:56:55,926 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1051
[2020-11-25 05:56:55,927 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1051
[2020-11-25 05:56:55,927 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3760 states and 4193 transitions.
[2020-11-25 05:56:55,930 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:56:55,930 INFO  L728         BuchiCegarLoop]: Abstraction has 3760 states and 4193 transitions.
[2020-11-25 05:56:55,934 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3760 states and 4193 transitions.
[2020-11-25 05:56:55,960 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3760 to 3758.
[2020-11-25 05:56:55,960 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3758 states.
[2020-11-25 05:56:55,963 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3758 states to 3758 states and 4191 transitions.
[2020-11-25 05:56:55,963 INFO  L751         BuchiCegarLoop]: Abstraction has 3758 states and 4191 transitions.
[2020-11-25 05:56:55,964 INFO  L631         BuchiCegarLoop]: Abstraction has 3758 states and 4191 transitions.
[2020-11-25 05:56:55,964 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 05:56:55,964 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3758 states and 4191 transitions.
[2020-11-25 05:56:55,968 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:56:55,968 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:56:55,968 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:56:55,970 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:56:55,970 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L5691]              assume null == 0;
[L5692]  CALL        call this := FreshRefGenerator__success();
[L2547]              havoc newRef;
[L2548]              assume Alloc[newRef] == false;
[L2549]              Alloc[newRef] := true;
[L2550]              assume newRef != null;
[L5692]  RET         call this := FreshRefGenerator__success();
[L5693]              assume now >= 0;
[L5694]              assume DType[this] == Token;
[L5695]              assume msgvalue_MSG == 0;
[L5696]              gas := gas - 53000;
[L5697]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1447]              havoc __exception;
[L1448]              revert := false;
[L1449]  COND FALSE  !(__exception)
[L1478]  CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3817]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2611]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2596]              assume msgsender_MSG != null;
[L2597]              Balance[this] := 0;
[L2611]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  COND FALSE  !(revert)
[L3817]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3818]  COND FALSE  !(revert)
[L3821]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L3821]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3822]  COND FALSE  !(revert)
[L3826]              havoc __var_29;
[L3827]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L2681]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2611]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2596]              assume msgsender_MSG != null;
[L2597]              Balance[this] := 0;
[L2611]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  COND FALSE  !(revert)
[L2681]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2682]  COND FALSE  !(revert)
[L2685]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L2685]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L2689]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2649]              assume msgsender_MSG != null;
[L2650]              Balance[this] := 0;
[L2651]              _balances_ERC20[this] := zeroRefintArr();
[L2652]              sum__balances0[this] := 0;
[L2653]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2654]              sum__allowances1[this] := 0;
[L2655]              exceptions_ERC20[this] := zeroRefboolArr();
[L2656]              uniswap_ERC20[this] := null;
[L2657]              _owner_ERC20[this] := null;
[L2658]              _totalSupply_ERC20[this] := 0;
[L2660]              _owner_ERC20[this] := owner_s119;
[L2689]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2690]  COND FALSE  !(revert)
[L3827]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L3828]  COND FALSE  !(revert)
[L3831]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3549]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2579]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2564]              assume msgsender_MSG != null;
[L2565]              Balance[this] := 0;
[L2579]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  COND FALSE  !(revert)
[L3549]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3550]  COND FALSE  !(revert)
[L3553]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3524]              assume msgsender_MSG != null;
[L3525]              Balance[this] := 0;
[L3526]              _name_ERC20Detailed[this] := -1081022691;
[L3527]              _symbol_ERC20Detailed[this] := -1081022691;
[L3528]              _decimals_ERC20Detailed[this] := 0;
[L3530]              _name_ERC20Detailed[this] := name_s544;
[L3531]              _symbol_ERC20Detailed[this] := symbol_s544;
[L3532]              _decimals_ERC20Detailed[this] := decimals_s544;
[L3553]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3554]  COND FALSE  !(revert)
[L3831]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3832]  COND FALSE  !(revert)
[L3835]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3763]              assume msgsender_MSG != null;
[L3764]              Balance[this] := 0;
[L3765]              governance_Token[this] := null;
[L3766]              minters_Token[this] := zeroRefboolArr();
[L3769]              havoc __var_27;
[L3770]              governance_Token[this] := __var_27;
[L3772]              havoc __var_28;
[L3773]  CALL        call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3902]  COND FALSE  !(!(msgsender_MSG == governance_Token[this]))
[L3906]              minters_Token[this][_minter_s789] := true;
[L3773]  RET         call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3774]  COND FALSE  !(revert)
[L3777]  CALL        call mint~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, governance_Token[this], amount_s730);
[L3859]  COND FALSE  !(!minters_Token[this][msgsender_MSG])
[L3863]  COND TRUE   DType[this] == Token
[L3864]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s751, amount_s751);
[L3399]              __var_19 := null;
[L3400]  COND FALSE  !(!(account_s426 != null))
[L3404]  CALL        call __var_20 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s426);
[L3642]              c_s594 := (a_s594 + b_s594) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3643]  COND FALSE  !(!(c_s594 >= a_s594))
[L3647]              __ret_0_ := c_s594;
[L3404]  RET         call __var_20 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s426);
[L3405]  COND FALSE  !(revert)
[L3408]              _totalSupply_ERC20[this] := __var_20;
[L3409]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s426], amount_s426);
[L3642]              c_s594 := (a_s594 + b_s594) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3643]  COND FALSE  !(!(c_s594 >= a_s594))
[L3647]              __ret_0_ := c_s594;
[L3409]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s426], amount_s426);
[L3410]  COND FALSE  !(revert)
[L3413]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s426];
[L3414]              _balances_ERC20[this][account_s426] := __var_21;
[L3415]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s426];
[L3416]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3864]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s751, amount_s751);
[L3865]  COND FALSE  !(revert)
[L3777]  RET         call mint~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, governance_Token[this], amount_s730);
[L3778]  COND FALSE  !(revert)
[L3835]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3836]  COND FALSE  !(revert)
[L1478]  RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1479]              assume !revert && gas >= 0;
[L5697]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L5698]              assume !revert && gas >= 0;
[L5701]  CALL        call CorralChoice_Token(this);
[L5496]              havoc msgsender_MSG;
[L5497]              havoc msgvalue_MSG;
[L5498]              havoc choice;
[L5499]              havoc __ret_0_totalSupply;
[L5500]              havoc account_s181;
[L5501]              havoc __ret_0_balanceOf;
[L5502]              havoc recipient_s200;
[L5503]              havoc amount_s200;
[L5504]              havoc __ret_0_transfer;
[L5505]              havoc owner_s216;
[L5506]              havoc spender_s216;
[L5507]              havoc __ret_0_allowance;
[L5508]              havoc spender_s235;
[L5509]              havoc amount_s235;
[L5510]              havoc __ret_0_approve;
[L5511]              havoc sender_s271;
[L5512]              havoc recipient_s271;
[L5513]              havoc amount_s271;
[L5514]              havoc __ret_0_transferFrom;
[L5515]              havoc owner_s119;
[L5516]              havoc someAddress_s143;
[L5517]              havoc spender_s298;
[L5518]              havoc addedValue_s298;
[L5519]              havoc __ret_0_increaseAllowance;
[L5520]              havoc spender_s326;
[L5521]              havoc subtractedValue_s326;
[L5522]              havoc __ret_0_decreaseAllowance;
[L5523]              havoc name_s544;
[L5524]              havoc symbol_s544;
[L5525]              havoc decimals_s544;
[L5526]              havoc __ret_0_name;
[L5527]              havoc __ret_0_symbol;
[L5528]              havoc __ret_0_decimals;
[L5529]              havoc __ret_0_governance;
[L5530]              havoc arg812_s0;
[L5531]              havoc __ret_0_minters;
[L5532]              havoc name_s730;
[L5533]              havoc ticker_s730;
[L5534]              havoc amount_s730;
[L5535]              havoc account_s751;
[L5536]              havoc amount_s751;
[L5537]              havoc _governance_s769;
[L5538]              havoc _minter_s789;
[L5539]              havoc _minter_s809;
[L5540]              havoc tmpNow;
[L5541]              havoc gas;
[L5542]              assume gas > 4000000 && gas <= 8000000;
[L5543]              tmpNow := now;
[L5544]              havoc now;
[L5545]              assume now > tmpNow;
[L5546]              assume msgsender_MSG != null;
[L5547]              assume DType[msgsender_MSG] != IERC20;
[L5548]              assume DType[msgsender_MSG] != Context;
[L5549]              assume DType[msgsender_MSG] != ERC20;
[L5550]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5551]              assume DType[msgsender_MSG] != SafeMath;
[L5552]              assume DType[msgsender_MSG] != Token;
[L5553]              Alloc[msgsender_MSG] := true;
[L5554]  COND TRUE   choice == 20
[L5555]              gas := gas - 21000;
[L5556]  COND TRUE   gas >= 0
[L5557]              assume msgvalue_MSG == 0;
[L5558]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L512]               havoc __exception;
[L513]               revert := false;
[L514]   COND TRUE   __exception
[L515]               __tmp__Balance := Balance;
[L516]               __tmp__DType := DType;
[L517]               __tmp__Alloc := Alloc;
[L518]               __tmp__balance_ADDR := balance_ADDR;
[L519]               __tmp__M_Ref_int := M_Ref_int;
[L520]               __tmp__sum__balances0 := sum__balances0;
[L521]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L522]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L523]               __tmp__sum__allowances1 := sum__allowances1;
[L524]               __tmp__M_Ref_bool := M_Ref_bool;
[L525]               __tmp__sum_exceptions2 := sum_exceptions2;
[L526]               __tmp__sum_minters3 := sum_minters3;
[L527]               __tmp__Length := Length;
[L528]               __tmp__now := now;
[L529]               __tmp___balances_ERC20 := _balances_ERC20;
[L530]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L531]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L532]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L533]               __tmp___owner_ERC20 := _owner_ERC20;
[L534]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L535]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L536]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L537]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L538]               __tmp__governance_Token := governance_Token;
[L539]               __tmp__minters_Token := minters_Token;
[L540]   CALL        call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2801]              __ret_0_ := __tmp___totalSupply_ERC20[this];
[L540]   RET         call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L541]               assume revert || gas < 0;
[L5558]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L5701]  RET         call CorralChoice_Token(this);

Loop:
[L5701]  CALL       call CorralChoice_Token(this);
[L5496]             havoc msgsender_MSG;
[L5497]             havoc msgvalue_MSG;
[L5498]             havoc choice;
[L5499]             havoc __ret_0_totalSupply;
[L5500]             havoc account_s181;
[L5501]             havoc __ret_0_balanceOf;
[L5502]             havoc recipient_s200;
[L5503]             havoc amount_s200;
[L5504]             havoc __ret_0_transfer;
[L5505]             havoc owner_s216;
[L5506]             havoc spender_s216;
[L5507]             havoc __ret_0_allowance;
[L5508]             havoc spender_s235;
[L5509]             havoc amount_s235;
[L5510]             havoc __ret_0_approve;
[L5511]             havoc sender_s271;
[L5512]             havoc recipient_s271;
[L5513]             havoc amount_s271;
[L5514]             havoc __ret_0_transferFrom;
[L5515]             havoc owner_s119;
[L5516]             havoc someAddress_s143;
[L5517]             havoc spender_s298;
[L5518]             havoc addedValue_s298;
[L5519]             havoc __ret_0_increaseAllowance;
[L5520]             havoc spender_s326;
[L5521]             havoc subtractedValue_s326;
[L5522]             havoc __ret_0_decreaseAllowance;
[L5523]             havoc name_s544;
[L5524]             havoc symbol_s544;
[L5525]             havoc decimals_s544;
[L5526]             havoc __ret_0_name;
[L5527]             havoc __ret_0_symbol;
[L5528]             havoc __ret_0_decimals;
[L5529]             havoc __ret_0_governance;
[L5530]             havoc arg812_s0;
[L5531]             havoc __ret_0_minters;
[L5532]             havoc name_s730;
[L5533]             havoc ticker_s730;
[L5534]             havoc amount_s730;
[L5535]             havoc account_s751;
[L5536]             havoc amount_s751;
[L5537]             havoc _governance_s769;
[L5538]             havoc _minter_s789;
[L5539]             havoc _minter_s809;
[L5540]             havoc tmpNow;
[L5541]             havoc gas;
[L5542]             assume gas > 4000000 && gas <= 8000000;
[L5543]             tmpNow := now;
[L5544]             havoc now;
[L5545]             assume now > tmpNow;
[L5546]             assume msgsender_MSG != null;
[L5547]             assume DType[msgsender_MSG] != IERC20;
[L5548]             assume DType[msgsender_MSG] != Context;
[L5549]             assume DType[msgsender_MSG] != ERC20;
[L5550]             assume DType[msgsender_MSG] != ERC20Detailed;
[L5551]             assume DType[msgsender_MSG] != SafeMath;
[L5552]             assume DType[msgsender_MSG] != Token;
[L5553]             Alloc[msgsender_MSG] := true;
[L5554]  COND TRUE  choice == 20
[L5555]             gas := gas - 21000;
[L5556]  COND TRUE  gas >= 0
[L5557]             assume msgvalue_MSG == 0;
[L5558]  CALL       call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                revert_hold := revert;
[L2]                revert := false;
[L2]                assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                call_totalSupply_ERC200 := true;
[L2]                call_totalSupply_ERC200 := false;
[L2]                revert := revert_hold;
[L512]              havoc __exception;
[L513]              revert := false;
[L514]   COND TRUE  __exception
[L515]              __tmp__Balance := Balance;
[L516]              __tmp__DType := DType;
[L517]              __tmp__Alloc := Alloc;
[L518]              __tmp__balance_ADDR := balance_ADDR;
[L519]              __tmp__M_Ref_int := M_Ref_int;
[L520]              __tmp__sum__balances0 := sum__balances0;
[L521]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L522]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L523]              __tmp__sum__allowances1 := sum__allowances1;
[L524]              __tmp__M_Ref_bool := M_Ref_bool;
[L525]              __tmp__sum_exceptions2 := sum_exceptions2;
[L526]              __tmp__sum_minters3 := sum_minters3;
[L527]              __tmp__Length := Length;
[L528]              __tmp__now := now;
[L529]              __tmp___balances_ERC20 := _balances_ERC20;
[L530]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L531]              __tmp__exceptions_ERC20 := exceptions_ERC20;
[L532]              __tmp__uniswap_ERC20 := uniswap_ERC20;
[L533]              __tmp___owner_ERC20 := _owner_ERC20;
[L534]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L535]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L536]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L537]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L538]              __tmp__governance_Token := governance_Token;
[L539]              __tmp__minters_Token := minters_Token;
[L540]   CALL       call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2801]             __ret_0_ := __tmp___totalSupply_ERC20[this];
[L540]   RET        call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L541]              assume revert || gas < 0;
[L5558]  RET        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L5701]  RET        call CorralChoice_Token(this);

[2020-11-25 05:56:55,974 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:56:55,974 INFO  L82        PathProgramCache]: Analyzing trace with hash 1198072299, now seen corresponding path program 1 times
[2020-11-25 05:56:55,974 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:56:55,986 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:56:56,025 INFO  L134       CoverageAnalysis]: Checked inductivity of 45 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 45 trivial. 0 not checked.
[2020-11-25 05:56:56,025 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:56:56,025 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 05:56:56,026 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:56:56,026 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 05:56:56,026 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 05:56:56,026 INFO  L87              Difference]: Start difference. First operand 3758 states and 4191 transitions. cyclomatic complexity: 435 Second operand 5 states.
[2020-11-25 05:56:56,248 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:56:56,248 INFO  L93              Difference]: Finished difference Result 2454 states and 2713 transitions.
[2020-11-25 05:56:56,248 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 05:56:56,248 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2454 states and 2713 transitions.
[2020-11-25 05:56:56,253 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 05:56:56,253 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2454 states to 0 states and 0 transitions.
[2020-11-25 05:56:56,253 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 05:56:56,253 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 05:56:56,253 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 05:56:56,254 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:56:56,254 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 05:56:56,254 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 05:56:56,254 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 05:56:56,254 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 05:56:56,254 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 05:56:56,254 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 05:56:56,254 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 05:56:56,257 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:56:56 BasicIcfg
[2020-11-25 05:56:56,257 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 05:56:56,257 INFO  L168              Benchmark]: Toolchain (without parser) took 4800.21 ms. Allocated memory was 1.0 GB in the beginning and 1.5 GB in the end (delta: 456.1 MB). Free memory was 935.2 MB in the beginning and 978.7 MB in the end (delta: -43.5 MB). Peak memory consumption was 412.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:56:56,258 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.20 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:56:56,258 INFO  L168              Benchmark]: Boogie Preprocessor took 126.01 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:56:56,259 INFO  L168              Benchmark]: UtopiaSpecLang took 63.33 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:56:56,259 INFO  L168              Benchmark]: Boogie Printer took 17.69 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:56:56,259 INFO  L168              Benchmark]: RCFGBuilder took 803.22 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 763.4 MB in the end (delta: 145.0 MB). Peak memory consumption was 145.0 MB. Max. memory is 15.3 GB.
[2020-11-25 05:56:56,260 INFO  L168              Benchmark]: UtopiaLTL2Aut took 35.63 ms. Allocated memory is still 1.0 GB. Free memory was 763.4 MB in the beginning and 759.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:56:56,260 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1382.55 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 211.3 MB). Free memory was 759.8 MB in the beginning and 827.6 MB in the end (delta: -67.8 MB). Peak memory consumption was 162.2 MB. Max. memory is 15.3 GB.
[2020-11-25 05:56:56,260 INFO  L168              Benchmark]: BlockEncodingV2 took 160.44 ms. Allocated memory is still 1.2 GB. Free memory was 827.6 MB in the beginning and 745.1 MB in the end (delta: 82.5 MB). Peak memory consumption was 82.5 MB. Max. memory is 15.3 GB.
[2020-11-25 05:56:56,261 INFO  L168              Benchmark]: BuchiAutomizer took 2208.40 ms. Allocated memory was 1.2 GB in the beginning and 1.5 GB in the end (delta: 244.8 MB). Free memory was 745.1 MB in the beginning and 978.7 MB in the end (delta: -233.6 MB). Peak memory consumption was 11.3 MB. Max. memory is 15.3 GB.
[2020-11-25 05:56:56,263 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5238 locations, 9364 edges
  - StatisticsResult: Encoded RCFG
    5134 locations, 9075 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.20 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 126.01 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 63.33 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 17.69 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 803.22 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 763.4 MB in the end (delta: 145.0 MB). Peak memory consumption was 145.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 35.63 ms. Allocated memory is still 1.0 GB. Free memory was 763.4 MB in the beginning and 759.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1382.55 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 211.3 MB). Free memory was 759.8 MB in the beginning and 827.6 MB in the end (delta: -67.8 MB). Peak memory consumption was 162.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 160.44 ms. Allocated memory is still 1.2 GB. Free memory was 827.6 MB in the beginning and 745.1 MB in the end (delta: 82.5 MB). Peak memory consumption was 82.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2208.40 ms. Allocated memory was 1.2 GB in the beginning and 1.5 GB in the end (delta: 244.8 MB). Free memory was 745.1 MB in the beginning and 978.7 MB in the end (delta: -233.6 MB). Peak memory consumption was 11.3 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2126 locations, 2889 edges
  - StatisticsResult: BuchiProgram size
    5238 locations, 9364 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.1s and 6 iterations.  TraceHistogramMax:3. Analysis of lassos took 0.6s. Construction of modules took 0.5s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 4 MinimizatonAttempts, 1120 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3769 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 19063 SDtfs, 12372 SDslu, 18063 SDs, 0 SdLazy, 2612 SolverSat, 2917 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.5s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_totalSupply_ERC200) ==> ( <>(success_totalSupply_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
