This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 01:52:37,416 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 01:52:37,417 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 01:52:37,428 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 01:52:37,428 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 01:52:37,428 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 01:52:37,430 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 01:52:37,431 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 01:52:37,433 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 01:52:37,433 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 01:52:37,434 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 01:52:37,434 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 01:52:37,435 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 01:52:37,436 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 01:52:37,437 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 01:52:37,437 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 01:52:37,438 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 01:52:37,439 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 01:52:37,441 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 01:52:37,442 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 01:52:37,443 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 01:52:37,444 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 01:52:37,446 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 01:52:37,446 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 01:52:37,446 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 01:52:37,447 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 01:52:37,447 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 01:52:37,448 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 01:52:37,448 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 01:52:37,448 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 01:52:37,449 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 01:52:37,449 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 01:52:37,450 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 01:52:37,450 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 01:52:37,451 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 01:52:37,451 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 01:52:37,452 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 01:52:37,452 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 01:52:37,452 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 01:52:37,453 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 01:52:37,453 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 01:52:37,453 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 01:52:37,464 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 01:52:37,465 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 01:52:37,465 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 01:52:37,465 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 01:52:37,466 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 01:52:37,466 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 01:52:37,466 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 01:52:37,466 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 01:52:37,466 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 01:52:37,466 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 01:52:37,466 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 01:52:37,466 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 01:52:37,466 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 01:52:37,467 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 01:52:37,467 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 01:52:37,467 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 01:52:37,467 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 01:52:37,467 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 01:52:37,467 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 01:52:37,467 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 01:52:37,467 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 01:52:37,467 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 01:52:37,467 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 01:52:37,468 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 01:52:37,468 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 01:52:37,468 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 01:52:37,489 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 01:52:37,501 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 01:52:37,503 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 01:52:37,505 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 01:52:37,506 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 01:52:37,507 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl
[2020-11-25 01:52:37,507 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl'
[2020-11-25 01:52:37,591 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 01:52:37,592 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 01:52:37,592 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 01:52:37,592 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 01:52:37,592 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 01:52:37,608 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:37" (1/1) ...
[2020-11-25 01:52:37,610 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:37" (1/1) ...
[2020-11-25 01:52:37,638 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:37" (1/1) ...
[2020-11-25 01:52:37,639 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:37" (1/1) ...
[2020-11-25 01:52:37,658 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:37" (1/1) ...
[2020-11-25 01:52:37,668 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:37" (1/1) ...
[2020-11-25 01:52:37,674 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:37" (1/1) ...
[2020-11-25 01:52:37,682 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 01:52:37,683 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 01:52:37,683 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 01:52:37,685 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 01:52:37,688 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:37" (1/1) ...
[2020-11-25 01:52:37,706 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(MyToken.totalSupply, _totalSupply_MyToken[this] >= 0 && _totalSupply_MyToken[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(MyToken.totalSupply, return == _totalSupply_MyToken[this] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this]) && balances_MyToken[this] == old(balances_MyToken[this]) && allowed_MyToken[this] == old(allowed_MyToken[this]) && symbol_MyToken[this] == old(symbol_MyToken[this]) && name_MyToken[this] == old(name_MyToken[this]) && decimals_MyToken[this] == old(decimals_MyToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 01:52:37,711 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(MyToken.totalSupply, _totalSupply_MyToken[this] >= 0 && _totalSupply_MyToken[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(MyToken.totalSupply, return == _totalSupply_MyToken[this] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this]) && balances_MyToken[this] == old(balances_MyToken[this]) && allowed_MyToken[this] == old(allowed_MyToken[this]) && symbol_MyToken[this] == old(symbol_MyToken[this]) && name_MyToken[this] == old(name_MyToken[this]) && decimals_MyToken[this] == old(decimals_MyToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 01:52:37,718 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(MyToken.totalSupply, _totalSupply_MyToken[this] >= 0 && _totalSupply_MyToken[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(MyToken.totalSupply, return == _totalSupply_MyToken[this] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this]) && balances_MyToken[this] == old(balances_MyToken[this]) && allowed_MyToken[this] == old(allowed_MyToken[this]) && symbol_MyToken[this] == old(symbol_MyToken[this]) && name_MyToken[this] == old(name_MyToken[this]) && decimals_MyToken[this] == old(decimals_MyToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 01:52:37,724 INFO  L636   opiaSpecLangObserver]: Parsed ( _totalSupply_MyToken[this]>=0 && _totalSupply_MyToken[this]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[IdentifierExpression[_totalSupply_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 01:52:37,726 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( __ret_0_==_totalSupply_MyToken[this] && _totalSupply_MyToken[this]==( old(_totalSupply_MyToken[this]) ) ) && balances_MyToken[this]==( old(balances_MyToken[this]) ) ) && allowed_MyToken[this]==( old(allowed_MyToken[this]) ) ) && symbol_MyToken[this]==( old(symbol_MyToken[this]) ) ) && name_MyToken[this]==( old(name_MyToken[this]) ) ) && decimals_MyToken[this]==( old(decimals_MyToken[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,totalSupply_MyToken>],ArrayAccessExpression[IdentifierExpression[_totalSupply_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_MyToken>]]]]]]
[2020-11-25 01:52:37,731 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(MyToken.totalSupply, _totalSupply_MyToken[this] >= 0 && _totalSupply_MyToken[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(MyToken.totalSupply, return == _totalSupply_MyToken[this] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this]) && balances_MyToken[this] == old(balances_MyToken[this]) && allowed_MyToken[this] == old(allowed_MyToken[this]) && symbol_MyToken[this] == old(symbol_MyToken[this]) && name_MyToken[this] == old(name_MyToken[this]) && decimals_MyToken[this] == old(decimals_MyToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 01:52:37,731 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_totalSupply_MyToken0) ==> ( <>AP(success_totalSupply_MyToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 01:52:37,740 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:52:37 PropertyContainer
[2020-11-25 01:52:37,740 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 01:52:37,740 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 01:52:37,740 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 01:52:37,740 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 01:52:37,741 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:37" (1/2) ...
[2020-11-25 01:52:37,741 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 01:52:37,742 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 01:52:37,755 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:52:37" (2/2) ...
[2020-11-25 01:52:37,755 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 01:52:37,755 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 01:52:37,756 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 01:52:37,756 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 01:52:37,756 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:37" (1/2) ...
[2020-11-25 01:52:37,809 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 01:52:37,809 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:52:37,809 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 01:52:37,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 01:52:37,810 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 01:52:37,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 01:52:37,810 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 01:52:37,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 01:52:37,810 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 01:52:37,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 01:52:37,810 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 01:52:37,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 01:52:37,810 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 01:52:37,810 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 01:52:37,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 01:52:37,810 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 01:52:37,811 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 01:52:37,811 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 01:52:37,811 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 01:52:37,811 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 01:52:37,811 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 01:52:37,811 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 01:52:37,812 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 01:52:37,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 01:52:37,812 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 01:52:37,812 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 01:52:37,812 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 01:52:37,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 01:52:37,812 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 01:52:37,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 01:52:37,812 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 01:52:37,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 01:52:37,812 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 01:52:37,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 01:52:37,812 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 01:52:37,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 01:52:37,813 INFO  L130     BoogieDeclarations]: Found specification of procedure MyToken_MyToken_NoBaseCtor__success
[2020-11-25 01:52:37,813 INFO  L130     BoogieDeclarations]: Found specification of procedure MyToken_MyToken
[2020-11-25 01:52:37,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyToken_MyToken
[2020-11-25 01:52:37,813 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_MyToken
[2020-11-25 01:52:37,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_MyToken
[2020-11-25 01:52:37,813 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_MyToken
[2020-11-25 01:52:37,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_MyToken
[2020-11-25 01:52:37,813 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_MyToken
[2020-11-25 01:52:37,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_MyToken
[2020-11-25 01:52:37,813 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_MyToken
[2020-11-25 01:52:37,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_MyToken
[2020-11-25 01:52:37,813 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_MyToken
[2020-11-25 01:52:37,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_MyToken
[2020-11-25 01:52:37,814 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_MyToken
[2020-11-25 01:52:37,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_MyToken
[2020-11-25 01:52:37,814 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_MyToken
[2020-11-25 01:52:37,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_MyToken
[2020-11-25 01:52:37,814 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_MyToken__success
[2020-11-25 01:52:37,814 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_MyToken
[2020-11-25 01:52:37,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_MyToken
[2020-11-25 01:52:37,814 INFO  L130     BoogieDeclarations]: Found specification of procedure name_MyToken
[2020-11-25 01:52:37,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_MyToken
[2020-11-25 01:52:37,814 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_MyToken
[2020-11-25 01:52:37,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_MyToken
[2020-11-25 01:52:37,814 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_MyToken
[2020-11-25 01:52:37,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_MyToken
[2020-11-25 01:52:37,815 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 01:52:37,815 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 01:52:37,815 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 01:52:37,815 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 01:52:37,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 01:52:37,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 01:52:37,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 01:52:37,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 01:52:37,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 01:52:37,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 01:52:37,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 01:52:37,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 01:52:37,816 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MyToken
[2020-11-25 01:52:37,816 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 01:52:37,816 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 01:52:37,816 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:52:37,816 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 01:52:37,816 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 01:52:37,816 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 01:52:37,816 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 01:52:37,816 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 01:52:37,816 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 01:52:37,817 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 01:52:37,817 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 01:52:37,817 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 01:52:37,817 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 01:52:37,817 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 01:52:37,817 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 01:52:37,817 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 01:52:37,817 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 01:52:37,817 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 01:52:37,817 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 01:52:37,818 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 01:52:37,818 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 01:52:37,818 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 01:52:37,818 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 01:52:37,818 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 01:52:37,818 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 01:52:37,818 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 01:52:37,818 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 01:52:37,818 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 01:52:37,818 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 01:52:37,819 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 01:52:37,819 INFO  L130     BoogieDeclarations]: Found specification of procedure MyToken_MyToken_NoBaseCtor__fail
[2020-11-25 01:52:37,819 INFO  L130     BoogieDeclarations]: Found specification of procedure MyToken_MyToken__success
[2020-11-25 01:52:37,819 INFO  L130     BoogieDeclarations]: Found specification of procedure MyToken_MyToken__fail
[2020-11-25 01:52:37,819 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_MyToken__success
[2020-11-25 01:52:37,819 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_MyToken__fail
[2020-11-25 01:52:37,819 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_MyToken__success
[2020-11-25 01:52:37,819 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_MyToken__fail
[2020-11-25 01:52:37,819 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_MyToken__success
[2020-11-25 01:52:37,820 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_MyToken__fail
[2020-11-25 01:52:37,820 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_MyToken__success
[2020-11-25 01:52:37,820 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_MyToken__fail
[2020-11-25 01:52:37,820 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_MyToken__success
[2020-11-25 01:52:37,820 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_MyToken__fail
[2020-11-25 01:52:37,820 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_MyToken__success
[2020-11-25 01:52:37,820 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_MyToken__fail
[2020-11-25 01:52:37,820 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_MyToken__success
[2020-11-25 01:52:37,820 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_MyToken__fail
[2020-11-25 01:52:37,821 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_MyToken__fail
[2020-11-25 01:52:37,821 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_MyToken__success
[2020-11-25 01:52:37,821 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_MyToken__fail
[2020-11-25 01:52:37,821 INFO  L130     BoogieDeclarations]: Found specification of procedure name_MyToken__success
[2020-11-25 01:52:37,821 INFO  L130     BoogieDeclarations]: Found specification of procedure name_MyToken__fail
[2020-11-25 01:52:37,821 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_MyToken__success
[2020-11-25 01:52:37,821 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_MyToken__fail
[2020-11-25 01:52:37,821 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_MyToken__success
[2020-11-25 01:52:37,821 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_MyToken__fail
[2020-11-25 01:52:37,822 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 01:52:37,822 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 01:52:37,822 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 01:52:37,822 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 01:52:37,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 01:52:37,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 01:52:37,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:52:37,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:52:37,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 01:52:37,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 01:52:37,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 01:52:37,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 01:52:37,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 01:52:37,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 01:52:37,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 01:52:37,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 01:52:37,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 01:52:37,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 01:52:37,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 01:52:37,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 01:52:37,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 01:52:37,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 01:52:37,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 01:52:37,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 01:52:37,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 01:52:37,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 01:52:37,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 01:52:37,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 01:52:37,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 01:52:37,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 01:52:37,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 01:52:37,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 01:52:37,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 01:52:37,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 01:52:37,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 01:52:37,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 01:52:37,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 01:52:37,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 01:52:37,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyToken_MyToken_NoBaseCtor__fail
[2020-11-25 01:52:37,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyToken_MyToken_NoBaseCtor__success
[2020-11-25 01:52:37,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyToken_MyToken__fail
[2020-11-25 01:52:37,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyToken_MyToken__success
[2020-11-25 01:52:37,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_MyToken__fail
[2020-11-25 01:52:37,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_MyToken__success
[2020-11-25 01:52:37,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_MyToken__fail
[2020-11-25 01:52:37,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_MyToken__success
[2020-11-25 01:52:37,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_MyToken__fail
[2020-11-25 01:52:37,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_MyToken__success
[2020-11-25 01:52:37,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_MyToken__fail
[2020-11-25 01:52:37,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_MyToken__success
[2020-11-25 01:52:37,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_MyToken__fail
[2020-11-25 01:52:37,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_MyToken__success
[2020-11-25 01:52:37,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_MyToken__fail
[2020-11-25 01:52:37,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_MyToken__success
[2020-11-25 01:52:37,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_MyToken__fail
[2020-11-25 01:52:37,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_MyToken__success
[2020-11-25 01:52:37,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_MyToken__fail
[2020-11-25 01:52:37,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_MyToken__success
[2020-11-25 01:52:37,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_MyToken__fail
[2020-11-25 01:52:37,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_MyToken__success
[2020-11-25 01:52:37,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_MyToken__fail
[2020-11-25 01:52:37,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_MyToken__success
[2020-11-25 01:52:37,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_MyToken__fail
[2020-11-25 01:52:37,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_MyToken__success
[2020-11-25 01:52:37,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_MyToken__fail
[2020-11-25 01:52:37,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_MyToken__success
[2020-11-25 01:52:37,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 01:52:37,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 01:52:37,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 01:52:37,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 01:52:37,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 01:52:37,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 01:52:37,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 01:52:37,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 01:52:37,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 01:52:37,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 01:52:37,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 01:52:37,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 01:52:37,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 01:52:37,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 01:52:37,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 01:52:37,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 01:52:37,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MyToken
[2020-11-25 01:52:37,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 01:52:37,830 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 01:52:37,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 01:52:38,399 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:52:38,400 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:52:38,400 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:52:38,491 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 01:52:38,492 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 01:52:38,493 INFO  L202        PluginConnector]: Adding new model MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:52:38 BoogieIcfgContainer
[2020-11-25 01:52:38,493 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:52:37" (2/2) ...
[2020-11-25 01:52:38,494 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 01:52:38,494 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4b626f94 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:52:38, skipping insertion in model container
[2020-11-25 01:52:38,494 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 01:52:38,494 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 01:52:38,494 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 01:52:38,496 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 01:52:38,496 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:37" (1/3) ...
[2020-11-25 01:52:38,496 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2dadc398 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:52:38, skipping insertion in model container
[2020-11-25 01:52:38,496 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:52:37" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 01:52:38,530 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:52:38 NWAContainer
[2020-11-25 01:52:38,531 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 01:52:38,531 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 01:52:38,531 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 01:52:38,532 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 01:52:38,532 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:52:38" (3/4) ...
[2020-11-25 01:52:38,533 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4c74478 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:52:38, skipping insertion in model container
[2020-11-25 01:52:38,533 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:52:38" (4/4) ...
[2020-11-25 01:52:38,536 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 01:52:38,539 INFO  L110   BuchiProductObserver]: Initial RCFG 1504 locations, 1890 edges
[2020-11-25 01:52:38,539 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 01:52:38,549 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 01:52:39,836 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 01:52:39,840 INFO  L110   BuchiProductObserver]: BuchiProgram size 3568 locations, 6124 edges
[2020-11-25 01:52:39,841 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:52:39 BoogieIcfgContainer
[2020-11-25 01:52:39,841 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 01:52:39,841 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 01:52:39,841 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 01:52:39,842 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 01:52:39,843 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:52:39" (1/1) ...
[2020-11-25 01:52:39,924 INFO  L313           BlockEncoder]: Initial Icfg 3568 locations, 6124 edges
[2020-11-25 01:52:39,924 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 01:52:39,924 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 01:52:39,925 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 01:52:39,925 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 01:52:39,936 INFO  L70    emoveInfeasibleEdges]: Removed 84 edges and 13 locations because of local infeasibility
[2020-11-25 01:52:39,945 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-25 01:52:39,954 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 01:52:39,956 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 01:52:39,959 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 01:52:39,959 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 01:52:39,963 INFO  L313           BlockEncoder]: Encoded RCFG 3512 locations, 5976 edges
[2020-11-25 01:52:39,963 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:52:39 BasicIcfg
[2020-11-25 01:52:39,963 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 01:52:39,964 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 01:52:39,964 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 01:52:39,965 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 01:52:39,966 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:52:39,966 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:37" (1/6) ...
[2020-11-25 01:52:39,967 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@329bb876 and model type MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:52:39, skipping insertion in model container
[2020-11-25 01:52:39,967 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:52:39,968 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:52:37" (2/6) ...
[2020-11-25 01:52:39,968 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@329bb876 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:52:39, skipping insertion in model container
[2020-11-25 01:52:39,968 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:52:39,968 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:52:38" (3/6) ...
[2020-11-25 01:52:39,968 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@329bb876 and model type MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:52:39, skipping insertion in model container
[2020-11-25 01:52:39,968 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:52:39,968 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:52:38" (4/6) ...
[2020-11-25 01:52:39,968 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@329bb876 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:52:39, skipping insertion in model container
[2020-11-25 01:52:39,968 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:52:39,969 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:52:39" (5/6) ...
[2020-11-25 01:52:39,969 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@329bb876 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:52:39, skipping insertion in model container
[2020-11-25 01:52:39,969 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:52:39,969 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:52:39" (6/6) ...
[2020-11-25 01:52:39,970 INFO  L404   chiAutomizerObserver]: Analyzing ICFG MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_totalsupply.bpl_BEv2
[2020-11-25 01:52:40,004 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 01:52:40,004 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 01:52:40,004 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 01:52:40,004 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 01:52:40,005 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 01:52:40,005 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 01:52:40,005 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 01:52:40,005 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 01:52:40,005 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 01:52:40,032 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3512 states.
[2020-11-25 01:52:40,088 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:52:40,088 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:52:40,088 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:52:40,098 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:40,098 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:40,098 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 01:52:40,098 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3512 states.
[2020-11-25 01:52:40,119 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:52:40,119 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:52:40,119 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:52:40,121 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:40,121 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_MyToken0 := false;
[L2]                 call_totalSupply_MyToken0 := false;
[L2]     CALL        call main();
[L4123]              assume null == 0;
[L4124]  CALL        call this := FreshRefGenerator__success();
[L1863]              havoc newRef;
[L1864]              assume Alloc[newRef] == false;
[L1865]              Alloc[newRef] := true;
[L1866]              assume newRef != null;
[L4124]  RET         call this := FreshRefGenerator__success();
[L4125]              assume now >= 0;
[L4126]              assume DType[this] == MyToken;
[L4127]              assume msgvalue_MSG == 0;
[L4128]              gas := gas - 53000;
[L4129]  CALL        call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2217]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1999]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1984]              assume msgsender_MSG != null;
[L1985]              Balance[this] := 0;
[L1999]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2000]  COND FALSE  !(revert)
[L2217]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2218]  COND TRUE   revert
[L793]   RET         call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L794]               assume !revert && gas >= 0;
[L4129]  RET         call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L4130]              assume !revert && gas >= 0;

Loop:
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND TRUE   choice == 19
[L3986]              gas := gas - 21000;
[L3987]  COND FALSE  !(gas >= 0)
[L4133]  RET         call CorralChoice_MyToken(this);

[2020-11-25 01:52:40,139 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:52:40,139 INFO  L82        PathProgramCache]: Analyzing trace with hash -1859604930, now seen corresponding path program 1 times
[2020-11-25 01:52:40,143 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:52:40,163 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:52:40,203 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:52:40,205 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:52:40,206 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:52:40,209 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:52:40,396 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:52:40,397 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:52:40,398 INFO  L87              Difference]: Start difference. First operand 3512 states. Second operand 4 states.
[2020-11-25 01:52:40,755 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:52:40,755 INFO  L93              Difference]: Finished difference Result 2374 states and 2577 transitions.
[2020-11-25 01:52:40,755 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:52:40,757 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2374 states and 2577 transitions.
[2020-11-25 01:52:40,773 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:52:40,793 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2374 states to 2374 states and 2577 transitions.
[2020-11-25 01:52:40,794 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 01:52:40,797 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 883
[2020-11-25 01:52:40,797 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2374 states and 2577 transitions.
[2020-11-25 01:52:40,804 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:52:40,804 INFO  L728         BuchiCegarLoop]: Abstraction has 2374 states and 2577 transitions.
[2020-11-25 01:52:40,818 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2374 states and 2577 transitions.
[2020-11-25 01:52:40,852 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2374 to 2374.
[2020-11-25 01:52:40,853 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2374 states.
[2020-11-25 01:52:40,857 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2374 states to 2374 states and 2577 transitions.
[2020-11-25 01:52:40,858 INFO  L751         BuchiCegarLoop]: Abstraction has 2374 states and 2577 transitions.
[2020-11-25 01:52:40,858 INFO  L631         BuchiCegarLoop]: Abstraction has 2374 states and 2577 transitions.
[2020-11-25 01:52:40,858 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 01:52:40,858 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2374 states and 2577 transitions.
[2020-11-25 01:52:40,864 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:52:40,864 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:52:40,864 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:52:40,866 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:40,866 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_MyToken0 := false;
[L2]                 call_totalSupply_MyToken0 := false;
[L2]     CALL        call main();
[L4123]              assume null == 0;
[L4124]  CALL        call this := FreshRefGenerator__success();
[L1863]              havoc newRef;
[L1864]              assume Alloc[newRef] == false;
[L1865]              Alloc[newRef] := true;
[L1866]              assume newRef != null;
[L4124]  RET         call this := FreshRefGenerator__success();
[L4125]              assume now >= 0;
[L4126]              assume DType[this] == MyToken;
[L4127]              assume msgvalue_MSG == 0;
[L4128]              gas := gas - 53000;
[L4129]  CALL        call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2217]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1999]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1984]              assume msgsender_MSG != null;
[L1985]              Balance[this] := 0;
[L1999]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2000]  COND FALSE  !(revert)
[L2217]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2218]  COND TRUE   revert
[L793]   RET         call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L794]               assume !revert && gas >= 0;
[L4129]  RET         call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L4130]              assume !revert && gas >= 0;
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND TRUE   choice == 15
[L4018]              gas := gas - 21000;
[L4019]  COND TRUE   gas >= 0
[L4020]              assume msgvalue_MSG == 0;
[L4021]  CALL        call __ret_0_totalSupply := totalSupply_MyToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_MyToken[this] >= 0 && _totalSupply_MyToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_MyToken0 := true;
[L2]                 call_totalSupply_MyToken0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND FALSE  !(__exception)
[L847]   CALL        call __ret_0_ := totalSupply_MyToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2246]              __var_3 := null;
[L2247]              __ret_0_ := (_totalSupply_MyToken[this] - balances_MyToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L847]   RET         call __ret_0_ := totalSupply_MyToken__success(this, msgsender_MSG, msgvalue_MSG);
[L848]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_MyToken[this] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this])) && balances_MyToken[this] == old(balances_MyToken[this])) && allowed_MyToken[this] == old(allowed_MyToken[this])) && symbol_MyToken[this] == old(symbol_MyToken[this])) && name_MyToken[this] == old(name_MyToken[this])) && decimals_MyToken[this] == old(decimals_MyToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4021]  RET         call __ret_0_totalSupply := totalSupply_MyToken(this, msgsender_MSG, msgvalue_MSG);
[L4133]  RET         call CorralChoice_MyToken(this);

Loop:
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND TRUE   choice == 15
[L4018]              gas := gas - 21000;
[L4019]  COND TRUE   gas >= 0
[L4020]              assume msgvalue_MSG == 0;
[L4021]  CALL        call __ret_0_totalSupply := totalSupply_MyToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_MyToken[this] >= 0 && _totalSupply_MyToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_MyToken0 := true;
[L2]                 call_totalSupply_MyToken0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND FALSE  !(__exception)
[L847]   CALL        call __ret_0_ := totalSupply_MyToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2246]              __var_3 := null;
[L2247]              __ret_0_ := (_totalSupply_MyToken[this] - balances_MyToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L847]   RET         call __ret_0_ := totalSupply_MyToken__success(this, msgsender_MSG, msgvalue_MSG);
[L848]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_MyToken[this] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this])) && balances_MyToken[this] == old(balances_MyToken[this])) && allowed_MyToken[this] == old(allowed_MyToken[this])) && symbol_MyToken[this] == old(symbol_MyToken[this])) && name_MyToken[this] == old(name_MyToken[this])) && decimals_MyToken[this] == old(decimals_MyToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4021]  RET         call __ret_0_totalSupply := totalSupply_MyToken(this, msgsender_MSG, msgvalue_MSG);
[L4133]  RET         call CorralChoice_MyToken(this);

[2020-11-25 01:52:40,869 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:52:40,869 INFO  L82        PathProgramCache]: Analyzing trace with hash 1003513884, now seen corresponding path program 1 times
[2020-11-25 01:52:40,871 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:52:40,878 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:52:40,895 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:52:40,895 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:52:40,895 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:52:40,896 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:52:40,897 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:52:40,897 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:52:40,897 INFO  L87              Difference]: Start difference. First operand 2374 states and 2577 transitions. cyclomatic complexity: 205 Second operand 4 states.
[2020-11-25 01:52:41,245 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:52:41,246 INFO  L93              Difference]: Finished difference Result 3524 states and 3979 transitions.
[2020-11-25 01:52:41,246 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:52:41,246 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3524 states and 3979 transitions.
[2020-11-25 01:52:41,260 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 01:52:41,276 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3524 states to 3420 states and 3869 transitions.
[2020-11-25 01:52:41,277 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1213
[2020-11-25 01:52:41,278 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1218
[2020-11-25 01:52:41,278 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3420 states and 3869 transitions.
[2020-11-25 01:52:41,283 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:52:41,283 INFO  L728         BuchiCegarLoop]: Abstraction has 3420 states and 3869 transitions.
[2020-11-25 01:52:41,286 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3420 states and 3869 transitions.
[2020-11-25 01:52:41,312 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3420 to 2571.
[2020-11-25 01:52:41,312 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2571 states.
[2020-11-25 01:52:41,317 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2571 states to 2571 states and 2774 transitions.
[2020-11-25 01:52:41,318 INFO  L751         BuchiCegarLoop]: Abstraction has 2571 states and 2774 transitions.
[2020-11-25 01:52:41,318 INFO  L631         BuchiCegarLoop]: Abstraction has 2571 states and 2774 transitions.
[2020-11-25 01:52:41,318 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 01:52:41,318 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2571 states and 2774 transitions.
[2020-11-25 01:52:41,322 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:52:41,322 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:52:41,322 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:52:41,324 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:41,324 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_MyToken0 := false;
[L2]                 call_totalSupply_MyToken0 := false;
[L2]     CALL        call main();
[L4123]              assume null == 0;
[L4124]  CALL        call this := FreshRefGenerator__success();
[L1863]              havoc newRef;
[L1864]              assume Alloc[newRef] == false;
[L1865]              Alloc[newRef] := true;
[L1866]              assume newRef != null;
[L4124]  RET         call this := FreshRefGenerator__success();
[L4125]              assume now >= 0;
[L4126]              assume DType[this] == MyToken;
[L4127]              assume msgvalue_MSG == 0;
[L4128]              gas := gas - 53000;
[L4129]  CALL        call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2217]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1999]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1984]              assume msgsender_MSG != null;
[L1985]              Balance[this] := 0;
[L1999]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2000]  COND FALSE  !(revert)
[L2217]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2218]  COND FALSE  !(revert)
[L2221]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2051]              assume msgsender_MSG != null;
[L2052]              Balance[this] := 0;
[L2053]              owner_Owned[this] := null;
[L2054]              newOwner_Owned[this] := null;
[L2056]              owner_Owned[this] := msgsender_MSG;
[L2069]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2070]  COND FALSE  !(revert)
[L2221]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]  COND FALSE  !(revert)
[L2225]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]              assume msgsender_MSG != null;
[L1881]              Balance[this] := 0;
[L1895]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L2225]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2226]  COND FALSE  !(revert)
[L2229]  CALL        call MyToken_MyToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2171]              assume msgsender_MSG != null;
[L2172]              Balance[this] := 0;
[L2173]              symbol_MyToken[this] := -1251229519;
[L2174]              name_MyToken[this] := -1251229519;
[L2175]              decimals_MyToken[this] := 0;
[L2176]              _totalSupply_MyToken[this] := 0;
[L2177]              balances_MyToken[this] := zeroRefintArr();
[L2178]              sum_balances0[this] := 0;
[L2179]              allowed_MyToken[this] := zeroRefRefintArr();
[L2180]              sum_allowed1[this] := 0;
[L2182]              name_MyToken[this] := tokenName_s318;
[L2183]              symbol_MyToken[this] := tokenSymbol_s318;
[L2184]              decimals_MyToken[this] := tokenDecimals_s318;
[L2185]              __var_2 := tokenDecimals_s318 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2186]              _totalSupply_MyToken[this] := nonlinearMul(initialSupply_s318, nonlinearPow(10, tokenDecimals_s318 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2187]              sum_balances0[this] := sum_balances0[this] - balances_MyToken[this][msgsender_MSG];
[L2188]              balances_MyToken[this][msgsender_MSG] := _totalSupply_MyToken[this];
[L2189]              sum_balances0[this] := sum_balances0[this] + balances_MyToken[this][msgsender_MSG];
[L2190]              assert { :EventEmitted "Transfer_MyToken" } true;
[L2229]  RET         call MyToken_MyToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2230]  COND FALSE  !(revert)
[L793]   RET         call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L794]               assume !revert && gas >= 0;
[L4129]  RET         call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L4130]              assume !revert && gas >= 0;
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND TRUE   choice == 15
[L4018]              gas := gas - 21000;
[L4019]  COND TRUE   gas >= 0
[L4020]              assume msgvalue_MSG == 0;
[L4021]  CALL        call __ret_0_totalSupply := totalSupply_MyToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_MyToken[this] >= 0 && _totalSupply_MyToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_MyToken0 := true;
[L2]                 call_totalSupply_MyToken0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND FALSE  !(__exception)
[L847]   CALL        call __ret_0_ := totalSupply_MyToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2246]              __var_3 := null;
[L2247]              __ret_0_ := (_totalSupply_MyToken[this] - balances_MyToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L847]   RET         call __ret_0_ := totalSupply_MyToken__success(this, msgsender_MSG, msgvalue_MSG);
[L848]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_MyToken[this] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this])) && balances_MyToken[this] == old(balances_MyToken[this])) && allowed_MyToken[this] == old(allowed_MyToken[this])) && symbol_MyToken[this] == old(symbol_MyToken[this])) && name_MyToken[this] == old(name_MyToken[this])) && decimals_MyToken[this] == old(decimals_MyToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4021]  RET         call __ret_0_totalSupply := totalSupply_MyToken(this, msgsender_MSG, msgvalue_MSG);
[L4133]  RET         call CorralChoice_MyToken(this);

Loop:
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND TRUE   choice == 15
[L4018]              gas := gas - 21000;
[L4019]  COND TRUE   gas >= 0
[L4020]              assume msgvalue_MSG == 0;
[L4021]  CALL        call __ret_0_totalSupply := totalSupply_MyToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_MyToken[this] >= 0 && _totalSupply_MyToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_MyToken0 := true;
[L2]                 call_totalSupply_MyToken0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND FALSE  !(__exception)
[L847]   CALL        call __ret_0_ := totalSupply_MyToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2246]              __var_3 := null;
[L2247]              __ret_0_ := (_totalSupply_MyToken[this] - balances_MyToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L847]   RET         call __ret_0_ := totalSupply_MyToken__success(this, msgsender_MSG, msgvalue_MSG);
[L848]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_MyToken[this] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this])) && balances_MyToken[this] == old(balances_MyToken[this])) && allowed_MyToken[this] == old(allowed_MyToken[this])) && symbol_MyToken[this] == old(symbol_MyToken[this])) && name_MyToken[this] == old(name_MyToken[this])) && decimals_MyToken[this] == old(decimals_MyToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4021]  RET         call __ret_0_totalSupply := totalSupply_MyToken(this, msgsender_MSG, msgvalue_MSG);
[L4133]  RET         call CorralChoice_MyToken(this);

[2020-11-25 01:52:41,327 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:52:41,328 INFO  L82        PathProgramCache]: Analyzing trace with hash 1244374871, now seen corresponding path program 1 times
[2020-11-25 01:52:41,328 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:52:41,348 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:52:41,601 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:52:41,602 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:52:41,602 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-25 01:52:41,602 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:52:41,603 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-25 01:52:41,603 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=181, Unknown=0, NotChecked=0, Total=210
[2020-11-25 01:52:41,603 INFO  L87              Difference]: Start difference. First operand 2571 states and 2774 transitions. cyclomatic complexity: 205 Second operand 15 states.
[2020-11-25 01:52:43,701 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:52:43,701 INFO  L93              Difference]: Finished difference Result 2688 states and 2924 transitions.
[2020-11-25 01:52:43,701 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-25 01:52:43,701 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2688 states and 2924 transitions.
[2020-11-25 01:52:43,708 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 01:52:43,716 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2688 states to 2688 states and 2924 transitions.
[2020-11-25 01:52:43,716 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1050
[2020-11-25 01:52:43,717 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1050
[2020-11-25 01:52:43,717 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2688 states and 2924 transitions.
[2020-11-25 01:52:43,720 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:52:43,720 INFO  L728         BuchiCegarLoop]: Abstraction has 2688 states and 2924 transitions.
[2020-11-25 01:52:43,722 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2688 states and 2924 transitions.
[2020-11-25 01:52:43,741 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2688 to 2668.
[2020-11-25 01:52:43,741 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2668 states.
[2020-11-25 01:52:43,744 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2668 states to 2668 states and 2890 transitions.
[2020-11-25 01:52:43,744 INFO  L751         BuchiCegarLoop]: Abstraction has 2668 states and 2890 transitions.
[2020-11-25 01:52:43,744 INFO  L631         BuchiCegarLoop]: Abstraction has 2668 states and 2890 transitions.
[2020-11-25 01:52:43,744 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 01:52:43,744 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2668 states and 2890 transitions.
[2020-11-25 01:52:43,749 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 01:52:43,749 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:52:43,749 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:52:43,750 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:43,750 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_MyToken0 := false;
[L2]                 call_totalSupply_MyToken0 := false;
[L2]     CALL        call main();
[L4123]              assume null == 0;
[L4124]  CALL        call this := FreshRefGenerator__success();
[L1863]              havoc newRef;
[L1864]              assume Alloc[newRef] == false;
[L1865]              Alloc[newRef] := true;
[L1866]              assume newRef != null;
[L4124]  RET         call this := FreshRefGenerator__success();
[L4125]              assume now >= 0;
[L4126]              assume DType[this] == MyToken;
[L4127]              assume msgvalue_MSG == 0;
[L4128]              gas := gas - 53000;
[L4129]  CALL        call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2217]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1999]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1984]              assume msgsender_MSG != null;
[L1985]              Balance[this] := 0;
[L1999]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2000]  COND FALSE  !(revert)
[L2217]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2218]  COND FALSE  !(revert)
[L2221]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2051]              assume msgsender_MSG != null;
[L2052]              Balance[this] := 0;
[L2053]              owner_Owned[this] := null;
[L2054]              newOwner_Owned[this] := null;
[L2056]              owner_Owned[this] := msgsender_MSG;
[L2069]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2070]  COND FALSE  !(revert)
[L2221]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]  COND FALSE  !(revert)
[L2225]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]              assume msgsender_MSG != null;
[L1881]              Balance[this] := 0;
[L1895]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L2225]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2226]  COND FALSE  !(revert)
[L2229]  CALL        call MyToken_MyToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2171]              assume msgsender_MSG != null;
[L2172]              Balance[this] := 0;
[L2173]              symbol_MyToken[this] := -1251229519;
[L2174]              name_MyToken[this] := -1251229519;
[L2175]              decimals_MyToken[this] := 0;
[L2176]              _totalSupply_MyToken[this] := 0;
[L2177]              balances_MyToken[this] := zeroRefintArr();
[L2178]              sum_balances0[this] := 0;
[L2179]              allowed_MyToken[this] := zeroRefRefintArr();
[L2180]              sum_allowed1[this] := 0;
[L2182]              name_MyToken[this] := tokenName_s318;
[L2183]              symbol_MyToken[this] := tokenSymbol_s318;
[L2184]              decimals_MyToken[this] := tokenDecimals_s318;
[L2185]              __var_2 := tokenDecimals_s318 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2186]              _totalSupply_MyToken[this] := nonlinearMul(initialSupply_s318, nonlinearPow(10, tokenDecimals_s318 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2187]              sum_balances0[this] := sum_balances0[this] - balances_MyToken[this][msgsender_MSG];
[L2188]              balances_MyToken[this][msgsender_MSG] := _totalSupply_MyToken[this];
[L2189]              sum_balances0[this] := sum_balances0[this] + balances_MyToken[this][msgsender_MSG];
[L2190]              assert { :EventEmitted "Transfer_MyToken" } true;
[L2229]  RET         call MyToken_MyToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2230]  COND FALSE  !(revert)
[L793]   RET         call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L794]               assume !revert && gas >= 0;
[L4129]  RET         call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L4130]              assume !revert && gas >= 0;
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND TRUE   choice == 15
[L4018]              gas := gas - 21000;
[L4019]  COND TRUE   gas >= 0
[L4020]              assume msgvalue_MSG == 0;
[L4021]  CALL        call __ret_0_totalSupply := totalSupply_MyToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_MyToken[this] >= 0 && _totalSupply_MyToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_MyToken0 := true;
[L2]                 call_totalSupply_MyToken0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND TRUE   __exception
[L825]               __tmp__Balance := Balance;
[L826]               __tmp__DType := DType;
[L827]               __tmp__Alloc := Alloc;
[L828]               __tmp__balance_ADDR := balance_ADDR;
[L829]               __tmp__M_Ref_int := M_Ref_int;
[L830]               __tmp__sum_balances0 := sum_balances0;
[L831]               __tmp__alloc_allowed_MyToken_lvl0 := alloc_allowed_MyToken_lvl0;
[L832]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L833]               __tmp__sum_allowed1 := sum_allowed1;
[L834]               __tmp__Length := Length;
[L835]               __tmp__now := now;
[L836]               __tmp__owner_Owned := owner_Owned;
[L837]               __tmp__newOwner_Owned := newOwner_Owned;
[L838]               __tmp__symbol_MyToken := symbol_MyToken;
[L839]               __tmp__name_MyToken := name_MyToken;
[L840]               __tmp__decimals_MyToken := decimals_MyToken;
[L841]               __tmp___totalSupply_MyToken := _totalSupply_MyToken;
[L842]               __tmp__balances_MyToken := balances_MyToken;
[L843]               __tmp__allowed_MyToken := allowed_MyToken;
[L844]   CALL        call __ret_0_ := totalSupply_MyToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L2238]              __var_3 := null;
[L2239]              __ret_0_ := (__tmp___totalSupply_MyToken[this] - __tmp__balances_MyToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L844]   RET         call __ret_0_ := totalSupply_MyToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L845]               assume revert || gas < 0;
[L4021]  RET         call __ret_0_totalSupply := totalSupply_MyToken(this, msgsender_MSG, msgvalue_MSG);
[L4133]  RET         call CorralChoice_MyToken(this);

Loop:
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND TRUE   choice == 15
[L4018]              gas := gas - 21000;
[L4019]  COND TRUE   gas >= 0
[L4020]              assume msgvalue_MSG == 0;
[L4021]  CALL        call __ret_0_totalSupply := totalSupply_MyToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_MyToken[this] >= 0 && _totalSupply_MyToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_MyToken0 := true;
[L2]                 call_totalSupply_MyToken0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND TRUE   __exception
[L825]               __tmp__Balance := Balance;
[L826]               __tmp__DType := DType;
[L827]               __tmp__Alloc := Alloc;
[L828]               __tmp__balance_ADDR := balance_ADDR;
[L829]               __tmp__M_Ref_int := M_Ref_int;
[L830]               __tmp__sum_balances0 := sum_balances0;
[L831]               __tmp__alloc_allowed_MyToken_lvl0 := alloc_allowed_MyToken_lvl0;
[L832]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L833]               __tmp__sum_allowed1 := sum_allowed1;
[L834]               __tmp__Length := Length;
[L835]               __tmp__now := now;
[L836]               __tmp__owner_Owned := owner_Owned;
[L837]               __tmp__newOwner_Owned := newOwner_Owned;
[L838]               __tmp__symbol_MyToken := symbol_MyToken;
[L839]               __tmp__name_MyToken := name_MyToken;
[L840]               __tmp__decimals_MyToken := decimals_MyToken;
[L841]               __tmp___totalSupply_MyToken := _totalSupply_MyToken;
[L842]               __tmp__balances_MyToken := balances_MyToken;
[L843]               __tmp__allowed_MyToken := allowed_MyToken;
[L844]   CALL        call __ret_0_ := totalSupply_MyToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L2238]              __var_3 := null;
[L2239]              __ret_0_ := (__tmp___totalSupply_MyToken[this] - __tmp__balances_MyToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L844]   RET         call __ret_0_ := totalSupply_MyToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L845]               assume revert || gas < 0;
[L4021]  RET         call __ret_0_totalSupply := totalSupply_MyToken(this, msgsender_MSG, msgvalue_MSG);
[L4133]  RET         call CorralChoice_MyToken(this);

[2020-11-25 01:52:43,754 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:52:43,754 INFO  L82        PathProgramCache]: Analyzing trace with hash 1377843743, now seen corresponding path program 1 times
[2020-11-25 01:52:43,754 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:52:43,762 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:52:43,783 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:52:43,784 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:52:43,784 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 01:52:43,784 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:52:43,784 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 01:52:43,784 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 01:52:43,784 INFO  L87              Difference]: Start difference. First operand 2668 states and 2890 transitions. cyclomatic complexity: 226 Second operand 5 states.
[2020-11-25 01:52:44,061 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:52:44,061 INFO  L93              Difference]: Finished difference Result 3428 states and 3783 transitions.
[2020-11-25 01:52:44,061 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 01:52:44,061 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3428 states and 3783 transitions.
[2020-11-25 01:52:44,072 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2020-11-25 01:52:44,080 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3428 states to 2590 states and 2943 transitions.
[2020-11-25 01:52:44,080 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 799
[2020-11-25 01:52:44,080 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 799
[2020-11-25 01:52:44,081 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2590 states and 2943 transitions.
[2020-11-25 01:52:44,083 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:52:44,083 INFO  L728         BuchiCegarLoop]: Abstraction has 2590 states and 2943 transitions.
[2020-11-25 01:52:44,084 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2590 states and 2943 transitions.
[2020-11-25 01:52:44,098 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2590 to 1694.
[2020-11-25 01:52:44,098 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1694 states.
[2020-11-25 01:52:44,100 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1694 states to 1694 states and 1822 transitions.
[2020-11-25 01:52:44,100 INFO  L751         BuchiCegarLoop]: Abstraction has 1694 states and 1822 transitions.
[2020-11-25 01:52:44,100 INFO  L631         BuchiCegarLoop]: Abstraction has 1694 states and 1822 transitions.
[2020-11-25 01:52:44,100 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 01:52:44,100 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1694 states and 1822 transitions.
[2020-11-25 01:52:44,103 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:52:44,103 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:52:44,103 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:52:44,105 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:44,105 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_MyToken0 := false;
[L2]                 call_totalSupply_MyToken0 := false;
[L2]     CALL        call main();
[L4123]              assume null == 0;
[L4124]  CALL        call this := FreshRefGenerator__success();
[L1863]              havoc newRef;
[L1864]              assume Alloc[newRef] == false;
[L1865]              Alloc[newRef] := true;
[L1866]              assume newRef != null;
[L4124]  RET         call this := FreshRefGenerator__success();
[L4125]              assume now >= 0;
[L4126]              assume DType[this] == MyToken;
[L4127]              assume msgvalue_MSG == 0;
[L4128]              gas := gas - 53000;
[L4129]  CALL        call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2217]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1999]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1984]              assume msgsender_MSG != null;
[L1985]              Balance[this] := 0;
[L1999]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2000]  COND FALSE  !(revert)
[L2217]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2218]  COND FALSE  !(revert)
[L2221]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2051]              assume msgsender_MSG != null;
[L2052]              Balance[this] := 0;
[L2053]              owner_Owned[this] := null;
[L2054]              newOwner_Owned[this] := null;
[L2056]              owner_Owned[this] := msgsender_MSG;
[L2069]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2070]  COND FALSE  !(revert)
[L2221]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]  COND FALSE  !(revert)
[L2225]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]              assume msgsender_MSG != null;
[L1881]              Balance[this] := 0;
[L1895]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L2225]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2226]  COND FALSE  !(revert)
[L2229]  CALL        call MyToken_MyToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2171]              assume msgsender_MSG != null;
[L2172]              Balance[this] := 0;
[L2173]              symbol_MyToken[this] := -1251229519;
[L2174]              name_MyToken[this] := -1251229519;
[L2175]              decimals_MyToken[this] := 0;
[L2176]              _totalSupply_MyToken[this] := 0;
[L2177]              balances_MyToken[this] := zeroRefintArr();
[L2178]              sum_balances0[this] := 0;
[L2179]              allowed_MyToken[this] := zeroRefRefintArr();
[L2180]              sum_allowed1[this] := 0;
[L2182]              name_MyToken[this] := tokenName_s318;
[L2183]              symbol_MyToken[this] := tokenSymbol_s318;
[L2184]              decimals_MyToken[this] := tokenDecimals_s318;
[L2185]              __var_2 := tokenDecimals_s318 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2186]              _totalSupply_MyToken[this] := nonlinearMul(initialSupply_s318, nonlinearPow(10, tokenDecimals_s318 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2187]              sum_balances0[this] := sum_balances0[this] - balances_MyToken[this][msgsender_MSG];
[L2188]              balances_MyToken[this][msgsender_MSG] := _totalSupply_MyToken[this];
[L2189]              sum_balances0[this] := sum_balances0[this] + balances_MyToken[this][msgsender_MSG];
[L2190]              assert { :EventEmitted "Transfer_MyToken" } true;
[L2229]  RET         call MyToken_MyToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2230]  COND FALSE  !(revert)
[L793]   RET         call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L794]               assume !revert && gas >= 0;
[L4129]  RET         call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L4130]              assume !revert && gas >= 0;
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND FALSE  !(choice == 15)
[L4023]  COND FALSE  !(choice == 14)
[L4029]  COND FALSE  !(choice == 13)
[L4035]  COND TRUE   choice == 12
[L4036]              gas := gas - 21000;
[L4037]  COND TRUE   gas >= 0
[L4038]              assume tokens_s387 >= 0 && tokens_s387 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4039]              assume msgvalue_MSG == 0;
[L4040]  CALL        call success_s387 := transfer~address~uint256_MyToken(this, msgsender_MSG, msgvalue_MSG, to_s387, tokens_s387);
[L932]               havoc __exception;
[L933]               revert := false;
[L934]   COND FALSE  !(__exception)
[L957]   CALL        call success_s387 := transfer~address~uint256_MyToken__success(this, msgsender_MSG, msgvalue_MSG, to_s387, tokens_s387);
[L2297]  COND TRUE   DType[this] == MyToken
[L2298]  CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_MyToken[this][msgsender_MSG], tokens_s387);
[L1930]  COND FALSE  !(!(b_s45 <= a_s45))
[L1934]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2298]  RET         call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_MyToken[this][msgsender_MSG], tokens_s387);
[L2299]  COND FALSE  !(revert)
[L2305]              sum_balances0[this] := sum_balances0[this] - balances_MyToken[this][msgsender_MSG];
[L2306]              balances_MyToken[this][msgsender_MSG] := __var_4;
[L2307]              sum_balances0[this] := sum_balances0[this] + balances_MyToken[this][msgsender_MSG];
[L2308]  COND TRUE   DType[this] == MyToken
[L2309]  CALL        call __var_5 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_MyToken[this][to_s387], tokens_s387);
[L1912]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1913]  COND FALSE  !(!(c_s23 >= a_s23))
[L2309]  RET         call __var_5 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_MyToken[this][to_s387], tokens_s387);
[L2310]  COND FALSE  !(revert)
[L2316]              sum_balances0[this] := sum_balances0[this] - balances_MyToken[this][to_s387];
[L2317]              balances_MyToken[this][to_s387] := __var_5;
[L2318]              sum_balances0[this] := sum_balances0[this] + balances_MyToken[this][to_s387];
[L2319]              assert { :EventEmitted "Transfer_MyToken" } true;
[L2320]              success_s387 := true;
[L957]   RET         call success_s387 := transfer~address~uint256_MyToken__success(this, msgsender_MSG, msgvalue_MSG, to_s387, tokens_s387);
[L958]               assume !revert && gas >= 0;
[L4040]  RET         call success_s387 := transfer~address~uint256_MyToken(this, msgsender_MSG, msgvalue_MSG, to_s387, tokens_s387);
[L4133]  RET         call CorralChoice_MyToken(this);
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND TRUE   choice == 15
[L4018]              gas := gas - 21000;
[L4019]  COND TRUE   gas >= 0
[L4020]              assume msgvalue_MSG == 0;
[L4021]  CALL        call __ret_0_totalSupply := totalSupply_MyToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_MyToken[this] >= 0 && _totalSupply_MyToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_MyToken0 := true;
[L2]                 call_totalSupply_MyToken0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND FALSE  !(__exception)
[L847]   CALL        call __ret_0_ := totalSupply_MyToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2246]              __var_3 := null;
[L2247]              __ret_0_ := (_totalSupply_MyToken[this] - balances_MyToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L847]   RET         call __ret_0_ := totalSupply_MyToken__success(this, msgsender_MSG, msgvalue_MSG);
[L848]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_MyToken[this] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this])) && balances_MyToken[this] == old(balances_MyToken[this])) && allowed_MyToken[this] == old(allowed_MyToken[this])) && symbol_MyToken[this] == old(symbol_MyToken[this])) && name_MyToken[this] == old(name_MyToken[this])) && decimals_MyToken[this] == old(decimals_MyToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4021]  RET         call __ret_0_totalSupply := totalSupply_MyToken(this, msgsender_MSG, msgvalue_MSG);
[L4133]  RET         call CorralChoice_MyToken(this);

Loop:
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND TRUE   choice == 15
[L4018]              gas := gas - 21000;
[L4019]  COND TRUE   gas >= 0
[L4020]              assume msgvalue_MSG == 0;
[L4021]  CALL        call __ret_0_totalSupply := totalSupply_MyToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_MyToken[this] >= 0 && _totalSupply_MyToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_MyToken0 := true;
[L2]                 call_totalSupply_MyToken0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND FALSE  !(__exception)
[L847]   CALL        call __ret_0_ := totalSupply_MyToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2246]              __var_3 := null;
[L2247]              __ret_0_ := (_totalSupply_MyToken[this] - balances_MyToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L847]   RET         call __ret_0_ := totalSupply_MyToken__success(this, msgsender_MSG, msgvalue_MSG);
[L848]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_MyToken[this] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this])) && balances_MyToken[this] == old(balances_MyToken[this])) && allowed_MyToken[this] == old(allowed_MyToken[this])) && symbol_MyToken[this] == old(symbol_MyToken[this])) && name_MyToken[this] == old(name_MyToken[this])) && decimals_MyToken[this] == old(decimals_MyToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4021]  RET         call __ret_0_totalSupply := totalSupply_MyToken(this, msgsender_MSG, msgvalue_MSG);
[L4133]  RET         call CorralChoice_MyToken(this);

[2020-11-25 01:52:44,108 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:52:44,108 INFO  L82        PathProgramCache]: Analyzing trace with hash 800046458, now seen corresponding path program 1 times
[2020-11-25 01:52:44,109 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:52:44,128 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:52:44,155 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:52:44,223 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:52:44,223 INFO  L82        PathProgramCache]: Analyzing trace with hash 327227693, now seen corresponding path program 1 times
[2020-11-25 01:52:44,224 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:52:44,228 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:52:44,232 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:52:44,241 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:52:44,241 INFO  L82        PathProgramCache]: Analyzing trace with hash -1600262042, now seen corresponding path program 1 times
[2020-11-25 01:52:44,242 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:52:44,304 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:52:44,333 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #5: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
[2020-11-25 01:52:44,638 WARN  L188               SmtUtils]: Spent 108.00 ms on a formula simplification. DAG size of input: 204 DAG size of output: 190
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 2179 to 4357
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2503 to 5003
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
[2020-11-25 01:52:44,905 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-25 01:52:45,319 WARN  L188               SmtUtils]: Spent 113.00 ms on a formula simplification that was a NOOP. DAG size: 237
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 01:52:45,500 WARN  L188               SmtUtils]: Spent 102.00 ms on a formula simplification. DAG size of input: 99 DAG size of output: 98
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
[2020-11-25 01:52:45,728 WARN  L188               SmtUtils]: Spent 123.00 ms on a formula simplification. DAG size of input: 171 DAG size of output: 166
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 01:52:45,910 WARN  L188               SmtUtils]: Spent 138.00 ms on a formula simplification. DAG size of input: 223 DAG size of output: 201
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
[2020-11-25 01:52:46,071 WARN  L188               SmtUtils]: Spent 109.00 ms on a formula simplification that was a NOOP. DAG size: 278
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
[2020-11-25 01:52:46,386 WARN  L188               SmtUtils]: Spent 126.00 ms on a formula simplification. DAG size of input: 203 DAG size of output: 190
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2179 to 4357
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 01:52:50,036 WARN  L188               SmtUtils]: Spent 3.48 s on a formula simplification. DAG size of input: 594 DAG size of output: 585
Garbage collection #1: 239 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 239 to 467
Garbage collection #2: 467 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 467 to 929
Garbage collection #3: 929 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 929 to 1847
Garbage collection #4: 1847 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1847 to 3691
Garbage collection #5: 3691 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3691 to 7369
Garbage collection #6: 7369 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7369 to 14737
Garbage collection #7: 14737 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 14737 to 29473
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 01:52:50,461 WARN  L188               SmtUtils]: Spent 407.00 ms on a formula simplification that was a NOOP. DAG size: 228
[2020-11-25 01:52:51,036 WARN  L188               SmtUtils]: Spent 558.00 ms on a formula simplification that was a NOOP. DAG size: 305
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
[2020-11-25 01:52:51,448 WARN  L188               SmtUtils]: Spent 407.00 ms on a formula simplification that was a NOOP. DAG size: 228
[2020-11-25 01:52:52,667 WARN  L188               SmtUtils]: Spent 1.22 s on a formula simplification. DAG size of input: 307 DAG size of output: 306
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 01:52:53,283 WARN  L188               SmtUtils]: Spent 613.00 ms on a formula simplification that was a NOOP. DAG size: 302
[2020-11-25 01:52:53,297 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:52:53,326 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:52:53,335 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:52:53 BasicIcfg
[2020-11-25 01:52:53,335 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 01:52:53,335 INFO  L168              Benchmark]: Toolchain (without parser) took 15744.18 ms. Allocated memory was 1.0 GB in the beginning and 2.2 GB in the end (delta: 1.2 GB). Free memory was 935.2 MB in the beginning and 2.0 GB in the end (delta: -1.1 GB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
[2020-11-25 01:52:53,336 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.34 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:52:53,336 INFO  L168              Benchmark]: Boogie Preprocessor took 90.41 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:53,336 INFO  L168              Benchmark]: UtopiaSpecLang took 57.27 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:53,336 INFO  L168              Benchmark]: Boogie Printer took 14.98 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:52:53,336 INFO  L168              Benchmark]: RCFGBuilder took 738.63 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 801.0 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:53,337 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.47 ms. Allocated memory is still 1.0 GB. Free memory was 801.0 MB in the beginning and 797.4 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:53,337 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1309.95 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 200.3 MB). Free memory was 797.4 MB in the beginning and 1.0 GB in the end (delta: -212.2 MB). Peak memory consumption was 168.5 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:53,337 INFO  L168              Benchmark]: BlockEncodingV2 took 122.30 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 955.9 MB in the end (delta: 53.6 MB). Peak memory consumption was 53.6 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:53,337 INFO  L168              Benchmark]: BuchiAutomizer took 13371.32 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 974.7 MB). Free memory was 955.9 MB in the beginning and 2.0 GB in the end (delta: -1.0 GB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-25 01:52:53,340 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3568 locations, 6124 edges
  - StatisticsResult: Encoded RCFG
    3512 locations, 5976 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.34 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 90.41 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 57.27 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 14.98 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 738.63 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 801.0 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.47 ms. Allocated memory is still 1.0 GB. Free memory was 801.0 MB in the beginning and 797.4 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1309.95 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 200.3 MB). Free memory was 797.4 MB in the beginning and 1.0 GB in the end (delta: -212.2 MB). Peak memory consumption was 168.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 122.30 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 955.9 MB in the end (delta: 53.6 MB). Peak memory consumption was 53.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 13371.32 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 974.7 MB). Free memory was 955.9 MB in the beginning and 2.0 GB in the end (delta: -1.0 GB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1504 locations, 1890 edges
  - StatisticsResult: BuchiProgram size
    3568 locations, 6124 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 15 locations. The remainder module has 1694 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 13.3s and 5 iterations.  TraceHistogramMax:2. Analysis of lassos took 9.6s. Construction of modules took 2.3s. BÃ¼chi inclusion checks took 0.9s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1765 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2668 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 11345 SDtfs, 12684 SDslu, 15994 SDs, 0 SdLazy, 21445 SolverSat, 2327 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.3s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(231584178474632390847141970017375815706539969331281128078915168015826259279877) = (new MyToken)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279885, tokenName : 231584178474632390847141970017375815706539969331281128078915168015826259279882, tokenSymbol : 231584178474632390847141970017375815706539969331281128078915168015826259279881, tokenDecimals : 0, initialSupply : 231584178474632390847141970017375815706539969331281128078915168015826259279886});
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2217]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1999]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1984]              assume msgsender_MSG != null;
[L1985]              Balance[this] := 0;
[L1999]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2000]  COND FALSE  !(revert)
[L2217]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2218]  COND FALSE  !(revert)
[L2221]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2051]              assume msgsender_MSG != null;
[L2052]              Balance[this] := 0;
[L2053]              owner_Owned[this] := null;
[L2054]              newOwner_Owned[this] := null;
[L2056]              owner_Owned[this] := msgsender_MSG;
[L2069]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2070]  COND FALSE  !(revert)
[L2221]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]  COND FALSE  !(revert)
[L2225]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]              assume msgsender_MSG != null;
[L1881]              Balance[this] := 0;
[L1895]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L2225]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2226]  COND FALSE  !(revert)
[L2229]  CALL        call MyToken_MyToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2171]              assume msgsender_MSG != null;
[L2172]              Balance[this] := 0;
[L2173]              symbol_MyToken[this] := -1251229519;
[L2174]              name_MyToken[this] := -1251229519;
[L2175]              decimals_MyToken[this] := 0;
[L2176]              _totalSupply_MyToken[this] := 0;
[L2177]              balances_MyToken[this] := zeroRefintArr();
[L2178]              sum_balances0[this] := 0;
[L2179]              allowed_MyToken[this] := zeroRefRefintArr();
[L2180]              sum_allowed1[this] := 0;
[L2182]              name_MyToken[this] := tokenName_s318;
[L2183]              symbol_MyToken[this] := tokenSymbol_s318;
[L2184]              decimals_MyToken[this] := tokenDecimals_s318;
[L2185]              __var_2 := tokenDecimals_s318 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2186]              _totalSupply_MyToken[this] := nonlinearMul(initialSupply_s318, nonlinearPow(10, tokenDecimals_s318 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2187]              sum_balances0[this] := sum_balances0[this] - balances_MyToken[this][msgsender_MSG];
[L2188]              balances_MyToken[this][msgsender_MSG] := _totalSupply_MyToken[this];
[L2189]              sum_balances0[this] := sum_balances0[this] + balances_MyToken[this][msgsender_MSG];
[L2190]              assert { :EventEmitted "Transfer_MyToken" } true;
[L2229]  RET         call MyToken_MyToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2230]  COND FALSE  !(revert)
[L793]   RET         call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L794]               assume !revert && gas >= 0;
[L4129]  RET         call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
MyToken(231584178474632390847141970017375815706539969331281128078915168015826259279877).transfer~address~uint256.gas(3979002)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279885, to : 0, tokens : 1});
[L932]               havoc __exception;
[L933]               revert := false;
[L934]   COND FALSE  !(__exception)
[L957]   CALL        call success_s387 := transfer~address~uint256_MyToken__success(this, msgsender_MSG, msgvalue_MSG, to_s387, tokens_s387);
[L2297]  COND TRUE   DType[this] == MyToken
[L2298]  CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_MyToken[this][msgsender_MSG], tokens_s387);
[L1930]  COND FALSE  !(!(b_s45 <= a_s45))
[L1934]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2298]  RET         call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_MyToken[this][msgsender_MSG], tokens_s387);
[L2299]  COND FALSE  !(revert)
[L2305]              sum_balances0[this] := sum_balances0[this] - balances_MyToken[this][msgsender_MSG];
[L2306]              balances_MyToken[this][msgsender_MSG] := __var_4;
[L2307]              sum_balances0[this] := sum_balances0[this] + balances_MyToken[this][msgsender_MSG];
[L2308]  COND TRUE   DType[this] == MyToken
[L2309]  CALL        call __var_5 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_MyToken[this][to_s387], tokens_s387);
[L1912]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1913]  COND FALSE  !(!(c_s23 >= a_s23))
[L2309]  RET         call __var_5 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_MyToken[this][to_s387], tokens_s387);
[L2310]  COND FALSE  !(revert)
[L2316]              sum_balances0[this] := sum_balances0[this] - balances_MyToken[this][to_s387];
[L2317]              balances_MyToken[this][to_s387] := __var_5;
[L2318]              sum_balances0[this] := sum_balances0[this] + balances_MyToken[this][to_s387];
[L2319]              assert { :EventEmitted "Transfer_MyToken" } true;
[L2320]              success_s387 := true;
[L957]   RET         call success_s387 := transfer~address~uint256_MyToken__success(this, msgsender_MSG, msgvalue_MSG, to_s387, tokens_s387);
[L958]               assume !revert && gas >= 0;
[L4040]  RET         call success_s387 := transfer~address~uint256_MyToken(this, msgsender_MSG, msgvalue_MSG, to_s387, tokens_s387);
MyToken(231584178474632390847141970017375815706539969331281128078915168015826259279877).totalSupply.gas(3979003)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279870});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_MyToken[this] >= 0 && _totalSupply_MyToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_MyToken0 := true;
[L2]                 call_totalSupply_MyToken0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND FALSE  !(__exception)
[L847]   CALL        call __ret_0_ := totalSupply_MyToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2246]              __var_3 := null;
[L2247]              __ret_0_ := (_totalSupply_MyToken[this] - balances_MyToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L847]   RET         call __ret_0_ := totalSupply_MyToken__success(this, msgsender_MSG, msgvalue_MSG);
[L848]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_MyToken[this] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this])) && balances_MyToken[this] == old(balances_MyToken[this])) && allowed_MyToken[this] == old(allowed_MyToken[this])) && symbol_MyToken[this] == old(symbol_MyToken[this])) && name_MyToken[this] == old(name_MyToken[this])) && decimals_MyToken[this] == old(decimals_MyToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4021]  RET         call __ret_0_totalSupply := totalSupply_MyToken(this, msgsender_MSG, msgvalue_MSG);

Loop:
MyToken(231584178474632390847141970017375815706539969331281128078915168015826259279877).totalSupply.gas(3979001)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279873});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_MyToken[this] >= 0 && _totalSupply_MyToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_MyToken0 := true;
[L2]                 call_totalSupply_MyToken0 := false;
[L2]                 revert := revert_hold;
[L822]               havoc __exception;
[L823]               revert := false;
[L824]   COND FALSE  !(__exception)
[L847]   CALL        call __ret_0_ := totalSupply_MyToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2246]              __var_3 := null;
[L2247]              __ret_0_ := (_totalSupply_MyToken[this] - balances_MyToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L847]   RET         call __ret_0_ := totalSupply_MyToken__success(this, msgsender_MSG, msgvalue_MSG);
[L848]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_MyToken[this] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this])) && balances_MyToken[this] == old(balances_MyToken[this])) && allowed_MyToken[this] == old(allowed_MyToken[this])) && symbol_MyToken[this] == old(symbol_MyToken[this])) && name_MyToken[this] == old(name_MyToken[this])) && decimals_MyToken[this] == old(decimals_MyToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4021]  RET         call __ret_0_totalSupply := totalSupply_MyToken(this, msgsender_MSG, msgvalue_MSG);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
