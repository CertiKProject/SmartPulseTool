This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 06:38:54,127 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 06:38:54,129 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 06:38:54,139 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 06:38:54,140 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 06:38:54,140 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 06:38:54,141 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 06:38:54,143 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 06:38:54,144 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 06:38:54,145 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 06:38:54,146 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 06:38:54,146 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 06:38:54,147 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 06:38:54,147 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 06:38:54,148 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 06:38:54,149 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 06:38:54,149 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 06:38:54,150 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 06:38:54,152 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 06:38:54,153 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 06:38:54,154 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 06:38:54,154 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 06:38:54,156 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 06:38:54,156 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 06:38:54,156 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 06:38:54,157 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 06:38:54,157 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 06:38:54,158 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 06:38:54,158 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 06:38:54,158 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 06:38:54,159 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 06:38:54,159 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 06:38:54,160 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 06:38:54,160 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 06:38:54,161 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 06:38:54,161 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 06:38:54,161 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 06:38:54,162 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 06:38:54,162 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 06:38:54,162 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 06:38:54,163 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 06:38:54,163 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 06:38:54,170 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 06:38:54,171 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 06:38:54,171 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 06:38:54,171 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 06:38:54,172 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 06:38:54,172 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 06:38:54,172 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 06:38:54,172 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 06:38:54,172 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 06:38:54,172 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 06:38:54,172 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 06:38:54,172 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 06:38:54,172 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 06:38:54,173 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 06:38:54,173 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 06:38:54,173 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 06:38:54,173 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 06:38:54,173 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 06:38:54,173 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 06:38:54,173 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 06:38:54,173 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 06:38:54,173 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 06:38:54,173 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 06:38:54,174 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 06:38:54,174 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 06:38:54,174 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 06:38:54,195 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 06:38:54,204 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 06:38:54,206 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 06:38:54,207 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 06:38:54,208 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 06:38:54,208 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl
[2020-11-25 06:38:54,208 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl'
[2020-11-25 06:38:54,289 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 06:38:54,290 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 06:38:54,291 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 06:38:54,291 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 06:38:54,291 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 06:38:54,310 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:38:54" (1/1) ...
[2020-11-25 06:38:54,313 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:38:54" (1/1) ...
[2020-11-25 06:38:54,352 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:38:54" (1/1) ...
[2020-11-25 06:38:54,353 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:38:54" (1/1) ...
[2020-11-25 06:38:54,382 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:38:54" (1/1) ...
[2020-11-25 06:38:54,392 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:38:54" (1/1) ...
[2020-11-25 06:38:54,400 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:38:54" (1/1) ...
[2020-11-25 06:38:54,409 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 06:38:54,410 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 06:38:54,410 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 06:38:54,412 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 06:38:54,416 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:38:54" (1/1) ...
[2020-11-25 06:38:54,434 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TristersLightCoin.transfer(to, value), msg.sender == to && value <= _balances_TristersLightCoin[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_TristersLightCoin[this][to] >= 0 && _balances_TristersLightCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_TristersLightCoin[this][msg.sender] >= 0 &&  _balances_TristersLightCoin[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TristersLightCoin.transfer(to, value), return == true && totalSupply_TristersLightCoin[this] == old(totalSupply_TristersLightCoin[this]) && _balances_TristersLightCoin[this] == old(_balances_TristersLightCoin[this]) && _allowances_TristersLightCoin[this] == old(_allowances_TristersLightCoin[this]) && founder_TristersLightCoin[this] == old(founder_TristersLightCoin[this]) && founderLockupStartTime_TristersLightCoin[this] == old(founderLockupStartTime_TristersLightCoin[this]) && founderReleasedAmount_TristersLightCoin[this] == old(founderReleasedAmount_TristersLightCoin[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 06:38:54,440 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TristersLightCoin.transfer(to, value), msg.sender == to && value <= _balances_TristersLightCoin[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_TristersLightCoin[this][to] >= 0 && _balances_TristersLightCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_TristersLightCoin[this][msg.sender] >= 0 &&  _balances_TristersLightCoin[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TristersLightCoin.transfer(to, value), return == true && totalSupply_TristersLightCoin[this] == old(totalSupply_TristersLightCoin[this]) && _balances_TristersLightCoin[this] == old(_balances_TristersLightCoin[this]) && _allowances_TristersLightCoin[this] == old(_allowances_TristersLightCoin[this]) && founder_TristersLightCoin[this] == old(founder_TristersLightCoin[this]) && founderLockupStartTime_TristersLightCoin[this] == old(founderLockupStartTime_TristersLightCoin[this]) && founderReleasedAmount_TristersLightCoin[this] == old(founderReleasedAmount_TristersLightCoin[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 06:38:54,448 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TristersLightCoin.transfer(to, value), msg.sender == to && value <= _balances_TristersLightCoin[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_TristersLightCoin[this][to] >= 0 && _balances_TristersLightCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_TristersLightCoin[this][msg.sender] >= 0 &&  _balances_TristersLightCoin[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TristersLightCoin.transfer(to, value), return == true && totalSupply_TristersLightCoin[this] == old(totalSupply_TristersLightCoin[this]) && _balances_TristersLightCoin[this] == old(_balances_TristersLightCoin[this]) && _allowances_TristersLightCoin[this] == old(_allowances_TristersLightCoin[this]) && founder_TristersLightCoin[this] == old(founder_TristersLightCoin[this]) && founderLockupStartTime_TristersLightCoin[this] == old(founderLockupStartTime_TristersLightCoin[this]) && founderReleasedAmount_TristersLightCoin[this] == old(founderReleasedAmount_TristersLightCoin[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 06:38:54,455 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==to_s585 && amount_s585<=_balances_TristersLightCoin[this][msg.sender] ) && amount_s585>=0 ) && amount_s585<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_TristersLightCoin[this][to_s585]>=0 ) && _balances_TristersLightCoin[this][to_s585]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_TristersLightCoin[this][msg.sender]>=0 ) && _balances_TristersLightCoin[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>],IdentifierExpression[to_s585,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s585,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_TristersLightCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s585,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s585,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_TristersLightCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]],[IdentifierExpression[to_s585,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_TristersLightCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]],[IdentifierExpression[to_s585,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_TristersLightCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_TristersLightCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 06:38:54,458 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && totalSupply_TristersLightCoin[this]==( old(totalSupply_TristersLightCoin[this]) ) ) && _balances_TristersLightCoin[this]==( old(_balances_TristersLightCoin[this]) ) ) && _allowances_TristersLightCoin[this]==( old(_allowances_TristersLightCoin[this]) ) ) && founder_TristersLightCoin[this]==( old(founder_TristersLightCoin[this]) ) ) && founderLockupStartTime_TristersLightCoin[this]==( old(founderLockupStartTime_TristersLightCoin[this]) ) ) && founderReleasedAmount_TristersLightCoin[this]==( old(founderReleasedAmount_TristersLightCoin[this]) ) ) && _owner_Ownable[this]==( old(_owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_TristersLightCoin>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_TristersLightCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_TristersLightCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_TristersLightCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_TristersLightCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_TristersLightCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_TristersLightCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[founder_TristersLightCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[founder_TristersLightCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[founderLockupStartTime_TristersLightCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[founderLockupStartTime_TristersLightCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[founderReleasedAmount_TristersLightCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[founderReleasedAmount_TristersLightCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TristersLightCoin>]]]]]]
[2020-11-25 06:38:54,464 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TristersLightCoin.transfer(to, value), msg.sender == to && value <= _balances_TristersLightCoin[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_TristersLightCoin[this][to] >= 0 && _balances_TristersLightCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_TristersLightCoin[this][msg.sender] >= 0 &&  _balances_TristersLightCoin[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TristersLightCoin.transfer(to, value), return == true && totalSupply_TristersLightCoin[this] == old(totalSupply_TristersLightCoin[this]) && _balances_TristersLightCoin[this] == old(_balances_TristersLightCoin[this]) && _allowances_TristersLightCoin[this] == old(_allowances_TristersLightCoin[this]) && founder_TristersLightCoin[this] == old(founder_TristersLightCoin[this]) && founderLockupStartTime_TristersLightCoin[this] == old(founderLockupStartTime_TristersLightCoin[this]) && founderReleasedAmount_TristersLightCoin[this] == old(founderReleasedAmount_TristersLightCoin[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 06:38:54,464 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_TristersLightCoin0) ==> ( <>AP(success_transfer_TristersLightCoin0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 06:38:54,475 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:38:54 PropertyContainer
[2020-11-25 06:38:54,475 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 06:38:54,475 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 06:38:54,476 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 06:38:54,476 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 06:38:54,476 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:38:54" (1/2) ...
[2020-11-25 06:38:54,477 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 06:38:54,477 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 06:38:54,491 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:38:54" (2/2) ...
[2020-11-25 06:38:54,491 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 06:38:54,492 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 06:38:54,492 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 06:38:54,492 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 06:38:54,493 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:38:54" (1/2) ...
[2020-11-25 06:38:54,546 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 06:38:54,546 INFO  L130     BoogieDeclarations]: Found specification of procedure Address_Address_NoBaseCtor__success
[2020-11-25 06:38:54,546 INFO  L130     BoogieDeclarations]: Found specification of procedure Address_Address
[2020-11-25 06:38:54,546 INFO  L138     BoogieDeclarations]: Found implementation of procedure Address_Address
[2020-11-25 06:38:54,546 INFO  L130     BoogieDeclarations]: Found specification of procedure isContract~address_Address__success
[2020-11-25 06:38:54,546 INFO  L130     BoogieDeclarations]: Found specification of procedure toPayable~address_Address__success
[2020-11-25 06:38:54,546 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 06:38:54,546 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 06:38:54,547 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 06:38:54,547 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 06:38:54,547 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 06:38:54,547 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 06:38:54,547 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 06:38:54,547 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 06:38:54,547 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 06:38:54,547 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 06:38:54,548 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 06:38:54,548 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 06:38:54,548 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 06:38:54,548 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable
[2020-11-25 06:38:54,548 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable
[2020-11-25 06:38:54,548 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 06:38:54,548 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 06:38:54,548 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 06:38:54,549 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 06:38:54,549 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 06:38:54,549 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 06:38:54,549 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 06:38:54,549 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 06:38:54,549 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 06:38:54,549 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 06:38:54,549 INFO  L130     BoogieDeclarations]: Found specification of procedure TristersLightCoin_TristersLightCoin_NoBaseCtor__success
[2020-11-25 06:38:54,549 INFO  L130     BoogieDeclarations]: Found specification of procedure TristersLightCoin_TristersLightCoin
[2020-11-25 06:38:54,549 INFO  L138     BoogieDeclarations]: Found implementation of procedure TristersLightCoin_TristersLightCoin
[2020-11-25 06:38:54,550 INFO  L130     BoogieDeclarations]: Found specification of procedure release_TristersLightCoin
[2020-11-25 06:38:54,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure release_TristersLightCoin
[2020-11-25 06:38:54,550 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TristersLightCoin
[2020-11-25 06:38:54,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TristersLightCoin
[2020-11-25 06:38:54,550 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TristersLightCoin
[2020-11-25 06:38:54,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TristersLightCoin
[2020-11-25 06:38:54,550 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TristersLightCoin
[2020-11-25 06:38:54,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TristersLightCoin
[2020-11-25 06:38:54,550 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TristersLightCoin
[2020-11-25 06:38:54,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TristersLightCoin
[2020-11-25 06:38:54,551 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TristersLightCoin
[2020-11-25 06:38:54,551 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TristersLightCoin
[2020-11-25 06:38:54,551 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TristersLightCoin__success
[2020-11-25 06:38:54,551 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_TristersLightCoin__success
[2020-11-25 06:38:54,551 INFO  L130     BoogieDeclarations]: Found specification of procedure changeFounder~address_TristersLightCoin
[2020-11-25 06:38:54,551 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeFounder~address_TristersLightCoin
[2020-11-25 06:38:54,551 INFO  L130     BoogieDeclarations]: Found specification of procedure setMinter~address_TristersLightCoin
[2020-11-25 06:38:54,551 INFO  L138     BoogieDeclarations]: Found implementation of procedure setMinter~address_TristersLightCoin
[2020-11-25 06:38:54,551 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TristersLightCoin
[2020-11-25 06:38:54,551 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TristersLightCoin
[2020-11-25 06:38:54,551 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TristersLightCoin
[2020-11-25 06:38:54,552 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TristersLightCoin
[2020-11-25 06:38:54,552 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TristersLightCoin
[2020-11-25 06:38:54,552 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TristersLightCoin
[2020-11-25 06:38:54,552 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TristersLightCoin
[2020-11-25 06:38:54,552 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TristersLightCoin
[2020-11-25 06:38:54,552 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderAllocation_TristersLightCoin
[2020-11-25 06:38:54,552 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderAllocation_TristersLightCoin
[2020-11-25 06:38:54,552 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderLockupAmount_TristersLightCoin
[2020-11-25 06:38:54,552 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderLockupAmount_TristersLightCoin
[2020-11-25 06:38:54,553 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderLockupCliff_TristersLightCoin
[2020-11-25 06:38:54,553 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderLockupCliff_TristersLightCoin
[2020-11-25 06:38:54,553 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderReleaseInterval_TristersLightCoin
[2020-11-25 06:38:54,553 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderReleaseInterval_TristersLightCoin
[2020-11-25 06:38:54,553 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderReleaseAmount_TristersLightCoin
[2020-11-25 06:38:54,553 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderReleaseAmount_TristersLightCoin
[2020-11-25 06:38:54,553 INFO  L130     BoogieDeclarations]: Found specification of procedure founder_TristersLightCoin
[2020-11-25 06:38:54,553 INFO  L138     BoogieDeclarations]: Found implementation of procedure founder_TristersLightCoin
[2020-11-25 06:38:54,553 INFO  L130     BoogieDeclarations]: Found specification of procedure founderLockupStartTime_TristersLightCoin
[2020-11-25 06:38:54,553 INFO  L138     BoogieDeclarations]: Found implementation of procedure founderLockupStartTime_TristersLightCoin
[2020-11-25 06:38:54,554 INFO  L130     BoogieDeclarations]: Found specification of procedure founderReleasedAmount_TristersLightCoin
[2020-11-25 06:38:54,554 INFO  L138     BoogieDeclarations]: Found implementation of procedure founderReleasedAmount_TristersLightCoin
[2020-11-25 06:38:54,554 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 06:38:54,554 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 06:38:54,554 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 06:38:54,554 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 06:38:54,554 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Address
[2020-11-25 06:38:54,554 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Address
[2020-11-25 06:38:54,554 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 06:38:54,555 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 06:38:54,555 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 06:38:54,555 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 06:38:54,555 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 06:38:54,555 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 06:38:54,555 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TristersLightCoin
[2020-11-25 06:38:54,555 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 06:38:54,555 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 06:38:54,555 INFO  L130     BoogieDeclarations]: Found specification of procedure Address_Address_NoBaseCtor__fail
[2020-11-25 06:38:54,555 INFO  L130     BoogieDeclarations]: Found specification of procedure Address_Address__success
[2020-11-25 06:38:54,556 INFO  L130     BoogieDeclarations]: Found specification of procedure Address_Address__fail
[2020-11-25 06:38:54,556 INFO  L130     BoogieDeclarations]: Found specification of procedure isContract~address_Address__fail
[2020-11-25 06:38:54,556 INFO  L130     BoogieDeclarations]: Found specification of procedure toPayable~address_Address__fail
[2020-11-25 06:38:54,556 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 06:38:54,556 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 06:38:54,556 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 06:38:54,556 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 06:38:54,556 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 06:38:54,556 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 06:38:54,556 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 06:38:54,556 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 06:38:54,556 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__success
[2020-11-25 06:38:54,557 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__fail
[2020-11-25 06:38:54,557 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 06:38:54,557 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 06:38:54,557 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 06:38:54,557 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 06:38:54,557 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 06:38:54,557 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 06:38:54,557 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 06:38:54,557 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 06:38:54,558 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 06:38:54,558 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 06:38:54,558 INFO  L130     BoogieDeclarations]: Found specification of procedure TristersLightCoin_TristersLightCoin_NoBaseCtor__fail
[2020-11-25 06:38:54,558 INFO  L130     BoogieDeclarations]: Found specification of procedure TristersLightCoin_TristersLightCoin__success
[2020-11-25 06:38:54,558 INFO  L130     BoogieDeclarations]: Found specification of procedure TristersLightCoin_TristersLightCoin__fail
[2020-11-25 06:38:54,558 INFO  L130     BoogieDeclarations]: Found specification of procedure release_TristersLightCoin__success
[2020-11-25 06:38:54,558 INFO  L130     BoogieDeclarations]: Found specification of procedure release_TristersLightCoin__fail
[2020-11-25 06:38:54,558 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TristersLightCoin__success
[2020-11-25 06:38:54,558 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TristersLightCoin__fail
[2020-11-25 06:38:54,559 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TristersLightCoin__success
[2020-11-25 06:38:54,559 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TristersLightCoin__fail
[2020-11-25 06:38:54,559 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TristersLightCoin__success
[2020-11-25 06:38:54,559 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TristersLightCoin__fail
[2020-11-25 06:38:54,559 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TristersLightCoin__success
[2020-11-25 06:38:54,559 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TristersLightCoin__fail
[2020-11-25 06:38:54,559 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TristersLightCoin__success
[2020-11-25 06:38:54,559 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TristersLightCoin__fail
[2020-11-25 06:38:54,559 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TristersLightCoin__fail
[2020-11-25 06:38:54,560 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_TristersLightCoin__fail
[2020-11-25 06:38:54,560 INFO  L130     BoogieDeclarations]: Found specification of procedure changeFounder~address_TristersLightCoin__success
[2020-11-25 06:38:54,560 INFO  L130     BoogieDeclarations]: Found specification of procedure changeFounder~address_TristersLightCoin__fail
[2020-11-25 06:38:54,560 INFO  L130     BoogieDeclarations]: Found specification of procedure setMinter~address_TristersLightCoin__success
[2020-11-25 06:38:54,560 INFO  L130     BoogieDeclarations]: Found specification of procedure setMinter~address_TristersLightCoin__fail
[2020-11-25 06:38:54,560 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TristersLightCoin__success
[2020-11-25 06:38:54,560 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TristersLightCoin__fail
[2020-11-25 06:38:54,560 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TristersLightCoin__success
[2020-11-25 06:38:54,561 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TristersLightCoin__fail
[2020-11-25 06:38:54,561 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TristersLightCoin__success
[2020-11-25 06:38:54,561 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TristersLightCoin__fail
[2020-11-25 06:38:54,561 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TristersLightCoin__success
[2020-11-25 06:38:54,561 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TristersLightCoin__fail
[2020-11-25 06:38:54,561 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderAllocation_TristersLightCoin__success
[2020-11-25 06:38:54,561 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderAllocation_TristersLightCoin__fail
[2020-11-25 06:38:54,561 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderLockupAmount_TristersLightCoin__success
[2020-11-25 06:38:54,561 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderLockupAmount_TristersLightCoin__fail
[2020-11-25 06:38:54,562 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderLockupCliff_TristersLightCoin__success
[2020-11-25 06:38:54,562 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderLockupCliff_TristersLightCoin__fail
[2020-11-25 06:38:54,562 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderReleaseInterval_TristersLightCoin__success
[2020-11-25 06:38:54,562 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderReleaseInterval_TristersLightCoin__fail
[2020-11-25 06:38:54,562 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderReleaseAmount_TristersLightCoin__success
[2020-11-25 06:38:54,562 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderReleaseAmount_TristersLightCoin__fail
[2020-11-25 06:38:54,562 INFO  L130     BoogieDeclarations]: Found specification of procedure founder_TristersLightCoin__success
[2020-11-25 06:38:54,562 INFO  L130     BoogieDeclarations]: Found specification of procedure founder_TristersLightCoin__fail
[2020-11-25 06:38:54,562 INFO  L130     BoogieDeclarations]: Found specification of procedure founderLockupStartTime_TristersLightCoin__success
[2020-11-25 06:38:54,562 INFO  L130     BoogieDeclarations]: Found specification of procedure founderLockupStartTime_TristersLightCoin__fail
[2020-11-25 06:38:54,562 INFO  L130     BoogieDeclarations]: Found specification of procedure founderReleasedAmount_TristersLightCoin__success
[2020-11-25 06:38:54,563 INFO  L130     BoogieDeclarations]: Found specification of procedure founderReleasedAmount_TristersLightCoin__fail
[2020-11-25 06:38:54,563 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 06:38:54,563 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 06:38:54,563 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 06:38:54,563 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 06:38:54,563 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 06:38:54,564 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 06:38:54,564 INFO  L138     BoogieDeclarations]: Found implementation of procedure Address_Address_NoBaseCtor__fail
[2020-11-25 06:38:54,564 INFO  L138     BoogieDeclarations]: Found implementation of procedure Address_Address_NoBaseCtor__success
[2020-11-25 06:38:54,565 INFO  L138     BoogieDeclarations]: Found implementation of procedure Address_Address__fail
[2020-11-25 06:38:54,565 INFO  L138     BoogieDeclarations]: Found implementation of procedure Address_Address__success
[2020-11-25 06:38:54,565 INFO  L138     BoogieDeclarations]: Found implementation of procedure isContract~address_Address__fail
[2020-11-25 06:38:54,565 INFO  L138     BoogieDeclarations]: Found implementation of procedure isContract~address_Address__success
[2020-11-25 06:38:54,565 INFO  L138     BoogieDeclarations]: Found implementation of procedure toPayable~address_Address__fail
[2020-11-25 06:38:54,566 INFO  L138     BoogieDeclarations]: Found implementation of procedure toPayable~address_Address__success
[2020-11-25 06:38:54,566 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 06:38:54,566 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 06:38:54,566 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 06:38:54,566 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 06:38:54,567 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 06:38:54,567 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 06:38:54,567 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 06:38:54,567 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 06:38:54,568 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 06:38:54,568 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 06:38:54,568 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__fail
[2020-11-25 06:38:54,568 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__success
[2020-11-25 06:38:54,568 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 06:38:54,569 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 06:38:54,569 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 06:38:54,569 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 06:38:54,569 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 06:38:54,569 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 06:38:54,570 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 06:38:54,570 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 06:38:54,570 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 06:38:54,570 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 06:38:54,570 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 06:38:54,571 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 06:38:54,571 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 06:38:54,571 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 06:38:54,571 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 06:38:54,571 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 06:38:54,571 INFO  L138     BoogieDeclarations]: Found implementation of procedure TristersLightCoin_TristersLightCoin_NoBaseCtor__fail
[2020-11-25 06:38:54,572 INFO  L138     BoogieDeclarations]: Found implementation of procedure TristersLightCoin_TristersLightCoin_NoBaseCtor__success
[2020-11-25 06:38:54,572 INFO  L138     BoogieDeclarations]: Found implementation of procedure TristersLightCoin_TristersLightCoin__fail
[2020-11-25 06:38:54,572 INFO  L138     BoogieDeclarations]: Found implementation of procedure TristersLightCoin_TristersLightCoin__success
[2020-11-25 06:38:54,572 INFO  L138     BoogieDeclarations]: Found implementation of procedure release_TristersLightCoin__fail
[2020-11-25 06:38:54,572 INFO  L138     BoogieDeclarations]: Found implementation of procedure release_TristersLightCoin__success
[2020-11-25 06:38:54,572 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TristersLightCoin__fail
[2020-11-25 06:38:54,573 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TristersLightCoin__success
[2020-11-25 06:38:54,573 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TristersLightCoin__fail
[2020-11-25 06:38:54,573 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TristersLightCoin__success
[2020-11-25 06:38:54,573 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TristersLightCoin__fail
[2020-11-25 06:38:54,573 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TristersLightCoin__success
[2020-11-25 06:38:54,573 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TristersLightCoin__fail
[2020-11-25 06:38:54,573 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TristersLightCoin__success
[2020-11-25 06:38:54,574 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TristersLightCoin__fail
[2020-11-25 06:38:54,574 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TristersLightCoin__success
[2020-11-25 06:38:54,574 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TristersLightCoin__fail
[2020-11-25 06:38:54,574 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TristersLightCoin__success
[2020-11-25 06:38:54,574 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_TristersLightCoin__fail
[2020-11-25 06:38:54,574 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_TristersLightCoin__success
[2020-11-25 06:38:54,574 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeFounder~address_TristersLightCoin__fail
[2020-11-25 06:38:54,575 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeFounder~address_TristersLightCoin__success
[2020-11-25 06:38:54,575 INFO  L138     BoogieDeclarations]: Found implementation of procedure setMinter~address_TristersLightCoin__fail
[2020-11-25 06:38:54,575 INFO  L138     BoogieDeclarations]: Found implementation of procedure setMinter~address_TristersLightCoin__success
[2020-11-25 06:38:54,575 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TristersLightCoin__fail
[2020-11-25 06:38:54,575 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TristersLightCoin__success
[2020-11-25 06:38:54,575 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TristersLightCoin__fail
[2020-11-25 06:38:54,576 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TristersLightCoin__success
[2020-11-25 06:38:54,576 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TristersLightCoin__fail
[2020-11-25 06:38:54,576 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TristersLightCoin__success
[2020-11-25 06:38:54,576 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TristersLightCoin__fail
[2020-11-25 06:38:54,576 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TristersLightCoin__success
[2020-11-25 06:38:54,576 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderAllocation_TristersLightCoin__fail
[2020-11-25 06:38:54,576 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderAllocation_TristersLightCoin__success
[2020-11-25 06:38:54,576 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderLockupAmount_TristersLightCoin__fail
[2020-11-25 06:38:54,576 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderLockupAmount_TristersLightCoin__success
[2020-11-25 06:38:54,576 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderLockupCliff_TristersLightCoin__fail
[2020-11-25 06:38:54,576 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderLockupCliff_TristersLightCoin__success
[2020-11-25 06:38:54,576 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderReleaseInterval_TristersLightCoin__fail
[2020-11-25 06:38:54,577 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderReleaseInterval_TristersLightCoin__success
[2020-11-25 06:38:54,577 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderReleaseAmount_TristersLightCoin__fail
[2020-11-25 06:38:54,577 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderReleaseAmount_TristersLightCoin__success
[2020-11-25 06:38:54,577 INFO  L138     BoogieDeclarations]: Found implementation of procedure founder_TristersLightCoin__fail
[2020-11-25 06:38:54,577 INFO  L138     BoogieDeclarations]: Found implementation of procedure founder_TristersLightCoin__success
[2020-11-25 06:38:54,577 INFO  L138     BoogieDeclarations]: Found implementation of procedure founderLockupStartTime_TristersLightCoin__fail
[2020-11-25 06:38:54,577 INFO  L138     BoogieDeclarations]: Found implementation of procedure founderLockupStartTime_TristersLightCoin__success
[2020-11-25 06:38:54,577 INFO  L138     BoogieDeclarations]: Found implementation of procedure founderReleasedAmount_TristersLightCoin__fail
[2020-11-25 06:38:54,577 INFO  L138     BoogieDeclarations]: Found implementation of procedure founderReleasedAmount_TristersLightCoin__success
[2020-11-25 06:38:54,577 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 06:38:54,577 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 06:38:54,577 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 06:38:54,577 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 06:38:54,577 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 06:38:54,577 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 06:38:54,577 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 06:38:54,578 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 06:38:54,578 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Address
[2020-11-25 06:38:54,578 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Address
[2020-11-25 06:38:54,578 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 06:38:54,578 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 06:38:54,578 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 06:38:54,578 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 06:38:54,578 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 06:38:54,578 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 06:38:54,578 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TristersLightCoin
[2020-11-25 06:38:54,578 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 06:38:54,578 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 06:38:54,579 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 06:38:55,184 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:38:55,184 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:38:55,185 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:38:55,225 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 06:38:55,225 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 06:38:55,227 INFO  L202        PluginConnector]: Adding new model TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:38:55 BoogieIcfgContainer
[2020-11-25 06:38:55,227 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:38:54" (2/2) ...
[2020-11-25 06:38:55,227 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 06:38:55,228 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@36c4f1b9 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:38:55, skipping insertion in model container
[2020-11-25 06:38:55,228 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 06:38:55,228 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 06:38:55,228 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 06:38:55,229 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 06:38:55,230 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:38:54" (1/3) ...
[2020-11-25 06:38:55,230 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2807d87b and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:38:55, skipping insertion in model container
[2020-11-25 06:38:55,230 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:38:54" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 06:38:55,264 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:38:55 NWAContainer
[2020-11-25 06:38:55,265 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 06:38:55,265 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 06:38:55,265 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 06:38:55,266 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 06:38:55,266 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:38:55" (3/4) ...
[2020-11-25 06:38:55,267 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@732098a3 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:38:55, skipping insertion in model container
[2020-11-25 06:38:55,267 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:38:55" (4/4) ...
[2020-11-25 06:38:55,270 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 06:38:55,274 INFO  L110   BuchiProductObserver]: Initial RCFG 1853 locations, 2311 edges
[2020-11-25 06:38:55,274 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 06:38:55,285 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 06:38:56,660 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 06:38:56,666 INFO  L110   BuchiProductObserver]: BuchiProgram size 4396 locations, 7446 edges
[2020-11-25 06:38:56,666 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:38:56 BoogieIcfgContainer
[2020-11-25 06:38:56,666 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 06:38:56,666 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 06:38:56,666 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 06:38:56,667 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 06:38:56,668 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:38:56" (1/1) ...
[2020-11-25 06:38:56,753 INFO  L313           BlockEncoder]: Initial Icfg 4396 locations, 7446 edges
[2020-11-25 06:38:56,754 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 06:38:56,754 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 06:38:56,754 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 06:38:56,755 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 06:38:56,765 INFO  L70    emoveInfeasibleEdges]: Removed 54 edges and 13 locations because of local infeasibility
[2020-11-25 06:38:56,774 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 06:38:56,784 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 06:38:56,787 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 06:38:56,790 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 06:38:56,791 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 06:38:56,795 INFO  L313           BlockEncoder]: Encoded RCFG 4360 locations, 7358 edges
[2020-11-25 06:38:56,795 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:38:56 BasicIcfg
[2020-11-25 06:38:56,795 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 06:38:56,796 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 06:38:56,796 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 06:38:56,798 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 06:38:56,798 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:38:56,798 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:38:54" (1/6) ...
[2020-11-25 06:38:56,800 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2c33c2ca and model type TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:38:56, skipping insertion in model container
[2020-11-25 06:38:56,800 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:38:56,800 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:38:54" (2/6) ...
[2020-11-25 06:38:56,800 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2c33c2ca and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:38:56, skipping insertion in model container
[2020-11-25 06:38:56,800 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:38:56,800 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:38:55" (3/6) ...
[2020-11-25 06:38:56,800 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2c33c2ca and model type TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:38:56, skipping insertion in model container
[2020-11-25 06:38:56,801 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:38:56,801 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:38:55" (4/6) ...
[2020-11-25 06:38:56,801 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2c33c2ca and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:38:56, skipping insertion in model container
[2020-11-25 06:38:56,801 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:38:56,801 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:38:56" (5/6) ...
[2020-11-25 06:38:56,801 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2c33c2ca and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 06:38:56, skipping insertion in model container
[2020-11-25 06:38:56,801 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:38:56,801 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:38:56" (6/6) ...
[2020-11-25 06:38:56,802 INFO  L404   chiAutomizerObserver]: Analyzing ICFG TristersLightCoin_0x9d5155fbffd5bbb7555f13819a5b435b7befdcbe_transfer-self.bpl_BEv2
[2020-11-25 06:38:56,833 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 06:38:56,833 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 06:38:56,834 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 06:38:56,834 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 06:38:56,834 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 06:38:56,834 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 06:38:56,834 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 06:38:56,834 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 06:38:56,834 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 06:38:56,866 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4360 states.
[2020-11-25 06:38:56,931 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:38:56,932 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:38:56,932 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:38:56,941 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:38:56,941 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:38:56,941 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 06:38:56,941 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4360 states.
[2020-11-25 06:38:56,968 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:38:56,968 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:38:56,969 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:38:56,971 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:38:56,971 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_TristersLightCoin0 := false;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]     CALL        call main();
[L4878]              assume null == 0;
[L4879]  CALL        call this := FreshRefGenerator__success();
[L2578]              havoc newRef;
[L2579]              assume Alloc[newRef] == false;
[L2580]              Alloc[newRef] := true;
[L2581]              assume newRef != null;
[L4879]  RET         call this := FreshRefGenerator__success();
[L4880]              assume now >= 0;
[L4881]              assume DType[this] == TristersLightCoin;
[L4882]              assume msgvalue_MSG == 0;
[L4883]              gas := gas - 53000;
[L4884]  CALL        call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L632]               havoc __exception;
[L633]               revert := false;
[L634]   COND FALSE  !(__exception)
[L664]   CALL        call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3078]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2701]              assume msgsender_MSG != null;
[L2702]              Balance[this] := 0;
[L2703]              _owner_Ownable[this] := null;
[L2705]              _owner_Ownable[this] := msgsender_MSG;
[L2706]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L2719]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2720]  COND FALSE  !(revert)
[L3078]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3079]  COND TRUE   revert
[L664]   RET         call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L665]               assume !revert && gas >= 0;
[L4884]  RET         call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L4885]              assume !revert && gas >= 0;

Loop:
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND TRUE   choice == 23
[L4728]              gas := gas - 21000;
[L4729]  COND FALSE  !(gas >= 0)
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

[2020-11-25 06:38:56,989 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:38:56,989 INFO  L82        PathProgramCache]: Analyzing trace with hash 2129094296, now seen corresponding path program 1 times
[2020-11-25 06:38:56,994 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:38:57,020 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:38:57,074 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:38:57,076 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:38:57,076 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 06:38:57,239 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:38:57,250 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 06:38:57,251 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 06:38:57,252 INFO  L87              Difference]: Start difference. First operand 4360 states. Second operand 4 states.
[2020-11-25 06:38:57,752 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:38:57,752 INFO  L93              Difference]: Finished difference Result 3393 states and 3752 transitions.
[2020-11-25 06:38:57,752 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 06:38:57,754 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3393 states and 3752 transitions.
[2020-11-25 06:38:57,770 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:38:57,794 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3393 states to 3393 states and 3752 transitions.
[2020-11-25 06:38:57,795 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 06:38:57,798 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1063
[2020-11-25 06:38:57,798 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3393 states and 3752 transitions.
[2020-11-25 06:38:57,806 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:38:57,807 INFO  L728         BuchiCegarLoop]: Abstraction has 3393 states and 3752 transitions.
[2020-11-25 06:38:57,823 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3393 states and 3752 transitions.
[2020-11-25 06:38:57,866 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3393 to 3393.
[2020-11-25 06:38:57,866 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3393 states.
[2020-11-25 06:38:57,871 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3393 states to 3393 states and 3752 transitions.
[2020-11-25 06:38:57,872 INFO  L751         BuchiCegarLoop]: Abstraction has 3393 states and 3752 transitions.
[2020-11-25 06:38:57,873 INFO  L631         BuchiCegarLoop]: Abstraction has 3393 states and 3752 transitions.
[2020-11-25 06:38:57,873 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 06:38:57,873 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3393 states and 3752 transitions.
[2020-11-25 06:38:57,880 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:38:57,880 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:38:57,880 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:38:57,882 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:38:57,882 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_TristersLightCoin0 := false;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]     CALL        call main();
[L4878]              assume null == 0;
[L4879]  CALL        call this := FreshRefGenerator__success();
[L2578]              havoc newRef;
[L2579]              assume Alloc[newRef] == false;
[L2580]              Alloc[newRef] := true;
[L2581]              assume newRef != null;
[L4879]  RET         call this := FreshRefGenerator__success();
[L4880]              assume now >= 0;
[L4881]              assume DType[this] == TristersLightCoin;
[L4882]              assume msgvalue_MSG == 0;
[L4883]              gas := gas - 53000;
[L4884]  CALL        call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L632]               havoc __exception;
[L633]               revert := false;
[L634]   COND FALSE  !(__exception)
[L664]   CALL        call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3078]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2701]              assume msgsender_MSG != null;
[L2702]              Balance[this] := 0;
[L2703]              _owner_Ownable[this] := null;
[L2705]              _owner_Ownable[this] := msgsender_MSG;
[L2706]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L2719]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2720]  COND FALSE  !(revert)
[L3078]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3079]  COND TRUE   revert
[L664]   RET         call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L665]               assume !revert && gas >= 0;
[L4884]  RET         call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L4885]              assume !revert && gas >= 0;
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND FALSE  !(choice == 23)
[L4733]  COND TRUE   choice == 22
[L4734]              gas := gas - 21000;
[L4735]  COND TRUE   gas >= 0
[L4736]              assume amount_s585 >= 0 && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4737]              assume msgvalue_MSG == 0;
[L4738]  CALL        call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s585 && amount_s585 <= _balances_TristersLightCoin[this][msgsender_MSG]) && amount_s585 >= 0) && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][to_s585] >= 0) && _balances_TristersLightCoin[this][to_s585] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][msgsender_MSG] >= 0) && _balances_TristersLightCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TristersLightCoin0 := true;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]                 revert := revert_hold;
[L841]               havoc __exception;
[L842]               revert := false;
[L843]   COND FALSE  !(__exception)
[L873]   CALL        call __ret_0_ := transfer~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L3224]  CALL        call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3342]              __var_12 := null;
[L3343]  COND TRUE   !(from_s717 != null)
[L3344]              revert := true;
[L3224]  RET         call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3225]  COND TRUE   revert
[L873]   RET         call __ret_0_ := transfer~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L874]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == true && totalSupply_TristersLightCoin[this] == old(totalSupply_TristersLightCoin[this])) && _balances_TristersLightCoin[this] == old(_balances_TristersLightCoin[this])) && _allowances_TristersLightCoin[this] == old(_allowances_TristersLightCoin[this])) && founder_TristersLightCoin[this] == old(founder_TristersLightCoin[this])) && founderLockupStartTime_TristersLightCoin[this] == old(founderLockupStartTime_TristersLightCoin[this])) && founderReleasedAmount_TristersLightCoin[this] == old(founderReleasedAmount_TristersLightCoin[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L4738]  RET         call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

Loop:
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND FALSE  !(choice == 23)
[L4733]  COND TRUE   choice == 22
[L4734]              gas := gas - 21000;
[L4735]  COND TRUE   gas >= 0
[L4736]              assume amount_s585 >= 0 && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4737]              assume msgvalue_MSG == 0;
[L4738]  CALL        call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s585 && amount_s585 <= _balances_TristersLightCoin[this][msgsender_MSG]) && amount_s585 >= 0) && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][to_s585] >= 0) && _balances_TristersLightCoin[this][to_s585] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][msgsender_MSG] >= 0) && _balances_TristersLightCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TristersLightCoin0 := true;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]                 revert := revert_hold;
[L841]               havoc __exception;
[L842]               revert := false;
[L843]   COND FALSE  !(__exception)
[L873]   CALL        call __ret_0_ := transfer~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L3224]  CALL        call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3342]              __var_12 := null;
[L3343]  COND TRUE   !(from_s717 != null)
[L3344]              revert := true;
[L3224]  RET         call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3225]  COND TRUE   revert
[L873]   RET         call __ret_0_ := transfer~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L874]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == true && totalSupply_TristersLightCoin[this] == old(totalSupply_TristersLightCoin[this])) && _balances_TristersLightCoin[this] == old(_balances_TristersLightCoin[this])) && _allowances_TristersLightCoin[this] == old(_allowances_TristersLightCoin[this])) && founder_TristersLightCoin[this] == old(founder_TristersLightCoin[this])) && founderLockupStartTime_TristersLightCoin[this] == old(founderLockupStartTime_TristersLightCoin[this])) && founderReleasedAmount_TristersLightCoin[this] == old(founderReleasedAmount_TristersLightCoin[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L4738]  RET         call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

[2020-11-25 06:38:57,886 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:38:57,886 INFO  L82        PathProgramCache]: Analyzing trace with hash -1906330854, now seen corresponding path program 1 times
[2020-11-25 06:38:57,887 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:38:57,896 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:38:57,913 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:38:57,913 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:38:57,913 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 06:38:57,915 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:38:57,915 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 06:38:57,915 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 06:38:57,915 INFO  L87              Difference]: Start difference. First operand 3393 states and 3752 transitions. cyclomatic complexity: 361 Second operand 3 states.
[2020-11-25 06:38:57,983 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:38:57,983 INFO  L93              Difference]: Finished difference Result 4259 states and 4816 transitions.
[2020-11-25 06:38:57,983 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 06:38:57,984 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4259 states and 4816 transitions.
[2020-11-25 06:38:57,999 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 06:38:58,014 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4259 states to 4259 states and 4816 transitions.
[2020-11-25 06:38:58,015 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1316
[2020-11-25 06:38:58,016 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1316
[2020-11-25 06:38:58,016 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4259 states and 4816 transitions.
[2020-11-25 06:38:58,022 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:38:58,022 INFO  L728         BuchiCegarLoop]: Abstraction has 4259 states and 4816 transitions.
[2020-11-25 06:38:58,025 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4259 states and 4816 transitions.
[2020-11-25 06:38:58,058 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4259 to 3609.
[2020-11-25 06:38:58,058 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3609 states.
[2020-11-25 06:38:58,061 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3609 states to 3609 states and 4004 transitions.
[2020-11-25 06:38:58,061 INFO  L751         BuchiCegarLoop]: Abstraction has 3609 states and 4004 transitions.
[2020-11-25 06:38:58,062 INFO  L631         BuchiCegarLoop]: Abstraction has 3609 states and 4004 transitions.
[2020-11-25 06:38:58,062 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 06:38:58,062 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3609 states and 4004 transitions.
[2020-11-25 06:38:58,068 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:38:58,068 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:38:58,068 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:38:58,069 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:38:58,069 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_TristersLightCoin0 := false;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]     CALL        call main();
[L4878]              assume null == 0;
[L4879]  CALL        call this := FreshRefGenerator__success();
[L2578]              havoc newRef;
[L2579]              assume Alloc[newRef] == false;
[L2580]              Alloc[newRef] := true;
[L2581]              assume newRef != null;
[L4879]  RET         call this := FreshRefGenerator__success();
[L4880]              assume now >= 0;
[L4881]              assume DType[this] == TristersLightCoin;
[L4882]              assume msgvalue_MSG == 0;
[L4883]              gas := gas - 53000;
[L4884]  CALL        call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L632]               havoc __exception;
[L633]               revert := false;
[L634]   COND FALSE  !(__exception)
[L664]   CALL        call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3078]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2701]              assume msgsender_MSG != null;
[L2702]              Balance[this] := 0;
[L2703]              _owner_Ownable[this] := null;
[L2705]              _owner_Ownable[this] := msgsender_MSG;
[L2706]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L2719]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2720]  COND FALSE  !(revert)
[L3078]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3079]  COND FALSE  !(revert)
[L3082]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2682]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2667]              assume msgsender_MSG != null;
[L2668]              Balance[this] := 0;
[L2682]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L3082]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3083]  COND FALSE  !(revert)
[L3086]  CALL        call TristersLightCoin_TristersLightCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3001]              assume msgsender_MSG != null;
[L3002]              Balance[this] := 0;
[L3003]              name_TristersLightCoin[this] := -536466818;
[L3004]              symbol_TristersLightCoin[this] := 685674239;
[L3005]              decimals_TristersLightCoin[this] := 18;
[L3006]              totalSupply_TristersLightCoin[this] := nonlinearMul(8000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3007]              FounderAllocation_TristersLightCoin[this] := nonlinearMul(500 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3008]              FounderLockupAmount_TristersLightCoin[this] := nonlinearMul(300 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3009]              FounderLockupCliff_TristersLightCoin[this] := 180;
[L3010]              FounderReleaseInterval_TristersLightCoin[this] := 30;
[L3011]              FounderReleaseAmount_TristersLightCoin[this] := nonlinearMul(50 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3012]              __var_9 := null;
[L3013]              founder_TristersLightCoin[this] := null;
[L3014]              founderLockupStartTime_TristersLightCoin[this] := 0;
[L3015]              founderReleasedAmount_TristersLightCoin[this] := 0;
[L3016]              _balances_TristersLightCoin[this] := zeroRefintArr();
[L3017]              sum__balances0[this] := 0;
[L3018]              _allowances_TristersLightCoin[this] := zeroRefRefintArr();
[L3019]              sum__allowances1[this] := 0;
[L3021]              __var_4 := null;
[L3022]  COND TRUE   !(_founder_s476 != null)
[L3023]              revert := true;
[L3086]  RET         call TristersLightCoin_TristersLightCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3087]  COND FALSE  !(revert)
[L664]   RET         call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L665]               assume !revert && gas >= 0;
[L4884]  RET         call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L4885]              assume !revert && gas >= 0;
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND FALSE  !(choice == 23)
[L4733]  COND TRUE   choice == 22
[L4734]              gas := gas - 21000;
[L4735]  COND TRUE   gas >= 0
[L4736]              assume amount_s585 >= 0 && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4737]              assume msgvalue_MSG == 0;
[L4738]  CALL        call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s585 && amount_s585 <= _balances_TristersLightCoin[this][msgsender_MSG]) && amount_s585 >= 0) && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][to_s585] >= 0) && _balances_TristersLightCoin[this][to_s585] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][msgsender_MSG] >= 0) && _balances_TristersLightCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TristersLightCoin0 := true;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]                 revert := revert_hold;
[L841]               havoc __exception;
[L842]               revert := false;
[L843]   COND FALSE  !(__exception)
[L873]   CALL        call __ret_0_ := transfer~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L3224]  CALL        call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3342]              __var_12 := null;
[L3343]  COND TRUE   !(from_s717 != null)
[L3344]              revert := true;
[L3224]  RET         call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3225]  COND TRUE   revert
[L873]   RET         call __ret_0_ := transfer~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L874]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == true && totalSupply_TristersLightCoin[this] == old(totalSupply_TristersLightCoin[this])) && _balances_TristersLightCoin[this] == old(_balances_TristersLightCoin[this])) && _allowances_TristersLightCoin[this] == old(_allowances_TristersLightCoin[this])) && founder_TristersLightCoin[this] == old(founder_TristersLightCoin[this])) && founderLockupStartTime_TristersLightCoin[this] == old(founderLockupStartTime_TristersLightCoin[this])) && founderReleasedAmount_TristersLightCoin[this] == old(founderReleasedAmount_TristersLightCoin[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L4738]  RET         call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

Loop:
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND FALSE  !(choice == 23)
[L4733]  COND TRUE   choice == 22
[L4734]              gas := gas - 21000;
[L4735]  COND TRUE   gas >= 0
[L4736]              assume amount_s585 >= 0 && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4737]              assume msgvalue_MSG == 0;
[L4738]  CALL        call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s585 && amount_s585 <= _balances_TristersLightCoin[this][msgsender_MSG]) && amount_s585 >= 0) && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][to_s585] >= 0) && _balances_TristersLightCoin[this][to_s585] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][msgsender_MSG] >= 0) && _balances_TristersLightCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TristersLightCoin0 := true;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]                 revert := revert_hold;
[L841]               havoc __exception;
[L842]               revert := false;
[L843]   COND FALSE  !(__exception)
[L873]   CALL        call __ret_0_ := transfer~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L3224]  CALL        call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3342]              __var_12 := null;
[L3343]  COND TRUE   !(from_s717 != null)
[L3344]              revert := true;
[L3224]  RET         call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3225]  COND TRUE   revert
[L873]   RET         call __ret_0_ := transfer~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L874]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == true && totalSupply_TristersLightCoin[this] == old(totalSupply_TristersLightCoin[this])) && _balances_TristersLightCoin[this] == old(_balances_TristersLightCoin[this])) && _allowances_TristersLightCoin[this] == old(_allowances_TristersLightCoin[this])) && founder_TristersLightCoin[this] == old(founder_TristersLightCoin[this])) && founderLockupStartTime_TristersLightCoin[this] == old(founderLockupStartTime_TristersLightCoin[this])) && founderReleasedAmount_TristersLightCoin[this] == old(founderReleasedAmount_TristersLightCoin[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L4738]  RET         call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

[2020-11-25 06:38:58,073 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:38:58,073 INFO  L82        PathProgramCache]: Analyzing trace with hash 1764681425, now seen corresponding path program 1 times
[2020-11-25 06:38:58,074 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:38:58,082 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:38:58,103 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:38:58,103 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:38:58,103 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 06:38:58,103 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:38:58,104 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 06:38:58,104 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 06:38:58,104 INFO  L87              Difference]: Start difference. First operand 3609 states and 4004 transitions. cyclomatic complexity: 397 Second operand 3 states.
[2020-11-25 06:38:58,171 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:38:58,171 INFO  L93              Difference]: Finished difference Result 4259 states and 4722 transitions.
[2020-11-25 06:38:58,171 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 06:38:58,172 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4259 states and 4722 transitions.
[2020-11-25 06:38:58,188 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 06:38:58,208 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4259 states to 4045 states and 4468 transitions.
[2020-11-25 06:38:58,208 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1258
[2020-11-25 06:38:58,209 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1291
[2020-11-25 06:38:58,210 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4045 states and 4468 transitions.
[2020-11-25 06:38:58,215 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:38:58,215 INFO  L728         BuchiCegarLoop]: Abstraction has 4045 states and 4468 transitions.
[2020-11-25 06:38:58,220 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4045 states and 4468 transitions.
[2020-11-25 06:38:58,263 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4045 to 3463.
[2020-11-25 06:38:58,263 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3463 states.
[2020-11-25 06:38:58,269 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3463 states to 3463 states and 3724 transitions.
[2020-11-25 06:38:58,269 INFO  L751         BuchiCegarLoop]: Abstraction has 3463 states and 3724 transitions.
[2020-11-25 06:38:58,269 INFO  L631         BuchiCegarLoop]: Abstraction has 3463 states and 3724 transitions.
[2020-11-25 06:38:58,269 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 06:38:58,269 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3463 states and 3724 transitions.
[2020-11-25 06:38:58,278 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:38:58,278 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:38:58,278 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:38:58,281 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:38:58,281 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_TristersLightCoin0 := false;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]     CALL        call main();
[L4878]              assume null == 0;
[L4879]  CALL        call this := FreshRefGenerator__success();
[L2578]              havoc newRef;
[L2579]              assume Alloc[newRef] == false;
[L2580]              Alloc[newRef] := true;
[L2581]              assume newRef != null;
[L4879]  RET         call this := FreshRefGenerator__success();
[L4880]              assume now >= 0;
[L4881]              assume DType[this] == TristersLightCoin;
[L4882]              assume msgvalue_MSG == 0;
[L4883]              gas := gas - 53000;
[L4884]  CALL        call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L632]               havoc __exception;
[L633]               revert := false;
[L634]   COND FALSE  !(__exception)
[L664]   CALL        call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3078]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2701]              assume msgsender_MSG != null;
[L2702]              Balance[this] := 0;
[L2703]              _owner_Ownable[this] := null;
[L2705]              _owner_Ownable[this] := msgsender_MSG;
[L2706]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L2719]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2720]  COND FALSE  !(revert)
[L3078]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3079]  COND FALSE  !(revert)
[L3082]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2682]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2667]              assume msgsender_MSG != null;
[L2668]              Balance[this] := 0;
[L2682]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L3082]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3083]  COND FALSE  !(revert)
[L3086]  CALL        call TristersLightCoin_TristersLightCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3001]              assume msgsender_MSG != null;
[L3002]              Balance[this] := 0;
[L3003]              name_TristersLightCoin[this] := -536466818;
[L3004]              symbol_TristersLightCoin[this] := 685674239;
[L3005]              decimals_TristersLightCoin[this] := 18;
[L3006]              totalSupply_TristersLightCoin[this] := nonlinearMul(8000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3007]              FounderAllocation_TristersLightCoin[this] := nonlinearMul(500 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3008]              FounderLockupAmount_TristersLightCoin[this] := nonlinearMul(300 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3009]              FounderLockupCliff_TristersLightCoin[this] := 180;
[L3010]              FounderReleaseInterval_TristersLightCoin[this] := 30;
[L3011]              FounderReleaseAmount_TristersLightCoin[this] := nonlinearMul(50 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3012]              __var_9 := null;
[L3013]              founder_TristersLightCoin[this] := null;
[L3014]              founderLockupStartTime_TristersLightCoin[this] := 0;
[L3015]              founderReleasedAmount_TristersLightCoin[this] := 0;
[L3016]              _balances_TristersLightCoin[this] := zeroRefintArr();
[L3017]              sum__balances0[this] := 0;
[L3018]              _allowances_TristersLightCoin[this] := zeroRefRefintArr();
[L3019]              sum__allowances1[this] := 0;
[L3021]              __var_4 := null;
[L3022]  COND FALSE  !(!(_founder_s476 != null))
[L3026]              __var_5 := null;
[L3027]  COND FALSE  !(!(_operator_s476 != null))
[L3031]              founder_TristersLightCoin[this] := _founder_s476;
[L3032]              founderLockupStartTime_TristersLightCoin[this] := now;
[L3033]              __var_6 := this;
[L3034]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][this];
[L3035]              _balances_TristersLightCoin[this][this] := totalSupply_TristersLightCoin[this];
[L3036]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][this];
[L3037]              __var_7 := this;
[L3038]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, FounderAllocation_TristersLightCoin[this], FounderLockupAmount_TristersLightCoin[this], -1195062810);
[L2851]  COND FALSE  !(!(b_s228 <= a_s228))
[L2855]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2856]              __ret_0_ := c_s228;
[L3038]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, FounderAllocation_TristersLightCoin[this], FounderLockupAmount_TristersLightCoin[this], -1195062810);
[L3039]  COND FALSE  !(revert)
[L3042]  CALL        call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _operator_s476, __var_8);
[L3342]              __var_12 := null;
[L3343]  COND FALSE  !(!(from_s717 != null))
[L3347]              __var_13 := null;
[L3348]  COND FALSE  !(!(to_s717 != null))
[L3352]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L2851]  COND FALSE  !(!(b_s228 <= a_s228))
[L2855]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2856]              __ret_0_ := c_s228;
[L3352]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L3353]  COND FALSE  !(revert)
[L3356]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][from_s717];
[L3357]              _balances_TristersLightCoin[this][from_s717] := __var_14;
[L3358]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][from_s717];
[L3359]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L2827]              c_s201 := (a_s201 + b_s201) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2828]  COND FALSE  !(!(c_s201 >= a_s201))
[L2832]              __ret_0_ := c_s201;
[L3359]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L3360]  COND FALSE  !(revert)
[L3363]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][to_s717];
[L3364]              _balances_TristersLightCoin[this][to_s717] := __var_15;
[L3365]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][to_s717];
[L3366]              assert { :EventEmitted "Transfer_TristersLightCoin" } true;
[L3042]  RET         call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _operator_s476, __var_8);
[L3043]  COND FALSE  !(revert)
[L3086]  RET         call TristersLightCoin_TristersLightCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3087]  COND FALSE  !(revert)
[L664]   RET         call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L665]               assume !revert && gas >= 0;
[L4884]  RET         call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L4885]              assume !revert && gas >= 0;
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND FALSE  !(choice == 23)
[L4733]  COND TRUE   choice == 22
[L4734]              gas := gas - 21000;
[L4735]  COND TRUE   gas >= 0
[L4736]              assume amount_s585 >= 0 && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4737]              assume msgvalue_MSG == 0;
[L4738]  CALL        call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s585 && amount_s585 <= _balances_TristersLightCoin[this][msgsender_MSG]) && amount_s585 >= 0) && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][to_s585] >= 0) && _balances_TristersLightCoin[this][to_s585] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][msgsender_MSG] >= 0) && _balances_TristersLightCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TristersLightCoin0 := true;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]                 revert := revert_hold;
[L841]               havoc __exception;
[L842]               revert := false;
[L843]   COND TRUE   __exception
[L844]               __tmp__Balance := Balance;
[L845]               __tmp__DType := DType;
[L846]               __tmp__Alloc := Alloc;
[L847]               __tmp__balance_ADDR := balance_ADDR;
[L848]               __tmp__M_Ref_int := M_Ref_int;
[L849]               __tmp__sum__balances0 := sum__balances0;
[L850]               __tmp__alloc__allowances_TristersLightCoin_lvl0 := alloc__allowances_TristersLightCoin_lvl0;
[L851]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L852]               __tmp__sum__allowances1 := sum__allowances1;
[L853]               __tmp__Length := Length;
[L854]               __tmp__now := now;
[L855]               __tmp___owner_Ownable := _owner_Ownable;
[L856]               __tmp__name_TristersLightCoin := name_TristersLightCoin;
[L857]               __tmp__symbol_TristersLightCoin := symbol_TristersLightCoin;
[L858]               __tmp__decimals_TristersLightCoin := decimals_TristersLightCoin;
[L859]               __tmp__totalSupply_TristersLightCoin := totalSupply_TristersLightCoin;
[L860]               __tmp__FounderAllocation_TristersLightCoin := FounderAllocation_TristersLightCoin;
[L861]               __tmp__FounderLockupAmount_TristersLightCoin := FounderLockupAmount_TristersLightCoin;
[L862]               __tmp__FounderLockupCliff_TristersLightCoin := FounderLockupCliff_TristersLightCoin;
[L863]               __tmp__FounderReleaseInterval_TristersLightCoin := FounderReleaseInterval_TristersLightCoin;
[L864]               __tmp__FounderReleaseAmount_TristersLightCoin := FounderReleaseAmount_TristersLightCoin;
[L865]               __tmp__founder_TristersLightCoin := founder_TristersLightCoin;
[L866]               __tmp__founderLockupStartTime_TristersLightCoin := founderLockupStartTime_TristersLightCoin;
[L867]               __tmp__founderReleasedAmount_TristersLightCoin := founderReleasedAmount_TristersLightCoin;
[L868]               __tmp___balances_TristersLightCoin := _balances_TristersLightCoin;
[L869]               __tmp___allowances_TristersLightCoin := _allowances_TristersLightCoin;
[L870]   CALL        call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L3214]  CALL        call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3310]              __var_12 := null;
[L3311]  COND TRUE   !(from_s717 != null)
[L3312]              revert := true;
[L3214]  RET         call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3215]  COND TRUE   revert
[L870]   RET         call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L871]               assume revert || gas < 0;
[L4738]  RET         call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

Loop:
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND FALSE  !(choice == 23)
[L4733]  COND TRUE   choice == 22
[L4734]              gas := gas - 21000;
[L4735]  COND TRUE   gas >= 0
[L4736]              assume amount_s585 >= 0 && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4737]              assume msgvalue_MSG == 0;
[L4738]  CALL        call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s585 && amount_s585 <= _balances_TristersLightCoin[this][msgsender_MSG]) && amount_s585 >= 0) && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][to_s585] >= 0) && _balances_TristersLightCoin[this][to_s585] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][msgsender_MSG] >= 0) && _balances_TristersLightCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TristersLightCoin0 := true;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]                 revert := revert_hold;
[L841]               havoc __exception;
[L842]               revert := false;
[L843]   COND TRUE   __exception
[L844]               __tmp__Balance := Balance;
[L845]               __tmp__DType := DType;
[L846]               __tmp__Alloc := Alloc;
[L847]               __tmp__balance_ADDR := balance_ADDR;
[L848]               __tmp__M_Ref_int := M_Ref_int;
[L849]               __tmp__sum__balances0 := sum__balances0;
[L850]               __tmp__alloc__allowances_TristersLightCoin_lvl0 := alloc__allowances_TristersLightCoin_lvl0;
[L851]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L852]               __tmp__sum__allowances1 := sum__allowances1;
[L853]               __tmp__Length := Length;
[L854]               __tmp__now := now;
[L855]               __tmp___owner_Ownable := _owner_Ownable;
[L856]               __tmp__name_TristersLightCoin := name_TristersLightCoin;
[L857]               __tmp__symbol_TristersLightCoin := symbol_TristersLightCoin;
[L858]               __tmp__decimals_TristersLightCoin := decimals_TristersLightCoin;
[L859]               __tmp__totalSupply_TristersLightCoin := totalSupply_TristersLightCoin;
[L860]               __tmp__FounderAllocation_TristersLightCoin := FounderAllocation_TristersLightCoin;
[L861]               __tmp__FounderLockupAmount_TristersLightCoin := FounderLockupAmount_TristersLightCoin;
[L862]               __tmp__FounderLockupCliff_TristersLightCoin := FounderLockupCliff_TristersLightCoin;
[L863]               __tmp__FounderReleaseInterval_TristersLightCoin := FounderReleaseInterval_TristersLightCoin;
[L864]               __tmp__FounderReleaseAmount_TristersLightCoin := FounderReleaseAmount_TristersLightCoin;
[L865]               __tmp__founder_TristersLightCoin := founder_TristersLightCoin;
[L866]               __tmp__founderLockupStartTime_TristersLightCoin := founderLockupStartTime_TristersLightCoin;
[L867]               __tmp__founderReleasedAmount_TristersLightCoin := founderReleasedAmount_TristersLightCoin;
[L868]               __tmp___balances_TristersLightCoin := _balances_TristersLightCoin;
[L869]               __tmp___allowances_TristersLightCoin := _allowances_TristersLightCoin;
[L870]   CALL        call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L3214]  CALL        call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3310]              __var_12 := null;
[L3311]  COND TRUE   !(from_s717 != null)
[L3312]              revert := true;
[L3214]  RET         call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3215]  COND TRUE   revert
[L870]   RET         call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L871]               assume revert || gas < 0;
[L4738]  RET         call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

[2020-11-25 06:38:58,286 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:38:58,286 INFO  L82        PathProgramCache]: Analyzing trace with hash -1212922456, now seen corresponding path program 1 times
[2020-11-25 06:38:58,287 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:38:58,308 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:38:58,383 INFO  L134       CoverageAnalysis]: Checked inductivity of 5 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-25 06:38:58,383 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:38:58,383 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 06:38:58,384 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:38:58,384 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 06:38:58,384 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 06:38:58,384 INFO  L87              Difference]: Start difference. First operand 3463 states and 3724 transitions. cyclomatic complexity: 263 Second operand 6 states.
[2020-11-25 06:38:58,477 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:38:58,477 INFO  L93              Difference]: Finished difference Result 3483 states and 3748 transitions.
[2020-11-25 06:38:58,477 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-25 06:38:58,478 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3483 states and 3748 transitions.
[2020-11-25 06:38:58,484 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:38:58,492 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3483 states to 3467 states and 3732 transitions.
[2020-11-25 06:38:58,492 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1112
[2020-11-25 06:38:58,493 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1112
[2020-11-25 06:38:58,493 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3467 states and 3732 transitions.
[2020-11-25 06:38:58,495 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:38:58,495 INFO  L728         BuchiCegarLoop]: Abstraction has 3467 states and 3732 transitions.
[2020-11-25 06:38:58,499 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3467 states and 3732 transitions.
[2020-11-25 06:38:58,520 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3467 to 3467.
[2020-11-25 06:38:58,520 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3467 states.
[2020-11-25 06:38:58,524 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3467 states to 3467 states and 3732 transitions.
[2020-11-25 06:38:58,524 INFO  L751         BuchiCegarLoop]: Abstraction has 3467 states and 3732 transitions.
[2020-11-25 06:38:58,524 INFO  L631         BuchiCegarLoop]: Abstraction has 3467 states and 3732 transitions.
[2020-11-25 06:38:58,524 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 06:38:58,524 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3467 states and 3732 transitions.
[2020-11-25 06:38:58,528 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:38:58,528 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:38:58,528 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:38:58,530 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:38:58,530 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_TristersLightCoin0 := false;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]     CALL        call main();
[L4878]              assume null == 0;
[L4879]  CALL        call this := FreshRefGenerator__success();
[L2578]              havoc newRef;
[L2579]              assume Alloc[newRef] == false;
[L2580]              Alloc[newRef] := true;
[L2581]              assume newRef != null;
[L4879]  RET         call this := FreshRefGenerator__success();
[L4880]              assume now >= 0;
[L4881]              assume DType[this] == TristersLightCoin;
[L4882]              assume msgvalue_MSG == 0;
[L4883]              gas := gas - 53000;
[L4884]  CALL        call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L632]               havoc __exception;
[L633]               revert := false;
[L634]   COND FALSE  !(__exception)
[L664]   CALL        call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3078]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2701]              assume msgsender_MSG != null;
[L2702]              Balance[this] := 0;
[L2703]              _owner_Ownable[this] := null;
[L2705]              _owner_Ownable[this] := msgsender_MSG;
[L2706]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L2719]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2720]  COND FALSE  !(revert)
[L3078]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3079]  COND FALSE  !(revert)
[L3082]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2682]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2667]              assume msgsender_MSG != null;
[L2668]              Balance[this] := 0;
[L2682]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L3082]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3083]  COND FALSE  !(revert)
[L3086]  CALL        call TristersLightCoin_TristersLightCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3001]              assume msgsender_MSG != null;
[L3002]              Balance[this] := 0;
[L3003]              name_TristersLightCoin[this] := -536466818;
[L3004]              symbol_TristersLightCoin[this] := 685674239;
[L3005]              decimals_TristersLightCoin[this] := 18;
[L3006]              totalSupply_TristersLightCoin[this] := nonlinearMul(8000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3007]              FounderAllocation_TristersLightCoin[this] := nonlinearMul(500 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3008]              FounderLockupAmount_TristersLightCoin[this] := nonlinearMul(300 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3009]              FounderLockupCliff_TristersLightCoin[this] := 180;
[L3010]              FounderReleaseInterval_TristersLightCoin[this] := 30;
[L3011]              FounderReleaseAmount_TristersLightCoin[this] := nonlinearMul(50 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3012]              __var_9 := null;
[L3013]              founder_TristersLightCoin[this] := null;
[L3014]              founderLockupStartTime_TristersLightCoin[this] := 0;
[L3015]              founderReleasedAmount_TristersLightCoin[this] := 0;
[L3016]              _balances_TristersLightCoin[this] := zeroRefintArr();
[L3017]              sum__balances0[this] := 0;
[L3018]              _allowances_TristersLightCoin[this] := zeroRefRefintArr();
[L3019]              sum__allowances1[this] := 0;
[L3021]              __var_4 := null;
[L3022]  COND FALSE  !(!(_founder_s476 != null))
[L3026]              __var_5 := null;
[L3027]  COND FALSE  !(!(_operator_s476 != null))
[L3031]              founder_TristersLightCoin[this] := _founder_s476;
[L3032]              founderLockupStartTime_TristersLightCoin[this] := now;
[L3033]              __var_6 := this;
[L3034]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][this];
[L3035]              _balances_TristersLightCoin[this][this] := totalSupply_TristersLightCoin[this];
[L3036]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][this];
[L3037]              __var_7 := this;
[L3038]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, FounderAllocation_TristersLightCoin[this], FounderLockupAmount_TristersLightCoin[this], -1195062810);
[L2851]  COND FALSE  !(!(b_s228 <= a_s228))
[L2855]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2856]              __ret_0_ := c_s228;
[L3038]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, FounderAllocation_TristersLightCoin[this], FounderLockupAmount_TristersLightCoin[this], -1195062810);
[L3039]  COND FALSE  !(revert)
[L3042]  CALL        call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _operator_s476, __var_8);
[L3342]              __var_12 := null;
[L3343]  COND FALSE  !(!(from_s717 != null))
[L3347]              __var_13 := null;
[L3348]  COND FALSE  !(!(to_s717 != null))
[L3352]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L2851]  COND FALSE  !(!(b_s228 <= a_s228))
[L2855]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2856]              __ret_0_ := c_s228;
[L3352]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L3353]  COND FALSE  !(revert)
[L3356]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][from_s717];
[L3357]              _balances_TristersLightCoin[this][from_s717] := __var_14;
[L3358]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][from_s717];
[L3359]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L2827]              c_s201 := (a_s201 + b_s201) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2828]  COND FALSE  !(!(c_s201 >= a_s201))
[L2832]              __ret_0_ := c_s201;
[L3359]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L3360]  COND FALSE  !(revert)
[L3363]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][to_s717];
[L3364]              _balances_TristersLightCoin[this][to_s717] := __var_15;
[L3365]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][to_s717];
[L3366]              assert { :EventEmitted "Transfer_TristersLightCoin" } true;
[L3042]  RET         call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _operator_s476, __var_8);
[L3043]  COND FALSE  !(revert)
[L3086]  RET         call TristersLightCoin_TristersLightCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3087]  COND FALSE  !(revert)
[L664]   RET         call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L665]               assume !revert && gas >= 0;
[L4884]  RET         call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L4885]              assume !revert && gas >= 0;
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND FALSE  !(choice == 23)
[L4733]  COND TRUE   choice == 22
[L4734]              gas := gas - 21000;
[L4735]  COND TRUE   gas >= 0
[L4736]              assume amount_s585 >= 0 && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4737]              assume msgvalue_MSG == 0;
[L4738]  CALL        call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s585 && amount_s585 <= _balances_TristersLightCoin[this][msgsender_MSG]) && amount_s585 >= 0) && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][to_s585] >= 0) && _balances_TristersLightCoin[this][to_s585] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][msgsender_MSG] >= 0) && _balances_TristersLightCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TristersLightCoin0 := true;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]                 revert := revert_hold;
[L841]               havoc __exception;
[L842]               revert := false;
[L843]   COND TRUE   __exception
[L844]               __tmp__Balance := Balance;
[L845]               __tmp__DType := DType;
[L846]               __tmp__Alloc := Alloc;
[L847]               __tmp__balance_ADDR := balance_ADDR;
[L848]               __tmp__M_Ref_int := M_Ref_int;
[L849]               __tmp__sum__balances0 := sum__balances0;
[L850]               __tmp__alloc__allowances_TristersLightCoin_lvl0 := alloc__allowances_TristersLightCoin_lvl0;
[L851]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L852]               __tmp__sum__allowances1 := sum__allowances1;
[L853]               __tmp__Length := Length;
[L854]               __tmp__now := now;
[L855]               __tmp___owner_Ownable := _owner_Ownable;
[L856]               __tmp__name_TristersLightCoin := name_TristersLightCoin;
[L857]               __tmp__symbol_TristersLightCoin := symbol_TristersLightCoin;
[L858]               __tmp__decimals_TristersLightCoin := decimals_TristersLightCoin;
[L859]               __tmp__totalSupply_TristersLightCoin := totalSupply_TristersLightCoin;
[L860]               __tmp__FounderAllocation_TristersLightCoin := FounderAllocation_TristersLightCoin;
[L861]               __tmp__FounderLockupAmount_TristersLightCoin := FounderLockupAmount_TristersLightCoin;
[L862]               __tmp__FounderLockupCliff_TristersLightCoin := FounderLockupCliff_TristersLightCoin;
[L863]               __tmp__FounderReleaseInterval_TristersLightCoin := FounderReleaseInterval_TristersLightCoin;
[L864]               __tmp__FounderReleaseAmount_TristersLightCoin := FounderReleaseAmount_TristersLightCoin;
[L865]               __tmp__founder_TristersLightCoin := founder_TristersLightCoin;
[L866]               __tmp__founderLockupStartTime_TristersLightCoin := founderLockupStartTime_TristersLightCoin;
[L867]               __tmp__founderReleasedAmount_TristersLightCoin := founderReleasedAmount_TristersLightCoin;
[L868]               __tmp___balances_TristersLightCoin := _balances_TristersLightCoin;
[L869]               __tmp___allowances_TristersLightCoin := _allowances_TristersLightCoin;
[L870]   CALL        call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L3214]  CALL        call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3310]              __var_12 := null;
[L3311]  COND FALSE  !(!(from_s717 != null))
[L3315]              __var_13 := null;
[L3316]  COND TRUE   !(to_s717 != null)
[L3317]              revert := true;
[L3214]  RET         call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3215]  COND TRUE   revert
[L870]   RET         call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L871]               assume revert || gas < 0;
[L4738]  RET         call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

Loop:
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND FALSE  !(choice == 23)
[L4733]  COND TRUE   choice == 22
[L4734]              gas := gas - 21000;
[L4735]  COND TRUE   gas >= 0
[L4736]              assume amount_s585 >= 0 && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4737]              assume msgvalue_MSG == 0;
[L4738]  CALL        call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s585 && amount_s585 <= _balances_TristersLightCoin[this][msgsender_MSG]) && amount_s585 >= 0) && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][to_s585] >= 0) && _balances_TristersLightCoin[this][to_s585] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][msgsender_MSG] >= 0) && _balances_TristersLightCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TristersLightCoin0 := true;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]                 revert := revert_hold;
[L841]               havoc __exception;
[L842]               revert := false;
[L843]   COND TRUE   __exception
[L844]               __tmp__Balance := Balance;
[L845]               __tmp__DType := DType;
[L846]               __tmp__Alloc := Alloc;
[L847]               __tmp__balance_ADDR := balance_ADDR;
[L848]               __tmp__M_Ref_int := M_Ref_int;
[L849]               __tmp__sum__balances0 := sum__balances0;
[L850]               __tmp__alloc__allowances_TristersLightCoin_lvl0 := alloc__allowances_TristersLightCoin_lvl0;
[L851]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L852]               __tmp__sum__allowances1 := sum__allowances1;
[L853]               __tmp__Length := Length;
[L854]               __tmp__now := now;
[L855]               __tmp___owner_Ownable := _owner_Ownable;
[L856]               __tmp__name_TristersLightCoin := name_TristersLightCoin;
[L857]               __tmp__symbol_TristersLightCoin := symbol_TristersLightCoin;
[L858]               __tmp__decimals_TristersLightCoin := decimals_TristersLightCoin;
[L859]               __tmp__totalSupply_TristersLightCoin := totalSupply_TristersLightCoin;
[L860]               __tmp__FounderAllocation_TristersLightCoin := FounderAllocation_TristersLightCoin;
[L861]               __tmp__FounderLockupAmount_TristersLightCoin := FounderLockupAmount_TristersLightCoin;
[L862]               __tmp__FounderLockupCliff_TristersLightCoin := FounderLockupCliff_TristersLightCoin;
[L863]               __tmp__FounderReleaseInterval_TristersLightCoin := FounderReleaseInterval_TristersLightCoin;
[L864]               __tmp__FounderReleaseAmount_TristersLightCoin := FounderReleaseAmount_TristersLightCoin;
[L865]               __tmp__founder_TristersLightCoin := founder_TristersLightCoin;
[L866]               __tmp__founderLockupStartTime_TristersLightCoin := founderLockupStartTime_TristersLightCoin;
[L867]               __tmp__founderReleasedAmount_TristersLightCoin := founderReleasedAmount_TristersLightCoin;
[L868]               __tmp___balances_TristersLightCoin := _balances_TristersLightCoin;
[L869]               __tmp___allowances_TristersLightCoin := _allowances_TristersLightCoin;
[L870]   CALL        call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L3214]  CALL        call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3310]              __var_12 := null;
[L3311]  COND FALSE  !(!(from_s717 != null))
[L3315]              __var_13 := null;
[L3316]  COND TRUE   !(to_s717 != null)
[L3317]              revert := true;
[L3214]  RET         call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3215]  COND TRUE   revert
[L870]   RET         call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L871]               assume revert || gas < 0;
[L4738]  RET         call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

[2020-11-25 06:38:58,533 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:38:58,533 INFO  L82        PathProgramCache]: Analyzing trace with hash 200465883, now seen corresponding path program 1 times
[2020-11-25 06:38:58,534 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:38:58,545 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:38:58,582 INFO  L134       CoverageAnalysis]: Checked inductivity of 5 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-25 06:38:58,582 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:38:58,582 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 06:38:58,582 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:38:58,583 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 06:38:58,583 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 06:38:58,583 INFO  L87              Difference]: Start difference. First operand 3467 states and 3732 transitions. cyclomatic complexity: 267 Second operand 7 states.
[2020-11-25 06:38:58,642 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:38:58,642 INFO  L93              Difference]: Finished difference Result 3573 states and 3851 transitions.
[2020-11-25 06:38:58,643 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 06:38:58,643 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3573 states and 3851 transitions.
[2020-11-25 06:38:58,650 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:38:58,659 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3573 states to 3565 states and 3843 transitions.
[2020-11-25 06:38:58,659 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1129
[2020-11-25 06:38:58,659 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1129
[2020-11-25 06:38:58,659 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3565 states and 3843 transitions.
[2020-11-25 06:38:58,662 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:38:58,662 INFO  L728         BuchiCegarLoop]: Abstraction has 3565 states and 3843 transitions.
[2020-11-25 06:38:58,665 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3565 states and 3843 transitions.
[2020-11-25 06:38:58,689 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3565 to 3552.
[2020-11-25 06:38:58,689 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3552 states.
[2020-11-25 06:38:58,693 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3552 states to 3552 states and 3828 transitions.
[2020-11-25 06:38:58,693 INFO  L751         BuchiCegarLoop]: Abstraction has 3552 states and 3828 transitions.
[2020-11-25 06:38:58,693 INFO  L631         BuchiCegarLoop]: Abstraction has 3552 states and 3828 transitions.
[2020-11-25 06:38:58,693 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 06:38:58,693 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3552 states and 3828 transitions.
[2020-11-25 06:38:58,697 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:38:58,698 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:38:58,698 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:38:58,700 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:38:58,700 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_TristersLightCoin0 := false;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]     CALL        call main();
[L4878]              assume null == 0;
[L4879]  CALL        call this := FreshRefGenerator__success();
[L2578]              havoc newRef;
[L2579]              assume Alloc[newRef] == false;
[L2580]              Alloc[newRef] := true;
[L2581]              assume newRef != null;
[L4879]  RET         call this := FreshRefGenerator__success();
[L4880]              assume now >= 0;
[L4881]              assume DType[this] == TristersLightCoin;
[L4882]              assume msgvalue_MSG == 0;
[L4883]              gas := gas - 53000;
[L4884]  CALL        call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L632]               havoc __exception;
[L633]               revert := false;
[L634]   COND FALSE  !(__exception)
[L664]   CALL        call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3078]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2701]              assume msgsender_MSG != null;
[L2702]              Balance[this] := 0;
[L2703]              _owner_Ownable[this] := null;
[L2705]              _owner_Ownable[this] := msgsender_MSG;
[L2706]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L2719]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2720]  COND FALSE  !(revert)
[L3078]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3079]  COND FALSE  !(revert)
[L3082]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2682]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2667]              assume msgsender_MSG != null;
[L2668]              Balance[this] := 0;
[L2682]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L3082]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3083]  COND FALSE  !(revert)
[L3086]  CALL        call TristersLightCoin_TristersLightCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3001]              assume msgsender_MSG != null;
[L3002]              Balance[this] := 0;
[L3003]              name_TristersLightCoin[this] := -536466818;
[L3004]              symbol_TristersLightCoin[this] := 685674239;
[L3005]              decimals_TristersLightCoin[this] := 18;
[L3006]              totalSupply_TristersLightCoin[this] := nonlinearMul(8000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3007]              FounderAllocation_TristersLightCoin[this] := nonlinearMul(500 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3008]              FounderLockupAmount_TristersLightCoin[this] := nonlinearMul(300 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3009]              FounderLockupCliff_TristersLightCoin[this] := 180;
[L3010]              FounderReleaseInterval_TristersLightCoin[this] := 30;
[L3011]              FounderReleaseAmount_TristersLightCoin[this] := nonlinearMul(50 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3012]              __var_9 := null;
[L3013]              founder_TristersLightCoin[this] := null;
[L3014]              founderLockupStartTime_TristersLightCoin[this] := 0;
[L3015]              founderReleasedAmount_TristersLightCoin[this] := 0;
[L3016]              _balances_TristersLightCoin[this] := zeroRefintArr();
[L3017]              sum__balances0[this] := 0;
[L3018]              _allowances_TristersLightCoin[this] := zeroRefRefintArr();
[L3019]              sum__allowances1[this] := 0;
[L3021]              __var_4 := null;
[L3022]  COND FALSE  !(!(_founder_s476 != null))
[L3026]              __var_5 := null;
[L3027]  COND FALSE  !(!(_operator_s476 != null))
[L3031]              founder_TristersLightCoin[this] := _founder_s476;
[L3032]              founderLockupStartTime_TristersLightCoin[this] := now;
[L3033]              __var_6 := this;
[L3034]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][this];
[L3035]              _balances_TristersLightCoin[this][this] := totalSupply_TristersLightCoin[this];
[L3036]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][this];
[L3037]              __var_7 := this;
[L3038]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, FounderAllocation_TristersLightCoin[this], FounderLockupAmount_TristersLightCoin[this], -1195062810);
[L2851]  COND FALSE  !(!(b_s228 <= a_s228))
[L2855]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2856]              __ret_0_ := c_s228;
[L3038]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, FounderAllocation_TristersLightCoin[this], FounderLockupAmount_TristersLightCoin[this], -1195062810);
[L3039]  COND FALSE  !(revert)
[L3042]  CALL        call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _operator_s476, __var_8);
[L3342]              __var_12 := null;
[L3343]  COND FALSE  !(!(from_s717 != null))
[L3347]              __var_13 := null;
[L3348]  COND FALSE  !(!(to_s717 != null))
[L3352]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L2851]  COND FALSE  !(!(b_s228 <= a_s228))
[L2855]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2856]              __ret_0_ := c_s228;
[L3352]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L3353]  COND FALSE  !(revert)
[L3356]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][from_s717];
[L3357]              _balances_TristersLightCoin[this][from_s717] := __var_14;
[L3358]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][from_s717];
[L3359]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L2827]              c_s201 := (a_s201 + b_s201) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2828]  COND FALSE  !(!(c_s201 >= a_s201))
[L2832]              __ret_0_ := c_s201;
[L3359]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L3360]  COND FALSE  !(revert)
[L3363]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][to_s717];
[L3364]              _balances_TristersLightCoin[this][to_s717] := __var_15;
[L3365]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][to_s717];
[L3366]              assert { :EventEmitted "Transfer_TristersLightCoin" } true;
[L3042]  RET         call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _operator_s476, __var_8);
[L3043]  COND FALSE  !(revert)
[L3086]  RET         call TristersLightCoin_TristersLightCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3087]  COND FALSE  !(revert)
[L664]   RET         call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L665]               assume !revert && gas >= 0;
[L4884]  RET         call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L4885]              assume !revert && gas >= 0;
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND FALSE  !(choice == 23)
[L4733]  COND TRUE   choice == 22
[L4734]              gas := gas - 21000;
[L4735]  COND TRUE   gas >= 0
[L4736]              assume amount_s585 >= 0 && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4737]              assume msgvalue_MSG == 0;
[L4738]  CALL        call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s585 && amount_s585 <= _balances_TristersLightCoin[this][msgsender_MSG]) && amount_s585 >= 0) && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][to_s585] >= 0) && _balances_TristersLightCoin[this][to_s585] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][msgsender_MSG] >= 0) && _balances_TristersLightCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TristersLightCoin0 := true;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]                 revert := revert_hold;
[L841]               havoc __exception;
[L842]               revert := false;
[L843]   COND FALSE  !(__exception)
[L873]   CALL        call __ret_0_ := transfer~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L3224]  CALL        call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3342]              __var_12 := null;
[L3343]  COND FALSE  !(!(from_s717 != null))
[L3347]              __var_13 := null;
[L3348]  COND FALSE  !(!(to_s717 != null))
[L3352]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L2851]  COND FALSE  !(!(b_s228 <= a_s228))
[L2855]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2856]              __ret_0_ := c_s228;
[L3352]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L3353]  COND FALSE  !(revert)
[L3356]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][from_s717];
[L3357]              _balances_TristersLightCoin[this][from_s717] := __var_14;
[L3358]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][from_s717];
[L3359]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L2827]              c_s201 := (a_s201 + b_s201) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2828]  COND FALSE  !(!(c_s201 >= a_s201))
[L2832]              __ret_0_ := c_s201;
[L3359]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L3360]  COND FALSE  !(revert)
[L3363]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][to_s717];
[L3364]              _balances_TristersLightCoin[this][to_s717] := __var_15;
[L3365]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][to_s717];
[L3366]              assert { :EventEmitted "Transfer_TristersLightCoin" } true;
[L3224]  RET         call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3225]  COND FALSE  !(revert)
[L3228]              __ret_0_ := true;
[L873]   RET         call __ret_0_ := transfer~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L874]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == true && totalSupply_TristersLightCoin[this] == old(totalSupply_TristersLightCoin[this])) && _balances_TristersLightCoin[this] == old(_balances_TristersLightCoin[this])) && _allowances_TristersLightCoin[this] == old(_allowances_TristersLightCoin[this])) && founder_TristersLightCoin[this] == old(founder_TristersLightCoin[this])) && founderLockupStartTime_TristersLightCoin[this] == old(founderLockupStartTime_TristersLightCoin[this])) && founderReleasedAmount_TristersLightCoin[this] == old(founderReleasedAmount_TristersLightCoin[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L4738]  RET         call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

Loop:
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND FALSE  !(choice == 23)
[L4733]  COND TRUE   choice == 22
[L4734]              gas := gas - 21000;
[L4735]  COND TRUE   gas >= 0
[L4736]              assume amount_s585 >= 0 && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4737]              assume msgvalue_MSG == 0;
[L4738]  CALL        call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s585 && amount_s585 <= _balances_TristersLightCoin[this][msgsender_MSG]) && amount_s585 >= 0) && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][to_s585] >= 0) && _balances_TristersLightCoin[this][to_s585] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][msgsender_MSG] >= 0) && _balances_TristersLightCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TristersLightCoin0 := true;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]                 revert := revert_hold;
[L841]               havoc __exception;
[L842]               revert := false;
[L843]   COND FALSE  !(__exception)
[L873]   CALL        call __ret_0_ := transfer~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L3224]  CALL        call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3342]              __var_12 := null;
[L3343]  COND FALSE  !(!(from_s717 != null))
[L3347]              __var_13 := null;
[L3348]  COND FALSE  !(!(to_s717 != null))
[L3352]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L2851]  COND FALSE  !(!(b_s228 <= a_s228))
[L2855]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2856]              __ret_0_ := c_s228;
[L3352]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L3353]  COND FALSE  !(revert)
[L3356]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][from_s717];
[L3357]              _balances_TristersLightCoin[this][from_s717] := __var_14;
[L3358]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][from_s717];
[L3359]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L2827]              c_s201 := (a_s201 + b_s201) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2828]  COND FALSE  !(!(c_s201 >= a_s201))
[L2832]              __ret_0_ := c_s201;
[L3359]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L3360]  COND FALSE  !(revert)
[L3363]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][to_s717];
[L3364]              _balances_TristersLightCoin[this][to_s717] := __var_15;
[L3365]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][to_s717];
[L3366]              assert { :EventEmitted "Transfer_TristersLightCoin" } true;
[L3224]  RET         call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3225]  COND FALSE  !(revert)
[L3228]              __ret_0_ := true;
[L873]   RET         call __ret_0_ := transfer~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L874]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == true && totalSupply_TristersLightCoin[this] == old(totalSupply_TristersLightCoin[this])) && _balances_TristersLightCoin[this] == old(_balances_TristersLightCoin[this])) && _allowances_TristersLightCoin[this] == old(_allowances_TristersLightCoin[this])) && founder_TristersLightCoin[this] == old(founder_TristersLightCoin[this])) && founderLockupStartTime_TristersLightCoin[this] == old(founderLockupStartTime_TristersLightCoin[this])) && founderReleasedAmount_TristersLightCoin[this] == old(founderReleasedAmount_TristersLightCoin[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L4738]  RET         call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

[2020-11-25 06:38:58,703 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:38:58,703 INFO  L82        PathProgramCache]: Analyzing trace with hash 241868303, now seen corresponding path program 1 times
[2020-11-25 06:38:58,704 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:38:58,805 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:38:59,969 WARN  L188               SmtUtils]: Spent 103.00 ms on a formula simplification. DAG size of input: 101 DAG size of output: 35
[2020-11-25 06:39:00,149 WARN  L188               SmtUtils]: Spent 105.00 ms on a formula simplification. DAG size of input: 103 DAG size of output: 37
[2020-11-25 06:39:00,575 INFO  L134       CoverageAnalysis]: Checked inductivity of 5 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-25 06:39:00,576 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:39:00,576 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [29] imperfect sequences [] total 29
[2020-11-25 06:39:00,576 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:39:00,576 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 30 interpolants.
[2020-11-25 06:39:00,576 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=86, Invalid=784, Unknown=0, NotChecked=0, Total=870
[2020-11-25 06:39:00,576 INFO  L87              Difference]: Start difference. First operand 3552 states and 3828 transitions. cyclomatic complexity: 278 Second operand 30 states.
[2020-11-25 06:39:07,485 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:39:07,485 INFO  L93              Difference]: Finished difference Result 3628 states and 3929 transitions.
[2020-11-25 06:39:07,485 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 29 states. 
[2020-11-25 06:39:07,485 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3628 states and 3929 transitions.
[2020-11-25 06:39:07,494 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 06:39:07,506 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3628 states to 3628 states and 3929 transitions.
[2020-11-25 06:39:07,506 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1158
[2020-11-25 06:39:07,507 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1158
[2020-11-25 06:39:07,507 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3628 states and 3929 transitions.
[2020-11-25 06:39:07,510 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:39:07,510 INFO  L728         BuchiCegarLoop]: Abstraction has 3628 states and 3929 transitions.
[2020-11-25 06:39:07,514 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3628 states and 3929 transitions.
[2020-11-25 06:39:07,542 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3628 to 3613.
[2020-11-25 06:39:07,542 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3613 states.
[2020-11-25 06:39:07,546 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3613 states to 3613 states and 3898 transitions.
[2020-11-25 06:39:07,546 INFO  L751         BuchiCegarLoop]: Abstraction has 3613 states and 3898 transitions.
[2020-11-25 06:39:07,546 INFO  L631         BuchiCegarLoop]: Abstraction has 3613 states and 3898 transitions.
[2020-11-25 06:39:07,546 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 06:39:07,546 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3613 states and 3898 transitions.
[2020-11-25 06:39:07,552 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:39:07,552 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:39:07,552 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:39:07,555 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:39:07,555 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_TristersLightCoin0 := false;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]     CALL        call main();
[L4878]              assume null == 0;
[L4879]  CALL        call this := FreshRefGenerator__success();
[L2578]              havoc newRef;
[L2579]              assume Alloc[newRef] == false;
[L2580]              Alloc[newRef] := true;
[L2581]              assume newRef != null;
[L4879]  RET         call this := FreshRefGenerator__success();
[L4880]              assume now >= 0;
[L4881]              assume DType[this] == TristersLightCoin;
[L4882]              assume msgvalue_MSG == 0;
[L4883]              gas := gas - 53000;
[L4884]  CALL        call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L632]               havoc __exception;
[L633]               revert := false;
[L634]   COND FALSE  !(__exception)
[L664]   CALL        call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3078]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2701]              assume msgsender_MSG != null;
[L2702]              Balance[this] := 0;
[L2703]              _owner_Ownable[this] := null;
[L2705]              _owner_Ownable[this] := msgsender_MSG;
[L2706]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L2719]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2720]  COND FALSE  !(revert)
[L3078]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3079]  COND FALSE  !(revert)
[L3082]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2682]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2667]              assume msgsender_MSG != null;
[L2668]              Balance[this] := 0;
[L2682]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L3082]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3083]  COND FALSE  !(revert)
[L3086]  CALL        call TristersLightCoin_TristersLightCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3001]              assume msgsender_MSG != null;
[L3002]              Balance[this] := 0;
[L3003]              name_TristersLightCoin[this] := -536466818;
[L3004]              symbol_TristersLightCoin[this] := 685674239;
[L3005]              decimals_TristersLightCoin[this] := 18;
[L3006]              totalSupply_TristersLightCoin[this] := nonlinearMul(8000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3007]              FounderAllocation_TristersLightCoin[this] := nonlinearMul(500 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3008]              FounderLockupAmount_TristersLightCoin[this] := nonlinearMul(300 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3009]              FounderLockupCliff_TristersLightCoin[this] := 180;
[L3010]              FounderReleaseInterval_TristersLightCoin[this] := 30;
[L3011]              FounderReleaseAmount_TristersLightCoin[this] := nonlinearMul(50 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3012]              __var_9 := null;
[L3013]              founder_TristersLightCoin[this] := null;
[L3014]              founderLockupStartTime_TristersLightCoin[this] := 0;
[L3015]              founderReleasedAmount_TristersLightCoin[this] := 0;
[L3016]              _balances_TristersLightCoin[this] := zeroRefintArr();
[L3017]              sum__balances0[this] := 0;
[L3018]              _allowances_TristersLightCoin[this] := zeroRefRefintArr();
[L3019]              sum__allowances1[this] := 0;
[L3021]              __var_4 := null;
[L3022]  COND FALSE  !(!(_founder_s476 != null))
[L3026]              __var_5 := null;
[L3027]  COND FALSE  !(!(_operator_s476 != null))
[L3031]              founder_TristersLightCoin[this] := _founder_s476;
[L3032]              founderLockupStartTime_TristersLightCoin[this] := now;
[L3033]              __var_6 := this;
[L3034]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][this];
[L3035]              _balances_TristersLightCoin[this][this] := totalSupply_TristersLightCoin[this];
[L3036]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][this];
[L3037]              __var_7 := this;
[L3038]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, FounderAllocation_TristersLightCoin[this], FounderLockupAmount_TristersLightCoin[this], -1195062810);
[L2851]  COND FALSE  !(!(b_s228 <= a_s228))
[L2855]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2856]              __ret_0_ := c_s228;
[L3038]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, FounderAllocation_TristersLightCoin[this], FounderLockupAmount_TristersLightCoin[this], -1195062810);
[L3039]  COND FALSE  !(revert)
[L3042]  CALL        call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _operator_s476, __var_8);
[L3342]              __var_12 := null;
[L3343]  COND FALSE  !(!(from_s717 != null))
[L3347]              __var_13 := null;
[L3348]  COND FALSE  !(!(to_s717 != null))
[L3352]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L2851]  COND FALSE  !(!(b_s228 <= a_s228))
[L2855]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2856]              __ret_0_ := c_s228;
[L3352]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L3353]  COND FALSE  !(revert)
[L3356]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][from_s717];
[L3357]              _balances_TristersLightCoin[this][from_s717] := __var_14;
[L3358]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][from_s717];
[L3359]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L2827]              c_s201 := (a_s201 + b_s201) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2828]  COND FALSE  !(!(c_s201 >= a_s201))
[L2832]              __ret_0_ := c_s201;
[L3359]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L3360]  COND FALSE  !(revert)
[L3363]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][to_s717];
[L3364]              _balances_TristersLightCoin[this][to_s717] := __var_15;
[L3365]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][to_s717];
[L3366]              assert { :EventEmitted "Transfer_TristersLightCoin" } true;
[L3042]  RET         call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _operator_s476, __var_8);
[L3043]  COND FALSE  !(revert)
[L3086]  RET         call TristersLightCoin_TristersLightCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3087]  COND FALSE  !(revert)
[L664]   RET         call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L665]               assume !revert && gas >= 0;
[L4884]  RET         call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L4885]              assume !revert && gas >= 0;
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND FALSE  !(choice == 23)
[L4733]  COND TRUE   choice == 22
[L4734]              gas := gas - 21000;
[L4735]  COND TRUE   gas >= 0
[L4736]              assume amount_s585 >= 0 && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4737]              assume msgvalue_MSG == 0;
[L4738]  CALL        call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s585 && amount_s585 <= _balances_TristersLightCoin[this][msgsender_MSG]) && amount_s585 >= 0) && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][to_s585] >= 0) && _balances_TristersLightCoin[this][to_s585] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][msgsender_MSG] >= 0) && _balances_TristersLightCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TristersLightCoin0 := true;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]                 revert := revert_hold;
[L841]               havoc __exception;
[L842]               revert := false;
[L843]   COND TRUE   __exception
[L844]               __tmp__Balance := Balance;
[L845]               __tmp__DType := DType;
[L846]               __tmp__Alloc := Alloc;
[L847]               __tmp__balance_ADDR := balance_ADDR;
[L848]               __tmp__M_Ref_int := M_Ref_int;
[L849]               __tmp__sum__balances0 := sum__balances0;
[L850]               __tmp__alloc__allowances_TristersLightCoin_lvl0 := alloc__allowances_TristersLightCoin_lvl0;
[L851]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L852]               __tmp__sum__allowances1 := sum__allowances1;
[L853]               __tmp__Length := Length;
[L854]               __tmp__now := now;
[L855]               __tmp___owner_Ownable := _owner_Ownable;
[L856]               __tmp__name_TristersLightCoin := name_TristersLightCoin;
[L857]               __tmp__symbol_TristersLightCoin := symbol_TristersLightCoin;
[L858]               __tmp__decimals_TristersLightCoin := decimals_TristersLightCoin;
[L859]               __tmp__totalSupply_TristersLightCoin := totalSupply_TristersLightCoin;
[L860]               __tmp__FounderAllocation_TristersLightCoin := FounderAllocation_TristersLightCoin;
[L861]               __tmp__FounderLockupAmount_TristersLightCoin := FounderLockupAmount_TristersLightCoin;
[L862]               __tmp__FounderLockupCliff_TristersLightCoin := FounderLockupCliff_TristersLightCoin;
[L863]               __tmp__FounderReleaseInterval_TristersLightCoin := FounderReleaseInterval_TristersLightCoin;
[L864]               __tmp__FounderReleaseAmount_TristersLightCoin := FounderReleaseAmount_TristersLightCoin;
[L865]               __tmp__founder_TristersLightCoin := founder_TristersLightCoin;
[L866]               __tmp__founderLockupStartTime_TristersLightCoin := founderLockupStartTime_TristersLightCoin;
[L867]               __tmp__founderReleasedAmount_TristersLightCoin := founderReleasedAmount_TristersLightCoin;
[L868]               __tmp___balances_TristersLightCoin := _balances_TristersLightCoin;
[L869]               __tmp___allowances_TristersLightCoin := _allowances_TristersLightCoin;
[L870]   CALL        call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L3214]  CALL        call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3310]              __var_12 := null;
[L3311]  COND FALSE  !(!(from_s717 != null))
[L3315]              __var_13 := null;
[L3316]  COND FALSE  !(!(to_s717 != null))
[L3320]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L2839]  COND TRUE   !(b_s228 <= a_s228)
[L2840]              revert := true;
[L3320]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L3321]  COND TRUE   revert
[L3214]  RET         call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3215]  COND TRUE   revert
[L870]   RET         call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L871]               assume revert || gas < 0;
[L4738]  RET         call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

Loop:
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND FALSE  !(choice == 23)
[L4733]  COND TRUE   choice == 22
[L4734]              gas := gas - 21000;
[L4735]  COND TRUE   gas >= 0
[L4736]              assume amount_s585 >= 0 && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4737]              assume msgvalue_MSG == 0;
[L4738]  CALL        call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s585 && amount_s585 <= _balances_TristersLightCoin[this][msgsender_MSG]) && amount_s585 >= 0) && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][to_s585] >= 0) && _balances_TristersLightCoin[this][to_s585] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][msgsender_MSG] >= 0) && _balances_TristersLightCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TristersLightCoin0 := true;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]                 revert := revert_hold;
[L841]               havoc __exception;
[L842]               revert := false;
[L843]   COND TRUE   __exception
[L844]               __tmp__Balance := Balance;
[L845]               __tmp__DType := DType;
[L846]               __tmp__Alloc := Alloc;
[L847]               __tmp__balance_ADDR := balance_ADDR;
[L848]               __tmp__M_Ref_int := M_Ref_int;
[L849]               __tmp__sum__balances0 := sum__balances0;
[L850]               __tmp__alloc__allowances_TristersLightCoin_lvl0 := alloc__allowances_TristersLightCoin_lvl0;
[L851]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L852]               __tmp__sum__allowances1 := sum__allowances1;
[L853]               __tmp__Length := Length;
[L854]               __tmp__now := now;
[L855]               __tmp___owner_Ownable := _owner_Ownable;
[L856]               __tmp__name_TristersLightCoin := name_TristersLightCoin;
[L857]               __tmp__symbol_TristersLightCoin := symbol_TristersLightCoin;
[L858]               __tmp__decimals_TristersLightCoin := decimals_TristersLightCoin;
[L859]               __tmp__totalSupply_TristersLightCoin := totalSupply_TristersLightCoin;
[L860]               __tmp__FounderAllocation_TristersLightCoin := FounderAllocation_TristersLightCoin;
[L861]               __tmp__FounderLockupAmount_TristersLightCoin := FounderLockupAmount_TristersLightCoin;
[L862]               __tmp__FounderLockupCliff_TristersLightCoin := FounderLockupCliff_TristersLightCoin;
[L863]               __tmp__FounderReleaseInterval_TristersLightCoin := FounderReleaseInterval_TristersLightCoin;
[L864]               __tmp__FounderReleaseAmount_TristersLightCoin := FounderReleaseAmount_TristersLightCoin;
[L865]               __tmp__founder_TristersLightCoin := founder_TristersLightCoin;
[L866]               __tmp__founderLockupStartTime_TristersLightCoin := founderLockupStartTime_TristersLightCoin;
[L867]               __tmp__founderReleasedAmount_TristersLightCoin := founderReleasedAmount_TristersLightCoin;
[L868]               __tmp___balances_TristersLightCoin := _balances_TristersLightCoin;
[L869]               __tmp___allowances_TristersLightCoin := _allowances_TristersLightCoin;
[L870]   CALL        call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L3214]  CALL        call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3310]              __var_12 := null;
[L3311]  COND FALSE  !(!(from_s717 != null))
[L3315]              __var_13 := null;
[L3316]  COND FALSE  !(!(to_s717 != null))
[L3320]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L2839]  COND TRUE   !(b_s228 <= a_s228)
[L2840]              revert := true;
[L3320]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L3321]  COND TRUE   revert
[L3214]  RET         call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3215]  COND TRUE   revert
[L870]   RET         call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L871]               assume revert || gas < 0;
[L4738]  RET         call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

[2020-11-25 06:39:07,560 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:39:07,560 INFO  L82        PathProgramCache]: Analyzing trace with hash -1034334339, now seen corresponding path program 1 times
[2020-11-25 06:39:07,561 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:39:07,573 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:39:07,616 INFO  L134       CoverageAnalysis]: Checked inductivity of 5 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-25 06:39:07,617 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:39:07,617 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-25 06:39:07,617 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:39:07,617 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-25 06:39:07,617 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-25 06:39:07,617 INFO  L87              Difference]: Start difference. First operand 3613 states and 3898 transitions. cyclomatic complexity: 289 Second operand 8 states.
[2020-11-25 06:39:08,235 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:39:08,235 INFO  L93              Difference]: Finished difference Result 3783 states and 4090 transitions.
[2020-11-25 06:39:08,236 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 9 states. 
[2020-11-25 06:39:08,236 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3783 states and 4090 transitions.
[2020-11-25 06:39:08,243 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 06:39:08,251 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3783 states to 3783 states and 4090 transitions.
[2020-11-25 06:39:08,251 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1236
[2020-11-25 06:39:08,251 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1236
[2020-11-25 06:39:08,252 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3783 states and 4090 transitions.
[2020-11-25 06:39:08,254 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:39:08,254 INFO  L728         BuchiCegarLoop]: Abstraction has 3783 states and 4090 transitions.
[2020-11-25 06:39:08,257 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3783 states and 4090 transitions.
[2020-11-25 06:39:08,276 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3783 to 3675.
[2020-11-25 06:39:08,276 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3675 states.
[2020-11-25 06:39:08,279 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3675 states to 3675 states and 3961 transitions.
[2020-11-25 06:39:08,279 INFO  L751         BuchiCegarLoop]: Abstraction has 3675 states and 3961 transitions.
[2020-11-25 06:39:08,279 INFO  L631         BuchiCegarLoop]: Abstraction has 3675 states and 3961 transitions.
[2020-11-25 06:39:08,279 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 06:39:08,279 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3675 states and 3961 transitions.
[2020-11-25 06:39:08,283 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:39:08,283 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:39:08,283 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:39:08,284 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:39:08,284 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_TristersLightCoin0 := false;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]     CALL        call main();
[L4878]              assume null == 0;
[L4879]  CALL        call this := FreshRefGenerator__success();
[L2578]              havoc newRef;
[L2579]              assume Alloc[newRef] == false;
[L2580]              Alloc[newRef] := true;
[L2581]              assume newRef != null;
[L4879]  RET         call this := FreshRefGenerator__success();
[L4880]              assume now >= 0;
[L4881]              assume DType[this] == TristersLightCoin;
[L4882]              assume msgvalue_MSG == 0;
[L4883]              gas := gas - 53000;
[L4884]  CALL        call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L632]               havoc __exception;
[L633]               revert := false;
[L634]   COND FALSE  !(__exception)
[L664]   CALL        call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3078]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2701]              assume msgsender_MSG != null;
[L2702]              Balance[this] := 0;
[L2703]              _owner_Ownable[this] := null;
[L2705]              _owner_Ownable[this] := msgsender_MSG;
[L2706]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L2719]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2720]  COND FALSE  !(revert)
[L3078]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3079]  COND FALSE  !(revert)
[L3082]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2682]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2667]              assume msgsender_MSG != null;
[L2668]              Balance[this] := 0;
[L2682]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L3082]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3083]  COND FALSE  !(revert)
[L3086]  CALL        call TristersLightCoin_TristersLightCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3001]              assume msgsender_MSG != null;
[L3002]              Balance[this] := 0;
[L3003]              name_TristersLightCoin[this] := -536466818;
[L3004]              symbol_TristersLightCoin[this] := 685674239;
[L3005]              decimals_TristersLightCoin[this] := 18;
[L3006]              totalSupply_TristersLightCoin[this] := nonlinearMul(8000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3007]              FounderAllocation_TristersLightCoin[this] := nonlinearMul(500 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3008]              FounderLockupAmount_TristersLightCoin[this] := nonlinearMul(300 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3009]              FounderLockupCliff_TristersLightCoin[this] := 180;
[L3010]              FounderReleaseInterval_TristersLightCoin[this] := 30;
[L3011]              FounderReleaseAmount_TristersLightCoin[this] := nonlinearMul(50 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3012]              __var_9 := null;
[L3013]              founder_TristersLightCoin[this] := null;
[L3014]              founderLockupStartTime_TristersLightCoin[this] := 0;
[L3015]              founderReleasedAmount_TristersLightCoin[this] := 0;
[L3016]              _balances_TristersLightCoin[this] := zeroRefintArr();
[L3017]              sum__balances0[this] := 0;
[L3018]              _allowances_TristersLightCoin[this] := zeroRefRefintArr();
[L3019]              sum__allowances1[this] := 0;
[L3021]              __var_4 := null;
[L3022]  COND FALSE  !(!(_founder_s476 != null))
[L3026]              __var_5 := null;
[L3027]  COND FALSE  !(!(_operator_s476 != null))
[L3031]              founder_TristersLightCoin[this] := _founder_s476;
[L3032]              founderLockupStartTime_TristersLightCoin[this] := now;
[L3033]              __var_6 := this;
[L3034]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][this];
[L3035]              _balances_TristersLightCoin[this][this] := totalSupply_TristersLightCoin[this];
[L3036]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][this];
[L3037]              __var_7 := this;
[L3038]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, FounderAllocation_TristersLightCoin[this], FounderLockupAmount_TristersLightCoin[this], -1195062810);
[L2851]  COND FALSE  !(!(b_s228 <= a_s228))
[L2855]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2856]              __ret_0_ := c_s228;
[L3038]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, FounderAllocation_TristersLightCoin[this], FounderLockupAmount_TristersLightCoin[this], -1195062810);
[L3039]  COND FALSE  !(revert)
[L3042]  CALL        call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _operator_s476, __var_8);
[L3342]              __var_12 := null;
[L3343]  COND FALSE  !(!(from_s717 != null))
[L3347]              __var_13 := null;
[L3348]  COND FALSE  !(!(to_s717 != null))
[L3352]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L2851]  COND FALSE  !(!(b_s228 <= a_s228))
[L2855]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2856]              __ret_0_ := c_s228;
[L3352]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L3353]  COND FALSE  !(revert)
[L3356]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][from_s717];
[L3357]              _balances_TristersLightCoin[this][from_s717] := __var_14;
[L3358]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][from_s717];
[L3359]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L2827]              c_s201 := (a_s201 + b_s201) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2828]  COND FALSE  !(!(c_s201 >= a_s201))
[L2832]              __ret_0_ := c_s201;
[L3359]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L3360]  COND FALSE  !(revert)
[L3363]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][to_s717];
[L3364]              _balances_TristersLightCoin[this][to_s717] := __var_15;
[L3365]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][to_s717];
[L3366]              assert { :EventEmitted "Transfer_TristersLightCoin" } true;
[L3042]  RET         call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _operator_s476, __var_8);
[L3043]  COND FALSE  !(revert)
[L3086]  RET         call TristersLightCoin_TristersLightCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3087]  COND FALSE  !(revert)
[L664]   RET         call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L665]               assume !revert && gas >= 0;
[L4884]  RET         call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L4885]              assume !revert && gas >= 0;
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND FALSE  !(choice == 23)
[L4733]  COND TRUE   choice == 22
[L4734]              gas := gas - 21000;
[L4735]  COND TRUE   gas >= 0
[L4736]              assume amount_s585 >= 0 && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4737]              assume msgvalue_MSG == 0;
[L4738]  CALL        call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s585 && amount_s585 <= _balances_TristersLightCoin[this][msgsender_MSG]) && amount_s585 >= 0) && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][to_s585] >= 0) && _balances_TristersLightCoin[this][to_s585] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][msgsender_MSG] >= 0) && _balances_TristersLightCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TristersLightCoin0 := true;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]                 revert := revert_hold;
[L841]               havoc __exception;
[L842]               revert := false;
[L843]   COND TRUE   __exception
[L844]               __tmp__Balance := Balance;
[L845]               __tmp__DType := DType;
[L846]               __tmp__Alloc := Alloc;
[L847]               __tmp__balance_ADDR := balance_ADDR;
[L848]               __tmp__M_Ref_int := M_Ref_int;
[L849]               __tmp__sum__balances0 := sum__balances0;
[L850]               __tmp__alloc__allowances_TristersLightCoin_lvl0 := alloc__allowances_TristersLightCoin_lvl0;
[L851]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L852]               __tmp__sum__allowances1 := sum__allowances1;
[L853]               __tmp__Length := Length;
[L854]               __tmp__now := now;
[L855]               __tmp___owner_Ownable := _owner_Ownable;
[L856]               __tmp__name_TristersLightCoin := name_TristersLightCoin;
[L857]               __tmp__symbol_TristersLightCoin := symbol_TristersLightCoin;
[L858]               __tmp__decimals_TristersLightCoin := decimals_TristersLightCoin;
[L859]               __tmp__totalSupply_TristersLightCoin := totalSupply_TristersLightCoin;
[L860]               __tmp__FounderAllocation_TristersLightCoin := FounderAllocation_TristersLightCoin;
[L861]               __tmp__FounderLockupAmount_TristersLightCoin := FounderLockupAmount_TristersLightCoin;
[L862]               __tmp__FounderLockupCliff_TristersLightCoin := FounderLockupCliff_TristersLightCoin;
[L863]               __tmp__FounderReleaseInterval_TristersLightCoin := FounderReleaseInterval_TristersLightCoin;
[L864]               __tmp__FounderReleaseAmount_TristersLightCoin := FounderReleaseAmount_TristersLightCoin;
[L865]               __tmp__founder_TristersLightCoin := founder_TristersLightCoin;
[L866]               __tmp__founderLockupStartTime_TristersLightCoin := founderLockupStartTime_TristersLightCoin;
[L867]               __tmp__founderReleasedAmount_TristersLightCoin := founderReleasedAmount_TristersLightCoin;
[L868]               __tmp___balances_TristersLightCoin := _balances_TristersLightCoin;
[L869]               __tmp___allowances_TristersLightCoin := _allowances_TristersLightCoin;
[L870]   CALL        call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L3214]  CALL        call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3310]              __var_12 := null;
[L3311]  COND FALSE  !(!(from_s717 != null))
[L3315]              __var_13 := null;
[L3316]  COND FALSE  !(!(to_s717 != null))
[L3320]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L2839]  COND FALSE  !(!(b_s228 <= a_s228))
[L2843]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2844]              __ret_0_ := c_s228;
[L3320]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L3321]  COND FALSE  !(revert)
[L3324]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_TristersLightCoin[this][from_s717];
[L3325]              __tmp___balances_TristersLightCoin[this][from_s717] := __var_14;
[L3326]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_TristersLightCoin[this][from_s717];
[L3327]  CALL        call __var_15 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][to_s717], amount_s717);
[L2815]              c_s201 := (a_s201 + b_s201) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2816]  COND TRUE   !(c_s201 >= a_s201)
[L2817]              revert := true;
[L3327]  RET         call __var_15 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][to_s717], amount_s717);
[L3328]  COND TRUE   revert
[L3214]  RET         call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3215]  COND TRUE   revert
[L870]   RET         call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L871]               assume revert || gas < 0;
[L4738]  RET         call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

Loop:
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND FALSE  !(choice == 23)
[L4733]  COND TRUE   choice == 22
[L4734]              gas := gas - 21000;
[L4735]  COND TRUE   gas >= 0
[L4736]              assume amount_s585 >= 0 && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4737]              assume msgvalue_MSG == 0;
[L4738]  CALL        call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s585 && amount_s585 <= _balances_TristersLightCoin[this][msgsender_MSG]) && amount_s585 >= 0) && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][to_s585] >= 0) && _balances_TristersLightCoin[this][to_s585] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][msgsender_MSG] >= 0) && _balances_TristersLightCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TristersLightCoin0 := true;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]                 revert := revert_hold;
[L841]               havoc __exception;
[L842]               revert := false;
[L843]   COND TRUE   __exception
[L844]               __tmp__Balance := Balance;
[L845]               __tmp__DType := DType;
[L846]               __tmp__Alloc := Alloc;
[L847]               __tmp__balance_ADDR := balance_ADDR;
[L848]               __tmp__M_Ref_int := M_Ref_int;
[L849]               __tmp__sum__balances0 := sum__balances0;
[L850]               __tmp__alloc__allowances_TristersLightCoin_lvl0 := alloc__allowances_TristersLightCoin_lvl0;
[L851]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L852]               __tmp__sum__allowances1 := sum__allowances1;
[L853]               __tmp__Length := Length;
[L854]               __tmp__now := now;
[L855]               __tmp___owner_Ownable := _owner_Ownable;
[L856]               __tmp__name_TristersLightCoin := name_TristersLightCoin;
[L857]               __tmp__symbol_TristersLightCoin := symbol_TristersLightCoin;
[L858]               __tmp__decimals_TristersLightCoin := decimals_TristersLightCoin;
[L859]               __tmp__totalSupply_TristersLightCoin := totalSupply_TristersLightCoin;
[L860]               __tmp__FounderAllocation_TristersLightCoin := FounderAllocation_TristersLightCoin;
[L861]               __tmp__FounderLockupAmount_TristersLightCoin := FounderLockupAmount_TristersLightCoin;
[L862]               __tmp__FounderLockupCliff_TristersLightCoin := FounderLockupCliff_TristersLightCoin;
[L863]               __tmp__FounderReleaseInterval_TristersLightCoin := FounderReleaseInterval_TristersLightCoin;
[L864]               __tmp__FounderReleaseAmount_TristersLightCoin := FounderReleaseAmount_TristersLightCoin;
[L865]               __tmp__founder_TristersLightCoin := founder_TristersLightCoin;
[L866]               __tmp__founderLockupStartTime_TristersLightCoin := founderLockupStartTime_TristersLightCoin;
[L867]               __tmp__founderReleasedAmount_TristersLightCoin := founderReleasedAmount_TristersLightCoin;
[L868]               __tmp___balances_TristersLightCoin := _balances_TristersLightCoin;
[L869]               __tmp___allowances_TristersLightCoin := _allowances_TristersLightCoin;
[L870]   CALL        call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L3214]  CALL        call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3310]              __var_12 := null;
[L3311]  COND FALSE  !(!(from_s717 != null))
[L3315]              __var_13 := null;
[L3316]  COND FALSE  !(!(to_s717 != null))
[L3320]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L2839]  COND FALSE  !(!(b_s228 <= a_s228))
[L2843]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2844]              __ret_0_ := c_s228;
[L3320]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L3321]  COND FALSE  !(revert)
[L3324]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_TristersLightCoin[this][from_s717];
[L3325]              __tmp___balances_TristersLightCoin[this][from_s717] := __var_14;
[L3326]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_TristersLightCoin[this][from_s717];
[L3327]  CALL        call __var_15 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][to_s717], amount_s717);
[L2815]              c_s201 := (a_s201 + b_s201) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2816]  COND TRUE   !(c_s201 >= a_s201)
[L2817]              revert := true;
[L3327]  RET         call __var_15 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][to_s717], amount_s717);
[L3328]  COND TRUE   revert
[L3214]  RET         call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3215]  COND TRUE   revert
[L870]   RET         call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L871]               assume revert || gas < 0;
[L4738]  RET         call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

[2020-11-25 06:39:08,287 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:39:08,287 INFO  L82        PathProgramCache]: Analyzing trace with hash 438515361, now seen corresponding path program 1 times
[2020-11-25 06:39:08,288 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:39:08,299 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:39:08,376 INFO  L134       CoverageAnalysis]: Checked inductivity of 5 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-25 06:39:08,376 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:39:08,376 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-25 06:39:08,376 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:39:08,376 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 06:39:08,376 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=153, Unknown=0, NotChecked=0, Total=182
[2020-11-25 06:39:08,377 INFO  L87              Difference]: Start difference. First operand 3675 states and 3961 transitions. cyclomatic complexity: 290 Second operand 14 states.
[2020-11-25 06:39:09,981 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:39:09,981 INFO  L93              Difference]: Finished difference Result 3775 states and 4076 transitions.
[2020-11-25 06:39:09,981 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-25 06:39:09,981 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3775 states and 4076 transitions.
[2020-11-25 06:39:09,988 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 06:39:09,995 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3775 states to 3775 states and 4076 transitions.
[2020-11-25 06:39:09,995 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1232
[2020-11-25 06:39:09,996 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1232
[2020-11-25 06:39:09,996 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3775 states and 4076 transitions.
[2020-11-25 06:39:09,998 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:39:09,998 INFO  L728         BuchiCegarLoop]: Abstraction has 3775 states and 4076 transitions.
[2020-11-25 06:39:10,001 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3775 states and 4076 transitions.
[2020-11-25 06:39:10,020 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3775 to 3667.
[2020-11-25 06:39:10,020 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3667 states.
[2020-11-25 06:39:10,023 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3667 states to 3667 states and 3947 transitions.
[2020-11-25 06:39:10,023 INFO  L751         BuchiCegarLoop]: Abstraction has 3667 states and 3947 transitions.
[2020-11-25 06:39:10,023 INFO  L631         BuchiCegarLoop]: Abstraction has 3667 states and 3947 transitions.
[2020-11-25 06:39:10,023 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-25 06:39:10,023 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3667 states and 3947 transitions.
[2020-11-25 06:39:10,027 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:39:10,027 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:39:10,027 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:39:10,028 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:39:10,028 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_TristersLightCoin0 := false;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]     CALL        call main();
[L4878]              assume null == 0;
[L4879]  CALL        call this := FreshRefGenerator__success();
[L2578]              havoc newRef;
[L2579]              assume Alloc[newRef] == false;
[L2580]              Alloc[newRef] := true;
[L2581]              assume newRef != null;
[L4879]  RET         call this := FreshRefGenerator__success();
[L4880]              assume now >= 0;
[L4881]              assume DType[this] == TristersLightCoin;
[L4882]              assume msgvalue_MSG == 0;
[L4883]              gas := gas - 53000;
[L4884]  CALL        call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L632]               havoc __exception;
[L633]               revert := false;
[L634]   COND FALSE  !(__exception)
[L664]   CALL        call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3078]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2701]              assume msgsender_MSG != null;
[L2702]              Balance[this] := 0;
[L2703]              _owner_Ownable[this] := null;
[L2705]              _owner_Ownable[this] := msgsender_MSG;
[L2706]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L2719]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2720]  COND FALSE  !(revert)
[L3078]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3079]  COND FALSE  !(revert)
[L3082]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2682]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2667]              assume msgsender_MSG != null;
[L2668]              Balance[this] := 0;
[L2682]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L3082]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3083]  COND FALSE  !(revert)
[L3086]  CALL        call TristersLightCoin_TristersLightCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3001]              assume msgsender_MSG != null;
[L3002]              Balance[this] := 0;
[L3003]              name_TristersLightCoin[this] := -536466818;
[L3004]              symbol_TristersLightCoin[this] := 685674239;
[L3005]              decimals_TristersLightCoin[this] := 18;
[L3006]              totalSupply_TristersLightCoin[this] := nonlinearMul(8000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3007]              FounderAllocation_TristersLightCoin[this] := nonlinearMul(500 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3008]              FounderLockupAmount_TristersLightCoin[this] := nonlinearMul(300 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3009]              FounderLockupCliff_TristersLightCoin[this] := 180;
[L3010]              FounderReleaseInterval_TristersLightCoin[this] := 30;
[L3011]              FounderReleaseAmount_TristersLightCoin[this] := nonlinearMul(50 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3012]              __var_9 := null;
[L3013]              founder_TristersLightCoin[this] := null;
[L3014]              founderLockupStartTime_TristersLightCoin[this] := 0;
[L3015]              founderReleasedAmount_TristersLightCoin[this] := 0;
[L3016]              _balances_TristersLightCoin[this] := zeroRefintArr();
[L3017]              sum__balances0[this] := 0;
[L3018]              _allowances_TristersLightCoin[this] := zeroRefRefintArr();
[L3019]              sum__allowances1[this] := 0;
[L3021]              __var_4 := null;
[L3022]  COND FALSE  !(!(_founder_s476 != null))
[L3026]              __var_5 := null;
[L3027]  COND FALSE  !(!(_operator_s476 != null))
[L3031]              founder_TristersLightCoin[this] := _founder_s476;
[L3032]              founderLockupStartTime_TristersLightCoin[this] := now;
[L3033]              __var_6 := this;
[L3034]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][this];
[L3035]              _balances_TristersLightCoin[this][this] := totalSupply_TristersLightCoin[this];
[L3036]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][this];
[L3037]              __var_7 := this;
[L3038]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, FounderAllocation_TristersLightCoin[this], FounderLockupAmount_TristersLightCoin[this], -1195062810);
[L2851]  COND FALSE  !(!(b_s228 <= a_s228))
[L2855]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2856]              __ret_0_ := c_s228;
[L3038]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, FounderAllocation_TristersLightCoin[this], FounderLockupAmount_TristersLightCoin[this], -1195062810);
[L3039]  COND FALSE  !(revert)
[L3042]  CALL        call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _operator_s476, __var_8);
[L3342]              __var_12 := null;
[L3343]  COND FALSE  !(!(from_s717 != null))
[L3347]              __var_13 := null;
[L3348]  COND FALSE  !(!(to_s717 != null))
[L3352]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L2851]  COND FALSE  !(!(b_s228 <= a_s228))
[L2855]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2856]              __ret_0_ := c_s228;
[L3352]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L3353]  COND FALSE  !(revert)
[L3356]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][from_s717];
[L3357]              _balances_TristersLightCoin[this][from_s717] := __var_14;
[L3358]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][from_s717];
[L3359]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L2827]              c_s201 := (a_s201 + b_s201) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2828]  COND FALSE  !(!(c_s201 >= a_s201))
[L2832]              __ret_0_ := c_s201;
[L3359]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L3360]  COND FALSE  !(revert)
[L3363]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][to_s717];
[L3364]              _balances_TristersLightCoin[this][to_s717] := __var_15;
[L3365]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][to_s717];
[L3366]              assert { :EventEmitted "Transfer_TristersLightCoin" } true;
[L3042]  RET         call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _operator_s476, __var_8);
[L3043]  COND FALSE  !(revert)
[L3086]  RET         call TristersLightCoin_TristersLightCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3087]  COND FALSE  !(revert)
[L664]   RET         call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L665]               assume !revert && gas >= 0;
[L4884]  RET         call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L4885]              assume !revert && gas >= 0;
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND FALSE  !(choice == 23)
[L4733]  COND TRUE   choice == 22
[L4734]              gas := gas - 21000;
[L4735]  COND TRUE   gas >= 0
[L4736]              assume amount_s585 >= 0 && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4737]              assume msgvalue_MSG == 0;
[L4738]  CALL        call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s585 && amount_s585 <= _balances_TristersLightCoin[this][msgsender_MSG]) && amount_s585 >= 0) && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][to_s585] >= 0) && _balances_TristersLightCoin[this][to_s585] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][msgsender_MSG] >= 0) && _balances_TristersLightCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TristersLightCoin0 := true;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]                 revert := revert_hold;
[L841]               havoc __exception;
[L842]               revert := false;
[L843]   COND TRUE   __exception
[L844]               __tmp__Balance := Balance;
[L845]               __tmp__DType := DType;
[L846]               __tmp__Alloc := Alloc;
[L847]               __tmp__balance_ADDR := balance_ADDR;
[L848]               __tmp__M_Ref_int := M_Ref_int;
[L849]               __tmp__sum__balances0 := sum__balances0;
[L850]               __tmp__alloc__allowances_TristersLightCoin_lvl0 := alloc__allowances_TristersLightCoin_lvl0;
[L851]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L852]               __tmp__sum__allowances1 := sum__allowances1;
[L853]               __tmp__Length := Length;
[L854]               __tmp__now := now;
[L855]               __tmp___owner_Ownable := _owner_Ownable;
[L856]               __tmp__name_TristersLightCoin := name_TristersLightCoin;
[L857]               __tmp__symbol_TristersLightCoin := symbol_TristersLightCoin;
[L858]               __tmp__decimals_TristersLightCoin := decimals_TristersLightCoin;
[L859]               __tmp__totalSupply_TristersLightCoin := totalSupply_TristersLightCoin;
[L860]               __tmp__FounderAllocation_TristersLightCoin := FounderAllocation_TristersLightCoin;
[L861]               __tmp__FounderLockupAmount_TristersLightCoin := FounderLockupAmount_TristersLightCoin;
[L862]               __tmp__FounderLockupCliff_TristersLightCoin := FounderLockupCliff_TristersLightCoin;
[L863]               __tmp__FounderReleaseInterval_TristersLightCoin := FounderReleaseInterval_TristersLightCoin;
[L864]               __tmp__FounderReleaseAmount_TristersLightCoin := FounderReleaseAmount_TristersLightCoin;
[L865]               __tmp__founder_TristersLightCoin := founder_TristersLightCoin;
[L866]               __tmp__founderLockupStartTime_TristersLightCoin := founderLockupStartTime_TristersLightCoin;
[L867]               __tmp__founderReleasedAmount_TristersLightCoin := founderReleasedAmount_TristersLightCoin;
[L868]               __tmp___balances_TristersLightCoin := _balances_TristersLightCoin;
[L869]               __tmp___allowances_TristersLightCoin := _allowances_TristersLightCoin;
[L870]   CALL        call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L3214]  CALL        call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3310]              __var_12 := null;
[L3311]  COND FALSE  !(!(from_s717 != null))
[L3315]              __var_13 := null;
[L3316]  COND FALSE  !(!(to_s717 != null))
[L3320]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L2839]  COND FALSE  !(!(b_s228 <= a_s228))
[L2843]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2844]              __ret_0_ := c_s228;
[L3320]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L3321]  COND FALSE  !(revert)
[L3324]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_TristersLightCoin[this][from_s717];
[L3325]              __tmp___balances_TristersLightCoin[this][from_s717] := __var_14;
[L3326]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_TristersLightCoin[this][from_s717];
[L3327]  CALL        call __var_15 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][to_s717], amount_s717);
[L2815]              c_s201 := (a_s201 + b_s201) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2816]  COND FALSE  !(!(c_s201 >= a_s201))
[L2820]              __ret_0_ := c_s201;
[L3327]  RET         call __var_15 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][to_s717], amount_s717);
[L3328]  COND FALSE  !(revert)
[L3331]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_TristersLightCoin[this][to_s717];
[L3332]              __tmp___balances_TristersLightCoin[this][to_s717] := __var_15;
[L3333]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_TristersLightCoin[this][to_s717];
[L3214]  RET         call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3215]  COND FALSE  !(revert)
[L3218]              __ret_0_ := true;
[L870]   RET         call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L871]               assume revert || gas < 0;
[L4738]  RET         call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

Loop:
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND FALSE  !(choice == 23)
[L4733]  COND TRUE   choice == 22
[L4734]              gas := gas - 21000;
[L4735]  COND TRUE   gas >= 0
[L4736]              assume amount_s585 >= 0 && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4737]              assume msgvalue_MSG == 0;
[L4738]  CALL        call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s585 && amount_s585 <= _balances_TristersLightCoin[this][msgsender_MSG]) && amount_s585 >= 0) && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][to_s585] >= 0) && _balances_TristersLightCoin[this][to_s585] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][msgsender_MSG] >= 0) && _balances_TristersLightCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TristersLightCoin0 := true;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]                 revert := revert_hold;
[L841]               havoc __exception;
[L842]               revert := false;
[L843]   COND TRUE   __exception
[L844]               __tmp__Balance := Balance;
[L845]               __tmp__DType := DType;
[L846]               __tmp__Alloc := Alloc;
[L847]               __tmp__balance_ADDR := balance_ADDR;
[L848]               __tmp__M_Ref_int := M_Ref_int;
[L849]               __tmp__sum__balances0 := sum__balances0;
[L850]               __tmp__alloc__allowances_TristersLightCoin_lvl0 := alloc__allowances_TristersLightCoin_lvl0;
[L851]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L852]               __tmp__sum__allowances1 := sum__allowances1;
[L853]               __tmp__Length := Length;
[L854]               __tmp__now := now;
[L855]               __tmp___owner_Ownable := _owner_Ownable;
[L856]               __tmp__name_TristersLightCoin := name_TristersLightCoin;
[L857]               __tmp__symbol_TristersLightCoin := symbol_TristersLightCoin;
[L858]               __tmp__decimals_TristersLightCoin := decimals_TristersLightCoin;
[L859]               __tmp__totalSupply_TristersLightCoin := totalSupply_TristersLightCoin;
[L860]               __tmp__FounderAllocation_TristersLightCoin := FounderAllocation_TristersLightCoin;
[L861]               __tmp__FounderLockupAmount_TristersLightCoin := FounderLockupAmount_TristersLightCoin;
[L862]               __tmp__FounderLockupCliff_TristersLightCoin := FounderLockupCliff_TristersLightCoin;
[L863]               __tmp__FounderReleaseInterval_TristersLightCoin := FounderReleaseInterval_TristersLightCoin;
[L864]               __tmp__FounderReleaseAmount_TristersLightCoin := FounderReleaseAmount_TristersLightCoin;
[L865]               __tmp__founder_TristersLightCoin := founder_TristersLightCoin;
[L866]               __tmp__founderLockupStartTime_TristersLightCoin := founderLockupStartTime_TristersLightCoin;
[L867]               __tmp__founderReleasedAmount_TristersLightCoin := founderReleasedAmount_TristersLightCoin;
[L868]               __tmp___balances_TristersLightCoin := _balances_TristersLightCoin;
[L869]               __tmp___allowances_TristersLightCoin := _allowances_TristersLightCoin;
[L870]   CALL        call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L3214]  CALL        call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3310]              __var_12 := null;
[L3311]  COND FALSE  !(!(from_s717 != null))
[L3315]              __var_13 := null;
[L3316]  COND FALSE  !(!(to_s717 != null))
[L3320]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L2839]  COND FALSE  !(!(b_s228 <= a_s228))
[L2843]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2844]              __ret_0_ := c_s228;
[L3320]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L3321]  COND FALSE  !(revert)
[L3324]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_TristersLightCoin[this][from_s717];
[L3325]              __tmp___balances_TristersLightCoin[this][from_s717] := __var_14;
[L3326]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_TristersLightCoin[this][from_s717];
[L3327]  CALL        call __var_15 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][to_s717], amount_s717);
[L2815]              c_s201 := (a_s201 + b_s201) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2816]  COND FALSE  !(!(c_s201 >= a_s201))
[L2820]              __ret_0_ := c_s201;
[L3327]  RET         call __var_15 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_TristersLightCoin[this][to_s717], amount_s717);
[L3328]  COND FALSE  !(revert)
[L3331]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_TristersLightCoin[this][to_s717];
[L3332]              __tmp___balances_TristersLightCoin[this][to_s717] := __var_15;
[L3333]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_TristersLightCoin[this][to_s717];
[L3214]  RET         call _transfer~address~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3215]  COND FALSE  !(revert)
[L3218]              __ret_0_ := true;
[L870]   RET         call __ret_0_ := transfer~address~uint256_TristersLightCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L871]               assume revert || gas < 0;
[L4738]  RET         call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

[2020-11-25 06:39:10,032 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:39:10,032 INFO  L82        PathProgramCache]: Analyzing trace with hash 1693384543, now seen corresponding path program 1 times
[2020-11-25 06:39:10,032 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:39:10,042 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:39:10,076 INFO  L134       CoverageAnalysis]: Checked inductivity of 5 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-25 06:39:10,076 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:39:10,076 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 06:39:10,076 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:39:10,077 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 06:39:10,077 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 06:39:10,077 INFO  L87              Difference]: Start difference. First operand 3667 states and 3947 transitions. cyclomatic complexity: 284 Second operand 5 states.
[2020-11-25 06:39:10,558 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:39:10,559 INFO  L93              Difference]: Finished difference Result 4426 states and 4865 transitions.
[2020-11-25 06:39:10,559 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 06:39:10,559 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4426 states and 4865 transitions.
[2020-11-25 06:39:10,568 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 8
[2020-11-25 06:39:10,575 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4426 states to 3062 states and 3489 transitions.
[2020-11-25 06:39:10,575 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 750
[2020-11-25 06:39:10,576 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 750
[2020-11-25 06:39:10,576 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3062 states and 3489 transitions.
[2020-11-25 06:39:10,577 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:39:10,577 INFO  L728         BuchiCegarLoop]: Abstraction has 3062 states and 3489 transitions.
[2020-11-25 06:39:10,579 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3062 states and 3489 transitions.
[2020-11-25 06:39:10,591 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3062 to 2348.
[2020-11-25 06:39:10,591 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2348 states.
[2020-11-25 06:39:10,593 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2348 states to 2348 states and 2562 transitions.
[2020-11-25 06:39:10,593 INFO  L751         BuchiCegarLoop]: Abstraction has 2348 states and 2562 transitions.
[2020-11-25 06:39:10,593 INFO  L631         BuchiCegarLoop]: Abstraction has 2348 states and 2562 transitions.
[2020-11-25 06:39:10,593 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-25 06:39:10,593 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2348 states and 2562 transitions.
[2020-11-25 06:39:10,595 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:39:10,595 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:39:10,595 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:39:10,596 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:39:10,596 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_TristersLightCoin0 := false;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]     CALL        call main();
[L4878]              assume null == 0;
[L4879]  CALL        call this := FreshRefGenerator__success();
[L2578]              havoc newRef;
[L2579]              assume Alloc[newRef] == false;
[L2580]              Alloc[newRef] := true;
[L2581]              assume newRef != null;
[L4879]  RET         call this := FreshRefGenerator__success();
[L4880]              assume now >= 0;
[L4881]              assume DType[this] == TristersLightCoin;
[L4882]              assume msgvalue_MSG == 0;
[L4883]              gas := gas - 53000;
[L4884]  CALL        call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L632]               havoc __exception;
[L633]               revert := false;
[L634]   COND FALSE  !(__exception)
[L664]   CALL        call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3078]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2701]              assume msgsender_MSG != null;
[L2702]              Balance[this] := 0;
[L2703]              _owner_Ownable[this] := null;
[L2705]              _owner_Ownable[this] := msgsender_MSG;
[L2706]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L2719]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2720]  COND FALSE  !(revert)
[L3078]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3079]  COND FALSE  !(revert)
[L3082]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2682]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2667]              assume msgsender_MSG != null;
[L2668]              Balance[this] := 0;
[L2682]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L3082]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3083]  COND FALSE  !(revert)
[L3086]  CALL        call TristersLightCoin_TristersLightCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3001]              assume msgsender_MSG != null;
[L3002]              Balance[this] := 0;
[L3003]              name_TristersLightCoin[this] := -536466818;
[L3004]              symbol_TristersLightCoin[this] := 685674239;
[L3005]              decimals_TristersLightCoin[this] := 18;
[L3006]              totalSupply_TristersLightCoin[this] := nonlinearMul(8000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3007]              FounderAllocation_TristersLightCoin[this] := nonlinearMul(500 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3008]              FounderLockupAmount_TristersLightCoin[this] := nonlinearMul(300 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3009]              FounderLockupCliff_TristersLightCoin[this] := 180;
[L3010]              FounderReleaseInterval_TristersLightCoin[this] := 30;
[L3011]              FounderReleaseAmount_TristersLightCoin[this] := nonlinearMul(50 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TristersLightCoin[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3012]              __var_9 := null;
[L3013]              founder_TristersLightCoin[this] := null;
[L3014]              founderLockupStartTime_TristersLightCoin[this] := 0;
[L3015]              founderReleasedAmount_TristersLightCoin[this] := 0;
[L3016]              _balances_TristersLightCoin[this] := zeroRefintArr();
[L3017]              sum__balances0[this] := 0;
[L3018]              _allowances_TristersLightCoin[this] := zeroRefRefintArr();
[L3019]              sum__allowances1[this] := 0;
[L3021]              __var_4 := null;
[L3022]  COND FALSE  !(!(_founder_s476 != null))
[L3026]              __var_5 := null;
[L3027]  COND FALSE  !(!(_operator_s476 != null))
[L3031]              founder_TristersLightCoin[this] := _founder_s476;
[L3032]              founderLockupStartTime_TristersLightCoin[this] := now;
[L3033]              __var_6 := this;
[L3034]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][this];
[L3035]              _balances_TristersLightCoin[this][this] := totalSupply_TristersLightCoin[this];
[L3036]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][this];
[L3037]              __var_7 := this;
[L3038]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, FounderAllocation_TristersLightCoin[this], FounderLockupAmount_TristersLightCoin[this], -1195062810);
[L2851]  COND FALSE  !(!(b_s228 <= a_s228))
[L2855]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2856]              __ret_0_ := c_s228;
[L3038]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, FounderAllocation_TristersLightCoin[this], FounderLockupAmount_TristersLightCoin[this], -1195062810);
[L3039]  COND FALSE  !(revert)
[L3042]  CALL        call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _operator_s476, __var_8);
[L3342]              __var_12 := null;
[L3343]  COND FALSE  !(!(from_s717 != null))
[L3347]              __var_13 := null;
[L3348]  COND FALSE  !(!(to_s717 != null))
[L3352]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L2851]  COND FALSE  !(!(b_s228 <= a_s228))
[L2855]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2856]              __ret_0_ := c_s228;
[L3352]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L3353]  COND FALSE  !(revert)
[L3356]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][from_s717];
[L3357]              _balances_TristersLightCoin[this][from_s717] := __var_14;
[L3358]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][from_s717];
[L3359]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L2827]              c_s201 := (a_s201 + b_s201) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2828]  COND FALSE  !(!(c_s201 >= a_s201))
[L2832]              __ret_0_ := c_s201;
[L3359]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L3360]  COND FALSE  !(revert)
[L3363]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][to_s717];
[L3364]              _balances_TristersLightCoin[this][to_s717] := __var_15;
[L3365]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][to_s717];
[L3366]              assert { :EventEmitted "Transfer_TristersLightCoin" } true;
[L3042]  RET         call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _operator_s476, __var_8);
[L3043]  COND FALSE  !(revert)
[L3086]  RET         call TristersLightCoin_TristersLightCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L3087]  COND FALSE  !(revert)
[L664]   RET         call TristersLightCoin_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L665]               assume !revert && gas >= 0;
[L4884]  RET         call TristersLightCoin_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s476, _operator_s476);
[L4885]              assume !revert && gas >= 0;
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND FALSE  !(choice == 23)
[L4733]  COND TRUE   choice == 22
[L4734]              gas := gas - 21000;
[L4735]  COND TRUE   gas >= 0
[L4736]              assume amount_s585 >= 0 && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4737]              assume msgvalue_MSG == 0;
[L4738]  CALL        call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((msgsender_MSG == to_s585 && amount_s585 <= _balances_TristersLightCoin[this][msgsender_MSG]) && amount_s585 >= 0) && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][to_s585] >= 0) && _balances_TristersLightCoin[this][to_s585] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][msgsender_MSG] >= 0) && _balances_TristersLightCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L841]               havoc __exception;
[L842]               revert := false;
[L843]   COND FALSE  !(__exception)
[L873]   CALL        call __ret_0_ := transfer~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L3224]  CALL        call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3342]              __var_12 := null;
[L3343]  COND FALSE  !(!(from_s717 != null))
[L3347]              __var_13 := null;
[L3348]  COND FALSE  !(!(to_s717 != null))
[L3352]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L2851]  COND FALSE  !(!(b_s228 <= a_s228))
[L2855]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2856]              __ret_0_ := c_s228;
[L3352]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L3353]  COND FALSE  !(revert)
[L3356]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][from_s717];
[L3357]              _balances_TristersLightCoin[this][from_s717] := __var_14;
[L3358]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][from_s717];
[L3359]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L2827]              c_s201 := (a_s201 + b_s201) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2828]  COND FALSE  !(!(c_s201 >= a_s201))
[L2832]              __ret_0_ := c_s201;
[L3359]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L3360]  COND FALSE  !(revert)
[L3363]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][to_s717];
[L3364]              _balances_TristersLightCoin[this][to_s717] := __var_15;
[L3365]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][to_s717];
[L3366]              assert { :EventEmitted "Transfer_TristersLightCoin" } true;
[L3224]  RET         call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3225]  COND FALSE  !(revert)
[L3228]              __ret_0_ := true;
[L873]   RET         call __ret_0_ := transfer~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L874]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == true && totalSupply_TristersLightCoin[this] == old(totalSupply_TristersLightCoin[this])) && _balances_TristersLightCoin[this] == old(_balances_TristersLightCoin[this])) && _allowances_TristersLightCoin[this] == old(_allowances_TristersLightCoin[this])) && founder_TristersLightCoin[this] == old(founder_TristersLightCoin[this])) && founderLockupStartTime_TristersLightCoin[this] == old(founderLockupStartTime_TristersLightCoin[this])) && founderReleasedAmount_TristersLightCoin[this] == old(founderReleasedAmount_TristersLightCoin[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L4738]  RET         call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L4888]  RET         call CorralChoice_TristersLightCoin(this);
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND FALSE  !(choice == 23)
[L4733]  COND TRUE   choice == 22
[L4734]              gas := gas - 21000;
[L4735]  COND TRUE   gas >= 0
[L4736]              assume amount_s585 >= 0 && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4737]              assume msgvalue_MSG == 0;
[L4738]  CALL        call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s585 && amount_s585 <= _balances_TristersLightCoin[this][msgsender_MSG]) && amount_s585 >= 0) && amount_s585 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][to_s585] >= 0) && _balances_TristersLightCoin[this][to_s585] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_TristersLightCoin[this][msgsender_MSG] >= 0) && _balances_TristersLightCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TristersLightCoin0 := true;
[L2]                 call_transfer_TristersLightCoin0 := false;
[L2]                 revert := revert_hold;
[L841]               havoc __exception;
[L842]               revert := false;
[L843]   COND FALSE  !(__exception)
[L873]   CALL        call __ret_0_ := transfer~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L3224]  CALL        call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3342]              __var_12 := null;
[L3343]  COND FALSE  !(!(from_s717 != null))
[L3347]              __var_13 := null;
[L3348]  COND FALSE  !(!(to_s717 != null))
[L3352]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L2851]  COND FALSE  !(!(b_s228 <= a_s228))
[L2855]              c_s228 := (a_s228 - b_s228) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2856]              __ret_0_ := c_s228;
[L3352]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][from_s717], amount_s717, 1128073044);
[L3353]  COND FALSE  !(revert)
[L3356]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][from_s717];
[L3357]              _balances_TristersLightCoin[this][from_s717] := __var_14;
[L3358]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][from_s717];
[L3359]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L2827]              c_s201 := (a_s201 + b_s201) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2828]  COND FALSE  !(!(c_s201 >= a_s201))
[L2832]              __ret_0_ := c_s201;
[L3359]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_TristersLightCoin[this][to_s717], amount_s717);
[L3360]  COND FALSE  !(revert)
[L3363]              sum__balances0[this] := sum__balances0[this] - _balances_TristersLightCoin[this][to_s717];
[L3364]              _balances_TristersLightCoin[this][to_s717] := __var_15;
[L3365]              sum__balances0[this] := sum__balances0[this] + _balances_TristersLightCoin[this][to_s717];
[L3366]              assert { :EventEmitted "Transfer_TristersLightCoin" } true;
[L3224]  RET         call _transfer~address~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s585, amount_s585);
[L3225]  COND FALSE  !(revert)
[L3228]              __ret_0_ := true;
[L873]   RET         call __ret_0_ := transfer~address~uint256_TristersLightCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L874]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == true && totalSupply_TristersLightCoin[this] == old(totalSupply_TristersLightCoin[this])) && _balances_TristersLightCoin[this] == old(_balances_TristersLightCoin[this])) && _allowances_TristersLightCoin[this] == old(_allowances_TristersLightCoin[this])) && founder_TristersLightCoin[this] == old(founder_TristersLightCoin[this])) && founderLockupStartTime_TristersLightCoin[this] == old(founderLockupStartTime_TristersLightCoin[this])) && founderReleasedAmount_TristersLightCoin[this] == old(founderReleasedAmount_TristersLightCoin[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L4738]  RET         call __ret_0_transfer := transfer~address~uint256_TristersLightCoin(this, msgsender_MSG, msgvalue_MSG, to_s585, amount_s585);
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

Loop:
[L4888]  CALL        call CorralChoice_TristersLightCoin(this);
[L4677]              havoc msgsender_MSG;
[L4678]              havoc msgvalue_MSG;
[L4679]              havoc choice;
[L4680]              havoc account_s566;
[L4681]              havoc __ret_0_balanceOf;
[L4682]              havoc to_s585;
[L4683]              havoc amount_s585;
[L4684]              havoc __ret_0_transfer;
[L4685]              havoc from_s601;
[L4686]              havoc to_s601;
[L4687]              havoc __ret_0_allowance;
[L4688]              havoc to_s620;
[L4689]              havoc amount_s620;
[L4690]              havoc __ret_0_approve;
[L4691]              havoc from_s660;
[L4692]              havoc to_s660;
[L4693]              havoc amount_s660;
[L4694]              havoc __ret_0_transferFrom;
[L4695]              havoc __ret_0_owner;
[L4696]              havoc __ret_0_isOwner;
[L4697]              havoc newOwner_s175;
[L4698]              havoc __ret_0_name;
[L4699]              havoc __ret_0_symbol;
[L4700]              havoc __ret_0_decimals;
[L4701]              havoc __ret_0_totalSupply;
[L4702]              havoc __ret_0_FounderAllocation;
[L4703]              havoc __ret_0_FounderLockupAmount;
[L4704]              havoc __ret_0_FounderLockupCliff;
[L4705]              havoc __ret_0_FounderReleaseInterval;
[L4706]              havoc __ret_0_FounderReleaseAmount;
[L4707]              havoc __ret_0_founder;
[L4708]              havoc __ret_0_founderLockupStartTime;
[L4709]              havoc __ret_0_founderReleasedAmount;
[L4710]              havoc _founder_s476;
[L4711]              havoc _operator_s476;
[L4712]              havoc _founder_s785;
[L4713]              havoc minter_s825;
[L4714]              havoc tmpNow;
[L4715]              havoc gas;
[L4716]              assume gas > 4000000 && gas <= 8000000;
[L4717]              tmpNow := now;
[L4718]              havoc now;
[L4719]              assume now > tmpNow;
[L4720]              assume msgsender_MSG != null;
[L4721]              assume DType[msgsender_MSG] != Address;
[L4722]              assume DType[msgsender_MSG] != IERC20;
[L4723]              assume DType[msgsender_MSG] != Ownable;
[L4724]              assume DType[msgsender_MSG] != SafeMath;
[L4725]              assume DType[msgsender_MSG] != TristersLightCoin;
[L4726]              Alloc[msgsender_MSG] := true;
[L4727]  COND TRUE   choice == 23
[L4728]              gas := gas - 21000;
[L4729]  COND FALSE  !(gas >= 0)
[L4888]  RET         call CorralChoice_TristersLightCoin(this);

[2020-11-25 06:39:10,599 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:39:10,599 INFO  L82        PathProgramCache]: Analyzing trace with hash 788470742, now seen corresponding path program 1 times
[2020-11-25 06:39:10,599 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:39:10,733 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:39:10,967 INFO  L134       CoverageAnalysis]: Checked inductivity of 104 backedges. 62 proven. 0 refuted. 0 times theorem prover too weak. 42 trivial. 0 not checked.
[2020-11-25 06:39:10,967 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:39:10,967 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [20] imperfect sequences [] total 20
[2020-11-25 06:39:10,968 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:39:10,968 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 21 interpolants.
[2020-11-25 06:39:10,968 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=60, Invalid=360, Unknown=0, NotChecked=0, Total=420
[2020-11-25 06:39:10,968 INFO  L87              Difference]: Start difference. First operand 2348 states and 2562 transitions. cyclomatic complexity: 217 Second operand 21 states.
[2020-11-25 06:39:12,368 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:39:12,368 INFO  L93              Difference]: Finished difference Result 1312 states and 1421 transitions.
[2020-11-25 06:39:12,368 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 21 states. 
[2020-11-25 06:39:12,368 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1312 states and 1421 transitions.
[2020-11-25 06:39:12,370 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 06:39:12,371 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1312 states to 0 states and 0 transitions.
[2020-11-25 06:39:12,371 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 06:39:12,371 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 06:39:12,371 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 06:39:12,371 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:39:12,371 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 06:39:12,371 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 06:39:12,371 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 06:39:12,371 INFO  L445         BuchiCegarLoop]: ======== Iteration 11============
[2020-11-25 06:39:12,371 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 06:39:12,371 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 06:39:12,371 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 06:39:12,374 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:39:12 BasicIcfg
[2020-11-25 06:39:12,374 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 06:39:12,374 INFO  L168              Benchmark]: Toolchain (without parser) took 18084.64 ms. Allocated memory was 1.0 GB in the beginning and 2.3 GB in the end (delta: 1.3 GB). Free memory was 935.2 MB in the beginning and 1.3 GB in the end (delta: -379.6 MB). Peak memory consumption was 888.7 MB. Max. memory is 15.3 GB.
[2020-11-25 06:39:12,375 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 06:39:12,376 INFO  L168              Benchmark]: Boogie Preprocessor took 118.80 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 06:39:12,376 INFO  L168              Benchmark]: UtopiaSpecLang took 65.50 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:39:12,376 INFO  L168              Benchmark]: Boogie Printer took 16.17 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:39:12,376 INFO  L168              Benchmark]: RCFGBuilder took 736.07 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 790.2 MB in the end (delta: 123.5 MB). Peak memory consumption was 123.5 MB. Max. memory is 15.3 GB.
[2020-11-25 06:39:12,377 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.62 ms. Allocated memory is still 1.0 GB. Free memory was 790.2 MB in the beginning and 781.3 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 06:39:12,377 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1401.03 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 190.8 MB). Free memory was 781.3 MB in the beginning and 953.6 MB in the end (delta: -172.4 MB). Peak memory consumption was 154.9 MB. Max. memory is 15.3 GB.
[2020-11-25 06:39:12,378 INFO  L168              Benchmark]: BlockEncodingV2 took 129.27 ms. Allocated memory is still 1.2 GB. Free memory was 953.6 MB in the beginning and 890.5 MB in the end (delta: 63.1 MB). Peak memory consumption was 63.1 MB. Max. memory is 15.3 GB.
[2020-11-25 06:39:12,378 INFO  L168              Benchmark]: BuchiAutomizer took 15578.33 ms. Allocated memory was 1.2 GB in the beginning and 2.3 GB in the end (delta: 1.1 GB). Free memory was 890.5 MB in the beginning and 1.3 GB in the end (delta: -424.3 MB). Peak memory consumption was 653.1 MB. Max. memory is 15.3 GB.
[2020-11-25 06:39:12,381 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4396 locations, 7446 edges
  - StatisticsResult: Encoded RCFG
    4360 locations, 7358 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 118.80 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 65.50 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.17 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 736.07 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 790.2 MB in the end (delta: 123.5 MB). Peak memory consumption was 123.5 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.62 ms. Allocated memory is still 1.0 GB. Free memory was 790.2 MB in the beginning and 781.3 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1401.03 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 190.8 MB). Free memory was 781.3 MB in the beginning and 953.6 MB in the end (delta: -172.4 MB). Peak memory consumption was 154.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 129.27 ms. Allocated memory is still 1.2 GB. Free memory was 953.6 MB in the beginning and 890.5 MB in the end (delta: 63.1 MB). Peak memory consumption was 63.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 15578.33 ms. Allocated memory was 1.2 GB in the beginning and 2.3 GB in the end (delta: 1.1 GB). Free memory was 890.5 MB in the beginning and 1.3 GB in the end (delta: -424.3 MB). Peak memory consumption was 653.1 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1853 locations, 2311 edges
  - StatisticsResult: BuchiProgram size
    4396 locations, 7446 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 10 terminating modules (10 trivial, 0 deterministic, 0 nondeterministic). 10 modules have a trivial ranking function, the largest among these consists of 30 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 15.5s and 11 iterations.  TraceHistogramMax:3. Analysis of lassos took 2.9s. Construction of modules took 9.3s. BÃ¼chi inclusion checks took 2.4s. Highest rank in rank-based complementation 0. Minimization of det autom 10. Minimization of nondet autom 0. Automata minimization 0.3s AutomataMinimizationTime, 9 MinimizatonAttempts, 2190 StatesRemovedByMinimization, 7 NontrivialMinimizations. Non-live state removal took 0.2s Buchi closure took 0.0s. Biggest automaton had 3675 states and ocurred in iteration 7.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 34905 SDtfs, 26415 SDslu, 108891 SDs, 0 SdLazy, 78092 SolverSat, 4377 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 9.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU10 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_TristersLightCoin0) ==> ( <>(success_transfer_TristersLightCoin0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
