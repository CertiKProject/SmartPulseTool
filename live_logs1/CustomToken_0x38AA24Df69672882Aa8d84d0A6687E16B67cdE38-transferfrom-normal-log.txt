This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 12:58:04,953 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 12:58:04,954 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 12:58:04,964 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 12:58:04,964 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 12:58:04,965 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 12:58:04,966 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 12:58:04,967 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 12:58:04,968 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 12:58:04,969 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 12:58:04,970 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 12:58:04,970 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 12:58:04,971 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 12:58:04,971 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 12:58:04,972 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 12:58:04,973 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 12:58:04,973 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 12:58:04,974 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 12:58:04,975 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 12:58:04,977 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 12:58:04,977 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 12:58:04,978 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 12:58:04,979 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 12:58:04,980 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 12:58:04,980 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 12:58:04,980 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 12:58:04,981 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 12:58:04,981 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 12:58:04,981 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 12:58:04,982 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 12:58:04,982 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 12:58:04,982 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 12:58:04,983 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 12:58:04,983 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 12:58:04,984 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 12:58:04,984 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 12:58:04,985 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 12:58:04,985 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 12:58:04,985 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 12:58:04,986 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 12:58:04,986 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 12:58:04,986 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 12:58:04,994 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 12:58:04,994 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 12:58:04,994 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 12:58:04,995 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 12:58:04,995 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 12:58:04,995 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 12:58:04,995 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 12:58:04,995 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 12:58:04,995 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 12:58:04,995 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 12:58:04,995 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 12:58:04,996 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 12:58:04,996 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 12:58:04,996 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 12:58:04,996 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 12:58:04,996 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 12:58:04,996 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 12:58:04,996 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 12:58:04,996 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 12:58:04,996 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 12:58:04,996 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 12:58:04,997 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 12:58:04,997 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 12:58:04,997 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 12:58:04,997 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 12:58:04,997 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 12:58:05,019 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 12:58:05,033 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 12:58:05,036 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 12:58:05,037 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 12:58:05,037 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 12:58:05,038 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl
[2020-11-25 12:58:05,038 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl'
[2020-11-25 12:58:05,105 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 12:58:05,106 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 12:58:05,107 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 12:58:05,107 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 12:58:05,107 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 12:58:05,124 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:58:05" (1/1) ...
[2020-11-25 12:58:05,125 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:58:05" (1/1) ...
[2020-11-25 12:58:05,152 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:58:05" (1/1) ...
[2020-11-25 12:58:05,152 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:58:05" (1/1) ...
[2020-11-25 12:58:05,170 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:58:05" (1/1) ...
[2020-11-25 12:58:05,178 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:58:05" (1/1) ...
[2020-11-25 12:58:05,183 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:58:05" (1/1) ...
[2020-11-25 12:58:05,190 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 12:58:05,191 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 12:58:05,191 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 12:58:05,193 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 12:58:05,197 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:58:05" (1/1) ...
[2020-11-25 12:58:05,213 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(BaseToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_BaseToken[this][from] && value <= allowance_BaseToken[this][from][msg.sender] && balanceOf_BaseToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_BaseToken[this][to] >= 0 && balanceOf_BaseToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_BaseToken[this][from] >= 0 &&  balanceOf_BaseToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_BaseToken[this][from][msg.sender] >= 0 && allowance_BaseToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BaseToken.transferFrom(from, to, value), return == true && balanceOf_BaseToken[this][from] == old(balanceOf_BaseToken[this][from]) - value && balanceOf_BaseToken[this][to] == old(balanceOf_BaseToken[this][to]) + value && allowance_BaseToken[this][from][msg.sender] == old(allowance_BaseToken[this][from][msg.sender]) - value && totalSupply_BaseToken[this] == old(totalSupply_BaseToken[this]) && balanceOf_BaseToken[this][p1] == old(balanceOf_BaseToken[this][p1]) && allowance_BaseToken[this][p2][p3] == old(allowance_BaseToken[this][p2][p3]))))
[2020-11-25 12:58:05,218 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(BaseToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_BaseToken[this][from] && value <= allowance_BaseToken[this][from][msg.sender] && balanceOf_BaseToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_BaseToken[this][to] >= 0 && balanceOf_BaseToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_BaseToken[this][from] >= 0 &&  balanceOf_BaseToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_BaseToken[this][from][msg.sender] >= 0 && allowance_BaseToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BaseToken.transferFrom(from, to, value), return == true && balanceOf_BaseToken[this][from] == old(balanceOf_BaseToken[this][from]) - value && balanceOf_BaseToken[this][to] == old(balanceOf_BaseToken[this][to]) + value && allowance_BaseToken[this][from][msg.sender] == old(allowance_BaseToken[this][from][msg.sender]) - value && totalSupply_BaseToken[this] == old(totalSupply_BaseToken[this]) && balanceOf_BaseToken[this][p1] == old(balanceOf_BaseToken[this][p1]) && allowance_BaseToken[this][p2][p3] == old(allowance_BaseToken[this][p2][p3]))))
[2020-11-25 12:58:05,228 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(BaseToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_BaseToken[this][from] && value <= allowance_BaseToken[this][from][msg.sender] && balanceOf_BaseToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_BaseToken[this][to] >= 0 && balanceOf_BaseToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_BaseToken[this][from] >= 0 &&  balanceOf_BaseToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_BaseToken[this][from][msg.sender] >= 0 && allowance_BaseToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BaseToken.transferFrom(from, to, value), return == true && balanceOf_BaseToken[this][from] == old(balanceOf_BaseToken[this][from]) - value && balanceOf_BaseToken[this][to] == old(balanceOf_BaseToken[this][to]) + value && allowance_BaseToken[this][from][msg.sender] == old(allowance_BaseToken[this][from][msg.sender]) - value && totalSupply_BaseToken[this] == old(totalSupply_BaseToken[this]) && balanceOf_BaseToken[this][p1] == old(balanceOf_BaseToken[this][p1]) && allowance_BaseToken[this][p2][p3] == old(allowance_BaseToken[this][p2][p3]))))
[2020-11-25 12:58:05,237 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s321 && p1!=to_s321 ) && ( p2!=from_s321 || p3!=msg.sender ) ) && from_s321!=to_s321 ) && value_s321<=balanceOf_BaseToken[this][from_s321] ) && value_s321<=allowance_BaseToken[this][from_s321][msg.sender] ) && ( balanceOf_BaseToken[this][to_s321] + value_s321 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && value_s321>=0 ) && value_s321<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_BaseToken[this][to_s321]>=0 ) && balanceOf_BaseToken[this][to_s321]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_BaseToken[this][from_s321]>=0 ) && balanceOf_BaseToken[this][from_s321]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_BaseToken[this][from_s321][msg.sender]>=0 ) && allowance_BaseToken[this][from_s321][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[from_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[from_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>],IdentifierExpression[to_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[from_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[from_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[to_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],IdentifierExpression[value_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[to_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[to_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[from_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[from_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[from_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[from_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 12:58:05,240 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( __ret_0_==true && balanceOf_BaseToken[this][from_s321]==( ( old(balanceOf_BaseToken[this][from_s321]) ) - value_s321 ) ) && balanceOf_BaseToken[this][to_s321]==( ( old(balanceOf_BaseToken[this][to_s321]) ) + value_s321 ) ) && allowance_BaseToken[this][from_s321][msg.sender]==( ( old(allowance_BaseToken[this][from_s321][msg.sender]) ) - value_s321 ) ) && totalSupply_BaseToken[this]==( old(totalSupply_BaseToken[this]) ) ) && balanceOf_BaseToken[this][p1]==( old(balanceOf_BaseToken[this][p1]) ) ) && allowance_BaseToken[this][p2][p3]==( old(allowance_BaseToken[this][p2][p3]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_BaseToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[from_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[from_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]],IdentifierExpression[value_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[to_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[to_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]],IdentifierExpression[value_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[from_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[from_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]],IdentifierExpression[value_s321,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]]
[2020-11-25 12:58:05,245 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(BaseToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_BaseToken[this][from] && value <= allowance_BaseToken[this][from][msg.sender] && balanceOf_BaseToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_BaseToken[this][to] >= 0 && balanceOf_BaseToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_BaseToken[this][from] >= 0 &&  balanceOf_BaseToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_BaseToken[this][from][msg.sender] >= 0 && allowance_BaseToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BaseToken.transferFrom(from, to, value), return == true && balanceOf_BaseToken[this][from] == old(balanceOf_BaseToken[this][from]) - value && balanceOf_BaseToken[this][to] == old(balanceOf_BaseToken[this][to]) + value && allowance_BaseToken[this][from][msg.sender] == old(allowance_BaseToken[this][from][msg.sender]) - value && totalSupply_BaseToken[this] == old(totalSupply_BaseToken[this]) && balanceOf_BaseToken[this][p1] == old(balanceOf_BaseToken[this][p1]) && allowance_BaseToken[this][p2][p3] == old(allowance_BaseToken[this][p2][p3]))))
[2020-11-25 12:58:05,245 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_BaseToken0) ==> ( <>AP(success_transferFrom_BaseToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 12:58:05,251 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:58:05 PropertyContainer
[2020-11-25 12:58:05,251 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 12:58:05,252 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 12:58:05,252 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 12:58:05,252 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 12:58:05,253 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:58:05" (1/2) ...
[2020-11-25 12:58:05,253 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 12:58:05,253 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 12:58:05,264 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:58:05" (2/2) ...
[2020-11-25 12:58:05,264 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 12:58:05,265 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 12:58:05,265 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 12:58:05,265 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 12:58:05,266 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:58:05" (1/2) ...
[2020-11-25 12:58:05,317 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 12:58:05,318 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:58:05,318 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 12:58:05,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 12:58:05,318 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 12:58:05,318 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 12:58:05,318 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 12:58:05,318 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 12:58:05,318 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 12:58:05,318 INFO  L130     BoogieDeclarations]: Found specification of procedure BaseToken_BaseToken_NoBaseCtor__success
[2020-11-25 12:58:05,319 INFO  L130     BoogieDeclarations]: Found specification of procedure BaseToken_BaseToken
[2020-11-25 12:58:05,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure BaseToken_BaseToken
[2020-11-25 12:58:05,319 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_BaseToken__success
[2020-11-25 12:58:05,319 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_BaseToken__success
[2020-11-25 12:58:05,319 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BaseToken
[2020-11-25 12:58:05,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BaseToken
[2020-11-25 12:58:05,319 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BaseToken
[2020-11-25 12:58:05,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BaseToken
[2020-11-25 12:58:05,319 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_BaseToken
[2020-11-25 12:58:05,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_BaseToken
[2020-11-25 12:58:05,320 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_BaseToken
[2020-11-25 12:58:05,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_BaseToken
[2020-11-25 12:58:05,320 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_BaseToken
[2020-11-25 12:58:05,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_BaseToken
[2020-11-25 12:58:05,320 INFO  L130     BoogieDeclarations]: Found specification of procedure name_BaseToken
[2020-11-25 12:58:05,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_BaseToken
[2020-11-25 12:58:05,320 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_BaseToken
[2020-11-25 12:58:05,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_BaseToken
[2020-11-25 12:58:05,320 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_BaseToken
[2020-11-25 12:58:05,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_BaseToken
[2020-11-25 12:58:05,320 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BaseToken
[2020-11-25 12:58:05,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BaseToken
[2020-11-25 12:58:05,321 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalLimit_BaseToken
[2020-11-25 12:58:05,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalLimit_BaseToken
[2020-11-25 12:58:05,321 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BaseToken
[2020-11-25 12:58:05,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BaseToken
[2020-11-25 12:58:05,321 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_BaseToken
[2020-11-25 12:58:05,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_BaseToken
[2020-11-25 12:58:05,321 INFO  L130     BoogieDeclarations]: Found specification of procedure CustomToken_CustomToken_NoBaseCtor__success
[2020-11-25 12:58:05,321 INFO  L130     BoogieDeclarations]: Found specification of procedure CustomToken_CustomToken
[2020-11-25 12:58:05,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure CustomToken_CustomToken
[2020-11-25 12:58:05,321 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 12:58:05,322 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 12:58:05,322 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 12:58:05,322 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 12:58:05,322 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 12:58:05,322 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BaseToken
[2020-11-25 12:58:05,322 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BaseToken
[2020-11-25 12:58:05,322 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_CustomToken
[2020-11-25 12:58:05,322 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 12:58:05,322 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 12:58:05,322 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:58:05,322 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 12:58:05,322 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 12:58:05,322 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 12:58:05,323 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 12:58:05,323 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 12:58:05,323 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 12:58:05,323 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 12:58:05,323 INFO  L130     BoogieDeclarations]: Found specification of procedure BaseToken_BaseToken_NoBaseCtor__fail
[2020-11-25 12:58:05,323 INFO  L130     BoogieDeclarations]: Found specification of procedure BaseToken_BaseToken__success
[2020-11-25 12:58:05,323 INFO  L130     BoogieDeclarations]: Found specification of procedure BaseToken_BaseToken__fail
[2020-11-25 12:58:05,323 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_BaseToken__fail
[2020-11-25 12:58:05,323 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_BaseToken__fail
[2020-11-25 12:58:05,323 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BaseToken__success
[2020-11-25 12:58:05,323 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BaseToken__fail
[2020-11-25 12:58:05,323 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BaseToken__success
[2020-11-25 12:58:05,324 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BaseToken__fail
[2020-11-25 12:58:05,324 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_BaseToken__success
[2020-11-25 12:58:05,324 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_BaseToken__fail
[2020-11-25 12:58:05,324 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_BaseToken__success
[2020-11-25 12:58:05,324 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_BaseToken__fail
[2020-11-25 12:58:05,324 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_BaseToken__success
[2020-11-25 12:58:05,324 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_BaseToken__fail
[2020-11-25 12:58:05,324 INFO  L130     BoogieDeclarations]: Found specification of procedure name_BaseToken__success
[2020-11-25 12:58:05,324 INFO  L130     BoogieDeclarations]: Found specification of procedure name_BaseToken__fail
[2020-11-25 12:58:05,324 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_BaseToken__success
[2020-11-25 12:58:05,324 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_BaseToken__fail
[2020-11-25 12:58:05,324 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_BaseToken__success
[2020-11-25 12:58:05,325 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_BaseToken__fail
[2020-11-25 12:58:05,325 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BaseToken__success
[2020-11-25 12:58:05,325 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BaseToken__fail
[2020-11-25 12:58:05,325 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalLimit_BaseToken__success
[2020-11-25 12:58:05,325 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalLimit_BaseToken__fail
[2020-11-25 12:58:05,325 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BaseToken__success
[2020-11-25 12:58:05,325 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BaseToken__fail
[2020-11-25 12:58:05,325 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_BaseToken__success
[2020-11-25 12:58:05,325 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_BaseToken__fail
[2020-11-25 12:58:05,325 INFO  L130     BoogieDeclarations]: Found specification of procedure CustomToken_CustomToken_NoBaseCtor__fail
[2020-11-25 12:58:05,325 INFO  L130     BoogieDeclarations]: Found specification of procedure CustomToken_CustomToken__success
[2020-11-25 12:58:05,326 INFO  L130     BoogieDeclarations]: Found specification of procedure CustomToken_CustomToken__fail
[2020-11-25 12:58:05,326 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 12:58:05,326 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 12:58:05,326 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 12:58:05,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 12:58:05,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 12:58:05,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:58:05,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:58:05,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 12:58:05,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 12:58:05,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 12:58:05,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 12:58:05,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 12:58:05,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 12:58:05,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 12:58:05,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 12:58:05,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 12:58:05,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 12:58:05,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 12:58:05,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 12:58:05,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure BaseToken_BaseToken_NoBaseCtor__fail
[2020-11-25 12:58:05,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure BaseToken_BaseToken_NoBaseCtor__success
[2020-11-25 12:58:05,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure BaseToken_BaseToken__fail
[2020-11-25 12:58:05,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure BaseToken_BaseToken__success
[2020-11-25 12:58:05,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_BaseToken__fail
[2020-11-25 12:58:05,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_BaseToken__success
[2020-11-25 12:58:05,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_BaseToken__fail
[2020-11-25 12:58:05,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_BaseToken__success
[2020-11-25 12:58:05,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BaseToken__fail
[2020-11-25 12:58:05,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BaseToken__success
[2020-11-25 12:58:05,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BaseToken__fail
[2020-11-25 12:58:05,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BaseToken__success
[2020-11-25 12:58:05,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_BaseToken__fail
[2020-11-25 12:58:05,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_BaseToken__success
[2020-11-25 12:58:05,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_BaseToken__fail
[2020-11-25 12:58:05,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_BaseToken__success
[2020-11-25 12:58:05,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_BaseToken__fail
[2020-11-25 12:58:05,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_BaseToken__success
[2020-11-25 12:58:05,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_BaseToken__fail
[2020-11-25 12:58:05,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_BaseToken__success
[2020-11-25 12:58:05,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_BaseToken__fail
[2020-11-25 12:58:05,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_BaseToken__success
[2020-11-25 12:58:05,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_BaseToken__fail
[2020-11-25 12:58:05,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_BaseToken__success
[2020-11-25 12:58:05,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BaseToken__fail
[2020-11-25 12:58:05,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BaseToken__success
[2020-11-25 12:58:05,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalLimit_BaseToken__fail
[2020-11-25 12:58:05,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalLimit_BaseToken__success
[2020-11-25 12:58:05,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BaseToken__fail
[2020-11-25 12:58:05,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BaseToken__success
[2020-11-25 12:58:05,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_BaseToken__fail
[2020-11-25 12:58:05,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_BaseToken__success
[2020-11-25 12:58:05,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure CustomToken_CustomToken_NoBaseCtor__fail
[2020-11-25 12:58:05,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure CustomToken_CustomToken_NoBaseCtor__success
[2020-11-25 12:58:05,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure CustomToken_CustomToken__fail
[2020-11-25 12:58:05,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure CustomToken_CustomToken__success
[2020-11-25 12:58:05,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 12:58:05,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 12:58:05,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 12:58:05,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 12:58:05,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 12:58:05,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 12:58:05,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 12:58:05,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 12:58:05,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BaseToken
[2020-11-25 12:58:05,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BaseToken
[2020-11-25 12:58:05,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_CustomToken
[2020-11-25 12:58:05,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 12:58:05,331 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 12:58:05,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 12:58:05,490 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:58:05,533 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:58:05,533 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:58:05,533 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:58:05,855 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 12:58:05,855 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 12:58:05,857 INFO  L202        PluginConnector]: Adding new model CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:58:05 BoogieIcfgContainer
[2020-11-25 12:58:05,857 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:58:05" (2/2) ...
[2020-11-25 12:58:05,857 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 12:58:05,857 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@1cd31269 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:58:05, skipping insertion in model container
[2020-11-25 12:58:05,858 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 12:58:05,858 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 12:58:05,858 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 12:58:05,859 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 12:58:05,859 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:58:05" (1/3) ...
[2020-11-25 12:58:05,860 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@7d94ea97 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:58:05, skipping insertion in model container
[2020-11-25 12:58:05,860 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:58:05" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 12:58:05,894 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:58:05 NWAContainer
[2020-11-25 12:58:05,894 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 12:58:05,894 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 12:58:05,894 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 12:58:05,895 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 12:58:05,896 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:58:05" (3/4) ...
[2020-11-25 12:58:05,896 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@2802346d and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:58:05, skipping insertion in model container
[2020-11-25 12:58:05,896 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:58:05" (4/4) ...
[2020-11-25 12:58:05,899 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 12:58:05,903 INFO  L110   BuchiProductObserver]: Initial RCFG 1045 locations, 1372 edges
[2020-11-25 12:58:05,903 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 12:58:05,913 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 12:58:06,936 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 12:58:06,940 INFO  L110   BuchiProductObserver]: BuchiProgram size 2542 locations, 4497 edges
[2020-11-25 12:58:06,940 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:58:06 BoogieIcfgContainer
[2020-11-25 12:58:06,940 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 12:58:06,941 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 12:58:06,941 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 12:58:06,942 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 12:58:06,942 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:58:06" (1/1) ...
[2020-11-25 12:58:07,033 INFO  L313           BlockEncoder]: Initial Icfg 2542 locations, 4497 edges
[2020-11-25 12:58:07,033 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 12:58:07,034 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 12:58:07,034 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 12:58:07,035 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 12:58:07,046 INFO  L70    emoveInfeasibleEdges]: Removed 54 edges and 9 locations because of local infeasibility
[2020-11-25 12:58:07,054 INFO  L70        RemoveSinkStates]: Removed 14 edges and 9 locations by removing sink states
[2020-11-25 12:58:07,064 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 12:58:07,069 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 12:58:07,072 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 12:58:07,073 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 12:58:07,078 INFO  L313           BlockEncoder]: Encoded RCFG 2506 locations, 4403 edges
[2020-11-25 12:58:07,078 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:58:07 BasicIcfg
[2020-11-25 12:58:07,078 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 12:58:07,079 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 12:58:07,079 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 12:58:07,081 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 12:58:07,082 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:58:07,082 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:58:05" (1/6) ...
[2020-11-25 12:58:07,084 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6cdaea98 and model type CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:58:07, skipping insertion in model container
[2020-11-25 12:58:07,084 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:58:07,084 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:58:05" (2/6) ...
[2020-11-25 12:58:07,084 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6cdaea98 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:58:07, skipping insertion in model container
[2020-11-25 12:58:07,084 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:58:07,084 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:58:05" (3/6) ...
[2020-11-25 12:58:07,084 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6cdaea98 and model type CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:58:07, skipping insertion in model container
[2020-11-25 12:58:07,084 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:58:07,085 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:58:05" (4/6) ...
[2020-11-25 12:58:07,085 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6cdaea98 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:58:07, skipping insertion in model container
[2020-11-25 12:58:07,085 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:58:07,085 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:58:06" (5/6) ...
[2020-11-25 12:58:07,085 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6cdaea98 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 12:58:07, skipping insertion in model container
[2020-11-25 12:58:07,085 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:58:07,085 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:58:07" (6/6) ...
[2020-11-25 12:58:07,087 INFO  L404   chiAutomizerObserver]: Analyzing ICFG CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transferfrom-normal.bpl_BEv2
[2020-11-25 12:58:07,126 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 12:58:07,127 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 12:58:07,127 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 12:58:07,127 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 12:58:07,127 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 12:58:07,127 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 12:58:07,127 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 12:58:07,127 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 12:58:07,127 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 12:58:07,189 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2506 states.
[2020-11-25 12:58:07,237 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:58:07,237 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:58:07,237 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:58:07,246 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:58:07,246 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:58:07,246 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 12:58:07,247 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2506 states.
[2020-11-25 12:58:07,258 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:58:07,258 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:58:07,259 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:58:07,260 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:58:07,260 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_BaseToken0 := false;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3007]              assume null == 0;
[L3008]  CALL        call this := FreshRefGenerator__success();
[L1276]              havoc newRef;
[L1277]              assume Alloc[newRef] == false;
[L1278]              Alloc[newRef] := true;
[L1279]              assume newRef != null;
[L3008]  RET         call this := FreshRefGenerator__success();
[L3009]              assume now >= 0;
[L3010]              assume DType[this] == CustomToken;
[L3011]              assume msgvalue_MSG == 0;
[L3012]              gas := gas - 53000;
[L3013]  CALL        call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
[L867]               havoc __exception;
[L868]               revert := false;
[L869]   COND FALSE  !(__exception)
[L891]   CALL        call CustomToken_CustomToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1930]  CALL        call BaseToken_BaseToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1482]  CALL        call BaseToken_BaseToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1458]              assume msgsender_MSG != null;
[L1459]              Balance[this] := 0;
[L1460]              name_BaseToken[this] := 1657376191;
[L1461]              symbol_BaseToken[this] := -853092303;
[L1462]              decimals_BaseToken[this] := 18;
[L1463]              totalSupply_BaseToken[this] := 525600000000000000000000000;
[L1464]              _totalLimit_BaseToken[this] := 100000000000000000000000000000000;
[L1465]              balanceOf_BaseToken[this] := zeroRefintArr();
[L1466]              sum_balanceOf0[this] := 0;
[L1467]              allowance_BaseToken[this] := zeroRefRefintArr();
[L1468]              sum_allowance1[this] := 0;
[L1482]  RET         call BaseToken_BaseToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1483]  COND FALSE  !(revert)
[L1930]  RET         call BaseToken_BaseToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1931]  COND TRUE   revert
[L891]   RET         call CustomToken_CustomToken__success(this, msgsender_MSG, msgvalue_MSG);
[L892]               assume !revert && gas >= 0;
[L3013]  RET         call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
[L3014]              assume !revert && gas >= 0;

Loop:
[L3017]  CALL        call CorralChoice_CustomToken(this);
[L2882]              havoc msgsender_MSG;
[L2883]              havoc msgvalue_MSG;
[L2884]              havoc choice;
[L2885]              havoc __ret_0_name;
[L2886]              havoc __ret_0_symbol;
[L2887]              havoc __ret_0_decimals;
[L2888]              havoc __ret_0_totalSupply;
[L2889]              havoc __ret_0__totalLimit;
[L2890]              havoc arg483_s0;
[L2891]              havoc __ret_0_balanceOf;
[L2892]              havoc arg484_s0;
[L2893]              havoc arg485_s0;
[L2894]              havoc __ret_0_allowance;
[L2895]              havoc to_s284;
[L2896]              havoc value_s284;
[L2897]              havoc __ret_0_transfer;
[L2898]              havoc from_s321;
[L2899]              havoc to_s321;
[L2900]              havoc value_s321;
[L2901]              havoc __ret_0_transferFrom;
[L2902]              havoc spender_s357;
[L2903]              havoc value_s357;
[L2904]              havoc __ret_0_approve;
[L2905]              havoc spender_s406;
[L2906]              havoc addedValue_s406;
[L2907]              havoc __ret_0_increaseAllowance;
[L2908]              havoc spender_s455;
[L2909]              havoc subtractedValue_s455;
[L2910]              havoc __ret_0_decreaseAllowance;
[L2911]              havoc tmpNow;
[L2912]              havoc gas;
[L2913]              assume gas > 4000000 && gas <= 8000000;
[L2914]              tmpNow := now;
[L2915]              havoc now;
[L2916]              assume now > tmpNow;
[L2917]              assume msgsender_MSG != null;
[L2918]              assume DType[msgsender_MSG] != SafeMath;
[L2919]              assume DType[msgsender_MSG] != BaseToken;
[L2920]              assume DType[msgsender_MSG] != CustomToken;
[L2921]              Alloc[msgsender_MSG] := true;
[L2922]  COND TRUE   choice == 12
[L2923]              gas := gas - 21000;
[L2924]  COND FALSE  !(gas >= 0)
[L3017]  RET         call CorralChoice_CustomToken(this);

[2020-11-25 12:58:07,281 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:58:07,281 INFO  L82        PathProgramCache]: Analyzing trace with hash 21360749, now seen corresponding path program 1 times
[2020-11-25 12:58:07,284 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:58:07,304 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:58:07,365 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:58:07,367 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:58:07,367 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:58:07,371 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:58:07,484 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:58:07,484 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:58:07,486 INFO  L87              Difference]: Start difference. First operand 2506 states. Second operand 4 states.
[2020-11-25 12:58:07,762 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:58:07,762 INFO  L93              Difference]: Finished difference Result 1652 states and 1829 transitions.
[2020-11-25 12:58:07,762 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:58:07,764 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1652 states and 1829 transitions.
[2020-11-25 12:58:07,776 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:58:07,794 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1652 states to 1652 states and 1829 transitions.
[2020-11-25 12:58:07,795 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 12:58:07,797 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 554
[2020-11-25 12:58:07,797 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1652 states and 1829 transitions.
[2020-11-25 12:58:07,804 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:58:07,804 INFO  L728         BuchiCegarLoop]: Abstraction has 1652 states and 1829 transitions.
[2020-11-25 12:58:07,821 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1652 states and 1829 transitions.
[2020-11-25 12:58:07,859 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1652 to 1652.
[2020-11-25 12:58:07,860 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1652 states.
[2020-11-25 12:58:07,864 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1652 states to 1652 states and 1829 transitions.
[2020-11-25 12:58:07,866 INFO  L751         BuchiCegarLoop]: Abstraction has 1652 states and 1829 transitions.
[2020-11-25 12:58:07,866 INFO  L631         BuchiCegarLoop]: Abstraction has 1652 states and 1829 transitions.
[2020-11-25 12:58:07,866 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 12:58:07,866 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1652 states and 1829 transitions.
[2020-11-25 12:58:07,872 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:58:07,872 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:58:07,872 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:58:07,875 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:58:07,875 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_BaseToken0 := false;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3007]              assume null == 0;
[L3008]  CALL        call this := FreshRefGenerator__success();
[L1276]              havoc newRef;
[L1277]              assume Alloc[newRef] == false;
[L1278]              Alloc[newRef] := true;
[L1279]              assume newRef != null;
[L3008]  RET         call this := FreshRefGenerator__success();
[L3009]              assume now >= 0;
[L3010]              assume DType[this] == CustomToken;
[L3011]              assume msgvalue_MSG == 0;
[L3012]              gas := gas - 53000;
[L3013]  CALL        call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
[L867]               havoc __exception;
[L868]               revert := false;
[L869]   COND FALSE  !(__exception)
[L891]   CALL        call CustomToken_CustomToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1930]  CALL        call BaseToken_BaseToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1482]  CALL        call BaseToken_BaseToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1458]              assume msgsender_MSG != null;
[L1459]              Balance[this] := 0;
[L1460]              name_BaseToken[this] := 1657376191;
[L1461]              symbol_BaseToken[this] := -853092303;
[L1462]              decimals_BaseToken[this] := 18;
[L1463]              totalSupply_BaseToken[this] := 525600000000000000000000000;
[L1464]              _totalLimit_BaseToken[this] := 100000000000000000000000000000000;
[L1465]              balanceOf_BaseToken[this] := zeroRefintArr();
[L1466]              sum_balanceOf0[this] := 0;
[L1467]              allowance_BaseToken[this] := zeroRefRefintArr();
[L1468]              sum_allowance1[this] := 0;
[L1482]  RET         call BaseToken_BaseToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1483]  COND FALSE  !(revert)
[L1930]  RET         call BaseToken_BaseToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1931]  COND TRUE   revert
[L891]   RET         call CustomToken_CustomToken__success(this, msgsender_MSG, msgvalue_MSG);
[L892]               assume !revert && gas >= 0;
[L3013]  RET         call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
[L3014]              assume !revert && gas >= 0;
[L3017]  CALL        call CorralChoice_CustomToken(this);
[L2882]              havoc msgsender_MSG;
[L2883]              havoc msgvalue_MSG;
[L2884]              havoc choice;
[L2885]              havoc __ret_0_name;
[L2886]              havoc __ret_0_symbol;
[L2887]              havoc __ret_0_decimals;
[L2888]              havoc __ret_0_totalSupply;
[L2889]              havoc __ret_0__totalLimit;
[L2890]              havoc arg483_s0;
[L2891]              havoc __ret_0_balanceOf;
[L2892]              havoc arg484_s0;
[L2893]              havoc arg485_s0;
[L2894]              havoc __ret_0_allowance;
[L2895]              havoc to_s284;
[L2896]              havoc value_s284;
[L2897]              havoc __ret_0_transfer;
[L2898]              havoc from_s321;
[L2899]              havoc to_s321;
[L2900]              havoc value_s321;
[L2901]              havoc __ret_0_transferFrom;
[L2902]              havoc spender_s357;
[L2903]              havoc value_s357;
[L2904]              havoc __ret_0_approve;
[L2905]              havoc spender_s406;
[L2906]              havoc addedValue_s406;
[L2907]              havoc __ret_0_increaseAllowance;
[L2908]              havoc spender_s455;
[L2909]              havoc subtractedValue_s455;
[L2910]              havoc __ret_0_decreaseAllowance;
[L2911]              havoc tmpNow;
[L2912]              havoc gas;
[L2913]              assume gas > 4000000 && gas <= 8000000;
[L2914]              tmpNow := now;
[L2915]              havoc now;
[L2916]              assume now > tmpNow;
[L2917]              assume msgsender_MSG != null;
[L2918]              assume DType[msgsender_MSG] != SafeMath;
[L2919]              assume DType[msgsender_MSG] != BaseToken;
[L2920]              assume DType[msgsender_MSG] != CustomToken;
[L2921]              Alloc[msgsender_MSG] := true;
[L2922]  COND FALSE  !(choice == 12)
[L2928]  COND FALSE  !(choice == 11)
[L2934]  COND FALSE  !(choice == 10)
[L2940]  COND FALSE  !(choice == 9)
[L2946]  COND FALSE  !(choice == 8)
[L2952]  COND FALSE  !(choice == 7)
[L2958]  COND FALSE  !(choice == 6)
[L2964]  COND FALSE  !(choice == 5)
[L2971]  COND TRUE   choice == 4
[L2972]              gas := gas - 21000;
[L2973]  COND TRUE   gas >= 0
[L2974]              assume value_s321 >= 0 && value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2975]              assume msgvalue_MSG == 0;
[L2976]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s321 && p1 != to_s321) && (p2 != from_s321 || p3 != msgsender_MSG)) && from_s321 != to_s321) && value_s321 <= balanceOf_BaseToken[this][from_s321]) && value_s321 <= allowance_BaseToken[this][from_s321][msgsender_MSG]) && balanceOf_BaseToken[this][to_s321] + value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s321 >= 0) && value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][to_s321] >= 0) && balanceOf_BaseToken[this][to_s321] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][from_s321] >= 0) && balanceOf_BaseToken[this][from_s321] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_BaseToken[this][from_s321][msgsender_MSG] >= 0) && allowance_BaseToken[this][from_s321][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_BaseToken0 := true;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]                 revert := revert_hold;
[L275]               havoc __exception;
[L276]               revert := false;
[L277]   COND FALSE  !(__exception)
[L299]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L1666]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowance_BaseToken[this][from_s321][msgsender_MSG], value_s321);
[L1385]  COND TRUE   !(b_s82 <= a_s82)
[L1386]              revert := true;
[L1666]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowance_BaseToken[this][from_s321][msgsender_MSG], value_s321);
[L1667]  COND TRUE   revert
[L299]   RET         call __ret_0_ := transferFrom~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L300]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((__ret_0_ == true && balanceOf_BaseToken[this][from_s321] == old(balanceOf_BaseToken[this][from_s321]) - value_s321) && balanceOf_BaseToken[this][to_s321] == old(balanceOf_BaseToken[this][to_s321]) + value_s321) && allowance_BaseToken[this][from_s321][msgsender_MSG] == old(allowance_BaseToken[this][from_s321][msgsender_MSG]) - value_s321) && totalSupply_BaseToken[this] == old(totalSupply_BaseToken[this])) && balanceOf_BaseToken[this][p1] == old(balanceOf_BaseToken[this][p1])) && allowance_BaseToken[this][p2][p3] == old(allowance_BaseToken[this][p2][p3]));
[L3]                 revert := revert_hold;
[L2976]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L3017]  RET         call CorralChoice_CustomToken(this);

Loop:
[L3017]  CALL        call CorralChoice_CustomToken(this);
[L2882]              havoc msgsender_MSG;
[L2883]              havoc msgvalue_MSG;
[L2884]              havoc choice;
[L2885]              havoc __ret_0_name;
[L2886]              havoc __ret_0_symbol;
[L2887]              havoc __ret_0_decimals;
[L2888]              havoc __ret_0_totalSupply;
[L2889]              havoc __ret_0__totalLimit;
[L2890]              havoc arg483_s0;
[L2891]              havoc __ret_0_balanceOf;
[L2892]              havoc arg484_s0;
[L2893]              havoc arg485_s0;
[L2894]              havoc __ret_0_allowance;
[L2895]              havoc to_s284;
[L2896]              havoc value_s284;
[L2897]              havoc __ret_0_transfer;
[L2898]              havoc from_s321;
[L2899]              havoc to_s321;
[L2900]              havoc value_s321;
[L2901]              havoc __ret_0_transferFrom;
[L2902]              havoc spender_s357;
[L2903]              havoc value_s357;
[L2904]              havoc __ret_0_approve;
[L2905]              havoc spender_s406;
[L2906]              havoc addedValue_s406;
[L2907]              havoc __ret_0_increaseAllowance;
[L2908]              havoc spender_s455;
[L2909]              havoc subtractedValue_s455;
[L2910]              havoc __ret_0_decreaseAllowance;
[L2911]              havoc tmpNow;
[L2912]              havoc gas;
[L2913]              assume gas > 4000000 && gas <= 8000000;
[L2914]              tmpNow := now;
[L2915]              havoc now;
[L2916]              assume now > tmpNow;
[L2917]              assume msgsender_MSG != null;
[L2918]              assume DType[msgsender_MSG] != SafeMath;
[L2919]              assume DType[msgsender_MSG] != BaseToken;
[L2920]              assume DType[msgsender_MSG] != CustomToken;
[L2921]              Alloc[msgsender_MSG] := true;
[L2922]  COND FALSE  !(choice == 12)
[L2928]  COND FALSE  !(choice == 11)
[L2934]  COND FALSE  !(choice == 10)
[L2940]  COND FALSE  !(choice == 9)
[L2946]  COND FALSE  !(choice == 8)
[L2952]  COND FALSE  !(choice == 7)
[L2958]  COND FALSE  !(choice == 6)
[L2964]  COND FALSE  !(choice == 5)
[L2971]  COND TRUE   choice == 4
[L2972]              gas := gas - 21000;
[L2973]  COND TRUE   gas >= 0
[L2974]              assume value_s321 >= 0 && value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2975]              assume msgvalue_MSG == 0;
[L2976]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s321 && p1 != to_s321) && (p2 != from_s321 || p3 != msgsender_MSG)) && from_s321 != to_s321) && value_s321 <= balanceOf_BaseToken[this][from_s321]) && value_s321 <= allowance_BaseToken[this][from_s321][msgsender_MSG]) && balanceOf_BaseToken[this][to_s321] + value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s321 >= 0) && value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][to_s321] >= 0) && balanceOf_BaseToken[this][to_s321] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][from_s321] >= 0) && balanceOf_BaseToken[this][from_s321] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_BaseToken[this][from_s321][msgsender_MSG] >= 0) && allowance_BaseToken[this][from_s321][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_BaseToken0 := true;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]                 revert := revert_hold;
[L275]               havoc __exception;
[L276]               revert := false;
[L277]   COND FALSE  !(__exception)
[L299]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L1666]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowance_BaseToken[this][from_s321][msgsender_MSG], value_s321);
[L1385]  COND TRUE   !(b_s82 <= a_s82)
[L1386]              revert := true;
[L1666]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowance_BaseToken[this][from_s321][msgsender_MSG], value_s321);
[L1667]  COND TRUE   revert
[L299]   RET         call __ret_0_ := transferFrom~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L300]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((__ret_0_ == true && balanceOf_BaseToken[this][from_s321] == old(balanceOf_BaseToken[this][from_s321]) - value_s321) && balanceOf_BaseToken[this][to_s321] == old(balanceOf_BaseToken[this][to_s321]) + value_s321) && allowance_BaseToken[this][from_s321][msgsender_MSG] == old(allowance_BaseToken[this][from_s321][msgsender_MSG]) - value_s321) && totalSupply_BaseToken[this] == old(totalSupply_BaseToken[this])) && balanceOf_BaseToken[this][p1] == old(balanceOf_BaseToken[this][p1])) && allowance_BaseToken[this][p2][p3] == old(allowance_BaseToken[this][p2][p3]));
[L3]                 revert := revert_hold;
[L2976]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L3017]  RET         call CorralChoice_CustomToken(this);

[2020-11-25 12:58:07,880 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:58:07,880 INFO  L82        PathProgramCache]: Analyzing trace with hash 1134039701, now seen corresponding path program 1 times
[2020-11-25 12:58:07,881 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:58:07,893 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:58:07,918 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:58:07,919 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:58:07,919 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:58:07,920 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:58:07,920 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:58:07,921 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:58:07,921 INFO  L87              Difference]: Start difference. First operand 1652 states and 1829 transitions. cyclomatic complexity: 179 Second operand 4 states.
[2020-11-25 12:58:08,307 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:58:08,307 INFO  L93              Difference]: Finished difference Result 2448 states and 2793 transitions.
[2020-11-25 12:58:08,307 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:58:08,308 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2448 states and 2793 transitions.
[2020-11-25 12:58:08,319 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 12:58:08,330 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2448 states to 2348 states and 2679 transitions.
[2020-11-25 12:58:08,330 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 761
[2020-11-25 12:58:08,331 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 766
[2020-11-25 12:58:08,331 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2348 states and 2679 transitions.
[2020-11-25 12:58:08,335 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:58:08,335 INFO  L728         BuchiCegarLoop]: Abstraction has 2348 states and 2679 transitions.
[2020-11-25 12:58:08,337 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2348 states and 2679 transitions.
[2020-11-25 12:58:08,356 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2348 to 1688.
[2020-11-25 12:58:08,356 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1688 states.
[2020-11-25 12:58:08,358 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1688 states to 1688 states and 1823 transitions.
[2020-11-25 12:58:08,358 INFO  L751         BuchiCegarLoop]: Abstraction has 1688 states and 1823 transitions.
[2020-11-25 12:58:08,358 INFO  L631         BuchiCegarLoop]: Abstraction has 1688 states and 1823 transitions.
[2020-11-25 12:58:08,358 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 12:58:08,358 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1688 states and 1823 transitions.
[2020-11-25 12:58:08,362 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:58:08,362 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:58:08,362 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:58:08,363 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:58:08,363 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_BaseToken0 := false;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3007]              assume null == 0;
[L3008]  CALL        call this := FreshRefGenerator__success();
[L1276]              havoc newRef;
[L1277]              assume Alloc[newRef] == false;
[L1278]              Alloc[newRef] := true;
[L1279]              assume newRef != null;
[L3008]  RET         call this := FreshRefGenerator__success();
[L3009]              assume now >= 0;
[L3010]              assume DType[this] == CustomToken;
[L3011]              assume msgvalue_MSG == 0;
[L3012]              gas := gas - 53000;
[L3013]  CALL        call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
[L867]               havoc __exception;
[L868]               revert := false;
[L869]   COND FALSE  !(__exception)
[L891]   CALL        call CustomToken_CustomToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1930]  CALL        call BaseToken_BaseToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1482]  CALL        call BaseToken_BaseToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1458]              assume msgsender_MSG != null;
[L1459]              Balance[this] := 0;
[L1460]              name_BaseToken[this] := 1657376191;
[L1461]              symbol_BaseToken[this] := -853092303;
[L1462]              decimals_BaseToken[this] := 18;
[L1463]              totalSupply_BaseToken[this] := 525600000000000000000000000;
[L1464]              _totalLimit_BaseToken[this] := 100000000000000000000000000000000;
[L1465]              balanceOf_BaseToken[this] := zeroRefintArr();
[L1466]              sum_balanceOf0[this] := 0;
[L1467]              allowance_BaseToken[this] := zeroRefRefintArr();
[L1468]              sum_allowance1[this] := 0;
[L1482]  RET         call BaseToken_BaseToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1483]  COND FALSE  !(revert)
[L1930]  RET         call BaseToken_BaseToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1931]  COND FALSE  !(revert)
[L1934]  CALL        call CustomToken_CustomToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]              assume msgsender_MSG != null;
[L1905]              Balance[this] := 0;
[L1907]              __var_13 := ConstantToRef(506935249641133462427988555867660131141316463944);
[L1908]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)];
[L1909]              balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)] := totalSupply_BaseToken[this];
[L1910]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)];
[L1911]              assert { :EventEmitted "Transfer_CustomToken" } true;
[L1934]  RET         call CustomToken_CustomToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1935]  COND FALSE  !(revert)
[L891]   RET         call CustomToken_CustomToken__success(this, msgsender_MSG, msgvalue_MSG);
[L892]               assume !revert && gas >= 0;
[L3013]  RET         call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
[L3014]              assume !revert && gas >= 0;
[L3017]  CALL        call CorralChoice_CustomToken(this);
[L2882]              havoc msgsender_MSG;
[L2883]              havoc msgvalue_MSG;
[L2884]              havoc choice;
[L2885]              havoc __ret_0_name;
[L2886]              havoc __ret_0_symbol;
[L2887]              havoc __ret_0_decimals;
[L2888]              havoc __ret_0_totalSupply;
[L2889]              havoc __ret_0__totalLimit;
[L2890]              havoc arg483_s0;
[L2891]              havoc __ret_0_balanceOf;
[L2892]              havoc arg484_s0;
[L2893]              havoc arg485_s0;
[L2894]              havoc __ret_0_allowance;
[L2895]              havoc to_s284;
[L2896]              havoc value_s284;
[L2897]              havoc __ret_0_transfer;
[L2898]              havoc from_s321;
[L2899]              havoc to_s321;
[L2900]              havoc value_s321;
[L2901]              havoc __ret_0_transferFrom;
[L2902]              havoc spender_s357;
[L2903]              havoc value_s357;
[L2904]              havoc __ret_0_approve;
[L2905]              havoc spender_s406;
[L2906]              havoc addedValue_s406;
[L2907]              havoc __ret_0_increaseAllowance;
[L2908]              havoc spender_s455;
[L2909]              havoc subtractedValue_s455;
[L2910]              havoc __ret_0_decreaseAllowance;
[L2911]              havoc tmpNow;
[L2912]              havoc gas;
[L2913]              assume gas > 4000000 && gas <= 8000000;
[L2914]              tmpNow := now;
[L2915]              havoc now;
[L2916]              assume now > tmpNow;
[L2917]              assume msgsender_MSG != null;
[L2918]              assume DType[msgsender_MSG] != SafeMath;
[L2919]              assume DType[msgsender_MSG] != BaseToken;
[L2920]              assume DType[msgsender_MSG] != CustomToken;
[L2921]              Alloc[msgsender_MSG] := true;
[L2922]  COND FALSE  !(choice == 12)
[L2928]  COND FALSE  !(choice == 11)
[L2934]  COND FALSE  !(choice == 10)
[L2940]  COND FALSE  !(choice == 9)
[L2946]  COND FALSE  !(choice == 8)
[L2952]  COND FALSE  !(choice == 7)
[L2958]  COND FALSE  !(choice == 6)
[L2964]  COND FALSE  !(choice == 5)
[L2971]  COND TRUE   choice == 4
[L2972]              gas := gas - 21000;
[L2973]  COND TRUE   gas >= 0
[L2974]              assume value_s321 >= 0 && value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2975]              assume msgvalue_MSG == 0;
[L2976]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s321 && p1 != to_s321) && (p2 != from_s321 || p3 != msgsender_MSG)) && from_s321 != to_s321) && value_s321 <= balanceOf_BaseToken[this][from_s321]) && value_s321 <= allowance_BaseToken[this][from_s321][msgsender_MSG]) && balanceOf_BaseToken[this][to_s321] + value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s321 >= 0) && value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][to_s321] >= 0) && balanceOf_BaseToken[this][to_s321] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][from_s321] >= 0) && balanceOf_BaseToken[this][from_s321] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_BaseToken[this][from_s321][msgsender_MSG] >= 0) && allowance_BaseToken[this][from_s321][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_BaseToken0 := true;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]                 revert := revert_hold;
[L275]               havoc __exception;
[L276]               revert := false;
[L277]   COND TRUE   __exception
[L278]               __tmp__Balance := Balance;
[L279]               __tmp__DType := DType;
[L280]               __tmp__Alloc := Alloc;
[L281]               __tmp__balance_ADDR := balance_ADDR;
[L282]               __tmp__M_Ref_int := M_Ref_int;
[L283]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L284]               __tmp__alloc_allowance_BaseToken_lvl0 := alloc_allowance_BaseToken_lvl0;
[L285]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L286]               __tmp__sum_allowance1 := sum_allowance1;
[L287]               __tmp__Length := Length;
[L288]               __tmp__now := now;
[L289]               __tmp__name_BaseToken := name_BaseToken;
[L290]               __tmp__symbol_BaseToken := symbol_BaseToken;
[L291]               __tmp__decimals_BaseToken := decimals_BaseToken;
[L292]               __tmp__totalSupply_BaseToken := totalSupply_BaseToken;
[L293]               __tmp___totalLimit_BaseToken := _totalLimit_BaseToken;
[L294]               __tmp__balanceOf_BaseToken := balanceOf_BaseToken;
[L295]               __tmp__allowance_BaseToken := allowance_BaseToken;
[L296]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L1639]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG], value_s321);
[L1373]  COND TRUE   !(b_s82 <= a_s82)
[L1374]              revert := true;
[L1639]  RET         call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG], value_s321);
[L1640]  COND TRUE   revert
[L296]   RET         call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L297]               assume revert || gas < 0;
[L2976]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L3017]  RET         call CorralChoice_CustomToken(this);

Loop:
[L3017]  CALL        call CorralChoice_CustomToken(this);
[L2882]              havoc msgsender_MSG;
[L2883]              havoc msgvalue_MSG;
[L2884]              havoc choice;
[L2885]              havoc __ret_0_name;
[L2886]              havoc __ret_0_symbol;
[L2887]              havoc __ret_0_decimals;
[L2888]              havoc __ret_0_totalSupply;
[L2889]              havoc __ret_0__totalLimit;
[L2890]              havoc arg483_s0;
[L2891]              havoc __ret_0_balanceOf;
[L2892]              havoc arg484_s0;
[L2893]              havoc arg485_s0;
[L2894]              havoc __ret_0_allowance;
[L2895]              havoc to_s284;
[L2896]              havoc value_s284;
[L2897]              havoc __ret_0_transfer;
[L2898]              havoc from_s321;
[L2899]              havoc to_s321;
[L2900]              havoc value_s321;
[L2901]              havoc __ret_0_transferFrom;
[L2902]              havoc spender_s357;
[L2903]              havoc value_s357;
[L2904]              havoc __ret_0_approve;
[L2905]              havoc spender_s406;
[L2906]              havoc addedValue_s406;
[L2907]              havoc __ret_0_increaseAllowance;
[L2908]              havoc spender_s455;
[L2909]              havoc subtractedValue_s455;
[L2910]              havoc __ret_0_decreaseAllowance;
[L2911]              havoc tmpNow;
[L2912]              havoc gas;
[L2913]              assume gas > 4000000 && gas <= 8000000;
[L2914]              tmpNow := now;
[L2915]              havoc now;
[L2916]              assume now > tmpNow;
[L2917]              assume msgsender_MSG != null;
[L2918]              assume DType[msgsender_MSG] != SafeMath;
[L2919]              assume DType[msgsender_MSG] != BaseToken;
[L2920]              assume DType[msgsender_MSG] != CustomToken;
[L2921]              Alloc[msgsender_MSG] := true;
[L2922]  COND FALSE  !(choice == 12)
[L2928]  COND FALSE  !(choice == 11)
[L2934]  COND FALSE  !(choice == 10)
[L2940]  COND FALSE  !(choice == 9)
[L2946]  COND FALSE  !(choice == 8)
[L2952]  COND FALSE  !(choice == 7)
[L2958]  COND FALSE  !(choice == 6)
[L2964]  COND FALSE  !(choice == 5)
[L2971]  COND TRUE   choice == 4
[L2972]              gas := gas - 21000;
[L2973]  COND TRUE   gas >= 0
[L2974]              assume value_s321 >= 0 && value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2975]              assume msgvalue_MSG == 0;
[L2976]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s321 && p1 != to_s321) && (p2 != from_s321 || p3 != msgsender_MSG)) && from_s321 != to_s321) && value_s321 <= balanceOf_BaseToken[this][from_s321]) && value_s321 <= allowance_BaseToken[this][from_s321][msgsender_MSG]) && balanceOf_BaseToken[this][to_s321] + value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s321 >= 0) && value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][to_s321] >= 0) && balanceOf_BaseToken[this][to_s321] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][from_s321] >= 0) && balanceOf_BaseToken[this][from_s321] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_BaseToken[this][from_s321][msgsender_MSG] >= 0) && allowance_BaseToken[this][from_s321][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_BaseToken0 := true;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]                 revert := revert_hold;
[L275]               havoc __exception;
[L276]               revert := false;
[L277]   COND TRUE   __exception
[L278]               __tmp__Balance := Balance;
[L279]               __tmp__DType := DType;
[L280]               __tmp__Alloc := Alloc;
[L281]               __tmp__balance_ADDR := balance_ADDR;
[L282]               __tmp__M_Ref_int := M_Ref_int;
[L283]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L284]               __tmp__alloc_allowance_BaseToken_lvl0 := alloc_allowance_BaseToken_lvl0;
[L285]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L286]               __tmp__sum_allowance1 := sum_allowance1;
[L287]               __tmp__Length := Length;
[L288]               __tmp__now := now;
[L289]               __tmp__name_BaseToken := name_BaseToken;
[L290]               __tmp__symbol_BaseToken := symbol_BaseToken;
[L291]               __tmp__decimals_BaseToken := decimals_BaseToken;
[L292]               __tmp__totalSupply_BaseToken := totalSupply_BaseToken;
[L293]               __tmp___totalLimit_BaseToken := _totalLimit_BaseToken;
[L294]               __tmp__balanceOf_BaseToken := balanceOf_BaseToken;
[L295]               __tmp__allowance_BaseToken := allowance_BaseToken;
[L296]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L1639]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG], value_s321);
[L1373]  COND TRUE   !(b_s82 <= a_s82)
[L1374]              revert := true;
[L1639]  RET         call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG], value_s321);
[L1640]  COND TRUE   revert
[L296]   RET         call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L297]               assume revert || gas < 0;
[L2976]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L3017]  RET         call CorralChoice_CustomToken(this);

[2020-11-25 12:58:08,367 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:58:08,367 INFO  L82        PathProgramCache]: Analyzing trace with hash -1230502084, now seen corresponding path program 1 times
[2020-11-25 12:58:08,367 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:58:08,379 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:58:08,428 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:58:08,429 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:58:08,429 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 12:58:08,429 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:58:08,429 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 12:58:08,429 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 12:58:08,429 INFO  L87              Difference]: Start difference. First operand 1688 states and 1823 transitions. cyclomatic complexity: 137 Second operand 7 states.
[2020-11-25 12:58:09,202 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:58:09,203 INFO  L93              Difference]: Finished difference Result 1844 states and 1993 transitions.
[2020-11-25 12:58:09,203 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 12:58:09,203 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1844 states and 1993 transitions.
[2020-11-25 12:58:09,210 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 12:58:09,217 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1844 states to 1844 states and 1993 transitions.
[2020-11-25 12:58:09,217 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 627
[2020-11-25 12:58:09,218 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 627
[2020-11-25 12:58:09,218 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1844 states and 1993 transitions.
[2020-11-25 12:58:09,220 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:58:09,220 INFO  L728         BuchiCegarLoop]: Abstraction has 1844 states and 1993 transitions.
[2020-11-25 12:58:09,221 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1844 states and 1993 transitions.
[2020-11-25 12:58:09,237 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1844 to 1742.
[2020-11-25 12:58:09,237 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1742 states.
[2020-11-25 12:58:09,240 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1742 states to 1742 states and 1881 transitions.
[2020-11-25 12:58:09,241 INFO  L751         BuchiCegarLoop]: Abstraction has 1742 states and 1881 transitions.
[2020-11-25 12:58:09,241 INFO  L631         BuchiCegarLoop]: Abstraction has 1742 states and 1881 transitions.
[2020-11-25 12:58:09,241 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 12:58:09,241 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1742 states and 1881 transitions.
[2020-11-25 12:58:09,245 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:58:09,245 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:58:09,245 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:58:09,247 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:58:09,247 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_BaseToken0 := false;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3007]              assume null == 0;
[L3008]  CALL        call this := FreshRefGenerator__success();
[L1276]              havoc newRef;
[L1277]              assume Alloc[newRef] == false;
[L1278]              Alloc[newRef] := true;
[L1279]              assume newRef != null;
[L3008]  RET         call this := FreshRefGenerator__success();
[L3009]              assume now >= 0;
[L3010]              assume DType[this] == CustomToken;
[L3011]              assume msgvalue_MSG == 0;
[L3012]              gas := gas - 53000;
[L3013]  CALL        call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
[L867]               havoc __exception;
[L868]               revert := false;
[L869]   COND FALSE  !(__exception)
[L891]   CALL        call CustomToken_CustomToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1930]  CALL        call BaseToken_BaseToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1482]  CALL        call BaseToken_BaseToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1458]              assume msgsender_MSG != null;
[L1459]              Balance[this] := 0;
[L1460]              name_BaseToken[this] := 1657376191;
[L1461]              symbol_BaseToken[this] := -853092303;
[L1462]              decimals_BaseToken[this] := 18;
[L1463]              totalSupply_BaseToken[this] := 525600000000000000000000000;
[L1464]              _totalLimit_BaseToken[this] := 100000000000000000000000000000000;
[L1465]              balanceOf_BaseToken[this] := zeroRefintArr();
[L1466]              sum_balanceOf0[this] := 0;
[L1467]              allowance_BaseToken[this] := zeroRefRefintArr();
[L1468]              sum_allowance1[this] := 0;
[L1482]  RET         call BaseToken_BaseToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1483]  COND FALSE  !(revert)
[L1930]  RET         call BaseToken_BaseToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1931]  COND FALSE  !(revert)
[L1934]  CALL        call CustomToken_CustomToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]              assume msgsender_MSG != null;
[L1905]              Balance[this] := 0;
[L1907]              __var_13 := ConstantToRef(506935249641133462427988555867660131141316463944);
[L1908]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)];
[L1909]              balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)] := totalSupply_BaseToken[this];
[L1910]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)];
[L1911]              assert { :EventEmitted "Transfer_CustomToken" } true;
[L1934]  RET         call CustomToken_CustomToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1935]  COND FALSE  !(revert)
[L891]   RET         call CustomToken_CustomToken__success(this, msgsender_MSG, msgvalue_MSG);
[L892]               assume !revert && gas >= 0;
[L3013]  RET         call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
[L3014]              assume !revert && gas >= 0;
[L3017]  CALL        call CorralChoice_CustomToken(this);
[L2882]              havoc msgsender_MSG;
[L2883]              havoc msgvalue_MSG;
[L2884]              havoc choice;
[L2885]              havoc __ret_0_name;
[L2886]              havoc __ret_0_symbol;
[L2887]              havoc __ret_0_decimals;
[L2888]              havoc __ret_0_totalSupply;
[L2889]              havoc __ret_0__totalLimit;
[L2890]              havoc arg483_s0;
[L2891]              havoc __ret_0_balanceOf;
[L2892]              havoc arg484_s0;
[L2893]              havoc arg485_s0;
[L2894]              havoc __ret_0_allowance;
[L2895]              havoc to_s284;
[L2896]              havoc value_s284;
[L2897]              havoc __ret_0_transfer;
[L2898]              havoc from_s321;
[L2899]              havoc to_s321;
[L2900]              havoc value_s321;
[L2901]              havoc __ret_0_transferFrom;
[L2902]              havoc spender_s357;
[L2903]              havoc value_s357;
[L2904]              havoc __ret_0_approve;
[L2905]              havoc spender_s406;
[L2906]              havoc addedValue_s406;
[L2907]              havoc __ret_0_increaseAllowance;
[L2908]              havoc spender_s455;
[L2909]              havoc subtractedValue_s455;
[L2910]              havoc __ret_0_decreaseAllowance;
[L2911]              havoc tmpNow;
[L2912]              havoc gas;
[L2913]              assume gas > 4000000 && gas <= 8000000;
[L2914]              tmpNow := now;
[L2915]              havoc now;
[L2916]              assume now > tmpNow;
[L2917]              assume msgsender_MSG != null;
[L2918]              assume DType[msgsender_MSG] != SafeMath;
[L2919]              assume DType[msgsender_MSG] != BaseToken;
[L2920]              assume DType[msgsender_MSG] != CustomToken;
[L2921]              Alloc[msgsender_MSG] := true;
[L2922]  COND FALSE  !(choice == 12)
[L2928]  COND FALSE  !(choice == 11)
[L2934]  COND FALSE  !(choice == 10)
[L2940]  COND FALSE  !(choice == 9)
[L2946]  COND FALSE  !(choice == 8)
[L2952]  COND FALSE  !(choice == 7)
[L2958]  COND FALSE  !(choice == 6)
[L2964]  COND FALSE  !(choice == 5)
[L2971]  COND TRUE   choice == 4
[L2972]              gas := gas - 21000;
[L2973]  COND TRUE   gas >= 0
[L2974]              assume value_s321 >= 0 && value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2975]              assume msgvalue_MSG == 0;
[L2976]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s321 && p1 != to_s321) && (p2 != from_s321 || p3 != msgsender_MSG)) && from_s321 != to_s321) && value_s321 <= balanceOf_BaseToken[this][from_s321]) && value_s321 <= allowance_BaseToken[this][from_s321][msgsender_MSG]) && balanceOf_BaseToken[this][to_s321] + value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s321 >= 0) && value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][to_s321] >= 0) && balanceOf_BaseToken[this][to_s321] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][from_s321] >= 0) && balanceOf_BaseToken[this][from_s321] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_BaseToken[this][from_s321][msgsender_MSG] >= 0) && allowance_BaseToken[this][from_s321][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_BaseToken0 := true;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]                 revert := revert_hold;
[L275]               havoc __exception;
[L276]               revert := false;
[L277]   COND TRUE   __exception
[L278]               __tmp__Balance := Balance;
[L279]               __tmp__DType := DType;
[L280]               __tmp__Alloc := Alloc;
[L281]               __tmp__balance_ADDR := balance_ADDR;
[L282]               __tmp__M_Ref_int := M_Ref_int;
[L283]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L284]               __tmp__alloc_allowance_BaseToken_lvl0 := alloc_allowance_BaseToken_lvl0;
[L285]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L286]               __tmp__sum_allowance1 := sum_allowance1;
[L287]               __tmp__Length := Length;
[L288]               __tmp__now := now;
[L289]               __tmp__name_BaseToken := name_BaseToken;
[L290]               __tmp__symbol_BaseToken := symbol_BaseToken;
[L291]               __tmp__decimals_BaseToken := decimals_BaseToken;
[L292]               __tmp__totalSupply_BaseToken := totalSupply_BaseToken;
[L293]               __tmp___totalLimit_BaseToken := _totalLimit_BaseToken;
[L294]               __tmp__balanceOf_BaseToken := balanceOf_BaseToken;
[L295]               __tmp__allowance_BaseToken := allowance_BaseToken;
[L296]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L1639]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG], value_s321);
[L1373]  COND FALSE  !(!(b_s82 <= a_s82))
[L1377]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1378]              __ret_0_ := c_s82;
[L1639]  RET         call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG], value_s321);
[L1640]  COND FALSE  !(revert)
[L1643]              __tmp__sum_allowance1[from_s321] := __tmp__sum_allowance1[from_s321] - __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG];
[L1644]              __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG] := __var_7;
[L1645]              __tmp__sum_allowance1[from_s321] := __tmp__sum_allowance1[from_s321] + __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG];
[L1646]  COND TRUE   __tmp__DType[this] == CustomToken
[L1647]  CALL        call _transfer~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L1493]              __var_1 := null;
[L1494]  COND TRUE   !(to_s217 != null)
[L1495]              revert := true;
[L1647]  RET         call _transfer~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L1648]  COND TRUE   revert
[L296]   RET         call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L297]               assume revert || gas < 0;
[L2976]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L3017]  RET         call CorralChoice_CustomToken(this);

Loop:
[L3017]  CALL        call CorralChoice_CustomToken(this);
[L2882]              havoc msgsender_MSG;
[L2883]              havoc msgvalue_MSG;
[L2884]              havoc choice;
[L2885]              havoc __ret_0_name;
[L2886]              havoc __ret_0_symbol;
[L2887]              havoc __ret_0_decimals;
[L2888]              havoc __ret_0_totalSupply;
[L2889]              havoc __ret_0__totalLimit;
[L2890]              havoc arg483_s0;
[L2891]              havoc __ret_0_balanceOf;
[L2892]              havoc arg484_s0;
[L2893]              havoc arg485_s0;
[L2894]              havoc __ret_0_allowance;
[L2895]              havoc to_s284;
[L2896]              havoc value_s284;
[L2897]              havoc __ret_0_transfer;
[L2898]              havoc from_s321;
[L2899]              havoc to_s321;
[L2900]              havoc value_s321;
[L2901]              havoc __ret_0_transferFrom;
[L2902]              havoc spender_s357;
[L2903]              havoc value_s357;
[L2904]              havoc __ret_0_approve;
[L2905]              havoc spender_s406;
[L2906]              havoc addedValue_s406;
[L2907]              havoc __ret_0_increaseAllowance;
[L2908]              havoc spender_s455;
[L2909]              havoc subtractedValue_s455;
[L2910]              havoc __ret_0_decreaseAllowance;
[L2911]              havoc tmpNow;
[L2912]              havoc gas;
[L2913]              assume gas > 4000000 && gas <= 8000000;
[L2914]              tmpNow := now;
[L2915]              havoc now;
[L2916]              assume now > tmpNow;
[L2917]              assume msgsender_MSG != null;
[L2918]              assume DType[msgsender_MSG] != SafeMath;
[L2919]              assume DType[msgsender_MSG] != BaseToken;
[L2920]              assume DType[msgsender_MSG] != CustomToken;
[L2921]              Alloc[msgsender_MSG] := true;
[L2922]  COND FALSE  !(choice == 12)
[L2928]  COND FALSE  !(choice == 11)
[L2934]  COND FALSE  !(choice == 10)
[L2940]  COND FALSE  !(choice == 9)
[L2946]  COND FALSE  !(choice == 8)
[L2952]  COND FALSE  !(choice == 7)
[L2958]  COND FALSE  !(choice == 6)
[L2964]  COND FALSE  !(choice == 5)
[L2971]  COND TRUE   choice == 4
[L2972]              gas := gas - 21000;
[L2973]  COND TRUE   gas >= 0
[L2974]              assume value_s321 >= 0 && value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2975]              assume msgvalue_MSG == 0;
[L2976]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s321 && p1 != to_s321) && (p2 != from_s321 || p3 != msgsender_MSG)) && from_s321 != to_s321) && value_s321 <= balanceOf_BaseToken[this][from_s321]) && value_s321 <= allowance_BaseToken[this][from_s321][msgsender_MSG]) && balanceOf_BaseToken[this][to_s321] + value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s321 >= 0) && value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][to_s321] >= 0) && balanceOf_BaseToken[this][to_s321] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][from_s321] >= 0) && balanceOf_BaseToken[this][from_s321] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_BaseToken[this][from_s321][msgsender_MSG] >= 0) && allowance_BaseToken[this][from_s321][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_BaseToken0 := true;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]                 revert := revert_hold;
[L275]               havoc __exception;
[L276]               revert := false;
[L277]   COND TRUE   __exception
[L278]               __tmp__Balance := Balance;
[L279]               __tmp__DType := DType;
[L280]               __tmp__Alloc := Alloc;
[L281]               __tmp__balance_ADDR := balance_ADDR;
[L282]               __tmp__M_Ref_int := M_Ref_int;
[L283]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L284]               __tmp__alloc_allowance_BaseToken_lvl0 := alloc_allowance_BaseToken_lvl0;
[L285]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L286]               __tmp__sum_allowance1 := sum_allowance1;
[L287]               __tmp__Length := Length;
[L288]               __tmp__now := now;
[L289]               __tmp__name_BaseToken := name_BaseToken;
[L290]               __tmp__symbol_BaseToken := symbol_BaseToken;
[L291]               __tmp__decimals_BaseToken := decimals_BaseToken;
[L292]               __tmp__totalSupply_BaseToken := totalSupply_BaseToken;
[L293]               __tmp___totalLimit_BaseToken := _totalLimit_BaseToken;
[L294]               __tmp__balanceOf_BaseToken := balanceOf_BaseToken;
[L295]               __tmp__allowance_BaseToken := allowance_BaseToken;
[L296]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L1639]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG], value_s321);
[L1373]  COND FALSE  !(!(b_s82 <= a_s82))
[L1377]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1378]              __ret_0_ := c_s82;
[L1639]  RET         call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG], value_s321);
[L1640]  COND FALSE  !(revert)
[L1643]              __tmp__sum_allowance1[from_s321] := __tmp__sum_allowance1[from_s321] - __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG];
[L1644]              __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG] := __var_7;
[L1645]              __tmp__sum_allowance1[from_s321] := __tmp__sum_allowance1[from_s321] + __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG];
[L1646]  COND TRUE   __tmp__DType[this] == CustomToken
[L1647]  CALL        call _transfer~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L1493]              __var_1 := null;
[L1494]  COND TRUE   !(to_s217 != null)
[L1495]              revert := true;
[L1647]  RET         call _transfer~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L1648]  COND TRUE   revert
[L296]   RET         call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L297]               assume revert || gas < 0;
[L2976]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L3017]  RET         call CorralChoice_CustomToken(this);

[2020-11-25 12:58:09,250 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:58:09,250 INFO  L82        PathProgramCache]: Analyzing trace with hash 837058858, now seen corresponding path program 1 times
[2020-11-25 12:58:09,251 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:58:09,264 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:58:09,288 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:58:09,347 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:58:09,347 INFO  L82        PathProgramCache]: Analyzing trace with hash 1712343437, now seen corresponding path program 1 times
[2020-11-25 12:58:09,348 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:58:09,357 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:58:09,366 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:58:09,381 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:58:09,382 INFO  L82        PathProgramCache]: Analyzing trace with hash 917760502, now seen corresponding path program 1 times
[2020-11-25 12:58:09,383 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:58:09,429 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:58:09,455 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
[2020-11-25 12:58:10,107 WARN  L188               SmtUtils]: Spent 314.00 ms on a formula simplification. DAG size of input: 185 DAG size of output: 176
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
Garbage collection #8: 5281 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 5281 to 10559
[2020-11-25 12:58:10,419 WARN  L188               SmtUtils]: Spent 275.00 ms on a formula simplification. DAG size of input: 129 DAG size of output: 123
[2020-11-25 12:58:10,663 WARN  L188               SmtUtils]: Spent 243.00 ms on a formula simplification that was a NOOP. DAG size: 268
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 6271 to 12541
[2020-11-25 12:58:11,677 WARN  L188               SmtUtils]: Spent 995.00 ms on a formula simplification. DAG size of input: 226 DAG size of output: 226
[2020-11-25 12:58:13,089 WARN  L188               SmtUtils]: Spent 1.41 s on a formula simplification. DAG size of input: 287 DAG size of output: 259
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 12073 to 24137
Garbage collection #1: 59 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3517 to 7027
[2020-11-25 12:58:13,474 WARN  L188               SmtUtils]: Spent 361.00 ms on a formula simplification. DAG size of input: 167 DAG size of output: 161
[2020-11-25 12:58:13,748 WARN  L188               SmtUtils]: Spent 272.00 ms on a formula simplification that was a NOOP. DAG size: 301
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-25 12:58:14,391 WARN  L188               SmtUtils]: Spent 634.00 ms on a formula simplification. DAG size of input: 242 DAG size of output: 242
[2020-11-25 12:58:14,675 WARN  L188               SmtUtils]: Spent 282.00 ms on a formula simplification that was a NOOP. DAG size: 242
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 12:58:17,920 WARN  L188               SmtUtils]: Spent 3.23 s on a formula simplification. DAG size of input: 200 DAG size of output: 180
[2020-11-25 12:58:17,929 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
[2020-11-25 12:58:18,386 WARN  L188               SmtUtils]: Spent 169.00 ms on a formula simplification. DAG size of input: 185 DAG size of output: 176
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 12:58:18,592 WARN  L188               SmtUtils]: Spent 195.00 ms on a formula simplification. DAG size of input: 129 DAG size of output: 123
[2020-11-25 12:58:18,794 WARN  L188               SmtUtils]: Spent 200.00 ms on a formula simplification that was a NOOP. DAG size: 268
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 12:58:19,588 WARN  L188               SmtUtils]: Spent 786.00 ms on a formula simplification. DAG size of input: 226 DAG size of output: 226
[2020-11-25 12:58:20,608 WARN  L188               SmtUtils]: Spent 1.02 s on a formula simplification. DAG size of input: 286 DAG size of output: 259
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 12:58:22,522 WARN  L188               SmtUtils]: Spent 1.90 s on a formula simplification. DAG size of input: 196 DAG size of output: 188
[2020-11-25 12:58:24,068 WARN  L188               SmtUtils]: Spent 1.55 s on a formula simplification that was a NOOP. DAG size: 328
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-25 12:58:26,956 WARN  L188               SmtUtils]: Spent 2.85 s on a formula simplification. DAG size of input: 287 DAG size of output: 266
[2020-11-25 12:58:28,780 WARN  L188               SmtUtils]: Spent 1.82 s on a formula simplification. DAG size of input: 441 DAG size of output: 424
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #7: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4943 to 9883
[2020-11-25 12:58:32,442 WARN  L188               SmtUtils]: Spent 3.61 s on a formula simplification. DAG size of input: 361 DAG size of output: 230
[2020-11-25 12:58:33,253 WARN  L188               SmtUtils]: Spent 798.00 ms on a formula simplification that was a NOOP. DAG size: 331
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6661 to 13313
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
[2020-11-25 12:58:36,435 WARN  L188               SmtUtils]: Spent 3.15 s on a formula simplification. DAG size of input: 316 DAG size of output: 220
[2020-11-25 12:58:37,775 WARN  L188               SmtUtils]: Spent 1.34 s on a formula simplification. DAG size of input: 323 DAG size of output: 322
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6661 to 13313
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 13313 to 26597
Garbage collection #9: 26597 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 26597 to 53189
Garbage collection #10: 53189 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 53189 to 103183
[2020-11-25 12:58:44,175 WARN  L188               SmtUtils]: Spent 6.34 s on a formula simplification. DAG size of input: 466 DAG size of output: 318
[2020-11-25 12:58:44,190 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:58:44,208 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:58:44,216 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:58:44 BasicIcfg
[2020-11-25 12:58:44,216 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 12:58:44,216 INFO  L168              Benchmark]: Toolchain (without parser) took 39110.65 ms. Allocated memory was 1.0 GB in the beginning and 2.9 GB in the end (delta: 1.9 GB). Free memory was 940.6 MB in the beginning and 1.8 GB in the end (delta: -828.2 MB). Peak memory consumption was 2.1 GB. Max. memory is 15.3 GB.
[2020-11-25 12:58:44,217 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:58:44,217 INFO  L168              Benchmark]: Boogie Preprocessor took 83.95 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 12:58:44,217 INFO  L168              Benchmark]: UtopiaSpecLang took 60.53 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:58:44,218 INFO  L168              Benchmark]: Boogie Printer took 12.74 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:58:44,218 INFO  L168              Benchmark]: RCFGBuilder took 592.88 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 838.6 MB in the end (delta: 85.9 MB). Peak memory consumption was 85.9 MB. Max. memory is 15.3 GB.
[2020-11-25 12:58:44,218 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.24 ms. Allocated memory is still 1.0 GB. Free memory was 838.6 MB in the beginning and 829.6 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 12:58:44,218 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1046.15 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 50.9 MB). Free memory was 829.6 MB in the beginning and 741.3 MB in the end (delta: 88.3 MB). Peak memory consumption was 139.2 MB. Max. memory is 15.3 GB.
[2020-11-25 12:58:44,219 INFO  L168              Benchmark]: BlockEncodingV2 took 137.74 ms. Allocated memory is still 1.1 GB. Free memory was 741.3 MB in the beginning and 698.9 MB in the end (delta: 42.3 MB). Peak memory consumption was 42.3 MB. Max. memory is 15.3 GB.
[2020-11-25 12:58:44,219 INFO  L168              Benchmark]: BuchiAutomizer took 37137.37 ms. Allocated memory was 1.1 GB in the beginning and 2.9 GB in the end (delta: 1.9 GB). Free memory was 698.9 MB in the beginning and 1.8 GB in the end (delta: -1.1 GB). Peak memory consumption was 1.8 GB. Max. memory is 15.3 GB.
[2020-11-25 12:58:44,221 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2542 locations, 4497 edges
  - StatisticsResult: Encoded RCFG
    2506 locations, 4403 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 83.95 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 60.53 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 12.74 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 592.88 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 838.6 MB in the end (delta: 85.9 MB). Peak memory consumption was 85.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.24 ms. Allocated memory is still 1.0 GB. Free memory was 838.6 MB in the beginning and 829.6 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1046.15 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 50.9 MB). Free memory was 829.6 MB in the beginning and 741.3 MB in the end (delta: 88.3 MB). Peak memory consumption was 139.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 137.74 ms. Allocated memory is still 1.1 GB. Free memory was 741.3 MB in the beginning and 698.9 MB in the end (delta: 42.3 MB). Peak memory consumption was 42.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 37137.37 ms. Allocated memory was 1.1 GB in the beginning and 2.9 GB in the end (delta: 1.9 GB). Free memory was 698.9 MB in the beginning and 1.8 GB in the end (delta: -1.1 GB). Peak memory consumption was 1.8 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1045 locations, 1372 edges
  - StatisticsResult: BuchiProgram size
    2542 locations, 4497 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 7 locations. The remainder module has 1742 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 37.0s and 4 iterations.  TraceHistogramMax:1. Analysis of lassos took 35.1s. Construction of modules took 1.1s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 3 MinimizatonAttempts, 762 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1742 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 5851 SDtfs, 5613 SDslu, 8480 SDs, 0 SdLazy, 3689 SolverSat, 1137 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.1s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(506935249641133462427988555867660131141316463958) = (new CustomToken)({from : 506935249641133462427988555867660131141316463963});
[L867]               havoc __exception;
[L868]               revert := false;
[L869]   COND FALSE  !(__exception)
[L891]   CALL        call CustomToken_CustomToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1930]  CALL        call BaseToken_BaseToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1482]  CALL        call BaseToken_BaseToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1458]              assume msgsender_MSG != null;
[L1459]              Balance[this] := 0;
[L1460]              name_BaseToken[this] := 1657376191;
[L1461]              symbol_BaseToken[this] := -853092303;
[L1462]              decimals_BaseToken[this] := 18;
[L1463]              totalSupply_BaseToken[this] := 525600000000000000000000000;
[L1464]              _totalLimit_BaseToken[this] := 100000000000000000000000000000000;
[L1465]              balanceOf_BaseToken[this] := zeroRefintArr();
[L1466]              sum_balanceOf0[this] := 0;
[L1467]              allowance_BaseToken[this] := zeroRefRefintArr();
[L1468]              sum_allowance1[this] := 0;
[L1482]  RET         call BaseToken_BaseToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1483]  COND FALSE  !(revert)
[L1930]  RET         call BaseToken_BaseToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1931]  COND FALSE  !(revert)
[L1934]  CALL        call CustomToken_CustomToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]              assume msgsender_MSG != null;
[L1905]              Balance[this] := 0;
[L1907]              __var_13 := ConstantToRef(506935249641133462427988555867660131141316463944);
[L1908]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)];
[L1909]              balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)] := totalSupply_BaseToken[this];
[L1910]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)];
[L1911]              assert { :EventEmitted "Transfer_CustomToken" } true;
[L1934]  RET         call CustomToken_CustomToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1935]  COND FALSE  !(revert)
[L891]   RET         call CustomToken_CustomToken__success(this, msgsender_MSG, msgvalue_MSG);
[L892]               assume !revert && gas >= 0;
[L3013]  RET         call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
BaseToken(506935249641133462427988555867660131141316463958).transferFrom~address~address~uint256.gas(3979002)({from : 506935249641133462427988555867660131141316463954, from : 506935249641133462427988555867660131141316463955, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s321 && p1 != to_s321) && (p2 != from_s321 || p3 != msgsender_MSG)) && from_s321 != to_s321) && value_s321 <= balanceOf_BaseToken[this][from_s321]) && value_s321 <= allowance_BaseToken[this][from_s321][msgsender_MSG]) && balanceOf_BaseToken[this][to_s321] + value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s321 >= 0) && value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][to_s321] >= 0) && balanceOf_BaseToken[this][to_s321] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][from_s321] >= 0) && balanceOf_BaseToken[this][from_s321] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_BaseToken[this][from_s321][msgsender_MSG] >= 0) && allowance_BaseToken[this][from_s321][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_BaseToken0 := true;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]                 revert := revert_hold;
[L275]               havoc __exception;
[L276]               revert := false;
[L277]   COND TRUE   __exception
[L278]               __tmp__Balance := Balance;
[L279]               __tmp__DType := DType;
[L280]               __tmp__Alloc := Alloc;
[L281]               __tmp__balance_ADDR := balance_ADDR;
[L282]               __tmp__M_Ref_int := M_Ref_int;
[L283]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L284]               __tmp__alloc_allowance_BaseToken_lvl0 := alloc_allowance_BaseToken_lvl0;
[L285]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L286]               __tmp__sum_allowance1 := sum_allowance1;
[L287]               __tmp__Length := Length;
[L288]               __tmp__now := now;
[L289]               __tmp__name_BaseToken := name_BaseToken;
[L290]               __tmp__symbol_BaseToken := symbol_BaseToken;
[L291]               __tmp__decimals_BaseToken := decimals_BaseToken;
[L292]               __tmp__totalSupply_BaseToken := totalSupply_BaseToken;
[L293]               __tmp___totalLimit_BaseToken := _totalLimit_BaseToken;
[L294]               __tmp__balanceOf_BaseToken := balanceOf_BaseToken;
[L295]               __tmp__allowance_BaseToken := allowance_BaseToken;
[L296]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L1639]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG], value_s321);
[L1373]  COND FALSE  !(!(b_s82 <= a_s82))
[L1377]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1378]              __ret_0_ := c_s82;
[L1639]  RET         call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG], value_s321);
[L1640]  COND FALSE  !(revert)
[L1643]              __tmp__sum_allowance1[from_s321] := __tmp__sum_allowance1[from_s321] - __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG];
[L1644]              __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG] := __var_7;
[L1645]              __tmp__sum_allowance1[from_s321] := __tmp__sum_allowance1[from_s321] + __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG];
[L1646]  COND TRUE   __tmp__DType[this] == CustomToken
[L1647]  CALL        call _transfer~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L1493]              __var_1 := null;
[L1494]  COND TRUE   !(to_s217 != null)
[L1495]              revert := true;
[L1647]  RET         call _transfer~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L1648]  COND TRUE   revert
[L296]   RET         call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L297]               assume revert || gas < 0;
[L2976]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);

Loop:
BaseToken(506935249641133462427988555867660131141316463958).transferFrom~address~address~uint256.gas(3979001)({from : 506935249641133462427988555867660131141316463952, from : 506935249641133462427988555867660131141316463944, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s321 && p1 != to_s321) && (p2 != from_s321 || p3 != msgsender_MSG)) && from_s321 != to_s321) && value_s321 <= balanceOf_BaseToken[this][from_s321]) && value_s321 <= allowance_BaseToken[this][from_s321][msgsender_MSG]) && balanceOf_BaseToken[this][to_s321] + value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s321 >= 0) && value_s321 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][to_s321] >= 0) && balanceOf_BaseToken[this][to_s321] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][from_s321] >= 0) && balanceOf_BaseToken[this][from_s321] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_BaseToken[this][from_s321][msgsender_MSG] >= 0) && allowance_BaseToken[this][from_s321][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_BaseToken0 := true;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]                 revert := revert_hold;
[L275]               havoc __exception;
[L276]               revert := false;
[L277]   COND TRUE   __exception
[L278]               __tmp__Balance := Balance;
[L279]               __tmp__DType := DType;
[L280]               __tmp__Alloc := Alloc;
[L281]               __tmp__balance_ADDR := balance_ADDR;
[L282]               __tmp__M_Ref_int := M_Ref_int;
[L283]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L284]               __tmp__alloc_allowance_BaseToken_lvl0 := alloc_allowance_BaseToken_lvl0;
[L285]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L286]               __tmp__sum_allowance1 := sum_allowance1;
[L287]               __tmp__Length := Length;
[L288]               __tmp__now := now;
[L289]               __tmp__name_BaseToken := name_BaseToken;
[L290]               __tmp__symbol_BaseToken := symbol_BaseToken;
[L291]               __tmp__decimals_BaseToken := decimals_BaseToken;
[L292]               __tmp__totalSupply_BaseToken := totalSupply_BaseToken;
[L293]               __tmp___totalLimit_BaseToken := _totalLimit_BaseToken;
[L294]               __tmp__balanceOf_BaseToken := balanceOf_BaseToken;
[L295]               __tmp__allowance_BaseToken := allowance_BaseToken;
[L296]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L1639]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG], value_s321);
[L1373]  COND FALSE  !(!(b_s82 <= a_s82))
[L1377]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1378]              __ret_0_ := c_s82;
[L1639]  RET         call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG], value_s321);
[L1640]  COND FALSE  !(revert)
[L1643]              __tmp__sum_allowance1[from_s321] := __tmp__sum_allowance1[from_s321] - __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG];
[L1644]              __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG] := __var_7;
[L1645]              __tmp__sum_allowance1[from_s321] := __tmp__sum_allowance1[from_s321] + __tmp__allowance_BaseToken[this][from_s321][msgsender_MSG];
[L1646]  COND TRUE   __tmp__DType[this] == CustomToken
[L1647]  CALL        call _transfer~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L1493]              __var_1 := null;
[L1494]  COND TRUE   !(to_s217 != null)
[L1495]              revert := true;
[L1647]  RET         call _transfer~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L1648]  COND TRUE   revert
[L296]   RET         call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);
[L297]               assume revert || gas < 0;
[L2976]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, from_s321, to_s321, value_s321);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
