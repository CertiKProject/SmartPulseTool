This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 22:50:21,352 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 22:50:21,353 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 22:50:21,361 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 22:50:21,362 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 22:50:21,362 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 22:50:21,363 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 22:50:21,365 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 22:50:21,366 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 22:50:21,367 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 22:50:21,367 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 22:50:21,368 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 22:50:21,368 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 22:50:21,368 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 22:50:21,369 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 22:50:21,369 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 22:50:21,370 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 22:50:21,370 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 22:50:21,371 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 22:50:21,372 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 22:50:21,372 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 22:50:21,373 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 22:50:21,374 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 22:50:21,374 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 22:50:21,374 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 22:50:21,375 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 22:50:21,375 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 22:50:21,375 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 22:50:21,375 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 22:50:21,375 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 22:50:21,376 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 22:50:21,376 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 22:50:21,376 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 22:50:21,377 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 22:50:21,377 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 22:50:21,377 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 22:50:21,377 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 22:50:21,378 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 22:50:21,378 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 22:50:21,378 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 22:50:21,378 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 22:50:21,379 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 22:50:21,384 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 22:50:21,384 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 22:50:21,385 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 22:50:21,385 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 22:50:21,385 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 22:50:21,385 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 22:50:21,385 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 22:50:21,385 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 22:50:21,385 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 22:50:21,385 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 22:50:21,385 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 22:50:21,385 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 22:50:21,385 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 22:50:21,385 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 22:50:21,386 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 22:50:21,386 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 22:50:21,386 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 22:50:21,386 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 22:50:21,386 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 22:50:21,386 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 22:50:21,386 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 22:50:21,386 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 22:50:21,386 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 22:50:21,386 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 22:50:21,386 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 22:50:21,386 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 22:50:21,402 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 22:50:21,414 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 22:50:21,417 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 22:50:21,418 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 22:50:21,419 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 22:50:21,419 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/_0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl
[2020-11-24 22:50:21,420 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/_0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl'
[2020-11-24 22:50:21,528 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 22:50:21,529 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 22:50:21,529 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 22:50:21,529 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 22:50:21,530 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 22:50:21,546 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "_0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 10:50:21" (1/1) ...
[2020-11-24 22:50:21,548 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "_0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 10:50:21" (1/1) ...
[2020-11-24 22:50:21,584 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "_0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 10:50:21" (1/1) ...
[2020-11-24 22:50:21,585 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "_0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 10:50:21" (1/1) ...
[2020-11-24 22:50:21,613 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "_0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 10:50:21" (1/1) ...
[2020-11-24 22:50:21,625 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "_0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 10:50:21" (1/1) ...
[2020-11-24 22:50:21,634 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "_0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 10:50:21" (1/1) ...
[2020-11-24 22:50:21,651 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 22:50:21,651 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 22:50:21,651 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 22:50:21,653 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 22:50:21,657 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "_0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 10:50:21" (1/1) ...
[2020-11-24 22:50:21,677 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowed_TokenERC20[this][msg.sender][spender] == value &&  _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && balances_TokenERC20[this] == old(balances_TokenERC20[this]) && allowed_TokenERC20[this][p1][p2] == old(allowed_TokenERC20[this][p1][p2]) && aSBlock__0x[this] == old(aSBlock__0x[this]) && aEBlock__0x[this] == old(aEBlock__0x[this]) && aCap__0x[this] == old(aCap__0x[this]) && aTot__0x[this] == old(aTot__0x[this]) && aAmt__0x[this] == old(aAmt__0x[this]) && sSBlock__0x[this] == old(sSBlock__0x[this]) && sEBlock__0x[this] == old(sEBlock__0x[this]) && sCap__0x[this] == old(sCap__0x[this]) && sTot__0x[this] == old(sTot__0x[this]) && sChunk__0x[this] == old(sChunk__0x[this]) && sPrice__0x[this] == old(sPrice__0x[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 22:50:21,682 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowed_TokenERC20[this][msg.sender][spender] == value &&  _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && balances_TokenERC20[this] == old(balances_TokenERC20[this]) && allowed_TokenERC20[this][p1][p2] == old(allowed_TokenERC20[this][p1][p2]) && aSBlock__0x[this] == old(aSBlock__0x[this]) && aEBlock__0x[this] == old(aEBlock__0x[this]) && aCap__0x[this] == old(aCap__0x[this]) && aTot__0x[this] == old(aTot__0x[this]) && aAmt__0x[this] == old(aAmt__0x[this]) && sSBlock__0x[this] == old(sSBlock__0x[this]) && sEBlock__0x[this] == old(sEBlock__0x[this]) && sCap__0x[this] == old(sCap__0x[this]) && sTot__0x[this] == old(sTot__0x[this]) && sChunk__0x[this] == old(sChunk__0x[this]) && sPrice__0x[this] == old(sPrice__0x[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 22:50:21,690 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowed_TokenERC20[this][msg.sender][spender] == value &&  _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && balances_TokenERC20[this] == old(balances_TokenERC20[this]) && allowed_TokenERC20[this][p1][p2] == old(allowed_TokenERC20[this][p1][p2]) && aSBlock__0x[this] == old(aSBlock__0x[this]) && aEBlock__0x[this] == old(aEBlock__0x[this]) && aCap__0x[this] == old(aCap__0x[this]) && aTot__0x[this] == old(aTot__0x[this]) && aAmt__0x[this] == old(aAmt__0x[this]) && sSBlock__0x[this] == old(sSBlock__0x[this]) && sEBlock__0x[this] == old(sEBlock__0x[this]) && sCap__0x[this] == old(sCap__0x[this]) && sTot__0x[this] == old(sTot__0x[this]) && sChunk__0x[this] == old(sChunk__0x[this]) && sPrice__0x[this] == old(sPrice__0x[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 22:50:21,696 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=spender_s409 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[spender_s409,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]
[2020-11-24 22:50:21,701 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( success_s409==true && allowed_TokenERC20[this][msg.sender][spender_s409]==tokens_s409 ) && _totalSupply_TokenERC20[this]==( old(_totalSupply_TokenERC20[this]) ) ) && balances_TokenERC20[this]==( old(balances_TokenERC20[this]) ) ) && allowed_TokenERC20[this][p1][p2]==( old(allowed_TokenERC20[this][p1][p2]) ) ) && aSBlock__0x[this]==( old(aSBlock__0x[this]) ) ) && aEBlock__0x[this]==( old(aEBlock__0x[this]) ) ) && aCap__0x[this]==( old(aCap__0x[this]) ) ) && aTot__0x[this]==( old(aTot__0x[this]) ) ) && aAmt__0x[this]==( old(aAmt__0x[this]) ) ) && sSBlock__0x[this]==( old(sSBlock__0x[this]) ) ) && sEBlock__0x[this]==( old(sEBlock__0x[this]) ) ) && sCap__0x[this]==( old(sCap__0x[this]) ) ) && sTot__0x[this]==( old(sTot__0x[this]) ) ) && sChunk__0x[this]==( old(sChunk__0x[this]) ) ) && sPrice__0x[this]==( old(sPrice__0x[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s409,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[spender_s409,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],IdentifierExpression[tokens_s409,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aSBlock__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aSBlock__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aEBlock__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aEBlock__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aCap__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aCap__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aTot__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aTot__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aAmt__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aAmt__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sSBlock__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sSBlock__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sEBlock__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sEBlock__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sCap__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sCap__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sTot__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sTot__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sChunk__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sChunk__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sPrice__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sPrice__0x,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]]
[2020-11-24 22:50:21,709 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowed_TokenERC20[this][msg.sender][spender] == value &&  _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && balances_TokenERC20[this] == old(balances_TokenERC20[this]) && allowed_TokenERC20[this][p1][p2] == old(allowed_TokenERC20[this][p1][p2]) && aSBlock__0x[this] == old(aSBlock__0x[this]) && aEBlock__0x[this] == old(aEBlock__0x[this]) && aCap__0x[this] == old(aCap__0x[this]) && aTot__0x[this] == old(aTot__0x[this]) && aAmt__0x[this] == old(aAmt__0x[this]) && sSBlock__0x[this] == old(sSBlock__0x[this]) && sEBlock__0x[this] == old(sEBlock__0x[this]) && sCap__0x[this] == old(sCap__0x[this]) && sTot__0x[this] == old(sTot__0x[this]) && sChunk__0x[this] == old(sChunk__0x[this]) && sPrice__0x[this] == old(sPrice__0x[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 22:50:21,709 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_TokenERC200) ==> ( <>AP(success_approve_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 22:50:21,724 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 10:50:21 PropertyContainer
[2020-11-24 22:50:21,724 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 22:50:21,724 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 22:50:21,724 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 22:50:21,724 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 22:50:21,725 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "_0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 10:50:21" (1/2) ...
[2020-11-24 22:50:21,725 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 22:50:21,726 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 22:50:21,745 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 10:50:21" (2/2) ...
[2020-11-24 22:50:21,745 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 22:50:21,746 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 22:50:21,746 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 22:50:21,746 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 22:50:21,747 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "_0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 10:50:21" (1/2) ...
[2020-11-24 22:50:21,804 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 22:50:21,805 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 22:50:21,805 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 22:50:21,805 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 22:50:21,805 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 22:50:21,805 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 22:50:21,805 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 22:50:21,805 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 22:50:21,805 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-24 22:50:21,805 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-24 22:50:21,806 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-24 22:50:21,806 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-24 22:50:21,806 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-24 22:50:21,806 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-24 22:50:21,806 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-24 22:50:21,806 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-24 22:50:21,806 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-24 22:50:21,806 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-24 22:50:21,806 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-24 22:50:21,807 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-24 22:50:21,807 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-24 22:50:21,807 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-24 22:50:21,807 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-24 22:50:21,807 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-24 22:50:21,807 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-24 22:50:21,807 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-24 22:50:21,807 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-24 22:50:21,807 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-24 22:50:21,807 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-24 22:50:21,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-24 22:50:21,808 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-24 22:50:21,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-24 22:50:21,808 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-24 22:50:21,808 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20
[2020-11-24 22:50:21,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20
[2020-11-24 22:50:21,808 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-24 22:50:21,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-24 22:50:21,808 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-24 22:50:21,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-24 22:50:21,809 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-24 22:50:21,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-24 22:50:21,809 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-24 22:50:21,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-24 22:50:21,809 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-24 22:50:21,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-24 22:50:21,809 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-24 22:50:21,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-24 22:50:21,809 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-24 22:50:21,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-24 22:50:21,809 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_TokenERC20__success
[2020-11-24 22:50:21,810 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20
[2020-11-24 22:50:21,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20
[2020-11-24 22:50:21,810 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20
[2020-11-24 22:50:21,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20
[2020-11-24 22:50:21,810 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20
[2020-11-24 22:50:21,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20
[2020-11-24 22:50:21,810 INFO  L130     BoogieDeclarations]: Found specification of procedure _0x__0x_NoBaseCtor__success
[2020-11-24 22:50:21,810 INFO  L130     BoogieDeclarations]: Found specification of procedure _0x__0x
[2020-11-24 22:50:21,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure _0x__0x
[2020-11-24 22:50:21,811 INFO  L130     BoogieDeclarations]: Found specification of procedure getAirdrop~address__0x
[2020-11-24 22:50:21,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure getAirdrop~address__0x
[2020-11-24 22:50:21,811 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenSale~address__0x
[2020-11-24 22:50:21,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenSale~address__0x
[2020-11-24 22:50:21,811 INFO  L130     BoogieDeclarations]: Found specification of procedure viewAirdrop__0x
[2020-11-24 22:50:21,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure viewAirdrop__0x
[2020-11-24 22:50:21,811 INFO  L130     BoogieDeclarations]: Found specification of procedure viewSale__0x
[2020-11-24 22:50:21,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure viewSale__0x
[2020-11-24 22:50:21,811 INFO  L130     BoogieDeclarations]: Found specification of procedure startAirdrop~uint256~uint256~uint256~uint256__0x
[2020-11-24 22:50:21,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure startAirdrop~uint256~uint256~uint256~uint256__0x
[2020-11-24 22:50:21,812 INFO  L130     BoogieDeclarations]: Found specification of procedure startSale~uint256~uint256~uint256~uint256~uint256__0x
[2020-11-24 22:50:21,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure startSale~uint256~uint256~uint256~uint256~uint256__0x
[2020-11-24 22:50:21,812 INFO  L130     BoogieDeclarations]: Found specification of procedure clearETH__0x
[2020-11-24 22:50:21,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure clearETH__0x
[2020-11-24 22:50:21,812 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod__0x__success
[2020-11-24 22:50:21,812 INFO  L130     BoogieDeclarations]: Found specification of procedure aSBlock__0x
[2020-11-24 22:50:21,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure aSBlock__0x
[2020-11-24 22:50:21,812 INFO  L130     BoogieDeclarations]: Found specification of procedure aEBlock__0x
[2020-11-24 22:50:21,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure aEBlock__0x
[2020-11-24 22:50:21,813 INFO  L130     BoogieDeclarations]: Found specification of procedure aCap__0x
[2020-11-24 22:50:21,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure aCap__0x
[2020-11-24 22:50:21,813 INFO  L130     BoogieDeclarations]: Found specification of procedure aTot__0x
[2020-11-24 22:50:21,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure aTot__0x
[2020-11-24 22:50:21,813 INFO  L130     BoogieDeclarations]: Found specification of procedure aAmt__0x
[2020-11-24 22:50:21,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure aAmt__0x
[2020-11-24 22:50:21,813 INFO  L130     BoogieDeclarations]: Found specification of procedure sSBlock__0x
[2020-11-24 22:50:21,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure sSBlock__0x
[2020-11-24 22:50:21,813 INFO  L130     BoogieDeclarations]: Found specification of procedure sEBlock__0x
[2020-11-24 22:50:21,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure sEBlock__0x
[2020-11-24 22:50:21,814 INFO  L130     BoogieDeclarations]: Found specification of procedure sCap__0x
[2020-11-24 22:50:21,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure sCap__0x
[2020-11-24 22:50:21,814 INFO  L130     BoogieDeclarations]: Found specification of procedure sTot__0x
[2020-11-24 22:50:21,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure sTot__0x
[2020-11-24 22:50:21,814 INFO  L130     BoogieDeclarations]: Found specification of procedure sChunk__0x
[2020-11-24 22:50:21,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure sChunk__0x
[2020-11-24 22:50:21,814 INFO  L130     BoogieDeclarations]: Found specification of procedure sPrice__0x
[2020-11-24 22:50:21,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure sPrice__0x
[2020-11-24 22:50:21,814 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 22:50:21,814 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 22:50:21,815 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 22:50:21,815 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 22:50:21,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 22:50:21,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 22:50:21,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 22:50:21,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 22:50:21,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 22:50:21,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 22:50:21,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-24 22:50:21,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-24 22:50:21,816 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-24 22:50:21,816 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-24 22:50:21,816 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice__0x
[2020-11-24 22:50:21,816 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 22:50:21,816 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 22:50:21,816 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 22:50:21,816 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 22:50:21,816 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 22:50:21,816 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 22:50:21,816 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 22:50:21,817 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 22:50:21,817 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 22:50:21,817 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-24 22:50:21,817 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-24 22:50:21,817 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-24 22:50:21,817 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-24 22:50:21,817 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-24 22:50:21,817 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-24 22:50:21,817 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-24 22:50:21,818 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-24 22:50:21,818 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-24 22:50:21,818 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-24 22:50:21,818 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-24 22:50:21,818 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-24 22:50:21,818 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-24 22:50:21,818 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-24 22:50:21,818 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-24 22:50:21,818 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-24 22:50:21,818 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-24 22:50:21,819 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-24 22:50:21,819 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__success
[2020-11-24 22:50:21,819 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__fail
[2020-11-24 22:50:21,819 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-24 22:50:21,819 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-24 22:50:21,819 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-24 22:50:21,819 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-24 22:50:21,819 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-24 22:50:21,819 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-24 22:50:21,820 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-24 22:50:21,820 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-24 22:50:21,820 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-24 22:50:21,820 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-24 22:50:21,820 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-24 22:50:21,820 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-24 22:50:21,820 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-24 22:50:21,820 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-24 22:50:21,820 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_TokenERC20__fail
[2020-11-24 22:50:21,821 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__success
[2020-11-24 22:50:21,821 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__fail
[2020-11-24 22:50:21,821 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__success
[2020-11-24 22:50:21,821 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__fail
[2020-11-24 22:50:21,821 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__success
[2020-11-24 22:50:21,821 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__fail
[2020-11-24 22:50:21,821 INFO  L130     BoogieDeclarations]: Found specification of procedure _0x__0x_NoBaseCtor__fail
[2020-11-24 22:50:21,821 INFO  L130     BoogieDeclarations]: Found specification of procedure _0x__0x__success
[2020-11-24 22:50:21,821 INFO  L130     BoogieDeclarations]: Found specification of procedure _0x__0x__fail
[2020-11-24 22:50:21,821 INFO  L130     BoogieDeclarations]: Found specification of procedure getAirdrop~address__0x__success
[2020-11-24 22:50:21,821 INFO  L130     BoogieDeclarations]: Found specification of procedure getAirdrop~address__0x__fail
[2020-11-24 22:50:21,822 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenSale~address__0x__success
[2020-11-24 22:50:21,822 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenSale~address__0x__fail
[2020-11-24 22:50:21,822 INFO  L130     BoogieDeclarations]: Found specification of procedure viewAirdrop__0x__success
[2020-11-24 22:50:21,822 INFO  L130     BoogieDeclarations]: Found specification of procedure viewAirdrop__0x__fail
[2020-11-24 22:50:21,822 INFO  L130     BoogieDeclarations]: Found specification of procedure viewSale__0x__success
[2020-11-24 22:50:21,822 INFO  L130     BoogieDeclarations]: Found specification of procedure viewSale__0x__fail
[2020-11-24 22:50:21,822 INFO  L130     BoogieDeclarations]: Found specification of procedure startAirdrop~uint256~uint256~uint256~uint256__0x__success
[2020-11-24 22:50:21,822 INFO  L130     BoogieDeclarations]: Found specification of procedure startAirdrop~uint256~uint256~uint256~uint256__0x__fail
[2020-11-24 22:50:21,822 INFO  L130     BoogieDeclarations]: Found specification of procedure startSale~uint256~uint256~uint256~uint256~uint256__0x__success
[2020-11-24 22:50:21,822 INFO  L130     BoogieDeclarations]: Found specification of procedure startSale~uint256~uint256~uint256~uint256~uint256__0x__fail
[2020-11-24 22:50:21,822 INFO  L130     BoogieDeclarations]: Found specification of procedure clearETH__0x__success
[2020-11-24 22:50:21,823 INFO  L130     BoogieDeclarations]: Found specification of procedure clearETH__0x__fail
[2020-11-24 22:50:21,823 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod__0x__fail
[2020-11-24 22:50:21,823 INFO  L130     BoogieDeclarations]: Found specification of procedure aSBlock__0x__success
[2020-11-24 22:50:21,823 INFO  L130     BoogieDeclarations]: Found specification of procedure aSBlock__0x__fail
[2020-11-24 22:50:21,823 INFO  L130     BoogieDeclarations]: Found specification of procedure aEBlock__0x__success
[2020-11-24 22:50:21,823 INFO  L130     BoogieDeclarations]: Found specification of procedure aEBlock__0x__fail
[2020-11-24 22:50:21,823 INFO  L130     BoogieDeclarations]: Found specification of procedure aCap__0x__success
[2020-11-24 22:50:21,823 INFO  L130     BoogieDeclarations]: Found specification of procedure aCap__0x__fail
[2020-11-24 22:50:21,823 INFO  L130     BoogieDeclarations]: Found specification of procedure aTot__0x__success
[2020-11-24 22:50:21,823 INFO  L130     BoogieDeclarations]: Found specification of procedure aTot__0x__fail
[2020-11-24 22:50:21,823 INFO  L130     BoogieDeclarations]: Found specification of procedure aAmt__0x__success
[2020-11-24 22:50:21,824 INFO  L130     BoogieDeclarations]: Found specification of procedure aAmt__0x__fail
[2020-11-24 22:50:21,824 INFO  L130     BoogieDeclarations]: Found specification of procedure sSBlock__0x__success
[2020-11-24 22:50:21,824 INFO  L130     BoogieDeclarations]: Found specification of procedure sSBlock__0x__fail
[2020-11-24 22:50:21,824 INFO  L130     BoogieDeclarations]: Found specification of procedure sEBlock__0x__success
[2020-11-24 22:50:21,824 INFO  L130     BoogieDeclarations]: Found specification of procedure sEBlock__0x__fail
[2020-11-24 22:50:21,824 INFO  L130     BoogieDeclarations]: Found specification of procedure sCap__0x__success
[2020-11-24 22:50:21,824 INFO  L130     BoogieDeclarations]: Found specification of procedure sCap__0x__fail
[2020-11-24 22:50:21,824 INFO  L130     BoogieDeclarations]: Found specification of procedure sTot__0x__success
[2020-11-24 22:50:21,824 INFO  L130     BoogieDeclarations]: Found specification of procedure sTot__0x__fail
[2020-11-24 22:50:21,824 INFO  L130     BoogieDeclarations]: Found specification of procedure sChunk__0x__success
[2020-11-24 22:50:21,824 INFO  L130     BoogieDeclarations]: Found specification of procedure sChunk__0x__fail
[2020-11-24 22:50:21,824 INFO  L130     BoogieDeclarations]: Found specification of procedure sPrice__0x__success
[2020-11-24 22:50:21,825 INFO  L130     BoogieDeclarations]: Found specification of procedure sPrice__0x__fail
[2020-11-24 22:50:21,825 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 22:50:21,825 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 22:50:21,825 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 22:50:21,825 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 22:50:21,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 22:50:21,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 22:50:21,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 22:50:21,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 22:50:21,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 22:50:21,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 22:50:21,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 22:50:21,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 22:50:21,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 22:50:21,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 22:50:21,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 22:50:21,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 22:50:21,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 22:50:21,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 22:50:21,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-24 22:50:21,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-24 22:50:21,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-24 22:50:21,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-24 22:50:21,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-24 22:50:21,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-24 22:50:21,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-24 22:50:21,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-24 22:50:21,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-24 22:50:21,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-24 22:50:21,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-24 22:50:21,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-24 22:50:21,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-24 22:50:21,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-24 22:50:21,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-24 22:50:21,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-24 22:50:21,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-24 22:50:21,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-24 22:50:21,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-24 22:50:21,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-24 22:50:21,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-24 22:50:21,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-24 22:50:21,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__fail
[2020-11-24 22:50:21,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__success
[2020-11-24 22:50:21,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-24 22:50:21,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-24 22:50:21,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-24 22:50:21,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-24 22:50:21,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-24 22:50:21,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-24 22:50:21,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-24 22:50:21,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-24 22:50:21,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-24 22:50:21,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-24 22:50:21,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-24 22:50:21,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-24 22:50:21,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-24 22:50:21,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-24 22:50:21,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_TokenERC20__fail
[2020-11-24 22:50:21,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_TokenERC20__success
[2020-11-24 22:50:21,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__fail
[2020-11-24 22:50:21,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__success
[2020-11-24 22:50:21,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__fail
[2020-11-24 22:50:21,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__success
[2020-11-24 22:50:21,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__fail
[2020-11-24 22:50:21,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__success
[2020-11-24 22:50:21,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure _0x__0x_NoBaseCtor__fail
[2020-11-24 22:50:21,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure _0x__0x_NoBaseCtor__success
[2020-11-24 22:50:21,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure _0x__0x__fail
[2020-11-24 22:50:21,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure _0x__0x__success
[2020-11-24 22:50:21,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure getAirdrop~address__0x__fail
[2020-11-24 22:50:21,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure getAirdrop~address__0x__success
[2020-11-24 22:50:21,831 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenSale~address__0x__fail
[2020-11-24 22:50:21,831 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenSale~address__0x__success
[2020-11-24 22:50:21,831 INFO  L138     BoogieDeclarations]: Found implementation of procedure viewAirdrop__0x__fail
[2020-11-24 22:50:21,831 INFO  L138     BoogieDeclarations]: Found implementation of procedure viewAirdrop__0x__success
[2020-11-24 22:50:21,831 INFO  L138     BoogieDeclarations]: Found implementation of procedure viewSale__0x__fail
[2020-11-24 22:50:21,831 INFO  L138     BoogieDeclarations]: Found implementation of procedure viewSale__0x__success
[2020-11-24 22:50:21,831 INFO  L138     BoogieDeclarations]: Found implementation of procedure startAirdrop~uint256~uint256~uint256~uint256__0x__fail
[2020-11-24 22:50:21,831 INFO  L138     BoogieDeclarations]: Found implementation of procedure startAirdrop~uint256~uint256~uint256~uint256__0x__success
[2020-11-24 22:50:21,831 INFO  L138     BoogieDeclarations]: Found implementation of procedure startSale~uint256~uint256~uint256~uint256~uint256__0x__fail
[2020-11-24 22:50:21,831 INFO  L138     BoogieDeclarations]: Found implementation of procedure startSale~uint256~uint256~uint256~uint256~uint256__0x__success
[2020-11-24 22:50:21,832 INFO  L138     BoogieDeclarations]: Found implementation of procedure clearETH__0x__fail
[2020-11-24 22:50:21,832 INFO  L138     BoogieDeclarations]: Found implementation of procedure clearETH__0x__success
[2020-11-24 22:50:21,832 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod__0x__fail
[2020-11-24 22:50:21,832 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod__0x__success
[2020-11-24 22:50:21,832 INFO  L138     BoogieDeclarations]: Found implementation of procedure aSBlock__0x__fail
[2020-11-24 22:50:21,832 INFO  L138     BoogieDeclarations]: Found implementation of procedure aSBlock__0x__success
[2020-11-24 22:50:21,832 INFO  L138     BoogieDeclarations]: Found implementation of procedure aEBlock__0x__fail
[2020-11-24 22:50:21,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure aEBlock__0x__success
[2020-11-24 22:50:21,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure aCap__0x__fail
[2020-11-24 22:50:21,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure aCap__0x__success
[2020-11-24 22:50:21,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure aTot__0x__fail
[2020-11-24 22:50:21,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure aTot__0x__success
[2020-11-24 22:50:21,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure aAmt__0x__fail
[2020-11-24 22:50:21,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure aAmt__0x__success
[2020-11-24 22:50:21,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure sSBlock__0x__fail
[2020-11-24 22:50:21,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure sSBlock__0x__success
[2020-11-24 22:50:21,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure sEBlock__0x__fail
[2020-11-24 22:50:21,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure sEBlock__0x__success
[2020-11-24 22:50:21,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure sCap__0x__fail
[2020-11-24 22:50:21,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure sCap__0x__success
[2020-11-24 22:50:21,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure sTot__0x__fail
[2020-11-24 22:50:21,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure sTot__0x__success
[2020-11-24 22:50:21,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure sChunk__0x__fail
[2020-11-24 22:50:21,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure sChunk__0x__success
[2020-11-24 22:50:21,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure sPrice__0x__fail
[2020-11-24 22:50:21,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure sPrice__0x__success
[2020-11-24 22:50:21,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 22:50:21,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 22:50:21,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 22:50:21,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 22:50:21,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 22:50:21,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 22:50:21,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 22:50:21,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 22:50:21,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 22:50:21,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 22:50:21,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 22:50:21,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 22:50:21,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 22:50:21,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 22:50:21,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-24 22:50:21,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-24 22:50:21,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-24 22:50:21,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-24 22:50:21,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice__0x
[2020-11-24 22:50:21,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 22:50:21,836 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 22:50:21,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 22:50:22,450 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 22:50:22,635 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 22:50:22,635 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 22:50:22,635 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 22:50:22,820 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 22:50:22,820 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-24 22:50:22,822 INFO  L202        PluginConnector]: Adding new model _0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 10:50:22 BoogieIcfgContainer
[2020-11-24 22:50:22,822 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 10:50:21" (2/2) ...
[2020-11-24 22:50:22,822 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 22:50:22,822 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@23bbf3c7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 10:50:22, skipping insertion in model container
[2020-11-24 22:50:22,822 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 22:50:22,823 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 22:50:22,823 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 22:50:22,824 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 22:50:22,824 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "_0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 10:50:21" (1/3) ...
[2020-11-24 22:50:22,824 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@3659b13b and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 10:50:22, skipping insertion in model container
[2020-11-24 22:50:22,824 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 10:50:21" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 22:50:22,856 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 10:50:22 NWAContainer
[2020-11-24 22:50:22,856 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 22:50:22,856 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 22:50:22,856 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 22:50:22,857 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 22:50:22,858 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "_0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 10:50:22" (3/4) ...
[2020-11-24 22:50:22,859 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4403a6eb and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 10:50:22, skipping insertion in model container
[2020-11-24 22:50:22,859 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 10:50:22" (4/4) ...
[2020-11-24 22:50:22,866 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 22:50:22,873 INFO  L110   BuchiProductObserver]: Initial RCFG 3568 locations, 4644 edges
[2020-11-24 22:50:22,873 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 22:50:22,887 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 22:50:24,699 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 22:50:24,709 INFO  L110   BuchiProductObserver]: BuchiProgram size 8362 locations, 14617 edges
[2020-11-24 22:50:24,709 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 10:50:24 BoogieIcfgContainer
[2020-11-24 22:50:24,709 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 22:50:24,709 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 22:50:24,709 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 22:50:24,711 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 22:50:24,711 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 10:50:24" (1/1) ...
[2020-11-24 22:50:24,827 INFO  L313           BlockEncoder]: Initial Icfg 8362 locations, 14617 edges
[2020-11-24 22:50:24,828 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 22:50:24,828 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 22:50:24,828 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 22:50:24,829 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 22:50:24,842 INFO  L70    emoveInfeasibleEdges]: Removed 84 edges and 15 locations because of local infeasibility
[2020-11-24 22:50:24,857 INFO  L70        RemoveSinkStates]: Removed 14 edges and 9 locations by removing sink states
[2020-11-24 22:50:24,873 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 22:50:24,877 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 22:50:24,882 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 22:50:24,882 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 22:50:24,886 INFO  L313           BlockEncoder]: Encoded RCFG 8306 locations, 14472 edges
[2020-11-24 22:50:24,886 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 10:50:24 BasicIcfg
[2020-11-24 22:50:24,886 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 22:50:24,887 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 22:50:24,887 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 22:50:24,888 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 22:50:24,889 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 22:50:24,889 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "_0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 10:50:21" (1/6) ...
[2020-11-24 22:50:24,890 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3e21c5b7 and model type _0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 10:50:24, skipping insertion in model container
[2020-11-24 22:50:24,890 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 22:50:24,890 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 10:50:21" (2/6) ...
[2020-11-24 22:50:24,890 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3e21c5b7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 10:50:24, skipping insertion in model container
[2020-11-24 22:50:24,890 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 22:50:24,890 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "_0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 10:50:22" (3/6) ...
[2020-11-24 22:50:24,891 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3e21c5b7 and model type _0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 10:50:24, skipping insertion in model container
[2020-11-24 22:50:24,891 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 22:50:24,891 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 10:50:22" (4/6) ...
[2020-11-24 22:50:24,891 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3e21c5b7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 10:50:24, skipping insertion in model container
[2020-11-24 22:50:24,891 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 22:50:24,891 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 10:50:24" (5/6) ...
[2020-11-24 22:50:24,892 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3e21c5b7 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 10:50:24, skipping insertion in model container
[2020-11-24 22:50:24,892 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 22:50:24,892 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 10:50:24" (6/6) ...
[2020-11-24 22:50:24,893 INFO  L404   chiAutomizerObserver]: Analyzing ICFG _0x_0x8e9c3d1f30904e91764b7b8bbfda3a429b886874_approve.bpl_BEv2
[2020-11-24 22:50:24,926 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 22:50:24,926 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 22:50:24,926 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 22:50:24,926 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 22:50:24,926 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 22:50:24,927 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 22:50:24,927 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 22:50:24,927 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 22:50:24,927 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 22:50:24,980 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 8306 states.
[2020-11-24 22:50:25,056 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 22:50:25,056 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 22:50:25,056 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 22:50:25,063 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 22:50:25,063 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 22:50:25,063 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 22:50:25,063 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 8306 states.
[2020-11-24 22:50:25,101 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 22:50:25,101 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 22:50:25,101 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 22:50:25,103 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 22:50:25,103 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7673]              assume null == 0;
[L7674]  CALL        call this := FreshRefGenerator__success();
[L4051]              havoc newRef;
[L4052]              assume Alloc[newRef] == false;
[L4053]              Alloc[newRef] := true;
[L4054]              assume newRef != null;
[L7674]  RET         call this := FreshRefGenerator__success();
[L7675]              assume now >= 0;
[L7676]              assume DType[this] == _0x;
[L7677]              assume msgvalue_MSG == 0;
[L7678]              gas := gas - 53000;
[L7679]  CALL        call _0x__0x__success(this, msgsender_MSG, msgvalue_MSG);
[L4741]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]              assume msgsender_MSG != null;
[L4173]              Balance[this] := 0;
[L4187]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4188]  COND FALSE  !(revert)
[L4741]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4742]  COND TRUE   revert
[L7679]  RET         call _0x__0x__success(this, msgsender_MSG, msgvalue_MSG);
[L7680]              assume !revert && gas >= 0;

Loop:
[L7683]  CALL        call CorralChoice__0x(this);
[L7382]              havoc msgsender_MSG;
[L7383]              havoc msgvalue_MSG;
[L7384]              havoc choice;
[L7385]              havoc __ret_0_totalSupply;
[L7386]              havoc tokenOwner_s338;
[L7387]              havoc balance_s338;
[L7388]              havoc tokenOwner_s484;
[L7389]              havoc spender_s484;
[L7390]              havoc remaining_s484;
[L7391]              havoc to_s381;
[L7392]              havoc tokens_s381;
[L7393]              havoc success_s381;
[L7394]              havoc spender_s409;
[L7395]              havoc tokens_s409;
[L7396]              havoc success_s409;
[L7397]              havoc from_s468;
[L7398]              havoc to_s468;
[L7399]              havoc tokens_s468;
[L7400]              havoc success_s468;
[L7401]              havoc __ret_0_owner;
[L7402]              havoc __ret_0_newOwner;
[L7403]              havoc _newOwner_s217;
[L7404]              havoc __ret_0_symbol;
[L7405]              havoc __ret_0_name;
[L7406]              havoc __ret_0_decimals;
[L7407]              havoc spender_s527;
[L7408]              havoc tokens_s527;
[L7409]              havoc data_s527;
[L7410]              havoc success_s527;
[L7411]              havoc __ret_0_aSBlock;
[L7412]              havoc __ret_0_aEBlock;
[L7413]              havoc __ret_0_aCap;
[L7414]              havoc __ret_0_aTot;
[L7415]              havoc __ret_0_aAmt;
[L7416]              havoc __ret_0_sSBlock;
[L7417]              havoc __ret_0_sEBlock;
[L7418]              havoc __ret_0_sCap;
[L7419]              havoc __ret_0_sTot;
[L7420]              havoc __ret_0_sChunk;
[L7421]              havoc __ret_0_sPrice;
[L7422]              havoc _refer_s687;
[L7423]              havoc success_s687;
[L7424]              havoc _refer_s847;
[L7425]              havoc success_s847;
[L7426]              havoc StartBlock_s868;
[L7427]              havoc EndBlock_s868;
[L7428]              havoc DropCap_s868;
[L7429]              havoc DropCount_s868;
[L7430]              havoc DropAmount_s868;
[L7431]              havoc StartBlock_s892;
[L7432]              havoc EndBlock_s892;
[L7433]              havoc SaleCap_s892;
[L7434]              havoc SaleCount_s892;
[L7435]              havoc ChunkSize_s892;
[L7436]              havoc SalePrice_s892;
[L7437]              havoc _aSBlock_s926;
[L7438]              havoc _aEBlock_s926;
[L7439]              havoc _aAmt_s926;
[L7440]              havoc _aCap_s926;
[L7441]              havoc _sSBlock_s966;
[L7442]              havoc _sEBlock_s966;
[L7443]              havoc _sChunk_s966;
[L7444]              havoc _sPrice_s966;
[L7445]              havoc _sCap_s966;
[L7446]              havoc tmpNow;
[L7447]              havoc gas;
[L7448]              assume gas > 4000000 && gas <= 8000000;
[L7449]              tmpNow := now;
[L7450]              havoc now;
[L7451]              assume now > tmpNow;
[L7452]              assume msgsender_MSG != null;
[L7453]              assume DType[msgsender_MSG] != SafeMath;
[L7454]              assume DType[msgsender_MSG] != ERC20Interface;
[L7455]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7456]              assume DType[msgsender_MSG] != Owned;
[L7457]              assume DType[msgsender_MSG] != TokenERC20;
[L7458]              assume DType[msgsender_MSG] != _0x;
[L7459]              Alloc[msgsender_MSG] := true;
[L7460]  COND TRUE   choice == 32
[L7461]              gas := gas - 21000;
[L7462]  COND FALSE  !(gas >= 0)
[L7683]  RET         call CorralChoice__0x(this);

[2020-11-24 22:50:25,116 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 22:50:25,116 INFO  L82        PathProgramCache]: Analyzing trace with hash 47759179, now seen corresponding path program 1 times
[2020-11-24 22:50:25,120 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 22:50:25,140 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 22:50:25,170 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 22:50:25,172 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 22:50:25,172 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 22:50:25,633 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 22:50:25,642 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 22:50:25,642 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 22:50:25,644 INFO  L87              Difference]: Start difference. First operand 8306 states. Second operand 3 states.
[2020-11-24 22:50:26,003 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 22:50:26,003 INFO  L93              Difference]: Finished difference Result 8510 states and 14409 transitions.
[2020-11-24 22:50:26,004 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 22:50:26,005 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 8510 states and 14409 transitions.
[2020-11-24 22:50:26,054 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 22:50:26,130 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 8510 states to 8510 states and 14409 transitions.
[2020-11-24 22:50:26,131 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 15
[2020-11-24 22:50:26,134 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 403
[2020-11-24 22:50:26,134 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 8510 states and 14409 transitions.
[2020-11-24 22:50:26,162 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 22:50:26,163 INFO  L728         BuchiCegarLoop]: Abstraction has 8510 states and 14409 transitions.
[2020-11-24 22:50:26,184 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 8510 states and 14409 transitions.
[2020-11-24 22:50:26,312 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 8510 to 7556.
[2020-11-24 22:50:26,313 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 7556 states.
[2020-11-24 22:50:26,329 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 7556 states to 7556 states and 12715 transitions.
[2020-11-24 22:50:26,330 INFO  L751         BuchiCegarLoop]: Abstraction has 7556 states and 12715 transitions.
[2020-11-24 22:50:26,330 INFO  L631         BuchiCegarLoop]: Abstraction has 7556 states and 12715 transitions.
[2020-11-24 22:50:26,330 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 22:50:26,330 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7556 states and 12715 transitions.
[2020-11-24 22:50:26,343 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 22:50:26,343 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 22:50:26,343 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 22:50:26,344 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 22:50:26,344 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                success_approve_TokenERC200 := false;
[L3]                call_approve_TokenERC200 := false;
[L3]     CALL       call main();
[L3]                havoc p2;
[L3]                havoc p1;
[L7673]             assume null == 0;
[L7674]  CALL       call this := FreshRefGenerator__success();
[L4051]             havoc newRef;
[L4052]             assume Alloc[newRef] == false;
[L4053]             Alloc[newRef] := true;
[L4054]             assume newRef != null;
[L7674]  RET        call this := FreshRefGenerator__success();
[L7675]             assume now >= 0;
[L7676]             assume DType[this] == _0x;
[L7677]             assume msgvalue_MSG == 0;
[L7678]             gas := gas - 53000;
[L7679]  CALL       call _0x__0x__success(this, msgsender_MSG, msgvalue_MSG);
[L4741]  CALL       call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  CALL       call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]             assume msgsender_MSG != null;
[L4173]             Balance[this] := 0;
[L4187]  RET        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4188]  COND TRUE  revert
[L4741]  RET        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4742]  COND TRUE  revert
[L7679]  RET        call _0x__0x__success(this, msgsender_MSG, msgvalue_MSG);
[L7680]             assume !revert && gas >= 0;

Loop:
[L7683]  CALL        call CorralChoice__0x(this);
[L7382]              havoc msgsender_MSG;
[L7383]              havoc msgvalue_MSG;
[L7384]              havoc choice;
[L7385]              havoc __ret_0_totalSupply;
[L7386]              havoc tokenOwner_s338;
[L7387]              havoc balance_s338;
[L7388]              havoc tokenOwner_s484;
[L7389]              havoc spender_s484;
[L7390]              havoc remaining_s484;
[L7391]              havoc to_s381;
[L7392]              havoc tokens_s381;
[L7393]              havoc success_s381;
[L7394]              havoc spender_s409;
[L7395]              havoc tokens_s409;
[L7396]              havoc success_s409;
[L7397]              havoc from_s468;
[L7398]              havoc to_s468;
[L7399]              havoc tokens_s468;
[L7400]              havoc success_s468;
[L7401]              havoc __ret_0_owner;
[L7402]              havoc __ret_0_newOwner;
[L7403]              havoc _newOwner_s217;
[L7404]              havoc __ret_0_symbol;
[L7405]              havoc __ret_0_name;
[L7406]              havoc __ret_0_decimals;
[L7407]              havoc spender_s527;
[L7408]              havoc tokens_s527;
[L7409]              havoc data_s527;
[L7410]              havoc success_s527;
[L7411]              havoc __ret_0_aSBlock;
[L7412]              havoc __ret_0_aEBlock;
[L7413]              havoc __ret_0_aCap;
[L7414]              havoc __ret_0_aTot;
[L7415]              havoc __ret_0_aAmt;
[L7416]              havoc __ret_0_sSBlock;
[L7417]              havoc __ret_0_sEBlock;
[L7418]              havoc __ret_0_sCap;
[L7419]              havoc __ret_0_sTot;
[L7420]              havoc __ret_0_sChunk;
[L7421]              havoc __ret_0_sPrice;
[L7422]              havoc _refer_s687;
[L7423]              havoc success_s687;
[L7424]              havoc _refer_s847;
[L7425]              havoc success_s847;
[L7426]              havoc StartBlock_s868;
[L7427]              havoc EndBlock_s868;
[L7428]              havoc DropCap_s868;
[L7429]              havoc DropCount_s868;
[L7430]              havoc DropAmount_s868;
[L7431]              havoc StartBlock_s892;
[L7432]              havoc EndBlock_s892;
[L7433]              havoc SaleCap_s892;
[L7434]              havoc SaleCount_s892;
[L7435]              havoc ChunkSize_s892;
[L7436]              havoc SalePrice_s892;
[L7437]              havoc _aSBlock_s926;
[L7438]              havoc _aEBlock_s926;
[L7439]              havoc _aAmt_s926;
[L7440]              havoc _aCap_s926;
[L7441]              havoc _sSBlock_s966;
[L7442]              havoc _sEBlock_s966;
[L7443]              havoc _sChunk_s966;
[L7444]              havoc _sPrice_s966;
[L7445]              havoc _sCap_s966;
[L7446]              havoc tmpNow;
[L7447]              havoc gas;
[L7448]              assume gas > 4000000 && gas <= 8000000;
[L7449]              tmpNow := now;
[L7450]              havoc now;
[L7451]              assume now > tmpNow;
[L7452]              assume msgsender_MSG != null;
[L7453]              assume DType[msgsender_MSG] != SafeMath;
[L7454]              assume DType[msgsender_MSG] != ERC20Interface;
[L7455]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7456]              assume DType[msgsender_MSG] != Owned;
[L7457]              assume DType[msgsender_MSG] != TokenERC20;
[L7458]              assume DType[msgsender_MSG] != _0x;
[L7459]              Alloc[msgsender_MSG] := true;
[L7460]  COND TRUE   choice == 32
[L7461]              gas := gas - 21000;
[L7462]  COND FALSE  !(gas >= 0)
[L7683]  RET         call CorralChoice__0x(this);

[2020-11-24 22:50:26,347 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 22:50:26,347 INFO  L82        PathProgramCache]: Analyzing trace with hash -632299191, now seen corresponding path program 1 times
[2020-11-24 22:50:26,348 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 22:50:26,352 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 22:50:26,359 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 22:50:26,360 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 22:50:26,360 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [2] imperfect sequences [] total 2
[2020-11-24 22:50:26,361 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 22:50:26,361 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 22:50:26,361 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 22:50:26,362 INFO  L87              Difference]: Start difference. First operand 7556 states and 12715 transitions. cyclomatic complexity: 5165 Second operand 3 states.
[2020-11-24 22:50:26,580 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 22:50:26,580 INFO  L93              Difference]: Finished difference Result 7434 states and 8752 transitions.
[2020-11-24 22:50:26,580 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 22:50:26,580 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7434 states and 8752 transitions.
[2020-11-24 22:50:26,596 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 22:50:26,618 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7434 states to 7434 states and 8752 transitions.
[2020-11-24 22:50:26,619 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 244
[2020-11-24 22:50:26,619 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 244
[2020-11-24 22:50:26,619 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7434 states and 8752 transitions.
[2020-11-24 22:50:26,626 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 22:50:26,626 INFO  L728         BuchiCegarLoop]: Abstraction has 7434 states and 8752 transitions.
[2020-11-24 22:50:26,633 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7434 states and 8752 transitions.
[2020-11-24 22:50:26,685 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7434 to 7434.
[2020-11-24 22:50:26,685 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 7434 states.
[2020-11-24 22:50:26,693 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 7434 states to 7434 states and 8752 transitions.
[2020-11-24 22:50:26,693 INFO  L751         BuchiCegarLoop]: Abstraction has 7434 states and 8752 transitions.
[2020-11-24 22:50:26,693 INFO  L631         BuchiCegarLoop]: Abstraction has 7434 states and 8752 transitions.
[2020-11-24 22:50:26,693 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 22:50:26,693 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7434 states and 8752 transitions.
[2020-11-24 22:50:26,701 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 22:50:26,702 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 22:50:26,702 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 22:50:26,703 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 22:50:26,703 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7673]              assume null == 0;
[L7674]  CALL        call this := FreshRefGenerator__success();
[L4051]              havoc newRef;
[L4052]              assume Alloc[newRef] == false;
[L4053]              Alloc[newRef] := true;
[L4054]              assume newRef != null;
[L7674]  RET         call this := FreshRefGenerator__success();
[L7675]              assume now >= 0;
[L7676]              assume DType[this] == _0x;
[L7677]              assume msgvalue_MSG == 0;
[L7678]              gas := gas - 53000;
[L7679]  CALL        call _0x__0x__success(this, msgsender_MSG, msgvalue_MSG);
[L4741]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]              assume msgsender_MSG != null;
[L4173]              Balance[this] := 0;
[L4187]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4188]  COND TRUE   revert
[L4741]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4742]  COND TRUE   revert
[L7679]  RET         call _0x__0x__success(this, msgsender_MSG, msgvalue_MSG);
[L7680]              assume !revert && gas >= 0;
[L7683]  CALL        call CorralChoice__0x(this);
[L7382]              havoc msgsender_MSG;
[L7383]              havoc msgvalue_MSG;
[L7384]              havoc choice;
[L7385]              havoc __ret_0_totalSupply;
[L7386]              havoc tokenOwner_s338;
[L7387]              havoc balance_s338;
[L7388]              havoc tokenOwner_s484;
[L7389]              havoc spender_s484;
[L7390]              havoc remaining_s484;
[L7391]              havoc to_s381;
[L7392]              havoc tokens_s381;
[L7393]              havoc success_s381;
[L7394]              havoc spender_s409;
[L7395]              havoc tokens_s409;
[L7396]              havoc success_s409;
[L7397]              havoc from_s468;
[L7398]              havoc to_s468;
[L7399]              havoc tokens_s468;
[L7400]              havoc success_s468;
[L7401]              havoc __ret_0_owner;
[L7402]              havoc __ret_0_newOwner;
[L7403]              havoc _newOwner_s217;
[L7404]              havoc __ret_0_symbol;
[L7405]              havoc __ret_0_name;
[L7406]              havoc __ret_0_decimals;
[L7407]              havoc spender_s527;
[L7408]              havoc tokens_s527;
[L7409]              havoc data_s527;
[L7410]              havoc success_s527;
[L7411]              havoc __ret_0_aSBlock;
[L7412]              havoc __ret_0_aEBlock;
[L7413]              havoc __ret_0_aCap;
[L7414]              havoc __ret_0_aTot;
[L7415]              havoc __ret_0_aAmt;
[L7416]              havoc __ret_0_sSBlock;
[L7417]              havoc __ret_0_sEBlock;
[L7418]              havoc __ret_0_sCap;
[L7419]              havoc __ret_0_sTot;
[L7420]              havoc __ret_0_sChunk;
[L7421]              havoc __ret_0_sPrice;
[L7422]              havoc _refer_s687;
[L7423]              havoc success_s687;
[L7424]              havoc _refer_s847;
[L7425]              havoc success_s847;
[L7426]              havoc StartBlock_s868;
[L7427]              havoc EndBlock_s868;
[L7428]              havoc DropCap_s868;
[L7429]              havoc DropCount_s868;
[L7430]              havoc DropAmount_s868;
[L7431]              havoc StartBlock_s892;
[L7432]              havoc EndBlock_s892;
[L7433]              havoc SaleCap_s892;
[L7434]              havoc SaleCount_s892;
[L7435]              havoc ChunkSize_s892;
[L7436]              havoc SalePrice_s892;
[L7437]              havoc _aSBlock_s926;
[L7438]              havoc _aEBlock_s926;
[L7439]              havoc _aAmt_s926;
[L7440]              havoc _aCap_s926;
[L7441]              havoc _sSBlock_s966;
[L7442]              havoc _sEBlock_s966;
[L7443]              havoc _sChunk_s966;
[L7444]              havoc _sPrice_s966;
[L7445]              havoc _sCap_s966;
[L7446]              havoc tmpNow;
[L7447]              havoc gas;
[L7448]              assume gas > 4000000 && gas <= 8000000;
[L7449]              tmpNow := now;
[L7450]              havoc now;
[L7451]              assume now > tmpNow;
[L7452]              assume msgsender_MSG != null;
[L7453]              assume DType[msgsender_MSG] != SafeMath;
[L7454]              assume DType[msgsender_MSG] != ERC20Interface;
[L7455]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7456]              assume DType[msgsender_MSG] != Owned;
[L7457]              assume DType[msgsender_MSG] != TokenERC20;
[L7458]              assume DType[msgsender_MSG] != _0x;
[L7459]              Alloc[msgsender_MSG] := true;
[L7460]  COND FALSE  !(choice == 32)
[L7466]  COND FALSE  !(choice == 31)
[L7472]  COND FALSE  !(choice == 30)
[L7478]  COND FALSE  !(choice == 29)
[L7485]  COND TRUE   choice == 28
[L7486]              gas := gas - 21000;
[L7487]  COND TRUE   gas >= 0
[L7488]              assume tokens_s409 >= 0 && tokens_s409 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7489]              assume msgvalue_MSG == 0;
[L7490]  CALL        call success_s409 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s409;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L1057]              havoc __exception;
[L1058]              revert := false;
[L1059]  COND FALSE  !(__exception)
[L1093]  CALL        call success_s409 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L4509]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_TokenERC20[this][msgsender_MSG][spender_s409];
[L4510]              allowed_TokenERC20[this][msgsender_MSG][spender_s409] := tokens_s409;
[L4511]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_TokenERC20[this][msgsender_MSG][spender_s409];
[L4512]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L4513]              success_s409 := true;
[L1093]  RET         call success_s409 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L1094]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((((((((success_s409 == true && allowed_TokenERC20[this][msgsender_MSG][spender_s409] == tokens_s409) && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && balances_TokenERC20[this] == old(balances_TokenERC20[this])) && allowed_TokenERC20[this][p1][p2] == old(allowed_TokenERC20[this][p1][p2])) && aSBlock__0x[this] == old(aSBlock__0x[this])) && aEBlock__0x[this] == old(aEBlock__0x[this])) && aCap__0x[this] == old(aCap__0x[this])) && aTot__0x[this] == old(aTot__0x[this])) && aAmt__0x[this] == old(aAmt__0x[this])) && sSBlock__0x[this] == old(sSBlock__0x[this])) && sEBlock__0x[this] == old(sEBlock__0x[this])) && sCap__0x[this] == old(sCap__0x[this])) && sTot__0x[this] == old(sTot__0x[this])) && sChunk__0x[this] == old(sChunk__0x[this])) && sPrice__0x[this] == old(sPrice__0x[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L7490]  RET         call success_s409 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L7683]  RET         call CorralChoice__0x(this);

Loop:
[L7683]  CALL        call CorralChoice__0x(this);
[L7382]              havoc msgsender_MSG;
[L7383]              havoc msgvalue_MSG;
[L7384]              havoc choice;
[L7385]              havoc __ret_0_totalSupply;
[L7386]              havoc tokenOwner_s338;
[L7387]              havoc balance_s338;
[L7388]              havoc tokenOwner_s484;
[L7389]              havoc spender_s484;
[L7390]              havoc remaining_s484;
[L7391]              havoc to_s381;
[L7392]              havoc tokens_s381;
[L7393]              havoc success_s381;
[L7394]              havoc spender_s409;
[L7395]              havoc tokens_s409;
[L7396]              havoc success_s409;
[L7397]              havoc from_s468;
[L7398]              havoc to_s468;
[L7399]              havoc tokens_s468;
[L7400]              havoc success_s468;
[L7401]              havoc __ret_0_owner;
[L7402]              havoc __ret_0_newOwner;
[L7403]              havoc _newOwner_s217;
[L7404]              havoc __ret_0_symbol;
[L7405]              havoc __ret_0_name;
[L7406]              havoc __ret_0_decimals;
[L7407]              havoc spender_s527;
[L7408]              havoc tokens_s527;
[L7409]              havoc data_s527;
[L7410]              havoc success_s527;
[L7411]              havoc __ret_0_aSBlock;
[L7412]              havoc __ret_0_aEBlock;
[L7413]              havoc __ret_0_aCap;
[L7414]              havoc __ret_0_aTot;
[L7415]              havoc __ret_0_aAmt;
[L7416]              havoc __ret_0_sSBlock;
[L7417]              havoc __ret_0_sEBlock;
[L7418]              havoc __ret_0_sCap;
[L7419]              havoc __ret_0_sTot;
[L7420]              havoc __ret_0_sChunk;
[L7421]              havoc __ret_0_sPrice;
[L7422]              havoc _refer_s687;
[L7423]              havoc success_s687;
[L7424]              havoc _refer_s847;
[L7425]              havoc success_s847;
[L7426]              havoc StartBlock_s868;
[L7427]              havoc EndBlock_s868;
[L7428]              havoc DropCap_s868;
[L7429]              havoc DropCount_s868;
[L7430]              havoc DropAmount_s868;
[L7431]              havoc StartBlock_s892;
[L7432]              havoc EndBlock_s892;
[L7433]              havoc SaleCap_s892;
[L7434]              havoc SaleCount_s892;
[L7435]              havoc ChunkSize_s892;
[L7436]              havoc SalePrice_s892;
[L7437]              havoc _aSBlock_s926;
[L7438]              havoc _aEBlock_s926;
[L7439]              havoc _aAmt_s926;
[L7440]              havoc _aCap_s926;
[L7441]              havoc _sSBlock_s966;
[L7442]              havoc _sEBlock_s966;
[L7443]              havoc _sChunk_s966;
[L7444]              havoc _sPrice_s966;
[L7445]              havoc _sCap_s966;
[L7446]              havoc tmpNow;
[L7447]              havoc gas;
[L7448]              assume gas > 4000000 && gas <= 8000000;
[L7449]              tmpNow := now;
[L7450]              havoc now;
[L7451]              assume now > tmpNow;
[L7452]              assume msgsender_MSG != null;
[L7453]              assume DType[msgsender_MSG] != SafeMath;
[L7454]              assume DType[msgsender_MSG] != ERC20Interface;
[L7455]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7456]              assume DType[msgsender_MSG] != Owned;
[L7457]              assume DType[msgsender_MSG] != TokenERC20;
[L7458]              assume DType[msgsender_MSG] != _0x;
[L7459]              Alloc[msgsender_MSG] := true;
[L7460]  COND FALSE  !(choice == 32)
[L7466]  COND FALSE  !(choice == 31)
[L7472]  COND FALSE  !(choice == 30)
[L7478]  COND FALSE  !(choice == 29)
[L7485]  COND TRUE   choice == 28
[L7486]              gas := gas - 21000;
[L7487]  COND TRUE   gas >= 0
[L7488]              assume tokens_s409 >= 0 && tokens_s409 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7489]              assume msgvalue_MSG == 0;
[L7490]  CALL        call success_s409 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s409;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L1057]              havoc __exception;
[L1058]              revert := false;
[L1059]  COND FALSE  !(__exception)
[L1093]  CALL        call success_s409 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L4509]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_TokenERC20[this][msgsender_MSG][spender_s409];
[L4510]              allowed_TokenERC20[this][msgsender_MSG][spender_s409] := tokens_s409;
[L4511]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_TokenERC20[this][msgsender_MSG][spender_s409];
[L4512]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L4513]              success_s409 := true;
[L1093]  RET         call success_s409 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L1094]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((((((((success_s409 == true && allowed_TokenERC20[this][msgsender_MSG][spender_s409] == tokens_s409) && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && balances_TokenERC20[this] == old(balances_TokenERC20[this])) && allowed_TokenERC20[this][p1][p2] == old(allowed_TokenERC20[this][p1][p2])) && aSBlock__0x[this] == old(aSBlock__0x[this])) && aEBlock__0x[this] == old(aEBlock__0x[this])) && aCap__0x[this] == old(aCap__0x[this])) && aTot__0x[this] == old(aTot__0x[this])) && aAmt__0x[this] == old(aAmt__0x[this])) && sSBlock__0x[this] == old(sSBlock__0x[this])) && sEBlock__0x[this] == old(sEBlock__0x[this])) && sCap__0x[this] == old(sCap__0x[this])) && sTot__0x[this] == old(sTot__0x[this])) && sChunk__0x[this] == old(sChunk__0x[this])) && sPrice__0x[this] == old(sPrice__0x[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L7490]  RET         call success_s409 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L7683]  RET         call CorralChoice__0x(this);

[2020-11-24 22:50:26,707 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 22:50:26,707 INFO  L82        PathProgramCache]: Analyzing trace with hash -549717945, now seen corresponding path program 1 times
[2020-11-24 22:50:26,708 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 22:50:26,718 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 22:50:26,745 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 22:50:26,745 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 22:50:26,745 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 22:50:26,745 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 22:50:26,745 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 22:50:26,745 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 22:50:26,746 INFO  L87              Difference]: Start difference. First operand 7434 states and 8752 transitions. cyclomatic complexity: 1324 Second operand 3 states.
[2020-11-24 22:50:26,857 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 22:50:26,858 INFO  L93              Difference]: Finished difference Result 8378 states and 9744 transitions.
[2020-11-24 22:50:26,858 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 22:50:26,858 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 8378 states and 9744 transitions.
[2020-11-24 22:50:26,871 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 22:50:26,890 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 8378 states to 8074 states and 9376 transitions.
[2020-11-24 22:50:26,890 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 306
[2020-11-24 22:50:26,891 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 306
[2020-11-24 22:50:26,891 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 8074 states and 9376 transitions.
[2020-11-24 22:50:26,897 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 22:50:26,897 INFO  L728         BuchiCegarLoop]: Abstraction has 8074 states and 9376 transitions.
[2020-11-24 22:50:26,903 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 8074 states and 9376 transitions.
[2020-11-24 22:50:26,943 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 8074 to 7415.
[2020-11-24 22:50:26,943 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 7415 states.
[2020-11-24 22:50:26,950 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 7415 states to 7415 states and 8565 transitions.
[2020-11-24 22:50:26,950 INFO  L751         BuchiCegarLoop]: Abstraction has 7415 states and 8565 transitions.
[2020-11-24 22:50:26,950 INFO  L631         BuchiCegarLoop]: Abstraction has 7415 states and 8565 transitions.
[2020-11-24 22:50:26,950 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 22:50:26,951 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7415 states and 8565 transitions.
[2020-11-24 22:50:26,957 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 22:50:26,957 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 22:50:26,958 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 22:50:26,959 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 22:50:26,959 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7673]              assume null == 0;
[L7674]  CALL        call this := FreshRefGenerator__success();
[L4051]              havoc newRef;
[L4052]              assume Alloc[newRef] == false;
[L4053]              Alloc[newRef] := true;
[L4054]              assume newRef != null;
[L7674]  RET         call this := FreshRefGenerator__success();
[L7675]              assume now >= 0;
[L7676]              assume DType[this] == _0x;
[L7677]              assume msgvalue_MSG == 0;
[L7678]              gas := gas - 53000;
[L7679]  CALL        call _0x__0x__success(this, msgsender_MSG, msgvalue_MSG);
[L4741]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]              assume msgsender_MSG != null;
[L4173]              Balance[this] := 0;
[L4187]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4188]  COND FALSE  !(revert)
[L4741]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4742]  COND FALSE  !(revert)
[L4745]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4239]              assume msgsender_MSG != null;
[L4240]              Balance[this] := 0;
[L4241]              owner_Owned[this] := null;
[L4242]              newOwner_Owned[this] := null;
[L4244]              owner_Owned[this] := msgsender_MSG;
[L4257]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]  COND FALSE  !(revert)
[L4745]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4746]  COND FALSE  !(revert)
[L4749]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4401]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]              assume msgsender_MSG != null;
[L4173]              Balance[this] := 0;
[L4187]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4188]  COND FALSE  !(revert)
[L4401]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4402]  COND FALSE  !(revert)
[L4405]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4239]              assume msgsender_MSG != null;
[L4240]              Balance[this] := 0;
[L4241]              owner_Owned[this] := null;
[L4242]              newOwner_Owned[this] := null;
[L4244]              owner_Owned[this] := msgsender_MSG;
[L4257]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]  COND FALSE  !(revert)
[L4405]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4406]  COND FALSE  !(revert)
[L4409]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4359]              assume msgsender_MSG != null;
[L4360]              Balance[this] := 0;
[L4361]              symbol_TokenERC20[this] := -911606817;
[L4362]              name_TokenERC20[this] := -911606817;
[L4363]              decimals_TokenERC20[this] := 0;
[L4364]              _totalSupply_TokenERC20[this] := 0;
[L4365]              balances_TokenERC20[this] := zeroRefintArr();
[L4366]              sum_balances0[this] := 0;
[L4367]              allowed_TokenERC20[this] := zeroRefRefintArr();
[L4368]              sum_allowed1[this] := 0;
[L4370]              symbol_TokenERC20[this] := 1870149687;
[L4371]              name_TokenERC20[this] := 450776320;
[L4372]              decimals_TokenERC20[this] := 8;
[L4373]              __var_2 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4374]              _totalSupply_TokenERC20[this] := nonlinearMul(999880006599780055836170557439878316590346642366426347732992, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4375]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][owner_Owned[this]];
[L4376]              balances_TokenERC20[this][owner_Owned[this]] := _totalSupply_TokenERC20[this];
[L4377]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][owner_Owned[this]];
[L4378]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L4409]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4410]  COND FALSE  !(revert)
[L4749]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4750]  COND FALSE  !(revert)
[L4753]  CALL        call _0x__0x_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4703]              assume msgsender_MSG != null;
[L4704]              Balance[this] := 0;
[L4705]              aSBlock__0x[this] := 0;
[L4706]              aEBlock__0x[this] := 0;
[L4707]              aCap__0x[this] := 0;
[L4708]              aTot__0x[this] := 0;
[L4709]              aAmt__0x[this] := 0;
[L4710]              sSBlock__0x[this] := 0;
[L4711]              sEBlock__0x[this] := 0;
[L4712]              sCap__0x[this] := 0;
[L4713]              sTot__0x[this] := 0;
[L4714]              sChunk__0x[this] := 0;
[L4715]              sPrice__0x[this] := 0;
[L4753]  RET         call _0x__0x_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4754]  COND FALSE  !(revert)
[L7679]  RET         call _0x__0x__success(this, msgsender_MSG, msgvalue_MSG);
[L7680]              assume !revert && gas >= 0;
[L7683]  CALL        call CorralChoice__0x(this);
[L7382]              havoc msgsender_MSG;
[L7383]              havoc msgvalue_MSG;
[L7384]              havoc choice;
[L7385]              havoc __ret_0_totalSupply;
[L7386]              havoc tokenOwner_s338;
[L7387]              havoc balance_s338;
[L7388]              havoc tokenOwner_s484;
[L7389]              havoc spender_s484;
[L7390]              havoc remaining_s484;
[L7391]              havoc to_s381;
[L7392]              havoc tokens_s381;
[L7393]              havoc success_s381;
[L7394]              havoc spender_s409;
[L7395]              havoc tokens_s409;
[L7396]              havoc success_s409;
[L7397]              havoc from_s468;
[L7398]              havoc to_s468;
[L7399]              havoc tokens_s468;
[L7400]              havoc success_s468;
[L7401]              havoc __ret_0_owner;
[L7402]              havoc __ret_0_newOwner;
[L7403]              havoc _newOwner_s217;
[L7404]              havoc __ret_0_symbol;
[L7405]              havoc __ret_0_name;
[L7406]              havoc __ret_0_decimals;
[L7407]              havoc spender_s527;
[L7408]              havoc tokens_s527;
[L7409]              havoc data_s527;
[L7410]              havoc success_s527;
[L7411]              havoc __ret_0_aSBlock;
[L7412]              havoc __ret_0_aEBlock;
[L7413]              havoc __ret_0_aCap;
[L7414]              havoc __ret_0_aTot;
[L7415]              havoc __ret_0_aAmt;
[L7416]              havoc __ret_0_sSBlock;
[L7417]              havoc __ret_0_sEBlock;
[L7418]              havoc __ret_0_sCap;
[L7419]              havoc __ret_0_sTot;
[L7420]              havoc __ret_0_sChunk;
[L7421]              havoc __ret_0_sPrice;
[L7422]              havoc _refer_s687;
[L7423]              havoc success_s687;
[L7424]              havoc _refer_s847;
[L7425]              havoc success_s847;
[L7426]              havoc StartBlock_s868;
[L7427]              havoc EndBlock_s868;
[L7428]              havoc DropCap_s868;
[L7429]              havoc DropCount_s868;
[L7430]              havoc DropAmount_s868;
[L7431]              havoc StartBlock_s892;
[L7432]              havoc EndBlock_s892;
[L7433]              havoc SaleCap_s892;
[L7434]              havoc SaleCount_s892;
[L7435]              havoc ChunkSize_s892;
[L7436]              havoc SalePrice_s892;
[L7437]              havoc _aSBlock_s926;
[L7438]              havoc _aEBlock_s926;
[L7439]              havoc _aAmt_s926;
[L7440]              havoc _aCap_s926;
[L7441]              havoc _sSBlock_s966;
[L7442]              havoc _sEBlock_s966;
[L7443]              havoc _sChunk_s966;
[L7444]              havoc _sPrice_s966;
[L7445]              havoc _sCap_s966;
[L7446]              havoc tmpNow;
[L7447]              havoc gas;
[L7448]              assume gas > 4000000 && gas <= 8000000;
[L7449]              tmpNow := now;
[L7450]              havoc now;
[L7451]              assume now > tmpNow;
[L7452]              assume msgsender_MSG != null;
[L7453]              assume DType[msgsender_MSG] != SafeMath;
[L7454]              assume DType[msgsender_MSG] != ERC20Interface;
[L7455]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7456]              assume DType[msgsender_MSG] != Owned;
[L7457]              assume DType[msgsender_MSG] != TokenERC20;
[L7458]              assume DType[msgsender_MSG] != _0x;
[L7459]              Alloc[msgsender_MSG] := true;
[L7460]  COND FALSE  !(choice == 32)
[L7466]  COND FALSE  !(choice == 31)
[L7472]  COND FALSE  !(choice == 30)
[L7478]  COND FALSE  !(choice == 29)
[L7485]  COND TRUE   choice == 28
[L7486]              gas := gas - 21000;
[L7487]  COND TRUE   gas >= 0
[L7488]              assume tokens_s409 >= 0 && tokens_s409 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7489]              assume msgvalue_MSG == 0;
[L7490]  CALL        call success_s409 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s409;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L1057]              havoc __exception;
[L1058]              revert := false;
[L1059]  COND FALSE  !(__exception)
[L1093]  CALL        call success_s409 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L4509]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_TokenERC20[this][msgsender_MSG][spender_s409];
[L4510]              allowed_TokenERC20[this][msgsender_MSG][spender_s409] := tokens_s409;
[L4511]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_TokenERC20[this][msgsender_MSG][spender_s409];
[L4512]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L4513]              success_s409 := true;
[L1093]  RET         call success_s409 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L1094]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((((((((success_s409 == true && allowed_TokenERC20[this][msgsender_MSG][spender_s409] == tokens_s409) && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && balances_TokenERC20[this] == old(balances_TokenERC20[this])) && allowed_TokenERC20[this][p1][p2] == old(allowed_TokenERC20[this][p1][p2])) && aSBlock__0x[this] == old(aSBlock__0x[this])) && aEBlock__0x[this] == old(aEBlock__0x[this])) && aCap__0x[this] == old(aCap__0x[this])) && aTot__0x[this] == old(aTot__0x[this])) && aAmt__0x[this] == old(aAmt__0x[this])) && sSBlock__0x[this] == old(sSBlock__0x[this])) && sEBlock__0x[this] == old(sEBlock__0x[this])) && sCap__0x[this] == old(sCap__0x[this])) && sTot__0x[this] == old(sTot__0x[this])) && sChunk__0x[this] == old(sChunk__0x[this])) && sPrice__0x[this] == old(sPrice__0x[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L7490]  RET         call success_s409 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L7683]  RET         call CorralChoice__0x(this);

Loop:
[L7683]  CALL        call CorralChoice__0x(this);
[L7382]              havoc msgsender_MSG;
[L7383]              havoc msgvalue_MSG;
[L7384]              havoc choice;
[L7385]              havoc __ret_0_totalSupply;
[L7386]              havoc tokenOwner_s338;
[L7387]              havoc balance_s338;
[L7388]              havoc tokenOwner_s484;
[L7389]              havoc spender_s484;
[L7390]              havoc remaining_s484;
[L7391]              havoc to_s381;
[L7392]              havoc tokens_s381;
[L7393]              havoc success_s381;
[L7394]              havoc spender_s409;
[L7395]              havoc tokens_s409;
[L7396]              havoc success_s409;
[L7397]              havoc from_s468;
[L7398]              havoc to_s468;
[L7399]              havoc tokens_s468;
[L7400]              havoc success_s468;
[L7401]              havoc __ret_0_owner;
[L7402]              havoc __ret_0_newOwner;
[L7403]              havoc _newOwner_s217;
[L7404]              havoc __ret_0_symbol;
[L7405]              havoc __ret_0_name;
[L7406]              havoc __ret_0_decimals;
[L7407]              havoc spender_s527;
[L7408]              havoc tokens_s527;
[L7409]              havoc data_s527;
[L7410]              havoc success_s527;
[L7411]              havoc __ret_0_aSBlock;
[L7412]              havoc __ret_0_aEBlock;
[L7413]              havoc __ret_0_aCap;
[L7414]              havoc __ret_0_aTot;
[L7415]              havoc __ret_0_aAmt;
[L7416]              havoc __ret_0_sSBlock;
[L7417]              havoc __ret_0_sEBlock;
[L7418]              havoc __ret_0_sCap;
[L7419]              havoc __ret_0_sTot;
[L7420]              havoc __ret_0_sChunk;
[L7421]              havoc __ret_0_sPrice;
[L7422]              havoc _refer_s687;
[L7423]              havoc success_s687;
[L7424]              havoc _refer_s847;
[L7425]              havoc success_s847;
[L7426]              havoc StartBlock_s868;
[L7427]              havoc EndBlock_s868;
[L7428]              havoc DropCap_s868;
[L7429]              havoc DropCount_s868;
[L7430]              havoc DropAmount_s868;
[L7431]              havoc StartBlock_s892;
[L7432]              havoc EndBlock_s892;
[L7433]              havoc SaleCap_s892;
[L7434]              havoc SaleCount_s892;
[L7435]              havoc ChunkSize_s892;
[L7436]              havoc SalePrice_s892;
[L7437]              havoc _aSBlock_s926;
[L7438]              havoc _aEBlock_s926;
[L7439]              havoc _aAmt_s926;
[L7440]              havoc _aCap_s926;
[L7441]              havoc _sSBlock_s966;
[L7442]              havoc _sEBlock_s966;
[L7443]              havoc _sChunk_s966;
[L7444]              havoc _sPrice_s966;
[L7445]              havoc _sCap_s966;
[L7446]              havoc tmpNow;
[L7447]              havoc gas;
[L7448]              assume gas > 4000000 && gas <= 8000000;
[L7449]              tmpNow := now;
[L7450]              havoc now;
[L7451]              assume now > tmpNow;
[L7452]              assume msgsender_MSG != null;
[L7453]              assume DType[msgsender_MSG] != SafeMath;
[L7454]              assume DType[msgsender_MSG] != ERC20Interface;
[L7455]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7456]              assume DType[msgsender_MSG] != Owned;
[L7457]              assume DType[msgsender_MSG] != TokenERC20;
[L7458]              assume DType[msgsender_MSG] != _0x;
[L7459]              Alloc[msgsender_MSG] := true;
[L7460]  COND FALSE  !(choice == 32)
[L7466]  COND FALSE  !(choice == 31)
[L7472]  COND FALSE  !(choice == 30)
[L7478]  COND FALSE  !(choice == 29)
[L7485]  COND TRUE   choice == 28
[L7486]              gas := gas - 21000;
[L7487]  COND TRUE   gas >= 0
[L7488]              assume tokens_s409 >= 0 && tokens_s409 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7489]              assume msgvalue_MSG == 0;
[L7490]  CALL        call success_s409 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s409;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L1057]              havoc __exception;
[L1058]              revert := false;
[L1059]  COND FALSE  !(__exception)
[L1093]  CALL        call success_s409 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L4509]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_TokenERC20[this][msgsender_MSG][spender_s409];
[L4510]              allowed_TokenERC20[this][msgsender_MSG][spender_s409] := tokens_s409;
[L4511]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_TokenERC20[this][msgsender_MSG][spender_s409];
[L4512]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L4513]              success_s409 := true;
[L1093]  RET         call success_s409 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L1094]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((((((((success_s409 == true && allowed_TokenERC20[this][msgsender_MSG][spender_s409] == tokens_s409) && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && balances_TokenERC20[this] == old(balances_TokenERC20[this])) && allowed_TokenERC20[this][p1][p2] == old(allowed_TokenERC20[this][p1][p2])) && aSBlock__0x[this] == old(aSBlock__0x[this])) && aEBlock__0x[this] == old(aEBlock__0x[this])) && aCap__0x[this] == old(aCap__0x[this])) && aTot__0x[this] == old(aTot__0x[this])) && aAmt__0x[this] == old(aAmt__0x[this])) && sSBlock__0x[this] == old(sSBlock__0x[this])) && sEBlock__0x[this] == old(sEBlock__0x[this])) && sCap__0x[this] == old(sCap__0x[this])) && sTot__0x[this] == old(sTot__0x[this])) && sChunk__0x[this] == old(sChunk__0x[this])) && sPrice__0x[this] == old(sPrice__0x[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L7490]  RET         call success_s409 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L7683]  RET         call CorralChoice__0x(this);

[2020-11-24 22:50:26,963 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 22:50:26,963 INFO  L82        PathProgramCache]: Analyzing trace with hash -1804083905, now seen corresponding path program 1 times
[2020-11-24 22:50:26,964 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 22:50:26,994 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 22:50:27,131 INFO  L134       CoverageAnalysis]: Checked inductivity of 23 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 23 trivial. 0 not checked.
[2020-11-24 22:50:27,131 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 22:50:27,131 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-24 22:50:27,132 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 22:50:27,132 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-24 22:50:27,132 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-24 22:50:27,132 INFO  L87              Difference]: Start difference. First operand 7415 states and 8565 transitions. cyclomatic complexity: 1156 Second operand 13 states.
[2020-11-24 22:50:30,453 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 22:50:30,453 INFO  L93              Difference]: Finished difference Result 7594 states and 8766 transitions.
[2020-11-24 22:50:30,453 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-24 22:50:30,453 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7594 states and 8766 transitions.
[2020-11-24 22:50:30,465 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-24 22:50:30,485 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7594 states to 7594 states and 8766 transitions.
[2020-11-24 22:50:30,486 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 336
[2020-11-24 22:50:30,486 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 336
[2020-11-24 22:50:30,486 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7594 states and 8766 transitions.
[2020-11-24 22:50:30,491 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 22:50:30,491 INFO  L728         BuchiCegarLoop]: Abstraction has 7594 states and 8766 transitions.
[2020-11-24 22:50:30,497 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7594 states and 8766 transitions.
[2020-11-24 22:50:30,549 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7594 to 7556.
[2020-11-24 22:50:30,549 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 7556 states.
[2020-11-24 22:50:30,558 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 7556 states to 7556 states and 8727 transitions.
[2020-11-24 22:50:30,558 INFO  L751         BuchiCegarLoop]: Abstraction has 7556 states and 8727 transitions.
[2020-11-24 22:50:30,558 INFO  L631         BuchiCegarLoop]: Abstraction has 7556 states and 8727 transitions.
[2020-11-24 22:50:30,558 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 22:50:30,558 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7556 states and 8727 transitions.
[2020-11-24 22:50:30,565 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-24 22:50:30,565 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 22:50:30,565 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 22:50:30,567 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 22:50:30,567 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7673]              assume null == 0;
[L7674]  CALL        call this := FreshRefGenerator__success();
[L4051]              havoc newRef;
[L4052]              assume Alloc[newRef] == false;
[L4053]              Alloc[newRef] := true;
[L4054]              assume newRef != null;
[L7674]  RET         call this := FreshRefGenerator__success();
[L7675]              assume now >= 0;
[L7676]              assume DType[this] == _0x;
[L7677]              assume msgvalue_MSG == 0;
[L7678]              gas := gas - 53000;
[L7679]  CALL        call _0x__0x__success(this, msgsender_MSG, msgvalue_MSG);
[L4741]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]              assume msgsender_MSG != null;
[L4173]              Balance[this] := 0;
[L4187]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4188]  COND FALSE  !(revert)
[L4741]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4742]  COND FALSE  !(revert)
[L4745]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4239]              assume msgsender_MSG != null;
[L4240]              Balance[this] := 0;
[L4241]              owner_Owned[this] := null;
[L4242]              newOwner_Owned[this] := null;
[L4244]              owner_Owned[this] := msgsender_MSG;
[L4257]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]  COND FALSE  !(revert)
[L4745]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4746]  COND FALSE  !(revert)
[L4749]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4401]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]              assume msgsender_MSG != null;
[L4173]              Balance[this] := 0;
[L4187]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4188]  COND FALSE  !(revert)
[L4401]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4402]  COND FALSE  !(revert)
[L4405]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4239]              assume msgsender_MSG != null;
[L4240]              Balance[this] := 0;
[L4241]              owner_Owned[this] := null;
[L4242]              newOwner_Owned[this] := null;
[L4244]              owner_Owned[this] := msgsender_MSG;
[L4257]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]  COND FALSE  !(revert)
[L4405]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4406]  COND FALSE  !(revert)
[L4409]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4359]              assume msgsender_MSG != null;
[L4360]              Balance[this] := 0;
[L4361]              symbol_TokenERC20[this] := -911606817;
[L4362]              name_TokenERC20[this] := -911606817;
[L4363]              decimals_TokenERC20[this] := 0;
[L4364]              _totalSupply_TokenERC20[this] := 0;
[L4365]              balances_TokenERC20[this] := zeroRefintArr();
[L4366]              sum_balances0[this] := 0;
[L4367]              allowed_TokenERC20[this] := zeroRefRefintArr();
[L4368]              sum_allowed1[this] := 0;
[L4370]              symbol_TokenERC20[this] := 1870149687;
[L4371]              name_TokenERC20[this] := 450776320;
[L4372]              decimals_TokenERC20[this] := 8;
[L4373]              __var_2 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4374]              _totalSupply_TokenERC20[this] := nonlinearMul(999880006599780055836170557439878316590346642366426347732992, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4375]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][owner_Owned[this]];
[L4376]              balances_TokenERC20[this][owner_Owned[this]] := _totalSupply_TokenERC20[this];
[L4377]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][owner_Owned[this]];
[L4378]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L4409]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4410]  COND FALSE  !(revert)
[L4749]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4750]  COND FALSE  !(revert)
[L4753]  CALL        call _0x__0x_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4703]              assume msgsender_MSG != null;
[L4704]              Balance[this] := 0;
[L4705]              aSBlock__0x[this] := 0;
[L4706]              aEBlock__0x[this] := 0;
[L4707]              aCap__0x[this] := 0;
[L4708]              aTot__0x[this] := 0;
[L4709]              aAmt__0x[this] := 0;
[L4710]              sSBlock__0x[this] := 0;
[L4711]              sEBlock__0x[this] := 0;
[L4712]              sCap__0x[this] := 0;
[L4713]              sTot__0x[this] := 0;
[L4714]              sChunk__0x[this] := 0;
[L4715]              sPrice__0x[this] := 0;
[L4753]  RET         call _0x__0x_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4754]  COND FALSE  !(revert)
[L7679]  RET         call _0x__0x__success(this, msgsender_MSG, msgvalue_MSG);
[L7680]              assume !revert && gas >= 0;
[L7683]  CALL        call CorralChoice__0x(this);
[L7382]              havoc msgsender_MSG;
[L7383]              havoc msgvalue_MSG;
[L7384]              havoc choice;
[L7385]              havoc __ret_0_totalSupply;
[L7386]              havoc tokenOwner_s338;
[L7387]              havoc balance_s338;
[L7388]              havoc tokenOwner_s484;
[L7389]              havoc spender_s484;
[L7390]              havoc remaining_s484;
[L7391]              havoc to_s381;
[L7392]              havoc tokens_s381;
[L7393]              havoc success_s381;
[L7394]              havoc spender_s409;
[L7395]              havoc tokens_s409;
[L7396]              havoc success_s409;
[L7397]              havoc from_s468;
[L7398]              havoc to_s468;
[L7399]              havoc tokens_s468;
[L7400]              havoc success_s468;
[L7401]              havoc __ret_0_owner;
[L7402]              havoc __ret_0_newOwner;
[L7403]              havoc _newOwner_s217;
[L7404]              havoc __ret_0_symbol;
[L7405]              havoc __ret_0_name;
[L7406]              havoc __ret_0_decimals;
[L7407]              havoc spender_s527;
[L7408]              havoc tokens_s527;
[L7409]              havoc data_s527;
[L7410]              havoc success_s527;
[L7411]              havoc __ret_0_aSBlock;
[L7412]              havoc __ret_0_aEBlock;
[L7413]              havoc __ret_0_aCap;
[L7414]              havoc __ret_0_aTot;
[L7415]              havoc __ret_0_aAmt;
[L7416]              havoc __ret_0_sSBlock;
[L7417]              havoc __ret_0_sEBlock;
[L7418]              havoc __ret_0_sCap;
[L7419]              havoc __ret_0_sTot;
[L7420]              havoc __ret_0_sChunk;
[L7421]              havoc __ret_0_sPrice;
[L7422]              havoc _refer_s687;
[L7423]              havoc success_s687;
[L7424]              havoc _refer_s847;
[L7425]              havoc success_s847;
[L7426]              havoc StartBlock_s868;
[L7427]              havoc EndBlock_s868;
[L7428]              havoc DropCap_s868;
[L7429]              havoc DropCount_s868;
[L7430]              havoc DropAmount_s868;
[L7431]              havoc StartBlock_s892;
[L7432]              havoc EndBlock_s892;
[L7433]              havoc SaleCap_s892;
[L7434]              havoc SaleCount_s892;
[L7435]              havoc ChunkSize_s892;
[L7436]              havoc SalePrice_s892;
[L7437]              havoc _aSBlock_s926;
[L7438]              havoc _aEBlock_s926;
[L7439]              havoc _aAmt_s926;
[L7440]              havoc _aCap_s926;
[L7441]              havoc _sSBlock_s966;
[L7442]              havoc _sEBlock_s966;
[L7443]              havoc _sChunk_s966;
[L7444]              havoc _sPrice_s966;
[L7445]              havoc _sCap_s966;
[L7446]              havoc tmpNow;
[L7447]              havoc gas;
[L7448]              assume gas > 4000000 && gas <= 8000000;
[L7449]              tmpNow := now;
[L7450]              havoc now;
[L7451]              assume now > tmpNow;
[L7452]              assume msgsender_MSG != null;
[L7453]              assume DType[msgsender_MSG] != SafeMath;
[L7454]              assume DType[msgsender_MSG] != ERC20Interface;
[L7455]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7456]              assume DType[msgsender_MSG] != Owned;
[L7457]              assume DType[msgsender_MSG] != TokenERC20;
[L7458]              assume DType[msgsender_MSG] != _0x;
[L7459]              Alloc[msgsender_MSG] := true;
[L7460]  COND FALSE  !(choice == 32)
[L7466]  COND FALSE  !(choice == 31)
[L7472]  COND FALSE  !(choice == 30)
[L7478]  COND FALSE  !(choice == 29)
[L7485]  COND TRUE   choice == 28
[L7486]              gas := gas - 21000;
[L7487]  COND TRUE   gas >= 0
[L7488]              assume tokens_s409 >= 0 && tokens_s409 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7489]              assume msgvalue_MSG == 0;
[L7490]  CALL        call success_s409 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s409;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L1057]              havoc __exception;
[L1058]              revert := false;
[L1059]  COND TRUE   __exception
[L1060]              __tmp__Balance := Balance;
[L1061]              __tmp__DType := DType;
[L1062]              __tmp__Alloc := Alloc;
[L1063]              __tmp__balance_ADDR := balance_ADDR;
[L1064]              __tmp__M_Ref_int := M_Ref_int;
[L1065]              __tmp__sum_balances0 := sum_balances0;
[L1066]              __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L1067]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1068]              __tmp__sum_allowed1 := sum_allowed1;
[L1069]              __tmp__Length := Length;
[L1070]              __tmp__now := now;
[L1071]              __tmp__owner_Owned := owner_Owned;
[L1072]              __tmp__newOwner_Owned := newOwner_Owned;
[L1073]              __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L1074]              __tmp__name_TokenERC20 := name_TokenERC20;
[L1075]              __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L1076]              __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L1077]              __tmp__balances_TokenERC20 := balances_TokenERC20;
[L1078]              __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L1079]              __tmp__aSBlock__0x := aSBlock__0x;
[L1080]              __tmp__aEBlock__0x := aEBlock__0x;
[L1081]              __tmp__aCap__0x := aCap__0x;
[L1082]              __tmp__aTot__0x := aTot__0x;
[L1083]              __tmp__aAmt__0x := aAmt__0x;
[L1084]              __tmp__sSBlock__0x := sSBlock__0x;
[L1085]              __tmp__sEBlock__0x := sEBlock__0x;
[L1086]              __tmp__sCap__0x := sCap__0x;
[L1087]              __tmp__sTot__0x := sTot__0x;
[L1088]              __tmp__sChunk__0x := sChunk__0x;
[L1089]              __tmp__sPrice__0x := sPrice__0x;
[L1090]  CALL        call success_s409 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L4500]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_TokenERC20[this][msgsender_MSG][spender_s409];
[L4501]              __tmp__allowed_TokenERC20[this][msgsender_MSG][spender_s409] := tokens_s409;
[L4502]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_TokenERC20[this][msgsender_MSG][spender_s409];
[L4503]              success_s409 := true;
[L1090]  RET         call success_s409 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L1091]              assume revert || gas < 0;
[L7490]  RET         call success_s409 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L7683]  RET         call CorralChoice__0x(this);

Loop:
[L7683]  CALL        call CorralChoice__0x(this);
[L7382]              havoc msgsender_MSG;
[L7383]              havoc msgvalue_MSG;
[L7384]              havoc choice;
[L7385]              havoc __ret_0_totalSupply;
[L7386]              havoc tokenOwner_s338;
[L7387]              havoc balance_s338;
[L7388]              havoc tokenOwner_s484;
[L7389]              havoc spender_s484;
[L7390]              havoc remaining_s484;
[L7391]              havoc to_s381;
[L7392]              havoc tokens_s381;
[L7393]              havoc success_s381;
[L7394]              havoc spender_s409;
[L7395]              havoc tokens_s409;
[L7396]              havoc success_s409;
[L7397]              havoc from_s468;
[L7398]              havoc to_s468;
[L7399]              havoc tokens_s468;
[L7400]              havoc success_s468;
[L7401]              havoc __ret_0_owner;
[L7402]              havoc __ret_0_newOwner;
[L7403]              havoc _newOwner_s217;
[L7404]              havoc __ret_0_symbol;
[L7405]              havoc __ret_0_name;
[L7406]              havoc __ret_0_decimals;
[L7407]              havoc spender_s527;
[L7408]              havoc tokens_s527;
[L7409]              havoc data_s527;
[L7410]              havoc success_s527;
[L7411]              havoc __ret_0_aSBlock;
[L7412]              havoc __ret_0_aEBlock;
[L7413]              havoc __ret_0_aCap;
[L7414]              havoc __ret_0_aTot;
[L7415]              havoc __ret_0_aAmt;
[L7416]              havoc __ret_0_sSBlock;
[L7417]              havoc __ret_0_sEBlock;
[L7418]              havoc __ret_0_sCap;
[L7419]              havoc __ret_0_sTot;
[L7420]              havoc __ret_0_sChunk;
[L7421]              havoc __ret_0_sPrice;
[L7422]              havoc _refer_s687;
[L7423]              havoc success_s687;
[L7424]              havoc _refer_s847;
[L7425]              havoc success_s847;
[L7426]              havoc StartBlock_s868;
[L7427]              havoc EndBlock_s868;
[L7428]              havoc DropCap_s868;
[L7429]              havoc DropCount_s868;
[L7430]              havoc DropAmount_s868;
[L7431]              havoc StartBlock_s892;
[L7432]              havoc EndBlock_s892;
[L7433]              havoc SaleCap_s892;
[L7434]              havoc SaleCount_s892;
[L7435]              havoc ChunkSize_s892;
[L7436]              havoc SalePrice_s892;
[L7437]              havoc _aSBlock_s926;
[L7438]              havoc _aEBlock_s926;
[L7439]              havoc _aAmt_s926;
[L7440]              havoc _aCap_s926;
[L7441]              havoc _sSBlock_s966;
[L7442]              havoc _sEBlock_s966;
[L7443]              havoc _sChunk_s966;
[L7444]              havoc _sPrice_s966;
[L7445]              havoc _sCap_s966;
[L7446]              havoc tmpNow;
[L7447]              havoc gas;
[L7448]              assume gas > 4000000 && gas <= 8000000;
[L7449]              tmpNow := now;
[L7450]              havoc now;
[L7451]              assume now > tmpNow;
[L7452]              assume msgsender_MSG != null;
[L7453]              assume DType[msgsender_MSG] != SafeMath;
[L7454]              assume DType[msgsender_MSG] != ERC20Interface;
[L7455]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7456]              assume DType[msgsender_MSG] != Owned;
[L7457]              assume DType[msgsender_MSG] != TokenERC20;
[L7458]              assume DType[msgsender_MSG] != _0x;
[L7459]              Alloc[msgsender_MSG] := true;
[L7460]  COND FALSE  !(choice == 32)
[L7466]  COND FALSE  !(choice == 31)
[L7472]  COND FALSE  !(choice == 30)
[L7478]  COND FALSE  !(choice == 29)
[L7485]  COND TRUE   choice == 28
[L7486]              gas := gas - 21000;
[L7487]  COND TRUE   gas >= 0
[L7488]              assume tokens_s409 >= 0 && tokens_s409 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7489]              assume msgvalue_MSG == 0;
[L7490]  CALL        call success_s409 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s409;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L1057]              havoc __exception;
[L1058]              revert := false;
[L1059]  COND TRUE   __exception
[L1060]              __tmp__Balance := Balance;
[L1061]              __tmp__DType := DType;
[L1062]              __tmp__Alloc := Alloc;
[L1063]              __tmp__balance_ADDR := balance_ADDR;
[L1064]              __tmp__M_Ref_int := M_Ref_int;
[L1065]              __tmp__sum_balances0 := sum_balances0;
[L1066]              __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L1067]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1068]              __tmp__sum_allowed1 := sum_allowed1;
[L1069]              __tmp__Length := Length;
[L1070]              __tmp__now := now;
[L1071]              __tmp__owner_Owned := owner_Owned;
[L1072]              __tmp__newOwner_Owned := newOwner_Owned;
[L1073]              __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L1074]              __tmp__name_TokenERC20 := name_TokenERC20;
[L1075]              __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L1076]              __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L1077]              __tmp__balances_TokenERC20 := balances_TokenERC20;
[L1078]              __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L1079]              __tmp__aSBlock__0x := aSBlock__0x;
[L1080]              __tmp__aEBlock__0x := aEBlock__0x;
[L1081]              __tmp__aCap__0x := aCap__0x;
[L1082]              __tmp__aTot__0x := aTot__0x;
[L1083]              __tmp__aAmt__0x := aAmt__0x;
[L1084]              __tmp__sSBlock__0x := sSBlock__0x;
[L1085]              __tmp__sEBlock__0x := sEBlock__0x;
[L1086]              __tmp__sCap__0x := sCap__0x;
[L1087]              __tmp__sTot__0x := sTot__0x;
[L1088]              __tmp__sChunk__0x := sChunk__0x;
[L1089]              __tmp__sPrice__0x := sPrice__0x;
[L1090]  CALL        call success_s409 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L4500]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_TokenERC20[this][msgsender_MSG][spender_s409];
[L4501]              __tmp__allowed_TokenERC20[this][msgsender_MSG][spender_s409] := tokens_s409;
[L4502]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_TokenERC20[this][msgsender_MSG][spender_s409];
[L4503]              success_s409 := true;
[L1090]  RET         call success_s409 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L1091]              assume revert || gas < 0;
[L7490]  RET         call success_s409 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L7683]  RET         call CorralChoice__0x(this);

[2020-11-24 22:50:30,570 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 22:50:30,571 INFO  L82        PathProgramCache]: Analyzing trace with hash -133726173, now seen corresponding path program 1 times
[2020-11-24 22:50:30,571 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 22:50:30,580 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 22:50:30,614 INFO  L134       CoverageAnalysis]: Checked inductivity of 23 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 23 trivial. 0 not checked.
[2020-11-24 22:50:30,614 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 22:50:30,614 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 22:50:30,614 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 22:50:30,614 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 22:50:30,614 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 22:50:30,615 INFO  L87              Difference]: Start difference. First operand 7556 states and 8727 transitions. cyclomatic complexity: 1179 Second operand 5 states.
[2020-11-24 22:50:31,701 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 22:50:31,701 INFO  L93              Difference]: Finished difference Result 8983 states and 10388 transitions.
[2020-11-24 22:50:31,701 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 22:50:31,701 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 8983 states and 10388 transitions.
[2020-11-24 22:50:31,719 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2020-11-24 22:50:31,744 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 8983 states to 7382 states and 8625 transitions.
[2020-11-24 22:50:31,744 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 291
[2020-11-24 22:50:31,745 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 291
[2020-11-24 22:50:31,745 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7382 states and 8625 transitions.
[2020-11-24 22:50:31,753 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 22:50:31,753 INFO  L728         BuchiCegarLoop]: Abstraction has 7382 states and 8625 transitions.
[2020-11-24 22:50:31,760 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7382 states and 8625 transitions.
[2020-11-24 22:50:31,802 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7382 to 5772.
[2020-11-24 22:50:31,802 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5772 states.
[2020-11-24 22:50:31,809 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5772 states to 5772 states and 6638 transitions.
[2020-11-24 22:50:31,809 INFO  L751         BuchiCegarLoop]: Abstraction has 5772 states and 6638 transitions.
[2020-11-24 22:50:31,809 INFO  L631         BuchiCegarLoop]: Abstraction has 5772 states and 6638 transitions.
[2020-11-24 22:50:31,809 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 22:50:31,809 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5772 states and 6638 transitions.
[2020-11-24 22:50:31,816 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 22:50:31,816 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 22:50:31,816 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 22:50:31,818 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 22:50:31,818 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7673]              assume null == 0;
[L7674]  CALL        call this := FreshRefGenerator__success();
[L4051]              havoc newRef;
[L4052]              assume Alloc[newRef] == false;
[L4053]              Alloc[newRef] := true;
[L4054]              assume newRef != null;
[L7674]  RET         call this := FreshRefGenerator__success();
[L7675]              assume now >= 0;
[L7676]              assume DType[this] == _0x;
[L7677]              assume msgvalue_MSG == 0;
[L7678]              gas := gas - 53000;
[L7679]  CALL        call _0x__0x__success(this, msgsender_MSG, msgvalue_MSG);
[L4741]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]              assume msgsender_MSG != null;
[L4173]              Balance[this] := 0;
[L4187]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4188]  COND FALSE  !(revert)
[L4741]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4742]  COND FALSE  !(revert)
[L4745]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4239]              assume msgsender_MSG != null;
[L4240]              Balance[this] := 0;
[L4241]              owner_Owned[this] := null;
[L4242]              newOwner_Owned[this] := null;
[L4244]              owner_Owned[this] := msgsender_MSG;
[L4257]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]  COND FALSE  !(revert)
[L4745]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4746]  COND FALSE  !(revert)
[L4749]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4401]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]              assume msgsender_MSG != null;
[L4173]              Balance[this] := 0;
[L4187]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4188]  COND FALSE  !(revert)
[L4401]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4402]  COND FALSE  !(revert)
[L4405]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4239]              assume msgsender_MSG != null;
[L4240]              Balance[this] := 0;
[L4241]              owner_Owned[this] := null;
[L4242]              newOwner_Owned[this] := null;
[L4244]              owner_Owned[this] := msgsender_MSG;
[L4257]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]  COND FALSE  !(revert)
[L4405]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4406]  COND FALSE  !(revert)
[L4409]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4359]              assume msgsender_MSG != null;
[L4360]              Balance[this] := 0;
[L4361]              symbol_TokenERC20[this] := -911606817;
[L4362]              name_TokenERC20[this] := -911606817;
[L4363]              decimals_TokenERC20[this] := 0;
[L4364]              _totalSupply_TokenERC20[this] := 0;
[L4365]              balances_TokenERC20[this] := zeroRefintArr();
[L4366]              sum_balances0[this] := 0;
[L4367]              allowed_TokenERC20[this] := zeroRefRefintArr();
[L4368]              sum_allowed1[this] := 0;
[L4370]              symbol_TokenERC20[this] := 1870149687;
[L4371]              name_TokenERC20[this] := 450776320;
[L4372]              decimals_TokenERC20[this] := 8;
[L4373]              __var_2 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4374]              _totalSupply_TokenERC20[this] := nonlinearMul(999880006599780055836170557439878316590346642366426347732992, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4375]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][owner_Owned[this]];
[L4376]              balances_TokenERC20[this][owner_Owned[this]] := _totalSupply_TokenERC20[this];
[L4377]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][owner_Owned[this]];
[L4378]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L4409]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4410]  COND FALSE  !(revert)
[L4749]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4750]  COND FALSE  !(revert)
[L4753]  CALL        call _0x__0x_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4703]              assume msgsender_MSG != null;
[L4704]              Balance[this] := 0;
[L4705]              aSBlock__0x[this] := 0;
[L4706]              aEBlock__0x[this] := 0;
[L4707]              aCap__0x[this] := 0;
[L4708]              aTot__0x[this] := 0;
[L4709]              aAmt__0x[this] := 0;
[L4710]              sSBlock__0x[this] := 0;
[L4711]              sEBlock__0x[this] := 0;
[L4712]              sCap__0x[this] := 0;
[L4713]              sTot__0x[this] := 0;
[L4714]              sChunk__0x[this] := 0;
[L4715]              sPrice__0x[this] := 0;
[L4753]  RET         call _0x__0x_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4754]  COND FALSE  !(revert)
[L7679]  RET         call _0x__0x__success(this, msgsender_MSG, msgvalue_MSG);
[L7680]              assume !revert && gas >= 0;
[L7683]  CALL        call CorralChoice__0x(this);
[L7382]              havoc msgsender_MSG;
[L7383]              havoc msgvalue_MSG;
[L7384]              havoc choice;
[L7385]              havoc __ret_0_totalSupply;
[L7386]              havoc tokenOwner_s338;
[L7387]              havoc balance_s338;
[L7388]              havoc tokenOwner_s484;
[L7389]              havoc spender_s484;
[L7390]              havoc remaining_s484;
[L7391]              havoc to_s381;
[L7392]              havoc tokens_s381;
[L7393]              havoc success_s381;
[L7394]              havoc spender_s409;
[L7395]              havoc tokens_s409;
[L7396]              havoc success_s409;
[L7397]              havoc from_s468;
[L7398]              havoc to_s468;
[L7399]              havoc tokens_s468;
[L7400]              havoc success_s468;
[L7401]              havoc __ret_0_owner;
[L7402]              havoc __ret_0_newOwner;
[L7403]              havoc _newOwner_s217;
[L7404]              havoc __ret_0_symbol;
[L7405]              havoc __ret_0_name;
[L7406]              havoc __ret_0_decimals;
[L7407]              havoc spender_s527;
[L7408]              havoc tokens_s527;
[L7409]              havoc data_s527;
[L7410]              havoc success_s527;
[L7411]              havoc __ret_0_aSBlock;
[L7412]              havoc __ret_0_aEBlock;
[L7413]              havoc __ret_0_aCap;
[L7414]              havoc __ret_0_aTot;
[L7415]              havoc __ret_0_aAmt;
[L7416]              havoc __ret_0_sSBlock;
[L7417]              havoc __ret_0_sEBlock;
[L7418]              havoc __ret_0_sCap;
[L7419]              havoc __ret_0_sTot;
[L7420]              havoc __ret_0_sChunk;
[L7421]              havoc __ret_0_sPrice;
[L7422]              havoc _refer_s687;
[L7423]              havoc success_s687;
[L7424]              havoc _refer_s847;
[L7425]              havoc success_s847;
[L7426]              havoc StartBlock_s868;
[L7427]              havoc EndBlock_s868;
[L7428]              havoc DropCap_s868;
[L7429]              havoc DropCount_s868;
[L7430]              havoc DropAmount_s868;
[L7431]              havoc StartBlock_s892;
[L7432]              havoc EndBlock_s892;
[L7433]              havoc SaleCap_s892;
[L7434]              havoc SaleCount_s892;
[L7435]              havoc ChunkSize_s892;
[L7436]              havoc SalePrice_s892;
[L7437]              havoc _aSBlock_s926;
[L7438]              havoc _aEBlock_s926;
[L7439]              havoc _aAmt_s926;
[L7440]              havoc _aCap_s926;
[L7441]              havoc _sSBlock_s966;
[L7442]              havoc _sEBlock_s966;
[L7443]              havoc _sChunk_s966;
[L7444]              havoc _sPrice_s966;
[L7445]              havoc _sCap_s966;
[L7446]              havoc tmpNow;
[L7447]              havoc gas;
[L7448]              assume gas > 4000000 && gas <= 8000000;
[L7449]              tmpNow := now;
[L7450]              havoc now;
[L7451]              assume now > tmpNow;
[L7452]              assume msgsender_MSG != null;
[L7453]              assume DType[msgsender_MSG] != SafeMath;
[L7454]              assume DType[msgsender_MSG] != ERC20Interface;
[L7455]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7456]              assume DType[msgsender_MSG] != Owned;
[L7457]              assume DType[msgsender_MSG] != TokenERC20;
[L7458]              assume DType[msgsender_MSG] != _0x;
[L7459]              Alloc[msgsender_MSG] := true;
[L7460]  COND FALSE  !(choice == 32)
[L7466]  COND FALSE  !(choice == 31)
[L7472]  COND FALSE  !(choice == 30)
[L7478]  COND FALSE  !(choice == 29)
[L7485]  COND TRUE   choice == 28
[L7486]              gas := gas - 21000;
[L7487]  COND TRUE   gas >= 0
[L7488]              assume tokens_s409 >= 0 && tokens_s409 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7489]              assume msgvalue_MSG == 0;
[L7490]  CALL        call success_s409 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(p1 != msgsender_MSG || p2 != spender_s409);
[L3]                 revert := revert_hold;
[L1057]              havoc __exception;
[L1058]              revert := false;
[L1059]  COND FALSE  !(__exception)
[L1093]  CALL        call success_s409 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L4509]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_TokenERC20[this][msgsender_MSG][spender_s409];
[L4510]              allowed_TokenERC20[this][msgsender_MSG][spender_s409] := tokens_s409;
[L4511]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_TokenERC20[this][msgsender_MSG][spender_s409];
[L4512]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L4513]              success_s409 := true;
[L1093]  RET         call success_s409 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L1094]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((((((((success_s409 == true && allowed_TokenERC20[this][msgsender_MSG][spender_s409] == tokens_s409) && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && balances_TokenERC20[this] == old(balances_TokenERC20[this])) && allowed_TokenERC20[this][p1][p2] == old(allowed_TokenERC20[this][p1][p2])) && aSBlock__0x[this] == old(aSBlock__0x[this])) && aEBlock__0x[this] == old(aEBlock__0x[this])) && aCap__0x[this] == old(aCap__0x[this])) && aTot__0x[this] == old(aTot__0x[this])) && aAmt__0x[this] == old(aAmt__0x[this])) && sSBlock__0x[this] == old(sSBlock__0x[this])) && sEBlock__0x[this] == old(sEBlock__0x[this])) && sCap__0x[this] == old(sCap__0x[this])) && sTot__0x[this] == old(sTot__0x[this])) && sChunk__0x[this] == old(sChunk__0x[this])) && sPrice__0x[this] == old(sPrice__0x[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L7490]  RET         call success_s409 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L7683]  RET         call CorralChoice__0x(this);
[L7683]  CALL        call CorralChoice__0x(this);
[L7382]              havoc msgsender_MSG;
[L7383]              havoc msgvalue_MSG;
[L7384]              havoc choice;
[L7385]              havoc __ret_0_totalSupply;
[L7386]              havoc tokenOwner_s338;
[L7387]              havoc balance_s338;
[L7388]              havoc tokenOwner_s484;
[L7389]              havoc spender_s484;
[L7390]              havoc remaining_s484;
[L7391]              havoc to_s381;
[L7392]              havoc tokens_s381;
[L7393]              havoc success_s381;
[L7394]              havoc spender_s409;
[L7395]              havoc tokens_s409;
[L7396]              havoc success_s409;
[L7397]              havoc from_s468;
[L7398]              havoc to_s468;
[L7399]              havoc tokens_s468;
[L7400]              havoc success_s468;
[L7401]              havoc __ret_0_owner;
[L7402]              havoc __ret_0_newOwner;
[L7403]              havoc _newOwner_s217;
[L7404]              havoc __ret_0_symbol;
[L7405]              havoc __ret_0_name;
[L7406]              havoc __ret_0_decimals;
[L7407]              havoc spender_s527;
[L7408]              havoc tokens_s527;
[L7409]              havoc data_s527;
[L7410]              havoc success_s527;
[L7411]              havoc __ret_0_aSBlock;
[L7412]              havoc __ret_0_aEBlock;
[L7413]              havoc __ret_0_aCap;
[L7414]              havoc __ret_0_aTot;
[L7415]              havoc __ret_0_aAmt;
[L7416]              havoc __ret_0_sSBlock;
[L7417]              havoc __ret_0_sEBlock;
[L7418]              havoc __ret_0_sCap;
[L7419]              havoc __ret_0_sTot;
[L7420]              havoc __ret_0_sChunk;
[L7421]              havoc __ret_0_sPrice;
[L7422]              havoc _refer_s687;
[L7423]              havoc success_s687;
[L7424]              havoc _refer_s847;
[L7425]              havoc success_s847;
[L7426]              havoc StartBlock_s868;
[L7427]              havoc EndBlock_s868;
[L7428]              havoc DropCap_s868;
[L7429]              havoc DropCount_s868;
[L7430]              havoc DropAmount_s868;
[L7431]              havoc StartBlock_s892;
[L7432]              havoc EndBlock_s892;
[L7433]              havoc SaleCap_s892;
[L7434]              havoc SaleCount_s892;
[L7435]              havoc ChunkSize_s892;
[L7436]              havoc SalePrice_s892;
[L7437]              havoc _aSBlock_s926;
[L7438]              havoc _aEBlock_s926;
[L7439]              havoc _aAmt_s926;
[L7440]              havoc _aCap_s926;
[L7441]              havoc _sSBlock_s966;
[L7442]              havoc _sEBlock_s966;
[L7443]              havoc _sChunk_s966;
[L7444]              havoc _sPrice_s966;
[L7445]              havoc _sCap_s966;
[L7446]              havoc tmpNow;
[L7447]              havoc gas;
[L7448]              assume gas > 4000000 && gas <= 8000000;
[L7449]              tmpNow := now;
[L7450]              havoc now;
[L7451]              assume now > tmpNow;
[L7452]              assume msgsender_MSG != null;
[L7453]              assume DType[msgsender_MSG] != SafeMath;
[L7454]              assume DType[msgsender_MSG] != ERC20Interface;
[L7455]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7456]              assume DType[msgsender_MSG] != Owned;
[L7457]              assume DType[msgsender_MSG] != TokenERC20;
[L7458]              assume DType[msgsender_MSG] != _0x;
[L7459]              Alloc[msgsender_MSG] := true;
[L7460]  COND FALSE  !(choice == 32)
[L7466]  COND FALSE  !(choice == 31)
[L7472]  COND FALSE  !(choice == 30)
[L7478]  COND FALSE  !(choice == 29)
[L7485]  COND TRUE   choice == 28
[L7486]              gas := gas - 21000;
[L7487]  COND TRUE   gas >= 0
[L7488]              assume tokens_s409 >= 0 && tokens_s409 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7489]              assume msgvalue_MSG == 0;
[L7490]  CALL        call success_s409 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s409;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L1057]              havoc __exception;
[L1058]              revert := false;
[L1059]  COND FALSE  !(__exception)
[L1093]  CALL        call success_s409 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L4509]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_TokenERC20[this][msgsender_MSG][spender_s409];
[L4510]              allowed_TokenERC20[this][msgsender_MSG][spender_s409] := tokens_s409;
[L4511]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_TokenERC20[this][msgsender_MSG][spender_s409];
[L4512]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L4513]              success_s409 := true;
[L1093]  RET         call success_s409 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L1094]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((((((((success_s409 == true && allowed_TokenERC20[this][msgsender_MSG][spender_s409] == tokens_s409) && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && balances_TokenERC20[this] == old(balances_TokenERC20[this])) && allowed_TokenERC20[this][p1][p2] == old(allowed_TokenERC20[this][p1][p2])) && aSBlock__0x[this] == old(aSBlock__0x[this])) && aEBlock__0x[this] == old(aEBlock__0x[this])) && aCap__0x[this] == old(aCap__0x[this])) && aTot__0x[this] == old(aTot__0x[this])) && aAmt__0x[this] == old(aAmt__0x[this])) && sSBlock__0x[this] == old(sSBlock__0x[this])) && sEBlock__0x[this] == old(sEBlock__0x[this])) && sCap__0x[this] == old(sCap__0x[this])) && sTot__0x[this] == old(sTot__0x[this])) && sChunk__0x[this] == old(sChunk__0x[this])) && sPrice__0x[this] == old(sPrice__0x[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L7490]  RET         call success_s409 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L7683]  RET         call CorralChoice__0x(this);

Loop:
[L7683]  CALL        call CorralChoice__0x(this);
[L7382]              havoc msgsender_MSG;
[L7383]              havoc msgvalue_MSG;
[L7384]              havoc choice;
[L7385]              havoc __ret_0_totalSupply;
[L7386]              havoc tokenOwner_s338;
[L7387]              havoc balance_s338;
[L7388]              havoc tokenOwner_s484;
[L7389]              havoc spender_s484;
[L7390]              havoc remaining_s484;
[L7391]              havoc to_s381;
[L7392]              havoc tokens_s381;
[L7393]              havoc success_s381;
[L7394]              havoc spender_s409;
[L7395]              havoc tokens_s409;
[L7396]              havoc success_s409;
[L7397]              havoc from_s468;
[L7398]              havoc to_s468;
[L7399]              havoc tokens_s468;
[L7400]              havoc success_s468;
[L7401]              havoc __ret_0_owner;
[L7402]              havoc __ret_0_newOwner;
[L7403]              havoc _newOwner_s217;
[L7404]              havoc __ret_0_symbol;
[L7405]              havoc __ret_0_name;
[L7406]              havoc __ret_0_decimals;
[L7407]              havoc spender_s527;
[L7408]              havoc tokens_s527;
[L7409]              havoc data_s527;
[L7410]              havoc success_s527;
[L7411]              havoc __ret_0_aSBlock;
[L7412]              havoc __ret_0_aEBlock;
[L7413]              havoc __ret_0_aCap;
[L7414]              havoc __ret_0_aTot;
[L7415]              havoc __ret_0_aAmt;
[L7416]              havoc __ret_0_sSBlock;
[L7417]              havoc __ret_0_sEBlock;
[L7418]              havoc __ret_0_sCap;
[L7419]              havoc __ret_0_sTot;
[L7420]              havoc __ret_0_sChunk;
[L7421]              havoc __ret_0_sPrice;
[L7422]              havoc _refer_s687;
[L7423]              havoc success_s687;
[L7424]              havoc _refer_s847;
[L7425]              havoc success_s847;
[L7426]              havoc StartBlock_s868;
[L7427]              havoc EndBlock_s868;
[L7428]              havoc DropCap_s868;
[L7429]              havoc DropCount_s868;
[L7430]              havoc DropAmount_s868;
[L7431]              havoc StartBlock_s892;
[L7432]              havoc EndBlock_s892;
[L7433]              havoc SaleCap_s892;
[L7434]              havoc SaleCount_s892;
[L7435]              havoc ChunkSize_s892;
[L7436]              havoc SalePrice_s892;
[L7437]              havoc _aSBlock_s926;
[L7438]              havoc _aEBlock_s926;
[L7439]              havoc _aAmt_s926;
[L7440]              havoc _aCap_s926;
[L7441]              havoc _sSBlock_s966;
[L7442]              havoc _sEBlock_s966;
[L7443]              havoc _sChunk_s966;
[L7444]              havoc _sPrice_s966;
[L7445]              havoc _sCap_s966;
[L7446]              havoc tmpNow;
[L7447]              havoc gas;
[L7448]              assume gas > 4000000 && gas <= 8000000;
[L7449]              tmpNow := now;
[L7450]              havoc now;
[L7451]              assume now > tmpNow;
[L7452]              assume msgsender_MSG != null;
[L7453]              assume DType[msgsender_MSG] != SafeMath;
[L7454]              assume DType[msgsender_MSG] != ERC20Interface;
[L7455]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7456]              assume DType[msgsender_MSG] != Owned;
[L7457]              assume DType[msgsender_MSG] != TokenERC20;
[L7458]              assume DType[msgsender_MSG] != _0x;
[L7459]              Alloc[msgsender_MSG] := true;
[L7460]  COND FALSE  !(choice == 32)
[L7466]  COND FALSE  !(choice == 31)
[L7472]  COND FALSE  !(choice == 30)
[L7478]  COND FALSE  !(choice == 29)
[L7485]  COND TRUE   choice == 28
[L7486]              gas := gas - 21000;
[L7487]  COND TRUE   gas >= 0
[L7488]              assume tokens_s409 >= 0 && tokens_s409 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7489]              assume msgvalue_MSG == 0;
[L7490]  CALL        call success_s409 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s409;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L1057]              havoc __exception;
[L1058]              revert := false;
[L1059]  COND FALSE  !(__exception)
[L1093]  CALL        call success_s409 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L4509]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_TokenERC20[this][msgsender_MSG][spender_s409];
[L4510]              allowed_TokenERC20[this][msgsender_MSG][spender_s409] := tokens_s409;
[L4511]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_TokenERC20[this][msgsender_MSG][spender_s409];
[L4512]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L4513]              success_s409 := true;
[L1093]  RET         call success_s409 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L1094]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((((((((success_s409 == true && allowed_TokenERC20[this][msgsender_MSG][spender_s409] == tokens_s409) && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && balances_TokenERC20[this] == old(balances_TokenERC20[this])) && allowed_TokenERC20[this][p1][p2] == old(allowed_TokenERC20[this][p1][p2])) && aSBlock__0x[this] == old(aSBlock__0x[this])) && aEBlock__0x[this] == old(aEBlock__0x[this])) && aCap__0x[this] == old(aCap__0x[this])) && aTot__0x[this] == old(aTot__0x[this])) && aAmt__0x[this] == old(aAmt__0x[this])) && sSBlock__0x[this] == old(sSBlock__0x[this])) && sEBlock__0x[this] == old(sEBlock__0x[this])) && sCap__0x[this] == old(sCap__0x[this])) && sTot__0x[this] == old(sTot__0x[this])) && sChunk__0x[this] == old(sChunk__0x[this])) && sPrice__0x[this] == old(sPrice__0x[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L7490]  RET         call success_s409 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, spender_s409, tokens_s409);
[L7683]  RET         call CorralChoice__0x(this);

[2020-11-24 22:50:31,823 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 22:50:31,824 INFO  L82        PathProgramCache]: Analyzing trace with hash 242342649, now seen corresponding path program 1 times
[2020-11-24 22:50:31,824 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 22:50:31,853 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 22:50:31,977 INFO  L134       CoverageAnalysis]: Checked inductivity of 117 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 113 trivial. 0 not checked.
[2020-11-24 22:50:31,977 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 22:50:31,978 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 22:50:31,978 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 22:50:31,978 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 22:50:31,978 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-24 22:50:31,978 INFO  L87              Difference]: Start difference. First operand 5772 states and 6638 transitions. cyclomatic complexity: 873 Second operand 7 states.
[2020-11-24 22:50:32,704 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 22:50:32,704 INFO  L93              Difference]: Finished difference Result 2975 states and 3409 transitions.
[2020-11-24 22:50:32,704 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 22:50:32,704 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2975 states and 3409 transitions.
[2020-11-24 22:50:32,709 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 22:50:32,709 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2975 states to 0 states and 0 transitions.
[2020-11-24 22:50:32,709 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 22:50:32,709 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 22:50:32,709 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 22:50:32,709 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 22:50:32,709 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 22:50:32,709 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 22:50:32,709 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 22:50:32,709 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 22:50:32,709 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 22:50:32,709 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 22:50:32,709 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 22:50:32,712 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 10:50:32 BasicIcfg
[2020-11-24 22:50:32,712 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 22:50:32,713 INFO  L168              Benchmark]: Toolchain (without parser) took 11184.41 ms. Allocated memory was 1.0 GB in the beginning and 2.0 GB in the end (delta: 967.8 MB). Free memory was 929.8 MB in the beginning and 1.3 GB in the end (delta: -357.7 MB). Peak memory consumption was 610.1 MB. Max. memory is 15.3 GB.
[2020-11-24 22:50:32,713 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.22 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 22:50:32,714 INFO  L168              Benchmark]: Boogie Preprocessor took 121.68 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-24 22:50:32,714 INFO  L168              Benchmark]: UtopiaSpecLang took 72.55 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 897.6 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-24 22:50:32,715 INFO  L168              Benchmark]: Boogie Printer took 21.58 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 892.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 22:50:32,715 INFO  L168              Benchmark]: RCFGBuilder took 1076.56 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 67.1 MB). Free memory was 892.2 MB in the beginning and 998.9 MB in the end (delta: -106.7 MB). Peak memory consumption was 181.6 MB. Max. memory is 15.3 GB.
[2020-11-24 22:50:32,715 INFO  L168              Benchmark]: UtopiaLTL2Aut took 33.61 ms. Allocated memory is still 1.1 GB. Free memory was 998.9 MB in the beginning and 985.8 MB in the end (delta: 13.1 MB). Peak memory consumption was 13.1 MB. Max. memory is 15.3 GB.
[2020-11-24 22:50:32,715 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1852.80 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 157.3 MB). Free memory was 985.8 MB in the beginning and 918.9 MB in the end (delta: 66.9 MB). Peak memory consumption was 500.3 MB. Max. memory is 15.3 GB.
[2020-11-24 22:50:32,716 INFO  L168              Benchmark]: BlockEncodingV2 took 177.05 ms. Allocated memory is still 1.3 GB. Free memory was 918.9 MB in the beginning and 816.0 MB in the end (delta: 102.9 MB). Peak memory consumption was 102.9 MB. Max. memory is 15.3 GB.
[2020-11-24 22:50:32,716 INFO  L168              Benchmark]: BuchiAutomizer took 7825.72 ms. Allocated memory was 1.3 GB in the beginning and 2.0 GB in the end (delta: 743.4 MB). Free memory was 816.0 MB in the beginning and 1.3 GB in the end (delta: -471.5 MB). Peak memory consumption was 271.9 MB. Max. memory is 15.3 GB.
[2020-11-24 22:50:32,719 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    8362 locations, 14617 edges
  - StatisticsResult: Encoded RCFG
    8306 locations, 14472 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.22 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 121.68 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 72.55 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 897.6 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 21.58 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 892.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1076.56 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 67.1 MB). Free memory was 892.2 MB in the beginning and 998.9 MB in the end (delta: -106.7 MB). Peak memory consumption was 181.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 33.61 ms. Allocated memory is still 1.1 GB. Free memory was 998.9 MB in the beginning and 985.8 MB in the end (delta: 13.1 MB). Peak memory consumption was 13.1 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1852.80 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 157.3 MB). Free memory was 985.8 MB in the beginning and 918.9 MB in the end (delta: 66.9 MB). Peak memory consumption was 500.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 177.05 ms. Allocated memory is still 1.3 GB. Free memory was 918.9 MB in the beginning and 816.0 MB in the end (delta: 102.9 MB). Peak memory consumption was 102.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 7825.72 ms. Allocated memory was 1.3 GB in the beginning and 2.0 GB in the end (delta: 743.4 MB). Free memory was 816.0 MB in the beginning and 1.3 GB in the end (delta: -471.5 MB). Peak memory consumption was 271.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    3568 locations, 4644 edges
  - StatisticsResult: BuchiProgram size
    8362 locations, 14617 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 13 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 7.7s and 7 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.9s. Construction of modules took 4.2s. BÃ¼chi inclusion checks took 1.5s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.4s AutomataMinimizationTime, 5 MinimizatonAttempts, 3261 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.2s Buchi closure took 0.0s. Biggest automaton had 7556 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 48290 SDtfs, 44538 SDslu, 42269 SDs, 0 SdLazy, 68667 SolverSat, 8457 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 4.2s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_approve_TokenERC200) ==> ( <>(success_approve_TokenERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
