This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 11:56:48,522 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 11:56:48,523 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 11:56:48,537 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 11:56:48,537 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 11:56:48,538 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 11:56:48,539 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 11:56:48,541 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 11:56:48,542 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 11:56:48,543 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 11:56:48,544 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 11:56:48,544 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 11:56:48,545 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 11:56:48,546 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 11:56:48,546 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 11:56:48,547 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 11:56:48,547 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 11:56:48,549 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 11:56:48,550 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 11:56:48,551 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 11:56:48,552 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 11:56:48,553 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 11:56:48,554 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 11:56:48,554 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 11:56:48,554 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 11:56:48,555 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 11:56:48,555 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 11:56:48,556 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 11:56:48,556 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 11:56:48,556 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 11:56:48,557 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 11:56:48,557 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 11:56:48,558 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 11:56:48,558 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 11:56:48,559 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 11:56:48,559 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 11:56:48,560 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 11:56:48,560 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 11:56:48,560 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 11:56:48,561 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 11:56:48,561 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 11:56:48,561 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 11:56:48,569 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 11:56:48,569 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 11:56:48,570 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 11:56:48,570 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 11:56:48,570 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 11:56:48,570 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 11:56:48,571 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 11:56:48,571 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 11:56:48,571 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 11:56:48,571 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 11:56:48,571 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 11:56:48,571 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 11:56:48,571 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 11:56:48,571 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 11:56:48,571 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 11:56:48,572 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 11:56:48,572 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 11:56:48,572 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 11:56:48,572 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 11:56:48,572 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 11:56:48,572 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 11:56:48,572 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 11:56:48,572 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 11:56:48,572 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 11:56:48,572 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 11:56:48,573 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 11:56:48,607 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 11:56:48,624 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 11:56:48,626 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 11:56:48,627 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 11:56:48,628 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 11:56:48,628 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl
[2020-11-25 11:56:48,629 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl'
[2020-11-25 11:56:48,700 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 11:56:48,701 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 11:56:48,702 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 11:56:48,702 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 11:56:48,702 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 11:56:48,720 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:48" (1/1) ...
[2020-11-25 11:56:48,722 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:48" (1/1) ...
[2020-11-25 11:56:48,753 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:48" (1/1) ...
[2020-11-25 11:56:48,753 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:48" (1/1) ...
[2020-11-25 11:56:48,770 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:48" (1/1) ...
[2020-11-25 11:56:48,778 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:48" (1/1) ...
[2020-11-25 11:56:48,783 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:48" (1/1) ...
[2020-11-25 11:56:48,791 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 11:56:48,792 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 11:56:48,792 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 11:56:48,794 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 11:56:48,798 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:48" (1/1) ...
[2020-11-25 11:56:48,814 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(CoinHemp.totalSupply, totalSupply_CoinHemp[this] >= 0 && totalSupply_CoinHemp[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CoinHemp.totalSupply, return == totalSupply_CoinHemp[this] && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this]) && balances_CoinHemp[this] == old(balances_CoinHemp[this]) && allowed_CoinHemp[this] == old(allowed_CoinHemp[this]) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this]) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this]) && name_CoinHemp[this] == old(name_CoinHemp[this]) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this]) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this]) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]))))
[2020-11-25 11:56:48,819 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(CoinHemp.totalSupply, totalSupply_CoinHemp[this] >= 0 && totalSupply_CoinHemp[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CoinHemp.totalSupply, return == totalSupply_CoinHemp[this] && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this]) && balances_CoinHemp[this] == old(balances_CoinHemp[this]) && allowed_CoinHemp[this] == old(allowed_CoinHemp[this]) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this]) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this]) && name_CoinHemp[this] == old(name_CoinHemp[this]) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this]) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this]) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]))))
[2020-11-25 11:56:48,826 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(CoinHemp.totalSupply, totalSupply_CoinHemp[this] >= 0 && totalSupply_CoinHemp[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CoinHemp.totalSupply, return == totalSupply_CoinHemp[this] && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this]) && balances_CoinHemp[this] == old(balances_CoinHemp[this]) && allowed_CoinHemp[this] == old(allowed_CoinHemp[this]) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this]) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this]) && name_CoinHemp[this] == old(name_CoinHemp[this]) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this]) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this]) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]))))
[2020-11-25 11:56:48,832 INFO  L636   opiaSpecLangObserver]: Parsed ( totalSupply_CoinHemp[this]>=0 && totalSupply_CoinHemp[this]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[IdentifierExpression[totalSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 11:56:48,835 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( __ret_0_==totalSupply_CoinHemp[this] && totalSupply_CoinHemp[this]==( old(totalSupply_CoinHemp[this]) ) ) && balances_CoinHemp[this]==( old(balances_CoinHemp[this]) ) ) && allowed_CoinHemp[this]==( old(allowed_CoinHemp[this]) ) ) && admin_address_CoinHemp[this]==( old(admin_address_CoinHemp[this]) ) ) && account_address_CoinHemp[this]==( old(account_address_CoinHemp[this]) ) ) && name_CoinHemp[this]==( old(name_CoinHemp[this]) ) ) && symbol_CoinHemp[this]==( old(symbol_CoinHemp[this]) ) ) && decimals_CoinHemp[this]==( old(decimals_CoinHemp[this]) ) ) && initSupply_CoinHemp[this]==( old(initSupply_CoinHemp[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,totalSupply_CoinHemp>],ArrayAccessExpression[IdentifierExpression[totalSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[admin_address_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[admin_address_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[account_address_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[account_address_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[initSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[initSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_CoinHemp>]]]]]]
[2020-11-25 11:56:48,838 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(CoinHemp.totalSupply, totalSupply_CoinHemp[this] >= 0 && totalSupply_CoinHemp[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CoinHemp.totalSupply, return == totalSupply_CoinHemp[this] && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this]) && balances_CoinHemp[this] == old(balances_CoinHemp[this]) && allowed_CoinHemp[this] == old(allowed_CoinHemp[this]) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this]) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this]) && name_CoinHemp[this] == old(name_CoinHemp[this]) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this]) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this]) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]))))
[2020-11-25 11:56:48,838 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_totalSupply_CoinHemp0) ==> ( <>AP(success_totalSupply_CoinHemp0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 11:56:48,846 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:56:48 PropertyContainer
[2020-11-25 11:56:48,846 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 11:56:48,846 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 11:56:48,846 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 11:56:48,847 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 11:56:48,847 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:48" (1/2) ...
[2020-11-25 11:56:48,848 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 11:56:48,848 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 11:56:48,858 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:56:48" (2/2) ...
[2020-11-25 11:56:48,858 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 11:56:48,859 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 11:56:48,859 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 11:56:48,859 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 11:56:48,859 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:48" (1/2) ...
[2020-11-25 11:56:48,913 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 11:56:48,914 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp_NoBaseCtor__success
[2020-11-25 11:56:48,914 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp
[2020-11-25 11:56:48,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp
[2020-11-25 11:56:48,914 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CoinHemp
[2020-11-25 11:56:48,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CoinHemp
[2020-11-25 11:56:48,914 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CoinHemp
[2020-11-25 11:56:48,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CoinHemp
[2020-11-25 11:56:48,914 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CoinHemp
[2020-11-25 11:56:48,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CoinHemp
[2020-11-25 11:56:48,914 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CoinHemp
[2020-11-25 11:56:48,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CoinHemp
[2020-11-25 11:56:48,915 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CoinHemp
[2020-11-25 11:56:48,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CoinHemp
[2020-11-25 11:56:48,915 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_CoinHemp
[2020-11-25 11:56:48,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_CoinHemp
[2020-11-25 11:56:48,915 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_CoinHemp
[2020-11-25 11:56:48,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_CoinHemp
[2020-11-25 11:56:48,915 INFO  L130     BoogieDeclarations]: Found specification of procedure setAdmin~address_CoinHemp
[2020-11-25 11:56:48,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAdmin~address_CoinHemp
[2020-11-25 11:56:48,915 INFO  L130     BoogieDeclarations]: Found specification of procedure withDraw_CoinHemp
[2020-11-25 11:56:48,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure withDraw_CoinHemp
[2020-11-25 11:56:48,916 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_CoinHemp__success
[2020-11-25 11:56:48,916 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_CoinHemp__success
[2020-11-25 11:56:48,916 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_CoinHemp__success
[2020-11-25 11:56:48,916 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_CoinHemp__success
[2020-11-25 11:56:48,916 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_CoinHemp__success
[2020-11-25 11:56:48,917 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_address_CoinHemp
[2020-11-25 11:56:48,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_address_CoinHemp
[2020-11-25 11:56:48,917 INFO  L130     BoogieDeclarations]: Found specification of procedure account_address_CoinHemp
[2020-11-25 11:56:48,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure account_address_CoinHemp
[2020-11-25 11:56:48,917 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CoinHemp
[2020-11-25 11:56:48,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CoinHemp
[2020-11-25 11:56:48,917 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CoinHemp
[2020-11-25 11:56:48,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CoinHemp
[2020-11-25 11:56:48,917 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CoinHemp
[2020-11-25 11:56:48,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CoinHemp
[2020-11-25 11:56:48,917 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CoinHemp
[2020-11-25 11:56:48,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CoinHemp
[2020-11-25 11:56:48,917 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 11:56:48,918 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 11:56:48,918 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 11:56:48,918 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_only_pre__success
[2020-11-25 11:56:48,918 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_CoinHemp
[2020-11-25 11:56:48,918 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 11:56:48,918 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 11:56:48,918 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp_NoBaseCtor__fail
[2020-11-25 11:56:48,918 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp__success
[2020-11-25 11:56:48,918 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp__fail
[2020-11-25 11:56:48,918 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CoinHemp__success
[2020-11-25 11:56:48,918 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CoinHemp__fail
[2020-11-25 11:56:48,918 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CoinHemp__success
[2020-11-25 11:56:48,918 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CoinHemp__fail
[2020-11-25 11:56:48,918 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CoinHemp__success
[2020-11-25 11:56:48,919 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CoinHemp__fail
[2020-11-25 11:56:48,919 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CoinHemp__success
[2020-11-25 11:56:48,919 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CoinHemp__fail
[2020-11-25 11:56:48,919 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CoinHemp__success
[2020-11-25 11:56:48,919 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CoinHemp__fail
[2020-11-25 11:56:48,919 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:56:48,919 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:56:48,919 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:56:48,919 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:56:48,919 INFO  L130     BoogieDeclarations]: Found specification of procedure setAdmin~address_CoinHemp__success
[2020-11-25 11:56:48,919 INFO  L130     BoogieDeclarations]: Found specification of procedure setAdmin~address_CoinHemp__fail
[2020-11-25 11:56:48,919 INFO  L130     BoogieDeclarations]: Found specification of procedure withDraw_CoinHemp__success
[2020-11-25 11:56:48,920 INFO  L130     BoogieDeclarations]: Found specification of procedure withDraw_CoinHemp__fail
[2020-11-25 11:56:48,920 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_CoinHemp__fail
[2020-11-25 11:56:48,920 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_CoinHemp__fail
[2020-11-25 11:56:48,920 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_CoinHemp__fail
[2020-11-25 11:56:48,920 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_CoinHemp__fail
[2020-11-25 11:56:48,920 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_CoinHemp__fail
[2020-11-25 11:56:48,920 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_address_CoinHemp__success
[2020-11-25 11:56:48,920 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_address_CoinHemp__fail
[2020-11-25 11:56:48,920 INFO  L130     BoogieDeclarations]: Found specification of procedure account_address_CoinHemp__success
[2020-11-25 11:56:48,920 INFO  L130     BoogieDeclarations]: Found specification of procedure account_address_CoinHemp__fail
[2020-11-25 11:56:48,920 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CoinHemp__success
[2020-11-25 11:56:48,920 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CoinHemp__fail
[2020-11-25 11:56:48,920 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CoinHemp__success
[2020-11-25 11:56:48,921 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CoinHemp__fail
[2020-11-25 11:56:48,921 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CoinHemp__success
[2020-11-25 11:56:48,921 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CoinHemp__fail
[2020-11-25 11:56:48,921 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CoinHemp__success
[2020-11-25 11:56:48,921 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CoinHemp__fail
[2020-11-25 11:56:48,921 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 11:56:48,921 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 11:56:48,921 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 11:56:48,921 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_only_pre__fail
[2020-11-25 11:56:48,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 11:56:48,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 11:56:48,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp_NoBaseCtor__fail
[2020-11-25 11:56:48,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp_NoBaseCtor__success
[2020-11-25 11:56:48,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp__fail
[2020-11-25 11:56:48,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp__success
[2020-11-25 11:56:48,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CoinHemp__fail
[2020-11-25 11:56:48,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CoinHemp__success
[2020-11-25 11:56:48,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CoinHemp__fail
[2020-11-25 11:56:48,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CoinHemp__success
[2020-11-25 11:56:48,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CoinHemp__fail
[2020-11-25 11:56:48,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CoinHemp__success
[2020-11-25 11:56:48,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CoinHemp__fail
[2020-11-25 11:56:48,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CoinHemp__success
[2020-11-25 11:56:48,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CoinHemp__fail
[2020-11-25 11:56:48,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CoinHemp__success
[2020-11-25 11:56:48,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:56:48,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:56:48,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:56:48,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:56:48,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAdmin~address_CoinHemp__fail
[2020-11-25 11:56:48,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAdmin~address_CoinHemp__success
[2020-11-25 11:56:48,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure withDraw_CoinHemp__fail
[2020-11-25 11:56:48,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure withDraw_CoinHemp__success
[2020-11-25 11:56:48,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_CoinHemp__fail
[2020-11-25 11:56:48,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_CoinHemp__success
[2020-11-25 11:56:48,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_CoinHemp__fail
[2020-11-25 11:56:48,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_CoinHemp__success
[2020-11-25 11:56:48,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_CoinHemp__fail
[2020-11-25 11:56:48,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_CoinHemp__success
[2020-11-25 11:56:48,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_CoinHemp__fail
[2020-11-25 11:56:48,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_CoinHemp__success
[2020-11-25 11:56:48,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_CoinHemp__fail
[2020-11-25 11:56:48,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_CoinHemp__success
[2020-11-25 11:56:48,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_address_CoinHemp__fail
[2020-11-25 11:56:48,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_address_CoinHemp__success
[2020-11-25 11:56:48,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure account_address_CoinHemp__fail
[2020-11-25 11:56:48,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure account_address_CoinHemp__success
[2020-11-25 11:56:48,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CoinHemp__fail
[2020-11-25 11:56:48,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CoinHemp__success
[2020-11-25 11:56:48,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CoinHemp__fail
[2020-11-25 11:56:48,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CoinHemp__success
[2020-11-25 11:56:48,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CoinHemp__fail
[2020-11-25 11:56:48,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CoinHemp__success
[2020-11-25 11:56:48,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CoinHemp__fail
[2020-11-25 11:56:48,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CoinHemp__success
[2020-11-25 11:56:48,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 11:56:48,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 11:56:48,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 11:56:48,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 11:56:48,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 11:56:48,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 11:56:48,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_only_pre__fail
[2020-11-25 11:56:48,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_only_pre__success
[2020-11-25 11:56:48,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_CoinHemp
[2020-11-25 11:56:48,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 11:56:48,926 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 11:56:48,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 11:56:49,358 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:56:49,358 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:56:49,358 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:56:49,440 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 11:56:49,440 INFO  L286             CfgBuilder]: Removed 1 assue(true) statements.
[2020-11-25 11:56:49,442 INFO  L202        PluginConnector]: Adding new model CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:56:49 BoogieIcfgContainer
[2020-11-25 11:56:49,442 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:56:48" (2/2) ...
[2020-11-25 11:56:49,442 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 11:56:49,443 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@239445f6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:56:49, skipping insertion in model container
[2020-11-25 11:56:49,443 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 11:56:49,443 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 11:56:49,443 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 11:56:49,444 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 11:56:49,445 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:48" (1/3) ...
[2020-11-25 11:56:49,445 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@9020b6e and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:56:49, skipping insertion in model container
[2020-11-25 11:56:49,445 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:56:48" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 11:56:49,483 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:56:49 NWAContainer
[2020-11-25 11:56:49,483 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 11:56:49,483 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 11:56:49,483 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 11:56:49,484 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 11:56:49,485 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:56:49" (3/4) ...
[2020-11-25 11:56:49,485 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@72b25c89 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:56:49, skipping insertion in model container
[2020-11-25 11:56:49,485 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:56:49" (4/4) ...
[2020-11-25 11:56:49,488 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 11:56:49,492 INFO  L110   BuchiProductObserver]: Initial RCFG 1291 locations, 1650 edges
[2020-11-25 11:56:49,492 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 11:56:49,504 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 11:56:50,381 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 11:56:50,385 INFO  L110   BuchiProductObserver]: BuchiProgram size 3024 locations, 5186 edges
[2020-11-25 11:56:50,385 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:56:50 BoogieIcfgContainer
[2020-11-25 11:56:50,386 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 11:56:50,386 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 11:56:50,386 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 11:56:50,387 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 11:56:50,388 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:56:50" (1/1) ...
[2020-11-25 11:56:50,440 INFO  L313           BlockEncoder]: Initial Icfg 3024 locations, 5186 edges
[2020-11-25 11:56:50,440 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 11:56:50,441 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 11:56:50,441 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 11:56:50,441 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 11:56:50,450 INFO  L70    emoveInfeasibleEdges]: Removed 27 edges and 5 locations because of local infeasibility
[2020-11-25 11:56:50,455 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 11:56:50,464 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 11:56:50,468 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 11:56:50,471 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 11:56:50,472 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 11:56:50,475 INFO  L313           BlockEncoder]: Encoded RCFG 3006 locations, 5140 edges
[2020-11-25 11:56:50,476 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:56:50 BasicIcfg
[2020-11-25 11:56:50,476 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 11:56:50,476 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 11:56:50,476 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 11:56:50,478 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 11:56:50,478 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:56:50,478 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:56:48" (1/6) ...
[2020-11-25 11:56:50,480 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@57e20484 and model type CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:56:50, skipping insertion in model container
[2020-11-25 11:56:50,480 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:56:50,480 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:56:48" (2/6) ...
[2020-11-25 11:56:50,480 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@57e20484 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:56:50, skipping insertion in model container
[2020-11-25 11:56:50,480 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:56:50,480 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:56:49" (3/6) ...
[2020-11-25 11:56:50,481 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@57e20484 and model type CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:56:50, skipping insertion in model container
[2020-11-25 11:56:50,481 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:56:50,481 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:56:49" (4/6) ...
[2020-11-25 11:56:50,481 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@57e20484 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:56:50, skipping insertion in model container
[2020-11-25 11:56:50,481 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:56:50,481 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:56:50" (5/6) ...
[2020-11-25 11:56:50,481 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@57e20484 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 11:56:50, skipping insertion in model container
[2020-11-25 11:56:50,481 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:56:50,481 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:56:50" (6/6) ...
[2020-11-25 11:56:50,482 INFO  L404   chiAutomizerObserver]: Analyzing ICFG CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_totalsupply.bpl_BEv2
[2020-11-25 11:56:50,515 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 11:56:50,516 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 11:56:50,516 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 11:56:50,516 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 11:56:50,516 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 11:56:50,516 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 11:56:50,516 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 11:56:50,516 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 11:56:50,516 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 11:56:50,539 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3006 states.
[2020-11-25 11:56:50,588 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:56:50,588 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:56:50,588 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:56:50,595 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:56:50,595 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:56:50,595 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 11:56:50,595 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3006 states.
[2020-11-25 11:56:50,612 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:56:50,613 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:56:50,613 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:56:50,614 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:56:50,614 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_CoinHemp0 := false;
[L2]                 call_totalSupply_CoinHemp0 := false;
[L2]     CALL        call main();
[L2767]              assume null == 0;
[L2768]  CALL        call this := FreshRefGenerator__success();
[L1410]              havoc newRef;
[L1411]              assume Alloc[newRef] == false;
[L1412]              Alloc[newRef] := true;
[L1413]              assume newRef != null;
[L2768]  RET         call this := FreshRefGenerator__success();
[L2769]              assume now >= 0;
[L2770]              assume DType[this] == CoinHemp;
[L2771]              assume msgvalue_MSG >= 0;
[L2772]              gas := gas - 53000;
[L2773]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L95]                havoc __exception;
[L96]                revert := false;
[L97]    COND FALSE  !(__exception)
[L121]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1512]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1462]              assume msgsender_MSG != null;
[L1463]              Balance[this] := 0;
[L1464]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1465]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              balances_CoinHemp[this] := zeroRefintArr();
[L1469]              sum_balances0[this] := 0;
[L1470]              name_CoinHemp[this] := -1920728545;
[L1471]              symbol_CoinHemp[this] := 294157574;
[L1472]              decimals_CoinHemp[this] := 18;
[L1473]              initSupply_CoinHemp[this] := 400000000;
[L1474]              totalSupply_CoinHemp[this] := 0;
[L1475]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1476]              sum_allowed1[this] := 0;
[L1479]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1480]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1481]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1483]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1484]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1912]  COND TRUE   a_s472 == 0
[L1913]              c_s472 := 0;
[L1484]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1485]  COND TRUE   revert
[L1512]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  COND FALSE  !(revert)
[L121]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L122]               assume !revert && gas >= 0;
[L2773]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2774]              assume !revert && gas >= 0;

Loop:
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND TRUE   choice == 15
[L2665]              gas := gas - 21000;
[L2666]  COND FALSE  !(gas >= 0)
[L2777]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:56:50,632 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:56:50,633 INFO  L82        PathProgramCache]: Analyzing trace with hash -1301263583, now seen corresponding path program 1 times
[2020-11-25 11:56:50,641 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:56:50,670 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:56:50,734 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:56:50,737 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:56:50,737 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:56:50,741 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:56:50,868 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:56:50,869 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:56:50,870 INFO  L87              Difference]: Start difference. First operand 3006 states. Second operand 4 states.
[2020-11-25 11:56:51,296 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:56:51,296 INFO  L93              Difference]: Finished difference Result 2872 states and 3364 transitions.
[2020-11-25 11:56:51,296 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:56:51,297 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2872 states and 3364 transitions.
[2020-11-25 11:56:51,311 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:56:51,333 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2872 states to 2867 states and 3354 transitions.
[2020-11-25 11:56:51,334 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 11:56:51,335 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 124
[2020-11-25 11:56:51,336 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2867 states and 3354 transitions.
[2020-11-25 11:56:51,343 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:56:51,343 INFO  L728         BuchiCegarLoop]: Abstraction has 2867 states and 3354 transitions.
[2020-11-25 11:56:51,358 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2867 states and 3354 transitions.
[2020-11-25 11:56:51,408 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2867 to 2867.
[2020-11-25 11:56:51,409 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2867 states.
[2020-11-25 11:56:51,416 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2867 states to 2867 states and 3354 transitions.
[2020-11-25 11:56:51,417 INFO  L751         BuchiCegarLoop]: Abstraction has 2867 states and 3354 transitions.
[2020-11-25 11:56:51,417 INFO  L631         BuchiCegarLoop]: Abstraction has 2867 states and 3354 transitions.
[2020-11-25 11:56:51,417 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 11:56:51,417 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2867 states and 3354 transitions.
[2020-11-25 11:56:51,423 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:56:51,423 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:56:51,423 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:56:51,425 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:56:51,426 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_CoinHemp0 := false;
[L2]                 call_totalSupply_CoinHemp0 := false;
[L2]     CALL        call main();
[L2767]              assume null == 0;
[L2768]  CALL        call this := FreshRefGenerator__success();
[L1410]              havoc newRef;
[L1411]              assume Alloc[newRef] == false;
[L1412]              Alloc[newRef] := true;
[L1413]              assume newRef != null;
[L2768]  RET         call this := FreshRefGenerator__success();
[L2769]              assume now >= 0;
[L2770]              assume DType[this] == CoinHemp;
[L2771]              assume msgvalue_MSG >= 0;
[L2772]              gas := gas - 53000;
[L2773]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L95]                havoc __exception;
[L96]                revert := false;
[L97]    COND FALSE  !(__exception)
[L121]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1512]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1462]              assume msgsender_MSG != null;
[L1463]              Balance[this] := 0;
[L1464]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1465]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              balances_CoinHemp[this] := zeroRefintArr();
[L1469]              sum_balances0[this] := 0;
[L1470]              name_CoinHemp[this] := -1920728545;
[L1471]              symbol_CoinHemp[this] := 294157574;
[L1472]              decimals_CoinHemp[this] := 18;
[L1473]              initSupply_CoinHemp[this] := 400000000;
[L1474]              totalSupply_CoinHemp[this] := 0;
[L1475]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1476]              sum_allowed1[this] := 0;
[L1479]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1480]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1481]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1483]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1484]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1912]  COND TRUE   a_s472 == 0
[L1913]              c_s472 := 0;
[L1484]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1485]  COND TRUE   revert
[L1512]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  COND FALSE  !(revert)
[L121]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L122]               assume !revert && gas >= 0;
[L2773]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2774]              assume !revert && gas >= 0;
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND TRUE   choice == 10
[L2695]              gas := gas - 21000;
[L2696]  COND TRUE   gas >= 0
[L2697]              assume msgvalue_MSG == 0;
[L2698]  CALL        call __ret_0_totalSupply := totalSupply_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply_CoinHemp[this] >= 0 && totalSupply_CoinHemp[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_CoinHemp0 := true;
[L2]                 call_totalSupply_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L962]               havoc __exception;
[L963]               revert := false;
[L964]   COND FALSE  !(__exception)
[L988]   CALL        call __ret_0_ := totalSupply_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L2030]              __ret_0_ := totalSupply_CoinHemp[this];
[L988]   RET         call __ret_0_ := totalSupply_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L989]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((__ret_0_ == totalSupply_CoinHemp[this] && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this] == old(balances_CoinHemp[this])) && allowed_CoinHemp[this] == old(allowed_CoinHemp[this])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L2]                 revert := revert_hold;
[L2698]  RET         call __ret_0_totalSupply := totalSupply_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2777]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND TRUE   choice == 10
[L2695]              gas := gas - 21000;
[L2696]  COND TRUE   gas >= 0
[L2697]              assume msgvalue_MSG == 0;
[L2698]  CALL        call __ret_0_totalSupply := totalSupply_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply_CoinHemp[this] >= 0 && totalSupply_CoinHemp[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_CoinHemp0 := true;
[L2]                 call_totalSupply_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L962]               havoc __exception;
[L963]               revert := false;
[L964]   COND FALSE  !(__exception)
[L988]   CALL        call __ret_0_ := totalSupply_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L2030]              __ret_0_ := totalSupply_CoinHemp[this];
[L988]   RET         call __ret_0_ := totalSupply_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L989]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((__ret_0_ == totalSupply_CoinHemp[this] && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this] == old(balances_CoinHemp[this])) && allowed_CoinHemp[this] == old(allowed_CoinHemp[this])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L2]                 revert := revert_hold;
[L2698]  RET         call __ret_0_totalSupply := totalSupply_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2777]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:56:51,430 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:56:51,430 INFO  L82        PathProgramCache]: Analyzing trace with hash 959973088, now seen corresponding path program 1 times
[2020-11-25 11:56:51,431 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:56:51,440 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:56:51,474 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:56:51,475 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:56:51,475 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:56:51,476 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:56:51,476 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:56:51,476 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:56:51,477 INFO  L87              Difference]: Start difference. First operand 2867 states and 3354 transitions. cyclomatic complexity: 493 Second operand 4 states.
[2020-11-25 11:56:51,524 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:56:51,524 INFO  L93              Difference]: Finished difference Result 2869 states and 3355 transitions.
[2020-11-25 11:56:51,525 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:56:51,525 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2869 states and 3355 transitions.
[2020-11-25 11:56:51,535 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:56:51,546 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2869 states to 2866 states and 3352 transitions.
[2020-11-25 11:56:51,546 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 124
[2020-11-25 11:56:51,546 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 124
[2020-11-25 11:56:51,546 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2866 states and 3352 transitions.
[2020-11-25 11:56:51,550 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:56:51,550 INFO  L728         BuchiCegarLoop]: Abstraction has 2866 states and 3352 transitions.
[2020-11-25 11:56:51,553 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2866 states and 3352 transitions.
[2020-11-25 11:56:51,575 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2866 to 2866.
[2020-11-25 11:56:51,575 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2866 states.
[2020-11-25 11:56:51,580 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2866 states to 2866 states and 3352 transitions.
[2020-11-25 11:56:51,580 INFO  L751         BuchiCegarLoop]: Abstraction has 2866 states and 3352 transitions.
[2020-11-25 11:56:51,580 INFO  L631         BuchiCegarLoop]: Abstraction has 2866 states and 3352 transitions.
[2020-11-25 11:56:51,580 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 11:56:51,581 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2866 states and 3352 transitions.
[2020-11-25 11:56:51,585 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:56:51,585 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:56:51,585 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:56:51,587 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:56:51,587 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_CoinHemp0 := false;
[L2]                 call_totalSupply_CoinHemp0 := false;
[L2]     CALL        call main();
[L2767]              assume null == 0;
[L2768]  CALL        call this := FreshRefGenerator__success();
[L1410]              havoc newRef;
[L1411]              assume Alloc[newRef] == false;
[L1412]              Alloc[newRef] := true;
[L1413]              assume newRef != null;
[L2768]  RET         call this := FreshRefGenerator__success();
[L2769]              assume now >= 0;
[L2770]              assume DType[this] == CoinHemp;
[L2771]              assume msgvalue_MSG >= 0;
[L2772]              gas := gas - 53000;
[L2773]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L95]                havoc __exception;
[L96]                revert := false;
[L97]    COND FALSE  !(__exception)
[L121]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1512]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1462]              assume msgsender_MSG != null;
[L1463]              Balance[this] := 0;
[L1464]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1465]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              balances_CoinHemp[this] := zeroRefintArr();
[L1469]              sum_balances0[this] := 0;
[L1470]              name_CoinHemp[this] := -1920728545;
[L1471]              symbol_CoinHemp[this] := 294157574;
[L1472]              decimals_CoinHemp[this] := 18;
[L1473]              initSupply_CoinHemp[this] := 400000000;
[L1474]              totalSupply_CoinHemp[this] := 0;
[L1475]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1476]              sum_allowed1[this] := 0;
[L1479]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1480]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1481]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1483]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1484]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1912]  COND FALSE  !(a_s472 == 0)
[L1916]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1917]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1918]              c_s472 := c_s472;
[L1484]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1485]  COND TRUE   revert
[L1512]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  COND FALSE  !(revert)
[L121]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L122]               assume !revert && gas >= 0;
[L2773]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2774]              assume !revert && gas >= 0;
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND TRUE   choice == 10
[L2695]              gas := gas - 21000;
[L2696]  COND TRUE   gas >= 0
[L2697]              assume msgvalue_MSG == 0;
[L2698]  CALL        call __ret_0_totalSupply := totalSupply_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply_CoinHemp[this] >= 0 && totalSupply_CoinHemp[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_CoinHemp0 := true;
[L2]                 call_totalSupply_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L962]               havoc __exception;
[L963]               revert := false;
[L964]   COND FALSE  !(__exception)
[L988]   CALL        call __ret_0_ := totalSupply_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L2030]              __ret_0_ := totalSupply_CoinHemp[this];
[L988]   RET         call __ret_0_ := totalSupply_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L989]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((__ret_0_ == totalSupply_CoinHemp[this] && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this] == old(balances_CoinHemp[this])) && allowed_CoinHemp[this] == old(allowed_CoinHemp[this])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L2]                 revert := revert_hold;
[L2698]  RET         call __ret_0_totalSupply := totalSupply_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2777]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND TRUE   choice == 10
[L2695]              gas := gas - 21000;
[L2696]  COND TRUE   gas >= 0
[L2697]              assume msgvalue_MSG == 0;
[L2698]  CALL        call __ret_0_totalSupply := totalSupply_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply_CoinHemp[this] >= 0 && totalSupply_CoinHemp[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_CoinHemp0 := true;
[L2]                 call_totalSupply_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L962]               havoc __exception;
[L963]               revert := false;
[L964]   COND FALSE  !(__exception)
[L988]   CALL        call __ret_0_ := totalSupply_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L2030]              __ret_0_ := totalSupply_CoinHemp[this];
[L988]   RET         call __ret_0_ := totalSupply_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L989]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((__ret_0_ == totalSupply_CoinHemp[this] && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this] == old(balances_CoinHemp[this])) && allowed_CoinHemp[this] == old(allowed_CoinHemp[this])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L2]                 revert := revert_hold;
[L2698]  RET         call __ret_0_totalSupply := totalSupply_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2777]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:56:51,590 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:56:51,590 INFO  L82        PathProgramCache]: Analyzing trace with hash -315261998, now seen corresponding path program 1 times
[2020-11-25 11:56:51,591 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:56:51,602 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:56:51,620 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:56:51,620 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:56:51,621 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:56:51,621 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:56:51,621 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:56:51,621 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:56:51,621 INFO  L87              Difference]: Start difference. First operand 2866 states and 3352 transitions. cyclomatic complexity: 492 Second operand 4 states.
[2020-11-25 11:56:52,145 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:56:52,146 INFO  L93              Difference]: Finished difference Result 3792 states and 4404 transitions.
[2020-11-25 11:56:52,146 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:56:52,146 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3792 states and 4404 transitions.
[2020-11-25 11:56:52,159 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 11:56:52,174 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3792 states to 3688 states and 4280 transitions.
[2020-11-25 11:56:52,174 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 169
[2020-11-25 11:56:52,174 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 169
[2020-11-25 11:56:52,174 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3688 states and 4280 transitions.
[2020-11-25 11:56:52,179 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:56:52,179 INFO  L728         BuchiCegarLoop]: Abstraction has 3688 states and 4280 transitions.
[2020-11-25 11:56:52,183 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3688 states and 4280 transitions.
[2020-11-25 11:56:52,214 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3688 to 3013.
[2020-11-25 11:56:52,214 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3013 states.
[2020-11-25 11:56:52,218 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3013 states to 3013 states and 3415 transitions.
[2020-11-25 11:56:52,218 INFO  L751         BuchiCegarLoop]: Abstraction has 3013 states and 3415 transitions.
[2020-11-25 11:56:52,218 INFO  L631         BuchiCegarLoop]: Abstraction has 3013 states and 3415 transitions.
[2020-11-25 11:56:52,218 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 11:56:52,218 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3013 states and 3415 transitions.
[2020-11-25 11:56:52,222 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 11:56:52,222 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:56:52,222 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:56:52,223 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:56:52,223 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_CoinHemp0 := false;
[L2]                 call_totalSupply_CoinHemp0 := false;
[L2]     CALL        call main();
[L2767]              assume null == 0;
[L2768]  CALL        call this := FreshRefGenerator__success();
[L1410]              havoc newRef;
[L1411]              assume Alloc[newRef] == false;
[L1412]              Alloc[newRef] := true;
[L1413]              assume newRef != null;
[L2768]  RET         call this := FreshRefGenerator__success();
[L2769]              assume now >= 0;
[L2770]              assume DType[this] == CoinHemp;
[L2771]              assume msgvalue_MSG >= 0;
[L2772]              gas := gas - 53000;
[L2773]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L95]                havoc __exception;
[L96]                revert := false;
[L97]    COND FALSE  !(__exception)
[L121]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1512]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1462]              assume msgsender_MSG != null;
[L1463]              Balance[this] := 0;
[L1464]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1465]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              balances_CoinHemp[this] := zeroRefintArr();
[L1469]              sum_balances0[this] := 0;
[L1470]              name_CoinHemp[this] := -1920728545;
[L1471]              symbol_CoinHemp[this] := 294157574;
[L1472]              decimals_CoinHemp[this] := 18;
[L1473]              initSupply_CoinHemp[this] := 400000000;
[L1474]              totalSupply_CoinHemp[this] := 0;
[L1475]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1476]              sum_allowed1[this] := 0;
[L1479]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1480]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1481]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1483]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1484]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1912]  COND FALSE  !(a_s472 == 0)
[L1916]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1917]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1918]              c_s472 := c_s472;
[L1484]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1485]  COND FALSE  !(revert)
[L1488]              totalSupply_CoinHemp[this] := __var_1;
[L1489]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1490]              balances_CoinHemp[this][account_address_CoinHemp[this]] := totalSupply_CoinHemp[this];
[L1491]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1512]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  COND FALSE  !(revert)
[L121]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L122]               assume !revert && gas >= 0;
[L2773]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2774]              assume !revert && gas >= 0;
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND TRUE   choice == 10
[L2695]              gas := gas - 21000;
[L2696]  COND TRUE   gas >= 0
[L2697]              assume msgvalue_MSG == 0;
[L2698]  CALL        call __ret_0_totalSupply := totalSupply_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply_CoinHemp[this] >= 0 && totalSupply_CoinHemp[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_CoinHemp0 := true;
[L2]                 call_totalSupply_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L962]               havoc __exception;
[L963]               revert := false;
[L964]   COND FALSE  !(__exception)
[L988]   CALL        call __ret_0_ := totalSupply_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L2030]              __ret_0_ := totalSupply_CoinHemp[this];
[L988]   RET         call __ret_0_ := totalSupply_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L989]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((__ret_0_ == totalSupply_CoinHemp[this] && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this] == old(balances_CoinHemp[this])) && allowed_CoinHemp[this] == old(allowed_CoinHemp[this])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L2]                 revert := revert_hold;
[L2698]  RET         call __ret_0_totalSupply := totalSupply_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2777]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND TRUE   choice == 10
[L2695]              gas := gas - 21000;
[L2696]  COND TRUE   gas >= 0
[L2697]              assume msgvalue_MSG == 0;
[L2698]  CALL        call __ret_0_totalSupply := totalSupply_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply_CoinHemp[this] >= 0 && totalSupply_CoinHemp[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_CoinHemp0 := true;
[L2]                 call_totalSupply_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L962]               havoc __exception;
[L963]               revert := false;
[L964]   COND FALSE  !(__exception)
[L988]   CALL        call __ret_0_ := totalSupply_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L2030]              __ret_0_ := totalSupply_CoinHemp[this];
[L988]   RET         call __ret_0_ := totalSupply_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L989]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((__ret_0_ == totalSupply_CoinHemp[this] && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this] == old(balances_CoinHemp[this])) && allowed_CoinHemp[this] == old(allowed_CoinHemp[this])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L2]                 revert := revert_hold;
[L2698]  RET         call __ret_0_totalSupply := totalSupply_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2777]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:56:52,226 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:56:52,226 INFO  L82        PathProgramCache]: Analyzing trace with hash 1493990296, now seen corresponding path program 1 times
[2020-11-25 11:56:52,227 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:56:52,236 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:56:52,262 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:56:52,262 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:56:52,262 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:56:52,262 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:56:52,263 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:56:52,263 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:56:52,263 INFO  L87              Difference]: Start difference. First operand 3013 states and 3415 transitions. cyclomatic complexity: 408 Second operand 4 states.
[2020-11-25 11:56:52,341 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:56:52,341 INFO  L93              Difference]: Finished difference Result 3014 states and 3414 transitions.
[2020-11-25 11:56:52,341 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:56:52,341 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3014 states and 3414 transitions.
[2020-11-25 11:56:52,346 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 11:56:52,354 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3014 states to 3007 states and 3406 transitions.
[2020-11-25 11:56:52,354 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 144
[2020-11-25 11:56:52,354 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 144
[2020-11-25 11:56:52,354 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3007 states and 3406 transitions.
[2020-11-25 11:56:52,356 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:56:52,356 INFO  L728         BuchiCegarLoop]: Abstraction has 3007 states and 3406 transitions.
[2020-11-25 11:56:52,358 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3007 states and 3406 transitions.
[2020-11-25 11:56:52,376 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3007 to 3005.
[2020-11-25 11:56:52,376 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3005 states.
[2020-11-25 11:56:52,379 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3005 states to 3005 states and 3404 transitions.
[2020-11-25 11:56:52,379 INFO  L751         BuchiCegarLoop]: Abstraction has 3005 states and 3404 transitions.
[2020-11-25 11:56:52,379 INFO  L631         BuchiCegarLoop]: Abstraction has 3005 states and 3404 transitions.
[2020-11-25 11:56:52,379 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 11:56:52,380 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3005 states and 3404 transitions.
[2020-11-25 11:56:52,382 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 11:56:52,382 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:56:52,382 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:56:52,383 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:56:52,384 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_CoinHemp0 := false;
[L2]                 call_totalSupply_CoinHemp0 := false;
[L2]     CALL        call main();
[L2767]              assume null == 0;
[L2768]  CALL        call this := FreshRefGenerator__success();
[L1410]              havoc newRef;
[L1411]              assume Alloc[newRef] == false;
[L1412]              Alloc[newRef] := true;
[L1413]              assume newRef != null;
[L2768]  RET         call this := FreshRefGenerator__success();
[L2769]              assume now >= 0;
[L2770]              assume DType[this] == CoinHemp;
[L2771]              assume msgvalue_MSG >= 0;
[L2772]              gas := gas - 53000;
[L2773]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L95]                havoc __exception;
[L96]                revert := false;
[L97]    COND FALSE  !(__exception)
[L121]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1512]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1462]              assume msgsender_MSG != null;
[L1463]              Balance[this] := 0;
[L1464]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1465]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              balances_CoinHemp[this] := zeroRefintArr();
[L1469]              sum_balances0[this] := 0;
[L1470]              name_CoinHemp[this] := -1920728545;
[L1471]              symbol_CoinHemp[this] := 294157574;
[L1472]              decimals_CoinHemp[this] := 18;
[L1473]              initSupply_CoinHemp[this] := 400000000;
[L1474]              totalSupply_CoinHemp[this] := 0;
[L1475]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1476]              sum_allowed1[this] := 0;
[L1479]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1480]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1481]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1483]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1484]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1912]  COND FALSE  !(a_s472 == 0)
[L1916]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1917]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1918]              c_s472 := c_s472;
[L1484]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1485]  COND FALSE  !(revert)
[L1488]              totalSupply_CoinHemp[this] := __var_1;
[L1489]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1490]              balances_CoinHemp[this][account_address_CoinHemp[this]] := totalSupply_CoinHemp[this];
[L1491]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1512]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  COND FALSE  !(revert)
[L121]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L122]               assume !revert && gas >= 0;
[L2773]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2774]              assume !revert && gas >= 0;
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND TRUE   choice == 10
[L2695]              gas := gas - 21000;
[L2696]  COND TRUE   gas >= 0
[L2697]              assume msgvalue_MSG == 0;
[L2698]  CALL        call __ret_0_totalSupply := totalSupply_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply_CoinHemp[this] >= 0 && totalSupply_CoinHemp[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_CoinHemp0 := true;
[L2]                 call_totalSupply_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L962]               havoc __exception;
[L963]               revert := false;
[L964]   COND TRUE   __exception
[L965]               __tmp__Balance := Balance;
[L966]               __tmp__DType := DType;
[L967]               __tmp__Alloc := Alloc;
[L968]               __tmp__balance_ADDR := balance_ADDR;
[L969]               __tmp__M_Ref_int := M_Ref_int;
[L970]               __tmp__sum_balances0 := sum_balances0;
[L971]               __tmp__alloc_allowed_CoinHemp_lvl0 := alloc_allowed_CoinHemp_lvl0;
[L972]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L973]               __tmp__sum_allowed1 := sum_allowed1;
[L974]               __tmp__Length := Length;
[L975]               __tmp__now := now;
[L976]               __tmp__admin_address_CoinHemp := admin_address_CoinHemp;
[L977]               __tmp__account_address_CoinHemp := account_address_CoinHemp;
[L978]               __tmp__balances_CoinHemp := balances_CoinHemp;
[L979]               __tmp__name_CoinHemp := name_CoinHemp;
[L980]               __tmp__symbol_CoinHemp := symbol_CoinHemp;
[L981]               __tmp__decimals_CoinHemp := decimals_CoinHemp;
[L982]               __tmp__initSupply_CoinHemp := initSupply_CoinHemp;
[L983]               __tmp__totalSupply_CoinHemp := totalSupply_CoinHemp;
[L984]               __tmp__allowed_CoinHemp := allowed_CoinHemp;
[L985]   CALL        call __ret_0_ := totalSupply_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG);
[L2024]              __ret_0_ := __tmp__totalSupply_CoinHemp[this];
[L985]   RET         call __ret_0_ := totalSupply_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG);
[L986]               assume revert || gas < 0;
[L2698]  RET         call __ret_0_totalSupply := totalSupply_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2777]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND TRUE   choice == 10
[L2695]              gas := gas - 21000;
[L2696]  COND TRUE   gas >= 0
[L2697]              assume msgvalue_MSG == 0;
[L2698]  CALL        call __ret_0_totalSupply := totalSupply_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply_CoinHemp[this] >= 0 && totalSupply_CoinHemp[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_CoinHemp0 := true;
[L2]                 call_totalSupply_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L962]               havoc __exception;
[L963]               revert := false;
[L964]   COND TRUE   __exception
[L965]               __tmp__Balance := Balance;
[L966]               __tmp__DType := DType;
[L967]               __tmp__Alloc := Alloc;
[L968]               __tmp__balance_ADDR := balance_ADDR;
[L969]               __tmp__M_Ref_int := M_Ref_int;
[L970]               __tmp__sum_balances0 := sum_balances0;
[L971]               __tmp__alloc_allowed_CoinHemp_lvl0 := alloc_allowed_CoinHemp_lvl0;
[L972]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L973]               __tmp__sum_allowed1 := sum_allowed1;
[L974]               __tmp__Length := Length;
[L975]               __tmp__now := now;
[L976]               __tmp__admin_address_CoinHemp := admin_address_CoinHemp;
[L977]               __tmp__account_address_CoinHemp := account_address_CoinHemp;
[L978]               __tmp__balances_CoinHemp := balances_CoinHemp;
[L979]               __tmp__name_CoinHemp := name_CoinHemp;
[L980]               __tmp__symbol_CoinHemp := symbol_CoinHemp;
[L981]               __tmp__decimals_CoinHemp := decimals_CoinHemp;
[L982]               __tmp__initSupply_CoinHemp := initSupply_CoinHemp;
[L983]               __tmp__totalSupply_CoinHemp := totalSupply_CoinHemp;
[L984]               __tmp__allowed_CoinHemp := allowed_CoinHemp;
[L985]   CALL        call __ret_0_ := totalSupply_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG);
[L2024]              __ret_0_ := __tmp__totalSupply_CoinHemp[this];
[L985]   RET         call __ret_0_ := totalSupply_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG);
[L986]               assume revert || gas < 0;
[L2698]  RET         call __ret_0_totalSupply := totalSupply_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2777]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:56:52,386 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:56:52,386 INFO  L82        PathProgramCache]: Analyzing trace with hash -853268785, now seen corresponding path program 1 times
[2020-11-25 11:56:52,386 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:56:52,393 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:56:52,410 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:56:52,410 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:56:52,411 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 11:56:52,411 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:56:52,411 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 11:56:52,411 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 11:56:52,411 INFO  L87              Difference]: Start difference. First operand 3005 states and 3404 transitions. cyclomatic complexity: 405 Second operand 5 states.
[2020-11-25 11:56:52,574 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:56:52,575 INFO  L93              Difference]: Finished difference Result 1958 states and 2193 transitions.
[2020-11-25 11:56:52,575 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 11:56:52,575 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1958 states and 2193 transitions.
[2020-11-25 11:56:52,579 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 11:56:52,579 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1958 states to 0 states and 0 transitions.
[2020-11-25 11:56:52,579 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 11:56:52,579 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 11:56:52,579 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 11:56:52,579 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:56:52,579 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:56:52,579 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:56:52,579 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:56:52,579 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 11:56:52,580 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 11:56:52,580 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 11:56:52,580 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 11:56:52,583 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:56:52 BasicIcfg
[2020-11-25 11:56:52,583 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 11:56:52,583 INFO  L168              Benchmark]: Toolchain (without parser) took 3883.18 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 306.2 MB). Free memory was 940.6 MB in the beginning and 1.1 GB in the end (delta: -150.9 MB). Peak memory consumption was 155.3 MB. Max. memory is 15.3 GB.
[2020-11-25 11:56:52,584 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:56:52,584 INFO  L168              Benchmark]: Boogie Preprocessor took 89.66 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:56:52,585 INFO  L168              Benchmark]: UtopiaSpecLang took 54.52 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:56:52,585 INFO  L168              Benchmark]: Boogie Printer took 11.92 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:56:52,585 INFO  L168              Benchmark]: RCFGBuilder took 584.27 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 854.6 MB in the end (delta: 69.8 MB). Peak memory consumption was 69.8 MB. Max. memory is 15.3 GB.
[2020-11-25 11:56:52,586 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.95 ms. Allocated memory is still 1.0 GB. Free memory was 854.6 MB in the beginning and 845.7 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 11:56:52,586 INFO  L168              Benchmark]: BÃ¼chi Program Product took 902.52 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 61.3 MB). Free memory was 845.7 MB in the beginning and 829.0 MB in the end (delta: 16.6 MB). Peak memory consumption was 131.3 MB. Max. memory is 15.3 GB.
[2020-11-25 11:56:52,586 INFO  L168              Benchmark]: BlockEncodingV2 took 89.89 ms. Allocated memory is still 1.1 GB. Free memory was 829.0 MB in the beginning and 784.5 MB in the end (delta: 44.5 MB). Peak memory consumption was 44.5 MB. Max. memory is 15.3 GB.
[2020-11-25 11:56:52,587 INFO  L168              Benchmark]: BuchiAutomizer took 2106.92 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 244.8 MB). Free memory was 784.5 MB in the beginning and 1.1 GB in the end (delta: -306.9 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:56:52,589 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3024 locations, 5186 edges
  - StatisticsResult: Encoded RCFG
    3006 locations, 5140 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 89.66 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 54.52 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.92 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 584.27 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 854.6 MB in the end (delta: 69.8 MB). Peak memory consumption was 69.8 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.95 ms. Allocated memory is still 1.0 GB. Free memory was 854.6 MB in the beginning and 845.7 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 902.52 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 61.3 MB). Free memory was 845.7 MB in the beginning and 829.0 MB in the end (delta: 16.6 MB). Peak memory consumption was 131.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 89.89 ms. Allocated memory is still 1.1 GB. Free memory was 829.0 MB in the beginning and 784.5 MB in the end (delta: 44.5 MB). Peak memory consumption was 44.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2106.92 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 244.8 MB). Free memory was 784.5 MB in the beginning and 1.1 GB in the end (delta: -306.9 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1291 locations, 1650 edges
  - StatisticsResult: BuchiProgram size
    3024 locations, 5186 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.0s and 6 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.2s. Construction of modules took 0.8s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 677 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3013 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 15596 SDtfs, 10230 SDslu, 21344 SDs, 0 SdLazy, 2597 SolverSat, 2354 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.8s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_totalSupply_CoinHemp0) ==> ( <>(success_totalSupply_CoinHemp0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
