This is Ultimate 0.1.24-f1553f5-m
[2020-11-28 09:24:55,073 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-28 09:24:55,075 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-28 09:24:55,088 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-28 09:24:55,088 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-28 09:24:55,090 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-28 09:24:55,091 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-28 09:24:55,093 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-28 09:24:55,095 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-28 09:24:55,095 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-28 09:24:55,096 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-28 09:24:55,096 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-28 09:24:55,097 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-28 09:24:55,098 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-28 09:24:55,099 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-28 09:24:55,099 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-28 09:24:55,100 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-28 09:24:55,101 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-28 09:24:55,103 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-28 09:24:55,104 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-28 09:24:55,105 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-28 09:24:55,106 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-28 09:24:55,108 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-28 09:24:55,108 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-28 09:24:55,109 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-28 09:24:55,109 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-28 09:24:55,109 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-28 09:24:55,110 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-28 09:24:55,110 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-28 09:24:55,111 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-28 09:24:55,111 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-28 09:24:55,112 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-28 09:24:55,112 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-28 09:24:55,113 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-28 09:24:55,113 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-28 09:24:55,114 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-28 09:24:55,114 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-28 09:24:55,114 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-28 09:24:55,114 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-28 09:24:55,115 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-28 09:24:55,116 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-28 09:24:55,116 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-28 09:24:55,124 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-28 09:24:55,124 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-28 09:24:55,125 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-28 09:24:55,125 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-28 09:24:55,125 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-28 09:24:55,125 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-28 09:24:55,125 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-28 09:24:55,125 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-28 09:24:55,125 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-28 09:24:55,126 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-28 09:24:55,126 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-28 09:24:55,126 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-28 09:24:55,126 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-28 09:24:55,126 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-28 09:24:55,126 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-28 09:24:55,126 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-28 09:24:55,126 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-28 09:24:55,126 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-28 09:24:55,127 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-28 09:24:55,127 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-28 09:24:55,127 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-28 09:24:55,127 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-28 09:24:55,127 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-28 09:24:55,127 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-28 09:24:55,127 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-28 09:24:55,127 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-28 09:24:55,148 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-28 09:24:55,159 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-28 09:24:55,161 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-28 09:24:55,162 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-28 09:24:55,163 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-28 09:24:55,163 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl
[2020-11-28 09:24:55,163 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl'
[2020-11-28 09:24:55,243 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-28 09:24:55,244 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-28 09:24:55,245 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-28 09:24:55,245 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-28 09:24:55,245 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-28 09:24:55,262 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:55" (1/1) ...
[2020-11-28 09:24:55,264 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:55" (1/1) ...
[2020-11-28 09:24:55,292 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:55" (1/1) ...
[2020-11-28 09:24:55,293 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:55" (1/1) ...
[2020-11-28 09:24:55,310 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:55" (1/1) ...
[2020-11-28 09:24:55,319 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:55" (1/1) ...
[2020-11-28 09:24:55,324 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:55" (1/1) ...
[2020-11-28 09:24:55,332 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-28 09:24:55,332 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-28 09:24:55,332 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-28 09:24:55,334 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-28 09:24:55,338 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:55" (1/1) ...
[2020-11-28 09:24:55,354 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(USD.transfer(to, value), msg.sender == to && value <= _balances_USD[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][to] >= 0 && _balances_USD[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][msg.sender] >= 0 &&  _balances_USD[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(USD.transfer(to, value), return == true && totalSupply_USD[this] == old(totalSupply_USD[this]) && _balances_USD[this] == old(_balances_USD[this]) && _allowed_USD[this] == old(_allowed_USD[this]) && name_USD[this] == old(name_USD[this]) && symbol_USD[this] == old(symbol_USD[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-28 09:24:55,359 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(USD.transfer(to, value), msg.sender == to && value <= _balances_USD[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][to] >= 0 && _balances_USD[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][msg.sender] >= 0 &&  _balances_USD[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(USD.transfer(to, value), return == true && totalSupply_USD[this] == old(totalSupply_USD[this]) && _balances_USD[this] == old(_balances_USD[this]) && _allowed_USD[this] == old(_allowed_USD[this]) && name_USD[this] == old(name_USD[this]) && symbol_USD[this] == old(symbol_USD[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-28 09:24:55,366 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(USD.transfer(to, value), msg.sender == to && value <= _balances_USD[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][to] >= 0 && _balances_USD[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][msg.sender] >= 0 &&  _balances_USD[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(USD.transfer(to, value), return == true && totalSupply_USD[this] == old(totalSupply_USD[this]) && _balances_USD[this] == old(_balances_USD[this]) && _allowed_USD[this] == old(_allowed_USD[this]) && name_USD[this] == old(name_USD[this]) && symbol_USD[this] == old(symbol_USD[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-28 09:24:55,372 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==_to_s342 && _value_s342<=_balances_USD[this][msg.sender] ) && _value_s342>=0 ) && _value_s342<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_USD[this][_to_s342]>=0 ) && _balances_USD[this][_to_s342]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_USD[this][msg.sender]>=0 ) && _balances_USD[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>],IdentifierExpression[_to_s342,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s342,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s342,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s342,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],[IdentifierExpression[_to_s342,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],[IdentifierExpression[_to_s342,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-28 09:24:55,374 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && totalSupply_USD[this]==( old(totalSupply_USD[this]) ) ) && _balances_USD[this]==( old(_balances_USD[this]) ) ) && _allowed_USD[this]==( old(_allowed_USD[this]) ) ) && name_USD[this]==( old(name_USD[this]) ) ) && symbol_USD[this]==( old(symbol_USD[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_USD>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]]]]]
[2020-11-28 09:24:55,378 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(USD.transfer(to, value), msg.sender == to && value <= _balances_USD[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][to] >= 0 && _balances_USD[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][msg.sender] >= 0 &&  _balances_USD[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(USD.transfer(to, value), return == true && totalSupply_USD[this] == old(totalSupply_USD[this]) && _balances_USD[this] == old(_balances_USD[this]) && _allowed_USD[this] == old(_allowed_USD[this]) && name_USD[this] == old(name_USD[this]) && symbol_USD[this] == old(symbol_USD[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-28 09:24:55,378 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_USD0) ==> ( <>AP(success_transfer_USD0) ) ) )
Executed UtopiaSpecLang
[2020-11-28 09:24:55,385 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:24:55 PropertyContainer
[2020-11-28 09:24:55,385 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-28 09:24:55,385 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-28 09:24:55,385 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-28 09:24:55,385 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-28 09:24:55,386 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:55" (1/2) ...
[2020-11-28 09:24:55,386 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-28 09:24:55,387 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-28 09:24:55,397 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:24:55" (2/2) ...
[2020-11-28 09:24:55,398 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-28 09:24:55,398 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-28 09:24:55,398 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-28 09:24:55,398 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-28 09:24:55,399 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:55" (1/2) ...
[2020-11-28 09:24:55,448 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-28 09:24:55,448 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-28 09:24:55,448 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-28 09:24:55,449 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-28 09:24:55,449 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-28 09:24:55,449 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-28 09:24:55,449 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-28 09:24:55,449 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-28 09:24:55,449 INFO  L130     BoogieDeclarations]: Found specification of procedure _assert~bool_SafeMath__success
[2020-11-28 09:24:55,449 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-28 09:24:55,449 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-28 09:24:55,449 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-28 09:24:55,449 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-28 09:24:55,449 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-28 09:24:55,449 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-28 09:24:55,450 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-28 09:24:55,450 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-28 09:24:55,450 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-28 09:24:55,450 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-28 09:24:55,450 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-28 09:24:55,450 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD_NoBaseCtor__success
[2020-11-28 09:24:55,450 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD
[2020-11-28 09:24:55,450 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD
[2020-11-28 09:24:55,450 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_USD
[2020-11-28 09:24:55,450 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_USD
[2020-11-28 09:24:55,450 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_USD
[2020-11-28 09:24:55,451 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_USD
[2020-11-28 09:24:55,451 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_USD
[2020-11-28 09:24:55,451 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_USD
[2020-11-28 09:24:55,451 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_USD
[2020-11-28 09:24:55,451 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_USD
[2020-11-28 09:24:55,451 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_USD
[2020-11-28 09:24:55,451 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_USD
[2020-11-28 09:24:55,451 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_USD
[2020-11-28 09:24:55,451 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_USD
[2020-11-28 09:24:55,451 INFO  L130     BoogieDeclarations]: Found specification of procedure name_USD
[2020-11-28 09:24:55,451 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_USD
[2020-11-28 09:24:55,451 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_USD
[2020-11-28 09:24:55,452 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_USD
[2020-11-28 09:24:55,452 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_USD
[2020-11-28 09:24:55,452 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_USD
[2020-11-28 09:24:55,452 INFO  L130     BoogieDeclarations]: Found specification of procedure _allowed~address~address_USD
[2020-11-28 09:24:55,452 INFO  L138     BoogieDeclarations]: Found implementation of procedure _allowed~address~address_USD
[2020-11-28 09:24:55,452 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_USD
[2020-11-28 09:24:55,452 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_USD
[2020-11-28 09:24:55,452 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-28 09:24:55,452 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-28 09:24:55,452 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-28 09:24:55,452 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-28 09:24:55,452 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-28 09:24:55,452 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-28 09:24:55,452 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-28 09:24:55,453 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-28 09:24:55,453 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_USD
[2020-11-28 09:24:55,453 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-28 09:24:55,453 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-28 09:24:55,453 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-28 09:24:55,453 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-28 09:24:55,453 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-28 09:24:55,453 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-28 09:24:55,453 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-28 09:24:55,453 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-28 09:24:55,453 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-28 09:24:55,453 INFO  L130     BoogieDeclarations]: Found specification of procedure _assert~bool_SafeMath__fail
[2020-11-28 09:24:55,453 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-28 09:24:55,454 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-28 09:24:55,454 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-28 09:24:55,454 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-28 09:24:55,454 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-28 09:24:55,454 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-28 09:24:55,454 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-28 09:24:55,454 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-28 09:24:55,454 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-28 09:24:55,454 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-28 09:24:55,454 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-28 09:24:55,454 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD_NoBaseCtor__fail
[2020-11-28 09:24:55,454 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD__success
[2020-11-28 09:24:55,454 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD__fail
[2020-11-28 09:24:55,455 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_USD__success
[2020-11-28 09:24:55,455 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_USD__fail
[2020-11-28 09:24:55,455 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_USD__success
[2020-11-28 09:24:55,455 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_USD__fail
[2020-11-28 09:24:55,455 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_USD__success
[2020-11-28 09:24:55,455 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_USD__fail
[2020-11-28 09:24:55,455 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_USD__success
[2020-11-28 09:24:55,455 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_USD__fail
[2020-11-28 09:24:55,455 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_USD__success
[2020-11-28 09:24:55,455 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_USD__fail
[2020-11-28 09:24:55,455 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_USD__success
[2020-11-28 09:24:55,455 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_USD__fail
[2020-11-28 09:24:55,456 INFO  L130     BoogieDeclarations]: Found specification of procedure name_USD__success
[2020-11-28 09:24:55,456 INFO  L130     BoogieDeclarations]: Found specification of procedure name_USD__fail
[2020-11-28 09:24:55,456 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_USD__success
[2020-11-28 09:24:55,456 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_USD__fail
[2020-11-28 09:24:55,456 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_USD__success
[2020-11-28 09:24:55,456 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_USD__fail
[2020-11-28 09:24:55,456 INFO  L130     BoogieDeclarations]: Found specification of procedure _allowed~address~address_USD__success
[2020-11-28 09:24:55,456 INFO  L130     BoogieDeclarations]: Found specification of procedure _allowed~address~address_USD__fail
[2020-11-28 09:24:55,456 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_USD__success
[2020-11-28 09:24:55,456 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_USD__fail
[2020-11-28 09:24:55,456 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-28 09:24:55,456 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-28 09:24:55,456 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-28 09:24:55,457 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-28 09:24:55,457 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-28 09:24:55,457 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-28 09:24:55,457 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-28 09:24:55,457 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-28 09:24:55,457 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-28 09:24:55,457 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-28 09:24:55,457 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-28 09:24:55,457 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-28 09:24:55,457 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-28 09:24:55,457 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-28 09:24:55,457 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-28 09:24:55,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-28 09:24:55,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-28 09:24:55,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-28 09:24:55,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure _assert~bool_SafeMath__fail
[2020-11-28 09:24:55,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure _assert~bool_SafeMath__success
[2020-11-28 09:24:55,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-28 09:24:55,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-28 09:24:55,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-28 09:24:55,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-28 09:24:55,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-28 09:24:55,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-28 09:24:55,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-28 09:24:55,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-28 09:24:55,458 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-28 09:24:55,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-28 09:24:55,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-28 09:24:55,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-28 09:24:55,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD_NoBaseCtor__fail
[2020-11-28 09:24:55,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD_NoBaseCtor__success
[2020-11-28 09:24:55,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD__fail
[2020-11-28 09:24:55,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD__success
[2020-11-28 09:24:55,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_USD__fail
[2020-11-28 09:24:55,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_USD__success
[2020-11-28 09:24:55,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_USD__fail
[2020-11-28 09:24:55,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_USD__success
[2020-11-28 09:24:55,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_USD__fail
[2020-11-28 09:24:55,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_USD__success
[2020-11-28 09:24:55,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_USD__fail
[2020-11-28 09:24:55,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_USD__success
[2020-11-28 09:24:55,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_USD__fail
[2020-11-28 09:24:55,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_USD__success
[2020-11-28 09:24:55,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_USD__fail
[2020-11-28 09:24:55,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_USD__success
[2020-11-28 09:24:55,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_USD__fail
[2020-11-28 09:24:55,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_USD__success
[2020-11-28 09:24:55,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_USD__fail
[2020-11-28 09:24:55,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_USD__success
[2020-11-28 09:24:55,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_USD__fail
[2020-11-28 09:24:55,460 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_USD__success
[2020-11-28 09:24:55,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure _allowed~address~address_USD__fail
[2020-11-28 09:24:55,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure _allowed~address~address_USD__success
[2020-11-28 09:24:55,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_USD__fail
[2020-11-28 09:24:55,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_USD__success
[2020-11-28 09:24:55,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-28 09:24:55,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-28 09:24:55,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-28 09:24:55,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-28 09:24:55,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-28 09:24:55,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-28 09:24:55,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-28 09:24:55,461 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-28 09:24:55,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-28 09:24:55,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-28 09:24:55,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-28 09:24:55,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-28 09:24:55,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_USD
[2020-11-28 09:24:55,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-28 09:24:55,462 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-28 09:24:55,462 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-28 09:24:55,727 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-28 09:24:55,727 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-28 09:24:55,727 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-28 09:24:56,005 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-28 09:24:56,005 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-28 09:24:56,007 INFO  L202        PluginConnector]: Adding new model USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 09:24:56 BoogieIcfgContainer
[2020-11-28 09:24:56,007 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:24:55" (2/2) ...
[2020-11-28 09:24:56,007 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-28 09:24:56,007 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@54acc1ed and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 09:24:56, skipping insertion in model container
[2020-11-28 09:24:56,007 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-28 09:24:56,008 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-28 09:24:56,008 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-28 09:24:56,009 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-28 09:24:56,009 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:55" (1/3) ...
[2020-11-28 09:24:56,010 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@55921df6 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 09:24:56, skipping insertion in model container
[2020-11-28 09:24:56,010 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:24:55" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-28 09:24:56,043 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 09:24:56 NWAContainer
[2020-11-28 09:24:56,044 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-28 09:24:56,044 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-28 09:24:56,044 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-28 09:24:56,045 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-28 09:24:56,046 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 09:24:56" (3/4) ...
[2020-11-28 09:24:56,046 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@5ce03397 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 09:24:56, skipping insertion in model container
[2020-11-28 09:24:56,047 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 09:24:56" (4/4) ...
[2020-11-28 09:24:56,049 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-28 09:24:56,053 INFO  L110   BuchiProductObserver]: Initial RCFG 1234 locations, 1606 edges
[2020-11-28 09:24:56,053 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-28 09:24:56,062 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-28 09:24:57,021 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-28 09:24:57,026 INFO  L110   BuchiProductObserver]: BuchiProgram size 2974 locations, 5219 edges
[2020-11-28 09:24:57,026 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 09:24:57 BoogieIcfgContainer
[2020-11-28 09:24:57,026 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-28 09:24:57,026 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-28 09:24:57,026 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-28 09:24:57,028 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-28 09:24:57,028 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 09:24:57" (1/1) ...
[2020-11-28 09:24:57,100 INFO  L313           BlockEncoder]: Initial Icfg 2974 locations, 5219 edges
[2020-11-28 09:24:57,100 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-28 09:24:57,101 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-28 09:24:57,101 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-28 09:24:57,101 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-28 09:24:57,110 INFO  L70    emoveInfeasibleEdges]: Removed 102 edges and 9 locations because of local infeasibility
[2020-11-28 09:24:57,116 INFO  L70        RemoveSinkStates]: Removed 62 edges and 41 locations by removing sink states
[2020-11-28 09:24:57,124 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-28 09:24:57,127 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-28 09:24:57,130 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-28 09:24:57,130 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-28 09:24:57,134 INFO  L313           BlockEncoder]: Encoded RCFG 2906 locations, 5029 edges
[2020-11-28 09:24:57,134 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 28.11 09:24:57 BasicIcfg
[2020-11-28 09:24:57,134 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-28 09:24:57,135 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-28 09:24:57,135 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-28 09:24:57,139 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-28 09:24:57,139 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:24:57,139 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:55" (1/6) ...
[2020-11-28 09:24:57,143 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@32ef369 and model type USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 28.11 09:24:57, skipping insertion in model container
[2020-11-28 09:24:57,143 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:24:57,143 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:24:55" (2/6) ...
[2020-11-28 09:24:57,144 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@32ef369 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 28.11 09:24:57, skipping insertion in model container
[2020-11-28 09:24:57,144 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:24:57,144 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 09:24:56" (3/6) ...
[2020-11-28 09:24:57,145 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@32ef369 and model type USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 28.11 09:24:57, skipping insertion in model container
[2020-11-28 09:24:57,145 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:24:57,145 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 09:24:56" (4/6) ...
[2020-11-28 09:24:57,146 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@32ef369 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 28.11 09:24:57, skipping insertion in model container
[2020-11-28 09:24:57,146 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:24:57,146 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 09:24:57" (5/6) ...
[2020-11-28 09:24:57,147 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@32ef369 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 28.11 09:24:57, skipping insertion in model container
[2020-11-28 09:24:57,147 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:24:57,147 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 28.11 09:24:57" (6/6) ...
[2020-11-28 09:24:57,149 INFO  L404   chiAutomizerObserver]: Analyzing ICFG USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self.bpl_BEv2
[2020-11-28 09:24:57,188 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-28 09:24:57,188 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-28 09:24:57,188 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-28 09:24:57,188 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-28 09:24:57,189 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-28 09:24:57,189 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-28 09:24:57,189 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-28 09:24:57,189 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-28 09:24:57,189 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-28 09:24:57,256 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2906 states.
[2020-11-28 09:24:57,309 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:24:57,309 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 09:24:57,310 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 09:24:57,318 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:24:57,318 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:24:57,318 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-28 09:24:57,318 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2906 states.
[2020-11-28 09:24:57,335 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:24:57,335 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 09:24:57,335 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 09:24:57,337 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:24:57,337 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_USD0 := false;
[L2]                 call_transfer_USD0 := false;
[L2]     CALL        call main();
[L3215]              assume null == 0;
[L3216]  CALL        call this := FreshRefGenerator__success();
[L1468]              havoc newRef;
[L1469]              assume Alloc[newRef] == false;
[L1470]              Alloc[newRef] := true;
[L1471]              assume newRef != null;
[L3216]  RET         call this := FreshRefGenerator__success();
[L3217]              assume now >= 0;
[L3218]              assume DType[this] == USD;
[L3219]              assume msgvalue_MSG == 0;
[L3220]              gas := gas - 53000;
[L3221]  CALL        call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND FALSE  !(__exception)
[L464]   CALL        call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1500]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND FALSE  !(revert)
[L1880]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  COND TRUE   revert
[L464]   RET         call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L465]               assume !revert && gas >= 0;
[L3221]  RET         call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L3222]              assume !revert && gas >= 0;

Loop:
[L3225]  CALL        call CorralChoice_USD(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != USD;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND TRUE   choice == 15
[L3114]              gas := gas - 21000;
[L3115]  COND FALSE  !(gas >= 0)
[L3225]  RET         call CorralChoice_USD(this);

[2020-11-28 09:24:57,357 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:24:57,357 INFO  L82        PathProgramCache]: Analyzing trace with hash -355509119, now seen corresponding path program 1 times
[2020-11-28 09:24:57,362 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:24:57,386 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-28 09:24:57,438 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-28 09:24:57,442 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-28 09:24:57,442 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-28 09:24:57,449 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-28 09:24:57,586 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-28 09:24:57,586 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-28 09:24:57,588 INFO  L87              Difference]: Start difference. First operand 2906 states. Second operand 4 states.
[2020-11-28 09:24:58,245 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-28 09:24:58,245 INFO  L93              Difference]: Finished difference Result 3260 states and 5289 transitions.
[2020-11-28 09:24:58,245 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-28 09:24:58,246 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3260 states and 5289 transitions.
[2020-11-28 09:24:58,266 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-28 09:24:58,297 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3260 states to 3120 states and 5053 transitions.
[2020-11-28 09:24:58,298 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 13
[2020-11-28 09:24:58,302 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1102
[2020-11-28 09:24:58,302 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3120 states and 5053 transitions.
[2020-11-28 09:24:58,314 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-28 09:24:58,314 INFO  L728         BuchiCegarLoop]: Abstraction has 3120 states and 5053 transitions.
[2020-11-28 09:24:58,331 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3120 states and 5053 transitions.
[2020-11-28 09:24:58,379 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3120 to 2354.
[2020-11-28 09:24:58,380 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2354 states.
[2020-11-28 09:24:58,384 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2354 states to 2354 states and 3621 transitions.
[2020-11-28 09:24:58,385 INFO  L751         BuchiCegarLoop]: Abstraction has 2354 states and 3621 transitions.
[2020-11-28 09:24:58,385 INFO  L631         BuchiCegarLoop]: Abstraction has 2354 states and 3621 transitions.
[2020-11-28 09:24:58,385 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-28 09:24:58,385 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2354 states and 3621 transitions.
[2020-11-28 09:24:58,391 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:24:58,392 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 09:24:58,392 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 09:24:58,393 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:24:58,393 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_USD0 := false;
[L2]                 call_transfer_USD0 := false;
[L2]     CALL        call main();
[L3215]              assume null == 0;
[L3216]  CALL        call this := FreshRefGenerator__success();
[L1468]              havoc newRef;
[L1469]              assume Alloc[newRef] == false;
[L1470]              Alloc[newRef] := true;
[L1471]              assume newRef != null;
[L3216]  RET         call this := FreshRefGenerator__success();
[L3217]              assume now >= 0;
[L3218]              assume DType[this] == USD;
[L3219]              assume msgvalue_MSG == 0;
[L3220]              gas := gas - 53000;
[L3221]  CALL        call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND FALSE  !(__exception)
[L464]   CALL        call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1500]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND FALSE  !(revert)
[L1880]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  COND FALSE  !(revert)
[L1884]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1744]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]              assume msgsender_MSG != null;
[L1727]              Balance[this] := 0;
[L1728]              owner_Owned[this] := null;
[L1729]              newOwner_Owned[this] := null;
[L1731]              owner_Owned[this] := msgsender_MSG;
[L1744]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1745]  COND FALSE  !(revert)
[L1884]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1885]  COND FALSE  !(revert)
[L1888]  CALL        call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1842]              assume msgsender_MSG != null;
[L1843]              Balance[this] := 0;
[L1844]              name_USD[this] := -716642523;
[L1845]              symbol_USD[this] := -578635893;
[L1846]              decimals_USD[this] := 18;
[L1847]              _balances_USD[this] := zeroRefintArr();
[L1848]              sum__balances0[this] := 0;
[L1849]              _allowed_USD[this] := zeroRefRefintArr();
[L1850]              sum__allowed1[this] := 0;
[L1851]              __var_2 := decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1852]              totalSupply_USD[this] := 1000000000000 * (nonlinearPow(10, decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1854]              sum__balances0[this] := sum__balances0[this] - _balances_USD[this][msgsender_MSG];
[L1855]              _balances_USD[this][msgsender_MSG] := totalSupply_USD[this];
[L1856]              sum__balances0[this] := sum__balances0[this] + _balances_USD[this][msgsender_MSG];
[L1857]              assert { :EventEmitted "Transfer_USD" } true;
[L1888]  RET         call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]  COND FALSE  !(revert)
[L464]   RET         call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L465]               assume !revert && gas >= 0;
[L3221]  RET         call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L3222]              assume !revert && gas >= 0;

Loop:
[L3225]  CALL        call CorralChoice_USD(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != USD;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND TRUE   choice == 15
[L3114]              gas := gas - 21000;
[L3115]  COND FALSE  !(gas >= 0)
[L3225]  RET         call CorralChoice_USD(this);

[2020-11-28 09:24:58,395 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:24:58,395 INFO  L82        PathProgramCache]: Analyzing trace with hash 1521101960, now seen corresponding path program 1 times
[2020-11-28 09:24:58,396 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:24:58,406 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-28 09:24:58,422 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-28 09:24:58,422 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-28 09:24:58,423 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-28 09:24:58,424 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-28 09:24:58,424 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-28 09:24:58,424 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-28 09:24:58,424 INFO  L87              Difference]: Start difference. First operand 2354 states and 3621 transitions. cyclomatic complexity: 1269 Second operand 4 states.
[2020-11-28 09:24:58,815 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-28 09:24:58,816 INFO  L93              Difference]: Finished difference Result 2198 states and 2385 transitions.
[2020-11-28 09:24:58,816 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-28 09:24:58,816 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2198 states and 2385 transitions.
[2020-11-28 09:24:58,823 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:24:58,830 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2198 states to 2198 states and 2385 transitions.
[2020-11-28 09:24:58,830 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 705
[2020-11-28 09:24:58,830 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 705
[2020-11-28 09:24:58,830 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2198 states and 2385 transitions.
[2020-11-28 09:24:58,832 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-28 09:24:58,832 INFO  L728         BuchiCegarLoop]: Abstraction has 2198 states and 2385 transitions.
[2020-11-28 09:24:58,834 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2198 states and 2385 transitions.
[2020-11-28 09:24:58,848 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2198 to 2198.
[2020-11-28 09:24:58,848 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2198 states.
[2020-11-28 09:24:58,850 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2198 states to 2198 states and 2385 transitions.
[2020-11-28 09:24:58,850 INFO  L751         BuchiCegarLoop]: Abstraction has 2198 states and 2385 transitions.
[2020-11-28 09:24:58,850 INFO  L631         BuchiCegarLoop]: Abstraction has 2198 states and 2385 transitions.
[2020-11-28 09:24:58,850 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-28 09:24:58,850 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2198 states and 2385 transitions.
[2020-11-28 09:24:58,854 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:24:58,854 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 09:24:58,854 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 09:24:58,856 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:24:58,856 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_USD0 := false;
[L2]                 call_transfer_USD0 := false;
[L2]     CALL        call main();
[L3215]              assume null == 0;
[L3216]  CALL        call this := FreshRefGenerator__success();
[L1468]              havoc newRef;
[L1469]              assume Alloc[newRef] == false;
[L1470]              Alloc[newRef] := true;
[L1471]              assume newRef != null;
[L3216]  RET         call this := FreshRefGenerator__success();
[L3217]              assume now >= 0;
[L3218]              assume DType[this] == USD;
[L3219]              assume msgvalue_MSG == 0;
[L3220]              gas := gas - 53000;
[L3221]  CALL        call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND FALSE  !(__exception)
[L464]   CALL        call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1500]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND FALSE  !(revert)
[L1880]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  COND FALSE  !(revert)
[L1884]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1744]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]              assume msgsender_MSG != null;
[L1727]              Balance[this] := 0;
[L1728]              owner_Owned[this] := null;
[L1729]              newOwner_Owned[this] := null;
[L1731]              owner_Owned[this] := msgsender_MSG;
[L1744]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1745]  COND FALSE  !(revert)
[L1884]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1885]  COND FALSE  !(revert)
[L1888]  CALL        call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1842]              assume msgsender_MSG != null;
[L1843]              Balance[this] := 0;
[L1844]              name_USD[this] := -716642523;
[L1845]              symbol_USD[this] := -578635893;
[L1846]              decimals_USD[this] := 18;
[L1847]              _balances_USD[this] := zeroRefintArr();
[L1848]              sum__balances0[this] := 0;
[L1849]              _allowed_USD[this] := zeroRefRefintArr();
[L1850]              sum__allowed1[this] := 0;
[L1851]              __var_2 := decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1852]              totalSupply_USD[this] := 1000000000000 * (nonlinearPow(10, decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1854]              sum__balances0[this] := sum__balances0[this] - _balances_USD[this][msgsender_MSG];
[L1855]              _balances_USD[this][msgsender_MSG] := totalSupply_USD[this];
[L1856]              sum__balances0[this] := sum__balances0[this] + _balances_USD[this][msgsender_MSG];
[L1857]              assert { :EventEmitted "Transfer_USD" } true;
[L1888]  RET         call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]  COND FALSE  !(revert)
[L464]   RET         call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L465]               assume !revert && gas >= 0;
[L3221]  RET         call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L3222]              assume !revert && gas >= 0;
[L3225]  CALL        call CorralChoice_USD(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != USD;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND TRUE   choice == 5
[L3174]              gas := gas - 21000;
[L3175]  COND TRUE   gas >= 0
[L3176]              assume _value_s342 >= 0 && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3177]              assume msgvalue_MSG == 0;
[L3178]  CALL        call __ret_0_transfer := transfer~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s342 && _value_s342 <= _balances_USD[this][msgsender_MSG]) && _value_s342 >= 0) && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_to_s342] >= 0) && _balances_USD[this][_to_s342] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][msgsender_MSG] >= 0) && _balances_USD[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_USD0 := true;
[L2]                 call_transfer_USD0 := false;
[L2]                 revert := revert_hold;
[L550]               havoc __exception;
[L551]               revert := false;
[L552]   COND TRUE   __exception
[L553]               __tmp__Balance := Balance;
[L554]               __tmp__DType := DType;
[L555]               __tmp__Alloc := Alloc;
[L556]               __tmp__balance_ADDR := balance_ADDR;
[L557]               __tmp__M_Ref_int := M_Ref_int;
[L558]               __tmp__sum__balances0 := sum__balances0;
[L559]               __tmp__alloc__allowed_USD_lvl0 := alloc__allowed_USD_lvl0;
[L560]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L561]               __tmp__sum__allowed1 := sum__allowed1;
[L562]               __tmp__Length := Length;
[L563]               __tmp__now := now;
[L564]               __tmp__owner_Owned := owner_Owned;
[L565]               __tmp__newOwner_Owned := newOwner_Owned;
[L566]               __tmp__name_USD := name_USD;
[L567]               __tmp__symbol_USD := symbol_USD;
[L568]               __tmp__decimals_USD := decimals_USD;
[L569]               __tmp___balances_USD := _balances_USD;
[L570]               __tmp___allowed_USD := _allowed_USD;
[L571]               __tmp__totalSupply_USD := totalSupply_USD;
[L572]   CALL        call __ret_0_ := transfer~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L1912]              __var_3 := null;
[L1913]  COND FALSE  !(_to_s342 == null)
[L1921]  COND TRUE   !(__tmp___balances_USD[this][msgsender_MSG] >= _value_s342 && _value_s342 > 0)
[L1922]              revert := true;
[L572]   RET         call __ret_0_ := transfer~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L573]               assume revert || gas < 0;
[L3178]  RET         call __ret_0_transfer := transfer~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L3225]  RET         call CorralChoice_USD(this);

Loop:
[L3225]  CALL        call CorralChoice_USD(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != USD;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND TRUE   choice == 5
[L3174]              gas := gas - 21000;
[L3175]  COND TRUE   gas >= 0
[L3176]              assume _value_s342 >= 0 && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3177]              assume msgvalue_MSG == 0;
[L3178]  CALL        call __ret_0_transfer := transfer~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s342 && _value_s342 <= _balances_USD[this][msgsender_MSG]) && _value_s342 >= 0) && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_to_s342] >= 0) && _balances_USD[this][_to_s342] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][msgsender_MSG] >= 0) && _balances_USD[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_USD0 := true;
[L2]                 call_transfer_USD0 := false;
[L2]                 revert := revert_hold;
[L550]               havoc __exception;
[L551]               revert := false;
[L552]   COND TRUE   __exception
[L553]               __tmp__Balance := Balance;
[L554]               __tmp__DType := DType;
[L555]               __tmp__Alloc := Alloc;
[L556]               __tmp__balance_ADDR := balance_ADDR;
[L557]               __tmp__M_Ref_int := M_Ref_int;
[L558]               __tmp__sum__balances0 := sum__balances0;
[L559]               __tmp__alloc__allowed_USD_lvl0 := alloc__allowed_USD_lvl0;
[L560]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L561]               __tmp__sum__allowed1 := sum__allowed1;
[L562]               __tmp__Length := Length;
[L563]               __tmp__now := now;
[L564]               __tmp__owner_Owned := owner_Owned;
[L565]               __tmp__newOwner_Owned := newOwner_Owned;
[L566]               __tmp__name_USD := name_USD;
[L567]               __tmp__symbol_USD := symbol_USD;
[L568]               __tmp__decimals_USD := decimals_USD;
[L569]               __tmp___balances_USD := _balances_USD;
[L570]               __tmp___allowed_USD := _allowed_USD;
[L571]               __tmp__totalSupply_USD := totalSupply_USD;
[L572]   CALL        call __ret_0_ := transfer~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L1912]              __var_3 := null;
[L1913]  COND FALSE  !(_to_s342 == null)
[L1921]  COND TRUE   !(__tmp___balances_USD[this][msgsender_MSG] >= _value_s342 && _value_s342 > 0)
[L1922]              revert := true;
[L572]   RET         call __ret_0_ := transfer~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L573]               assume revert || gas < 0;
[L3178]  RET         call __ret_0_transfer := transfer~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L3225]  RET         call CorralChoice_USD(this);

[2020-11-28 09:24:58,861 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:24:58,861 INFO  L82        PathProgramCache]: Analyzing trace with hash 170036352, now seen corresponding path program 1 times
[2020-11-28 09:24:58,862 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:24:58,892 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:24:58,915 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:24:58,959 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:24:58,959 INFO  L82        PathProgramCache]: Analyzing trace with hash 1746707638, now seen corresponding path program 1 times
[2020-11-28 09:24:58,960 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:24:58,966 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:24:58,971 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:24:58,983 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:24:58,983 INFO  L82        PathProgramCache]: Analyzing trace with hash 95227445, now seen corresponding path program 1 times
[2020-11-28 09:24:58,984 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:24:59,019 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:24:59,049 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 163 to 317
[2020-11-28 09:24:59,298 WARN  L188               SmtUtils]: Spent 119.00 ms on a formula simplification. DAG size of input: 146 DAG size of output: 133
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1237 to 2473
[2020-11-28 09:24:59,531 WARN  L188               SmtUtils]: Spent 148.00 ms on a formula simplification that was a NOOP. DAG size: 231
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
[2020-11-28 09:24:59,673 WARN  L188               SmtUtils]: Spent 133.00 ms on a formula simplification that was a NOOP. DAG size: 185
[2020-11-28 09:25:00,044 WARN  L188               SmtUtils]: Spent 368.00 ms on a formula simplification. DAG size of input: 253 DAG size of output: 217
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.001s / 0.005s total
Resizing node table from 5003 to 9973
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 5281 to 10559
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
[2020-11-28 09:25:00,414 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3019 to 6037
[2020-11-28 09:25:01,298 WARN  L188               SmtUtils]: Spent 216.00 ms on a formula simplification. DAG size of input: 252 DAG size of output: 217
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-28 09:25:02,051 WARN  L188               SmtUtils]: Spent 546.00 ms on a formula simplification. DAG size of input: 410 DAG size of output: 402
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 5003 to 9973
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
[2020-11-28 09:25:02,458 WARN  L188               SmtUtils]: Spent 204.00 ms on a formula simplification. DAG size of input: 262 DAG size of output: 261
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-28 09:25:02,569 WARN  L188               SmtUtils]: Spent 108.00 ms on a formula simplification that was a NOOP. DAG size: 257
[2020-11-28 09:25:02,586 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:25:02,633 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:25:02,641 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 28.11 09:25:02 BasicIcfg
[2020-11-28 09:25:02,641 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-28 09:25:02,641 INFO  L168              Benchmark]: Toolchain (without parser) took 7397.46 ms. Allocated memory was 1.0 GB in the beginning and 1.8 GB in the end (delta: 768.6 MB). Free memory was 940.6 MB in the beginning and 1.7 GB in the end (delta: -771.4 MB). Peak memory consumption was 960.2 MB. Max. memory is 15.3 GB.
[2020-11-28 09:25:02,642 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-28 09:25:02,642 INFO  L168              Benchmark]: Boogie Preprocessor took 87.20 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-28 09:25:02,642 INFO  L168              Benchmark]: UtopiaSpecLang took 52.93 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-28 09:25:02,642 INFO  L168              Benchmark]: Boogie Printer took 12.41 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-28 09:25:02,643 INFO  L168              Benchmark]: RCFGBuilder took 609.61 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 838.6 MB in the end (delta: 85.9 MB). Peak memory consumption was 85.9 MB. Max. memory is 15.3 GB.
[2020-11-28 09:25:02,643 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.09 ms. Allocated memory is still 1.0 GB. Free memory was 838.6 MB in the beginning and 835.0 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-28 09:25:02,643 INFO  L168              Benchmark]: BÃ¼chi Program Product took 982.09 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 68.7 MB). Free memory was 835.0 MB in the beginning and 749.5 MB in the end (delta: 85.5 MB). Peak memory consumption was 154.2 MB. Max. memory is 15.3 GB.
[2020-11-28 09:25:02,643 INFO  L168              Benchmark]: BlockEncodingV2 took 108.07 ms. Allocated memory is still 1.1 GB. Free memory was 749.5 MB in the beginning and 705.0 MB in the end (delta: 44.5 MB). Peak memory consumption was 44.5 MB. Max. memory is 15.3 GB.
[2020-11-28 09:25:02,644 INFO  L168              Benchmark]: BuchiAutomizer took 5506.12 ms. Allocated memory was 1.1 GB in the beginning and 1.8 GB in the end (delta: 699.9 MB). Free memory was 705.0 MB in the beginning and 1.7 GB in the end (delta: -1.0 GB). Peak memory consumption was 655.9 MB. Max. memory is 15.3 GB.
[2020-11-28 09:25:02,647 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2974 locations, 5219 edges
  - StatisticsResult: Encoded RCFG
    2906 locations, 5029 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 87.20 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 52.93 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 12.41 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 609.61 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 838.6 MB in the end (delta: 85.9 MB). Peak memory consumption was 85.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.09 ms. Allocated memory is still 1.0 GB. Free memory was 838.6 MB in the beginning and 835.0 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 982.09 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 68.7 MB). Free memory was 835.0 MB in the beginning and 749.5 MB in the end (delta: 85.5 MB). Peak memory consumption was 154.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 108.07 ms. Allocated memory is still 1.1 GB. Free memory was 749.5 MB in the beginning and 705.0 MB in the end (delta: 44.5 MB). Peak memory consumption was 44.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 5506.12 ms. Allocated memory was 1.1 GB in the beginning and 1.8 GB in the end (delta: 699.9 MB). Free memory was 705.0 MB in the beginning and 1.7 GB in the end (delta: -1.0 GB). Peak memory consumption was 655.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1234 locations, 1606 edges
  - StatisticsResult: BuchiProgram size
    2974 locations, 5219 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 2 terminating modules (2 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.2 modules have a trivial ranking function, the largest among these consists of 4 locations. The remainder module has 2198 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 5.4s and 3 iterations.  TraceHistogramMax:1. Analysis of lassos took 3.8s. Construction of modules took 0.8s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 2. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 2 MinimizatonAttempts, 766 StatesRemovedByMinimization, 1 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2354 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 6704 SDtfs, 6761 SDslu, 5537 SDs, 0 SdLazy, 1860 SolverSat, 1400 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.8s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU2 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129631745) = (new USD)({from : 115792089237316195423570985008687907853269984665640564039457584007913129631751});
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND FALSE  !(__exception)
[L464]   CALL        call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1500]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND FALSE  !(revert)
[L1880]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  COND FALSE  !(revert)
[L1884]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1744]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]              assume msgsender_MSG != null;
[L1727]              Balance[this] := 0;
[L1728]              owner_Owned[this] := null;
[L1729]              newOwner_Owned[this] := null;
[L1731]              owner_Owned[this] := msgsender_MSG;
[L1744]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1745]  COND FALSE  !(revert)
[L1884]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1885]  COND FALSE  !(revert)
[L1888]  CALL        call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1842]              assume msgsender_MSG != null;
[L1843]              Balance[this] := 0;
[L1844]              name_USD[this] := -716642523;
[L1845]              symbol_USD[this] := -578635893;
[L1846]              decimals_USD[this] := 18;
[L1847]              _balances_USD[this] := zeroRefintArr();
[L1848]              sum__balances0[this] := 0;
[L1849]              _allowed_USD[this] := zeroRefRefintArr();
[L1850]              sum__allowed1[this] := 0;
[L1851]              __var_2 := decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1852]              totalSupply_USD[this] := 1000000000000 * (nonlinearPow(10, decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1854]              sum__balances0[this] := sum__balances0[this] - _balances_USD[this][msgsender_MSG];
[L1855]              _balances_USD[this][msgsender_MSG] := totalSupply_USD[this];
[L1856]              sum__balances0[this] := sum__balances0[this] + _balances_USD[this][msgsender_MSG];
[L1857]              assert { :EventEmitted "Transfer_USD" } true;
[L1888]  RET         call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]  COND FALSE  !(revert)
[L464]   RET         call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L465]               assume !revert && gas >= 0;
[L3221]  RET         call USD_USD(this, msgsender_MSG, msgvalue_MSG);
USD(115792089237316195423570985008687907853269984665640564039457584007913129631745).transfer~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913129631751, _to : 115792089237316195423570985008687907853269984665640564039457584007913129631751, _value : 0});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s342 && _value_s342 <= _balances_USD[this][msgsender_MSG]) && _value_s342 >= 0) && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_to_s342] >= 0) && _balances_USD[this][_to_s342] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][msgsender_MSG] >= 0) && _balances_USD[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_USD0 := true;
[L2]                 call_transfer_USD0 := false;
[L2]                 revert := revert_hold;
[L550]               havoc __exception;
[L551]               revert := false;
[L552]   COND TRUE   __exception
[L553]               __tmp__Balance := Balance;
[L554]               __tmp__DType := DType;
[L555]               __tmp__Alloc := Alloc;
[L556]               __tmp__balance_ADDR := balance_ADDR;
[L557]               __tmp__M_Ref_int := M_Ref_int;
[L558]               __tmp__sum__balances0 := sum__balances0;
[L559]               __tmp__alloc__allowed_USD_lvl0 := alloc__allowed_USD_lvl0;
[L560]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L561]               __tmp__sum__allowed1 := sum__allowed1;
[L562]               __tmp__Length := Length;
[L563]               __tmp__now := now;
[L564]               __tmp__owner_Owned := owner_Owned;
[L565]               __tmp__newOwner_Owned := newOwner_Owned;
[L566]               __tmp__name_USD := name_USD;
[L567]               __tmp__symbol_USD := symbol_USD;
[L568]               __tmp__decimals_USD := decimals_USD;
[L569]               __tmp___balances_USD := _balances_USD;
[L570]               __tmp___allowed_USD := _allowed_USD;
[L571]               __tmp__totalSupply_USD := totalSupply_USD;
[L572]   CALL        call __ret_0_ := transfer~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L1912]              __var_3 := null;
[L1913]  COND FALSE  !(_to_s342 == null)
[L1921]  COND TRUE   !(__tmp___balances_USD[this][msgsender_MSG] >= _value_s342 && _value_s342 > 0)
[L1922]              revert := true;
[L572]   RET         call __ret_0_ := transfer~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L573]               assume revert || gas < 0;
[L3178]  RET         call __ret_0_transfer := transfer~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);

Loop:
USD(115792089237316195423570985008687907853269984665640564039457584007913129631745).transfer~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129631751, _to : 115792089237316195423570985008687907853269984665640564039457584007913129631751, _value : 0});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s342 && _value_s342 <= _balances_USD[this][msgsender_MSG]) && _value_s342 >= 0) && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_to_s342] >= 0) && _balances_USD[this][_to_s342] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][msgsender_MSG] >= 0) && _balances_USD[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_USD0 := true;
[L2]                 call_transfer_USD0 := false;
[L2]                 revert := revert_hold;
[L550]               havoc __exception;
[L551]               revert := false;
[L552]   COND TRUE   __exception
[L553]               __tmp__Balance := Balance;
[L554]               __tmp__DType := DType;
[L555]               __tmp__Alloc := Alloc;
[L556]               __tmp__balance_ADDR := balance_ADDR;
[L557]               __tmp__M_Ref_int := M_Ref_int;
[L558]               __tmp__sum__balances0 := sum__balances0;
[L559]               __tmp__alloc__allowed_USD_lvl0 := alloc__allowed_USD_lvl0;
[L560]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L561]               __tmp__sum__allowed1 := sum__allowed1;
[L562]               __tmp__Length := Length;
[L563]               __tmp__now := now;
[L564]               __tmp__owner_Owned := owner_Owned;
[L565]               __tmp__newOwner_Owned := newOwner_Owned;
[L566]               __tmp__name_USD := name_USD;
[L567]               __tmp__symbol_USD := symbol_USD;
[L568]               __tmp__decimals_USD := decimals_USD;
[L569]               __tmp___balances_USD := _balances_USD;
[L570]               __tmp___allowed_USD := _allowed_USD;
[L571]               __tmp__totalSupply_USD := totalSupply_USD;
[L572]   CALL        call __ret_0_ := transfer~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L1912]              __var_3 := null;
[L1913]  COND FALSE  !(_to_s342 == null)
[L1921]  COND TRUE   !(__tmp___balances_USD[this][msgsender_MSG] >= _value_s342 && _value_s342 > 0)
[L1922]              revert := true;
[L572]   RET         call __ret_0_ := transfer~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L573]               assume revert || gas < 0;
[L3178]  RET         call __ret_0_transfer := transfer~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
