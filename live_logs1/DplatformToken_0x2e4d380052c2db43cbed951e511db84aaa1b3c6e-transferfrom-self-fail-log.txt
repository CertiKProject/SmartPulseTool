This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 14:23:46,993 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 14:23:46,994 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 14:23:47,004 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 14:23:47,005 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 14:23:47,005 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 14:23:47,006 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 14:23:47,008 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 14:23:47,009 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 14:23:47,010 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 14:23:47,011 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 14:23:47,011 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 14:23:47,011 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 14:23:47,012 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 14:23:47,013 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 14:23:47,013 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 14:23:47,014 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 14:23:47,015 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 14:23:47,016 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 14:23:47,018 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 14:23:47,018 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 14:23:47,019 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 14:23:47,021 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 14:23:47,021 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 14:23:47,021 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 14:23:47,022 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 14:23:47,022 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 14:23:47,023 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 14:23:47,023 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 14:23:47,023 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 14:23:47,023 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 14:23:47,024 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 14:23:47,024 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 14:23:47,025 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 14:23:47,026 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 14:23:47,026 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 14:23:47,026 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 14:23:47,026 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 14:23:47,026 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 14:23:47,027 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 14:23:47,028 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 14:23:47,028 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 14:23:47,035 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 14:23:47,036 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 14:23:47,036 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 14:23:47,036 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 14:23:47,037 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 14:23:47,037 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 14:23:47,037 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 14:23:47,037 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 14:23:47,037 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 14:23:47,037 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 14:23:47,037 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 14:23:47,037 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 14:23:47,037 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 14:23:47,038 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 14:23:47,038 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 14:23:47,038 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 14:23:47,038 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 14:23:47,038 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 14:23:47,038 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 14:23:47,038 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 14:23:47,038 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 14:23:47,038 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 14:23:47,038 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 14:23:47,039 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 14:23:47,039 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 14:23:47,039 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 14:23:47,059 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 14:23:47,070 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 14:23:47,074 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 14:23:47,075 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 14:23:47,076 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 14:23:47,076 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl
[2020-11-25 14:23:47,077 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl'
[2020-11-25 14:23:47,170 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 14:23:47,171 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 14:23:47,172 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 14:23:47,172 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 14:23:47,172 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 14:23:47,189 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:23:47" (1/1) ...
[2020-11-25 14:23:47,191 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:23:47" (1/1) ...
[2020-11-25 14:23:47,222 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:23:47" (1/1) ...
[2020-11-25 14:23:47,223 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:23:47" (1/1) ...
[2020-11-25 14:23:47,251 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:23:47" (1/1) ...
[2020-11-25 14:23:47,262 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:23:47" (1/1) ...
[2020-11-25 14:23:47,270 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:23:47" (1/1) ...
[2020-11-25 14:23:47,280 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 14:23:47,281 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 14:23:47,281 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 14:23:47,283 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 14:23:47,287 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:23:47" (1/1) ...
[2020-11-25 14:23:47,306 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transferFrom)))
[2020-11-25 14:23:47,311 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transferFrom)))
[2020-11-25 14:23:47,318 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transferFrom)))
[2020-11-25 14:23:47,325 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( from_s351==to_s351 && ( value_s351>_balances_ERC20[this][from_s351] || value_s351>_allowed_ERC20[this][from_s351][msg.sender] ) ) && value_s351>=0 ) && value_s351<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s351]>=0 ) && _balances_ERC20[this][to_s351]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][from_s351]>=0 ) && _balances_ERC20[this][from_s351]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_ERC20[this][from_s351][msg.sender]>=0 ) && _allowed_ERC20[this][from_s351][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[from_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IdentifierExpression[to_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[value_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPGT,IdentifierExpression[value_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[to_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[to_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 14:23:47,330 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transferFrom)))
[2020-11-25 14:23:47,330 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ERC200) ==> ( <>AP(fail_transferFrom_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 14:23:47,339 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:23:47 PropertyContainer
[2020-11-25 14:23:47,339 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 14:23:47,340 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 14:23:47,340 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 14:23:47,340 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 14:23:47,340 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:23:47" (1/2) ...
[2020-11-25 14:23:47,341 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 14:23:47,341 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 14:23:47,356 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:23:47" (2/2) ...
[2020-11-25 14:23:47,356 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 14:23:47,357 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 14:23:47,357 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 14:23:47,357 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 14:23:47,358 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:23:47" (1/2) ...
[2020-11-25 14:23:47,409 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 14:23:47,409 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 14:23:47,409 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 14:23:47,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 14:23:47,410 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 14:23:47,410 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 14:23:47,410 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 14:23:47,410 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 14:23:47,410 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 14:23:47,410 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 14:23:47,410 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 14:23:47,410 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 14:23:47,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 14:23:47,411 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 14:23:47,411 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 14:23:47,411 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 14:23:47,411 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 14:23:47,411 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 14:23:47,412 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 14:23:47,412 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 14:23:47,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 14:23:47,412 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 14:23:47,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 14:23:47,412 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 14:23:47,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 14:23:47,412 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 14:23:47,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 14:23:47,412 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 14:23:47,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 14:23:47,413 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 14:23:47,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 14:23:47,413 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 14:23:47,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 14:23:47,413 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 14:23:47,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 14:23:47,413 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 14:23:47,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 14:23:47,413 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 14:23:47,413 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 14:23:47,414 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 14:23:47,414 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 14:23:47,414 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 14:23:47,414 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 14:23:47,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 14:23:47,414 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 14:23:47,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 14:23:47,414 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 14:23:47,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 14:23:47,414 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 14:23:47,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 14:23:47,415 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken_NoBaseCtor__success
[2020-11-25 14:23:47,415 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken
[2020-11-25 14:23:47,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken
[2020-11-25 14:23:47,415 INFO  L130     BoogieDeclarations]: Found specification of procedure runQuantityDPOM~address_DplatformToken
[2020-11-25 14:23:47,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure runQuantityDPOM~address_DplatformToken
[2020-11-25 14:23:47,415 INFO  L130     BoogieDeclarations]: Found specification of procedure quantity_DplatformToken
[2020-11-25 14:23:47,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure quantity_DplatformToken
[2020-11-25 14:23:47,415 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_DplatformToken
[2020-11-25 14:23:47,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_DplatformToken
[2020-11-25 14:23:47,415 INFO  L130     BoogieDeclarations]: Found specification of procedure startTime_DplatformToken
[2020-11-25 14:23:47,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTime_DplatformToken
[2020-11-25 14:23:47,416 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 14:23:47,416 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 14:23:47,416 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 14:23:47,416 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 14:23:47,416 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 14:23:47,416 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 14:23:47,416 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 14:23:47,416 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 14:23:47,416 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 14:23:47,417 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 14:23:47,417 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 14:23:47,417 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DplatformToken
[2020-11-25 14:23:47,417 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 14:23:47,417 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 14:23:47,417 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 14:23:47,417 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 14:23:47,417 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 14:23:47,417 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 14:23:47,417 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 14:23:47,418 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 14:23:47,418 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 14:23:47,418 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 14:23:47,418 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 14:23:47,418 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 14:23:47,418 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 14:23:47,418 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 14:23:47,418 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 14:23:47,418 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 14:23:47,418 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 14:23:47,419 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 14:23:47,419 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 14:23:47,419 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 14:23:47,419 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 14:23:47,419 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 14:23:47,419 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 14:23:47,419 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 14:23:47,419 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 14:23:47,419 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 14:23:47,419 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 14:23:47,419 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 14:23:47,420 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:23:47,420 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:23:47,420 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:23:47,420 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:23:47,420 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 14:23:47,420 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 14:23:47,420 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 14:23:47,420 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 14:23:47,420 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 14:23:47,420 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 14:23:47,421 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 14:23:47,421 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 14:23:47,421 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 14:23:47,421 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 14:23:47,421 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 14:23:47,421 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 14:23:47,421 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 14:23:47,421 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken_NoBaseCtor__fail
[2020-11-25 14:23:47,421 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken__success
[2020-11-25 14:23:47,421 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken__fail
[2020-11-25 14:23:47,422 INFO  L130     BoogieDeclarations]: Found specification of procedure runQuantityDPOM~address_DplatformToken__success
[2020-11-25 14:23:47,422 INFO  L130     BoogieDeclarations]: Found specification of procedure runQuantityDPOM~address_DplatformToken__fail
[2020-11-25 14:23:47,422 INFO  L130     BoogieDeclarations]: Found specification of procedure quantity_DplatformToken__success
[2020-11-25 14:23:47,422 INFO  L130     BoogieDeclarations]: Found specification of procedure quantity_DplatformToken__fail
[2020-11-25 14:23:47,422 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_DplatformToken__success
[2020-11-25 14:23:47,422 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_DplatformToken__fail
[2020-11-25 14:23:47,422 INFO  L130     BoogieDeclarations]: Found specification of procedure startTime_DplatformToken__success
[2020-11-25 14:23:47,422 INFO  L130     BoogieDeclarations]: Found specification of procedure startTime_DplatformToken__fail
[2020-11-25 14:23:47,422 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 14:23:47,422 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 14:23:47,423 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 14:23:47,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 14:23:47,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 14:23:47,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 14:23:47,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 14:23:47,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 14:23:47,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 14:23:47,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 14:23:47,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 14:23:47,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 14:23:47,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 14:23:47,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 14:23:47,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 14:23:47,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 14:23:47,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 14:23:47,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 14:23:47,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 14:23:47,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 14:23:47,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 14:23:47,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 14:23:47,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 14:23:47,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 14:23:47,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 14:23:47,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 14:23:47,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 14:23:47,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 14:23:47,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 14:23:47,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 14:23:47,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 14:23:47,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 14:23:47,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 14:23:47,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 14:23:47,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 14:23:47,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 14:23:47,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 14:23:47,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 14:23:47,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 14:23:47,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:23:47,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:23:47,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:23:47,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:23:47,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 14:23:47,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 14:23:47,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 14:23:47,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 14:23:47,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 14:23:47,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 14:23:47,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 14:23:47,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 14:23:47,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 14:23:47,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 14:23:47,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 14:23:47,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 14:23:47,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 14:23:47,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 14:23:47,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 14:23:47,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 14:23:47,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 14:23:47,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 14:23:47,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken_NoBaseCtor__fail
[2020-11-25 14:23:47,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken_NoBaseCtor__success
[2020-11-25 14:23:47,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken__fail
[2020-11-25 14:23:47,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken__success
[2020-11-25 14:23:47,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure runQuantityDPOM~address_DplatformToken__fail
[2020-11-25 14:23:47,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure runQuantityDPOM~address_DplatformToken__success
[2020-11-25 14:23:47,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure quantity_DplatformToken__fail
[2020-11-25 14:23:47,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure quantity_DplatformToken__success
[2020-11-25 14:23:47,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_DplatformToken__fail
[2020-11-25 14:23:47,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_DplatformToken__success
[2020-11-25 14:23:47,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTime_DplatformToken__fail
[2020-11-25 14:23:47,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTime_DplatformToken__success
[2020-11-25 14:23:47,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 14:23:47,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 14:23:47,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 14:23:47,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 14:23:47,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 14:23:47,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 14:23:47,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 14:23:47,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 14:23:47,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 14:23:47,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 14:23:47,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 14:23:47,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 14:23:47,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 14:23:47,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 14:23:47,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DplatformToken
[2020-11-25 14:23:47,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 14:23:47,429 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 14:23:47,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 14:23:47,829 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:23:47,829 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:23:48,160 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 14:23:48,160 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 14:23:48,162 INFO  L202        PluginConnector]: Adding new model DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:23:48 BoogieIcfgContainer
[2020-11-25 14:23:48,162 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:23:47" (2/2) ...
[2020-11-25 14:23:48,163 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 14:23:48,163 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@53f087a4 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:23:48, skipping insertion in model container
[2020-11-25 14:23:48,163 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 14:23:48,163 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 14:23:48,163 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 14:23:48,165 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 14:23:48,165 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:23:47" (1/3) ...
[2020-11-25 14:23:48,165 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5e8d3d25 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:23:48, skipping insertion in model container
[2020-11-25 14:23:48,165 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:23:47" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 14:23:48,207 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:23:48 NWAContainer
[2020-11-25 14:23:48,207 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 14:23:48,208 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 14:23:48,208 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 14:23:48,209 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 14:23:48,210 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:23:48" (3/4) ...
[2020-11-25 14:23:48,212 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@16ba6f21 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:23:48, skipping insertion in model container
[2020-11-25 14:23:48,212 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:23:48" (4/4) ...
[2020-11-25 14:23:48,217 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 14:23:48,221 INFO  L110   BuchiProductObserver]: Initial RCFG 1958 locations, 2475 edges
[2020-11-25 14:23:48,221 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 14:23:48,232 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 14:23:49,696 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 14:23:49,702 INFO  L110   BuchiProductObserver]: BuchiProgram size 4576 locations, 7941 edges
[2020-11-25 14:23:49,702 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:23:49 BoogieIcfgContainer
[2020-11-25 14:23:49,702 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 14:23:49,702 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 14:23:49,702 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 14:23:49,704 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 14:23:49,704 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:23:49" (1/1) ...
[2020-11-25 14:23:49,801 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_16 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][account_s621][msgsender_MSG], value_s621);
[2020-11-25 14:23:49,804 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_16 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][account_s621][msgsender_MSG], value_s621);
[2020-11-25 14:23:49,816 INFO  L313           BlockEncoder]: Initial Icfg 4576 locations, 7941 edges
[2020-11-25 14:23:49,816 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 14:23:49,816 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 14:23:49,816 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 14:23:49,818 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 14:23:49,832 INFO  L70    emoveInfeasibleEdges]: Removed 102 edges and 13 locations because of local infeasibility
[2020-11-25 14:23:49,842 INFO  L70        RemoveSinkStates]: Removed 120 edges and 67 locations by removing sink states
[2020-11-25 14:23:49,855 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 14:23:49,859 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 14:23:49,862 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 14:23:49,863 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 14:23:49,868 INFO  L313           BlockEncoder]: Encoded RCFG 4470 locations, 7681 edges
[2020-11-25 14:23:49,868 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:23:49 BasicIcfg
[2020-11-25 14:23:49,868 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 14:23:49,869 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 14:23:49,869 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 14:23:49,871 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 14:23:49,871 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:23:49,871 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:23:47" (1/6) ...
[2020-11-25 14:23:49,873 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5d16e632 and model type DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:23:49, skipping insertion in model container
[2020-11-25 14:23:49,873 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:23:49,873 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:23:47" (2/6) ...
[2020-11-25 14:23:49,873 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5d16e632 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:23:49, skipping insertion in model container
[2020-11-25 14:23:49,873 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:23:49,873 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:23:48" (3/6) ...
[2020-11-25 14:23:49,874 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5d16e632 and model type DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:23:49, skipping insertion in model container
[2020-11-25 14:23:49,874 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:23:49,874 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:23:48" (4/6) ...
[2020-11-25 14:23:49,874 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5d16e632 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:23:49, skipping insertion in model container
[2020-11-25 14:23:49,874 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:23:49,874 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:23:49" (5/6) ...
[2020-11-25 14:23:49,874 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5d16e632 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 02:23:49, skipping insertion in model container
[2020-11-25 14:23:49,874 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:23:49,874 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:23:49" (6/6) ...
[2020-11-25 14:23:49,875 INFO  L404   chiAutomizerObserver]: Analyzing ICFG DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self-fail.bpl_BEv2
[2020-11-25 14:23:49,911 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 14:23:49,911 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 14:23:49,911 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 14:23:49,911 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 14:23:49,912 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 14:23:49,912 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 14:23:49,912 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 14:23:49,912 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 14:23:49,912 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 14:23:49,949 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4470 states.
[2020-11-25 14:23:50,007 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:23:50,008 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:23:50,008 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:23:50,015 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:23:50,015 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:23:50,015 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 14:23:50,016 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4470 states.
[2020-11-25 14:23:50,039 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:23:50,039 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:23:50,039 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:23:50,041 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:23:50,041 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L5422]              assume null == 0;
[L5423]  CALL        call this := FreshRefGenerator__success();
[L2696]              havoc newRef;
[L2697]              assume Alloc[newRef] == false;
[L2698]              Alloc[newRef] := true;
[L2699]              assume newRef != null;
[L5423]  RET         call this := FreshRefGenerator__success();
[L5424]              assume now >= 0;
[L5425]              assume DType[this] == DplatformToken;
[L5426]              assume msgvalue_MSG == 0;
[L5427]              gas := gas - 53000;
[L5428]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1556]              havoc __exception;
[L1557]              revert := false;
[L1558]  COND FALSE  !(__exception)
[L1598]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3574]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3574]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  COND TRUE   revert
[L1598]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1599]              assume !revert && gas >= 0;
[L5428]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5429]              assume !revert && gas >= 0;

Loop:
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND TRUE   choice == 15
[L5320]              gas := gas - 21000;
[L5321]  COND FALSE  !(gas >= 0)
[L5432]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:23:50,055 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:23:50,055 INFO  L82        PathProgramCache]: Analyzing trace with hash -1260175659, now seen corresponding path program 1 times
[2020-11-25 14:23:50,059 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:23:50,119 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:23:50,158 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:23:50,160 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:23:50,160 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 14:23:50,163 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:23:50,456 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 14:23:50,456 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 14:23:50,458 INFO  L87              Difference]: Start difference. First operand 4470 states. Second operand 3 states.
[2020-11-25 14:23:50,717 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:23:50,717 INFO  L93              Difference]: Finished difference Result 2956 states and 3290 transitions.
[2020-11-25 14:23:50,717 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 14:23:50,719 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2956 states and 3290 transitions.
[2020-11-25 14:23:50,735 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:23:50,756 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2956 states to 2956 states and 3290 transitions.
[2020-11-25 14:23:50,757 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 14:23:50,759 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 753
[2020-11-25 14:23:50,759 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2956 states and 3290 transitions.
[2020-11-25 14:23:50,765 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:23:50,765 INFO  L728         BuchiCegarLoop]: Abstraction has 2956 states and 3290 transitions.
[2020-11-25 14:23:50,780 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2956 states and 3290 transitions.
[2020-11-25 14:23:50,825 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2956 to 2956.
[2020-11-25 14:23:50,825 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2956 states.
[2020-11-25 14:23:50,830 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2956 states to 2956 states and 3290 transitions.
[2020-11-25 14:23:50,831 INFO  L751         BuchiCegarLoop]: Abstraction has 2956 states and 3290 transitions.
[2020-11-25 14:23:50,831 INFO  L631         BuchiCegarLoop]: Abstraction has 2956 states and 3290 transitions.
[2020-11-25 14:23:50,831 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 14:23:50,831 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2956 states and 3290 transitions.
[2020-11-25 14:23:50,838 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:23:50,838 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:23:50,838 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:23:50,839 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:23:50,839 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L5422]              assume null == 0;
[L5423]  CALL        call this := FreshRefGenerator__success();
[L2696]              havoc newRef;
[L2697]              assume Alloc[newRef] == false;
[L2698]              Alloc[newRef] := true;
[L2699]              assume newRef != null;
[L5423]  RET         call this := FreshRefGenerator__success();
[L5424]              assume now >= 0;
[L5425]              assume DType[this] == DplatformToken;
[L5426]              assume msgvalue_MSG == 0;
[L5427]              gas := gas - 53000;
[L5428]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1556]              havoc __exception;
[L1557]              revert := false;
[L1558]  COND FALSE  !(__exception)
[L1598]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3574]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND TRUE   revert
[L3574]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  COND TRUE   revert
[L1598]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1599]              assume !revert && gas >= 0;
[L5428]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5429]              assume !revert && gas >= 0;
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND FALSE  !(choice == 15)
[L5326]  COND FALSE  !(choice == 14)
[L5333]  COND TRUE   choice == 13
[L5334]              gas := gas - 21000;
[L5335]  COND TRUE   gas >= 0
[L5336]              assume value_s351 >= 0 && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5337]              assume msgvalue_MSG == 0;
[L5338]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s351 == to_s351 && (value_s351 > _balances_ERC20[this][from_s351] || value_s351 > _allowed_ERC20[this][from_s351][msgsender_MSG])) && value_s351 >= 0) && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s351] >= 0) && _balances_ERC20[this][to_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s351] >= 0) && _balances_ERC20[this][from_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s351][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s351][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L837]               havoc __exception;
[L838]               revert := false;
[L839]   COND FALSE  !(__exception)
[L879]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3075]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L2837]  COND TRUE   !(b_s149 <= a_s149)
[L2838]              revert := true;
[L3075]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L3076]  COND TRUE   revert
[L879]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L880]               assume !revert && gas >= 0;
[L5338]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L5432]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND FALSE  !(choice == 15)
[L5326]  COND FALSE  !(choice == 14)
[L5333]  COND TRUE   choice == 13
[L5334]              gas := gas - 21000;
[L5335]  COND TRUE   gas >= 0
[L5336]              assume value_s351 >= 0 && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5337]              assume msgvalue_MSG == 0;
[L5338]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s351 == to_s351 && (value_s351 > _balances_ERC20[this][from_s351] || value_s351 > _allowed_ERC20[this][from_s351][msgsender_MSG])) && value_s351 >= 0) && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s351] >= 0) && _balances_ERC20[this][to_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s351] >= 0) && _balances_ERC20[this][from_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s351][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s351][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L837]               havoc __exception;
[L838]               revert := false;
[L839]   COND FALSE  !(__exception)
[L879]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3075]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L2837]  COND TRUE   !(b_s149 <= a_s149)
[L2838]              revert := true;
[L3075]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L3076]  COND TRUE   revert
[L879]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L880]               assume !revert && gas >= 0;
[L5338]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L5432]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:23:50,843 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:23:50,843 INFO  L82        PathProgramCache]: Analyzing trace with hash 704061387, now seen corresponding path program 1 times
[2020-11-25 14:23:50,843 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:23:50,858 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:23:50,879 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:23:50,879 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:23:50,879 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 14:23:50,880 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:23:50,881 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 14:23:50,881 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 14:23:50,881 INFO  L87              Difference]: Start difference. First operand 2956 states and 3290 transitions. cyclomatic complexity: 344 Second operand 3 states.
[2020-11-25 14:23:50,947 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:23:50,947 INFO  L93              Difference]: Finished difference Result 3635 states and 4111 transitions.
[2020-11-25 14:23:50,947 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 14:23:50,948 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3635 states and 4111 transitions.
[2020-11-25 14:23:50,961 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:23:50,976 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3635 states to 3433 states and 3823 transitions.
[2020-11-25 14:23:50,976 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 872
[2020-11-25 14:23:50,977 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 897
[2020-11-25 14:23:50,977 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3433 states and 3823 transitions.
[2020-11-25 14:23:50,982 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:23:50,982 INFO  L728         BuchiCegarLoop]: Abstraction has 3433 states and 3823 transitions.
[2020-11-25 14:23:50,985 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3433 states and 3823 transitions.
[2020-11-25 14:23:51,014 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3433 to 3135.
[2020-11-25 14:23:51,014 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3135 states.
[2020-11-25 14:23:51,018 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3135 states to 3135 states and 3450 transitions.
[2020-11-25 14:23:51,018 INFO  L751         BuchiCegarLoop]: Abstraction has 3135 states and 3450 transitions.
[2020-11-25 14:23:51,018 INFO  L631         BuchiCegarLoop]: Abstraction has 3135 states and 3450 transitions.
[2020-11-25 14:23:51,018 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 14:23:51,018 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3135 states and 3450 transitions.
[2020-11-25 14:23:51,024 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:23:51,024 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:23:51,024 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:23:51,027 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:23:51,027 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L5422]              assume null == 0;
[L5423]  CALL        call this := FreshRefGenerator__success();
[L2696]              havoc newRef;
[L2697]              assume Alloc[newRef] == false;
[L2698]              Alloc[newRef] := true;
[L2699]              assume newRef != null;
[L5423]  RET         call this := FreshRefGenerator__success();
[L5424]              assume now >= 0;
[L5425]              assume DType[this] == DplatformToken;
[L5426]              assume msgvalue_MSG == 0;
[L5427]              gas := gas - 53000;
[L5428]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1556]              havoc __exception;
[L1557]              revert := false;
[L1558]  COND FALSE  !(__exception)
[L1598]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3574]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3574]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  COND FALSE  !(revert)
[L3578]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2930]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L2930]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  COND FALSE  !(revert)
[L2934]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2906]              assume msgsender_MSG != null;
[L2907]              Balance[this] := 0;
[L2908]              _balances_ERC20[this] := zeroRefintArr();
[L2909]              sum__balances0[this] := 0;
[L2910]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2911]              sum__allowed1[this] := 0;
[L2912]              _totalSupply_ERC20[this] := 0;
[L2934]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2935]  COND FALSE  !(revert)
[L3578]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3579]  COND FALSE  !(revert)
[L3582]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3426]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3426]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3427]  COND FALSE  !(revert)
[L3430]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3401]              assume msgsender_MSG != null;
[L3402]              Balance[this] := 0;
[L3403]              _name_ERC20Detailed[this] := -1774930639;
[L3404]              _symbol_ERC20Detailed[this] := -1774930639;
[L3405]              _decimals_ERC20Detailed[this] := 0;
[L3407]              _name_ERC20Detailed[this] := name_s652;
[L3408]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3409]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3430]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3431]  COND FALSE  !(revert)
[L3582]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3583]  COND FALSE  !(revert)
[L3586]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3515]              assume msgsender_MSG != null;
[L3516]              Balance[this] := 0;
[L3517]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3518]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3520]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3521]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3522]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              quantity_DplatformToken[this] := 0;
[L3525]              balances_DplatformToken[this] := zeroRefintArr();
[L3526]              sum_balances2[this] := 0;
[L3527]              owner_DplatformToken[this] := null;
[L3528]              startTime_DplatformToken[this] := 0;
[L3529]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3530]              sum_monthsTimestamp3[this] := 0;
[L3531]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3532]              fibseries_DplatformToken[this] := zerointintArr();
[L3533]              sum_fibseries4[this] := 0;
[L3534]              operatingTime_DplatformToken[this] := 0;
[L3536]  COND TRUE   DType[this] == DplatformToken
[L3537]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3264]              __var_10 := null;
[L3265]  COND FALSE  !(!(account_s537 != null))
[L3269]  CALL        call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3269]  RET         call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L3270]  COND FALSE  !(revert)
[L3273]              _totalSupply_ERC20[this] := __var_11;
[L3274]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3274]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L3275]  COND FALSE  !(revert)
[L3278]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s537];
[L3279]              _balances_ERC20[this][account_s537] := __var_12;
[L3280]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s537];
[L3281]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3537]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3538]  COND FALSE  !(revert)
[L3544]              owner_DplatformToken[this] := msgsender_MSG;
[L3545]              sum_balances2[this] := sum_balances2[this] - balances_DplatformToken[this][owner_DplatformToken[this]];
[L3546]              balances_DplatformToken[this][owner_DplatformToken[this]] := totalDPOM_DplatformToken[this];
[L3547]              sum_balances2[this] := sum_balances2[this] + balances_DplatformToken[this][owner_DplatformToken[this]];
[L3548]              quantity_DplatformToken[this] := 0;
[L3549]              startTime_DplatformToken[this] := 1556647200;
[L3586]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3587]  COND FALSE  !(revert)
[L1598]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1599]              assume !revert && gas >= 0;
[L5428]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5429]              assume !revert && gas >= 0;
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND FALSE  !(choice == 15)
[L5326]  COND FALSE  !(choice == 14)
[L5333]  COND TRUE   choice == 13
[L5334]              gas := gas - 21000;
[L5335]  COND TRUE   gas >= 0
[L5336]              assume value_s351 >= 0 && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5337]              assume msgvalue_MSG == 0;
[L5338]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s351 == to_s351 && (value_s351 > _balances_ERC20[this][from_s351] || value_s351 > _allowed_ERC20[this][from_s351][msgsender_MSG])) && value_s351 >= 0) && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s351] >= 0) && _balances_ERC20[this][to_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s351] >= 0) && _balances_ERC20[this][from_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s351][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s351][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L837]               havoc __exception;
[L838]               revert := false;
[L839]   COND FALSE  !(__exception)
[L879]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3075]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L2837]  COND FALSE  !(!(b_s149 <= a_s149))
[L2841]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2842]              __ret_0_ := c_s149;
[L3075]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L3076]  COND FALSE  !(revert)
[L3079]              sum__allowed1[from_s351] := sum__allowed1[from_s351] - _allowed_ERC20[this][from_s351][msgsender_MSG];
[L3080]              _allowed_ERC20[this][from_s351][msgsender_MSG] := __var_2;
[L3081]              sum__allowed1[from_s351] := sum__allowed1[from_s351] + _allowed_ERC20[this][from_s351][msgsender_MSG];
[L3082]  COND TRUE   DType[this] == DplatformToken
[L3083]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3213]              __var_7 := null;
[L3214]  COND FALSE  !(!(to_s495 != null))
[L3218]  CALL        call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s495], value_s495);
[L2837]  COND FALSE  !(!(b_s149 <= a_s149))
[L2841]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2842]              __ret_0_ := c_s149;
[L3218]  RET         call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s495], value_s495);
[L3219]  COND FALSE  !(revert)
[L3222]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s495];
[L3223]              _balances_ERC20[this][from_s495] := __var_8;
[L3224]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s495];
[L3225]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s495], value_s495);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3225]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s495], value_s495);
[L3226]  COND FALSE  !(revert)
[L3229]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s495];
[L3230]              _balances_ERC20[this][to_s495] := __var_9;
[L3231]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s495];
[L3232]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3083]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3084]  COND FALSE  !(revert)
[L3095]              assert { :EventEmitted "Approval_ERC20" } true;
[L3096]              __ret_0_ := true;
[L879]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L880]               assume !revert && gas >= 0;
[L5338]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L5432]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND FALSE  !(choice == 15)
[L5326]  COND FALSE  !(choice == 14)
[L5333]  COND TRUE   choice == 13
[L5334]              gas := gas - 21000;
[L5335]  COND TRUE   gas >= 0
[L5336]              assume value_s351 >= 0 && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5337]              assume msgvalue_MSG == 0;
[L5338]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s351 == to_s351 && (value_s351 > _balances_ERC20[this][from_s351] || value_s351 > _allowed_ERC20[this][from_s351][msgsender_MSG])) && value_s351 >= 0) && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s351] >= 0) && _balances_ERC20[this][to_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s351] >= 0) && _balances_ERC20[this][from_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s351][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s351][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L837]               havoc __exception;
[L838]               revert := false;
[L839]   COND FALSE  !(__exception)
[L879]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3075]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L2837]  COND FALSE  !(!(b_s149 <= a_s149))
[L2841]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2842]              __ret_0_ := c_s149;
[L3075]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L3076]  COND FALSE  !(revert)
[L3079]              sum__allowed1[from_s351] := sum__allowed1[from_s351] - _allowed_ERC20[this][from_s351][msgsender_MSG];
[L3080]              _allowed_ERC20[this][from_s351][msgsender_MSG] := __var_2;
[L3081]              sum__allowed1[from_s351] := sum__allowed1[from_s351] + _allowed_ERC20[this][from_s351][msgsender_MSG];
[L3082]  COND TRUE   DType[this] == DplatformToken
[L3083]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3213]              __var_7 := null;
[L3214]  COND FALSE  !(!(to_s495 != null))
[L3218]  CALL        call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s495], value_s495);
[L2837]  COND FALSE  !(!(b_s149 <= a_s149))
[L2841]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2842]              __ret_0_ := c_s149;
[L3218]  RET         call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s495], value_s495);
[L3219]  COND FALSE  !(revert)
[L3222]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s495];
[L3223]              _balances_ERC20[this][from_s495] := __var_8;
[L3224]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s495];
[L3225]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s495], value_s495);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3225]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s495], value_s495);
[L3226]  COND FALSE  !(revert)
[L3229]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s495];
[L3230]              _balances_ERC20[this][to_s495] := __var_9;
[L3231]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s495];
[L3232]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3083]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3084]  COND FALSE  !(revert)
[L3095]              assert { :EventEmitted "Approval_ERC20" } true;
[L3096]              __ret_0_ := true;
[L879]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L880]               assume !revert && gas >= 0;
[L5338]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L5432]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:23:51,031 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:23:51,031 INFO  L82        PathProgramCache]: Analyzing trace with hash -1251252161, now seen corresponding path program 1 times
[2020-11-25 14:23:51,032 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:23:51,054 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:23:51,191 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 4 refuted. 0 times theorem prover too weak. 36 trivial. 0 not checked.
[2020-11-25 14:23:51,191 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 14:23:51,192 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [13] total 13
[2020-11-25 14:23:51,192 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:23:51,192 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 14:23:51,192 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=26, Invalid=156, Unknown=0, NotChecked=0, Total=182
[2020-11-25 14:23:51,192 INFO  L87              Difference]: Start difference. First operand 3135 states and 3450 transitions. cyclomatic complexity: 325 Second operand 14 states.
[2020-11-25 14:23:52,926 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:23:52,926 INFO  L93              Difference]: Finished difference Result 3238 states and 3565 transitions.
[2020-11-25 14:23:52,927 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-25 14:23:52,927 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3238 states and 3565 transitions.
[2020-11-25 14:23:52,934 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:23:52,943 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3238 states to 3238 states and 3565 transitions.
[2020-11-25 14:23:52,943 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 859
[2020-11-25 14:23:52,944 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 859
[2020-11-25 14:23:52,944 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3238 states and 3565 transitions.
[2020-11-25 14:23:52,947 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:23:52,947 INFO  L728         BuchiCegarLoop]: Abstraction has 3238 states and 3565 transitions.
[2020-11-25 14:23:52,949 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3238 states and 3565 transitions.
[2020-11-25 14:23:52,972 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3238 to 3048.
[2020-11-25 14:23:52,972 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3048 states.
[2020-11-25 14:23:52,975 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3048 states to 3048 states and 3336 transitions.
[2020-11-25 14:23:52,975 INFO  L751         BuchiCegarLoop]: Abstraction has 3048 states and 3336 transitions.
[2020-11-25 14:23:52,975 INFO  L631         BuchiCegarLoop]: Abstraction has 3048 states and 3336 transitions.
[2020-11-25 14:23:52,975 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 14:23:52,975 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3048 states and 3336 transitions.
[2020-11-25 14:23:52,978 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:23:52,978 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:23:52,978 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:23:52,981 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:23:52,981 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L5422]              assume null == 0;
[L5423]  CALL        call this := FreshRefGenerator__success();
[L2696]              havoc newRef;
[L2697]              assume Alloc[newRef] == false;
[L2698]              Alloc[newRef] := true;
[L2699]              assume newRef != null;
[L5423]  RET         call this := FreshRefGenerator__success();
[L5424]              assume now >= 0;
[L5425]              assume DType[this] == DplatformToken;
[L5426]              assume msgvalue_MSG == 0;
[L5427]              gas := gas - 53000;
[L5428]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1556]              havoc __exception;
[L1557]              revert := false;
[L1558]  COND FALSE  !(__exception)
[L1598]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3574]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3574]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  COND FALSE  !(revert)
[L3578]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2930]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L2930]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  COND FALSE  !(revert)
[L2934]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2906]              assume msgsender_MSG != null;
[L2907]              Balance[this] := 0;
[L2908]              _balances_ERC20[this] := zeroRefintArr();
[L2909]              sum__balances0[this] := 0;
[L2910]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2911]              sum__allowed1[this] := 0;
[L2912]              _totalSupply_ERC20[this] := 0;
[L2934]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2935]  COND FALSE  !(revert)
[L3578]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3579]  COND FALSE  !(revert)
[L3582]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3426]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3426]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3427]  COND FALSE  !(revert)
[L3430]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3401]              assume msgsender_MSG != null;
[L3402]              Balance[this] := 0;
[L3403]              _name_ERC20Detailed[this] := -1774930639;
[L3404]              _symbol_ERC20Detailed[this] := -1774930639;
[L3405]              _decimals_ERC20Detailed[this] := 0;
[L3407]              _name_ERC20Detailed[this] := name_s652;
[L3408]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3409]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3430]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3431]  COND FALSE  !(revert)
[L3582]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3583]  COND FALSE  !(revert)
[L3586]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3515]              assume msgsender_MSG != null;
[L3516]              Balance[this] := 0;
[L3517]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3518]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3520]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3521]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3522]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              quantity_DplatformToken[this] := 0;
[L3525]              balances_DplatformToken[this] := zeroRefintArr();
[L3526]              sum_balances2[this] := 0;
[L3527]              owner_DplatformToken[this] := null;
[L3528]              startTime_DplatformToken[this] := 0;
[L3529]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3530]              sum_monthsTimestamp3[this] := 0;
[L3531]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3532]              fibseries_DplatformToken[this] := zerointintArr();
[L3533]              sum_fibseries4[this] := 0;
[L3534]              operatingTime_DplatformToken[this] := 0;
[L3536]  COND TRUE   DType[this] == DplatformToken
[L3537]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3264]              __var_10 := null;
[L3265]  COND FALSE  !(!(account_s537 != null))
[L3269]  CALL        call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3269]  RET         call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L3270]  COND FALSE  !(revert)
[L3273]              _totalSupply_ERC20[this] := __var_11;
[L3274]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3274]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L3275]  COND FALSE  !(revert)
[L3278]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s537];
[L3279]              _balances_ERC20[this][account_s537] := __var_12;
[L3280]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s537];
[L3281]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3537]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3538]  COND FALSE  !(revert)
[L3544]              owner_DplatformToken[this] := msgsender_MSG;
[L3545]              sum_balances2[this] := sum_balances2[this] - balances_DplatformToken[this][owner_DplatformToken[this]];
[L3546]              balances_DplatformToken[this][owner_DplatformToken[this]] := totalDPOM_DplatformToken[this];
[L3547]              sum_balances2[this] := sum_balances2[this] + balances_DplatformToken[this][owner_DplatformToken[this]];
[L3548]              quantity_DplatformToken[this] := 0;
[L3549]              startTime_DplatformToken[this] := 1556647200;
[L3586]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3587]  COND FALSE  !(revert)
[L1598]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1599]              assume !revert && gas >= 0;
[L5428]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5429]              assume !revert && gas >= 0;
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND FALSE  !(choice == 15)
[L5326]  COND TRUE   choice == 14
[L5327]              gas := gas - 21000;
[L5328]  COND TRUE   gas >= 0
[L5329]              assume value_s302 >= 0 && value_s302 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5330]              assume msgvalue_MSG == 0;
[L5331]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L745]               havoc __exception;
[L746]               revert := false;
[L747]   COND FALSE  !(__exception)
[L787]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L3032]              __var_1 := null;
[L3033]  COND FALSE  !(!(spender_s302 != null))
[L3037]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] - _allowed_ERC20[this][msgsender_MSG][spender_s302];
[L3038]              _allowed_ERC20[this][msgsender_MSG][spender_s302] := value_s302;
[L3039]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] + _allowed_ERC20[this][msgsender_MSG][spender_s302];
[L3040]              assert { :EventEmitted "Approval_ERC20" } true;
[L3041]              __ret_0_ := true;
[L787]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L788]               assume !revert && gas >= 0;
[L5331]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s302, value_s302);
[L5432]  RET         call CorralChoice_DplatformToken(this);
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND FALSE  !(choice == 15)
[L5326]  COND FALSE  !(choice == 14)
[L5333]  COND TRUE   choice == 13
[L5334]              gas := gas - 21000;
[L5335]  COND TRUE   gas >= 0
[L5336]              assume value_s351 >= 0 && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5337]              assume msgvalue_MSG == 0;
[L5338]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s351 == to_s351 && (value_s351 > _balances_ERC20[this][from_s351] || value_s351 > _allowed_ERC20[this][from_s351][msgsender_MSG])) && value_s351 >= 0) && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s351] >= 0) && _balances_ERC20[this][to_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s351] >= 0) && _balances_ERC20[this][from_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s351][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s351][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L837]               havoc __exception;
[L838]               revert := false;
[L839]   COND FALSE  !(__exception)
[L879]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3075]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L2837]  COND FALSE  !(!(b_s149 <= a_s149))
[L2841]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2842]              __ret_0_ := c_s149;
[L3075]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L3076]  COND FALSE  !(revert)
[L3079]              sum__allowed1[from_s351] := sum__allowed1[from_s351] - _allowed_ERC20[this][from_s351][msgsender_MSG];
[L3080]              _allowed_ERC20[this][from_s351][msgsender_MSG] := __var_2;
[L3081]              sum__allowed1[from_s351] := sum__allowed1[from_s351] + _allowed_ERC20[this][from_s351][msgsender_MSG];
[L3082]  COND TRUE   DType[this] == DplatformToken
[L3083]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3213]              __var_7 := null;
[L3214]  COND FALSE  !(!(to_s495 != null))
[L3218]  CALL        call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s495], value_s495);
[L2837]  COND FALSE  !(!(b_s149 <= a_s149))
[L2841]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2842]              __ret_0_ := c_s149;
[L3218]  RET         call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s495], value_s495);
[L3219]  COND FALSE  !(revert)
[L3222]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s495];
[L3223]              _balances_ERC20[this][from_s495] := __var_8;
[L3224]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s495];
[L3225]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s495], value_s495);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3225]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s495], value_s495);
[L3226]  COND FALSE  !(revert)
[L3229]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s495];
[L3230]              _balances_ERC20[this][to_s495] := __var_9;
[L3231]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s495];
[L3232]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3083]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3084]  COND FALSE  !(revert)
[L3095]              assert { :EventEmitted "Approval_ERC20" } true;
[L3096]              __ret_0_ := true;
[L879]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L880]               assume !revert && gas >= 0;
[L5338]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L5432]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND TRUE   choice == 15
[L5320]              gas := gas - 21000;
[L5321]  COND FALSE  !(gas >= 0)
[L5432]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:23:52,985 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:23:52,985 INFO  L82        PathProgramCache]: Analyzing trace with hash 406335014, now seen corresponding path program 1 times
[2020-11-25 14:23:52,986 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:23:53,005 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:23:53,108 INFO  L134       CoverageAnalysis]: Checked inductivity of 92 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 92 trivial. 0 not checked.
[2020-11-25 14:23:53,108 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:23:53,108 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-25 14:23:53,109 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:23:53,109 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 11 interpolants.
[2020-11-25 14:23:53,109 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=26, Invalid=84, Unknown=0, NotChecked=0, Total=110
[2020-11-25 14:23:53,109 INFO  L87              Difference]: Start difference. First operand 3048 states and 3336 transitions. cyclomatic complexity: 299 Second operand 11 states.
[2020-11-25 14:23:53,883 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:23:53,883 INFO  L93              Difference]: Finished difference Result 1886 states and 2072 transitions.
[2020-11-25 14:23:53,883 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 11 states. 
[2020-11-25 14:23:53,883 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1886 states and 2072 transitions.
[2020-11-25 14:23:53,886 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 14:23:53,887 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1886 states to 0 states and 0 transitions.
[2020-11-25 14:23:53,887 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 14:23:53,887 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 14:23:53,887 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 14:23:53,887 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:23:53,887 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 14:23:53,887 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 14:23:53,887 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 14:23:53,887 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 14:23:53,887 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 14:23:53,887 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 14:23:53,887 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 14:23:53,890 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:23:53 BasicIcfg
[2020-11-25 14:23:53,890 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 14:23:53,891 INFO  L168              Benchmark]: Toolchain (without parser) took 6720.33 ms. Allocated memory was 1.0 GB in the beginning and 1.9 GB in the end (delta: 906.5 MB). Free memory was 940.6 MB in the beginning and 1.6 GB in the end (delta: -685.5 MB). Peak memory consumption was 221.0 MB. Max. memory is 15.3 GB.
[2020-11-25 14:23:53,892 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.21 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 14:23:53,892 INFO  L168              Benchmark]: Boogie Preprocessor took 109.22 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 924.5 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 14:23:53,893 INFO  L168              Benchmark]: UtopiaSpecLang took 58.26 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 14:23:53,893 INFO  L168              Benchmark]: Boogie Printer took 16.86 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 14:23:53,893 INFO  L168              Benchmark]: RCFGBuilder took 806.37 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 779.4 MB in the end (delta: 129.0 MB). Peak memory consumption was 129.0 MB. Max. memory is 15.3 GB.
[2020-11-25 14:23:53,893 INFO  L168              Benchmark]: UtopiaLTL2Aut took 44.43 ms. Allocated memory is still 1.0 GB. Free memory was 779.4 MB in the beginning and 770.4 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 14:23:53,894 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1494.27 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 189.8 MB). Free memory was 770.4 MB in the beginning and 809.5 MB in the end (delta: -39.0 MB). Peak memory consumption was 150.8 MB. Max. memory is 15.3 GB.
[2020-11-25 14:23:53,894 INFO  L168              Benchmark]: BlockEncodingV2 took 165.91 ms. Allocated memory is still 1.2 GB. Free memory was 809.5 MB in the beginning and 740.4 MB in the end (delta: 69.0 MB). Peak memory consumption was 69.0 MB. Max. memory is 15.3 GB.
[2020-11-25 14:23:53,894 INFO  L168              Benchmark]: BuchiAutomizer took 4021.97 ms. Allocated memory was 1.2 GB in the beginning and 1.9 GB in the end (delta: 716.7 MB). Free memory was 740.4 MB in the beginning and 1.6 GB in the end (delta: -885.6 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 14:23:53,897 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4576 locations, 7941 edges
  - StatisticsResult: Encoded RCFG
    4470 locations, 7681 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.21 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 109.22 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 924.5 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 58.26 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.86 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 806.37 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 779.4 MB in the end (delta: 129.0 MB). Peak memory consumption was 129.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 44.43 ms. Allocated memory is still 1.0 GB. Free memory was 779.4 MB in the beginning and 770.4 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1494.27 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 189.8 MB). Free memory was 770.4 MB in the beginning and 809.5 MB in the end (delta: -39.0 MB). Peak memory consumption was 150.8 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 165.91 ms. Allocated memory is still 1.2 GB. Free memory was 809.5 MB in the beginning and 740.4 MB in the end (delta: 69.0 MB). Peak memory consumption was 69.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 4021.97 ms. Allocated memory was 1.2 GB in the beginning and 1.9 GB in the end (delta: 716.7 MB). Free memory was 740.4 MB in the beginning and 1.6 GB in the end (delta: -885.6 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1958 locations, 2475 edges
  - StatisticsResult: BuchiProgram size
    4576 locations, 7941 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 14 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 3.9s and 5 iterations.  TraceHistogramMax:3. Analysis of lassos took 0.4s. Construction of modules took 2.0s. BÃ¼chi inclusion checks took 1.1s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 488 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 3135 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 11813 SDtfs, 8420 SDslu, 15725 SDs, 0 SdLazy, 37519 SolverSat, 2035 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.0s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_ERC200) ==> ( <>(fail_transferFrom_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
