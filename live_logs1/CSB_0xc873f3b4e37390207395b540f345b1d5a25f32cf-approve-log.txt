This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 12:50:43,595 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 12:50:43,596 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 12:50:43,606 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 12:50:43,607 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 12:50:43,607 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 12:50:43,608 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 12:50:43,610 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 12:50:43,611 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 12:50:43,612 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 12:50:43,612 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 12:50:43,613 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 12:50:43,614 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 12:50:43,615 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 12:50:43,616 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 12:50:43,617 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 12:50:43,618 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 12:50:43,620 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 12:50:43,622 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 12:50:43,624 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 12:50:43,624 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 12:50:43,625 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 12:50:43,627 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 12:50:43,627 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 12:50:43,627 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 12:50:43,627 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 12:50:43,628 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 12:50:43,628 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 12:50:43,628 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 12:50:43,629 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 12:50:43,629 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 12:50:43,630 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 12:50:43,630 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 12:50:43,630 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 12:50:43,631 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 12:50:43,631 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 12:50:43,632 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 12:50:43,632 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 12:50:43,632 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 12:50:43,633 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 12:50:43,633 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 12:50:43,633 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 12:50:43,641 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 12:50:43,641 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 12:50:43,642 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 12:50:43,642 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 12:50:43,642 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 12:50:43,642 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 12:50:43,642 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 12:50:43,643 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 12:50:43,643 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 12:50:43,643 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 12:50:43,643 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 12:50:43,643 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 12:50:43,643 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 12:50:43,643 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 12:50:43,644 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 12:50:43,644 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 12:50:43,644 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 12:50:43,644 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 12:50:43,644 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 12:50:43,644 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 12:50:43,644 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 12:50:43,644 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 12:50:43,644 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 12:50:43,645 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 12:50:43,645 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 12:50:43,645 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 12:50:43,669 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 12:50:43,682 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 12:50:43,684 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 12:50:43,685 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 12:50:43,686 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 12:50:43,686 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl
[2020-11-25 12:50:43,686 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl'
[2020-11-25 12:50:43,751 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 12:50:43,752 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 12:50:43,752 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 12:50:43,752 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 12:50:43,752 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 12:50:43,770 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:43" (1/1) ...
[2020-11-25 12:50:43,771 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:43" (1/1) ...
[2020-11-25 12:50:43,793 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:43" (1/1) ...
[2020-11-25 12:50:43,794 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:43" (1/1) ...
[2020-11-25 12:50:43,809 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:43" (1/1) ...
[2020-11-25 12:50:43,816 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:43" (1/1) ...
[2020-11-25 12:50:43,821 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:43" (1/1) ...
[2020-11-25 12:50:43,827 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 12:50:43,827 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 12:50:43,827 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 12:50:43,829 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 12:50:43,833 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:43" (1/1) ...
[2020-11-25 12:50:43,846 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(CSB.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(CSB.approve(spender, value), return == true && allowed_CSB[this][msg.sender][spender] == value &&  totalSupply_CSBInterface[this] == old(totalSupply_CSBInterface[this]) && balances_CSB[this] == old(balances_CSB[this]) && allowed_CSB[this][p1][p2] == old(allowed_CSB[this][p1][p2]) && name_CSB[this] == old(name_CSB[this]) && decimals_CSB[this] == old(decimals_CSB[this]) && symbol_CSB[this] == old(symbol_CSB[this]))))
[2020-11-25 12:50:43,851 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(CSB.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(CSB.approve(spender, value), return == true && allowed_CSB[this][msg.sender][spender] == value &&  totalSupply_CSBInterface[this] == old(totalSupply_CSBInterface[this]) && balances_CSB[this] == old(balances_CSB[this]) && allowed_CSB[this][p1][p2] == old(allowed_CSB[this][p1][p2]) && name_CSB[this] == old(name_CSB[this]) && decimals_CSB[this] == old(decimals_CSB[this]) && symbol_CSB[this] == old(symbol_CSB[this]))))
[2020-11-25 12:50:43,858 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(CSB.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(CSB.approve(spender, value), return == true && allowed_CSB[this][msg.sender][spender] == value &&  totalSupply_CSBInterface[this] == old(totalSupply_CSBInterface[this]) && balances_CSB[this] == old(balances_CSB[this]) && allowed_CSB[this][p1][p2] == old(allowed_CSB[this][p1][p2]) && name_CSB[this] == old(name_CSB[this]) && decimals_CSB[this] == old(decimals_CSB[this]) && symbol_CSB[this] == old(symbol_CSB[this]))))
[2020-11-25 12:50:43,863 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=_spender_s279 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_CSB>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_spender_s279,<IMPLEMENTATION_INPARAM,approve~address~uint256_CSB>]]]
[2020-11-25 12:50:43,865 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( success_s279==true && allowed_CSB[this][msg.sender][_spender_s279]==_value_s279 ) && totalSupply_CSBInterface[this]==( old(totalSupply_CSBInterface[this]) ) ) && balances_CSB[this]==( old(balances_CSB[this]) ) ) && allowed_CSB[this][p1][p2]==( old(allowed_CSB[this][p1][p2]) ) ) && name_CSB[this]==( old(name_CSB[this]) ) ) && decimals_CSB[this]==( old(decimals_CSB[this]) ) ) && symbol_CSB[this]==( old(symbol_CSB[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s279,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_CSB>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CSB>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_CSB>]]],[IdentifierExpression[_spender_s279,<IMPLEMENTATION_INPARAM,approve~address~uint256_CSB>]]],IdentifierExpression[_value_s279,<IMPLEMENTATION_INPARAM,approve~address~uint256_CSB>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_CSBInterface,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CSB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_CSBInterface,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CSB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CSB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CSB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CSB>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CSB>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CSB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CSB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CSB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CSB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CSB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CSB>]]]]]]
[2020-11-25 12:50:43,869 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(CSB.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(CSB.approve(spender, value), return == true && allowed_CSB[this][msg.sender][spender] == value &&  totalSupply_CSBInterface[this] == old(totalSupply_CSBInterface[this]) && balances_CSB[this] == old(balances_CSB[this]) && allowed_CSB[this][p1][p2] == old(allowed_CSB[this][p1][p2]) && name_CSB[this] == old(name_CSB[this]) && decimals_CSB[this] == old(decimals_CSB[this]) && symbol_CSB[this] == old(symbol_CSB[this]))))
[2020-11-25 12:50:43,869 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_CSB0) ==> ( <>AP(success_approve_CSB0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 12:50:43,875 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:50:43 PropertyContainer
[2020-11-25 12:50:43,875 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 12:50:43,875 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 12:50:43,875 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 12:50:43,875 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 12:50:43,876 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:43" (1/2) ...
[2020-11-25 12:50:43,876 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 12:50:43,876 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 12:50:43,885 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:50:43" (2/2) ...
[2020-11-25 12:50:43,885 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 12:50:43,885 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 12:50:43,886 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 12:50:43,886 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 12:50:43,886 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:43" (1/2) ...
[2020-11-25 12:50:43,938 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 12:50:43,938 INFO  L130     BoogieDeclarations]: Found specification of procedure CSBInterface_CSBInterface_NoBaseCtor__success
[2020-11-25 12:50:43,938 INFO  L130     BoogieDeclarations]: Found specification of procedure CSBInterface_CSBInterface
[2020-11-25 12:50:43,938 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSBInterface_CSBInterface
[2020-11-25 12:50:43,938 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CSBInterface
[2020-11-25 12:50:43,939 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CSBInterface
[2020-11-25 12:50:43,939 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CSBInterface
[2020-11-25 12:50:43,939 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CSBInterface
[2020-11-25 12:50:43,939 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CSBInterface
[2020-11-25 12:50:43,939 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CSBInterface
[2020-11-25 12:50:43,939 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CSBInterface
[2020-11-25 12:50:43,939 INFO  L130     BoogieDeclarations]: Found specification of procedure CSB_CSB_NoBaseCtor__success
[2020-11-25 12:50:43,939 INFO  L130     BoogieDeclarations]: Found specification of procedure CSB_CSB
[2020-11-25 12:50:43,939 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSB_CSB
[2020-11-25 12:50:43,939 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CSB
[2020-11-25 12:50:43,939 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CSB
[2020-11-25 12:50:43,940 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CSB
[2020-11-25 12:50:43,940 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CSB
[2020-11-25 12:50:43,941 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CSB
[2020-11-25 12:50:43,941 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CSB
[2020-11-25 12:50:43,941 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CSB
[2020-11-25 12:50:43,941 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CSB
[2020-11-25 12:50:43,941 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CSB
[2020-11-25 12:50:43,942 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CSB
[2020-11-25 12:50:43,942 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_CSB
[2020-11-25 12:50:43,942 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_CSB
[2020-11-25 12:50:43,942 INFO  L130     BoogieDeclarations]: Found specification of procedure allowed~address~address_CSB
[2020-11-25 12:50:43,942 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowed~address~address_CSB
[2020-11-25 12:50:43,943 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CSB
[2020-11-25 12:50:43,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CSB
[2020-11-25 12:50:43,943 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CSB
[2020-11-25 12:50:43,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CSB
[2020-11-25 12:50:43,943 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CSB
[2020-11-25 12:50:43,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CSB
[2020-11-25 12:50:43,944 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 12:50:43,944 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 12:50:43,944 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 12:50:43,944 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_CSBInterface
[2020-11-25 12:50:43,945 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_CSBInterface
[2020-11-25 12:50:43,945 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_CSB
[2020-11-25 12:50:43,945 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 12:50:43,945 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 12:50:43,945 INFO  L130     BoogieDeclarations]: Found specification of procedure CSBInterface_CSBInterface_NoBaseCtor__fail
[2020-11-25 12:50:43,945 INFO  L130     BoogieDeclarations]: Found specification of procedure CSBInterface_CSBInterface__success
[2020-11-25 12:50:43,946 INFO  L130     BoogieDeclarations]: Found specification of procedure CSBInterface_CSBInterface__fail
[2020-11-25 12:50:43,946 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CSBInterface__success
[2020-11-25 12:50:43,946 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CSBInterface__fail
[2020-11-25 12:50:43,946 INFO  L130     BoogieDeclarations]: Found specification of procedure CSB_CSB_NoBaseCtor__fail
[2020-11-25 12:50:43,946 INFO  L130     BoogieDeclarations]: Found specification of procedure CSB_CSB__success
[2020-11-25 12:50:43,947 INFO  L130     BoogieDeclarations]: Found specification of procedure CSB_CSB__fail
[2020-11-25 12:50:43,947 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CSB__success
[2020-11-25 12:50:43,947 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CSB__fail
[2020-11-25 12:50:43,947 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CSB__success
[2020-11-25 12:50:43,947 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CSB__fail
[2020-11-25 12:50:43,947 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CSB__success
[2020-11-25 12:50:43,948 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CSB__fail
[2020-11-25 12:50:43,948 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CSB__success
[2020-11-25 12:50:43,948 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CSB__fail
[2020-11-25 12:50:43,948 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CSB__success
[2020-11-25 12:50:43,948 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CSB__fail
[2020-11-25 12:50:43,949 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_CSB__success
[2020-11-25 12:50:43,949 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_CSB__fail
[2020-11-25 12:50:43,949 INFO  L130     BoogieDeclarations]: Found specification of procedure allowed~address~address_CSB__success
[2020-11-25 12:50:43,949 INFO  L130     BoogieDeclarations]: Found specification of procedure allowed~address~address_CSB__fail
[2020-11-25 12:50:43,949 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CSB__success
[2020-11-25 12:50:43,950 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CSB__fail
[2020-11-25 12:50:43,950 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CSB__success
[2020-11-25 12:50:43,950 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CSB__fail
[2020-11-25 12:50:43,950 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CSB__success
[2020-11-25 12:50:43,950 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CSB__fail
[2020-11-25 12:50:43,951 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 12:50:43,951 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 12:50:43,951 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 12:50:43,951 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 12:50:43,951 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 12:50:43,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSBInterface_CSBInterface_NoBaseCtor__fail
[2020-11-25 12:50:43,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSBInterface_CSBInterface_NoBaseCtor__success
[2020-11-25 12:50:43,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSBInterface_CSBInterface__fail
[2020-11-25 12:50:43,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSBInterface_CSBInterface__success
[2020-11-25 12:50:43,953 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CSBInterface__fail
[2020-11-25 12:50:43,953 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CSBInterface__success
[2020-11-25 12:50:43,953 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSB_CSB_NoBaseCtor__fail
[2020-11-25 12:50:43,953 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSB_CSB_NoBaseCtor__success
[2020-11-25 12:50:43,953 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSB_CSB__fail
[2020-11-25 12:50:43,954 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSB_CSB__success
[2020-11-25 12:50:43,954 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CSB__fail
[2020-11-25 12:50:43,954 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CSB__success
[2020-11-25 12:50:43,954 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CSB__fail
[2020-11-25 12:50:43,954 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CSB__success
[2020-11-25 12:50:43,955 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CSB__fail
[2020-11-25 12:50:43,955 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CSB__success
[2020-11-25 12:50:43,955 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CSB__fail
[2020-11-25 12:50:43,955 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CSB__success
[2020-11-25 12:50:43,955 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CSB__fail
[2020-11-25 12:50:43,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CSB__success
[2020-11-25 12:50:43,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_CSB__fail
[2020-11-25 12:50:43,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_CSB__success
[2020-11-25 12:50:43,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowed~address~address_CSB__fail
[2020-11-25 12:50:43,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowed~address~address_CSB__success
[2020-11-25 12:50:43,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CSB__fail
[2020-11-25 12:50:43,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CSB__success
[2020-11-25 12:50:43,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CSB__fail
[2020-11-25 12:50:43,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CSB__success
[2020-11-25 12:50:43,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CSB__fail
[2020-11-25 12:50:43,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CSB__success
[2020-11-25 12:50:43,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 12:50:43,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 12:50:43,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 12:50:43,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 12:50:43,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 12:50:43,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 12:50:43,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_CSBInterface
[2020-11-25 12:50:43,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_CSBInterface
[2020-11-25 12:50:43,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_CSB
[2020-11-25 12:50:43,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 12:50:43,957 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 12:50:43,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 12:50:44,099 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:50:44,298 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:50:44,299 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:50:44,299 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:50:44,399 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 12:50:44,399 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 12:50:44,401 INFO  L202        PluginConnector]: Adding new model CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:50:44 BoogieIcfgContainer
[2020-11-25 12:50:44,401 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:50:43" (2/2) ...
[2020-11-25 12:50:44,401 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 12:50:44,401 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@1ab4eee3 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:50:44, skipping insertion in model container
[2020-11-25 12:50:44,402 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 12:50:44,402 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 12:50:44,402 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 12:50:44,403 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 12:50:44,403 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:43" (1/3) ...
[2020-11-25 12:50:44,404 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@22422012 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:50:44, skipping insertion in model container
[2020-11-25 12:50:44,404 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:50:43" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 12:50:44,446 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:50:44 NWAContainer
[2020-11-25 12:50:44,447 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 12:50:44,447 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 12:50:44,447 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 12:50:44,448 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 12:50:44,448 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:50:44" (3/4) ...
[2020-11-25 12:50:44,449 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@383a2ec and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:50:44, skipping insertion in model container
[2020-11-25 12:50:44,449 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:50:44" (4/4) ...
[2020-11-25 12:50:44,452 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 12:50:44,455 INFO  L110   BuchiProductObserver]: Initial RCFG 792 locations, 954 edges
[2020-11-25 12:50:44,456 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 12:50:44,465 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 12:50:45,382 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 12:50:45,385 INFO  L110   BuchiProductObserver]: BuchiProgram size 1832 locations, 3064 edges
[2020-11-25 12:50:45,385 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:50:45 BoogieIcfgContainer
[2020-11-25 12:50:45,385 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 12:50:45,385 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 12:50:45,385 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 12:50:45,387 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 12:50:45,387 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:50:45" (1/1) ...
[2020-11-25 12:50:45,430 INFO  L313           BlockEncoder]: Initial Icfg 1832 locations, 3064 edges
[2020-11-25 12:50:45,430 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 12:50:45,431 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 12:50:45,431 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 12:50:45,431 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 12:50:45,438 INFO  L70    emoveInfeasibleEdges]: Removed 27 edges and 7 locations because of local infeasibility
[2020-11-25 12:50:45,442 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 12:50:45,448 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 12:50:45,450 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 12:50:45,451 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 12:50:45,452 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 12:50:45,454 INFO  L313           BlockEncoder]: Encoded RCFG 1814 locations, 3021 edges
[2020-11-25 12:50:45,454 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:50:45 BasicIcfg
[2020-11-25 12:50:45,454 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 12:50:45,454 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 12:50:45,454 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 12:50:45,456 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 12:50:45,457 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:50:45,457 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:43" (1/6) ...
[2020-11-25 12:50:45,458 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3068c4ac and model type CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:50:45, skipping insertion in model container
[2020-11-25 12:50:45,458 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:50:45,458 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:50:43" (2/6) ...
[2020-11-25 12:50:45,459 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3068c4ac and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:50:45, skipping insertion in model container
[2020-11-25 12:50:45,459 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:50:45,459 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:50:44" (3/6) ...
[2020-11-25 12:50:45,459 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3068c4ac and model type CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:50:45, skipping insertion in model container
[2020-11-25 12:50:45,459 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:50:45,459 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:50:44" (4/6) ...
[2020-11-25 12:50:45,459 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3068c4ac and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:50:45, skipping insertion in model container
[2020-11-25 12:50:45,459 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:50:45,459 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:50:45" (5/6) ...
[2020-11-25 12:50:45,459 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3068c4ac and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 12:50:45, skipping insertion in model container
[2020-11-25 12:50:45,459 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:50:45,459 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:50:45" (6/6) ...
[2020-11-25 12:50:45,460 INFO  L404   chiAutomizerObserver]: Analyzing ICFG CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_approve.bpl_BEv2
[2020-11-25 12:50:45,498 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 12:50:45,498 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 12:50:45,498 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 12:50:45,498 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 12:50:45,498 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 12:50:45,499 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 12:50:45,499 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 12:50:45,499 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 12:50:45,499 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 12:50:45,523 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1814 states.
[2020-11-25 12:50:45,565 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:50:45,565 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:50:45,566 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:50:45,575 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:45,575 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:45,575 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 12:50:45,575 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1814 states.
[2020-11-25 12:50:45,587 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:50:45,588 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:50:45,588 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:50:45,590 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:45,590 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_CSB0 := false;
[L3]                 call_approve_CSB0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2203]              assume null == 0;
[L2204]  CALL        call this := FreshRefGenerator__success();
[L1062]              havoc newRef;
[L1063]              assume Alloc[newRef] == false;
[L1064]              Alloc[newRef] := true;
[L1065]              assume newRef != null;
[L2204]  RET         call this := FreshRefGenerator__success();
[L2205]              assume now >= 0;
[L2206]              assume DType[this] == CSB;
[L2207]              assume msgvalue_MSG == 0;
[L2208]              gas := gas - 53000;
[L2209]  CALL        call CSB_CSB(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L204]               havoc __exception;
[L205]               revert := false;
[L206]   COND FALSE  !(__exception)
[L228]   CALL        call CSB_CSB__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1174]  CALL        call CSBInterface_CSBInterface__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  CALL        call CSBInterface_CSBInterface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1080]              assume msgsender_MSG != null;
[L1081]              Balance[this] := 0;
[L1082]              totalSupply_CSBInterface[this] := 0;
[L1096]  RET         call CSBInterface_CSBInterface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1097]  COND FALSE  !(revert)
[L1174]  RET         call CSBInterface_CSBInterface__success(this, msgsender_MSG, msgvalue_MSG);
[L1175]  COND TRUE   revert
[L228]   RET         call CSB_CSB__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L229]               assume !revert && gas >= 0;
[L2209]  RET         call CSB_CSB(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L2210]              assume !revert && gas >= 0;

Loop:
[L2213]  CALL        call CorralChoice_CSB(this);
[L2081]              havoc msgsender_MSG;
[L2082]              havoc msgvalue_MSG;
[L2083]              havoc choice;
[L2084]              havoc __ret_0_totalSupply;
[L2085]              havoc _owner_s251;
[L2086]              havoc balance_s251;
[L2087]              havoc _to_s172;
[L2088]              havoc _value_s172;
[L2089]              havoc success_s172;
[L2090]              havoc _from_s239;
[L2091]              havoc _to_s239;
[L2092]              havoc _value_s239;
[L2093]              havoc success_s239;
[L2094]              havoc _spender_s279;
[L2095]              havoc _value_s279;
[L2096]              havoc success_s279;
[L2097]              havoc _owner_s295;
[L2098]              havoc _spender_s295;
[L2099]              havoc remaining_s295;
[L2100]              havoc arg298_s0;
[L2101]              havoc __ret_0_balances;
[L2102]              havoc arg299_s0;
[L2103]              havoc arg300_s0;
[L2104]              havoc __ret_0_allowed;
[L2105]              havoc __ret_0_name;
[L2106]              havoc __ret_0_decimals;
[L2107]              havoc __ret_0_symbol;
[L2108]              havoc _initialAmount_s131;
[L2109]              havoc _tokenName_s131;
[L2110]              havoc _decimalUnits_s131;
[L2111]              havoc _tokenSymbol_s131;
[L2112]              havoc tmpNow;
[L2113]              havoc gas;
[L2114]              assume gas > 4000000 && gas <= 8000000;
[L2115]              tmpNow := now;
[L2116]              havoc now;
[L2117]              assume now > tmpNow;
[L2118]              assume msgsender_MSG != null;
[L2119]              assume DType[msgsender_MSG] != CSBInterface;
[L2120]              assume DType[msgsender_MSG] != CSB;
[L2121]              Alloc[msgsender_MSG] := true;
[L2122]  COND TRUE   choice == 11
[L2123]              gas := gas - 21000;
[L2124]  COND FALSE  !(gas >= 0)
[L2213]  RET         call CorralChoice_CSB(this);

[2020-11-25 12:50:45,609 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:50:45,610 INFO  L82        PathProgramCache]: Analyzing trace with hash -560196828, now seen corresponding path program 1 times
[2020-11-25 12:50:45,616 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:50:45,642 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:50:45,684 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:50:45,686 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:50:45,686 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:50:45,690 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:50:45,802 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:50:45,803 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:50:45,805 INFO  L87              Difference]: Start difference. First operand 1814 states. Second operand 4 states.
[2020-11-25 12:50:46,030 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:50:46,030 INFO  L93              Difference]: Finished difference Result 1324 states and 1415 transitions.
[2020-11-25 12:50:46,030 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:50:46,032 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1324 states and 1415 transitions.
[2020-11-25 12:50:46,041 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:50:46,055 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1324 states to 1324 states and 1415 transitions.
[2020-11-25 12:50:46,056 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 12:50:46,058 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 594
[2020-11-25 12:50:46,058 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1324 states and 1415 transitions.
[2020-11-25 12:50:46,063 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:50:46,063 INFO  L728         BuchiCegarLoop]: Abstraction has 1324 states and 1415 transitions.
[2020-11-25 12:50:46,080 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1324 states and 1415 transitions.
[2020-11-25 12:50:46,111 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1324 to 1324.
[2020-11-25 12:50:46,112 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1324 states.
[2020-11-25 12:50:46,115 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1324 states to 1324 states and 1415 transitions.
[2020-11-25 12:50:46,116 INFO  L751         BuchiCegarLoop]: Abstraction has 1324 states and 1415 transitions.
[2020-11-25 12:50:46,116 INFO  L631         BuchiCegarLoop]: Abstraction has 1324 states and 1415 transitions.
[2020-11-25 12:50:46,116 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 12:50:46,116 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1324 states and 1415 transitions.
[2020-11-25 12:50:46,122 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:50:46,122 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:50:46,122 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:50:46,124 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:46,124 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_CSB0 := false;
[L3]                 call_approve_CSB0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2203]              assume null == 0;
[L2204]  CALL        call this := FreshRefGenerator__success();
[L1062]              havoc newRef;
[L1063]              assume Alloc[newRef] == false;
[L1064]              Alloc[newRef] := true;
[L1065]              assume newRef != null;
[L2204]  RET         call this := FreshRefGenerator__success();
[L2205]              assume now >= 0;
[L2206]              assume DType[this] == CSB;
[L2207]              assume msgvalue_MSG == 0;
[L2208]              gas := gas - 53000;
[L2209]  CALL        call CSB_CSB(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L204]               havoc __exception;
[L205]               revert := false;
[L206]   COND FALSE  !(__exception)
[L228]   CALL        call CSB_CSB__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1174]  CALL        call CSBInterface_CSBInterface__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  CALL        call CSBInterface_CSBInterface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1080]              assume msgsender_MSG != null;
[L1081]              Balance[this] := 0;
[L1082]              totalSupply_CSBInterface[this] := 0;
[L1096]  RET         call CSBInterface_CSBInterface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1097]  COND FALSE  !(revert)
[L1174]  RET         call CSBInterface_CSBInterface__success(this, msgsender_MSG, msgvalue_MSG);
[L1175]  COND TRUE   revert
[L228]   RET         call CSB_CSB__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L229]               assume !revert && gas >= 0;
[L2209]  RET         call CSB_CSB(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L2210]              assume !revert && gas >= 0;
[L2213]  CALL        call CorralChoice_CSB(this);
[L2081]              havoc msgsender_MSG;
[L2082]              havoc msgvalue_MSG;
[L2083]              havoc choice;
[L2084]              havoc __ret_0_totalSupply;
[L2085]              havoc _owner_s251;
[L2086]              havoc balance_s251;
[L2087]              havoc _to_s172;
[L2088]              havoc _value_s172;
[L2089]              havoc success_s172;
[L2090]              havoc _from_s239;
[L2091]              havoc _to_s239;
[L2092]              havoc _value_s239;
[L2093]              havoc success_s239;
[L2094]              havoc _spender_s279;
[L2095]              havoc _value_s279;
[L2096]              havoc success_s279;
[L2097]              havoc _owner_s295;
[L2098]              havoc _spender_s295;
[L2099]              havoc remaining_s295;
[L2100]              havoc arg298_s0;
[L2101]              havoc __ret_0_balances;
[L2102]              havoc arg299_s0;
[L2103]              havoc arg300_s0;
[L2104]              havoc __ret_0_allowed;
[L2105]              havoc __ret_0_name;
[L2106]              havoc __ret_0_decimals;
[L2107]              havoc __ret_0_symbol;
[L2108]              havoc _initialAmount_s131;
[L2109]              havoc _tokenName_s131;
[L2110]              havoc _decimalUnits_s131;
[L2111]              havoc _tokenSymbol_s131;
[L2112]              havoc tmpNow;
[L2113]              havoc gas;
[L2114]              assume gas > 4000000 && gas <= 8000000;
[L2115]              tmpNow := now;
[L2116]              havoc now;
[L2117]              assume now > tmpNow;
[L2118]              assume msgsender_MSG != null;
[L2119]              assume DType[msgsender_MSG] != CSBInterface;
[L2120]              assume DType[msgsender_MSG] != CSB;
[L2121]              Alloc[msgsender_MSG] := true;
[L2122]  COND FALSE  !(choice == 11)
[L2128]  COND FALSE  !(choice == 10)
[L2134]  COND FALSE  !(choice == 9)
[L2141]  COND FALSE  !(choice == 8)
[L2148]  COND TRUE   choice == 7
[L2149]              gas := gas - 21000;
[L2150]  COND TRUE   gas >= 0
[L2151]              assume _value_s279 >= 0 && _value_s279 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2152]              assume msgvalue_MSG == 0;
[L2153]  CALL        call success_s279 := approve~address~uint256_CSB(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s279;
[L3]                 call_approve_CSB0 := true;
[L3]                 call_approve_CSB0 := false;
[L3]                 revert := revert_hold;
[L420]               havoc __exception;
[L421]               revert := false;
[L422]   COND FALSE  !(__exception)
[L444]   CALL        call success_s279 := approve~address~uint256_CSB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L1287]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CSB[this][msgsender_MSG][_spender_s279];
[L1288]              allowed_CSB[this][msgsender_MSG][_spender_s279] := _value_s279;
[L1289]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CSB[this][msgsender_MSG][_spender_s279];
[L1290]              assert { :EventEmitted "Approval_CSB" } true;
[L1291]              success_s279 := true;
[L444]   RET         call success_s279 := approve~address~uint256_CSB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L445]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s279 == true && allowed_CSB[this][msgsender_MSG][_spender_s279] == _value_s279) && totalSupply_CSBInterface[this] == old(totalSupply_CSBInterface[this])) && balances_CSB[this] == old(balances_CSB[this])) && allowed_CSB[this][p1][p2] == old(allowed_CSB[this][p1][p2])) && name_CSB[this] == old(name_CSB[this])) && decimals_CSB[this] == old(decimals_CSB[this])) && symbol_CSB[this] == old(symbol_CSB[this]));
[L3]                 revert := revert_hold;
[L2153]  RET         call success_s279 := approve~address~uint256_CSB(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L2213]  RET         call CorralChoice_CSB(this);

Loop:
[L2213]  CALL        call CorralChoice_CSB(this);
[L2081]              havoc msgsender_MSG;
[L2082]              havoc msgvalue_MSG;
[L2083]              havoc choice;
[L2084]              havoc __ret_0_totalSupply;
[L2085]              havoc _owner_s251;
[L2086]              havoc balance_s251;
[L2087]              havoc _to_s172;
[L2088]              havoc _value_s172;
[L2089]              havoc success_s172;
[L2090]              havoc _from_s239;
[L2091]              havoc _to_s239;
[L2092]              havoc _value_s239;
[L2093]              havoc success_s239;
[L2094]              havoc _spender_s279;
[L2095]              havoc _value_s279;
[L2096]              havoc success_s279;
[L2097]              havoc _owner_s295;
[L2098]              havoc _spender_s295;
[L2099]              havoc remaining_s295;
[L2100]              havoc arg298_s0;
[L2101]              havoc __ret_0_balances;
[L2102]              havoc arg299_s0;
[L2103]              havoc arg300_s0;
[L2104]              havoc __ret_0_allowed;
[L2105]              havoc __ret_0_name;
[L2106]              havoc __ret_0_decimals;
[L2107]              havoc __ret_0_symbol;
[L2108]              havoc _initialAmount_s131;
[L2109]              havoc _tokenName_s131;
[L2110]              havoc _decimalUnits_s131;
[L2111]              havoc _tokenSymbol_s131;
[L2112]              havoc tmpNow;
[L2113]              havoc gas;
[L2114]              assume gas > 4000000 && gas <= 8000000;
[L2115]              tmpNow := now;
[L2116]              havoc now;
[L2117]              assume now > tmpNow;
[L2118]              assume msgsender_MSG != null;
[L2119]              assume DType[msgsender_MSG] != CSBInterface;
[L2120]              assume DType[msgsender_MSG] != CSB;
[L2121]              Alloc[msgsender_MSG] := true;
[L2122]  COND FALSE  !(choice == 11)
[L2128]  COND FALSE  !(choice == 10)
[L2134]  COND FALSE  !(choice == 9)
[L2141]  COND FALSE  !(choice == 8)
[L2148]  COND TRUE   choice == 7
[L2149]              gas := gas - 21000;
[L2150]  COND TRUE   gas >= 0
[L2151]              assume _value_s279 >= 0 && _value_s279 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2152]              assume msgvalue_MSG == 0;
[L2153]  CALL        call success_s279 := approve~address~uint256_CSB(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s279;
[L3]                 call_approve_CSB0 := true;
[L3]                 call_approve_CSB0 := false;
[L3]                 revert := revert_hold;
[L420]               havoc __exception;
[L421]               revert := false;
[L422]   COND FALSE  !(__exception)
[L444]   CALL        call success_s279 := approve~address~uint256_CSB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L1287]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CSB[this][msgsender_MSG][_spender_s279];
[L1288]              allowed_CSB[this][msgsender_MSG][_spender_s279] := _value_s279;
[L1289]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CSB[this][msgsender_MSG][_spender_s279];
[L1290]              assert { :EventEmitted "Approval_CSB" } true;
[L1291]              success_s279 := true;
[L444]   RET         call success_s279 := approve~address~uint256_CSB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L445]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s279 == true && allowed_CSB[this][msgsender_MSG][_spender_s279] == _value_s279) && totalSupply_CSBInterface[this] == old(totalSupply_CSBInterface[this])) && balances_CSB[this] == old(balances_CSB[this])) && allowed_CSB[this][p1][p2] == old(allowed_CSB[this][p1][p2])) && name_CSB[this] == old(name_CSB[this])) && decimals_CSB[this] == old(decimals_CSB[this])) && symbol_CSB[this] == old(symbol_CSB[this]));
[L3]                 revert := revert_hold;
[L2153]  RET         call success_s279 := approve~address~uint256_CSB(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L2213]  RET         call CorralChoice_CSB(this);

[2020-11-25 12:50:46,129 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:50:46,129 INFO  L82        PathProgramCache]: Analyzing trace with hash -576744626, now seen corresponding path program 1 times
[2020-11-25 12:50:46,130 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:50:46,140 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:50:46,163 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:50:46,164 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:50:46,164 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:50:46,165 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:50:46,165 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:50:46,165 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:50:46,166 INFO  L87              Difference]: Start difference. First operand 1324 states and 1415 transitions. cyclomatic complexity: 93 Second operand 4 states.
[2020-11-25 12:50:46,356 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:50:46,356 INFO  L93              Difference]: Finished difference Result 1922 states and 2169 transitions.
[2020-11-25 12:50:46,356 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:50:46,357 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1922 states and 2169 transitions.
[2020-11-25 12:50:46,368 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 12:50:46,380 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1922 states to 1902 states and 2149 transitions.
[2020-11-25 12:50:46,380 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 883
[2020-11-25 12:50:46,381 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 883
[2020-11-25 12:50:46,381 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1902 states and 2149 transitions.
[2020-11-25 12:50:46,385 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:50:46,385 INFO  L728         BuchiCegarLoop]: Abstraction has 1902 states and 2149 transitions.
[2020-11-25 12:50:46,387 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1902 states and 2149 transitions.
[2020-11-25 12:50:46,407 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1902 to 1413.
[2020-11-25 12:50:46,408 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1413 states.
[2020-11-25 12:50:46,411 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1413 states to 1413 states and 1518 transitions.
[2020-11-25 12:50:46,411 INFO  L751         BuchiCegarLoop]: Abstraction has 1413 states and 1518 transitions.
[2020-11-25 12:50:46,411 INFO  L631         BuchiCegarLoop]: Abstraction has 1413 states and 1518 transitions.
[2020-11-25 12:50:46,411 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 12:50:46,411 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1413 states and 1518 transitions.
[2020-11-25 12:50:46,416 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:50:46,416 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:50:46,416 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:50:46,418 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:46,418 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_CSB0 := false;
[L3]                 call_approve_CSB0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2203]              assume null == 0;
[L2204]  CALL        call this := FreshRefGenerator__success();
[L1062]              havoc newRef;
[L1063]              assume Alloc[newRef] == false;
[L1064]              Alloc[newRef] := true;
[L1065]              assume newRef != null;
[L2204]  RET         call this := FreshRefGenerator__success();
[L2205]              assume now >= 0;
[L2206]              assume DType[this] == CSB;
[L2207]              assume msgvalue_MSG == 0;
[L2208]              gas := gas - 53000;
[L2209]  CALL        call CSB_CSB(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L204]               havoc __exception;
[L205]               revert := false;
[L206]   COND FALSE  !(__exception)
[L228]   CALL        call CSB_CSB__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1174]  CALL        call CSBInterface_CSBInterface__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  CALL        call CSBInterface_CSBInterface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1080]              assume msgsender_MSG != null;
[L1081]              Balance[this] := 0;
[L1082]              totalSupply_CSBInterface[this] := 0;
[L1096]  RET         call CSBInterface_CSBInterface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1097]  COND FALSE  !(revert)
[L1174]  RET         call CSBInterface_CSBInterface__success(this, msgsender_MSG, msgvalue_MSG);
[L1175]  COND FALSE  !(revert)
[L1178]  CALL        call CSB_CSB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1140]              assume msgsender_MSG != null;
[L1141]              Balance[this] := 0;
[L1142]              MAX_UINT256_CSB[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1143]              balances_CSB[this] := zeroRefintArr();
[L1144]              sum_balances0[this] := 0;
[L1145]              allowed_CSB[this] := zeroRefRefintArr();
[L1146]              sum_allowed1[this] := 0;
[L1147]              name_CSB[this] := 265230608;
[L1148]              decimals_CSB[this] := 0;
[L1149]              symbol_CSB[this] := 265230608;
[L1151]              sum_balances0[this] := sum_balances0[this] - balances_CSB[this][msgsender_MSG];
[L1152]              balances_CSB[this][msgsender_MSG] := _initialAmount_s131;
[L1153]              sum_balances0[this] := sum_balances0[this] + balances_CSB[this][msgsender_MSG];
[L1154]              totalSupply_CSBInterface[this] := _initialAmount_s131;
[L1155]              name_CSB[this] := _tokenName_s131;
[L1156]              decimals_CSB[this] := _decimalUnits_s131;
[L1157]              symbol_CSB[this] := _tokenSymbol_s131;
[L1178]  RET         call CSB_CSB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1179]  COND FALSE  !(revert)
[L228]   RET         call CSB_CSB__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L229]               assume !revert && gas >= 0;
[L2209]  RET         call CSB_CSB(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L2210]              assume !revert && gas >= 0;
[L2213]  CALL        call CorralChoice_CSB(this);
[L2081]              havoc msgsender_MSG;
[L2082]              havoc msgvalue_MSG;
[L2083]              havoc choice;
[L2084]              havoc __ret_0_totalSupply;
[L2085]              havoc _owner_s251;
[L2086]              havoc balance_s251;
[L2087]              havoc _to_s172;
[L2088]              havoc _value_s172;
[L2089]              havoc success_s172;
[L2090]              havoc _from_s239;
[L2091]              havoc _to_s239;
[L2092]              havoc _value_s239;
[L2093]              havoc success_s239;
[L2094]              havoc _spender_s279;
[L2095]              havoc _value_s279;
[L2096]              havoc success_s279;
[L2097]              havoc _owner_s295;
[L2098]              havoc _spender_s295;
[L2099]              havoc remaining_s295;
[L2100]              havoc arg298_s0;
[L2101]              havoc __ret_0_balances;
[L2102]              havoc arg299_s0;
[L2103]              havoc arg300_s0;
[L2104]              havoc __ret_0_allowed;
[L2105]              havoc __ret_0_name;
[L2106]              havoc __ret_0_decimals;
[L2107]              havoc __ret_0_symbol;
[L2108]              havoc _initialAmount_s131;
[L2109]              havoc _tokenName_s131;
[L2110]              havoc _decimalUnits_s131;
[L2111]              havoc _tokenSymbol_s131;
[L2112]              havoc tmpNow;
[L2113]              havoc gas;
[L2114]              assume gas > 4000000 && gas <= 8000000;
[L2115]              tmpNow := now;
[L2116]              havoc now;
[L2117]              assume now > tmpNow;
[L2118]              assume msgsender_MSG != null;
[L2119]              assume DType[msgsender_MSG] != CSBInterface;
[L2120]              assume DType[msgsender_MSG] != CSB;
[L2121]              Alloc[msgsender_MSG] := true;
[L2122]  COND FALSE  !(choice == 11)
[L2128]  COND FALSE  !(choice == 10)
[L2134]  COND FALSE  !(choice == 9)
[L2141]  COND FALSE  !(choice == 8)
[L2148]  COND TRUE   choice == 7
[L2149]              gas := gas - 21000;
[L2150]  COND TRUE   gas >= 0
[L2151]              assume _value_s279 >= 0 && _value_s279 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2152]              assume msgvalue_MSG == 0;
[L2153]  CALL        call success_s279 := approve~address~uint256_CSB(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s279;
[L3]                 call_approve_CSB0 := true;
[L3]                 call_approve_CSB0 := false;
[L3]                 revert := revert_hold;
[L420]               havoc __exception;
[L421]               revert := false;
[L422]   COND FALSE  !(__exception)
[L444]   CALL        call success_s279 := approve~address~uint256_CSB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L1287]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CSB[this][msgsender_MSG][_spender_s279];
[L1288]              allowed_CSB[this][msgsender_MSG][_spender_s279] := _value_s279;
[L1289]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CSB[this][msgsender_MSG][_spender_s279];
[L1290]              assert { :EventEmitted "Approval_CSB" } true;
[L1291]              success_s279 := true;
[L444]   RET         call success_s279 := approve~address~uint256_CSB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L445]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s279 == true && allowed_CSB[this][msgsender_MSG][_spender_s279] == _value_s279) && totalSupply_CSBInterface[this] == old(totalSupply_CSBInterface[this])) && balances_CSB[this] == old(balances_CSB[this])) && allowed_CSB[this][p1][p2] == old(allowed_CSB[this][p1][p2])) && name_CSB[this] == old(name_CSB[this])) && decimals_CSB[this] == old(decimals_CSB[this])) && symbol_CSB[this] == old(symbol_CSB[this]));
[L3]                 revert := revert_hold;
[L2153]  RET         call success_s279 := approve~address~uint256_CSB(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L2213]  RET         call CorralChoice_CSB(this);

Loop:
[L2213]  CALL        call CorralChoice_CSB(this);
[L2081]              havoc msgsender_MSG;
[L2082]              havoc msgvalue_MSG;
[L2083]              havoc choice;
[L2084]              havoc __ret_0_totalSupply;
[L2085]              havoc _owner_s251;
[L2086]              havoc balance_s251;
[L2087]              havoc _to_s172;
[L2088]              havoc _value_s172;
[L2089]              havoc success_s172;
[L2090]              havoc _from_s239;
[L2091]              havoc _to_s239;
[L2092]              havoc _value_s239;
[L2093]              havoc success_s239;
[L2094]              havoc _spender_s279;
[L2095]              havoc _value_s279;
[L2096]              havoc success_s279;
[L2097]              havoc _owner_s295;
[L2098]              havoc _spender_s295;
[L2099]              havoc remaining_s295;
[L2100]              havoc arg298_s0;
[L2101]              havoc __ret_0_balances;
[L2102]              havoc arg299_s0;
[L2103]              havoc arg300_s0;
[L2104]              havoc __ret_0_allowed;
[L2105]              havoc __ret_0_name;
[L2106]              havoc __ret_0_decimals;
[L2107]              havoc __ret_0_symbol;
[L2108]              havoc _initialAmount_s131;
[L2109]              havoc _tokenName_s131;
[L2110]              havoc _decimalUnits_s131;
[L2111]              havoc _tokenSymbol_s131;
[L2112]              havoc tmpNow;
[L2113]              havoc gas;
[L2114]              assume gas > 4000000 && gas <= 8000000;
[L2115]              tmpNow := now;
[L2116]              havoc now;
[L2117]              assume now > tmpNow;
[L2118]              assume msgsender_MSG != null;
[L2119]              assume DType[msgsender_MSG] != CSBInterface;
[L2120]              assume DType[msgsender_MSG] != CSB;
[L2121]              Alloc[msgsender_MSG] := true;
[L2122]  COND FALSE  !(choice == 11)
[L2128]  COND FALSE  !(choice == 10)
[L2134]  COND FALSE  !(choice == 9)
[L2141]  COND FALSE  !(choice == 8)
[L2148]  COND TRUE   choice == 7
[L2149]              gas := gas - 21000;
[L2150]  COND TRUE   gas >= 0
[L2151]              assume _value_s279 >= 0 && _value_s279 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2152]              assume msgvalue_MSG == 0;
[L2153]  CALL        call success_s279 := approve~address~uint256_CSB(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s279;
[L3]                 call_approve_CSB0 := true;
[L3]                 call_approve_CSB0 := false;
[L3]                 revert := revert_hold;
[L420]               havoc __exception;
[L421]               revert := false;
[L422]   COND FALSE  !(__exception)
[L444]   CALL        call success_s279 := approve~address~uint256_CSB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L1287]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CSB[this][msgsender_MSG][_spender_s279];
[L1288]              allowed_CSB[this][msgsender_MSG][_spender_s279] := _value_s279;
[L1289]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CSB[this][msgsender_MSG][_spender_s279];
[L1290]              assert { :EventEmitted "Approval_CSB" } true;
[L1291]              success_s279 := true;
[L444]   RET         call success_s279 := approve~address~uint256_CSB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L445]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s279 == true && allowed_CSB[this][msgsender_MSG][_spender_s279] == _value_s279) && totalSupply_CSBInterface[this] == old(totalSupply_CSBInterface[this])) && balances_CSB[this] == old(balances_CSB[this])) && allowed_CSB[this][p1][p2] == old(allowed_CSB[this][p1][p2])) && name_CSB[this] == old(name_CSB[this])) && decimals_CSB[this] == old(decimals_CSB[this])) && symbol_CSB[this] == old(symbol_CSB[this]));
[L3]                 revert := revert_hold;
[L2153]  RET         call success_s279 := approve~address~uint256_CSB(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L2213]  RET         call CorralChoice_CSB(this);

[2020-11-25 12:50:46,421 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:50:46,421 INFO  L82        PathProgramCache]: Analyzing trace with hash -1558477286, now seen corresponding path program 1 times
[2020-11-25 12:50:46,421 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:50:46,444 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:50:46,542 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:50:46,542 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:50:46,542 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 12:50:46,542 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:50:46,543 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 12:50:46,543 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-25 12:50:46,543 INFO  L87              Difference]: Start difference. First operand 1413 states and 1518 transitions. cyclomatic complexity: 107 Second operand 13 states.
[2020-11-25 12:50:47,453 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:50:47,453 INFO  L93              Difference]: Finished difference Result 1538 states and 1676 transitions.
[2020-11-25 12:50:47,453 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 12:50:47,453 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1538 states and 1676 transitions.
[2020-11-25 12:50:47,459 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 12:50:47,464 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1538 states to 1538 states and 1676 transitions.
[2020-11-25 12:50:47,465 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 746
[2020-11-25 12:50:47,466 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 746
[2020-11-25 12:50:47,466 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1538 states and 1676 transitions.
[2020-11-25 12:50:47,469 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:50:47,469 INFO  L728         BuchiCegarLoop]: Abstraction has 1538 states and 1676 transitions.
[2020-11-25 12:50:47,472 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1538 states and 1676 transitions.
[2020-11-25 12:50:47,498 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1538 to 1506.
[2020-11-25 12:50:47,499 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1506 states.
[2020-11-25 12:50:47,501 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1506 states to 1506 states and 1630 transitions.
[2020-11-25 12:50:47,502 INFO  L751         BuchiCegarLoop]: Abstraction has 1506 states and 1630 transitions.
[2020-11-25 12:50:47,502 INFO  L631         BuchiCegarLoop]: Abstraction has 1506 states and 1630 transitions.
[2020-11-25 12:50:47,502 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 12:50:47,502 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1506 states and 1630 transitions.
[2020-11-25 12:50:47,505 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 12:50:47,505 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:50:47,505 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:50:47,506 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:47,506 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_CSB0 := false;
[L3]                 call_approve_CSB0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2203]              assume null == 0;
[L2204]  CALL        call this := FreshRefGenerator__success();
[L1062]              havoc newRef;
[L1063]              assume Alloc[newRef] == false;
[L1064]              Alloc[newRef] := true;
[L1065]              assume newRef != null;
[L2204]  RET         call this := FreshRefGenerator__success();
[L2205]              assume now >= 0;
[L2206]              assume DType[this] == CSB;
[L2207]              assume msgvalue_MSG == 0;
[L2208]              gas := gas - 53000;
[L2209]  CALL        call CSB_CSB(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L204]               havoc __exception;
[L205]               revert := false;
[L206]   COND FALSE  !(__exception)
[L228]   CALL        call CSB_CSB__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1174]  CALL        call CSBInterface_CSBInterface__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  CALL        call CSBInterface_CSBInterface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1080]              assume msgsender_MSG != null;
[L1081]              Balance[this] := 0;
[L1082]              totalSupply_CSBInterface[this] := 0;
[L1096]  RET         call CSBInterface_CSBInterface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1097]  COND FALSE  !(revert)
[L1174]  RET         call CSBInterface_CSBInterface__success(this, msgsender_MSG, msgvalue_MSG);
[L1175]  COND FALSE  !(revert)
[L1178]  CALL        call CSB_CSB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1140]              assume msgsender_MSG != null;
[L1141]              Balance[this] := 0;
[L1142]              MAX_UINT256_CSB[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1143]              balances_CSB[this] := zeroRefintArr();
[L1144]              sum_balances0[this] := 0;
[L1145]              allowed_CSB[this] := zeroRefRefintArr();
[L1146]              sum_allowed1[this] := 0;
[L1147]              name_CSB[this] := 265230608;
[L1148]              decimals_CSB[this] := 0;
[L1149]              symbol_CSB[this] := 265230608;
[L1151]              sum_balances0[this] := sum_balances0[this] - balances_CSB[this][msgsender_MSG];
[L1152]              balances_CSB[this][msgsender_MSG] := _initialAmount_s131;
[L1153]              sum_balances0[this] := sum_balances0[this] + balances_CSB[this][msgsender_MSG];
[L1154]              totalSupply_CSBInterface[this] := _initialAmount_s131;
[L1155]              name_CSB[this] := _tokenName_s131;
[L1156]              decimals_CSB[this] := _decimalUnits_s131;
[L1157]              symbol_CSB[this] := _tokenSymbol_s131;
[L1178]  RET         call CSB_CSB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1179]  COND FALSE  !(revert)
[L228]   RET         call CSB_CSB__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L229]               assume !revert && gas >= 0;
[L2209]  RET         call CSB_CSB(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L2210]              assume !revert && gas >= 0;
[L2213]  CALL        call CorralChoice_CSB(this);
[L2081]              havoc msgsender_MSG;
[L2082]              havoc msgvalue_MSG;
[L2083]              havoc choice;
[L2084]              havoc __ret_0_totalSupply;
[L2085]              havoc _owner_s251;
[L2086]              havoc balance_s251;
[L2087]              havoc _to_s172;
[L2088]              havoc _value_s172;
[L2089]              havoc success_s172;
[L2090]              havoc _from_s239;
[L2091]              havoc _to_s239;
[L2092]              havoc _value_s239;
[L2093]              havoc success_s239;
[L2094]              havoc _spender_s279;
[L2095]              havoc _value_s279;
[L2096]              havoc success_s279;
[L2097]              havoc _owner_s295;
[L2098]              havoc _spender_s295;
[L2099]              havoc remaining_s295;
[L2100]              havoc arg298_s0;
[L2101]              havoc __ret_0_balances;
[L2102]              havoc arg299_s0;
[L2103]              havoc arg300_s0;
[L2104]              havoc __ret_0_allowed;
[L2105]              havoc __ret_0_name;
[L2106]              havoc __ret_0_decimals;
[L2107]              havoc __ret_0_symbol;
[L2108]              havoc _initialAmount_s131;
[L2109]              havoc _tokenName_s131;
[L2110]              havoc _decimalUnits_s131;
[L2111]              havoc _tokenSymbol_s131;
[L2112]              havoc tmpNow;
[L2113]              havoc gas;
[L2114]              assume gas > 4000000 && gas <= 8000000;
[L2115]              tmpNow := now;
[L2116]              havoc now;
[L2117]              assume now > tmpNow;
[L2118]              assume msgsender_MSG != null;
[L2119]              assume DType[msgsender_MSG] != CSBInterface;
[L2120]              assume DType[msgsender_MSG] != CSB;
[L2121]              Alloc[msgsender_MSG] := true;
[L2122]  COND FALSE  !(choice == 11)
[L2128]  COND FALSE  !(choice == 10)
[L2134]  COND FALSE  !(choice == 9)
[L2141]  COND FALSE  !(choice == 8)
[L2148]  COND TRUE   choice == 7
[L2149]              gas := gas - 21000;
[L2150]  COND TRUE   gas >= 0
[L2151]              assume _value_s279 >= 0 && _value_s279 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2152]              assume msgvalue_MSG == 0;
[L2153]  CALL        call success_s279 := approve~address~uint256_CSB(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s279;
[L3]                 call_approve_CSB0 := true;
[L3]                 call_approve_CSB0 := false;
[L3]                 revert := revert_hold;
[L420]               havoc __exception;
[L421]               revert := false;
[L422]   COND TRUE   __exception
[L423]               __tmp__Balance := Balance;
[L424]               __tmp__DType := DType;
[L425]               __tmp__Alloc := Alloc;
[L426]               __tmp__balance_ADDR := balance_ADDR;
[L427]               __tmp__M_Ref_int := M_Ref_int;
[L428]               __tmp__sum_balances0 := sum_balances0;
[L429]               __tmp__alloc_allowed_CSB_lvl0 := alloc_allowed_CSB_lvl0;
[L430]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L431]               __tmp__sum_allowed1 := sum_allowed1;
[L432]               __tmp__Length := Length;
[L433]               __tmp__now := now;
[L434]               __tmp__totalSupply_CSBInterface := totalSupply_CSBInterface;
[L435]               __tmp__MAX_UINT256_CSB := MAX_UINT256_CSB;
[L436]               __tmp__balances_CSB := balances_CSB;
[L437]               __tmp__allowed_CSB := allowed_CSB;
[L438]               __tmp__name_CSB := name_CSB;
[L439]               __tmp__decimals_CSB := decimals_CSB;
[L440]               __tmp__symbol_CSB := symbol_CSB;
[L441]   CALL        call success_s279 := approve~address~uint256_CSB__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L1278]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_CSB[this][msgsender_MSG][_spender_s279];
[L1279]              __tmp__allowed_CSB[this][msgsender_MSG][_spender_s279] := _value_s279;
[L1280]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_CSB[this][msgsender_MSG][_spender_s279];
[L1281]              success_s279 := true;
[L441]   RET         call success_s279 := approve~address~uint256_CSB__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L442]               assume revert || gas < 0;
[L2153]  RET         call success_s279 := approve~address~uint256_CSB(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L2213]  RET         call CorralChoice_CSB(this);

Loop:
[L2213]  CALL        call CorralChoice_CSB(this);
[L2081]              havoc msgsender_MSG;
[L2082]              havoc msgvalue_MSG;
[L2083]              havoc choice;
[L2084]              havoc __ret_0_totalSupply;
[L2085]              havoc _owner_s251;
[L2086]              havoc balance_s251;
[L2087]              havoc _to_s172;
[L2088]              havoc _value_s172;
[L2089]              havoc success_s172;
[L2090]              havoc _from_s239;
[L2091]              havoc _to_s239;
[L2092]              havoc _value_s239;
[L2093]              havoc success_s239;
[L2094]              havoc _spender_s279;
[L2095]              havoc _value_s279;
[L2096]              havoc success_s279;
[L2097]              havoc _owner_s295;
[L2098]              havoc _spender_s295;
[L2099]              havoc remaining_s295;
[L2100]              havoc arg298_s0;
[L2101]              havoc __ret_0_balances;
[L2102]              havoc arg299_s0;
[L2103]              havoc arg300_s0;
[L2104]              havoc __ret_0_allowed;
[L2105]              havoc __ret_0_name;
[L2106]              havoc __ret_0_decimals;
[L2107]              havoc __ret_0_symbol;
[L2108]              havoc _initialAmount_s131;
[L2109]              havoc _tokenName_s131;
[L2110]              havoc _decimalUnits_s131;
[L2111]              havoc _tokenSymbol_s131;
[L2112]              havoc tmpNow;
[L2113]              havoc gas;
[L2114]              assume gas > 4000000 && gas <= 8000000;
[L2115]              tmpNow := now;
[L2116]              havoc now;
[L2117]              assume now > tmpNow;
[L2118]              assume msgsender_MSG != null;
[L2119]              assume DType[msgsender_MSG] != CSBInterface;
[L2120]              assume DType[msgsender_MSG] != CSB;
[L2121]              Alloc[msgsender_MSG] := true;
[L2122]  COND FALSE  !(choice == 11)
[L2128]  COND FALSE  !(choice == 10)
[L2134]  COND FALSE  !(choice == 9)
[L2141]  COND FALSE  !(choice == 8)
[L2148]  COND TRUE   choice == 7
[L2149]              gas := gas - 21000;
[L2150]  COND TRUE   gas >= 0
[L2151]              assume _value_s279 >= 0 && _value_s279 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2152]              assume msgvalue_MSG == 0;
[L2153]  CALL        call success_s279 := approve~address~uint256_CSB(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s279;
[L3]                 call_approve_CSB0 := true;
[L3]                 call_approve_CSB0 := false;
[L3]                 revert := revert_hold;
[L420]               havoc __exception;
[L421]               revert := false;
[L422]   COND TRUE   __exception
[L423]               __tmp__Balance := Balance;
[L424]               __tmp__DType := DType;
[L425]               __tmp__Alloc := Alloc;
[L426]               __tmp__balance_ADDR := balance_ADDR;
[L427]               __tmp__M_Ref_int := M_Ref_int;
[L428]               __tmp__sum_balances0 := sum_balances0;
[L429]               __tmp__alloc_allowed_CSB_lvl0 := alloc_allowed_CSB_lvl0;
[L430]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L431]               __tmp__sum_allowed1 := sum_allowed1;
[L432]               __tmp__Length := Length;
[L433]               __tmp__now := now;
[L434]               __tmp__totalSupply_CSBInterface := totalSupply_CSBInterface;
[L435]               __tmp__MAX_UINT256_CSB := MAX_UINT256_CSB;
[L436]               __tmp__balances_CSB := balances_CSB;
[L437]               __tmp__allowed_CSB := allowed_CSB;
[L438]               __tmp__name_CSB := name_CSB;
[L439]               __tmp__decimals_CSB := decimals_CSB;
[L440]               __tmp__symbol_CSB := symbol_CSB;
[L441]   CALL        call success_s279 := approve~address~uint256_CSB__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L1278]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_CSB[this][msgsender_MSG][_spender_s279];
[L1279]              __tmp__allowed_CSB[this][msgsender_MSG][_spender_s279] := _value_s279;
[L1280]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_CSB[this][msgsender_MSG][_spender_s279];
[L1281]              success_s279 := true;
[L441]   RET         call success_s279 := approve~address~uint256_CSB__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L442]               assume revert || gas < 0;
[L2153]  RET         call success_s279 := approve~address~uint256_CSB(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L2213]  RET         call CorralChoice_CSB(this);

[2020-11-25 12:50:47,509 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:50:47,509 INFO  L82        PathProgramCache]: Analyzing trace with hash 1769708326, now seen corresponding path program 1 times
[2020-11-25 12:50:47,510 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:50:47,517 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:50:47,539 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:50:47,539 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:50:47,539 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 12:50:47,539 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:50:47,539 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 12:50:47,540 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 12:50:47,540 INFO  L87              Difference]: Start difference. First operand 1506 states and 1630 transitions. cyclomatic complexity: 128 Second operand 5 states.
[2020-11-25 12:50:47,693 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:50:47,693 INFO  L93              Difference]: Finished difference Result 1982 states and 2211 transitions.
[2020-11-25 12:50:47,693 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 12:50:47,693 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1982 states and 2211 transitions.
[2020-11-25 12:50:47,700 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2020-11-25 12:50:47,707 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1982 states to 1387 states and 1612 transitions.
[2020-11-25 12:50:47,707 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 711
[2020-11-25 12:50:47,707 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 711
[2020-11-25 12:50:47,707 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1387 states and 1612 transitions.
[2020-11-25 12:50:47,709 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:50:47,709 INFO  L728         BuchiCegarLoop]: Abstraction has 1387 states and 1612 transitions.
[2020-11-25 12:50:47,710 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1387 states and 1612 transitions.
[2020-11-25 12:50:47,722 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1387 to 811.
[2020-11-25 12:50:47,722 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 811 states.
[2020-11-25 12:50:47,723 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 811 states to 811 states and 872 transitions.
[2020-11-25 12:50:47,723 INFO  L751         BuchiCegarLoop]: Abstraction has 811 states and 872 transitions.
[2020-11-25 12:50:47,723 INFO  L631         BuchiCegarLoop]: Abstraction has 811 states and 872 transitions.
[2020-11-25 12:50:47,723 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 12:50:47,723 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 811 states and 872 transitions.
[2020-11-25 12:50:47,725 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:50:47,725 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:50:47,725 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:50:47,726 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:47,726 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_CSB0 := false;
[L3]                 call_approve_CSB0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2203]              assume null == 0;
[L2204]  CALL        call this := FreshRefGenerator__success();
[L1062]              havoc newRef;
[L1063]              assume Alloc[newRef] == false;
[L1064]              Alloc[newRef] := true;
[L1065]              assume newRef != null;
[L2204]  RET         call this := FreshRefGenerator__success();
[L2205]              assume now >= 0;
[L2206]              assume DType[this] == CSB;
[L2207]              assume msgvalue_MSG == 0;
[L2208]              gas := gas - 53000;
[L2209]  CALL        call CSB_CSB(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L204]               havoc __exception;
[L205]               revert := false;
[L206]   COND FALSE  !(__exception)
[L228]   CALL        call CSB_CSB__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1174]  CALL        call CSBInterface_CSBInterface__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  CALL        call CSBInterface_CSBInterface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1080]              assume msgsender_MSG != null;
[L1081]              Balance[this] := 0;
[L1082]              totalSupply_CSBInterface[this] := 0;
[L1096]  RET         call CSBInterface_CSBInterface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1097]  COND FALSE  !(revert)
[L1174]  RET         call CSBInterface_CSBInterface__success(this, msgsender_MSG, msgvalue_MSG);
[L1175]  COND FALSE  !(revert)
[L1178]  CALL        call CSB_CSB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1140]              assume msgsender_MSG != null;
[L1141]              Balance[this] := 0;
[L1142]              MAX_UINT256_CSB[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1143]              balances_CSB[this] := zeroRefintArr();
[L1144]              sum_balances0[this] := 0;
[L1145]              allowed_CSB[this] := zeroRefRefintArr();
[L1146]              sum_allowed1[this] := 0;
[L1147]              name_CSB[this] := 265230608;
[L1148]              decimals_CSB[this] := 0;
[L1149]              symbol_CSB[this] := 265230608;
[L1151]              sum_balances0[this] := sum_balances0[this] - balances_CSB[this][msgsender_MSG];
[L1152]              balances_CSB[this][msgsender_MSG] := _initialAmount_s131;
[L1153]              sum_balances0[this] := sum_balances0[this] + balances_CSB[this][msgsender_MSG];
[L1154]              totalSupply_CSBInterface[this] := _initialAmount_s131;
[L1155]              name_CSB[this] := _tokenName_s131;
[L1156]              decimals_CSB[this] := _decimalUnits_s131;
[L1157]              symbol_CSB[this] := _tokenSymbol_s131;
[L1178]  RET         call CSB_CSB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1179]  COND FALSE  !(revert)
[L228]   RET         call CSB_CSB__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L229]               assume !revert && gas >= 0;
[L2209]  RET         call CSB_CSB(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L2210]              assume !revert && gas >= 0;
[L2213]  CALL        call CorralChoice_CSB(this);
[L2081]              havoc msgsender_MSG;
[L2082]              havoc msgvalue_MSG;
[L2083]              havoc choice;
[L2084]              havoc __ret_0_totalSupply;
[L2085]              havoc _owner_s251;
[L2086]              havoc balance_s251;
[L2087]              havoc _to_s172;
[L2088]              havoc _value_s172;
[L2089]              havoc success_s172;
[L2090]              havoc _from_s239;
[L2091]              havoc _to_s239;
[L2092]              havoc _value_s239;
[L2093]              havoc success_s239;
[L2094]              havoc _spender_s279;
[L2095]              havoc _value_s279;
[L2096]              havoc success_s279;
[L2097]              havoc _owner_s295;
[L2098]              havoc _spender_s295;
[L2099]              havoc remaining_s295;
[L2100]              havoc arg298_s0;
[L2101]              havoc __ret_0_balances;
[L2102]              havoc arg299_s0;
[L2103]              havoc arg300_s0;
[L2104]              havoc __ret_0_allowed;
[L2105]              havoc __ret_0_name;
[L2106]              havoc __ret_0_decimals;
[L2107]              havoc __ret_0_symbol;
[L2108]              havoc _initialAmount_s131;
[L2109]              havoc _tokenName_s131;
[L2110]              havoc _decimalUnits_s131;
[L2111]              havoc _tokenSymbol_s131;
[L2112]              havoc tmpNow;
[L2113]              havoc gas;
[L2114]              assume gas > 4000000 && gas <= 8000000;
[L2115]              tmpNow := now;
[L2116]              havoc now;
[L2117]              assume now > tmpNow;
[L2118]              assume msgsender_MSG != null;
[L2119]              assume DType[msgsender_MSG] != CSBInterface;
[L2120]              assume DType[msgsender_MSG] != CSB;
[L2121]              Alloc[msgsender_MSG] := true;
[L2122]  COND FALSE  !(choice == 11)
[L2128]  COND FALSE  !(choice == 10)
[L2134]  COND FALSE  !(choice == 9)
[L2141]  COND TRUE   choice == 8
[L2142]              gas := gas - 21000;
[L2143]  COND TRUE   gas >= 0
[L2144]              assume _value_s239 >= 0 && _value_s239 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2145]              assume msgvalue_MSG == 0;
[L2146]  CALL        call success_s239 := transferFrom~address~address~uint256_CSB(this, msgsender_MSG, msgvalue_MSG, _from_s239, _to_s239, _value_s239);
[L314]               havoc __exception;
[L315]               revert := false;
[L316]   COND FALSE  !(__exception)
[L338]   CALL        call success_s239 := transferFrom~address~address~uint256_CSB__success(this, msgsender_MSG, msgvalue_MSG, _from_s239, _to_s239, _value_s239);
[L1243]              allowance_s239 := allowed_CSB[this][_from_s239][msgsender_MSG];
[L1244]  COND FALSE  !(!(balances_CSB[this][_from_s239] >= _value_s239 && allowance_s239 >= _value_s239))
[L1248]              sum_balances0[this] := sum_balances0[this] - balances_CSB[this][_to_s239];
[L1249]              balances_CSB[this][_to_s239] := (balances_CSB[this][_to_s239] + _value_s239) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1250]              sum_balances0[this] := sum_balances0[this] + balances_CSB[this][_to_s239];
[L1251]              sum_balances0[this] := sum_balances0[this] - balances_CSB[this][_from_s239];
[L1252]              balances_CSB[this][_from_s239] := (balances_CSB[this][_from_s239] - _value_s239) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1253]              sum_balances0[this] := sum_balances0[this] + balances_CSB[this][_from_s239];
[L1254]  COND TRUE   allowance_s239 < MAX_UINT256_CSB[this]
[L1255]              sum_allowed1[_from_s239] := sum_allowed1[_from_s239] - allowed_CSB[this][_from_s239][msgsender_MSG];
[L1256]              allowed_CSB[this][_from_s239][msgsender_MSG] := (allowed_CSB[this][_from_s239][msgsender_MSG] - _value_s239) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1257]              sum_allowed1[_from_s239] := sum_allowed1[_from_s239] + allowed_CSB[this][_from_s239][msgsender_MSG];
[L1259]              assert { :EventEmitted "Transfer_CSB" } true;
[L1260]              success_s239 := true;
[L338]   RET         call success_s239 := transferFrom~address~address~uint256_CSB__success(this, msgsender_MSG, msgvalue_MSG, _from_s239, _to_s239, _value_s239);
[L339]               assume !revert && gas >= 0;
[L2146]  RET         call success_s239 := transferFrom~address~address~uint256_CSB(this, msgsender_MSG, msgvalue_MSG, _from_s239, _to_s239, _value_s239);
[L2213]  RET         call CorralChoice_CSB(this);
[L2213]  CALL        call CorralChoice_CSB(this);
[L2081]              havoc msgsender_MSG;
[L2082]              havoc msgvalue_MSG;
[L2083]              havoc choice;
[L2084]              havoc __ret_0_totalSupply;
[L2085]              havoc _owner_s251;
[L2086]              havoc balance_s251;
[L2087]              havoc _to_s172;
[L2088]              havoc _value_s172;
[L2089]              havoc success_s172;
[L2090]              havoc _from_s239;
[L2091]              havoc _to_s239;
[L2092]              havoc _value_s239;
[L2093]              havoc success_s239;
[L2094]              havoc _spender_s279;
[L2095]              havoc _value_s279;
[L2096]              havoc success_s279;
[L2097]              havoc _owner_s295;
[L2098]              havoc _spender_s295;
[L2099]              havoc remaining_s295;
[L2100]              havoc arg298_s0;
[L2101]              havoc __ret_0_balances;
[L2102]              havoc arg299_s0;
[L2103]              havoc arg300_s0;
[L2104]              havoc __ret_0_allowed;
[L2105]              havoc __ret_0_name;
[L2106]              havoc __ret_0_decimals;
[L2107]              havoc __ret_0_symbol;
[L2108]              havoc _initialAmount_s131;
[L2109]              havoc _tokenName_s131;
[L2110]              havoc _decimalUnits_s131;
[L2111]              havoc _tokenSymbol_s131;
[L2112]              havoc tmpNow;
[L2113]              havoc gas;
[L2114]              assume gas > 4000000 && gas <= 8000000;
[L2115]              tmpNow := now;
[L2116]              havoc now;
[L2117]              assume now > tmpNow;
[L2118]              assume msgsender_MSG != null;
[L2119]              assume DType[msgsender_MSG] != CSBInterface;
[L2120]              assume DType[msgsender_MSG] != CSB;
[L2121]              Alloc[msgsender_MSG] := true;
[L2122]  COND FALSE  !(choice == 11)
[L2128]  COND FALSE  !(choice == 10)
[L2134]  COND FALSE  !(choice == 9)
[L2141]  COND FALSE  !(choice == 8)
[L2148]  COND TRUE   choice == 7
[L2149]              gas := gas - 21000;
[L2150]  COND TRUE   gas >= 0
[L2151]              assume _value_s279 >= 0 && _value_s279 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2152]              assume msgvalue_MSG == 0;
[L2153]  CALL        call success_s279 := approve~address~uint256_CSB(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s279;
[L3]                 call_approve_CSB0 := true;
[L3]                 call_approve_CSB0 := false;
[L3]                 revert := revert_hold;
[L420]               havoc __exception;
[L421]               revert := false;
[L422]   COND FALSE  !(__exception)
[L444]   CALL        call success_s279 := approve~address~uint256_CSB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L1287]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CSB[this][msgsender_MSG][_spender_s279];
[L1288]              allowed_CSB[this][msgsender_MSG][_spender_s279] := _value_s279;
[L1289]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CSB[this][msgsender_MSG][_spender_s279];
[L1290]              assert { :EventEmitted "Approval_CSB" } true;
[L1291]              success_s279 := true;
[L444]   RET         call success_s279 := approve~address~uint256_CSB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L445]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s279 == true && allowed_CSB[this][msgsender_MSG][_spender_s279] == _value_s279) && totalSupply_CSBInterface[this] == old(totalSupply_CSBInterface[this])) && balances_CSB[this] == old(balances_CSB[this])) && allowed_CSB[this][p1][p2] == old(allowed_CSB[this][p1][p2])) && name_CSB[this] == old(name_CSB[this])) && decimals_CSB[this] == old(decimals_CSB[this])) && symbol_CSB[this] == old(symbol_CSB[this]));
[L3]                 revert := revert_hold;
[L2153]  RET         call success_s279 := approve~address~uint256_CSB(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L2213]  RET         call CorralChoice_CSB(this);

Loop:
[L2213]  CALL        call CorralChoice_CSB(this);
[L2081]              havoc msgsender_MSG;
[L2082]              havoc msgvalue_MSG;
[L2083]              havoc choice;
[L2084]              havoc __ret_0_totalSupply;
[L2085]              havoc _owner_s251;
[L2086]              havoc balance_s251;
[L2087]              havoc _to_s172;
[L2088]              havoc _value_s172;
[L2089]              havoc success_s172;
[L2090]              havoc _from_s239;
[L2091]              havoc _to_s239;
[L2092]              havoc _value_s239;
[L2093]              havoc success_s239;
[L2094]              havoc _spender_s279;
[L2095]              havoc _value_s279;
[L2096]              havoc success_s279;
[L2097]              havoc _owner_s295;
[L2098]              havoc _spender_s295;
[L2099]              havoc remaining_s295;
[L2100]              havoc arg298_s0;
[L2101]              havoc __ret_0_balances;
[L2102]              havoc arg299_s0;
[L2103]              havoc arg300_s0;
[L2104]              havoc __ret_0_allowed;
[L2105]              havoc __ret_0_name;
[L2106]              havoc __ret_0_decimals;
[L2107]              havoc __ret_0_symbol;
[L2108]              havoc _initialAmount_s131;
[L2109]              havoc _tokenName_s131;
[L2110]              havoc _decimalUnits_s131;
[L2111]              havoc _tokenSymbol_s131;
[L2112]              havoc tmpNow;
[L2113]              havoc gas;
[L2114]              assume gas > 4000000 && gas <= 8000000;
[L2115]              tmpNow := now;
[L2116]              havoc now;
[L2117]              assume now > tmpNow;
[L2118]              assume msgsender_MSG != null;
[L2119]              assume DType[msgsender_MSG] != CSBInterface;
[L2120]              assume DType[msgsender_MSG] != CSB;
[L2121]              Alloc[msgsender_MSG] := true;
[L2122]  COND FALSE  !(choice == 11)
[L2128]  COND FALSE  !(choice == 10)
[L2134]  COND FALSE  !(choice == 9)
[L2141]  COND FALSE  !(choice == 8)
[L2148]  COND TRUE   choice == 7
[L2149]              gas := gas - 21000;
[L2150]  COND TRUE   gas >= 0
[L2151]              assume _value_s279 >= 0 && _value_s279 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2152]              assume msgvalue_MSG == 0;
[L2153]  CALL        call success_s279 := approve~address~uint256_CSB(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s279;
[L3]                 call_approve_CSB0 := true;
[L3]                 call_approve_CSB0 := false;
[L3]                 revert := revert_hold;
[L420]               havoc __exception;
[L421]               revert := false;
[L422]   COND FALSE  !(__exception)
[L444]   CALL        call success_s279 := approve~address~uint256_CSB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L1287]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CSB[this][msgsender_MSG][_spender_s279];
[L1288]              allowed_CSB[this][msgsender_MSG][_spender_s279] := _value_s279;
[L1289]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CSB[this][msgsender_MSG][_spender_s279];
[L1290]              assert { :EventEmitted "Approval_CSB" } true;
[L1291]              success_s279 := true;
[L444]   RET         call success_s279 := approve~address~uint256_CSB__success(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L445]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s279 == true && allowed_CSB[this][msgsender_MSG][_spender_s279] == _value_s279) && totalSupply_CSBInterface[this] == old(totalSupply_CSBInterface[this])) && balances_CSB[this] == old(balances_CSB[this])) && allowed_CSB[this][p1][p2] == old(allowed_CSB[this][p1][p2])) && name_CSB[this] == old(name_CSB[this])) && decimals_CSB[this] == old(decimals_CSB[this])) && symbol_CSB[this] == old(symbol_CSB[this]));
[L3]                 revert := revert_hold;
[L2153]  RET         call success_s279 := approve~address~uint256_CSB(this, msgsender_MSG, msgvalue_MSG, _spender_s279, _value_s279);
[L2213]  RET         call CorralChoice_CSB(this);

[2020-11-25 12:50:47,729 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:50:47,729 INFO  L82        PathProgramCache]: Analyzing trace with hash 623780143, now seen corresponding path program 1 times
[2020-11-25 12:50:47,729 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:50:47,750 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:50:47,807 INFO  L134       CoverageAnalysis]: Checked inductivity of 47 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 47 trivial. 0 not checked.
[2020-11-25 12:50:47,808 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:50:47,808 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 12:50:47,808 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:50:47,808 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 12:50:47,808 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-25 12:50:47,808 INFO  L87              Difference]: Start difference. First operand 811 states and 872 transitions. cyclomatic complexity: 64 Second operand 7 states.
[2020-11-25 12:50:47,919 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:50:47,919 INFO  L93              Difference]: Finished difference Result 465 states and 495 transitions.
[2020-11-25 12:50:47,919 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 12:50:47,919 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 465 states and 495 transitions.
[2020-11-25 12:50:47,920 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 12:50:47,920 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 465 states to 0 states and 0 transitions.
[2020-11-25 12:50:47,920 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 12:50:47,920 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 12:50:47,921 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 12:50:47,921 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:50:47,921 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 12:50:47,921 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 12:50:47,921 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 12:50:47,921 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 12:50:47,921 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 12:50:47,921 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 12:50:47,921 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 12:50:47,924 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:50:47 BasicIcfg
[2020-11-25 12:50:47,924 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 12:50:47,924 INFO  L168              Benchmark]: Toolchain (without parser) took 4173.22 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 298.3 MB). Free memory was 951.3 MB in the beginning and 821.3 MB in the end (delta: 130.0 MB). Peak memory consumption was 428.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:47,925 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:50:47,925 INFO  L168              Benchmark]: Boogie Preprocessor took 74.90 ms. Allocated memory is still 1.0 GB. Free memory was 951.3 MB in the beginning and 940.6 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:47,926 INFO  L168              Benchmark]: UtopiaSpecLang took 47.50 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:47,926 INFO  L168              Benchmark]: Boogie Printer took 10.27 ms. Allocated memory is still 1.0 GB. Free memory is still 935.2 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:50:47,926 INFO  L168              Benchmark]: RCFGBuilder took 516.15 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 876.1 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:47,926 INFO  L168              Benchmark]: UtopiaLTL2Aut took 44.82 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:47,927 INFO  L168              Benchmark]: BÃ¼chi Program Product took 938.28 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.1 MB). Free memory was 872.6 MB in the beginning and 887.2 MB in the end (delta: -14.6 MB). Peak memory consumption was 157.2 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:47,927 INFO  L168              Benchmark]: BlockEncodingV2 took 68.94 ms. Allocated memory is still 1.1 GB. Free memory was 887.2 MB in the beginning and 849.1 MB in the end (delta: 38.1 MB). Peak memory consumption was 38.1 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:47,927 INFO  L168              Benchmark]: BuchiAutomizer took 2469.53 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 241.2 MB). Free memory was 849.1 MB in the beginning and 821.3 MB in the end (delta: 27.8 MB). Peak memory consumption was 269.0 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:47,930 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1832 locations, 3064 edges
  - StatisticsResult: Encoded RCFG
    1814 locations, 3021 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 74.90 ms. Allocated memory is still 1.0 GB. Free memory was 951.3 MB in the beginning and 940.6 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 47.50 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.27 ms. Allocated memory is still 1.0 GB. Free memory is still 935.2 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 516.15 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 876.1 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 44.82 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 938.28 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.1 MB). Free memory was 872.6 MB in the beginning and 887.2 MB in the end (delta: -14.6 MB). Peak memory consumption was 157.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 68.94 ms. Allocated memory is still 1.1 GB. Free memory was 887.2 MB in the beginning and 849.1 MB in the end (delta: 38.1 MB). Peak memory consumption was 38.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2469.53 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 241.2 MB). Free memory was 849.1 MB in the beginning and 821.3 MB in the end (delta: 27.8 MB). Peak memory consumption was 269.0 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    792 locations, 954 edges
  - StatisticsResult: BuchiProgram size
    1832 locations, 3064 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 13 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.4s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.3s. Construction of modules took 1.1s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1097 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1506 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 6747 SDtfs, 7282 SDslu, 10380 SDs, 0 SdLazy, 10709 SolverSat, 1291 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.1s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_approve_CS(success_approve_CSB0)0) ==> ( <>(success_approve_CSB0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
