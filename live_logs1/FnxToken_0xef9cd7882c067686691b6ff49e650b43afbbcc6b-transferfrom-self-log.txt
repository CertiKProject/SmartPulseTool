This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 16:50:37,833 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 16:50:37,834 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 16:50:37,848 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 16:50:37,849 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 16:50:37,850 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 16:50:37,852 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 16:50:37,855 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 16:50:37,856 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 16:50:37,857 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 16:50:37,858 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 16:50:37,858 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 16:50:37,859 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 16:50:37,860 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 16:50:37,860 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 16:50:37,861 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 16:50:37,862 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 16:50:37,863 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 16:50:37,864 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 16:50:37,866 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 16:50:37,866 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 16:50:37,867 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 16:50:37,869 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 16:50:37,869 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 16:50:37,869 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 16:50:37,870 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 16:50:37,870 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 16:50:37,871 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 16:50:37,871 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 16:50:37,871 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 16:50:37,872 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 16:50:37,872 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 16:50:37,873 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 16:50:37,874 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 16:50:37,874 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 16:50:37,874 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 16:50:37,875 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 16:50:37,875 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 16:50:37,875 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 16:50:37,876 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 16:50:37,876 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 16:50:37,877 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 16:50:37,885 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 16:50:37,885 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 16:50:37,886 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 16:50:37,886 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 16:50:37,886 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 16:50:37,886 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 16:50:37,886 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 16:50:37,887 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 16:50:37,887 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 16:50:37,887 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 16:50:37,887 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 16:50:37,887 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 16:50:37,887 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 16:50:37,887 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 16:50:37,887 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 16:50:37,887 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 16:50:37,888 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 16:50:37,888 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 16:50:37,888 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 16:50:37,888 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 16:50:37,888 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 16:50:37,888 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 16:50:37,888 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 16:50:37,888 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 16:50:37,888 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 16:50:37,888 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 16:50:37,912 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 16:50:37,924 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 16:50:37,926 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 16:50:37,927 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 16:50:37,928 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 16:50:37,928 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl
[2020-11-25 16:50:37,928 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl'
[2020-11-25 16:50:38,010 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 16:50:38,012 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 16:50:38,012 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 16:50:38,012 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 16:50:38,012 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 16:50:38,029 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:50:38" (1/1) ...
[2020-11-25 16:50:38,031 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:50:38" (1/1) ...
[2020-11-25 16:50:38,067 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:50:38" (1/1) ...
[2020-11-25 16:50:38,068 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:50:38" (1/1) ...
[2020-11-25 16:50:38,092 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:50:38" (1/1) ...
[2020-11-25 16:50:38,104 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:50:38" (1/1) ...
[2020-11-25 16:50:38,117 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:50:38" (1/1) ...
[2020-11-25 16:50:38,127 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 16:50:38,127 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 16:50:38,128 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 16:50:38,130 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 16:50:38,133 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:50:38" (1/1) ...
[2020-11-25 16:50:38,154 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && _name_FnxToken[this] == old(_name_FnxToken[this]) && _symbol_FnxToken[this] == old(_symbol_FnxToken[this]) && _decimals_FnxToken[this] == old(_decimals_FnxToken[this]) && MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this] == old(MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 16:50:38,160 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && _name_FnxToken[this] == old(_name_FnxToken[this]) && _symbol_FnxToken[this] == old(_symbol_FnxToken[this]) && _decimals_FnxToken[this] == old(_decimals_FnxToken[this]) && MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this] == old(MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 16:50:38,168 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && _name_FnxToken[this] == old(_name_FnxToken[this]) && _symbol_FnxToken[this] == old(_symbol_FnxToken[this]) && _decimals_FnxToken[this] == old(_decimals_FnxToken[this]) && MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this] == old(MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 16:50:38,176 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s410 || p2!=msg.sender ) && from_s410==to_s410 ) && value_s410<=_balances_ERC20[this][from_s410] ) && value_s410<=_allowed_ERC20[this][from_s410][msg.sender] ) && value_s410>=0 ) && value_s410<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s410]>=0 ) && _balances_ERC20[this][to_s410]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][from_s410]>=0 ) && _balances_ERC20[this][from_s410]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_ERC20[this][from_s410][msg.sender]>=0 ) && _allowed_ERC20[this][from_s410][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s410,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[COMPEQ,IdentifierExpression[from_s410,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IdentifierExpression[to_s410,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s410,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s410,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s410,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s410,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s410,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s410,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[to_s410,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[to_s410,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s410,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s410,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s410,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s410,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 16:50:38,179 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( __ret_0_==true && _allowed_ERC20[this][from_s410][msg.sender]==( ( old(_allowed_ERC20[this][from_s410][msg.sender]) ) - value_s410 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowed_ERC20[this][p1][p2]==( old(_allowed_ERC20[this][p1][p2]) ) ) && _name_FnxToken[this]==( old(_name_FnxToken[this]) ) ) && _symbol_FnxToken[this]==( old(_symbol_FnxToken[this]) ) ) && _decimals_FnxToken[this]==( old(_decimals_FnxToken[this]) ) ) && MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this]==( old(MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s410,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s410,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[value_s410,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_FnxToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_FnxToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_FnxToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_FnxToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_FnxToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_FnxToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[MAX_TOTAL_TOKEN_AMOUNT_FnxToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[MAX_TOTAL_TOKEN_AMOUNT_FnxToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]]
[2020-11-25 16:50:38,186 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && _name_FnxToken[this] == old(_name_FnxToken[this]) && _symbol_FnxToken[this] == old(_symbol_FnxToken[this]) && _decimals_FnxToken[this] == old(_decimals_FnxToken[this]) && MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this] == old(MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 16:50:38,186 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ERC200) ==> ( <>AP(success_transferFrom_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 16:50:38,197 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:50:38 PropertyContainer
[2020-11-25 16:50:38,197 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 16:50:38,197 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 16:50:38,197 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 16:50:38,197 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 16:50:38,198 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:50:38" (1/2) ...
[2020-11-25 16:50:38,199 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 16:50:38,199 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 16:50:38,215 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:50:38" (2/2) ...
[2020-11-25 16:50:38,215 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 16:50:38,215 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 16:50:38,216 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 16:50:38,216 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 16:50:38,216 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:50:38" (1/2) ...
[2020-11-25 16:50:38,273 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 16:50:38,273 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 16:50:38,273 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 16:50:38,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 16:50:38,273 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 16:50:38,274 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 16:50:38,274 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 16:50:38,274 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 16:50:38,274 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 16:50:38,274 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 16:50:38,274 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:50:38,274 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 16:50:38,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 16:50:38,274 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:50:38,274 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:50:38,275 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 16:50:38,275 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:50:38,275 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:50:38,276 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 16:50:38,276 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 16:50:38,276 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 16:50:38,276 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 16:50:38,276 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 16:50:38,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 16:50:38,276 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 16:50:38,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 16:50:38,276 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 16:50:38,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 16:50:38,277 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 16:50:38,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 16:50:38,277 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 16:50:38,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 16:50:38,277 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 16:50:38,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 16:50:38,277 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 16:50:38,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 16:50:38,277 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 16:50:38,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 16:50:38,278 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 16:50:38,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 16:50:38,278 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 16:50:38,278 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 16:50:38,278 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 16:50:38,278 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 16:50:38,278 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 16:50:38,278 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 16:50:38,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 16:50:38,278 INFO  L130     BoogieDeclarations]: Found specification of procedure changeOwner~address_Owned
[2020-11-25 16:50:38,279 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeOwner~address_Owned
[2020-11-25 16:50:38,279 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 16:50:38,279 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 16:50:38,279 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 16:50:38,279 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 16:50:38,279 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 16:50:38,279 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 16:50:38,279 INFO  L130     BoogieDeclarations]: Found specification of procedure FnxToken_FnxToken_NoBaseCtor__success
[2020-11-25 16:50:38,279 INFO  L130     BoogieDeclarations]: Found specification of procedure FnxToken_FnxToken
[2020-11-25 16:50:38,279 INFO  L138     BoogieDeclarations]: Found implementation of procedure FnxToken_FnxToken
[2020-11-25 16:50:38,279 INFO  L130     BoogieDeclarations]: Found specification of procedure name_FnxToken
[2020-11-25 16:50:38,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_FnxToken
[2020-11-25 16:50:38,280 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_FnxToken
[2020-11-25 16:50:38,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_FnxToken
[2020-11-25 16:50:38,280 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_FnxToken
[2020-11-25 16:50:38,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_FnxToken
[2020-11-25 16:50:38,280 INFO  L130     BoogieDeclarations]: Found specification of procedure changeTokenName~string~string_FnxToken
[2020-11-25 16:50:38,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeTokenName~string~string_FnxToken
[2020-11-25 16:50:38,280 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_FnxToken
[2020-11-25 16:50:38,280 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_FnxToken
[2020-11-25 16:50:38,280 INFO  L130     BoogieDeclarations]: Found specification of procedure MAX_TOTAL_TOKEN_AMOUNT_FnxToken
[2020-11-25 16:50:38,281 INFO  L138     BoogieDeclarations]: Found implementation of procedure MAX_TOTAL_TOKEN_AMOUNT_FnxToken
[2020-11-25 16:50:38,281 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 16:50:38,281 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 16:50:38,281 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 16:50:38,281 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 16:50:38,281 INFO  L130     BoogieDeclarations]: Found specification of procedure maxWanTokenAmountNotReached_pre__success
[2020-11-25 16:50:38,281 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 16:50:38,281 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 16:50:38,281 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 16:50:38,281 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 16:50:38,282 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 16:50:38,282 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 16:50:38,282 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 16:50:38,282 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 16:50:38,282 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_FnxToken
[2020-11-25 16:50:38,282 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 16:50:38,282 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 16:50:38,282 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 16:50:38,282 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 16:50:38,282 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 16:50:38,283 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:50:38,283 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 16:50:38,283 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 16:50:38,283 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:50:38,283 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:50:38,283 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 16:50:38,283 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:50:38,283 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:50:38,283 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 16:50:38,283 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 16:50:38,284 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 16:50:38,284 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 16:50:38,284 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 16:50:38,284 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 16:50:38,284 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 16:50:38,284 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 16:50:38,284 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 16:50:38,284 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 16:50:38,284 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 16:50:38,285 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 16:50:38,285 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 16:50:38,285 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 16:50:38,285 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 16:50:38,285 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 16:50:38,285 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 16:50:38,285 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 16:50:38,285 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:50:38,285 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:50:38,285 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:50:38,285 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:50:38,286 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 16:50:38,286 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 16:50:38,286 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 16:50:38,286 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 16:50:38,286 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 16:50:38,286 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 16:50:38,286 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 16:50:38,286 INFO  L130     BoogieDeclarations]: Found specification of procedure changeOwner~address_Owned__success
[2020-11-25 16:50:38,286 INFO  L130     BoogieDeclarations]: Found specification of procedure changeOwner~address_Owned__fail
[2020-11-25 16:50:38,286 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 16:50:38,286 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 16:50:38,286 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 16:50:38,286 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 16:50:38,287 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 16:50:38,287 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 16:50:38,287 INFO  L130     BoogieDeclarations]: Found specification of procedure FnxToken_FnxToken_NoBaseCtor__fail
[2020-11-25 16:50:38,287 INFO  L130     BoogieDeclarations]: Found specification of procedure FnxToken_FnxToken__success
[2020-11-25 16:50:38,287 INFO  L130     BoogieDeclarations]: Found specification of procedure FnxToken_FnxToken__fail
[2020-11-25 16:50:38,287 INFO  L130     BoogieDeclarations]: Found specification of procedure name_FnxToken__success
[2020-11-25 16:50:38,287 INFO  L130     BoogieDeclarations]: Found specification of procedure name_FnxToken__fail
[2020-11-25 16:50:38,287 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_FnxToken__success
[2020-11-25 16:50:38,287 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_FnxToken__fail
[2020-11-25 16:50:38,287 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_FnxToken__success
[2020-11-25 16:50:38,287 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_FnxToken__fail
[2020-11-25 16:50:38,288 INFO  L130     BoogieDeclarations]: Found specification of procedure changeTokenName~string~string_FnxToken__success
[2020-11-25 16:50:38,288 INFO  L130     BoogieDeclarations]: Found specification of procedure changeTokenName~string~string_FnxToken__fail
[2020-11-25 16:50:38,288 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_FnxToken__success
[2020-11-25 16:50:38,288 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_FnxToken__fail
[2020-11-25 16:50:38,288 INFO  L130     BoogieDeclarations]: Found specification of procedure MAX_TOTAL_TOKEN_AMOUNT_FnxToken__success
[2020-11-25 16:50:38,288 INFO  L130     BoogieDeclarations]: Found specification of procedure MAX_TOTAL_TOKEN_AMOUNT_FnxToken__fail
[2020-11-25 16:50:38,288 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 16:50:38,288 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 16:50:38,288 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 16:50:38,288 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 16:50:38,288 INFO  L130     BoogieDeclarations]: Found specification of procedure maxWanTokenAmountNotReached_pre__fail
[2020-11-25 16:50:38,288 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 16:50:38,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 16:50:38,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 16:50:38,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 16:50:38,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 16:50:38,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 16:50:38,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:50:38,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:50:38,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 16:50:38,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 16:50:38,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:50:38,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:50:38,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:50:38,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:50:38,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 16:50:38,290 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 16:50:38,290 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:50:38,290 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:50:38,290 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:50:38,290 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:50:38,290 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 16:50:38,290 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 16:50:38,290 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 16:50:38,290 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 16:50:38,290 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 16:50:38,290 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 16:50:38,291 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 16:50:38,291 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 16:50:38,291 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 16:50:38,291 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 16:50:38,291 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 16:50:38,291 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 16:50:38,291 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 16:50:38,291 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 16:50:38,291 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 16:50:38,291 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 16:50:38,291 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 16:50:38,292 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 16:50:38,292 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 16:50:38,292 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 16:50:38,292 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 16:50:38,292 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 16:50:38,292 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:50:38,292 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:50:38,292 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:50:38,292 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:50:38,292 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 16:50:38,292 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 16:50:38,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 16:50:38,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 16:50:38,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 16:50:38,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 16:50:38,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 16:50:38,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 16:50:38,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 16:50:38,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 16:50:38,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 16:50:38,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 16:50:38,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeOwner~address_Owned__fail
[2020-11-25 16:50:38,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeOwner~address_Owned__success
[2020-11-25 16:50:38,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 16:50:38,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 16:50:38,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 16:50:38,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 16:50:38,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 16:50:38,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 16:50:38,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure FnxToken_FnxToken_NoBaseCtor__fail
[2020-11-25 16:50:38,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure FnxToken_FnxToken_NoBaseCtor__success
[2020-11-25 16:50:38,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure FnxToken_FnxToken__fail
[2020-11-25 16:50:38,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure FnxToken_FnxToken__success
[2020-11-25 16:50:38,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_FnxToken__fail
[2020-11-25 16:50:38,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_FnxToken__success
[2020-11-25 16:50:38,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_FnxToken__fail
[2020-11-25 16:50:38,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_FnxToken__success
[2020-11-25 16:50:38,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_FnxToken__fail
[2020-11-25 16:50:38,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_FnxToken__success
[2020-11-25 16:50:38,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeTokenName~string~string_FnxToken__fail
[2020-11-25 16:50:38,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeTokenName~string~string_FnxToken__success
[2020-11-25 16:50:38,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_FnxToken__fail
[2020-11-25 16:50:38,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_FnxToken__success
[2020-11-25 16:50:38,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure MAX_TOTAL_TOKEN_AMOUNT_FnxToken__fail
[2020-11-25 16:50:38,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure MAX_TOTAL_TOKEN_AMOUNT_FnxToken__success
[2020-11-25 16:50:38,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 16:50:38,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 16:50:38,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 16:50:38,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 16:50:38,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 16:50:38,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 16:50:38,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 16:50:38,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 16:50:38,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure maxWanTokenAmountNotReached_pre__fail
[2020-11-25 16:50:38,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure maxWanTokenAmountNotReached_pre__success
[2020-11-25 16:50:38,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 16:50:38,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 16:50:38,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 16:50:38,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 16:50:38,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 16:50:38,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 16:50:38,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 16:50:38,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 16:50:38,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_FnxToken
[2020-11-25 16:50:38,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 16:50:38,297 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 16:50:38,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 16:50:38,727 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:50:38,728 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:50:38,728 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:50:38,830 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:50:39,040 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 16:50:39,041 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 16:50:39,044 INFO  L202        PluginConnector]: Adding new model FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:50:39 BoogieIcfgContainer
[2020-11-25 16:50:39,044 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:50:38" (2/2) ...
[2020-11-25 16:50:39,044 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 16:50:39,045 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@59a2ee8c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:50:39, skipping insertion in model container
[2020-11-25 16:50:39,045 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 16:50:39,045 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 16:50:39,045 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 16:50:39,047 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 16:50:39,047 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:50:38" (1/3) ...
[2020-11-25 16:50:39,047 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@634024b4 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:50:39, skipping insertion in model container
[2020-11-25 16:50:39,047 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:50:38" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 16:50:39,088 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:50:39 NWAContainer
[2020-11-25 16:50:39,089 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 16:50:39,089 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 16:50:39,089 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 16:50:39,090 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 16:50:39,090 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:50:39" (3/4) ...
[2020-11-25 16:50:39,091 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@60c5840a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:50:39, skipping insertion in model container
[2020-11-25 16:50:39,091 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:50:39" (4/4) ...
[2020-11-25 16:50:39,095 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 16:50:39,099 INFO  L110   BuchiProductObserver]: Initial RCFG 1562 locations, 2062 edges
[2020-11-25 16:50:39,099 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 16:50:39,111 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 16:50:40,357 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 16:50:40,362 INFO  L110   BuchiProductObserver]: BuchiProgram size 3842 locations, 6759 edges
[2020-11-25 16:50:40,362 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:50:40 BoogieIcfgContainer
[2020-11-25 16:50:40,362 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 16:50:40,363 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 16:50:40,363 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 16:50:40,364 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 16:50:40,365 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:50:40" (1/1) ...
[2020-11-25 16:50:40,427 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_2 := div~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s186, b_s186, -1820858731);
[2020-11-25 16:50:40,428 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_19 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][account_s680][msgsender_MSG], value_s680);
[2020-11-25 16:50:40,428 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_3 := mod~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s229, b_s229, -1950754390);
[2020-11-25 16:50:40,429 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_3 := mod~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s229, b_s229, -1950754390);
[2020-11-25 16:50:40,430 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_2 := div~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s186, b_s186, -1820858731);
[2020-11-25 16:50:40,431 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_19 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][account_s680][msgsender_MSG], value_s680);
[2020-11-25 16:50:40,441 INFO  L313           BlockEncoder]: Initial Icfg 3842 locations, 6759 edges
[2020-11-25 16:50:40,441 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 16:50:40,442 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 16:50:40,442 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 16:50:40,442 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 16:50:40,453 INFO  L70    emoveInfeasibleEdges]: Removed 90 edges and 13 locations because of local infeasibility
[2020-11-25 16:50:40,461 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-25 16:50:40,473 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 16:50:40,476 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 16:50:40,479 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 16:50:40,479 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 16:50:40,483 INFO  L313           BlockEncoder]: Encoded RCFG 3782 locations, 6599 edges
[2020-11-25 16:50:40,484 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:50:40 BasicIcfg
[2020-11-25 16:50:40,484 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 16:50:40,484 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 16:50:40,484 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 16:50:40,486 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 16:50:40,486 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:50:40,486 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:50:38" (1/6) ...
[2020-11-25 16:50:40,488 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@44936ec3 and model type FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:50:40, skipping insertion in model container
[2020-11-25 16:50:40,488 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:50:40,488 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:50:38" (2/6) ...
[2020-11-25 16:50:40,488 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@44936ec3 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:50:40, skipping insertion in model container
[2020-11-25 16:50:40,488 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:50:40,488 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:50:39" (3/6) ...
[2020-11-25 16:50:40,489 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@44936ec3 and model type FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:50:40, skipping insertion in model container
[2020-11-25 16:50:40,489 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:50:40,489 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:50:39" (4/6) ...
[2020-11-25 16:50:40,489 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@44936ec3 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:50:40, skipping insertion in model container
[2020-11-25 16:50:40,489 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:50:40,489 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:50:40" (5/6) ...
[2020-11-25 16:50:40,489 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@44936ec3 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 04:50:40, skipping insertion in model container
[2020-11-25 16:50:40,489 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:50:40,489 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:50:40" (6/6) ...
[2020-11-25 16:50:40,490 INFO  L404   chiAutomizerObserver]: Analyzing ICFG FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transferfrom-self.bpl_BEv2
[2020-11-25 16:50:40,521 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 16:50:40,521 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 16:50:40,521 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 16:50:40,521 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 16:50:40,521 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 16:50:40,521 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 16:50:40,521 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 16:50:40,521 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 16:50:40,521 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 16:50:40,551 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3782 states.
[2020-11-25 16:50:40,598 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:50:40,599 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:50:40,599 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:50:40,608 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:50:40,608 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:50:40,608 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 16:50:40,608 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3782 states.
[2020-11-25 16:50:40,628 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:50:40,628 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:50:40,628 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:50:40,630 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:50:40,630 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4427]              assume null == 0;
[L4428]  CALL        call this := FreshRefGenerator__success();
[L2001]              havoc newRef;
[L2002]              assume Alloc[newRef] == false;
[L2003]              Alloc[newRef] := true;
[L2004]              assume newRef != null;
[L4428]  RET         call this := FreshRefGenerator__success();
[L4429]              assume now >= 0;
[L4430]              assume DType[this] == FnxToken;
[L4431]              assume msgvalue_MSG == 0;
[L4432]              gas := gas - 53000;
[L4433]  CALL        call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2895]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2769]              assume msgsender_MSG != null;
[L2770]              Balance[this] := 0;
[L2771]              owner_Owned[this] := null;
[L2772]              newOwner_Owned[this] := null;
[L2774]              owner_Owned[this] := msgsender_MSG;
[L2787]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2788]  COND FALSE  !(revert)
[L2895]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2896]  COND TRUE   revert
[L4433]  RET         call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4434]              assume !revert && gas >= 0;

Loop:
[L4437]  CALL        call CorralChoice_FnxToken(this);
[L4256]              havoc msgsender_MSG;
[L4257]              havoc msgvalue_MSG;
[L4258]              havoc choice;
[L4259]              havoc to_s325;
[L4260]              havoc value_s325;
[L4261]              havoc __ret_0_transfer;
[L4262]              havoc spender_s361;
[L4263]              havoc value_s361;
[L4264]              havoc __ret_0_approve;
[L4265]              havoc from_s410;
[L4266]              havoc to_s410;
[L4267]              havoc value_s410;
[L4268]              havoc __ret_0_transferFrom;
[L4269]              havoc __ret_0_totalSupply;
[L4270]              havoc owner_s290;
[L4271]              havoc __ret_0_balanceOf;
[L4272]              havoc owner_s306;
[L4273]              havoc spender_s306;
[L4274]              havoc __ret_0_allowance;
[L4275]              havoc spender_s459;
[L4276]              havoc addedValue_s459;
[L4277]              havoc __ret_0_increaseAllowance;
[L4278]              havoc spender_s508;
[L4279]              havoc subtractedValue_s508;
[L4280]              havoc __ret_0_decreaseAllowance;
[L4281]              havoc __ret_0_owner;
[L4282]              havoc __ret_0_newOwner;
[L4283]              havoc _newOwner_s717;
[L4284]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4285]              havoc __ret_0_name;
[L4286]              havoc __ret_0_symbol;
[L4287]              havoc __ret_0_decimals;
[L4288]              havoc newName_s809;
[L4289]              havoc newSymbol_s809;
[L4290]              havoc account_s827;
[L4291]              havoc amount_s827;
[L4292]              havoc tmpNow;
[L4293]              havoc gas;
[L4294]              assume gas > 4000000 && gas <= 8000000;
[L4295]              tmpNow := now;
[L4296]              havoc now;
[L4297]              assume now > tmpNow;
[L4298]              assume msgsender_MSG != null;
[L4299]              assume DType[msgsender_MSG] != IERC20;
[L4300]              assume DType[msgsender_MSG] != SafeMath;
[L4301]              assume DType[msgsender_MSG] != ERC20;
[L4302]              assume DType[msgsender_MSG] != Owned;
[L4303]              assume DType[msgsender_MSG] != FnxToken;
[L4304]              Alloc[msgsender_MSG] := true;
[L4305]  COND TRUE   choice == 18
[L4306]              gas := gas - 21000;
[L4307]  COND FALSE  !(gas >= 0)
[L4437]  RET         call CorralChoice_FnxToken(this);

[2020-11-25 16:50:40,643 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:50:40,643 INFO  L82        PathProgramCache]: Analyzing trace with hash -1463881955, now seen corresponding path program 1 times
[2020-11-25 16:50:40,646 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:50:40,663 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:50:40,715 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:50:40,720 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:50:40,720 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 16:50:40,883 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:50:40,898 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 16:50:40,899 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 16:50:40,900 INFO  L87              Difference]: Start difference. First operand 3782 states. Second operand 3 states.
[2020-11-25 16:50:41,095 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:50:41,095 INFO  L93              Difference]: Finished difference Result 2485 states and 2778 transitions.
[2020-11-25 16:50:41,095 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 16:50:41,096 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2485 states and 2778 transitions.
[2020-11-25 16:50:41,109 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:50:41,128 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2485 states to 2483 states and 2774 transitions.
[2020-11-25 16:50:41,129 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 16:50:41,131 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 673
[2020-11-25 16:50:41,131 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2483 states and 2774 transitions.
[2020-11-25 16:50:41,137 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:50:41,137 INFO  L728         BuchiCegarLoop]: Abstraction has 2483 states and 2774 transitions.
[2020-11-25 16:50:41,150 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2483 states and 2774 transitions.
[2020-11-25 16:50:41,199 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2483 to 2483.
[2020-11-25 16:50:41,200 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2483 states.
[2020-11-25 16:50:41,205 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2483 states to 2483 states and 2774 transitions.
[2020-11-25 16:50:41,206 INFO  L751         BuchiCegarLoop]: Abstraction has 2483 states and 2774 transitions.
[2020-11-25 16:50:41,206 INFO  L631         BuchiCegarLoop]: Abstraction has 2483 states and 2774 transitions.
[2020-11-25 16:50:41,207 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 16:50:41,207 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2483 states and 2774 transitions.
[2020-11-25 16:50:41,215 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:50:41,215 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:50:41,215 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:50:41,218 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:50:41,218 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4427]              assume null == 0;
[L4428]  CALL        call this := FreshRefGenerator__success();
[L2001]              havoc newRef;
[L2002]              assume Alloc[newRef] == false;
[L2003]              Alloc[newRef] := true;
[L2004]              assume newRef != null;
[L4428]  RET         call this := FreshRefGenerator__success();
[L4429]              assume now >= 0;
[L4430]              assume DType[this] == FnxToken;
[L4431]              assume msgvalue_MSG == 0;
[L4432]              gas := gas - 53000;
[L4433]  CALL        call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2895]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2769]              assume msgsender_MSG != null;
[L2770]              Balance[this] := 0;
[L2771]              owner_Owned[this] := null;
[L2772]              newOwner_Owned[this] := null;
[L2774]              owner_Owned[this] := msgsender_MSG;
[L2787]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2788]  COND FALSE  !(revert)
[L2895]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2896]  COND TRUE   revert
[L4433]  RET         call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4434]              assume !revert && gas >= 0;
[L4437]  CALL        call CorralChoice_FnxToken(this);
[L4256]              havoc msgsender_MSG;
[L4257]              havoc msgvalue_MSG;
[L4258]              havoc choice;
[L4259]              havoc to_s325;
[L4260]              havoc value_s325;
[L4261]              havoc __ret_0_transfer;
[L4262]              havoc spender_s361;
[L4263]              havoc value_s361;
[L4264]              havoc __ret_0_approve;
[L4265]              havoc from_s410;
[L4266]              havoc to_s410;
[L4267]              havoc value_s410;
[L4268]              havoc __ret_0_transferFrom;
[L4269]              havoc __ret_0_totalSupply;
[L4270]              havoc owner_s290;
[L4271]              havoc __ret_0_balanceOf;
[L4272]              havoc owner_s306;
[L4273]              havoc spender_s306;
[L4274]              havoc __ret_0_allowance;
[L4275]              havoc spender_s459;
[L4276]              havoc addedValue_s459;
[L4277]              havoc __ret_0_increaseAllowance;
[L4278]              havoc spender_s508;
[L4279]              havoc subtractedValue_s508;
[L4280]              havoc __ret_0_decreaseAllowance;
[L4281]              havoc __ret_0_owner;
[L4282]              havoc __ret_0_newOwner;
[L4283]              havoc _newOwner_s717;
[L4284]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4285]              havoc __ret_0_name;
[L4286]              havoc __ret_0_symbol;
[L4287]              havoc __ret_0_decimals;
[L4288]              havoc newName_s809;
[L4289]              havoc newSymbol_s809;
[L4290]              havoc account_s827;
[L4291]              havoc amount_s827;
[L4292]              havoc tmpNow;
[L4293]              havoc gas;
[L4294]              assume gas > 4000000 && gas <= 8000000;
[L4295]              tmpNow := now;
[L4296]              havoc now;
[L4297]              assume now > tmpNow;
[L4298]              assume msgsender_MSG != null;
[L4299]              assume DType[msgsender_MSG] != IERC20;
[L4300]              assume DType[msgsender_MSG] != SafeMath;
[L4301]              assume DType[msgsender_MSG] != ERC20;
[L4302]              assume DType[msgsender_MSG] != Owned;
[L4303]              assume DType[msgsender_MSG] != FnxToken;
[L4304]              Alloc[msgsender_MSG] := true;
[L4305]  COND FALSE  !(choice == 18)
[L4312]  COND FALSE  !(choice == 17)
[L4319]  COND TRUE   choice == 16
[L4320]              gas := gas - 21000;
[L4321]  COND TRUE   gas >= 0
[L4322]              assume value_s410 >= 0 && value_s410 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4323]              assume msgvalue_MSG == 0;
[L4324]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s410 || p2 != msgsender_MSG) && from_s410 == to_s410) && value_s410 <= _balances_ERC20[this][from_s410]) && value_s410 <= _allowed_ERC20[this][from_s410][msgsender_MSG]) && value_s410 >= 0) && value_s410 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s410] >= 0) && _balances_ERC20[this][to_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s410] >= 0) && _balances_ERC20[this][from_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s410][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s410][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L567]               havoc __exception;
[L568]               revert := false;
[L569]   COND FALSE  !(__exception)
[L593]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L2446]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2109]  CALL        call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2132]  COND TRUE   !(b_s136 <= a_s136)
[L2133]              revert := true;
[L2109]  RET         call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2110]  COND TRUE   revert
[L2446]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2447]  COND TRUE   revert
[L593]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L594]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && _allowed_ERC20[this][from_s410][msgsender_MSG] == old(_allowed_ERC20[this][from_s410][msgsender_MSG]) - value_s410) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_FnxToken[this] == old(_name_FnxToken[this])) && _symbol_FnxToken[this] == old(_symbol_FnxToken[this])) && _decimals_FnxToken[this] == old(_decimals_FnxToken[this])) && MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this] == old(MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4324]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L4437]  RET         call CorralChoice_FnxToken(this);

Loop:
[L4437]  CALL        call CorralChoice_FnxToken(this);
[L4256]              havoc msgsender_MSG;
[L4257]              havoc msgvalue_MSG;
[L4258]              havoc choice;
[L4259]              havoc to_s325;
[L4260]              havoc value_s325;
[L4261]              havoc __ret_0_transfer;
[L4262]              havoc spender_s361;
[L4263]              havoc value_s361;
[L4264]              havoc __ret_0_approve;
[L4265]              havoc from_s410;
[L4266]              havoc to_s410;
[L4267]              havoc value_s410;
[L4268]              havoc __ret_0_transferFrom;
[L4269]              havoc __ret_0_totalSupply;
[L4270]              havoc owner_s290;
[L4271]              havoc __ret_0_balanceOf;
[L4272]              havoc owner_s306;
[L4273]              havoc spender_s306;
[L4274]              havoc __ret_0_allowance;
[L4275]              havoc spender_s459;
[L4276]              havoc addedValue_s459;
[L4277]              havoc __ret_0_increaseAllowance;
[L4278]              havoc spender_s508;
[L4279]              havoc subtractedValue_s508;
[L4280]              havoc __ret_0_decreaseAllowance;
[L4281]              havoc __ret_0_owner;
[L4282]              havoc __ret_0_newOwner;
[L4283]              havoc _newOwner_s717;
[L4284]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4285]              havoc __ret_0_name;
[L4286]              havoc __ret_0_symbol;
[L4287]              havoc __ret_0_decimals;
[L4288]              havoc newName_s809;
[L4289]              havoc newSymbol_s809;
[L4290]              havoc account_s827;
[L4291]              havoc amount_s827;
[L4292]              havoc tmpNow;
[L4293]              havoc gas;
[L4294]              assume gas > 4000000 && gas <= 8000000;
[L4295]              tmpNow := now;
[L4296]              havoc now;
[L4297]              assume now > tmpNow;
[L4298]              assume msgsender_MSG != null;
[L4299]              assume DType[msgsender_MSG] != IERC20;
[L4300]              assume DType[msgsender_MSG] != SafeMath;
[L4301]              assume DType[msgsender_MSG] != ERC20;
[L4302]              assume DType[msgsender_MSG] != Owned;
[L4303]              assume DType[msgsender_MSG] != FnxToken;
[L4304]              Alloc[msgsender_MSG] := true;
[L4305]  COND FALSE  !(choice == 18)
[L4312]  COND FALSE  !(choice == 17)
[L4319]  COND TRUE   choice == 16
[L4320]              gas := gas - 21000;
[L4321]  COND TRUE   gas >= 0
[L4322]              assume value_s410 >= 0 && value_s410 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4323]              assume msgvalue_MSG == 0;
[L4324]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s410 || p2 != msgsender_MSG) && from_s410 == to_s410) && value_s410 <= _balances_ERC20[this][from_s410]) && value_s410 <= _allowed_ERC20[this][from_s410][msgsender_MSG]) && value_s410 >= 0) && value_s410 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s410] >= 0) && _balances_ERC20[this][to_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s410] >= 0) && _balances_ERC20[this][from_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s410][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s410][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L567]               havoc __exception;
[L568]               revert := false;
[L569]   COND FALSE  !(__exception)
[L593]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L2446]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2109]  CALL        call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2132]  COND TRUE   !(b_s136 <= a_s136)
[L2133]              revert := true;
[L2109]  RET         call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2110]  COND TRUE   revert
[L2446]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2447]  COND TRUE   revert
[L593]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L594]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && _allowed_ERC20[this][from_s410][msgsender_MSG] == old(_allowed_ERC20[this][from_s410][msgsender_MSG]) - value_s410) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_FnxToken[this] == old(_name_FnxToken[this])) && _symbol_FnxToken[this] == old(_symbol_FnxToken[this])) && _decimals_FnxToken[this] == old(_decimals_FnxToken[this])) && MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this] == old(MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4324]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L4437]  RET         call CorralChoice_FnxToken(this);

[2020-11-25 16:50:41,222 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:50:41,222 INFO  L82        PathProgramCache]: Analyzing trace with hash 1139010462, now seen corresponding path program 1 times
[2020-11-25 16:50:41,224 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:50:41,237 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:50:41,261 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:50:41,261 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:50:41,261 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 16:50:41,263 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:50:41,263 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 16:50:41,263 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 16:50:41,263 INFO  L87              Difference]: Start difference. First operand 2483 states and 2774 transitions. cyclomatic complexity: 293 Second operand 3 states.
[2020-11-25 16:50:41,345 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:50:41,345 INFO  L93              Difference]: Finished difference Result 3275 states and 3734 transitions.
[2020-11-25 16:50:41,346 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 16:50:41,346 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3275 states and 3734 transitions.
[2020-11-25 16:50:41,362 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:50:41,381 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3275 states to 3275 states and 3734 transitions.
[2020-11-25 16:50:41,381 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 896
[2020-11-25 16:50:41,383 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 896
[2020-11-25 16:50:41,383 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3275 states and 3734 transitions.
[2020-11-25 16:50:41,389 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:50:41,389 INFO  L728         BuchiCegarLoop]: Abstraction has 3275 states and 3734 transitions.
[2020-11-25 16:50:41,392 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3275 states and 3734 transitions.
[2020-11-25 16:50:41,425 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3275 to 2687.
[2020-11-25 16:50:41,426 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2687 states.
[2020-11-25 16:50:41,431 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2687 states to 2687 states and 3012 transitions.
[2020-11-25 16:50:41,431 INFO  L751         BuchiCegarLoop]: Abstraction has 2687 states and 3012 transitions.
[2020-11-25 16:50:41,431 INFO  L631         BuchiCegarLoop]: Abstraction has 2687 states and 3012 transitions.
[2020-11-25 16:50:41,431 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 16:50:41,431 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2687 states and 3012 transitions.
[2020-11-25 16:50:41,438 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:50:41,438 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:50:41,438 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:50:41,440 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:50:41,440 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4427]              assume null == 0;
[L4428]  CALL        call this := FreshRefGenerator__success();
[L2001]              havoc newRef;
[L2002]              assume Alloc[newRef] == false;
[L2003]              Alloc[newRef] := true;
[L2004]              assume newRef != null;
[L4428]  RET         call this := FreshRefGenerator__success();
[L4429]              assume now >= 0;
[L4430]              assume DType[this] == FnxToken;
[L4431]              assume msgvalue_MSG == 0;
[L4432]              gas := gas - 53000;
[L4433]  CALL        call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2895]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2769]              assume msgsender_MSG != null;
[L2770]              Balance[this] := 0;
[L2771]              owner_Owned[this] := null;
[L2772]              newOwner_Owned[this] := null;
[L2774]              owner_Owned[this] := msgsender_MSG;
[L2787]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2788]  COND TRUE   revert
[L2895]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2896]  COND TRUE   revert
[L4433]  RET         call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4434]              assume !revert && gas >= 0;
[L4437]  CALL        call CorralChoice_FnxToken(this);
[L4256]              havoc msgsender_MSG;
[L4257]              havoc msgvalue_MSG;
[L4258]              havoc choice;
[L4259]              havoc to_s325;
[L4260]              havoc value_s325;
[L4261]              havoc __ret_0_transfer;
[L4262]              havoc spender_s361;
[L4263]              havoc value_s361;
[L4264]              havoc __ret_0_approve;
[L4265]              havoc from_s410;
[L4266]              havoc to_s410;
[L4267]              havoc value_s410;
[L4268]              havoc __ret_0_transferFrom;
[L4269]              havoc __ret_0_totalSupply;
[L4270]              havoc owner_s290;
[L4271]              havoc __ret_0_balanceOf;
[L4272]              havoc owner_s306;
[L4273]              havoc spender_s306;
[L4274]              havoc __ret_0_allowance;
[L4275]              havoc spender_s459;
[L4276]              havoc addedValue_s459;
[L4277]              havoc __ret_0_increaseAllowance;
[L4278]              havoc spender_s508;
[L4279]              havoc subtractedValue_s508;
[L4280]              havoc __ret_0_decreaseAllowance;
[L4281]              havoc __ret_0_owner;
[L4282]              havoc __ret_0_newOwner;
[L4283]              havoc _newOwner_s717;
[L4284]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4285]              havoc __ret_0_name;
[L4286]              havoc __ret_0_symbol;
[L4287]              havoc __ret_0_decimals;
[L4288]              havoc newName_s809;
[L4289]              havoc newSymbol_s809;
[L4290]              havoc account_s827;
[L4291]              havoc amount_s827;
[L4292]              havoc tmpNow;
[L4293]              havoc gas;
[L4294]              assume gas > 4000000 && gas <= 8000000;
[L4295]              tmpNow := now;
[L4296]              havoc now;
[L4297]              assume now > tmpNow;
[L4298]              assume msgsender_MSG != null;
[L4299]              assume DType[msgsender_MSG] != IERC20;
[L4300]              assume DType[msgsender_MSG] != SafeMath;
[L4301]              assume DType[msgsender_MSG] != ERC20;
[L4302]              assume DType[msgsender_MSG] != Owned;
[L4303]              assume DType[msgsender_MSG] != FnxToken;
[L4304]              Alloc[msgsender_MSG] := true;
[L4305]  COND FALSE  !(choice == 18)
[L4312]  COND FALSE  !(choice == 17)
[L4319]  COND TRUE   choice == 16
[L4320]              gas := gas - 21000;
[L4321]  COND TRUE   gas >= 0
[L4322]              assume value_s410 >= 0 && value_s410 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4323]              assume msgvalue_MSG == 0;
[L4324]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s410 || p2 != msgsender_MSG) && from_s410 == to_s410) && value_s410 <= _balances_ERC20[this][from_s410]) && value_s410 <= _allowed_ERC20[this][from_s410][msgsender_MSG]) && value_s410 >= 0) && value_s410 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s410] >= 0) && _balances_ERC20[this][to_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s410] >= 0) && _balances_ERC20[this][from_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s410][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s410][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L567]               havoc __exception;
[L568]               revert := false;
[L569]   COND FALSE  !(__exception)
[L593]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L2446]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2109]  CALL        call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2132]  COND TRUE   !(b_s136 <= a_s136)
[L2133]              revert := true;
[L2109]  RET         call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2110]  COND TRUE   revert
[L2446]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2447]  COND TRUE   revert
[L593]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L594]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && _allowed_ERC20[this][from_s410][msgsender_MSG] == old(_allowed_ERC20[this][from_s410][msgsender_MSG]) - value_s410) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_FnxToken[this] == old(_name_FnxToken[this])) && _symbol_FnxToken[this] == old(_symbol_FnxToken[this])) && _decimals_FnxToken[this] == old(_decimals_FnxToken[this])) && MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this] == old(MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4324]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L4437]  RET         call CorralChoice_FnxToken(this);

Loop:
[L4437]  CALL        call CorralChoice_FnxToken(this);
[L4256]              havoc msgsender_MSG;
[L4257]              havoc msgvalue_MSG;
[L4258]              havoc choice;
[L4259]              havoc to_s325;
[L4260]              havoc value_s325;
[L4261]              havoc __ret_0_transfer;
[L4262]              havoc spender_s361;
[L4263]              havoc value_s361;
[L4264]              havoc __ret_0_approve;
[L4265]              havoc from_s410;
[L4266]              havoc to_s410;
[L4267]              havoc value_s410;
[L4268]              havoc __ret_0_transferFrom;
[L4269]              havoc __ret_0_totalSupply;
[L4270]              havoc owner_s290;
[L4271]              havoc __ret_0_balanceOf;
[L4272]              havoc owner_s306;
[L4273]              havoc spender_s306;
[L4274]              havoc __ret_0_allowance;
[L4275]              havoc spender_s459;
[L4276]              havoc addedValue_s459;
[L4277]              havoc __ret_0_increaseAllowance;
[L4278]              havoc spender_s508;
[L4279]              havoc subtractedValue_s508;
[L4280]              havoc __ret_0_decreaseAllowance;
[L4281]              havoc __ret_0_owner;
[L4282]              havoc __ret_0_newOwner;
[L4283]              havoc _newOwner_s717;
[L4284]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4285]              havoc __ret_0_name;
[L4286]              havoc __ret_0_symbol;
[L4287]              havoc __ret_0_decimals;
[L4288]              havoc newName_s809;
[L4289]              havoc newSymbol_s809;
[L4290]              havoc account_s827;
[L4291]              havoc amount_s827;
[L4292]              havoc tmpNow;
[L4293]              havoc gas;
[L4294]              assume gas > 4000000 && gas <= 8000000;
[L4295]              tmpNow := now;
[L4296]              havoc now;
[L4297]              assume now > tmpNow;
[L4298]              assume msgsender_MSG != null;
[L4299]              assume DType[msgsender_MSG] != IERC20;
[L4300]              assume DType[msgsender_MSG] != SafeMath;
[L4301]              assume DType[msgsender_MSG] != ERC20;
[L4302]              assume DType[msgsender_MSG] != Owned;
[L4303]              assume DType[msgsender_MSG] != FnxToken;
[L4304]              Alloc[msgsender_MSG] := true;
[L4305]  COND FALSE  !(choice == 18)
[L4312]  COND FALSE  !(choice == 17)
[L4319]  COND TRUE   choice == 16
[L4320]              gas := gas - 21000;
[L4321]  COND TRUE   gas >= 0
[L4322]              assume value_s410 >= 0 && value_s410 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4323]              assume msgvalue_MSG == 0;
[L4324]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s410 || p2 != msgsender_MSG) && from_s410 == to_s410) && value_s410 <= _balances_ERC20[this][from_s410]) && value_s410 <= _allowed_ERC20[this][from_s410][msgsender_MSG]) && value_s410 >= 0) && value_s410 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s410] >= 0) && _balances_ERC20[this][to_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s410] >= 0) && _balances_ERC20[this][from_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s410][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s410][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L567]               havoc __exception;
[L568]               revert := false;
[L569]   COND FALSE  !(__exception)
[L593]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L2446]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2109]  CALL        call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2132]  COND TRUE   !(b_s136 <= a_s136)
[L2133]              revert := true;
[L2109]  RET         call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2110]  COND TRUE   revert
[L2446]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2447]  COND TRUE   revert
[L593]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L594]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && _allowed_ERC20[this][from_s410][msgsender_MSG] == old(_allowed_ERC20[this][from_s410][msgsender_MSG]) - value_s410) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && _name_FnxToken[this] == old(_name_FnxToken[this])) && _symbol_FnxToken[this] == old(_symbol_FnxToken[this])) && _decimals_FnxToken[this] == old(_decimals_FnxToken[this])) && MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this] == old(MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4324]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L4437]  RET         call CorralChoice_FnxToken(this);

[2020-11-25 16:50:41,443 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:50:41,444 INFO  L82        PathProgramCache]: Analyzing trace with hash -1014096356, now seen corresponding path program 1 times
[2020-11-25 16:50:41,445 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:50:41,452 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:50:41,471 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:50:41,471 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:50:41,471 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 16:50:41,472 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:50:41,472 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 16:50:41,472 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 16:50:41,472 INFO  L87              Difference]: Start difference. First operand 2687 states and 3012 transitions. cyclomatic complexity: 327 Second operand 3 states.
[2020-11-25 16:50:41,523 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:50:41,524 INFO  L93              Difference]: Finished difference Result 3275 states and 3644 transitions.
[2020-11-25 16:50:41,524 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 16:50:41,524 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3275 states and 3644 transitions.
[2020-11-25 16:50:41,532 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:50:41,543 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3275 states to 3087 states and 3434 transitions.
[2020-11-25 16:50:41,543 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 833
[2020-11-25 16:50:41,544 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 860
[2020-11-25 16:50:41,544 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3087 states and 3434 transitions.
[2020-11-25 16:50:41,548 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:50:41,548 INFO  L728         BuchiCegarLoop]: Abstraction has 3087 states and 3434 transitions.
[2020-11-25 16:50:41,551 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3087 states and 3434 transitions.
[2020-11-25 16:50:41,569 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3087 to 2567.
[2020-11-25 16:50:41,569 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2567 states.
[2020-11-25 16:50:41,572 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2567 states to 2567 states and 2780 transitions.
[2020-11-25 16:50:41,572 INFO  L751         BuchiCegarLoop]: Abstraction has 2567 states and 2780 transitions.
[2020-11-25 16:50:41,572 INFO  L631         BuchiCegarLoop]: Abstraction has 2567 states and 2780 transitions.
[2020-11-25 16:50:41,572 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 16:50:41,572 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2567 states and 2780 transitions.
[2020-11-25 16:50:41,576 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:50:41,576 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:50:41,576 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:50:41,578 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:50:41,578 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4427]              assume null == 0;
[L4428]  CALL        call this := FreshRefGenerator__success();
[L2001]              havoc newRef;
[L2002]              assume Alloc[newRef] == false;
[L2003]              Alloc[newRef] := true;
[L2004]              assume newRef != null;
[L4428]  RET         call this := FreshRefGenerator__success();
[L4429]              assume now >= 0;
[L4430]              assume DType[this] == FnxToken;
[L4431]              assume msgvalue_MSG == 0;
[L4432]              gas := gas - 53000;
[L4433]  CALL        call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2895]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2769]              assume msgsender_MSG != null;
[L2770]              Balance[this] := 0;
[L2771]              owner_Owned[this] := null;
[L2772]              newOwner_Owned[this] := null;
[L2774]              owner_Owned[this] := msgsender_MSG;
[L2787]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2788]  COND FALSE  !(revert)
[L2895]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2896]  COND FALSE  !(revert)
[L2899]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2033]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2018]              assume msgsender_MSG != null;
[L2019]              Balance[this] := 0;
[L2033]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2034]  COND FALSE  !(revert)
[L2899]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2900]  COND FALSE  !(revert)
[L2903]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2301]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2033]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2018]              assume msgsender_MSG != null;
[L2019]              Balance[this] := 0;
[L2033]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2034]  COND FALSE  !(revert)
[L2301]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2302]  COND FALSE  !(revert)
[L2305]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]              assume msgsender_MSG != null;
[L2278]              Balance[this] := 0;
[L2279]              _balances_ERC20[this] := zeroRefintArr();
[L2280]              sum__balances0[this] := 0;
[L2281]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2282]              sum__allowed1[this] := 0;
[L2283]              _totalSupply_ERC20[this] := 0;
[L2305]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2306]  COND FALSE  !(revert)
[L2903]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2904]  COND FALSE  !(revert)
[L2907]  CALL        call FnxToken_FnxToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2864]              assume msgsender_MSG != null;
[L2865]              Balance[this] := 0;
[L2866]              _name_FnxToken[this] := 699458114;
[L2867]              _symbol_FnxToken[this] := -216537299;
[L2868]              _decimals_FnxToken[this] := 18;
[L2869]              MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this] := 500000000;
[L2907]  RET         call FnxToken_FnxToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]  COND FALSE  !(revert)
[L4433]  RET         call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4434]              assume !revert && gas >= 0;
[L4437]  CALL        call CorralChoice_FnxToken(this);
[L4256]              havoc msgsender_MSG;
[L4257]              havoc msgvalue_MSG;
[L4258]              havoc choice;
[L4259]              havoc to_s325;
[L4260]              havoc value_s325;
[L4261]              havoc __ret_0_transfer;
[L4262]              havoc spender_s361;
[L4263]              havoc value_s361;
[L4264]              havoc __ret_0_approve;
[L4265]              havoc from_s410;
[L4266]              havoc to_s410;
[L4267]              havoc value_s410;
[L4268]              havoc __ret_0_transferFrom;
[L4269]              havoc __ret_0_totalSupply;
[L4270]              havoc owner_s290;
[L4271]              havoc __ret_0_balanceOf;
[L4272]              havoc owner_s306;
[L4273]              havoc spender_s306;
[L4274]              havoc __ret_0_allowance;
[L4275]              havoc spender_s459;
[L4276]              havoc addedValue_s459;
[L4277]              havoc __ret_0_increaseAllowance;
[L4278]              havoc spender_s508;
[L4279]              havoc subtractedValue_s508;
[L4280]              havoc __ret_0_decreaseAllowance;
[L4281]              havoc __ret_0_owner;
[L4282]              havoc __ret_0_newOwner;
[L4283]              havoc _newOwner_s717;
[L4284]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4285]              havoc __ret_0_name;
[L4286]              havoc __ret_0_symbol;
[L4287]              havoc __ret_0_decimals;
[L4288]              havoc newName_s809;
[L4289]              havoc newSymbol_s809;
[L4290]              havoc account_s827;
[L4291]              havoc amount_s827;
[L4292]              havoc tmpNow;
[L4293]              havoc gas;
[L4294]              assume gas > 4000000 && gas <= 8000000;
[L4295]              tmpNow := now;
[L4296]              havoc now;
[L4297]              assume now > tmpNow;
[L4298]              assume msgsender_MSG != null;
[L4299]              assume DType[msgsender_MSG] != IERC20;
[L4300]              assume DType[msgsender_MSG] != SafeMath;
[L4301]              assume DType[msgsender_MSG] != ERC20;
[L4302]              assume DType[msgsender_MSG] != Owned;
[L4303]              assume DType[msgsender_MSG] != FnxToken;
[L4304]              Alloc[msgsender_MSG] := true;
[L4305]  COND FALSE  !(choice == 18)
[L4312]  COND FALSE  !(choice == 17)
[L4319]  COND TRUE   choice == 16
[L4320]              gas := gas - 21000;
[L4321]  COND TRUE   gas >= 0
[L4322]              assume value_s410 >= 0 && value_s410 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4323]              assume msgvalue_MSG == 0;
[L4324]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s410 || p2 != msgsender_MSG) && from_s410 == to_s410) && value_s410 <= _balances_ERC20[this][from_s410]) && value_s410 <= _allowed_ERC20[this][from_s410][msgsender_MSG]) && value_s410 >= 0) && value_s410 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s410] >= 0) && _balances_ERC20[this][to_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s410] >= 0) && _balances_ERC20[this][from_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s410][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s410][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L567]               havoc __exception;
[L568]               revert := false;
[L569]   COND TRUE   __exception
[L570]               __tmp__Balance := Balance;
[L571]               __tmp__DType := DType;
[L572]               __tmp__Alloc := Alloc;
[L573]               __tmp__balance_ADDR := balance_ADDR;
[L574]               __tmp__M_Ref_int := M_Ref_int;
[L575]               __tmp__sum__balances0 := sum__balances0;
[L576]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L577]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L578]               __tmp__sum__allowed1 := sum__allowed1;
[L579]               __tmp__Length := Length;
[L580]               __tmp__now := now;
[L581]               __tmp___balances_ERC20 := _balances_ERC20;
[L582]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L583]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L584]               __tmp__owner_Owned := owner_Owned;
[L585]               __tmp__newOwner_Owned := newOwner_Owned;
[L586]               __tmp___name_FnxToken := _name_FnxToken;
[L587]               __tmp___symbol_FnxToken := _symbol_FnxToken;
[L588]               __tmp___decimals_FnxToken := _decimals_FnxToken;
[L589]               __tmp__MAX_TOTAL_TOKEN_AMOUNT_FnxToken := MAX_TOTAL_TOKEN_AMOUNT_FnxToken;
[L590]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L2419]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2098]  CALL        call __var_1 := sub~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2120]  COND TRUE   !(b_s136 <= a_s136)
[L2121]              revert := true;
[L2098]  RET         call __var_1 := sub~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2099]  COND TRUE   revert
[L2419]  RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2420]  COND TRUE   revert
[L590]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L591]               assume revert || gas < 0;
[L4324]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L4437]  RET         call CorralChoice_FnxToken(this);

Loop:
[L4437]  CALL        call CorralChoice_FnxToken(this);
[L4256]              havoc msgsender_MSG;
[L4257]              havoc msgvalue_MSG;
[L4258]              havoc choice;
[L4259]              havoc to_s325;
[L4260]              havoc value_s325;
[L4261]              havoc __ret_0_transfer;
[L4262]              havoc spender_s361;
[L4263]              havoc value_s361;
[L4264]              havoc __ret_0_approve;
[L4265]              havoc from_s410;
[L4266]              havoc to_s410;
[L4267]              havoc value_s410;
[L4268]              havoc __ret_0_transferFrom;
[L4269]              havoc __ret_0_totalSupply;
[L4270]              havoc owner_s290;
[L4271]              havoc __ret_0_balanceOf;
[L4272]              havoc owner_s306;
[L4273]              havoc spender_s306;
[L4274]              havoc __ret_0_allowance;
[L4275]              havoc spender_s459;
[L4276]              havoc addedValue_s459;
[L4277]              havoc __ret_0_increaseAllowance;
[L4278]              havoc spender_s508;
[L4279]              havoc subtractedValue_s508;
[L4280]              havoc __ret_0_decreaseAllowance;
[L4281]              havoc __ret_0_owner;
[L4282]              havoc __ret_0_newOwner;
[L4283]              havoc _newOwner_s717;
[L4284]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4285]              havoc __ret_0_name;
[L4286]              havoc __ret_0_symbol;
[L4287]              havoc __ret_0_decimals;
[L4288]              havoc newName_s809;
[L4289]              havoc newSymbol_s809;
[L4290]              havoc account_s827;
[L4291]              havoc amount_s827;
[L4292]              havoc tmpNow;
[L4293]              havoc gas;
[L4294]              assume gas > 4000000 && gas <= 8000000;
[L4295]              tmpNow := now;
[L4296]              havoc now;
[L4297]              assume now > tmpNow;
[L4298]              assume msgsender_MSG != null;
[L4299]              assume DType[msgsender_MSG] != IERC20;
[L4300]              assume DType[msgsender_MSG] != SafeMath;
[L4301]              assume DType[msgsender_MSG] != ERC20;
[L4302]              assume DType[msgsender_MSG] != Owned;
[L4303]              assume DType[msgsender_MSG] != FnxToken;
[L4304]              Alloc[msgsender_MSG] := true;
[L4305]  COND FALSE  !(choice == 18)
[L4312]  COND FALSE  !(choice == 17)
[L4319]  COND TRUE   choice == 16
[L4320]              gas := gas - 21000;
[L4321]  COND TRUE   gas >= 0
[L4322]              assume value_s410 >= 0 && value_s410 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4323]              assume msgvalue_MSG == 0;
[L4324]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s410 || p2 != msgsender_MSG) && from_s410 == to_s410) && value_s410 <= _balances_ERC20[this][from_s410]) && value_s410 <= _allowed_ERC20[this][from_s410][msgsender_MSG]) && value_s410 >= 0) && value_s410 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s410] >= 0) && _balances_ERC20[this][to_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s410] >= 0) && _balances_ERC20[this][from_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s410][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s410][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L567]               havoc __exception;
[L568]               revert := false;
[L569]   COND TRUE   __exception
[L570]               __tmp__Balance := Balance;
[L571]               __tmp__DType := DType;
[L572]               __tmp__Alloc := Alloc;
[L573]               __tmp__balance_ADDR := balance_ADDR;
[L574]               __tmp__M_Ref_int := M_Ref_int;
[L575]               __tmp__sum__balances0 := sum__balances0;
[L576]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L577]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L578]               __tmp__sum__allowed1 := sum__allowed1;
[L579]               __tmp__Length := Length;
[L580]               __tmp__now := now;
[L581]               __tmp___balances_ERC20 := _balances_ERC20;
[L582]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L583]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L584]               __tmp__owner_Owned := owner_Owned;
[L585]               __tmp__newOwner_Owned := newOwner_Owned;
[L586]               __tmp___name_FnxToken := _name_FnxToken;
[L587]               __tmp___symbol_FnxToken := _symbol_FnxToken;
[L588]               __tmp___decimals_FnxToken := _decimals_FnxToken;
[L589]               __tmp__MAX_TOTAL_TOKEN_AMOUNT_FnxToken := MAX_TOTAL_TOKEN_AMOUNT_FnxToken;
[L590]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L2419]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2098]  CALL        call __var_1 := sub~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2120]  COND TRUE   !(b_s136 <= a_s136)
[L2121]              revert := true;
[L2098]  RET         call __var_1 := sub~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2099]  COND TRUE   revert
[L2419]  RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2420]  COND TRUE   revert
[L590]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L591]               assume revert || gas < 0;
[L4324]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L4437]  RET         call CorralChoice_FnxToken(this);

[2020-11-25 16:50:41,581 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:50:41,581 INFO  L82        PathProgramCache]: Analyzing trace with hash 2053236250, now seen corresponding path program 1 times
[2020-11-25 16:50:41,581 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:50:41,592 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:50:41,646 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 16:50:41,647 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:50:41,647 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-25 16:50:41,647 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:50:41,647 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-25 16:50:41,647 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-25 16:50:41,648 INFO  L87              Difference]: Start difference. First operand 2567 states and 2780 transitions. cyclomatic complexity: 215 Second operand 8 states.
[2020-11-25 16:50:42,470 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:50:42,470 INFO  L93              Difference]: Finished difference Result 2759 states and 2986 transitions.
[2020-11-25 16:50:42,470 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 9 states. 
[2020-11-25 16:50:42,470 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2759 states and 2986 transitions.
[2020-11-25 16:50:42,476 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 16:50:42,485 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2759 states to 2759 states and 2986 transitions.
[2020-11-25 16:50:42,485 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 792
[2020-11-25 16:50:42,486 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 792
[2020-11-25 16:50:42,486 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2759 states and 2986 transitions.
[2020-11-25 16:50:42,488 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:50:42,488 INFO  L728         BuchiCegarLoop]: Abstraction has 2759 states and 2986 transitions.
[2020-11-25 16:50:42,490 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2759 states and 2986 transitions.
[2020-11-25 16:50:42,510 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2759 to 2625.
[2020-11-25 16:50:42,510 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2625 states.
[2020-11-25 16:50:42,512 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2625 states to 2625 states and 2842 transitions.
[2020-11-25 16:50:42,512 INFO  L751         BuchiCegarLoop]: Abstraction has 2625 states and 2842 transitions.
[2020-11-25 16:50:42,512 INFO  L631         BuchiCegarLoop]: Abstraction has 2625 states and 2842 transitions.
[2020-11-25 16:50:42,513 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 16:50:42,513 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2625 states and 2842 transitions.
[2020-11-25 16:50:42,515 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:50:42,516 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:50:42,516 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:50:42,518 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:50:42,518 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4427]              assume null == 0;
[L4428]  CALL        call this := FreshRefGenerator__success();
[L2001]              havoc newRef;
[L2002]              assume Alloc[newRef] == false;
[L2003]              Alloc[newRef] := true;
[L2004]              assume newRef != null;
[L4428]  RET         call this := FreshRefGenerator__success();
[L4429]              assume now >= 0;
[L4430]              assume DType[this] == FnxToken;
[L4431]              assume msgvalue_MSG == 0;
[L4432]              gas := gas - 53000;
[L4433]  CALL        call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2895]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2769]              assume msgsender_MSG != null;
[L2770]              Balance[this] := 0;
[L2771]              owner_Owned[this] := null;
[L2772]              newOwner_Owned[this] := null;
[L2774]              owner_Owned[this] := msgsender_MSG;
[L2787]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2788]  COND FALSE  !(revert)
[L2895]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2896]  COND FALSE  !(revert)
[L2899]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2033]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2018]              assume msgsender_MSG != null;
[L2019]              Balance[this] := 0;
[L2033]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2034]  COND FALSE  !(revert)
[L2899]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2900]  COND FALSE  !(revert)
[L2903]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2301]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2033]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2018]              assume msgsender_MSG != null;
[L2019]              Balance[this] := 0;
[L2033]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2034]  COND FALSE  !(revert)
[L2301]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2302]  COND FALSE  !(revert)
[L2305]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]              assume msgsender_MSG != null;
[L2278]              Balance[this] := 0;
[L2279]              _balances_ERC20[this] := zeroRefintArr();
[L2280]              sum__balances0[this] := 0;
[L2281]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2282]              sum__allowed1[this] := 0;
[L2283]              _totalSupply_ERC20[this] := 0;
[L2305]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2306]  COND FALSE  !(revert)
[L2903]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2904]  COND FALSE  !(revert)
[L2907]  CALL        call FnxToken_FnxToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2864]              assume msgsender_MSG != null;
[L2865]              Balance[this] := 0;
[L2866]              _name_FnxToken[this] := 699458114;
[L2867]              _symbol_FnxToken[this] := -216537299;
[L2868]              _decimals_FnxToken[this] := 18;
[L2869]              MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this] := 500000000;
[L2907]  RET         call FnxToken_FnxToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]  COND FALSE  !(revert)
[L4433]  RET         call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4434]              assume !revert && gas >= 0;
[L4437]  CALL        call CorralChoice_FnxToken(this);
[L4256]              havoc msgsender_MSG;
[L4257]              havoc msgvalue_MSG;
[L4258]              havoc choice;
[L4259]              havoc to_s325;
[L4260]              havoc value_s325;
[L4261]              havoc __ret_0_transfer;
[L4262]              havoc spender_s361;
[L4263]              havoc value_s361;
[L4264]              havoc __ret_0_approve;
[L4265]              havoc from_s410;
[L4266]              havoc to_s410;
[L4267]              havoc value_s410;
[L4268]              havoc __ret_0_transferFrom;
[L4269]              havoc __ret_0_totalSupply;
[L4270]              havoc owner_s290;
[L4271]              havoc __ret_0_balanceOf;
[L4272]              havoc owner_s306;
[L4273]              havoc spender_s306;
[L4274]              havoc __ret_0_allowance;
[L4275]              havoc spender_s459;
[L4276]              havoc addedValue_s459;
[L4277]              havoc __ret_0_increaseAllowance;
[L4278]              havoc spender_s508;
[L4279]              havoc subtractedValue_s508;
[L4280]              havoc __ret_0_decreaseAllowance;
[L4281]              havoc __ret_0_owner;
[L4282]              havoc __ret_0_newOwner;
[L4283]              havoc _newOwner_s717;
[L4284]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4285]              havoc __ret_0_name;
[L4286]              havoc __ret_0_symbol;
[L4287]              havoc __ret_0_decimals;
[L4288]              havoc newName_s809;
[L4289]              havoc newSymbol_s809;
[L4290]              havoc account_s827;
[L4291]              havoc amount_s827;
[L4292]              havoc tmpNow;
[L4293]              havoc gas;
[L4294]              assume gas > 4000000 && gas <= 8000000;
[L4295]              tmpNow := now;
[L4296]              havoc now;
[L4297]              assume now > tmpNow;
[L4298]              assume msgsender_MSG != null;
[L4299]              assume DType[msgsender_MSG] != IERC20;
[L4300]              assume DType[msgsender_MSG] != SafeMath;
[L4301]              assume DType[msgsender_MSG] != ERC20;
[L4302]              assume DType[msgsender_MSG] != Owned;
[L4303]              assume DType[msgsender_MSG] != FnxToken;
[L4304]              Alloc[msgsender_MSG] := true;
[L4305]  COND FALSE  !(choice == 18)
[L4312]  COND FALSE  !(choice == 17)
[L4319]  COND TRUE   choice == 16
[L4320]              gas := gas - 21000;
[L4321]  COND TRUE   gas >= 0
[L4322]              assume value_s410 >= 0 && value_s410 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4323]              assume msgvalue_MSG == 0;
[L4324]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s410 || p2 != msgsender_MSG) && from_s410 == to_s410) && value_s410 <= _balances_ERC20[this][from_s410]) && value_s410 <= _allowed_ERC20[this][from_s410][msgsender_MSG]) && value_s410 >= 0) && value_s410 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s410] >= 0) && _balances_ERC20[this][to_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s410] >= 0) && _balances_ERC20[this][from_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s410][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s410][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L567]               havoc __exception;
[L568]               revert := false;
[L569]   COND TRUE   __exception
[L570]               __tmp__Balance := Balance;
[L571]               __tmp__DType := DType;
[L572]               __tmp__Alloc := Alloc;
[L573]               __tmp__balance_ADDR := balance_ADDR;
[L574]               __tmp__M_Ref_int := M_Ref_int;
[L575]               __tmp__sum__balances0 := sum__balances0;
[L576]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L577]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L578]               __tmp__sum__allowed1 := sum__allowed1;
[L579]               __tmp__Length := Length;
[L580]               __tmp__now := now;
[L581]               __tmp___balances_ERC20 := _balances_ERC20;
[L582]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L583]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L584]               __tmp__owner_Owned := owner_Owned;
[L585]               __tmp__newOwner_Owned := newOwner_Owned;
[L586]               __tmp___name_FnxToken := _name_FnxToken;
[L587]               __tmp___symbol_FnxToken := _symbol_FnxToken;
[L588]               __tmp___decimals_FnxToken := _decimals_FnxToken;
[L589]               __tmp__MAX_TOTAL_TOKEN_AMOUNT_FnxToken := MAX_TOTAL_TOKEN_AMOUNT_FnxToken;
[L590]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L2419]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2098]  CALL        call __var_1 := sub~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2120]  COND FALSE  !(!(b_s136 <= a_s136))
[L2124]              c_s136 := (a_s136 - b_s136) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2125]              __ret_0_ := c_s136;
[L2098]  RET         call __var_1 := sub~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2099]  COND FALSE  !(revert)
[L2102]              __ret_0_ := __var_1;
[L2419]  RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2420]  COND FALSE  !(revert)
[L2423]              __tmp__sum__allowed1[from_s410] := __tmp__sum__allowed1[from_s410] - __tmp___allowed_ERC20[this][from_s410][msgsender_MSG];
[L2424]              __tmp___allowed_ERC20[this][from_s410][msgsender_MSG] := __var_5;
[L2425]              __tmp__sum__allowed1[from_s410] := __tmp__sum__allowed1[from_s410] + __tmp___allowed_ERC20[this][from_s410][msgsender_MSG];
[L2426]  COND TRUE   __tmp__DType[this] == FnxToken
[L2427]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L2558]              __var_10 := null;
[L2559]  COND TRUE   !(to_s554 != null)
[L2560]              revert := true;
[L2427]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L2428]  COND TRUE   revert
[L590]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L591]               assume revert || gas < 0;
[L4324]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L4437]  RET         call CorralChoice_FnxToken(this);

Loop:
[L4437]  CALL        call CorralChoice_FnxToken(this);
[L4256]              havoc msgsender_MSG;
[L4257]              havoc msgvalue_MSG;
[L4258]              havoc choice;
[L4259]              havoc to_s325;
[L4260]              havoc value_s325;
[L4261]              havoc __ret_0_transfer;
[L4262]              havoc spender_s361;
[L4263]              havoc value_s361;
[L4264]              havoc __ret_0_approve;
[L4265]              havoc from_s410;
[L4266]              havoc to_s410;
[L4267]              havoc value_s410;
[L4268]              havoc __ret_0_transferFrom;
[L4269]              havoc __ret_0_totalSupply;
[L4270]              havoc owner_s290;
[L4271]              havoc __ret_0_balanceOf;
[L4272]              havoc owner_s306;
[L4273]              havoc spender_s306;
[L4274]              havoc __ret_0_allowance;
[L4275]              havoc spender_s459;
[L4276]              havoc addedValue_s459;
[L4277]              havoc __ret_0_increaseAllowance;
[L4278]              havoc spender_s508;
[L4279]              havoc subtractedValue_s508;
[L4280]              havoc __ret_0_decreaseAllowance;
[L4281]              havoc __ret_0_owner;
[L4282]              havoc __ret_0_newOwner;
[L4283]              havoc _newOwner_s717;
[L4284]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4285]              havoc __ret_0_name;
[L4286]              havoc __ret_0_symbol;
[L4287]              havoc __ret_0_decimals;
[L4288]              havoc newName_s809;
[L4289]              havoc newSymbol_s809;
[L4290]              havoc account_s827;
[L4291]              havoc amount_s827;
[L4292]              havoc tmpNow;
[L4293]              havoc gas;
[L4294]              assume gas > 4000000 && gas <= 8000000;
[L4295]              tmpNow := now;
[L4296]              havoc now;
[L4297]              assume now > tmpNow;
[L4298]              assume msgsender_MSG != null;
[L4299]              assume DType[msgsender_MSG] != IERC20;
[L4300]              assume DType[msgsender_MSG] != SafeMath;
[L4301]              assume DType[msgsender_MSG] != ERC20;
[L4302]              assume DType[msgsender_MSG] != Owned;
[L4303]              assume DType[msgsender_MSG] != FnxToken;
[L4304]              Alloc[msgsender_MSG] := true;
[L4305]  COND FALSE  !(choice == 18)
[L4312]  COND FALSE  !(choice == 17)
[L4319]  COND TRUE   choice == 16
[L4320]              gas := gas - 21000;
[L4321]  COND TRUE   gas >= 0
[L4322]              assume value_s410 >= 0 && value_s410 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4323]              assume msgvalue_MSG == 0;
[L4324]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s410 || p2 != msgsender_MSG) && from_s410 == to_s410) && value_s410 <= _balances_ERC20[this][from_s410]) && value_s410 <= _allowed_ERC20[this][from_s410][msgsender_MSG]) && value_s410 >= 0) && value_s410 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s410] >= 0) && _balances_ERC20[this][to_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s410] >= 0) && _balances_ERC20[this][from_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s410][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s410][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L567]               havoc __exception;
[L568]               revert := false;
[L569]   COND TRUE   __exception
[L570]               __tmp__Balance := Balance;
[L571]               __tmp__DType := DType;
[L572]               __tmp__Alloc := Alloc;
[L573]               __tmp__balance_ADDR := balance_ADDR;
[L574]               __tmp__M_Ref_int := M_Ref_int;
[L575]               __tmp__sum__balances0 := sum__balances0;
[L576]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L577]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L578]               __tmp__sum__allowed1 := sum__allowed1;
[L579]               __tmp__Length := Length;
[L580]               __tmp__now := now;
[L581]               __tmp___balances_ERC20 := _balances_ERC20;
[L582]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L583]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L584]               __tmp__owner_Owned := owner_Owned;
[L585]               __tmp__newOwner_Owned := newOwner_Owned;
[L586]               __tmp___name_FnxToken := _name_FnxToken;
[L587]               __tmp___symbol_FnxToken := _symbol_FnxToken;
[L588]               __tmp___decimals_FnxToken := _decimals_FnxToken;
[L589]               __tmp__MAX_TOTAL_TOKEN_AMOUNT_FnxToken := MAX_TOTAL_TOKEN_AMOUNT_FnxToken;
[L590]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L2419]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2098]  CALL        call __var_1 := sub~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2120]  COND FALSE  !(!(b_s136 <= a_s136))
[L2124]              c_s136 := (a_s136 - b_s136) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2125]              __ret_0_ := c_s136;
[L2098]  RET         call __var_1 := sub~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2099]  COND FALSE  !(revert)
[L2102]              __ret_0_ := __var_1;
[L2419]  RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2420]  COND FALSE  !(revert)
[L2423]              __tmp__sum__allowed1[from_s410] := __tmp__sum__allowed1[from_s410] - __tmp___allowed_ERC20[this][from_s410][msgsender_MSG];
[L2424]              __tmp___allowed_ERC20[this][from_s410][msgsender_MSG] := __var_5;
[L2425]              __tmp__sum__allowed1[from_s410] := __tmp__sum__allowed1[from_s410] + __tmp___allowed_ERC20[this][from_s410][msgsender_MSG];
[L2426]  COND TRUE   __tmp__DType[this] == FnxToken
[L2427]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L2558]              __var_10 := null;
[L2559]  COND TRUE   !(to_s554 != null)
[L2560]              revert := true;
[L2427]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L2428]  COND TRUE   revert
[L590]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L591]               assume revert || gas < 0;
[L4324]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L4437]  RET         call CorralChoice_FnxToken(this);

[2020-11-25 16:50:42,521 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:50:42,521 INFO  L82        PathProgramCache]: Analyzing trace with hash 827948781, now seen corresponding path program 1 times
[2020-11-25 16:50:42,521 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:50:42,531 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:50:42,543 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:50:42,601 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:50:42,602 INFO  L82        PathProgramCache]: Analyzing trace with hash -1822161790, now seen corresponding path program 1 times
[2020-11-25 16:50:42,602 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:50:42,609 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:50:42,615 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:50:42,630 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:50:42,631 INFO  L82        PathProgramCache]: Analyzing trace with hash 1043249262, now seen corresponding path program 1 times
[2020-11-25 16:50:42,631 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:50:42,646 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:50:42,665 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
[2020-11-25 16:50:43,195 WARN  L188               SmtUtils]: Spent 260.00 ms on a formula simplification. DAG size of input: 183 DAG size of output: 172
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1759 to 3517
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2647 to 5281
[2020-11-25 16:50:43,505 WARN  L188               SmtUtils]: Spent 280.00 ms on a formula simplification. DAG size of input: 125 DAG size of output: 119
[2020-11-25 16:50:43,765 WARN  L188               SmtUtils]: Spent 257.00 ms on a formula simplification that was a NOOP. DAG size: 274
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 6271 to 12541
[2020-11-25 16:50:44,969 WARN  L188               SmtUtils]: Spent 1.19 s on a formula simplification. DAG size of input: 228 DAG size of output: 228
[2020-11-25 16:50:46,111 WARN  L188               SmtUtils]: Spent 1.14 s on a formula simplification. DAG size of input: 277 DAG size of output: 267
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.002s / 0.006s total
Resizing node table from 12073 to 24137
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4027 to 8053
[2020-11-25 16:50:47,078 WARN  L188               SmtUtils]: Spent 917.00 ms on a formula simplification. DAG size of input: 225 DAG size of output: 174
[2020-11-25 16:50:47,669 WARN  L188               SmtUtils]: Spent 589.00 ms on a formula simplification that was a NOOP. DAG size: 344
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 16:50:48,762 WARN  L188               SmtUtils]: Spent 1.08 s on a formula simplification. DAG size of input: 284 DAG size of output: 281
[2020-11-25 16:50:49,413 WARN  L188               SmtUtils]: Spent 649.00 ms on a formula simplification that was a NOOP. DAG size: 281
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 7027 to 14051
[2020-11-25 16:50:50,320 WARN  L188               SmtUtils]: Spent 876.00 ms on a formula simplification. DAG size of input: 185 DAG size of output: 171
[2020-11-25 16:50:50,336 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
[2020-11-25 16:50:50,731 WARN  L188               SmtUtils]: Spent 158.00 ms on a formula simplification. DAG size of input: 183 DAG size of output: 172
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 16:50:50,881 WARN  L188               SmtUtils]: Spent 141.00 ms on a formula simplification. DAG size of input: 125 DAG size of output: 119
[2020-11-25 16:50:51,058 WARN  L188               SmtUtils]: Spent 175.00 ms on a formula simplification that was a NOOP. DAG size: 274
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
[2020-11-25 16:50:51,926 WARN  L188               SmtUtils]: Spent 859.00 ms on a formula simplification. DAG size of input: 228 DAG size of output: 228
[2020-11-25 16:50:52,939 WARN  L188               SmtUtils]: Spent 1.01 s on a formula simplification. DAG size of input: 276 DAG size of output: 267
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 16:50:53,260 WARN  L188               SmtUtils]: Spent 303.00 ms on a formula simplification. DAG size of input: 169 DAG size of output: 163
[2020-11-25 16:50:53,534 WARN  L188               SmtUtils]: Spent 273.00 ms on a formula simplification that was a NOOP. DAG size: 333
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 16:50:54,183 WARN  L188               SmtUtils]: Spent 641.00 ms on a formula simplification. DAG size of input: 270 DAG size of output: 270
[2020-11-25 16:50:54,912 WARN  L188               SmtUtils]: Spent 727.00 ms on a formula simplification. DAG size of input: 369 DAG size of output: 361
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8543 to 17077
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 16:50:55,670 WARN  L188               SmtUtils]: Spent 747.00 ms on a formula simplification. DAG size of input: 235 DAG size of output: 217
[2020-11-25 16:50:56,088 WARN  L188               SmtUtils]: Spent 403.00 ms on a formula simplification that was a NOOP. DAG size: 324
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
[2020-11-25 16:50:58,059 WARN  L188               SmtUtils]: Spent 1.94 s on a formula simplification. DAG size of input: 292 DAG size of output: 217
[2020-11-25 16:50:58,745 WARN  L188               SmtUtils]: Spent 684.00 ms on a formula simplification. DAG size of input: 326 DAG size of output: 325
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 15859 to 31699
Garbage collection #9: 31699 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31699 to 63397
[2020-11-25 16:51:02,794 WARN  L188               SmtUtils]: Spent 4.03 s on a formula simplification. DAG size of input: 361 DAG size of output: 320
[2020-11-25 16:51:02,816 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:51:02,833 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:51:02,841 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:51:02 BasicIcfg
[2020-11-25 16:51:02,841 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 16:51:02,841 INFO  L168              Benchmark]: Toolchain (without parser) took 24830.15 ms. Allocated memory was 1.0 GB in the beginning and 2.6 GB in the end (delta: 1.6 GB). Free memory was 935.2 MB in the beginning and 1.2 GB in the end (delta: -227.8 MB). Peak memory consumption was 1.6 GB. Max. memory is 15.3 GB.
[2020-11-25 16:51:02,841 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:51:02,842 INFO  L168              Benchmark]: Boogie Preprocessor took 115.25 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:02,842 INFO  L168              Benchmark]: UtopiaSpecLang took 69.55 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:02,842 INFO  L168              Benchmark]: Boogie Printer took 17.89 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:02,842 INFO  L168              Benchmark]: RCFGBuilder took 829.46 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 795.6 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:02,843 INFO  L168              Benchmark]: UtopiaLTL2Aut took 43.57 ms. Allocated memory is still 1.0 GB. Free memory was 795.6 MB in the beginning and 792.0 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:02,843 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1273.73 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 205.5 MB). Free memory was 792.0 MB in the beginning and 1.0 GB in the end (delta: -241.5 MB). Peak memory consumption was 172.5 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:02,843 INFO  L168              Benchmark]: BlockEncodingV2 took 121.04 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 961.5 MB in the end (delta: 72.0 MB). Peak memory consumption was 72.0 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:02,843 INFO  L168              Benchmark]: BuchiAutomizer took 22356.67 ms. Allocated memory was 1.2 GB in the beginning and 2.6 GB in the end (delta: 1.4 GB). Free memory was 961.5 MB in the beginning and 1.2 GB in the end (delta: -201.4 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
[2020-11-25 16:51:02,846 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3842 locations, 6759 edges
  - StatisticsResult: Encoded RCFG
    3782 locations, 6599 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 115.25 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 69.55 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 17.89 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 829.46 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 795.6 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 43.57 ms. Allocated memory is still 1.0 GB. Free memory was 795.6 MB in the beginning and 792.0 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1273.73 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 205.5 MB). Free memory was 792.0 MB in the beginning and 1.0 GB in the end (delta: -241.5 MB). Peak memory consumption was 172.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 121.04 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 961.5 MB in the end (delta: 72.0 MB). Peak memory consumption was 72.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 22356.67 ms. Allocated memory was 1.2 GB in the beginning and 2.6 GB in the end (delta: 1.4 GB). Free memory was 961.5 MB in the beginning and 1.2 GB in the end (delta: -201.4 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1562 locations, 2062 edges
  - StatisticsResult: BuchiProgram size
    3842 locations, 6759 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 8 locations. The remainder module has 2625 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 22.3s and 5 iterations.  TraceHistogramMax:2. Analysis of lassos took 20.6s. Construction of modules took 0.7s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1242 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2687 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 11612 SDtfs, 8153 SDslu, 12551 SDs, 0 SdLazy, 5882 SolverSat, 1726 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.7s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(699458129) = (new FnxToken)({from : 699458126});
[L2895]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2769]              assume msgsender_MSG != null;
[L2770]              Balance[this] := 0;
[L2771]              owner_Owned[this] := null;
[L2772]              newOwner_Owned[this] := null;
[L2774]              owner_Owned[this] := msgsender_MSG;
[L2787]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2788]  COND FALSE  !(revert)
[L2895]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2896]  COND FALSE  !(revert)
[L2899]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2033]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2018]              assume msgsender_MSG != null;
[L2019]              Balance[this] := 0;
[L2033]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2034]  COND FALSE  !(revert)
[L2899]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2900]  COND FALSE  !(revert)
[L2903]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2301]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2033]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2018]              assume msgsender_MSG != null;
[L2019]              Balance[this] := 0;
[L2033]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2034]  COND FALSE  !(revert)
[L2301]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2302]  COND FALSE  !(revert)
[L2305]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]              assume msgsender_MSG != null;
[L2278]              Balance[this] := 0;
[L2279]              _balances_ERC20[this] := zeroRefintArr();
[L2280]              sum__balances0[this] := 0;
[L2281]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2282]              sum__allowed1[this] := 0;
[L2283]              _totalSupply_ERC20[this] := 0;
[L2305]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2306]  COND FALSE  !(revert)
[L2903]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2904]  COND FALSE  !(revert)
[L2907]  CALL        call FnxToken_FnxToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2864]              assume msgsender_MSG != null;
[L2865]              Balance[this] := 0;
[L2866]              _name_FnxToken[this] := 699458114;
[L2867]              _symbol_FnxToken[this] := -216537299;
[L2868]              _decimals_FnxToken[this] := 18;
[L2869]              MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this] := 500000000;
[L2907]  RET         call FnxToken_FnxToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]  COND FALSE  !(revert)
[L4433]  RET         call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
ERC20(699458129).transferFrom~address~address~uint256.gas(3979002)({from : 699458130, from : 0, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s410 || p2 != msgsender_MSG) && from_s410 == to_s410) && value_s410 <= _balances_ERC20[this][from_s410]) && value_s410 <= _allowed_ERC20[this][from_s410][msgsender_MSG]) && value_s410 >= 0) && value_s410 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s410] >= 0) && _balances_ERC20[this][to_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s410] >= 0) && _balances_ERC20[this][from_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s410][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s410][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L567]               havoc __exception;
[L568]               revert := false;
[L569]   COND TRUE   __exception
[L570]               __tmp__Balance := Balance;
[L571]               __tmp__DType := DType;
[L572]               __tmp__Alloc := Alloc;
[L573]               __tmp__balance_ADDR := balance_ADDR;
[L574]               __tmp__M_Ref_int := M_Ref_int;
[L575]               __tmp__sum__balances0 := sum__balances0;
[L576]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L577]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L578]               __tmp__sum__allowed1 := sum__allowed1;
[L579]               __tmp__Length := Length;
[L580]               __tmp__now := now;
[L581]               __tmp___balances_ERC20 := _balances_ERC20;
[L582]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L583]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L584]               __tmp__owner_Owned := owner_Owned;
[L585]               __tmp__newOwner_Owned := newOwner_Owned;
[L586]               __tmp___name_FnxToken := _name_FnxToken;
[L587]               __tmp___symbol_FnxToken := _symbol_FnxToken;
[L588]               __tmp___decimals_FnxToken := _decimals_FnxToken;
[L589]               __tmp__MAX_TOTAL_TOKEN_AMOUNT_FnxToken := MAX_TOTAL_TOKEN_AMOUNT_FnxToken;
[L590]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L2419]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2098]  CALL        call __var_1 := sub~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2120]  COND FALSE  !(!(b_s136 <= a_s136))
[L2124]              c_s136 := (a_s136 - b_s136) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2125]              __ret_0_ := c_s136;
[L2098]  RET         call __var_1 := sub~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2099]  COND FALSE  !(revert)
[L2102]              __ret_0_ := __var_1;
[L2419]  RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2420]  COND FALSE  !(revert)
[L2423]              __tmp__sum__allowed1[from_s410] := __tmp__sum__allowed1[from_s410] - __tmp___allowed_ERC20[this][from_s410][msgsender_MSG];
[L2424]              __tmp___allowed_ERC20[this][from_s410][msgsender_MSG] := __var_5;
[L2425]              __tmp__sum__allowed1[from_s410] := __tmp__sum__allowed1[from_s410] + __tmp___allowed_ERC20[this][from_s410][msgsender_MSG];
[L2426]  COND TRUE   __tmp__DType[this] == FnxToken
[L2427]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L2558]              __var_10 := null;
[L2559]  COND TRUE   !(to_s554 != null)
[L2560]              revert := true;
[L2427]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L2428]  COND TRUE   revert
[L590]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L591]               assume revert || gas < 0;
[L4324]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);

Loop:
ERC20(699458129).transferFrom~address~address~uint256.gas(3979001)({from : 699458117, from : 0, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s410 || p2 != msgsender_MSG) && from_s410 == to_s410) && value_s410 <= _balances_ERC20[this][from_s410]) && value_s410 <= _allowed_ERC20[this][from_s410][msgsender_MSG]) && value_s410 >= 0) && value_s410 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s410] >= 0) && _balances_ERC20[this][to_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s410] >= 0) && _balances_ERC20[this][from_s410] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s410][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s410][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L567]               havoc __exception;
[L568]               revert := false;
[L569]   COND TRUE   __exception
[L570]               __tmp__Balance := Balance;
[L571]               __tmp__DType := DType;
[L572]               __tmp__Alloc := Alloc;
[L573]               __tmp__balance_ADDR := balance_ADDR;
[L574]               __tmp__M_Ref_int := M_Ref_int;
[L575]               __tmp__sum__balances0 := sum__balances0;
[L576]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L577]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L578]               __tmp__sum__allowed1 := sum__allowed1;
[L579]               __tmp__Length := Length;
[L580]               __tmp__now := now;
[L581]               __tmp___balances_ERC20 := _balances_ERC20;
[L582]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L583]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L584]               __tmp__owner_Owned := owner_Owned;
[L585]               __tmp__newOwner_Owned := newOwner_Owned;
[L586]               __tmp___name_FnxToken := _name_FnxToken;
[L587]               __tmp___symbol_FnxToken := _symbol_FnxToken;
[L588]               __tmp___decimals_FnxToken := _decimals_FnxToken;
[L589]               __tmp__MAX_TOTAL_TOKEN_AMOUNT_FnxToken := MAX_TOTAL_TOKEN_AMOUNT_FnxToken;
[L590]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L2419]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2098]  CALL        call __var_1 := sub~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2120]  COND FALSE  !(!(b_s136 <= a_s136))
[L2124]              c_s136 := (a_s136 - b_s136) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2125]              __ret_0_ := c_s136;
[L2098]  RET         call __var_1 := sub~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2099]  COND FALSE  !(revert)
[L2102]              __ret_0_ := __var_1;
[L2419]  RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s410][msgsender_MSG], value_s410);
[L2420]  COND FALSE  !(revert)
[L2423]              __tmp__sum__allowed1[from_s410] := __tmp__sum__allowed1[from_s410] - __tmp___allowed_ERC20[this][from_s410][msgsender_MSG];
[L2424]              __tmp___allowed_ERC20[this][from_s410][msgsender_MSG] := __var_5;
[L2425]              __tmp__sum__allowed1[from_s410] := __tmp__sum__allowed1[from_s410] + __tmp___allowed_ERC20[this][from_s410][msgsender_MSG];
[L2426]  COND TRUE   __tmp__DType[this] == FnxToken
[L2427]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L2558]              __var_10 := null;
[L2559]  COND TRUE   !(to_s554 != null)
[L2560]              revert := true;
[L2427]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L2428]  COND TRUE   revert
[L590]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);
[L591]               assume revert || gas < 0;
[L4324]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s410, to_s410, value_s410);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
