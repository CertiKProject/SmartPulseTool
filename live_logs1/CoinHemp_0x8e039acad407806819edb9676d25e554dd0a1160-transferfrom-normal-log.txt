This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 11:57:53,417 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 11:57:53,418 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 11:57:53,429 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 11:57:53,429 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 11:57:53,430 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 11:57:53,431 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 11:57:53,432 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 11:57:53,433 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 11:57:53,434 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 11:57:53,435 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 11:57:53,435 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 11:57:53,436 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 11:57:53,437 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 11:57:53,437 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 11:57:53,438 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 11:57:53,438 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 11:57:53,440 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 11:57:53,441 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 11:57:53,443 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 11:57:53,443 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 11:57:53,444 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 11:57:53,446 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 11:57:53,446 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 11:57:53,446 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 11:57:53,446 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 11:57:53,447 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 11:57:53,447 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 11:57:53,447 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 11:57:53,448 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 11:57:53,448 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 11:57:53,449 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 11:57:53,449 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 11:57:53,449 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 11:57:53,450 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 11:57:53,450 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 11:57:53,451 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 11:57:53,451 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 11:57:53,451 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 11:57:53,452 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 11:57:53,452 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 11:57:53,452 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 11:57:53,465 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 11:57:53,465 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 11:57:53,466 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 11:57:53,466 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 11:57:53,467 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 11:57:53,467 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 11:57:53,467 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 11:57:53,467 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 11:57:53,467 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 11:57:53,467 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 11:57:53,468 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 11:57:53,468 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 11:57:53,468 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 11:57:53,468 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 11:57:53,468 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 11:57:53,468 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 11:57:53,468 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 11:57:53,469 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 11:57:53,469 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 11:57:53,469 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 11:57:53,469 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 11:57:53,469 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 11:57:53,469 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 11:57:53,469 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 11:57:53,470 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 11:57:53,470 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 11:57:53,494 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 11:57:53,507 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 11:57:53,509 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 11:57:53,510 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 11:57:53,511 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 11:57:53,511 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl
[2020-11-25 11:57:53,511 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl'
[2020-11-25 11:57:53,579 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 11:57:53,580 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 11:57:53,580 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 11:57:53,581 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 11:57:53,581 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 11:57:53,597 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:53" (1/1) ...
[2020-11-25 11:57:53,599 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:53" (1/1) ...
[2020-11-25 11:57:53,626 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:53" (1/1) ...
[2020-11-25 11:57:53,627 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:53" (1/1) ...
[2020-11-25 11:57:53,644 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:53" (1/1) ...
[2020-11-25 11:57:53,652 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:53" (1/1) ...
[2020-11-25 11:57:53,658 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:53" (1/1) ...
[2020-11-25 11:57:53,666 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 11:57:53,667 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 11:57:53,667 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 11:57:53,669 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 11:57:53,674 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:53" (1/1) ...
[2020-11-25 11:57:53,693 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(CoinHemp.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_CoinHemp[this][from] && value <= allowed_CoinHemp[this][from][msg.sender] && balances_CoinHemp[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][to] >= 0 && balances_CoinHemp[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][from] >= 0 &&  balances_CoinHemp[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_CoinHemp[this][from][msg.sender] >= 0 && allowed_CoinHemp[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CoinHemp.transferFrom(from, to, value), return == true && balances_CoinHemp[this][from] == old(balances_CoinHemp[this][from]) - value && balances_CoinHemp[this][to] == old(balances_CoinHemp[this][to]) + value && allowed_CoinHemp[this][from][msg.sender] == old(allowed_CoinHemp[this][from][msg.sender]) - value && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this]) && balances_CoinHemp[this][p1] == old(balances_CoinHemp[this][p1]) && allowed_CoinHemp[this][p2][p3] == old(allowed_CoinHemp[this][p2][p3]) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this]) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this]) && name_CoinHemp[this] == old(name_CoinHemp[this]) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this]) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this]) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]))))
[2020-11-25 11:57:53,700 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(CoinHemp.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_CoinHemp[this][from] && value <= allowed_CoinHemp[this][from][msg.sender] && balances_CoinHemp[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][to] >= 0 && balances_CoinHemp[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][from] >= 0 &&  balances_CoinHemp[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_CoinHemp[this][from][msg.sender] >= 0 && allowed_CoinHemp[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CoinHemp.transferFrom(from, to, value), return == true && balances_CoinHemp[this][from] == old(balances_CoinHemp[this][from]) - value && balances_CoinHemp[this][to] == old(balances_CoinHemp[this][to]) + value && allowed_CoinHemp[this][from][msg.sender] == old(allowed_CoinHemp[this][from][msg.sender]) - value && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this]) && balances_CoinHemp[this][p1] == old(balances_CoinHemp[this][p1]) && allowed_CoinHemp[this][p2][p3] == old(allowed_CoinHemp[this][p2][p3]) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this]) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this]) && name_CoinHemp[this] == old(name_CoinHemp[this]) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this]) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this]) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]))))
[2020-11-25 11:57:53,711 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(CoinHemp.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_CoinHemp[this][from] && value <= allowed_CoinHemp[this][from][msg.sender] && balances_CoinHemp[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][to] >= 0 && balances_CoinHemp[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][from] >= 0 &&  balances_CoinHemp[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_CoinHemp[this][from][msg.sender] >= 0 && allowed_CoinHemp[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CoinHemp.transferFrom(from, to, value), return == true && balances_CoinHemp[this][from] == old(balances_CoinHemp[this][from]) - value && balances_CoinHemp[this][to] == old(balances_CoinHemp[this][to]) + value && allowed_CoinHemp[this][from][msg.sender] == old(allowed_CoinHemp[this][from][msg.sender]) - value && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this]) && balances_CoinHemp[this][p1] == old(balances_CoinHemp[this][p1]) && allowed_CoinHemp[this][p2][p3] == old(allowed_CoinHemp[this][p2][p3]) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this]) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this]) && name_CoinHemp[this] == old(name_CoinHemp[this]) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this]) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this]) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]))))
[2020-11-25 11:57:53,718 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s231 && p1!=_to_s231 ) && ( p2!=_from_s231 || p3!=msg.sender ) ) && _from_s231!=_to_s231 ) && _value_s231<=balances_CoinHemp[this][_from_s231] ) && _value_s231<=allowed_CoinHemp[this][_from_s231][msg.sender] ) && ( balances_CoinHemp[this][_to_s231] + _value_s231 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s231>=0 ) && _value_s231<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_CoinHemp[this][_to_s231]>=0 ) && balances_CoinHemp[this][_to_s231]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_CoinHemp[this][_from_s231]>=0 ) && balances_CoinHemp[this][_from_s231]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_CoinHemp[this][_from_s231][msg.sender]>=0 ) && allowed_CoinHemp[this][_from_s231][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>],IdentifierExpression[_to_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_to_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],IdentifierExpression[_value_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_to_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_to_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 11:57:53,722 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && balances_CoinHemp[this][_from_s231]==( ( old(balances_CoinHemp[this][_from_s231]) ) - _value_s231 ) ) && balances_CoinHemp[this][_to_s231]==( ( old(balances_CoinHemp[this][_to_s231]) ) + _value_s231 ) ) && allowed_CoinHemp[this][_from_s231][msg.sender]==( ( old(allowed_CoinHemp[this][_from_s231][msg.sender]) ) - _value_s231 ) ) && totalSupply_CoinHemp[this]==( old(totalSupply_CoinHemp[this]) ) ) && balances_CoinHemp[this][p1]==( old(balances_CoinHemp[this][p1]) ) ) && allowed_CoinHemp[this][p2][p3]==( old(allowed_CoinHemp[this][p2][p3]) ) ) && admin_address_CoinHemp[this]==( old(admin_address_CoinHemp[this]) ) ) && account_address_CoinHemp[this]==( old(account_address_CoinHemp[this]) ) ) && name_CoinHemp[this]==( old(name_CoinHemp[this]) ) ) && symbol_CoinHemp[this]==( old(symbol_CoinHemp[this]) ) ) && decimals_CoinHemp[this]==( old(decimals_CoinHemp[this]) ) ) && initSupply_CoinHemp[this]==( old(initSupply_CoinHemp[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_CoinHemp>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]]],IdentifierExpression[_value_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_to_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_to_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]]],IdentifierExpression[_value_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]]],IdentifierExpression[_value_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[admin_address_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[admin_address_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[account_address_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[account_address_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[initSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[initSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]]]]]
[2020-11-25 11:57:53,728 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(CoinHemp.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_CoinHemp[this][from] && value <= allowed_CoinHemp[this][from][msg.sender] && balances_CoinHemp[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][to] >= 0 && balances_CoinHemp[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][from] >= 0 &&  balances_CoinHemp[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_CoinHemp[this][from][msg.sender] >= 0 && allowed_CoinHemp[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CoinHemp.transferFrom(from, to, value), return == true && balances_CoinHemp[this][from] == old(balances_CoinHemp[this][from]) - value && balances_CoinHemp[this][to] == old(balances_CoinHemp[this][to]) + value && allowed_CoinHemp[this][from][msg.sender] == old(allowed_CoinHemp[this][from][msg.sender]) - value && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this]) && balances_CoinHemp[this][p1] == old(balances_CoinHemp[this][p1]) && allowed_CoinHemp[this][p2][p3] == old(allowed_CoinHemp[this][p2][p3]) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this]) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this]) && name_CoinHemp[this] == old(name_CoinHemp[this]) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this]) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this]) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]))))
[2020-11-25 11:57:53,728 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_CoinHemp0) ==> ( <>AP(success_transferFrom_CoinHemp0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 11:57:53,735 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:53 PropertyContainer
[2020-11-25 11:57:53,736 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 11:57:53,736 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 11:57:53,736 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 11:57:53,736 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 11:57:53,737 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:53" (1/2) ...
[2020-11-25 11:57:53,737 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 11:57:53,738 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 11:57:53,748 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:53" (2/2) ...
[2020-11-25 11:57:53,749 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 11:57:53,749 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 11:57:53,749 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 11:57:53,749 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 11:57:53,750 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:53" (1/2) ...
[2020-11-25 11:57:53,815 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 11:57:53,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp_NoBaseCtor__success
[2020-11-25 11:57:53,816 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp
[2020-11-25 11:57:53,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp
[2020-11-25 11:57:53,816 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CoinHemp
[2020-11-25 11:57:53,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CoinHemp
[2020-11-25 11:57:53,816 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CoinHemp
[2020-11-25 11:57:53,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CoinHemp
[2020-11-25 11:57:53,816 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CoinHemp
[2020-11-25 11:57:53,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CoinHemp
[2020-11-25 11:57:53,816 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CoinHemp
[2020-11-25 11:57:53,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CoinHemp
[2020-11-25 11:57:53,816 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CoinHemp
[2020-11-25 11:57:53,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CoinHemp
[2020-11-25 11:57:53,817 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_CoinHemp
[2020-11-25 11:57:53,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_CoinHemp
[2020-11-25 11:57:53,817 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_CoinHemp
[2020-11-25 11:57:53,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_CoinHemp
[2020-11-25 11:57:53,817 INFO  L130     BoogieDeclarations]: Found specification of procedure setAdmin~address_CoinHemp
[2020-11-25 11:57:53,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAdmin~address_CoinHemp
[2020-11-25 11:57:53,817 INFO  L130     BoogieDeclarations]: Found specification of procedure withDraw_CoinHemp
[2020-11-25 11:57:53,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure withDraw_CoinHemp
[2020-11-25 11:57:53,817 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_CoinHemp__success
[2020-11-25 11:57:53,818 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:53,818 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:53,818 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:53,818 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:53,818 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_address_CoinHemp
[2020-11-25 11:57:53,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_address_CoinHemp
[2020-11-25 11:57:53,818 INFO  L130     BoogieDeclarations]: Found specification of procedure account_address_CoinHemp
[2020-11-25 11:57:53,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure account_address_CoinHemp
[2020-11-25 11:57:53,818 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CoinHemp
[2020-11-25 11:57:53,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CoinHemp
[2020-11-25 11:57:53,818 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CoinHemp
[2020-11-25 11:57:53,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CoinHemp
[2020-11-25 11:57:53,819 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CoinHemp
[2020-11-25 11:57:53,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CoinHemp
[2020-11-25 11:57:53,819 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CoinHemp
[2020-11-25 11:57:53,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CoinHemp
[2020-11-25 11:57:53,819 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 11:57:53,819 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 11:57:53,819 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 11:57:53,819 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_only_pre__success
[2020-11-25 11:57:53,819 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_CoinHemp
[2020-11-25 11:57:53,819 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 11:57:53,819 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 11:57:53,819 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp_NoBaseCtor__fail
[2020-11-25 11:57:53,819 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp__success
[2020-11-25 11:57:53,820 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp__fail
[2020-11-25 11:57:53,820 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CoinHemp__success
[2020-11-25 11:57:53,820 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CoinHemp__fail
[2020-11-25 11:57:53,820 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CoinHemp__success
[2020-11-25 11:57:53,820 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CoinHemp__fail
[2020-11-25 11:57:53,820 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CoinHemp__success
[2020-11-25 11:57:53,820 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CoinHemp__fail
[2020-11-25 11:57:53,820 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CoinHemp__success
[2020-11-25 11:57:53,820 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CoinHemp__fail
[2020-11-25 11:57:53,820 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CoinHemp__success
[2020-11-25 11:57:53,820 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CoinHemp__fail
[2020-11-25 11:57:53,820 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:57:53,821 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:57:53,821 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:57:53,821 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:57:53,821 INFO  L130     BoogieDeclarations]: Found specification of procedure setAdmin~address_CoinHemp__success
[2020-11-25 11:57:53,821 INFO  L130     BoogieDeclarations]: Found specification of procedure setAdmin~address_CoinHemp__fail
[2020-11-25 11:57:53,821 INFO  L130     BoogieDeclarations]: Found specification of procedure withDraw_CoinHemp__success
[2020-11-25 11:57:53,821 INFO  L130     BoogieDeclarations]: Found specification of procedure withDraw_CoinHemp__fail
[2020-11-25 11:57:53,821 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_CoinHemp__fail
[2020-11-25 11:57:53,821 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:53,821 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:53,821 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:53,822 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:53,822 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_address_CoinHemp__success
[2020-11-25 11:57:53,822 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_address_CoinHemp__fail
[2020-11-25 11:57:53,822 INFO  L130     BoogieDeclarations]: Found specification of procedure account_address_CoinHemp__success
[2020-11-25 11:57:53,822 INFO  L130     BoogieDeclarations]: Found specification of procedure account_address_CoinHemp__fail
[2020-11-25 11:57:53,822 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CoinHemp__success
[2020-11-25 11:57:53,822 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CoinHemp__fail
[2020-11-25 11:57:53,822 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CoinHemp__success
[2020-11-25 11:57:53,822 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CoinHemp__fail
[2020-11-25 11:57:53,822 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CoinHemp__success
[2020-11-25 11:57:53,822 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CoinHemp__fail
[2020-11-25 11:57:53,822 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CoinHemp__success
[2020-11-25 11:57:53,823 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CoinHemp__fail
[2020-11-25 11:57:53,823 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 11:57:53,823 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 11:57:53,823 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 11:57:53,823 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_only_pre__fail
[2020-11-25 11:57:53,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 11:57:53,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 11:57:53,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp_NoBaseCtor__fail
[2020-11-25 11:57:53,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp_NoBaseCtor__success
[2020-11-25 11:57:53,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp__fail
[2020-11-25 11:57:53,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp__success
[2020-11-25 11:57:53,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CoinHemp__fail
[2020-11-25 11:57:53,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CoinHemp__success
[2020-11-25 11:57:53,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CoinHemp__fail
[2020-11-25 11:57:53,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CoinHemp__success
[2020-11-25 11:57:53,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CoinHemp__fail
[2020-11-25 11:57:53,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CoinHemp__success
[2020-11-25 11:57:53,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CoinHemp__fail
[2020-11-25 11:57:53,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CoinHemp__success
[2020-11-25 11:57:53,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CoinHemp__fail
[2020-11-25 11:57:53,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CoinHemp__success
[2020-11-25 11:57:53,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:57:53,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:57:53,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:57:53,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:57:53,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAdmin~address_CoinHemp__fail
[2020-11-25 11:57:53,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAdmin~address_CoinHemp__success
[2020-11-25 11:57:53,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure withDraw_CoinHemp__fail
[2020-11-25 11:57:53,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure withDraw_CoinHemp__success
[2020-11-25 11:57:53,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_CoinHemp__fail
[2020-11-25 11:57:53,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_CoinHemp__success
[2020-11-25 11:57:53,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:53,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:53,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:53,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:53,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:53,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:53,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:53,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:53,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_address_CoinHemp__fail
[2020-11-25 11:57:53,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_address_CoinHemp__success
[2020-11-25 11:57:53,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure account_address_CoinHemp__fail
[2020-11-25 11:57:53,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure account_address_CoinHemp__success
[2020-11-25 11:57:53,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CoinHemp__fail
[2020-11-25 11:57:53,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CoinHemp__success
[2020-11-25 11:57:53,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CoinHemp__fail
[2020-11-25 11:57:53,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CoinHemp__success
[2020-11-25 11:57:53,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CoinHemp__fail
[2020-11-25 11:57:53,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CoinHemp__success
[2020-11-25 11:57:53,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CoinHemp__fail
[2020-11-25 11:57:53,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CoinHemp__success
[2020-11-25 11:57:53,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 11:57:53,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 11:57:53,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 11:57:53,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 11:57:53,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 11:57:53,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 11:57:53,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_only_pre__fail
[2020-11-25 11:57:53,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_only_pre__success
[2020-11-25 11:57:53,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_CoinHemp
[2020-11-25 11:57:53,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 11:57:53,828 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 11:57:53,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 11:57:54,014 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:57:54,138 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:57:54,139 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:57:54,139 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:57:54,416 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 11:57:54,417 INFO  L286             CfgBuilder]: Removed 1 assue(true) statements.
[2020-11-25 11:57:54,418 INFO  L202        PluginConnector]: Adding new model CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:57:54 BoogieIcfgContainer
[2020-11-25 11:57:54,418 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:53" (2/2) ...
[2020-11-25 11:57:54,418 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 11:57:54,419 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@976a7a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:57:54, skipping insertion in model container
[2020-11-25 11:57:54,419 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 11:57:54,419 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 11:57:54,419 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 11:57:54,421 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 11:57:54,421 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:53" (1/3) ...
[2020-11-25 11:57:54,421 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@3a7fdd46 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:57:54, skipping insertion in model container
[2020-11-25 11:57:54,421 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:53" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 11:57:54,462 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:57:54 NWAContainer
[2020-11-25 11:57:54,463 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 11:57:54,463 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 11:57:54,463 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 11:57:54,464 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 11:57:54,465 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:57:54" (3/4) ...
[2020-11-25 11:57:54,465 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@367387d and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:57:54, skipping insertion in model container
[2020-11-25 11:57:54,465 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:57:54" (4/4) ...
[2020-11-25 11:57:54,469 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 11:57:54,472 INFO  L110   BuchiProductObserver]: Initial RCFG 1294 locations, 1653 edges
[2020-11-25 11:57:54,472 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 11:57:54,485 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 11:57:55,517 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 11:57:55,521 INFO  L110   BuchiProductObserver]: BuchiProgram size 3030 locations, 5195 edges
[2020-11-25 11:57:55,521 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:57:55 BoogieIcfgContainer
[2020-11-25 11:57:55,522 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 11:57:55,522 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 11:57:55,522 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 11:57:55,523 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 11:57:55,524 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:57:55" (1/1) ...
[2020-11-25 11:57:55,590 INFO  L313           BlockEncoder]: Initial Icfg 3030 locations, 5195 edges
[2020-11-25 11:57:55,590 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 11:57:55,591 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 11:57:55,591 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 11:57:55,592 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 11:57:55,602 INFO  L70    emoveInfeasibleEdges]: Removed 27 edges and 5 locations because of local infeasibility
[2020-11-25 11:57:55,608 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 11:57:55,617 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 11:57:55,621 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 11:57:55,624 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 11:57:55,624 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 11:57:55,629 INFO  L313           BlockEncoder]: Encoded RCFG 3012 locations, 5149 edges
[2020-11-25 11:57:55,629 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:57:55 BasicIcfg
[2020-11-25 11:57:55,629 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 11:57:55,630 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 11:57:55,630 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 11:57:55,632 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 11:57:55,632 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:55,632 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:53" (1/6) ...
[2020-11-25 11:57:55,634 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@71d8922c and model type CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:57:55, skipping insertion in model container
[2020-11-25 11:57:55,634 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:55,634 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:53" (2/6) ...
[2020-11-25 11:57:55,635 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@71d8922c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:57:55, skipping insertion in model container
[2020-11-25 11:57:55,635 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:55,635 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:57:54" (3/6) ...
[2020-11-25 11:57:55,635 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@71d8922c and model type CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:57:55, skipping insertion in model container
[2020-11-25 11:57:55,635 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:55,635 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:57:54" (4/6) ...
[2020-11-25 11:57:55,635 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@71d8922c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:57:55, skipping insertion in model container
[2020-11-25 11:57:55,636 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:55,636 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:57:55" (5/6) ...
[2020-11-25 11:57:55,636 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@71d8922c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 11:57:55, skipping insertion in model container
[2020-11-25 11:57:55,636 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:55,636 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:57:55" (6/6) ...
[2020-11-25 11:57:55,637 INFO  L404   chiAutomizerObserver]: Analyzing ICFG CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-normal.bpl_BEv2
[2020-11-25 11:57:55,674 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 11:57:55,675 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 11:57:55,675 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 11:57:55,675 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 11:57:55,675 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 11:57:55,675 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 11:57:55,675 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 11:57:55,675 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 11:57:55,675 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 11:57:55,700 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3012 states.
[2020-11-25 11:57:55,759 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:55,760 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:55,760 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:55,767 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:55,767 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:55,767 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 11:57:55,767 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3012 states.
[2020-11-25 11:57:55,786 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:55,786 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:55,786 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:55,788 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:55,788 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_CoinHemp0 := false;
[L3]                 call_transferFrom_CoinHemp0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2768]              assume null == 0;
[L2769]  CALL        call this := FreshRefGenerator__success();
[L1411]              havoc newRef;
[L1412]              assume Alloc[newRef] == false;
[L1413]              Alloc[newRef] := true;
[L1414]              assume newRef != null;
[L2769]  RET         call this := FreshRefGenerator__success();
[L2770]              assume now >= 0;
[L2771]              assume DType[this] == CoinHemp;
[L2772]              assume msgvalue_MSG >= 0;
[L2773]              gas := gas - 53000;
[L2774]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L96]                havoc __exception;
[L97]                revert := false;
[L98]    COND FALSE  !(__exception)
[L122]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1463]              assume msgsender_MSG != null;
[L1464]              Balance[this] := 0;
[L1465]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1469]              balances_CoinHemp[this] := zeroRefintArr();
[L1470]              sum_balances0[this] := 0;
[L1471]              name_CoinHemp[this] := -1920728545;
[L1472]              symbol_CoinHemp[this] := 294157574;
[L1473]              decimals_CoinHemp[this] := 18;
[L1474]              initSupply_CoinHemp[this] := 400000000;
[L1475]              totalSupply_CoinHemp[this] := 0;
[L1476]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1477]              sum_allowed1[this] := 0;
[L1480]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1481]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1482]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1484]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1485]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1913]  COND TRUE   a_s472 == 0
[L1914]              c_s472 := 0;
[L1485]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1486]  COND TRUE   revert
[L1513]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  COND FALSE  !(revert)
[L122]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L123]               assume !revert && gas >= 0;
[L2774]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2775]              assume !revert && gas >= 0;

Loop:
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND TRUE   choice == 15
[L2666]              gas := gas - 21000;
[L2667]  COND FALSE  !(gas >= 0)
[L2778]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:55,805 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:55,805 INFO  L82        PathProgramCache]: Analyzing trace with hash 1309527869, now seen corresponding path program 1 times
[2020-11-25 11:57:55,809 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:55,831 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:57:55,886 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:57:55,888 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:57:55,889 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:57:55,893 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:57:56,014 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:57:56,014 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:57:56,017 INFO  L87              Difference]: Start difference. First operand 3012 states. Second operand 4 states.
[2020-11-25 11:57:56,488 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:57:56,488 INFO  L93              Difference]: Finished difference Result 2875 states and 3367 transitions.
[2020-11-25 11:57:56,489 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:57:56,491 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2875 states and 3367 transitions.
[2020-11-25 11:57:56,512 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:56,540 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2875 states to 2870 states and 3357 transitions.
[2020-11-25 11:57:56,542 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 11:57:56,542 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 125
[2020-11-25 11:57:56,543 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2870 states and 3357 transitions.
[2020-11-25 11:57:56,553 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:57:56,553 INFO  L728         BuchiCegarLoop]: Abstraction has 2870 states and 3357 transitions.
[2020-11-25 11:57:56,574 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2870 states and 3357 transitions.
[2020-11-25 11:57:56,620 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2870 to 2870.
[2020-11-25 11:57:56,620 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2870 states.
[2020-11-25 11:57:56,625 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2870 states to 2870 states and 3357 transitions.
[2020-11-25 11:57:56,626 INFO  L751         BuchiCegarLoop]: Abstraction has 2870 states and 3357 transitions.
[2020-11-25 11:57:56,626 INFO  L631         BuchiCegarLoop]: Abstraction has 2870 states and 3357 transitions.
[2020-11-25 11:57:56,626 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 11:57:56,626 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2870 states and 3357 transitions.
[2020-11-25 11:57:56,631 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:56,631 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:56,632 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:56,633 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:56,633 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_CoinHemp0 := false;
[L3]                 call_transferFrom_CoinHemp0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2768]              assume null == 0;
[L2769]  CALL        call this := FreshRefGenerator__success();
[L1411]              havoc newRef;
[L1412]              assume Alloc[newRef] == false;
[L1413]              Alloc[newRef] := true;
[L1414]              assume newRef != null;
[L2769]  RET         call this := FreshRefGenerator__success();
[L2770]              assume now >= 0;
[L2771]              assume DType[this] == CoinHemp;
[L2772]              assume msgvalue_MSG >= 0;
[L2773]              gas := gas - 53000;
[L2774]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L96]                havoc __exception;
[L97]                revert := false;
[L98]    COND FALSE  !(__exception)
[L122]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1463]              assume msgsender_MSG != null;
[L1464]              Balance[this] := 0;
[L1465]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1469]              balances_CoinHemp[this] := zeroRefintArr();
[L1470]              sum_balances0[this] := 0;
[L1471]              name_CoinHemp[this] := -1920728545;
[L1472]              symbol_CoinHemp[this] := 294157574;
[L1473]              decimals_CoinHemp[this] := 18;
[L1474]              initSupply_CoinHemp[this] := 400000000;
[L1475]              totalSupply_CoinHemp[this] := 0;
[L1476]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1477]              sum_allowed1[this] := 0;
[L1480]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1481]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1482]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1484]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1485]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1913]  COND TRUE   a_s472 == 0
[L1914]              c_s472 := 0;
[L1485]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1486]  COND TRUE   revert
[L1513]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  COND FALSE  !(revert)
[L122]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L123]               assume !revert && gas >= 0;
[L2774]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2775]              assume !revert && gas >= 0;
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND TRUE   choice == 7
[L2715]              gas := gas - 21000;
[L2716]  COND TRUE   gas >= 0
[L2717]              assume _value_s231 >= 0 && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2718]              assume msgvalue_MSG == 0;
[L2719]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s231 && p1 != _to_s231) && (p2 != _from_s231 || p3 != msgsender_MSG)) && _from_s231 != _to_s231) && _value_s231 <= balances_CoinHemp[this][_from_s231]) && _value_s231 <= allowed_CoinHemp[this][_from_s231][msgsender_MSG]) && balances_CoinHemp[this][_to_s231] + _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s231 >= 0) && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s231] >= 0) && balances_CoinHemp[this][_to_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_from_s231] >= 0) && balances_CoinHemp[this][_from_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] >= 0) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_CoinHemp0 := true;
[L3]                 call_transferFrom_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L271]               havoc __exception;
[L272]               revert := false;
[L273]   COND FALSE  !(__exception)
[L297]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L1646]              __var_8 := null;
[L1647]  COND TRUE   !(_to_s231 != null)
[L1648]              revert := true;
[L297]   RET         call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L298]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((__ret_0_ == true && balances_CoinHemp[this][_from_s231] == old(balances_CoinHemp[this][_from_s231]) - _value_s231) && balances_CoinHemp[this][_to_s231] == old(balances_CoinHemp[this][_to_s231]) + _value_s231) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] == old(allowed_CoinHemp[this][_from_s231][msgsender_MSG]) - _value_s231) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this][p1] == old(balances_CoinHemp[this][p1])) && allowed_CoinHemp[this][p2][p3] == old(allowed_CoinHemp[this][p2][p3])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2719]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2778]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND TRUE   choice == 7
[L2715]              gas := gas - 21000;
[L2716]  COND TRUE   gas >= 0
[L2717]              assume _value_s231 >= 0 && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2718]              assume msgvalue_MSG == 0;
[L2719]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s231 && p1 != _to_s231) && (p2 != _from_s231 || p3 != msgsender_MSG)) && _from_s231 != _to_s231) && _value_s231 <= balances_CoinHemp[this][_from_s231]) && _value_s231 <= allowed_CoinHemp[this][_from_s231][msgsender_MSG]) && balances_CoinHemp[this][_to_s231] + _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s231 >= 0) && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s231] >= 0) && balances_CoinHemp[this][_to_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_from_s231] >= 0) && balances_CoinHemp[this][_from_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] >= 0) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_CoinHemp0 := true;
[L3]                 call_transferFrom_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L271]               havoc __exception;
[L272]               revert := false;
[L273]   COND FALSE  !(__exception)
[L297]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L1646]              __var_8 := null;
[L1647]  COND TRUE   !(_to_s231 != null)
[L1648]              revert := true;
[L297]   RET         call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L298]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((__ret_0_ == true && balances_CoinHemp[this][_from_s231] == old(balances_CoinHemp[this][_from_s231]) - _value_s231) && balances_CoinHemp[this][_to_s231] == old(balances_CoinHemp[this][_to_s231]) + _value_s231) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] == old(allowed_CoinHemp[this][_from_s231][msgsender_MSG]) - _value_s231) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this][p1] == old(balances_CoinHemp[this][p1])) && allowed_CoinHemp[this][p2][p3] == old(allowed_CoinHemp[this][p2][p3])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2719]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2778]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:56,637 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:56,637 INFO  L82        PathProgramCache]: Analyzing trace with hash -1784935947, now seen corresponding path program 1 times
[2020-11-25 11:57:56,638 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:56,649 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:57:56,682 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:57:56,683 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:57:56,683 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:57:56,684 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:57:56,684 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:57:56,684 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:57:56,684 INFO  L87              Difference]: Start difference. First operand 2870 states and 3357 transitions. cyclomatic complexity: 493 Second operand 4 states.
[2020-11-25 11:57:56,736 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:57:56,736 INFO  L93              Difference]: Finished difference Result 2872 states and 3358 transitions.
[2020-11-25 11:57:56,736 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:57:56,737 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2872 states and 3358 transitions.
[2020-11-25 11:57:56,745 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:56,757 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2872 states to 2869 states and 3355 transitions.
[2020-11-25 11:57:56,757 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 125
[2020-11-25 11:57:56,757 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 125
[2020-11-25 11:57:56,758 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2869 states and 3355 transitions.
[2020-11-25 11:57:56,761 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:57:56,761 INFO  L728         BuchiCegarLoop]: Abstraction has 2869 states and 3355 transitions.
[2020-11-25 11:57:56,764 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2869 states and 3355 transitions.
[2020-11-25 11:57:56,785 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2869 to 2869.
[2020-11-25 11:57:56,785 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2869 states.
[2020-11-25 11:57:56,789 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2869 states to 2869 states and 3355 transitions.
[2020-11-25 11:57:56,789 INFO  L751         BuchiCegarLoop]: Abstraction has 2869 states and 3355 transitions.
[2020-11-25 11:57:56,789 INFO  L631         BuchiCegarLoop]: Abstraction has 2869 states and 3355 transitions.
[2020-11-25 11:57:56,789 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 11:57:56,789 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2869 states and 3355 transitions.
[2020-11-25 11:57:56,793 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:56,794 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:56,794 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:56,795 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:56,795 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_CoinHemp0 := false;
[L3]                 call_transferFrom_CoinHemp0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2768]              assume null == 0;
[L2769]  CALL        call this := FreshRefGenerator__success();
[L1411]              havoc newRef;
[L1412]              assume Alloc[newRef] == false;
[L1413]              Alloc[newRef] := true;
[L1414]              assume newRef != null;
[L2769]  RET         call this := FreshRefGenerator__success();
[L2770]              assume now >= 0;
[L2771]              assume DType[this] == CoinHemp;
[L2772]              assume msgvalue_MSG >= 0;
[L2773]              gas := gas - 53000;
[L2774]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L96]                havoc __exception;
[L97]                revert := false;
[L98]    COND FALSE  !(__exception)
[L122]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1463]              assume msgsender_MSG != null;
[L1464]              Balance[this] := 0;
[L1465]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1469]              balances_CoinHemp[this] := zeroRefintArr();
[L1470]              sum_balances0[this] := 0;
[L1471]              name_CoinHemp[this] := -1920728545;
[L1472]              symbol_CoinHemp[this] := 294157574;
[L1473]              decimals_CoinHemp[this] := 18;
[L1474]              initSupply_CoinHemp[this] := 400000000;
[L1475]              totalSupply_CoinHemp[this] := 0;
[L1476]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1477]              sum_allowed1[this] := 0;
[L1480]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1481]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1482]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1484]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1485]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1913]  COND FALSE  !(a_s472 == 0)
[L1917]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1918]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1919]              c_s472 := c_s472;
[L1485]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1486]  COND TRUE   revert
[L1513]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  COND FALSE  !(revert)
[L122]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L123]               assume !revert && gas >= 0;
[L2774]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2775]              assume !revert && gas >= 0;
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND TRUE   choice == 7
[L2715]              gas := gas - 21000;
[L2716]  COND TRUE   gas >= 0
[L2717]              assume _value_s231 >= 0 && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2718]              assume msgvalue_MSG == 0;
[L2719]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s231 && p1 != _to_s231) && (p2 != _from_s231 || p3 != msgsender_MSG)) && _from_s231 != _to_s231) && _value_s231 <= balances_CoinHemp[this][_from_s231]) && _value_s231 <= allowed_CoinHemp[this][_from_s231][msgsender_MSG]) && balances_CoinHemp[this][_to_s231] + _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s231 >= 0) && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s231] >= 0) && balances_CoinHemp[this][_to_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_from_s231] >= 0) && balances_CoinHemp[this][_from_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] >= 0) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_CoinHemp0 := true;
[L3]                 call_transferFrom_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L271]               havoc __exception;
[L272]               revert := false;
[L273]   COND FALSE  !(__exception)
[L297]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L1646]              __var_8 := null;
[L1647]  COND TRUE   !(_to_s231 != null)
[L1648]              revert := true;
[L297]   RET         call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L298]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((__ret_0_ == true && balances_CoinHemp[this][_from_s231] == old(balances_CoinHemp[this][_from_s231]) - _value_s231) && balances_CoinHemp[this][_to_s231] == old(balances_CoinHemp[this][_to_s231]) + _value_s231) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] == old(allowed_CoinHemp[this][_from_s231][msgsender_MSG]) - _value_s231) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this][p1] == old(balances_CoinHemp[this][p1])) && allowed_CoinHemp[this][p2][p3] == old(allowed_CoinHemp[this][p2][p3])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2719]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2778]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND TRUE   choice == 7
[L2715]              gas := gas - 21000;
[L2716]  COND TRUE   gas >= 0
[L2717]              assume _value_s231 >= 0 && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2718]              assume msgvalue_MSG == 0;
[L2719]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s231 && p1 != _to_s231) && (p2 != _from_s231 || p3 != msgsender_MSG)) && _from_s231 != _to_s231) && _value_s231 <= balances_CoinHemp[this][_from_s231]) && _value_s231 <= allowed_CoinHemp[this][_from_s231][msgsender_MSG]) && balances_CoinHemp[this][_to_s231] + _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s231 >= 0) && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s231] >= 0) && balances_CoinHemp[this][_to_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_from_s231] >= 0) && balances_CoinHemp[this][_from_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] >= 0) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_CoinHemp0 := true;
[L3]                 call_transferFrom_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L271]               havoc __exception;
[L272]               revert := false;
[L273]   COND FALSE  !(__exception)
[L297]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L1646]              __var_8 := null;
[L1647]  COND TRUE   !(_to_s231 != null)
[L1648]              revert := true;
[L297]   RET         call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L298]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((__ret_0_ == true && balances_CoinHemp[this][_from_s231] == old(balances_CoinHemp[this][_from_s231]) - _value_s231) && balances_CoinHemp[this][_to_s231] == old(balances_CoinHemp[this][_to_s231]) + _value_s231) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] == old(allowed_CoinHemp[this][_from_s231][msgsender_MSG]) - _value_s231) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this][p1] == old(balances_CoinHemp[this][p1])) && allowed_CoinHemp[this][p2][p3] == old(allowed_CoinHemp[this][p2][p3])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2719]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2778]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:56,798 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:56,798 INFO  L82        PathProgramCache]: Analyzing trace with hash 623812490, now seen corresponding path program 1 times
[2020-11-25 11:57:56,799 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:56,806 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:57:56,824 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:57:56,824 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:57:56,824 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:57:56,825 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:57:56,825 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:57:56,825 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:57:56,825 INFO  L87              Difference]: Start difference. First operand 2869 states and 3355 transitions. cyclomatic complexity: 492 Second operand 4 states.
[2020-11-25 11:57:57,370 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:57:57,370 INFO  L93              Difference]: Finished difference Result 3795 states and 4413 transitions.
[2020-11-25 11:57:57,370 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:57:57,371 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3795 states and 4413 transitions.
[2020-11-25 11:57:57,383 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 11:57:57,397 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3795 states to 3691 states and 4289 transitions.
[2020-11-25 11:57:57,397 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 172
[2020-11-25 11:57:57,398 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 172
[2020-11-25 11:57:57,398 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3691 states and 4289 transitions.
[2020-11-25 11:57:57,402 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:57:57,402 INFO  L728         BuchiCegarLoop]: Abstraction has 3691 states and 4289 transitions.
[2020-11-25 11:57:57,406 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3691 states and 4289 transitions.
[2020-11-25 11:57:57,435 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3691 to 2905.
[2020-11-25 11:57:57,435 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2905 states.
[2020-11-25 11:57:57,439 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2905 states to 2905 states and 3275 transitions.
[2020-11-25 11:57:57,439 INFO  L751         BuchiCegarLoop]: Abstraction has 2905 states and 3275 transitions.
[2020-11-25 11:57:57,439 INFO  L631         BuchiCegarLoop]: Abstraction has 2905 states and 3275 transitions.
[2020-11-25 11:57:57,439 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 11:57:57,439 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2905 states and 3275 transitions.
[2020-11-25 11:57:57,443 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:57,443 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:57,443 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:57,445 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:57,445 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_CoinHemp0 := false;
[L3]                 call_transferFrom_CoinHemp0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2768]              assume null == 0;
[L2769]  CALL        call this := FreshRefGenerator__success();
[L1411]              havoc newRef;
[L1412]              assume Alloc[newRef] == false;
[L1413]              Alloc[newRef] := true;
[L1414]              assume newRef != null;
[L2769]  RET         call this := FreshRefGenerator__success();
[L2770]              assume now >= 0;
[L2771]              assume DType[this] == CoinHemp;
[L2772]              assume msgvalue_MSG >= 0;
[L2773]              gas := gas - 53000;
[L2774]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L96]                havoc __exception;
[L97]                revert := false;
[L98]    COND FALSE  !(__exception)
[L122]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1463]              assume msgsender_MSG != null;
[L1464]              Balance[this] := 0;
[L1465]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1469]              balances_CoinHemp[this] := zeroRefintArr();
[L1470]              sum_balances0[this] := 0;
[L1471]              name_CoinHemp[this] := -1920728545;
[L1472]              symbol_CoinHemp[this] := 294157574;
[L1473]              decimals_CoinHemp[this] := 18;
[L1474]              initSupply_CoinHemp[this] := 400000000;
[L1475]              totalSupply_CoinHemp[this] := 0;
[L1476]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1477]              sum_allowed1[this] := 0;
[L1480]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1481]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1482]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1484]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1485]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1913]  COND FALSE  !(a_s472 == 0)
[L1917]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1918]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1919]              c_s472 := c_s472;
[L1485]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1486]  COND FALSE  !(revert)
[L1489]              totalSupply_CoinHemp[this] := __var_1;
[L1490]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1491]              balances_CoinHemp[this][account_address_CoinHemp[this]] := totalSupply_CoinHemp[this];
[L1492]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1513]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  COND FALSE  !(revert)
[L122]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L123]               assume !revert && gas >= 0;
[L2774]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2775]              assume !revert && gas >= 0;
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND TRUE   choice == 7
[L2715]              gas := gas - 21000;
[L2716]  COND TRUE   gas >= 0
[L2717]              assume _value_s231 >= 0 && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2718]              assume msgvalue_MSG == 0;
[L2719]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s231 && p1 != _to_s231) && (p2 != _from_s231 || p3 != msgsender_MSG)) && _from_s231 != _to_s231) && _value_s231 <= balances_CoinHemp[this][_from_s231]) && _value_s231 <= allowed_CoinHemp[this][_from_s231][msgsender_MSG]) && balances_CoinHemp[this][_to_s231] + _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s231 >= 0) && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s231] >= 0) && balances_CoinHemp[this][_to_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_from_s231] >= 0) && balances_CoinHemp[this][_from_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] >= 0) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_CoinHemp0 := true;
[L3]                 call_transferFrom_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L271]               havoc __exception;
[L272]               revert := false;
[L273]   COND TRUE   __exception
[L274]               __tmp__Balance := Balance;
[L275]               __tmp__DType := DType;
[L276]               __tmp__Alloc := Alloc;
[L277]               __tmp__balance_ADDR := balance_ADDR;
[L278]               __tmp__M_Ref_int := M_Ref_int;
[L279]               __tmp__sum_balances0 := sum_balances0;
[L280]               __tmp__alloc_allowed_CoinHemp_lvl0 := alloc_allowed_CoinHemp_lvl0;
[L281]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L282]               __tmp__sum_allowed1 := sum_allowed1;
[L283]               __tmp__Length := Length;
[L284]               __tmp__now := now;
[L285]               __tmp__admin_address_CoinHemp := admin_address_CoinHemp;
[L286]               __tmp__account_address_CoinHemp := account_address_CoinHemp;
[L287]               __tmp__balances_CoinHemp := balances_CoinHemp;
[L288]               __tmp__name_CoinHemp := name_CoinHemp;
[L289]               __tmp__symbol_CoinHemp := symbol_CoinHemp;
[L290]               __tmp__decimals_CoinHemp := decimals_CoinHemp;
[L291]               __tmp__initSupply_CoinHemp := initSupply_CoinHemp;
[L292]               __tmp__totalSupply_CoinHemp := totalSupply_CoinHemp;
[L293]               __tmp__allowed_CoinHemp := allowed_CoinHemp;
[L294]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L1602]              __var_8 := null;
[L1603]  COND TRUE   !(_to_s231 != null)
[L1604]              revert := true;
[L294]   RET         call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L295]               assume revert || gas < 0;
[L2719]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2778]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND TRUE   choice == 7
[L2715]              gas := gas - 21000;
[L2716]  COND TRUE   gas >= 0
[L2717]              assume _value_s231 >= 0 && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2718]              assume msgvalue_MSG == 0;
[L2719]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s231 && p1 != _to_s231) && (p2 != _from_s231 || p3 != msgsender_MSG)) && _from_s231 != _to_s231) && _value_s231 <= balances_CoinHemp[this][_from_s231]) && _value_s231 <= allowed_CoinHemp[this][_from_s231][msgsender_MSG]) && balances_CoinHemp[this][_to_s231] + _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s231 >= 0) && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s231] >= 0) && balances_CoinHemp[this][_to_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_from_s231] >= 0) && balances_CoinHemp[this][_from_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] >= 0) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_CoinHemp0 := true;
[L3]                 call_transferFrom_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L271]               havoc __exception;
[L272]               revert := false;
[L273]   COND TRUE   __exception
[L274]               __tmp__Balance := Balance;
[L275]               __tmp__DType := DType;
[L276]               __tmp__Alloc := Alloc;
[L277]               __tmp__balance_ADDR := balance_ADDR;
[L278]               __tmp__M_Ref_int := M_Ref_int;
[L279]               __tmp__sum_balances0 := sum_balances0;
[L280]               __tmp__alloc_allowed_CoinHemp_lvl0 := alloc_allowed_CoinHemp_lvl0;
[L281]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L282]               __tmp__sum_allowed1 := sum_allowed1;
[L283]               __tmp__Length := Length;
[L284]               __tmp__now := now;
[L285]               __tmp__admin_address_CoinHemp := admin_address_CoinHemp;
[L286]               __tmp__account_address_CoinHemp := account_address_CoinHemp;
[L287]               __tmp__balances_CoinHemp := balances_CoinHemp;
[L288]               __tmp__name_CoinHemp := name_CoinHemp;
[L289]               __tmp__symbol_CoinHemp := symbol_CoinHemp;
[L290]               __tmp__decimals_CoinHemp := decimals_CoinHemp;
[L291]               __tmp__initSupply_CoinHemp := initSupply_CoinHemp;
[L292]               __tmp__totalSupply_CoinHemp := totalSupply_CoinHemp;
[L293]               __tmp__allowed_CoinHemp := allowed_CoinHemp;
[L294]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L1602]              __var_8 := null;
[L1603]  COND TRUE   !(_to_s231 != null)
[L1604]              revert := true;
[L294]   RET         call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L295]               assume revert || gas < 0;
[L2719]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2778]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:57,448 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:57,448 INFO  L82        PathProgramCache]: Analyzing trace with hash -1670438374, now seen corresponding path program 1 times
[2020-11-25 11:57:57,448 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:57,466 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:57:57,486 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:57:57,530 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:57,531 INFO  L82        PathProgramCache]: Analyzing trace with hash -1419813657, now seen corresponding path program 1 times
[2020-11-25 11:57:57,531 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:57,537 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:57:57,544 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:57:57,601 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:57,601 INFO  L82        PathProgramCache]: Analyzing trace with hash -1269441472, now seen corresponding path program 1 times
[2020-11-25 11:57:57,602 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:57,622 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:57:57,643 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 11:57:57,843 WARN  L188               SmtUtils]: Spent 141.00 ms on a formula simplification. DAG size of input: 168 DAG size of output: 161
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 2647 to 5281
Garbage collection #8: 5281 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 5281 to 10559
[2020-11-25 11:57:58,017 WARN  L188               SmtUtils]: Spent 137.00 ms on a formula simplification. DAG size of input: 117 DAG size of output: 111
[2020-11-25 11:57:58,157 WARN  L188               SmtUtils]: Spent 138.00 ms on a formula simplification that was a NOOP. DAG size: 266
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 6661 to 13313
[2020-11-25 11:57:58,784 WARN  L188               SmtUtils]: Spent 605.00 ms on a formula simplification. DAG size of input: 220 DAG size of output: 220
[2020-11-25 11:57:59,543 WARN  L188               SmtUtils]: Spent 756.00 ms on a formula simplification. DAG size of input: 276 DAG size of output: 248
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 12073 to 24137
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 7027 to 14051
[2020-11-25 11:57:59,748 WARN  L188               SmtUtils]: Spent 154.00 ms on a formula simplification. DAG size of input: 150 DAG size of output: 144
[2020-11-25 11:57:59,900 WARN  L188               SmtUtils]: Spent 150.00 ms on a formula simplification that was a NOOP. DAG size: 302
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7933 to 15859
[2020-11-25 11:58:00,273 WARN  L188               SmtUtils]: Spent 361.00 ms on a formula simplification. DAG size of input: 239 DAG size of output: 239
[2020-11-25 11:58:00,451 WARN  L188               SmtUtils]: Spent 177.00 ms on a formula simplification that was a NOOP. DAG size: 239
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 11:58:00,779 WARN  L188               SmtUtils]: Spent 315.00 ms on a formula simplification. DAG size of input: 164 DAG size of output: 148
[2020-11-25 11:58:00,789 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
[2020-11-25 11:58:00,932 WARN  L188               SmtUtils]: Spent 120.00 ms on a formula simplification. DAG size of input: 136 DAG size of output: 134
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-25 11:58:01,429 WARN  L188               SmtUtils]: Spent 114.00 ms on a formula simplification that was a NOOP. DAG size: 259
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #8: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
[2020-11-25 11:58:01,795 WARN  L188               SmtUtils]: Spent 105.00 ms on a formula simplification that was a NOOP. DAG size: 266
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6661 to 13313
[2020-11-25 11:58:02,262 WARN  L188               SmtUtils]: Spent 459.00 ms on a formula simplification. DAG size of input: 220 DAG size of output: 220
[2020-11-25 11:58:02,889 WARN  L188               SmtUtils]: Spent 625.00 ms on a formula simplification. DAG size of input: 275 DAG size of output: 248
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 11:58:03,047 WARN  L188               SmtUtils]: Spent 143.00 ms on a formula simplification. DAG size of input: 150 DAG size of output: 144
[2020-11-25 11:58:03,194 WARN  L188               SmtUtils]: Spent 145.00 ms on a formula simplification that was a NOOP. DAG size: 302
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-25 11:58:03,547 WARN  L188               SmtUtils]: Spent 347.00 ms on a formula simplification. DAG size of input: 239 DAG size of output: 239
[2020-11-25 11:58:05,680 WARN  L188               SmtUtils]: Spent 2.13 s on a formula simplification. DAG size of input: 454 DAG size of output: 442
Garbage collection #1: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #2: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #3: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #4: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #5: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #6: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 11:58:06,614 WARN  L188               SmtUtils]: Spent 919.00 ms on a formula simplification. DAG size of input: 217 DAG size of output: 205
[2020-11-25 11:58:07,064 WARN  L188               SmtUtils]: Spent 435.00 ms on a formula simplification that was a NOOP. DAG size: 316
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6661 to 13313
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-25 11:58:07,504 WARN  L188               SmtUtils]: Spent 427.00 ms on a formula simplification. DAG size of input: 200 DAG size of output: 195
[2020-11-25 11:58:08,145 WARN  L188               SmtUtils]: Spent 640.00 ms on a formula simplification. DAG size of input: 308 DAG size of output: 307
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12541 to 25073
[2020-11-25 11:58:08,958 WARN  L188               SmtUtils]: Spent 806.00 ms on a formula simplification. DAG size of input: 306 DAG size of output: 302
[2020-11-25 11:58:08,972 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:58:08,989 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:58:08,997 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:58:08 BasicIcfg
[2020-11-25 11:58:08,997 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 11:58:08,997 INFO  L168              Benchmark]: Toolchain (without parser) took 15417.86 ms. Allocated memory was 1.0 GB in the beginning and 2.4 GB in the end (delta: 1.4 GB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -248.0 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
[2020-11-25 11:58:08,998 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:58:08,998 INFO  L168              Benchmark]: Boogie Preprocessor took 85.78 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:58:08,998 INFO  L168              Benchmark]: UtopiaSpecLang took 69.26 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 11:58:08,998 INFO  L168              Benchmark]: Boogie Printer took 12.68 ms. Allocated memory is still 1.0 GB. Free memory is still 924.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:58:08,999 INFO  L168              Benchmark]: RCFGBuilder took 669.95 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 849.3 MB in the end (delta: 75.2 MB). Peak memory consumption was 75.2 MB. Max. memory is 15.3 GB.
[2020-11-25 11:58:08,999 INFO  L168              Benchmark]: UtopiaLTL2Aut took 43.68 ms. Allocated memory is still 1.0 GB. Free memory was 849.3 MB in the beginning and 845.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 11:58:09,000 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1058.65 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 64.5 MB). Free memory was 845.7 MB in the beginning and 816.2 MB in the end (delta: 29.5 MB). Peak memory consumption was 131.2 MB. Max. memory is 15.3 GB.
[2020-11-25 11:58:09,000 INFO  L168              Benchmark]: BlockEncodingV2 took 107.61 ms. Allocated memory is still 1.1 GB. Free memory was 816.2 MB in the beginning and 778.5 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
[2020-11-25 11:58:09,000 INFO  L168              Benchmark]: BuchiAutomizer took 13367.22 ms. Allocated memory was 1.1 GB in the beginning and 2.4 GB in the end (delta: 1.3 GB). Free memory was 778.5 MB in the beginning and 1.2 GB in the end (delta: -410.0 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
[2020-11-25 11:58:09,004 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3030 locations, 5195 edges
  - StatisticsResult: Encoded RCFG
    3012 locations, 5149 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 85.78 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 69.26 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 12.68 ms. Allocated memory is still 1.0 GB. Free memory is still 924.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 669.95 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 849.3 MB in the end (delta: 75.2 MB). Peak memory consumption was 75.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 43.68 ms. Allocated memory is still 1.0 GB. Free memory was 849.3 MB in the beginning and 845.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1058.65 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 64.5 MB). Free memory was 845.7 MB in the beginning and 816.2 MB in the end (delta: 29.5 MB). Peak memory consumption was 131.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 107.61 ms. Allocated memory is still 1.1 GB. Free memory was 816.2 MB in the beginning and 778.5 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 13367.22 ms. Allocated memory was 1.1 GB in the beginning and 2.4 GB in the end (delta: 1.3 GB). Free memory was 778.5 MB in the beginning and 1.2 GB in the end (delta: -410.0 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1294 locations, 1653 edges
  - StatisticsResult: BuchiProgram size
    3030 locations, 5195 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 4 locations. The remainder module has 2905 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 13.3s and 4 iterations.  TraceHistogramMax:1. Analysis of lassos took 11.7s. Construction of modules took 0.7s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 786 StatesRemovedByMinimization, 1 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2905 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 10491 SDtfs, 7211 SDslu, 12643 SDs, 0 SdLazy, 1699 SolverSat, 1710 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.7s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129639956) = (new CoinHemp)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639945});
[L96]                havoc __exception;
[L97]                revert := false;
[L98]    COND FALSE  !(__exception)
[L122]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1463]              assume msgsender_MSG != null;
[L1464]              Balance[this] := 0;
[L1465]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1469]              balances_CoinHemp[this] := zeroRefintArr();
[L1470]              sum_balances0[this] := 0;
[L1471]              name_CoinHemp[this] := -1920728545;
[L1472]              symbol_CoinHemp[this] := 294157574;
[L1473]              decimals_CoinHemp[this] := 18;
[L1474]              initSupply_CoinHemp[this] := 400000000;
[L1475]              totalSupply_CoinHemp[this] := 0;
[L1476]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1477]              sum_allowed1[this] := 0;
[L1480]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1481]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1482]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1484]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1485]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1913]  COND FALSE  !(a_s472 == 0)
[L1917]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1918]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1919]              c_s472 := c_s472;
[L1485]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1486]  COND FALSE  !(revert)
[L1489]              totalSupply_CoinHemp[this] := __var_1;
[L1490]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1491]              balances_CoinHemp[this][account_address_CoinHemp[this]] := totalSupply_CoinHemp[this];
[L1492]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1513]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  COND FALSE  !(revert)
[L122]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L123]               assume !revert && gas >= 0;
[L2774]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
CoinHemp(115792089237316195423570985008687907853269984665640564039457584007913129639956).transferFrom~address~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639958, _from : 115792089237316195423570985008687907853269984665640564039457584007913129639959, _to : 0, _value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != _from_s231 && p1 != _to_s231) && (p2 != _from_s231 || p3 != msgsender_MSG)) && _from_s231 != _to_s231) && _value_s231 <= balances_CoinHemp[this][_from_s231]) && _value_s231 <= allowed_CoinHemp[this][_from_s231][msgsender_MSG]) && balances_CoinHemp[this][_to_s231] + _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s231 >= 0) && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s231] >= 0) && balances_CoinHemp[this][_to_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_from_s231] >= 0) && balances_CoinHemp[this][_from_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] >= 0) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_CoinHemp0 := true;
[L3]                call_transferFrom_CoinHemp0 := false;
[L3]                revert := revert_hold;
[L271]              havoc __exception;
[L272]              revert := false;
[L273]   COND TRUE  __exception
[L274]              __tmp__Balance := Balance;
[L275]              __tmp__DType := DType;
[L276]              __tmp__Alloc := Alloc;
[L277]              __tmp__balance_ADDR := balance_ADDR;
[L278]              __tmp__M_Ref_int := M_Ref_int;
[L279]              __tmp__sum_balances0 := sum_balances0;
[L280]              __tmp__alloc_allowed_CoinHemp_lvl0 := alloc_allowed_CoinHemp_lvl0;
[L281]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L282]              __tmp__sum_allowed1 := sum_allowed1;
[L283]              __tmp__Length := Length;
[L284]              __tmp__now := now;
[L285]              __tmp__admin_address_CoinHemp := admin_address_CoinHemp;
[L286]              __tmp__account_address_CoinHemp := account_address_CoinHemp;
[L287]              __tmp__balances_CoinHemp := balances_CoinHemp;
[L288]              __tmp__name_CoinHemp := name_CoinHemp;
[L289]              __tmp__symbol_CoinHemp := symbol_CoinHemp;
[L290]              __tmp__decimals_CoinHemp := decimals_CoinHemp;
[L291]              __tmp__initSupply_CoinHemp := initSupply_CoinHemp;
[L292]              __tmp__totalSupply_CoinHemp := totalSupply_CoinHemp;
[L293]              __tmp__allowed_CoinHemp := allowed_CoinHemp;
[L294]   CALL       call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L1602]             __var_8 := null;
[L1603]  COND TRUE  !(_to_s231 != null)
[L1604]             revert := true;
[L294]   RET        call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L295]              assume revert || gas < 0;
[L2719]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);

Loop:
CoinHemp(115792089237316195423570985008687907853269984665640564039457584007913129639956).transferFrom~address~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639960, _from : 115792089237316195423570985008687907853269984665640564039457584007913129639943, _to : 0, _value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != _from_s231 && p1 != _to_s231) && (p2 != _from_s231 || p3 != msgsender_MSG)) && _from_s231 != _to_s231) && _value_s231 <= balances_CoinHemp[this][_from_s231]) && _value_s231 <= allowed_CoinHemp[this][_from_s231][msgsender_MSG]) && balances_CoinHemp[this][_to_s231] + _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s231 >= 0) && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s231] >= 0) && balances_CoinHemp[this][_to_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_from_s231] >= 0) && balances_CoinHemp[this][_from_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] >= 0) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_CoinHemp0 := true;
[L3]                call_transferFrom_CoinHemp0 := false;
[L3]                revert := revert_hold;
[L271]              havoc __exception;
[L272]              revert := false;
[L273]   COND TRUE  __exception
[L274]              __tmp__Balance := Balance;
[L275]              __tmp__DType := DType;
[L276]              __tmp__Alloc := Alloc;
[L277]              __tmp__balance_ADDR := balance_ADDR;
[L278]              __tmp__M_Ref_int := M_Ref_int;
[L279]              __tmp__sum_balances0 := sum_balances0;
[L280]              __tmp__alloc_allowed_CoinHemp_lvl0 := alloc_allowed_CoinHemp_lvl0;
[L281]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L282]              __tmp__sum_allowed1 := sum_allowed1;
[L283]              __tmp__Length := Length;
[L284]              __tmp__now := now;
[L285]              __tmp__admin_address_CoinHemp := admin_address_CoinHemp;
[L286]              __tmp__account_address_CoinHemp := account_address_CoinHemp;
[L287]              __tmp__balances_CoinHemp := balances_CoinHemp;
[L288]              __tmp__name_CoinHemp := name_CoinHemp;
[L289]              __tmp__symbol_CoinHemp := symbol_CoinHemp;
[L290]              __tmp__decimals_CoinHemp := decimals_CoinHemp;
[L291]              __tmp__initSupply_CoinHemp := initSupply_CoinHemp;
[L292]              __tmp__totalSupply_CoinHemp := totalSupply_CoinHemp;
[L293]              __tmp__allowed_CoinHemp := allowed_CoinHemp;
[L294]   CALL       call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L1602]             __var_8 := null;
[L1603]  COND TRUE  !(_to_s231 != null)
[L1604]             revert := true;
[L294]   RET        call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L295]              assume revert || gas < 0;
[L2719]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
