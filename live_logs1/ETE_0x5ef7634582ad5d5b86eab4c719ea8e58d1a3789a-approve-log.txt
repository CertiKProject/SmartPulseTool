This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 15:10:20,502 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 15:10:20,503 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 15:10:20,514 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 15:10:20,514 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 15:10:20,514 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 15:10:20,515 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 15:10:20,517 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 15:10:20,518 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 15:10:20,519 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 15:10:20,519 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 15:10:20,520 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 15:10:20,520 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 15:10:20,521 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 15:10:20,522 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 15:10:20,522 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 15:10:20,523 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 15:10:20,524 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 15:10:20,525 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 15:10:20,526 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 15:10:20,527 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 15:10:20,528 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 15:10:20,529 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 15:10:20,529 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 15:10:20,530 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 15:10:20,530 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 15:10:20,530 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 15:10:20,531 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 15:10:20,531 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 15:10:20,531 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 15:10:20,532 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 15:10:20,532 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 15:10:20,533 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 15:10:20,533 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 15:10:20,534 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 15:10:20,534 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 15:10:20,534 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 15:10:20,535 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 15:10:20,535 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 15:10:20,535 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 15:10:20,536 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 15:10:20,536 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 15:10:20,543 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 15:10:20,544 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 15:10:20,544 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 15:10:20,544 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 15:10:20,545 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 15:10:20,545 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 15:10:20,545 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 15:10:20,545 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 15:10:20,545 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 15:10:20,545 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 15:10:20,545 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 15:10:20,545 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 15:10:20,545 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 15:10:20,546 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 15:10:20,546 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 15:10:20,546 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 15:10:20,546 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 15:10:20,546 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 15:10:20,546 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 15:10:20,546 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 15:10:20,546 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 15:10:20,546 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 15:10:20,546 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 15:10:20,547 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 15:10:20,547 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 15:10:20,547 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 15:10:20,568 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 15:10:20,578 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 15:10:20,580 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 15:10:20,581 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 15:10:20,582 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 15:10:20,582 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl
[2020-11-25 15:10:20,582 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl'
[2020-11-25 15:10:20,658 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 15:10:20,659 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 15:10:20,660 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 15:10:20,660 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 15:10:20,660 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 15:10:20,676 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:20" (1/1) ...
[2020-11-25 15:10:20,677 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:20" (1/1) ...
[2020-11-25 15:10:20,705 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:20" (1/1) ...
[2020-11-25 15:10:20,705 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:20" (1/1) ...
[2020-11-25 15:10:20,723 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:20" (1/1) ...
[2020-11-25 15:10:20,732 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:20" (1/1) ...
[2020-11-25 15:10:20,740 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:20" (1/1) ...
[2020-11-25 15:10:20,749 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 15:10:20,749 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 15:10:20,749 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 15:10:20,751 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 15:10:20,755 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:20" (1/1) ...
[2020-11-25 15:10:20,772 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 15:10:20,778 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 15:10:20,785 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 15:10:20,791 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=spender_s371 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[spender_s371,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]
[2020-11-25 15:10:20,793 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && _allowances_ERC20[this][msg.sender][spender_s371]==amount_s371 ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowances_ERC20[this][p1][p2]==( old(_allowances_ERC20[this][p1][p2]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[spender_s371,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],IdentifierExpression[amount_s371,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]]
[2020-11-25 15:10:20,797 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 15:10:20,798 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_ERC200) ==> ( <>AP(success_approve_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 15:10:20,806 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:10:20 PropertyContainer
[2020-11-25 15:10:20,806 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 15:10:20,806 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 15:10:20,806 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 15:10:20,806 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 15:10:20,807 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:20" (1/2) ...
[2020-11-25 15:10:20,807 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 15:10:20,807 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 15:10:20,821 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:10:20" (2/2) ...
[2020-11-25 15:10:20,821 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 15:10:20,822 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 15:10:20,822 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 15:10:20,822 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 15:10:20,822 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:20" (1/2) ...
[2020-11-25 15:10:20,872 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 15:10:20,873 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 15:10:20,873 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 15:10:20,873 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 15:10:20,873 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 15:10:20,873 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 15:10:20,873 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 15:10:20,873 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 15:10:20,873 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 15:10:20,873 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 15:10:20,873 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 15:10:20,874 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 15:10:20,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 15:10:20,874 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 15:10:20,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 15:10:20,874 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 15:10:20,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 15:10:20,874 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 15:10:20,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 15:10:20,874 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-25 15:10:20,875 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-25 15:10:20,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-25 15:10:20,875 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-25 15:10:20,875 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:10:20,875 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 15:10:20,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 15:10:20,875 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:10:20,875 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 15:10:20,875 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:10:20,875 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 15:10:20,875 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 15:10:20,875 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:10:20,876 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 15:10:20,876 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 15:10:20,876 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 15:10:20,876 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 15:10:20,876 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 15:10:20,876 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 15:10:20,876 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 15:10:20,876 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 15:10:20,876 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 15:10:20,876 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 15:10:20,876 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 15:10:20,876 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 15:10:20,877 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 15:10:20,877 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 15:10:20,877 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 15:10:20,877 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 15:10:20,877 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 15:10:20,877 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 15:10:20,877 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 15:10:20,877 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 15:10:20,877 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 15:10:20,877 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 15:10:20,877 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 15:10:20,877 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE_NoBaseCtor__success
[2020-11-25 15:10:20,877 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE
[2020-11-25 15:10:20,877 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE
[2020-11-25 15:10:20,878 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 15:10:20,878 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 15:10:20,878 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 15:10:20,878 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 15:10:20,878 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 15:10:20,878 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 15:10:20,878 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 15:10:20,878 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-25 15:10:20,878 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-25 15:10:20,878 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 15:10:20,878 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 15:10:20,878 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 15:10:20,878 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 15:10:20,878 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ETE
[2020-11-25 15:10:20,879 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 15:10:20,879 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 15:10:20,879 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 15:10:20,879 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 15:10:20,879 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 15:10:20,879 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 15:10:20,879 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 15:10:20,879 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 15:10:20,879 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 15:10:20,879 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 15:10:20,880 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 15:10:20,880 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 15:10:20,880 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 15:10:20,880 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 15:10:20,880 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 15:10:20,880 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-25 15:10:20,880 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-25 15:10:20,880 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-25 15:10:20,880 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:10:20,880 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 15:10:20,880 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 15:10:20,881 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:10:20,881 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:10:20,881 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:10:20,881 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:10:20,881 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:10:20,881 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:10:20,881 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 15:10:20,881 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 15:10:20,881 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 15:10:20,881 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 15:10:20,881 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 15:10:20,882 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 15:10:20,882 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 15:10:20,882 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 15:10:20,882 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 15:10:20,882 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 15:10:20,882 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 15:10:20,882 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 15:10:20,882 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 15:10:20,882 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 15:10:20,882 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:10:20,883 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:10:20,883 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:10:20,883 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:10:20,883 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 15:10:20,883 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 15:10:20,883 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 15:10:20,883 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 15:10:20,883 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 15:10:20,883 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE_NoBaseCtor__fail
[2020-11-25 15:10:20,884 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE__success
[2020-11-25 15:10:20,884 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE__fail
[2020-11-25 15:10:20,884 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 15:10:20,884 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 15:10:20,884 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 15:10:20,884 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 15:10:20,884 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 15:10:20,884 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 15:10:20,884 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 15:10:20,884 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 15:10:20,885 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 15:10:20,885 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 15:10:20,885 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 15:10:20,885 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 15:10:20,885 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 15:10:20,885 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 15:10:20,885 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 15:10:20,885 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 15:10:20,885 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 15:10:20,885 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 15:10:20,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 15:10:20,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 15:10:20,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-25 15:10:20,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-25 15:10:20,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-25 15:10:20,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-25 15:10:20,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-25 15:10:20,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:10:20,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:10:20,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 15:10:20,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 15:10:20,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:10:20,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:10:20,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:10:20,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 15:10:20,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:10:20,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:10:20,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:10:20,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 15:10:20,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:10:20,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 15:10:20,888 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:10:20,888 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:10:20,888 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 15:10:20,888 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 15:10:20,888 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 15:10:20,888 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 15:10:20,888 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 15:10:20,888 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 15:10:20,888 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 15:10:20,888 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 15:10:20,888 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 15:10:20,889 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 15:10:20,889 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 15:10:20,889 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 15:10:20,889 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 15:10:20,889 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 15:10:20,889 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:10:20,889 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:10:20,889 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:10:20,889 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:10:20,889 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 15:10:20,889 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 15:10:20,889 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 15:10:20,889 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 15:10:20,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 15:10:20,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 15:10:20,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 15:10:20,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 15:10:20,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 15:10:20,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 15:10:20,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE_NoBaseCtor__fail
[2020-11-25 15:10:20,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE_NoBaseCtor__success
[2020-11-25 15:10:20,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE__fail
[2020-11-25 15:10:20,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE__success
[2020-11-25 15:10:20,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 15:10:20,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 15:10:20,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 15:10:20,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 15:10:20,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 15:10:20,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 15:10:20,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 15:10:20,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 15:10:20,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 15:10:20,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 15:10:20,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-25 15:10:20,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-25 15:10:20,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 15:10:20,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 15:10:20,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 15:10:20,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 15:10:20,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ETE
[2020-11-25 15:10:20,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 15:10:20,892 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 15:10:20,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 15:10:21,093 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:10:21,093 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:10:21,094 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:10:21,277 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:10:21,525 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 15:10:21,525 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 15:10:21,527 INFO  L202        PluginConnector]: Adding new model ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:10:21 BoogieIcfgContainer
[2020-11-25 15:10:21,527 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:10:20" (2/2) ...
[2020-11-25 15:10:21,527 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 15:10:21,527 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@63625a3a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:10:21, skipping insertion in model container
[2020-11-25 15:10:21,528 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 15:10:21,528 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 15:10:21,528 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 15:10:21,529 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 15:10:21,529 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:20" (1/3) ...
[2020-11-25 15:10:21,530 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@4233d8e1 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:10:21, skipping insertion in model container
[2020-11-25 15:10:21,530 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:10:20" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 15:10:21,570 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:10:21 NWAContainer
[2020-11-25 15:10:21,570 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 15:10:21,570 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 15:10:21,570 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 15:10:21,571 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 15:10:21,572 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:10:21" (3/4) ...
[2020-11-25 15:10:21,572 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@7af896d2 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:10:21, skipping insertion in model container
[2020-11-25 15:10:21,573 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:10:21" (4/4) ...
[2020-11-25 15:10:21,576 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 15:10:21,580 INFO  L110   BuchiProductObserver]: Initial RCFG 1504 locations, 2162 edges
[2020-11-25 15:10:21,580 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 15:10:21,590 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 15:10:22,930 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 15:10:22,937 INFO  L110   BuchiProductObserver]: BuchiProgram size 3846 locations, 7076 edges
[2020-11-25 15:10:22,938 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:10:22 BoogieIcfgContainer
[2020-11-25 15:10:22,938 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 15:10:22,938 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 15:10:22,938 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 15:10:22,940 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 15:10:22,941 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:10:22" (1/1) ...
[2020-11-25 15:10:23,037 INFO  L313           BlockEncoder]: Initial Icfg 3846 locations, 7076 edges
[2020-11-25 15:10:23,037 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 15:10:23,038 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 15:10:23,038 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 15:10:23,038 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 15:10:23,050 INFO  L70    emoveInfeasibleEdges]: Removed 168 edges and 15 locations because of local infeasibility
[2020-11-25 15:10:23,057 INFO  L70        RemoveSinkStates]: Removed 116 edges and 77 locations by removing sink states
[2020-11-25 15:10:23,070 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 15:10:23,073 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 15:10:23,076 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 15:10:23,076 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 15:10:23,080 INFO  L313           BlockEncoder]: Encoded RCFG 3734 locations, 6763 edges
[2020-11-25 15:10:23,081 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:10:23 BasicIcfg
[2020-11-25 15:10:23,081 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 15:10:23,081 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 15:10:23,081 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 15:10:23,083 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 15:10:23,083 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:10:23,083 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:20" (1/6) ...
[2020-11-25 15:10:23,085 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@44b20c1 and model type ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:10:23, skipping insertion in model container
[2020-11-25 15:10:23,085 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:10:23,085 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:10:20" (2/6) ...
[2020-11-25 15:10:23,085 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@44b20c1 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:10:23, skipping insertion in model container
[2020-11-25 15:10:23,085 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:10:23,085 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:10:21" (3/6) ...
[2020-11-25 15:10:23,086 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@44b20c1 and model type ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:10:23, skipping insertion in model container
[2020-11-25 15:10:23,086 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:10:23,086 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:10:21" (4/6) ...
[2020-11-25 15:10:23,086 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@44b20c1 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:10:23, skipping insertion in model container
[2020-11-25 15:10:23,086 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:10:23,086 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:10:22" (5/6) ...
[2020-11-25 15:10:23,086 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@44b20c1 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 03:10:23, skipping insertion in model container
[2020-11-25 15:10:23,086 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:10:23,086 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:10:23" (6/6) ...
[2020-11-25 15:10:23,087 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_approve.bpl_BEv2
[2020-11-25 15:10:23,121 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 15:10:23,122 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 15:10:23,122 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 15:10:23,122 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 15:10:23,122 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 15:10:23,122 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 15:10:23,122 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 15:10:23,122 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 15:10:23,122 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 15:10:23,153 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3734 states.
[2020-11-25 15:10:23,205 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:23,205 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:23,205 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:23,214 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:23,214 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:23,215 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 15:10:23,215 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3734 states.
[2020-11-25 15:10:23,233 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:23,233 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:23,233 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:23,234 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:23,234 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4164]              assume null == 0;
[L4165]  CALL        call this := FreshRefGenerator__success();
[L1483]              havoc newRef;
[L1484]              assume Alloc[newRef] == false;
[L1485]              Alloc[newRef] := true;
[L1486]              assume newRef != null;
[L4165]  RET         call this := FreshRefGenerator__success();
[L4166]              assume now >= 0;
[L4167]              assume DType[this] == ETE;
[L4168]              assume msgvalue_MSG == 0;
[L4169]              gas := gas - 53000;
[L4170]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND TRUE   revert
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume !revert && gas >= 0;

Loop:
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND TRUE   choice == 11
[L4086]              gas := gas - 21000;
[L4087]  COND FALSE  !(gas >= 0)
[L4174]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:23,248 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:23,248 INFO  L82        PathProgramCache]: Analyzing trace with hash -79944511, now seen corresponding path program 1 times
[2020-11-25 15:10:23,253 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:23,273 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:10:23,315 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:10:23,316 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:10:23,317 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:10:23,320 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:10:23,506 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:10:23,506 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:10:23,508 INFO  L87              Difference]: Start difference. First operand 3734 states. Second operand 4 states.
[2020-11-25 15:10:23,929 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:10:23,929 INFO  L93              Difference]: Finished difference Result 2170 states and 2613 transitions.
[2020-11-25 15:10:23,930 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:10:23,931 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2170 states and 2613 transitions.
[2020-11-25 15:10:23,943 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:23,959 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2170 states to 2170 states and 2613 transitions.
[2020-11-25 15:10:23,960 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 15:10:23,961 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 468
[2020-11-25 15:10:23,962 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2170 states and 2613 transitions.
[2020-11-25 15:10:23,968 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:10:23,968 INFO  L728         BuchiCegarLoop]: Abstraction has 2170 states and 2613 transitions.
[2020-11-25 15:10:23,981 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2170 states and 2613 transitions.
[2020-11-25 15:10:24,018 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2170 to 2170.
[2020-11-25 15:10:24,019 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2170 states.
[2020-11-25 15:10:24,023 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2170 states to 2170 states and 2613 transitions.
[2020-11-25 15:10:24,023 INFO  L751         BuchiCegarLoop]: Abstraction has 2170 states and 2613 transitions.
[2020-11-25 15:10:24,024 INFO  L631         BuchiCegarLoop]: Abstraction has 2170 states and 2613 transitions.
[2020-11-25 15:10:24,024 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 15:10:24,024 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2170 states and 2613 transitions.
[2020-11-25 15:10:24,030 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:24,030 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:24,030 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:24,031 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:24,032 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4164]              assume null == 0;
[L4165]  CALL        call this := FreshRefGenerator__success();
[L1483]              havoc newRef;
[L1484]              assume Alloc[newRef] == false;
[L1485]              Alloc[newRef] := true;
[L1486]              assume newRef != null;
[L4165]  RET         call this := FreshRefGenerator__success();
[L4166]              assume now >= 0;
[L4167]              assume DType[this] == ETE;
[L4168]              assume msgvalue_MSG == 0;
[L4169]              gas := gas - 53000;
[L4170]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND TRUE   revert
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND TRUE   revert
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume !revert && gas >= 0;
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND TRUE   choice == 7
[L4111]              gas := gas - 21000;
[L4112]  COND TRUE   gas >= 0
[L4113]              assume amount_s371 >= 0 && amount_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4114]              assume msgvalue_MSG == 0;
[L4115]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s371;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L723]               havoc __exception;
[L724]               revert := false;
[L725]   COND FALSE  !(__exception)
[L746]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L2005]  COND TRUE   DType[this] == ETE
[L2006]  CALL        call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1649]              __ret_0_ := msgsender_MSG;
[L2006]  RET         call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2007]  COND TRUE   revert
[L746]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L747]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s371] == amount_s371) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4115]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L4174]  RET         call CorralChoice_ETE(this);

Loop:
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND TRUE   choice == 7
[L4111]              gas := gas - 21000;
[L4112]  COND TRUE   gas >= 0
[L4113]              assume amount_s371 >= 0 && amount_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4114]              assume msgvalue_MSG == 0;
[L4115]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s371;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L723]               havoc __exception;
[L724]               revert := false;
[L725]   COND FALSE  !(__exception)
[L746]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L2005]  COND TRUE   DType[this] == ETE
[L2006]  CALL        call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1649]              __ret_0_ := msgsender_MSG;
[L2006]  RET         call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2007]  COND TRUE   revert
[L746]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L747]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s371] == amount_s371) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4115]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L4174]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:24,035 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:24,035 INFO  L82        PathProgramCache]: Analyzing trace with hash 1843152491, now seen corresponding path program 1 times
[2020-11-25 15:10:24,036 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:24,044 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:10:24,062 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:10:24,062 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:10:24,062 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 15:10:24,064 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:10:24,064 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 15:10:24,064 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 15:10:24,064 INFO  L87              Difference]: Start difference. First operand 2170 states and 2613 transitions. cyclomatic complexity: 445 Second operand 3 states.
[2020-11-25 15:10:24,122 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:10:24,122 INFO  L93              Difference]: Finished difference Result 2814 states and 3393 transitions.
[2020-11-25 15:10:24,123 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 15:10:24,123 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2814 states and 3393 transitions.
[2020-11-25 15:10:24,134 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:10:24,145 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2814 states to 2596 states and 3039 transitions.
[2020-11-25 15:10:24,145 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 583
[2020-11-25 15:10:24,146 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 601
[2020-11-25 15:10:24,146 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2596 states and 3039 transitions.
[2020-11-25 15:10:24,150 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:10:24,150 INFO  L728         BuchiCegarLoop]: Abstraction has 2596 states and 3039 transitions.
[2020-11-25 15:10:24,152 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2596 states and 3039 transitions.
[2020-11-25 15:10:24,173 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2596 to 2240.
[2020-11-25 15:10:24,174 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2240 states.
[2020-11-25 15:10:24,177 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2240 states to 2240 states and 2597 transitions.
[2020-11-25 15:10:24,177 INFO  L751         BuchiCegarLoop]: Abstraction has 2240 states and 2597 transitions.
[2020-11-25 15:10:24,178 INFO  L631         BuchiCegarLoop]: Abstraction has 2240 states and 2597 transitions.
[2020-11-25 15:10:24,178 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 15:10:24,178 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2240 states and 2597 transitions.
[2020-11-25 15:10:24,182 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:24,182 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:24,182 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:24,184 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:24,184 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4164]              assume null == 0;
[L4165]  CALL        call this := FreshRefGenerator__success();
[L1483]              havoc newRef;
[L1484]              assume Alloc[newRef] == false;
[L1485]              Alloc[newRef] := true;
[L1486]              assume newRef != null;
[L4165]  RET         call this := FreshRefGenerator__success();
[L4166]              assume now >= 0;
[L4167]              assume DType[this] == ETE;
[L4168]              assume msgvalue_MSG == 0;
[L4169]              gas := gas - 53000;
[L4170]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L2789]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L2789]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2790]  COND FALSE  !(revert)
[L2793]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L1853]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1857]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1825]              assume msgsender_MSG != null;
[L1826]              Balance[this] := 0;
[L1827]              _balances_ERC20[this] := zeroRefintArr();
[L1828]              sum__balances0[this] := 0;
[L1829]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1830]              sum__allowances1[this] := 0;
[L1831]              _totalSupply_ERC20[this] := 0;
[L1861]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L2793]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2797]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1563]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1563]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]  COND FALSE  !(revert)
[L1567]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1538]              assume msgsender_MSG != null;
[L1539]              Balance[this] := 0;
[L1540]              _name_ERC20Detailed[this] := 284814211;
[L1541]              _symbol_ERC20Detailed[this] := 284814211;
[L1542]              _decimals_ERC20Detailed[this] := 0;
[L1544]              _name_ERC20Detailed[this] := name_s99;
[L1545]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1546]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1567]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1568]  COND FALSE  !(revert)
[L2797]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2798]  COND FALSE  !(revert)
[L2801]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2733]              assume msgsender_MSG != null;
[L2734]              Balance[this] := 0;
[L2736]  COND TRUE   DType[this] == ETE
[L2737]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1605]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2737]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2738]  COND FALSE  !(revert)
[L2744]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2745]  COND TRUE   DType[this] == ETE
[L2746]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2467]              __var_16 := null;
[L2468]  COND FALSE  !(!(account_s562 != null))
[L2472]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2472]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2473]  COND FALSE  !(revert)
[L2476]              _totalSupply_ERC20[this] := __var_17;
[L2477]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2477]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L2478]  COND FALSE  !(revert)
[L2481]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s562];
[L2482]              _balances_ERC20[this][account_s562] := __var_18;
[L2483]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s562];
[L2484]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2746]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2747]  COND FALSE  !(revert)
[L2801]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2802]  COND FALSE  !(revert)
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume !revert && gas >= 0;
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND TRUE   choice == 7
[L4111]              gas := gas - 21000;
[L4112]  COND TRUE   gas >= 0
[L4113]              assume amount_s371 >= 0 && amount_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4114]              assume msgvalue_MSG == 0;
[L4115]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s371;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L723]               havoc __exception;
[L724]               revert := false;
[L725]   COND TRUE   __exception
[L726]               __tmp__Balance := Balance;
[L727]               __tmp__DType := DType;
[L728]               __tmp__Alloc := Alloc;
[L729]               __tmp__balance_ADDR := balance_ADDR;
[L730]               __tmp__M_Ref_int := M_Ref_int;
[L731]               __tmp__sum__balances0 := sum__balances0;
[L732]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L733]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L734]               __tmp__sum__allowances1 := sum__allowances1;
[L735]               __tmp__Length := Length;
[L736]               __tmp__now := now;
[L737]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L738]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L739]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L740]               __tmp___balances_ERC20 := _balances_ERC20;
[L741]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L742]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L743]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L1972]  COND TRUE   __tmp__DType[this] == ETE
[L1973]  CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1643]              __ret_0_ := msgsender_MSG;
[L1973]  RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1974]  COND TRUE   revert
[L743]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L744]               assume revert || gas < 0;
[L4115]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L4174]  RET         call CorralChoice_ETE(this);

Loop:
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND TRUE   choice == 7
[L4111]              gas := gas - 21000;
[L4112]  COND TRUE   gas >= 0
[L4113]              assume amount_s371 >= 0 && amount_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4114]              assume msgvalue_MSG == 0;
[L4115]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s371;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L723]               havoc __exception;
[L724]               revert := false;
[L725]   COND TRUE   __exception
[L726]               __tmp__Balance := Balance;
[L727]               __tmp__DType := DType;
[L728]               __tmp__Alloc := Alloc;
[L729]               __tmp__balance_ADDR := balance_ADDR;
[L730]               __tmp__M_Ref_int := M_Ref_int;
[L731]               __tmp__sum__balances0 := sum__balances0;
[L732]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L733]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L734]               __tmp__sum__allowances1 := sum__allowances1;
[L735]               __tmp__Length := Length;
[L736]               __tmp__now := now;
[L737]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L738]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L739]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L740]               __tmp___balances_ERC20 := _balances_ERC20;
[L741]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L742]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L743]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L1972]  COND TRUE   __tmp__DType[this] == ETE
[L1973]  CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1643]              __ret_0_ := msgsender_MSG;
[L1973]  RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1974]  COND TRUE   revert
[L743]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L744]               assume revert || gas < 0;
[L4115]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L4174]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:24,188 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:24,188 INFO  L82        PathProgramCache]: Analyzing trace with hash -634224836, now seen corresponding path program 1 times
[2020-11-25 15:10:24,189 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:24,205 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:10:24,250 INFO  L134       CoverageAnalysis]: Checked inductivity of 45 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 45 trivial. 0 not checked.
[2020-11-25 15:10:24,251 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:10:24,251 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 15:10:24,251 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:10:24,251 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 15:10:24,251 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-25 15:10:24,252 INFO  L87              Difference]: Start difference. First operand 2240 states and 2597 transitions. cyclomatic complexity: 359 Second operand 5 states.
[2020-11-25 15:10:24,677 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:10:24,678 INFO  L93              Difference]: Finished difference Result 2600 states and 2977 transitions.
[2020-11-25 15:10:24,678 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:10:24,678 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2600 states and 2977 transitions.
[2020-11-25 15:10:24,691 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:10:24,705 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2600 states to 2600 states and 2977 transitions.
[2020-11-25 15:10:24,705 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 603
[2020-11-25 15:10:24,706 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 603
[2020-11-25 15:10:24,706 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2600 states and 2977 transitions.
[2020-11-25 15:10:24,710 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:10:24,710 INFO  L728         BuchiCegarLoop]: Abstraction has 2600 states and 2977 transitions.
[2020-11-25 15:10:24,713 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2600 states and 2977 transitions.
[2020-11-25 15:10:24,743 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2600 to 2360.
[2020-11-25 15:10:24,743 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2360 states.
[2020-11-25 15:10:24,747 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2360 states to 2360 states and 2677 transitions.
[2020-11-25 15:10:24,747 INFO  L751         BuchiCegarLoop]: Abstraction has 2360 states and 2677 transitions.
[2020-11-25 15:10:24,747 INFO  L631         BuchiCegarLoop]: Abstraction has 2360 states and 2677 transitions.
[2020-11-25 15:10:24,748 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 15:10:24,748 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2360 states and 2677 transitions.
[2020-11-25 15:10:24,755 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:10:24,755 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:24,755 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:24,758 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:24,758 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4164]              assume null == 0;
[L4165]  CALL        call this := FreshRefGenerator__success();
[L1483]              havoc newRef;
[L1484]              assume Alloc[newRef] == false;
[L1485]              Alloc[newRef] := true;
[L1486]              assume newRef != null;
[L4165]  RET         call this := FreshRefGenerator__success();
[L4166]              assume now >= 0;
[L4167]              assume DType[this] == ETE;
[L4168]              assume msgvalue_MSG == 0;
[L4169]              gas := gas - 53000;
[L4170]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L2789]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L2789]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2790]  COND FALSE  !(revert)
[L2793]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L1853]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1857]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1825]              assume msgsender_MSG != null;
[L1826]              Balance[this] := 0;
[L1827]              _balances_ERC20[this] := zeroRefintArr();
[L1828]              sum__balances0[this] := 0;
[L1829]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1830]              sum__allowances1[this] := 0;
[L1831]              _totalSupply_ERC20[this] := 0;
[L1861]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L2793]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2797]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1563]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1563]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]  COND FALSE  !(revert)
[L1567]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1538]              assume msgsender_MSG != null;
[L1539]              Balance[this] := 0;
[L1540]              _name_ERC20Detailed[this] := 284814211;
[L1541]              _symbol_ERC20Detailed[this] := 284814211;
[L1542]              _decimals_ERC20Detailed[this] := 0;
[L1544]              _name_ERC20Detailed[this] := name_s99;
[L1545]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1546]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1567]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1568]  COND FALSE  !(revert)
[L2797]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2798]  COND FALSE  !(revert)
[L2801]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2733]              assume msgsender_MSG != null;
[L2734]              Balance[this] := 0;
[L2736]  COND TRUE   DType[this] == ETE
[L2737]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1605]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2737]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2738]  COND FALSE  !(revert)
[L2744]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2745]  COND TRUE   DType[this] == ETE
[L2746]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2467]              __var_16 := null;
[L2468]  COND FALSE  !(!(account_s562 != null))
[L2472]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2472]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2473]  COND FALSE  !(revert)
[L2476]              _totalSupply_ERC20[this] := __var_17;
[L2477]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2477]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L2478]  COND FALSE  !(revert)
[L2481]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s562];
[L2482]              _balances_ERC20[this][account_s562] := __var_18;
[L2483]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s562];
[L2484]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2746]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2747]  COND FALSE  !(revert)
[L2801]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2802]  COND FALSE  !(revert)
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume !revert && gas >= 0;
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND TRUE   choice == 7
[L4111]              gas := gas - 21000;
[L4112]  COND TRUE   gas >= 0
[L4113]              assume amount_s371 >= 0 && amount_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4114]              assume msgvalue_MSG == 0;
[L4115]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s371;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L723]               havoc __exception;
[L724]               revert := false;
[L725]   COND FALSE  !(__exception)
[L746]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L2005]  COND TRUE   DType[this] == ETE
[L2006]  CALL        call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1649]              __ret_0_ := msgsender_MSG;
[L2006]  RET         call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2007]  COND FALSE  !(revert)
[L2018]  COND TRUE   DType[this] == ETE
[L2019]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L2559]              __var_22 := null;
[L2560]  COND FALSE  !(!(owner_s649 != null))
[L2564]              __var_23 := null;
[L2565]  COND FALSE  !(!(spender_s649 != null))
[L2569]              sum__allowances1[owner_s649] := sum__allowances1[owner_s649] - _allowances_ERC20[this][owner_s649][spender_s649];
[L2570]              _allowances_ERC20[this][owner_s649][spender_s649] := amount_s649;
[L2571]              sum__allowances1[owner_s649] := sum__allowances1[owner_s649] + _allowances_ERC20[this][owner_s649][spender_s649];
[L2572]              assert { :EventEmitted "Approval_ERC20" } true;
[L2019]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L2020]  COND FALSE  !(revert)
[L2031]              __ret_0_ := true;
[L746]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L747]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s371] == amount_s371) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4115]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L4174]  RET         call CorralChoice_ETE(this);

Loop:
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND TRUE   choice == 7
[L4111]              gas := gas - 21000;
[L4112]  COND TRUE   gas >= 0
[L4113]              assume amount_s371 >= 0 && amount_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4114]              assume msgvalue_MSG == 0;
[L4115]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s371;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L723]               havoc __exception;
[L724]               revert := false;
[L725]   COND FALSE  !(__exception)
[L746]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L2005]  COND TRUE   DType[this] == ETE
[L2006]  CALL        call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1649]              __ret_0_ := msgsender_MSG;
[L2006]  RET         call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2007]  COND FALSE  !(revert)
[L2018]  COND TRUE   DType[this] == ETE
[L2019]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L2559]              __var_22 := null;
[L2560]  COND FALSE  !(!(owner_s649 != null))
[L2564]              __var_23 := null;
[L2565]  COND FALSE  !(!(spender_s649 != null))
[L2569]              sum__allowances1[owner_s649] := sum__allowances1[owner_s649] - _allowances_ERC20[this][owner_s649][spender_s649];
[L2570]              _allowances_ERC20[this][owner_s649][spender_s649] := amount_s649;
[L2571]              sum__allowances1[owner_s649] := sum__allowances1[owner_s649] + _allowances_ERC20[this][owner_s649][spender_s649];
[L2572]              assert { :EventEmitted "Approval_ERC20" } true;
[L2019]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L2020]  COND FALSE  !(revert)
[L2031]              __ret_0_ := true;
[L746]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L747]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s371] == amount_s371) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4115]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L4174]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:24,763 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:24,763 INFO  L82        PathProgramCache]: Analyzing trace with hash -1597942791, now seen corresponding path program 1 times
[2020-11-25 15:10:24,764 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:24,802 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:10:25,093 INFO  L134       CoverageAnalysis]: Checked inductivity of 45 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 45 trivial. 0 not checked.
[2020-11-25 15:10:25,094 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:10:25,094 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [16] imperfect sequences [] total 16
[2020-11-25 15:10:25,094 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:10:25,094 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-25 15:10:25,094 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=34, Invalid=238, Unknown=0, NotChecked=0, Total=272
[2020-11-25 15:10:25,094 INFO  L87              Difference]: Start difference. First operand 2360 states and 2677 transitions. cyclomatic complexity: 319 Second operand 17 states.
[2020-11-25 15:10:26,710 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:10:26,710 INFO  L93              Difference]: Finished difference Result 2489 states and 2849 transitions.
[2020-11-25 15:10:26,710 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 15:10:26,710 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2489 states and 2849 transitions.
[2020-11-25 15:10:26,717 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 15:10:26,725 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2489 states to 2489 states and 2849 transitions.
[2020-11-25 15:10:26,725 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 611
[2020-11-25 15:10:26,725 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 611
[2020-11-25 15:10:26,725 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2489 states and 2849 transitions.
[2020-11-25 15:10:26,727 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:10:26,727 INFO  L728         BuchiCegarLoop]: Abstraction has 2489 states and 2849 transitions.
[2020-11-25 15:10:26,729 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2489 states and 2849 transitions.
[2020-11-25 15:10:26,749 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2489 to 2458.
[2020-11-25 15:10:26,749 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2458 states.
[2020-11-25 15:10:26,752 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2458 states to 2458 states and 2800 transitions.
[2020-11-25 15:10:26,752 INFO  L751         BuchiCegarLoop]: Abstraction has 2458 states and 2800 transitions.
[2020-11-25 15:10:26,752 INFO  L631         BuchiCegarLoop]: Abstraction has 2458 states and 2800 transitions.
[2020-11-25 15:10:26,752 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 15:10:26,752 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2458 states and 2800 transitions.
[2020-11-25 15:10:26,755 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 15:10:26,755 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:26,755 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:26,757 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:26,757 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4164]              assume null == 0;
[L4165]  CALL        call this := FreshRefGenerator__success();
[L1483]              havoc newRef;
[L1484]              assume Alloc[newRef] == false;
[L1485]              Alloc[newRef] := true;
[L1486]              assume newRef != null;
[L4165]  RET         call this := FreshRefGenerator__success();
[L4166]              assume now >= 0;
[L4167]              assume DType[this] == ETE;
[L4168]              assume msgvalue_MSG == 0;
[L4169]              gas := gas - 53000;
[L4170]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L2789]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L2789]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2790]  COND FALSE  !(revert)
[L2793]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L1853]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1857]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1825]              assume msgsender_MSG != null;
[L1826]              Balance[this] := 0;
[L1827]              _balances_ERC20[this] := zeroRefintArr();
[L1828]              sum__balances0[this] := 0;
[L1829]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1830]              sum__allowances1[this] := 0;
[L1831]              _totalSupply_ERC20[this] := 0;
[L1861]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L2793]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2797]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1563]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1563]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]  COND FALSE  !(revert)
[L1567]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1538]              assume msgsender_MSG != null;
[L1539]              Balance[this] := 0;
[L1540]              _name_ERC20Detailed[this] := 284814211;
[L1541]              _symbol_ERC20Detailed[this] := 284814211;
[L1542]              _decimals_ERC20Detailed[this] := 0;
[L1544]              _name_ERC20Detailed[this] := name_s99;
[L1545]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1546]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1567]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1568]  COND FALSE  !(revert)
[L2797]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2798]  COND FALSE  !(revert)
[L2801]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2733]              assume msgsender_MSG != null;
[L2734]              Balance[this] := 0;
[L2736]  COND TRUE   DType[this] == ETE
[L2737]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1605]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2737]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2738]  COND FALSE  !(revert)
[L2744]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2745]  COND TRUE   DType[this] == ETE
[L2746]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2467]              __var_16 := null;
[L2468]  COND FALSE  !(!(account_s562 != null))
[L2472]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2472]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2473]  COND FALSE  !(revert)
[L2476]              _totalSupply_ERC20[this] := __var_17;
[L2477]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2477]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L2478]  COND FALSE  !(revert)
[L2481]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s562];
[L2482]              _balances_ERC20[this][account_s562] := __var_18;
[L2483]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s562];
[L2484]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2746]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2747]  COND FALSE  !(revert)
[L2801]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2802]  COND FALSE  !(revert)
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume !revert && gas >= 0;
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND TRUE   choice == 7
[L4111]              gas := gas - 21000;
[L4112]  COND TRUE   gas >= 0
[L4113]              assume amount_s371 >= 0 && amount_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4114]              assume msgvalue_MSG == 0;
[L4115]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s371;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L723]               havoc __exception;
[L724]               revert := false;
[L725]   COND TRUE   __exception
[L726]               __tmp__Balance := Balance;
[L727]               __tmp__DType := DType;
[L728]               __tmp__Alloc := Alloc;
[L729]               __tmp__balance_ADDR := balance_ADDR;
[L730]               __tmp__M_Ref_int := M_Ref_int;
[L731]               __tmp__sum__balances0 := sum__balances0;
[L732]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L733]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L734]               __tmp__sum__allowances1 := sum__allowances1;
[L735]               __tmp__Length := Length;
[L736]               __tmp__now := now;
[L737]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L738]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L739]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L740]               __tmp___balances_ERC20 := _balances_ERC20;
[L741]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L742]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L743]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L1972]  COND TRUE   __tmp__DType[this] == ETE
[L1973]  CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1643]              __ret_0_ := msgsender_MSG;
[L1973]  RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1974]  COND FALSE  !(revert)
[L1985]  COND TRUE   __tmp__DType[this] == ETE
[L1986]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L2540]              __var_22 := null;
[L2541]  COND TRUE   !(owner_s649 != null)
[L2542]              revert := true;
[L1986]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L1987]  COND TRUE   revert
[L743]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L744]               assume revert || gas < 0;
[L4115]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L4174]  RET         call CorralChoice_ETE(this);

Loop:
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND TRUE   choice == 7
[L4111]              gas := gas - 21000;
[L4112]  COND TRUE   gas >= 0
[L4113]              assume amount_s371 >= 0 && amount_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4114]              assume msgvalue_MSG == 0;
[L4115]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s371;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L723]               havoc __exception;
[L724]               revert := false;
[L725]   COND TRUE   __exception
[L726]               __tmp__Balance := Balance;
[L727]               __tmp__DType := DType;
[L728]               __tmp__Alloc := Alloc;
[L729]               __tmp__balance_ADDR := balance_ADDR;
[L730]               __tmp__M_Ref_int := M_Ref_int;
[L731]               __tmp__sum__balances0 := sum__balances0;
[L732]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L733]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L734]               __tmp__sum__allowances1 := sum__allowances1;
[L735]               __tmp__Length := Length;
[L736]               __tmp__now := now;
[L737]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L738]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L739]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L740]               __tmp___balances_ERC20 := _balances_ERC20;
[L741]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L742]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L743]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L1972]  COND TRUE   __tmp__DType[this] == ETE
[L1973]  CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1643]              __ret_0_ := msgsender_MSG;
[L1973]  RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1974]  COND FALSE  !(revert)
[L1985]  COND TRUE   __tmp__DType[this] == ETE
[L1986]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L2540]              __var_22 := null;
[L2541]  COND TRUE   !(owner_s649 != null)
[L2542]              revert := true;
[L1986]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L1987]  COND TRUE   revert
[L743]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L744]               assume revert || gas < 0;
[L4115]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L4174]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:26,760 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:26,760 INFO  L82        PathProgramCache]: Analyzing trace with hash -545339973, now seen corresponding path program 1 times
[2020-11-25 15:10:26,761 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:26,771 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:10:26,883 INFO  L134       CoverageAnalysis]: Checked inductivity of 45 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 45 trivial. 0 not checked.
[2020-11-25 15:10:26,883 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:10:26,883 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-25 15:10:26,884 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:10:26,884 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-25 15:10:26,884 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-25 15:10:26,884 INFO  L87              Difference]: Start difference. First operand 2458 states and 2800 transitions. cyclomatic complexity: 346 Second operand 8 states.
[2020-11-25 15:10:26,971 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:10:26,971 INFO  L93              Difference]: Finished difference Result 2486 states and 2840 transitions.
[2020-11-25 15:10:26,971 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 15:10:26,971 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2486 states and 2840 transitions.
[2020-11-25 15:10:26,979 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 15:10:26,989 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2486 states to 2462 states and 2814 transitions.
[2020-11-25 15:10:26,989 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 609
[2020-11-25 15:10:26,990 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 609
[2020-11-25 15:10:26,990 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2462 states and 2814 transitions.
[2020-11-25 15:10:26,993 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:10:26,993 INFO  L728         BuchiCegarLoop]: Abstraction has 2462 states and 2814 transitions.
[2020-11-25 15:10:26,996 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2462 states and 2814 transitions.
[2020-11-25 15:10:27,018 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2462 to 2462.
[2020-11-25 15:10:27,018 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2462 states.
[2020-11-25 15:10:27,022 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2462 states to 2462 states and 2814 transitions.
[2020-11-25 15:10:27,022 INFO  L751         BuchiCegarLoop]: Abstraction has 2462 states and 2814 transitions.
[2020-11-25 15:10:27,022 INFO  L631         BuchiCegarLoop]: Abstraction has 2462 states and 2814 transitions.
[2020-11-25 15:10:27,022 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 15:10:27,022 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2462 states and 2814 transitions.
[2020-11-25 15:10:27,027 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 15:10:27,027 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:27,027 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:27,028 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:27,028 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4164]              assume null == 0;
[L4165]  CALL        call this := FreshRefGenerator__success();
[L1483]              havoc newRef;
[L1484]              assume Alloc[newRef] == false;
[L1485]              Alloc[newRef] := true;
[L1486]              assume newRef != null;
[L4165]  RET         call this := FreshRefGenerator__success();
[L4166]              assume now >= 0;
[L4167]              assume DType[this] == ETE;
[L4168]              assume msgvalue_MSG == 0;
[L4169]              gas := gas - 53000;
[L4170]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L2789]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L2789]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2790]  COND FALSE  !(revert)
[L2793]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L1853]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1857]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1825]              assume msgsender_MSG != null;
[L1826]              Balance[this] := 0;
[L1827]              _balances_ERC20[this] := zeroRefintArr();
[L1828]              sum__balances0[this] := 0;
[L1829]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1830]              sum__allowances1[this] := 0;
[L1831]              _totalSupply_ERC20[this] := 0;
[L1861]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L2793]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2797]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1563]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1563]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]  COND FALSE  !(revert)
[L1567]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1538]              assume msgsender_MSG != null;
[L1539]              Balance[this] := 0;
[L1540]              _name_ERC20Detailed[this] := 284814211;
[L1541]              _symbol_ERC20Detailed[this] := 284814211;
[L1542]              _decimals_ERC20Detailed[this] := 0;
[L1544]              _name_ERC20Detailed[this] := name_s99;
[L1545]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1546]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1567]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1568]  COND FALSE  !(revert)
[L2797]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2798]  COND FALSE  !(revert)
[L2801]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2733]              assume msgsender_MSG != null;
[L2734]              Balance[this] := 0;
[L2736]  COND TRUE   DType[this] == ETE
[L2737]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1605]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2737]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2738]  COND FALSE  !(revert)
[L2744]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2745]  COND TRUE   DType[this] == ETE
[L2746]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2467]              __var_16 := null;
[L2468]  COND FALSE  !(!(account_s562 != null))
[L2472]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2472]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2473]  COND FALSE  !(revert)
[L2476]              _totalSupply_ERC20[this] := __var_17;
[L2477]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2477]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L2478]  COND FALSE  !(revert)
[L2481]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s562];
[L2482]              _balances_ERC20[this][account_s562] := __var_18;
[L2483]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s562];
[L2484]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2746]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2747]  COND FALSE  !(revert)
[L2801]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2802]  COND FALSE  !(revert)
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume !revert && gas >= 0;
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND TRUE   choice == 7
[L4111]              gas := gas - 21000;
[L4112]  COND TRUE   gas >= 0
[L4113]              assume amount_s371 >= 0 && amount_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4114]              assume msgvalue_MSG == 0;
[L4115]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s371;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L723]               havoc __exception;
[L724]               revert := false;
[L725]   COND TRUE   __exception
[L726]               __tmp__Balance := Balance;
[L727]               __tmp__DType := DType;
[L728]               __tmp__Alloc := Alloc;
[L729]               __tmp__balance_ADDR := balance_ADDR;
[L730]               __tmp__M_Ref_int := M_Ref_int;
[L731]               __tmp__sum__balances0 := sum__balances0;
[L732]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L733]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L734]               __tmp__sum__allowances1 := sum__allowances1;
[L735]               __tmp__Length := Length;
[L736]               __tmp__now := now;
[L737]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L738]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L739]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L740]               __tmp___balances_ERC20 := _balances_ERC20;
[L741]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L742]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L743]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L1972]  COND TRUE   __tmp__DType[this] == ETE
[L1973]  CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1643]              __ret_0_ := msgsender_MSG;
[L1973]  RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1974]  COND FALSE  !(revert)
[L1985]  COND TRUE   __tmp__DType[this] == ETE
[L1986]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L2540]              __var_22 := null;
[L2541]  COND FALSE  !(!(owner_s649 != null))
[L2545]              __var_23 := null;
[L2546]  COND TRUE   !(spender_s649 != null)
[L2547]              revert := true;
[L1986]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L1987]  COND TRUE   revert
[L743]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L744]               assume revert || gas < 0;
[L4115]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L4174]  RET         call CorralChoice_ETE(this);

Loop:
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND TRUE   choice == 11
[L4086]              gas := gas - 21000;
[L4087]  COND FALSE  !(gas >= 0)
[L4174]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:27,033 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:27,033 INFO  L82        PathProgramCache]: Analyzing trace with hash 642369381, now seen corresponding path program 1 times
[2020-11-25 15:10:27,034 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:27,048 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:10:27,061 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:10:27,124 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:27,124 INFO  L82        PathProgramCache]: Analyzing trace with hash 380648463, now seen corresponding path program 1 times
[2020-11-25 15:10:27,124 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:27,126 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:10:27,131 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:10:27,131 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:10:27,131 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:10:27,131 INFO  L1008  eck$LassoCheckResult]: loop already infeasible
[2020-11-25 15:10:27,131 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:10:27,131 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:10:27,131 INFO  L87              Difference]: Start difference. First operand 2462 states and 2814 transitions. cyclomatic complexity: 356 Second operand 4 states.
[2020-11-25 15:10:27,289 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:10:27,289 INFO  L93              Difference]: Finished difference Result 2635 states and 2998 transitions.
[2020-11-25 15:10:27,289 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:10:27,289 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2635 states and 2998 transitions.
[2020-11-25 15:10:27,298 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 16
[2020-11-25 15:10:27,305 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2635 states to 2632 states and 2995 transitions.
[2020-11-25 15:10:27,305 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 619
[2020-11-25 15:10:27,305 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 619
[2020-11-25 15:10:27,305 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2632 states and 2995 transitions.
[2020-11-25 15:10:27,308 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:10:27,308 INFO  L728         BuchiCegarLoop]: Abstraction has 2632 states and 2995 transitions.
[2020-11-25 15:10:27,310 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2632 states and 2995 transitions.
[2020-11-25 15:10:27,327 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2632 to 2352.
[2020-11-25 15:10:27,327 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2352 states.
[2020-11-25 15:10:27,329 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2352 states to 2352 states and 2641 transitions.
[2020-11-25 15:10:27,329 INFO  L751         BuchiCegarLoop]: Abstraction has 2352 states and 2641 transitions.
[2020-11-25 15:10:27,329 INFO  L631         BuchiCegarLoop]: Abstraction has 2352 states and 2641 transitions.
[2020-11-25 15:10:27,329 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 15:10:27,330 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2352 states and 2641 transitions.
[2020-11-25 15:10:27,333 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 15:10:27,334 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:27,334 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:27,335 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:27,335 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4164]              assume null == 0;
[L4165]  CALL        call this := FreshRefGenerator__success();
[L1483]              havoc newRef;
[L1484]              assume Alloc[newRef] == false;
[L1485]              Alloc[newRef] := true;
[L1486]              assume newRef != null;
[L4165]  RET         call this := FreshRefGenerator__success();
[L4166]              assume now >= 0;
[L4167]              assume DType[this] == ETE;
[L4168]              assume msgvalue_MSG == 0;
[L4169]              gas := gas - 53000;
[L4170]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L2789]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L2789]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2790]  COND FALSE  !(revert)
[L2793]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L1853]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1857]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1825]              assume msgsender_MSG != null;
[L1826]              Balance[this] := 0;
[L1827]              _balances_ERC20[this] := zeroRefintArr();
[L1828]              sum__balances0[this] := 0;
[L1829]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1830]              sum__allowances1[this] := 0;
[L1831]              _totalSupply_ERC20[this] := 0;
[L1861]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L2793]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2797]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1563]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1563]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]  COND FALSE  !(revert)
[L1567]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1538]              assume msgsender_MSG != null;
[L1539]              Balance[this] := 0;
[L1540]              _name_ERC20Detailed[this] := 284814211;
[L1541]              _symbol_ERC20Detailed[this] := 284814211;
[L1542]              _decimals_ERC20Detailed[this] := 0;
[L1544]              _name_ERC20Detailed[this] := name_s99;
[L1545]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1546]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1567]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1568]  COND FALSE  !(revert)
[L2797]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2798]  COND FALSE  !(revert)
[L2801]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2733]              assume msgsender_MSG != null;
[L2734]              Balance[this] := 0;
[L2736]  COND TRUE   DType[this] == ETE
[L2737]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1605]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2737]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2738]  COND FALSE  !(revert)
[L2744]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2745]  COND TRUE   DType[this] == ETE
[L2746]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2467]              __var_16 := null;
[L2468]  COND FALSE  !(!(account_s562 != null))
[L2472]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2472]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2473]  COND FALSE  !(revert)
[L2476]              _totalSupply_ERC20[this] := __var_17;
[L2477]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2477]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L2478]  COND FALSE  !(revert)
[L2481]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s562];
[L2482]              _balances_ERC20[this][account_s562] := __var_18;
[L2483]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s562];
[L2484]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2746]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2747]  COND FALSE  !(revert)
[L2801]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2802]  COND FALSE  !(revert)
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume !revert && gas >= 0;
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND TRUE   choice == 7
[L4111]              gas := gas - 21000;
[L4112]  COND TRUE   gas >= 0
[L4113]              assume amount_s371 >= 0 && amount_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4114]              assume msgvalue_MSG == 0;
[L4115]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s371;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L723]               havoc __exception;
[L724]               revert := false;
[L725]   COND TRUE   __exception
[L726]               __tmp__Balance := Balance;
[L727]               __tmp__DType := DType;
[L728]               __tmp__Alloc := Alloc;
[L729]               __tmp__balance_ADDR := balance_ADDR;
[L730]               __tmp__M_Ref_int := M_Ref_int;
[L731]               __tmp__sum__balances0 := sum__balances0;
[L732]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L733]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L734]               __tmp__sum__allowances1 := sum__allowances1;
[L735]               __tmp__Length := Length;
[L736]               __tmp__now := now;
[L737]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L738]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L739]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L740]               __tmp___balances_ERC20 := _balances_ERC20;
[L741]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L742]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L743]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L1972]  COND TRUE   __tmp__DType[this] == ETE
[L1973]  CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1643]              __ret_0_ := msgsender_MSG;
[L1973]  RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1974]  COND FALSE  !(revert)
[L1985]  COND TRUE   __tmp__DType[this] == ETE
[L1986]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L2540]              __var_22 := null;
[L2541]  COND FALSE  !(!(owner_s649 != null))
[L2545]              __var_23 := null;
[L2546]  COND TRUE   !(spender_s649 != null)
[L2547]              revert := true;
[L1986]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L1987]  COND TRUE   revert
[L743]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L744]               assume revert || gas < 0;
[L4115]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L4174]  RET         call CorralChoice_ETE(this);

Loop:
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND TRUE   choice == 7
[L4111]              gas := gas - 21000;
[L4112]  COND TRUE   gas >= 0
[L4113]              assume amount_s371 >= 0 && amount_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4114]              assume msgvalue_MSG == 0;
[L4115]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s371;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L723]               havoc __exception;
[L724]               revert := false;
[L725]   COND TRUE   __exception
[L726]               __tmp__Balance := Balance;
[L727]               __tmp__DType := DType;
[L728]               __tmp__Alloc := Alloc;
[L729]               __tmp__balance_ADDR := balance_ADDR;
[L730]               __tmp__M_Ref_int := M_Ref_int;
[L731]               __tmp__sum__balances0 := sum__balances0;
[L732]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L733]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L734]               __tmp__sum__allowances1 := sum__allowances1;
[L735]               __tmp__Length := Length;
[L736]               __tmp__now := now;
[L737]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L738]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L739]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L740]               __tmp___balances_ERC20 := _balances_ERC20;
[L741]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L742]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L743]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L1972]  COND TRUE   __tmp__DType[this] == ETE
[L1973]  CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1643]              __ret_0_ := msgsender_MSG;
[L1973]  RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1974]  COND FALSE  !(revert)
[L1985]  COND TRUE   __tmp__DType[this] == ETE
[L1986]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L2540]              __var_22 := null;
[L2541]  COND FALSE  !(!(owner_s649 != null))
[L2545]              __var_23 := null;
[L2546]  COND TRUE   !(spender_s649 != null)
[L2547]              revert := true;
[L1986]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L1987]  COND TRUE   revert
[L743]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L744]               assume revert || gas < 0;
[L4115]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L4174]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:27,338 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:27,338 INFO  L82        PathProgramCache]: Analyzing trace with hash 642369381, now seen corresponding path program 2 times
[2020-11-25 15:10:27,339 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:27,349 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:10:27,360 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:10:27,384 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:27,385 INFO  L82        PathProgramCache]: Analyzing trace with hash 1080480190, now seen corresponding path program 1 times
[2020-11-25 15:10:27,385 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:27,389 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:10:27,392 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:10:27,400 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:27,401 INFO  L82        PathProgramCache]: Analyzing trace with hash -1837412574, now seen corresponding path program 1 times
[2020-11-25 15:10:27,401 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:27,414 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:10:27,430 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1093 to 2179
Garbage collection #7: 2179 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2179 to 4357
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2503 to 5003
[2020-11-25 15:10:28,001 WARN  L188               SmtUtils]: Spent 317.00 ms on a formula simplification. DAG size of input: 173 DAG size of output: 173
[2020-11-25 15:10:28,463 WARN  L188               SmtUtils]: Spent 457.00 ms on a formula simplification. DAG size of input: 233 DAG size of output: 217
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 9883 to 19763
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 6271 to 12541
[2020-11-25 15:10:28,605 WARN  L188               SmtUtils]: Spent 115.00 ms on a formula simplification. DAG size of input: 134 DAG size of output: 128
[2020-11-25 15:10:28,741 WARN  L188               SmtUtils]: Spent 134.00 ms on a formula simplification that was a NOOP. DAG size: 263
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6661 to 13313
[2020-11-25 15:10:29,016 WARN  L188               SmtUtils]: Spent 266.00 ms on a formula simplification. DAG size of input: 210 DAG size of output: 210
[2020-11-25 15:10:29,127 WARN  L188               SmtUtils]: Spent 110.00 ms on a formula simplification that was a NOOP. DAG size: 210
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #7: 2503 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2503 to 5003
[2020-11-25 15:10:29,213 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 15:10:29,839 WARN  L188               SmtUtils]: Spent 192.00 ms on a formula simplification. DAG size of input: 186 DAG size of output: 175
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #7: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
[2020-11-25 15:10:30,568 WARN  L188               SmtUtils]: Spent 243.00 ms on a formula simplification. DAG size of input: 173 DAG size of output: 173
[2020-11-25 15:10:31,019 WARN  L188               SmtUtils]: Spent 449.00 ms on a formula simplification. DAG size of input: 232 DAG size of output: 217
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4943 to 9883
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 15:10:31,253 WARN  L188               SmtUtils]: Spent 124.00 ms on a formula simplification that was a NOOP. DAG size: 264
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 15:10:31,478 WARN  L188               SmtUtils]: Spent 217.00 ms on a formula simplification. DAG size of input: 214 DAG size of output: 211
[2020-11-25 15:10:32,317 WARN  L188               SmtUtils]: Spent 837.00 ms on a formula simplification. DAG size of input: 386 DAG size of output: 379
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 15:10:32,587 WARN  L188               SmtUtils]: Spent 255.00 ms on a formula simplification. DAG size of input: 172 DAG size of output: 172
[2020-11-25 15:10:32,798 WARN  L188               SmtUtils]: Spent 197.00 ms on a formula simplification that was a NOOP. DAG size: 265
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5281 to 10559
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 15:10:33,435 WARN  L188               SmtUtils]: Spent 630.00 ms on a formula simplification. DAG size of input: 198 DAG size of output: 189
[2020-11-25 15:10:33,841 WARN  L188               SmtUtils]: Spent 404.00 ms on a formula simplification. DAG size of input: 284 DAG size of output: 283
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #9: 24137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 24137 to 48271
[2020-11-25 15:10:34,689 WARN  L188               SmtUtils]: Spent 834.00 ms on a formula simplification. DAG size of input: 290 DAG size of output: 278
[2020-11-25 15:10:34,702 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:10:34,718 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:10:34,726 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:10:34 BasicIcfg
[2020-11-25 15:10:34,726 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 15:10:34,727 INFO  L168              Benchmark]: Toolchain (without parser) took 14068.13 ms. Allocated memory was 1.0 GB in the beginning and 2.2 GB in the end (delta: 1.1 GB). Free memory was 935.2 MB in the beginning and 1.4 GB in the end (delta: -502.0 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-25 15:10:34,727 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:10:34,727 INFO  L168              Benchmark]: Boogie Preprocessor took 89.48 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:34,727 INFO  L168              Benchmark]: UtopiaSpecLang took 56.71 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:34,728 INFO  L168              Benchmark]: Boogie Printer took 15.22 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:10:34,728 INFO  L168              Benchmark]: RCFGBuilder took 706.03 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 801.0 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:34,728 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.13 ms. Allocated memory is still 1.0 GB. Free memory was 801.0 MB in the beginning and 792.0 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:34,729 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1367.97 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 181.9 MB). Free memory was 792.0 MB in the beginning and 986.9 MB in the end (delta: -194.9 MB). Peak memory consumption was 163.9 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:34,729 INFO  L168              Benchmark]: BlockEncodingV2 took 142.52 ms. Allocated memory is still 1.2 GB. Free memory was 986.9 MB in the beginning and 924.7 MB in the end (delta: 62.2 MB). Peak memory consumption was 62.2 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:34,729 INFO  L168              Benchmark]: BuchiAutomizer took 11645.16 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 966.3 MB). Free memory was 924.7 MB in the beginning and 1.4 GB in the end (delta: -512.5 MB). Peak memory consumption was 923.3 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:34,732 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3846 locations, 7076 edges
  - StatisticsResult: Encoded RCFG
    3734 locations, 6763 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 89.48 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 56.71 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.22 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 706.03 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 801.0 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.13 ms. Allocated memory is still 1.0 GB. Free memory was 801.0 MB in the beginning and 792.0 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1367.97 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 181.9 MB). Free memory was 792.0 MB in the beginning and 986.9 MB in the end (delta: -194.9 MB). Peak memory consumption was 163.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 142.52 ms. Allocated memory is still 1.2 GB. Free memory was 986.9 MB in the beginning and 924.7 MB in the end (delta: 62.2 MB). Peak memory consumption was 62.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 11645.16 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 966.3 MB). Free memory was 924.7 MB in the beginning and 1.4 GB in the end (delta: -512.5 MB). Peak memory consumption was 923.3 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1504 locations, 2162 edges
  - StatisticsResult: BuchiProgram size
    3846 locations, 7076 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.6 modules have a trivial ranking function, the largest among these consists of 17 locations. The remainder module has 2352 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 11.5s and 7 iterations.  TraceHistogramMax:3. Analysis of lassos took 8.1s. Construction of modules took 2.0s. BÃ¼chi inclusion checks took 0.9s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 6 MinimizatonAttempts, 907 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2462 states and ocurred in iteration 5.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 14977 SDtfs, 10343 SDslu, 33547 SDs, 0 SdLazy, 25334 SolverSat, 1815 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.0s Time	LassoAnalysisResults: nont1 unkn0 SFLI1 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(284814228) = (new ETE)({from : 284814213});
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L2789]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L2789]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2790]  COND FALSE  !(revert)
[L2793]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L1853]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1857]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1825]              assume msgsender_MSG != null;
[L1826]              Balance[this] := 0;
[L1827]              _balances_ERC20[this] := zeroRefintArr();
[L1828]              sum__balances0[this] := 0;
[L1829]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1830]              sum__allowances1[this] := 0;
[L1831]              _totalSupply_ERC20[this] := 0;
[L1861]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L2793]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2797]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1563]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1563]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]  COND FALSE  !(revert)
[L1567]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1538]              assume msgsender_MSG != null;
[L1539]              Balance[this] := 0;
[L1540]              _name_ERC20Detailed[this] := 284814211;
[L1541]              _symbol_ERC20Detailed[this] := 284814211;
[L1542]              _decimals_ERC20Detailed[this] := 0;
[L1544]              _name_ERC20Detailed[this] := name_s99;
[L1545]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1546]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1567]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1568]  COND FALSE  !(revert)
[L2797]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2798]  COND FALSE  !(revert)
[L2801]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2733]              assume msgsender_MSG != null;
[L2734]              Balance[this] := 0;
[L2736]  COND TRUE   DType[this] == ETE
[L2737]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1605]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2737]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2738]  COND FALSE  !(revert)
[L2744]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2745]  COND TRUE   DType[this] == ETE
[L2746]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2467]              __var_16 := null;
[L2468]  COND FALSE  !(!(account_s562 != null))
[L2472]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2472]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2473]  COND FALSE  !(revert)
[L2476]              _totalSupply_ERC20[this] := __var_17;
[L2477]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2477]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L2478]  COND FALSE  !(revert)
[L2481]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s562];
[L2482]              _balances_ERC20[this][account_s562] := __var_18;
[L2483]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s562];
[L2484]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2746]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2747]  COND FALSE  !(revert)
[L2801]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2802]  COND FALSE  !(revert)
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
ERC20(284814228).approve~address~uint256.gas(3979002)({from : 284814222, spender : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s371;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L723]               havoc __exception;
[L724]               revert := false;
[L725]   COND TRUE   __exception
[L726]               __tmp__Balance := Balance;
[L727]               __tmp__DType := DType;
[L728]               __tmp__Alloc := Alloc;
[L729]               __tmp__balance_ADDR := balance_ADDR;
[L730]               __tmp__M_Ref_int := M_Ref_int;
[L731]               __tmp__sum__balances0 := sum__balances0;
[L732]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L733]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L734]               __tmp__sum__allowances1 := sum__allowances1;
[L735]               __tmp__Length := Length;
[L736]               __tmp__now := now;
[L737]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L738]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L739]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L740]               __tmp___balances_ERC20 := _balances_ERC20;
[L741]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L742]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L743]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L1972]  COND TRUE   __tmp__DType[this] == ETE
[L1973]  CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1643]              __ret_0_ := msgsender_MSG;
[L1973]  RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1974]  COND FALSE  !(revert)
[L1985]  COND TRUE   __tmp__DType[this] == ETE
[L1986]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L2540]              __var_22 := null;
[L2541]  COND FALSE  !(!(owner_s649 != null))
[L2545]              __var_23 := null;
[L2546]  COND TRUE   !(spender_s649 != null)
[L2547]              revert := true;
[L1986]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L1987]  COND TRUE   revert
[L743]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L744]               assume revert || gas < 0;
[L4115]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);

Loop:
ERC20(284814228).approve~address~uint256.gas(3979001)({from : 284814224, spender : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s371;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L723]               havoc __exception;
[L724]               revert := false;
[L725]   COND TRUE   __exception
[L726]               __tmp__Balance := Balance;
[L727]               __tmp__DType := DType;
[L728]               __tmp__Alloc := Alloc;
[L729]               __tmp__balance_ADDR := balance_ADDR;
[L730]               __tmp__M_Ref_int := M_Ref_int;
[L731]               __tmp__sum__balances0 := sum__balances0;
[L732]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L733]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L734]               __tmp__sum__allowances1 := sum__allowances1;
[L735]               __tmp__Length := Length;
[L736]               __tmp__now := now;
[L737]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L738]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L739]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L740]               __tmp___balances_ERC20 := _balances_ERC20;
[L741]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L742]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L743]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L1972]  COND TRUE   __tmp__DType[this] == ETE
[L1973]  CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1643]              __ret_0_ := msgsender_MSG;
[L1973]  RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1974]  COND FALSE  !(revert)
[L1985]  COND TRUE   __tmp__DType[this] == ETE
[L1986]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L2540]              __var_22 := null;
[L2541]  COND FALSE  !(!(owner_s649 != null))
[L2545]              __var_23 := null;
[L2546]  COND TRUE   !(spender_s649 != null)
[L2547]              revert := true;
[L1986]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L1987]  COND TRUE   revert
[L743]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L744]               assume revert || gas < 0;
[L4115]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
