This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 23:50:38,988 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 23:50:38,989 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 23:50:39,000 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 23:50:39,000 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 23:50:39,001 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 23:50:39,002 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 23:50:39,004 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 23:50:39,005 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 23:50:39,006 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 23:50:39,007 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 23:50:39,007 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 23:50:39,008 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 23:50:39,009 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 23:50:39,010 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 23:50:39,010 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 23:50:39,011 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 23:50:39,013 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 23:50:39,014 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 23:50:39,015 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 23:50:39,016 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 23:50:39,017 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 23:50:39,019 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 23:50:39,019 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 23:50:39,019 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 23:50:39,020 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 23:50:39,020 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 23:50:39,021 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 23:50:39,021 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 23:50:39,021 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 23:50:39,022 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 23:50:39,022 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 23:50:39,023 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 23:50:39,024 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 23:50:39,024 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 23:50:39,025 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 23:50:39,025 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 23:50:39,025 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 23:50:39,025 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 23:50:39,026 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 23:50:39,026 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 23:50:39,027 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 23:50:39,034 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 23:50:39,035 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 23:50:39,035 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 23:50:39,036 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 23:50:39,036 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 23:50:39,036 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 23:50:39,036 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 23:50:39,036 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 23:50:39,036 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 23:50:39,036 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 23:50:39,036 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 23:50:39,037 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 23:50:39,037 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 23:50:39,037 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 23:50:39,037 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 23:50:39,037 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 23:50:39,037 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 23:50:39,037 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 23:50:39,037 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 23:50:39,038 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 23:50:39,038 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 23:50:39,038 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 23:50:39,038 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 23:50:39,038 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 23:50:39,038 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 23:50:39,038 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 23:50:39,061 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 23:50:39,073 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 23:50:39,075 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 23:50:39,077 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 23:50:39,077 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 23:50:39,077 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl
[2020-11-24 23:50:39,078 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl'
[2020-11-24 23:50:39,190 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 23:50:39,192 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 23:50:39,192 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 23:50:39,192 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 23:50:39,192 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 23:50:39,209 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:50:39" (1/1) ...
[2020-11-24 23:50:39,211 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:50:39" (1/1) ...
[2020-11-24 23:50:39,258 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:50:39" (1/1) ...
[2020-11-24 23:50:39,259 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:50:39" (1/1) ...
[2020-11-24 23:50:39,289 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:50:39" (1/1) ...
[2020-11-24 23:50:39,302 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:50:39" (1/1) ...
[2020-11-24 23:50:39,314 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:50:39" (1/1) ...
[2020-11-24 23:50:39,328 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 23:50:39,329 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 23:50:39,329 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 23:50:39,331 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 23:50:39,335 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:50:39" (1/1) ...
[2020-11-24 23:50:39,358 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_TokenERC20[this][msg.sender] && balances_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][to] >= 0 && balances_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][msg.sender] >= 0 &&  balances_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && balances_TokenERC20[this][msg.sender] == old(balances_TokenERC20[this][msg.sender]) - value && balances_TokenERC20[this][to] == old(balances_TokenERC20[this][to]) + value && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this]) && balances_TokenERC20[this][p1] == old(balances_TokenERC20[this][p1]) && aSBlock_BATG[this] == old(aSBlock_BATG[this]) && aEBlock_BATG[this] == old(aEBlock_BATG[this]) && aCap_BATG[this] == old(aCap_BATG[this]) && aTot_BATG[this] == old(aTot_BATG[this]) && aAmt_BATG[this] == old(aAmt_BATG[this]) && sSBlock_BATG[this] == old(sSBlock_BATG[this]) && sEBlock_BATG[this] == old(sEBlock_BATG[this]) && sCap_BATG[this] == old(sCap_BATG[this]) && sTot_BATG[this] == old(sTot_BATG[this]) && sChunk_BATG[this] == old(sChunk_BATG[this]) && sPrice_BATG[this] == old(sPrice_BATG[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 23:50:39,363 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_TokenERC20[this][msg.sender] && balances_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][to] >= 0 && balances_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][msg.sender] >= 0 &&  balances_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && balances_TokenERC20[this][msg.sender] == old(balances_TokenERC20[this][msg.sender]) - value && balances_TokenERC20[this][to] == old(balances_TokenERC20[this][to]) + value && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this]) && balances_TokenERC20[this][p1] == old(balances_TokenERC20[this][p1]) && aSBlock_BATG[this] == old(aSBlock_BATG[this]) && aEBlock_BATG[this] == old(aEBlock_BATG[this]) && aCap_BATG[this] == old(aCap_BATG[this]) && aTot_BATG[this] == old(aTot_BATG[this]) && aAmt_BATG[this] == old(aAmt_BATG[this]) && sSBlock_BATG[this] == old(sSBlock_BATG[this]) && sEBlock_BATG[this] == old(sEBlock_BATG[this]) && sCap_BATG[this] == old(sCap_BATG[this]) && sTot_BATG[this] == old(sTot_BATG[this]) && sChunk_BATG[this] == old(sChunk_BATG[this]) && sPrice_BATG[this] == old(sPrice_BATG[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 23:50:39,372 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_TokenERC20[this][msg.sender] && balances_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][to] >= 0 && balances_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][msg.sender] >= 0 &&  balances_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && balances_TokenERC20[this][msg.sender] == old(balances_TokenERC20[this][msg.sender]) - value && balances_TokenERC20[this][to] == old(balances_TokenERC20[this][to]) + value && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this]) && balances_TokenERC20[this][p1] == old(balances_TokenERC20[this][p1]) && aSBlock_BATG[this] == old(aSBlock_BATG[this]) && aEBlock_BATG[this] == old(aEBlock_BATG[this]) && aCap_BATG[this] == old(aCap_BATG[this]) && aTot_BATG[this] == old(aTot_BATG[this]) && aAmt_BATG[this] == old(aAmt_BATG[this]) && sSBlock_BATG[this] == old(sSBlock_BATG[this]) && sEBlock_BATG[this] == old(sEBlock_BATG[this]) && sCap_BATG[this] == old(sCap_BATG[this]) && sTot_BATG[this] == old(sTot_BATG[this]) && sChunk_BATG[this] == old(sChunk_BATG[this]) && sPrice_BATG[this] == old(sPrice_BATG[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 23:50:39,380 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=to_s381 ) && msg.sender!=to_s381 ) && tokens_s381<=balances_TokenERC20[this][msg.sender] ) && ( balances_TokenERC20[this][to_s381] + tokens_s381 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && tokens_s381>=0 ) && tokens_s381<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_TokenERC20[this][to_s381]>=0 ) && balances_TokenERC20[this][to_s381]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_TokenERC20[this][msg.sender]>=0 ) && balances_TokenERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IdentifierExpression[to_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[to_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IdentifierExpression[tokens_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[to_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[to_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 23:50:39,386 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( success_s381==true && balances_TokenERC20[this][msg.sender]==( ( old(balances_TokenERC20[this][msg.sender]) ) - tokens_s381 ) ) && balances_TokenERC20[this][to_s381]==( ( old(balances_TokenERC20[this][to_s381]) ) + tokens_s381 ) ) && _totalSupply_TokenERC20[this]==( old(_totalSupply_TokenERC20[this]) ) ) && allowed_TokenERC20[this]==( old(allowed_TokenERC20[this]) ) ) && balances_TokenERC20[this][p1]==( old(balances_TokenERC20[this][p1]) ) ) && aSBlock_BATG[this]==( old(aSBlock_BATG[this]) ) ) && aEBlock_BATG[this]==( old(aEBlock_BATG[this]) ) ) && aCap_BATG[this]==( old(aCap_BATG[this]) ) ) && aTot_BATG[this]==( old(aTot_BATG[this]) ) ) && aAmt_BATG[this]==( old(aAmt_BATG[this]) ) ) && sSBlock_BATG[this]==( old(sSBlock_BATG[this]) ) ) && sEBlock_BATG[this]==( old(sEBlock_BATG[this]) ) ) && sCap_BATG[this]==( old(sCap_BATG[this]) ) ) && sTot_BATG[this]==( old(sTot_BATG[this]) ) ) && sChunk_BATG[this]==( old(sChunk_BATG[this]) ) ) && sPrice_BATG[this]==( old(sPrice_BATG[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s381,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]],IdentifierExpression[tokens_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[to_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[to_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]],IdentifierExpression[tokens_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aSBlock_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aSBlock_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aEBlock_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aEBlock_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aCap_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aCap_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aTot_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aTot_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aAmt_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aAmt_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sSBlock_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sSBlock_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sEBlock_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sEBlock_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sCap_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sCap_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sTot_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sTot_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sChunk_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sChunk_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sPrice_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sPrice_BATG,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]]
[2020-11-24 23:50:39,394 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_TokenERC20[this][msg.sender] && balances_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][to] >= 0 && balances_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][msg.sender] >= 0 &&  balances_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && balances_TokenERC20[this][msg.sender] == old(balances_TokenERC20[this][msg.sender]) - value && balances_TokenERC20[this][to] == old(balances_TokenERC20[this][to]) + value && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this]) && balances_TokenERC20[this][p1] == old(balances_TokenERC20[this][p1]) && aSBlock_BATG[this] == old(aSBlock_BATG[this]) && aEBlock_BATG[this] == old(aEBlock_BATG[this]) && aCap_BATG[this] == old(aCap_BATG[this]) && aTot_BATG[this] == old(aTot_BATG[this]) && aAmt_BATG[this] == old(aAmt_BATG[this]) && sSBlock_BATG[this] == old(sSBlock_BATG[this]) && sEBlock_BATG[this] == old(sEBlock_BATG[this]) && sCap_BATG[this] == old(sCap_BATG[this]) && sTot_BATG[this] == old(sTot_BATG[this]) && sChunk_BATG[this] == old(sChunk_BATG[this]) && sPrice_BATG[this] == old(sPrice_BATG[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 23:50:39,395 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_TokenERC200) ==> ( <>AP(success_transfer_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 23:50:39,410 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:50:39 PropertyContainer
[2020-11-24 23:50:39,411 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 23:50:39,411 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 23:50:39,411 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 23:50:39,411 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 23:50:39,412 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:50:39" (1/2) ...
[2020-11-24 23:50:39,413 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 23:50:39,413 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 23:50:39,433 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:50:39" (2/2) ...
[2020-11-24 23:50:39,433 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 23:50:39,433 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 23:50:39,434 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 23:50:39,434 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 23:50:39,434 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:50:39" (1/2) ...
[2020-11-24 23:50:39,495 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 23:50:39,496 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 23:50:39,496 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 23:50:39,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 23:50:39,496 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 23:50:39,497 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 23:50:39,497 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 23:50:39,497 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 23:50:39,497 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-24 23:50:39,498 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-24 23:50:39,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-24 23:50:39,498 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-24 23:50:39,498 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-24 23:50:39,498 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-24 23:50:39,499 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-24 23:50:39,499 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-24 23:50:39,499 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-24 23:50:39,500 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-24 23:50:39,500 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-24 23:50:39,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-24 23:50:39,500 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-24 23:50:39,500 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-24 23:50:39,501 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-24 23:50:39,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-24 23:50:39,501 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-24 23:50:39,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-24 23:50:39,502 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-24 23:50:39,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-24 23:50:39,502 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-24 23:50:39,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-24 23:50:39,502 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-24 23:50:39,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-24 23:50:39,503 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-24 23:50:39,503 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20
[2020-11-24 23:50:39,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20
[2020-11-24 23:50:39,503 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-24 23:50:39,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-24 23:50:39,504 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-24 23:50:39,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-24 23:50:39,504 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-24 23:50:39,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-24 23:50:39,504 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-24 23:50:39,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-24 23:50:39,504 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-24 23:50:39,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-24 23:50:39,505 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-24 23:50:39,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-24 23:50:39,505 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-24 23:50:39,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-24 23:50:39,505 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_TokenERC20__success
[2020-11-24 23:50:39,505 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20
[2020-11-24 23:50:39,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20
[2020-11-24 23:50:39,505 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20
[2020-11-24 23:50:39,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20
[2020-11-24 23:50:39,505 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20
[2020-11-24 23:50:39,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20
[2020-11-24 23:50:39,506 INFO  L130     BoogieDeclarations]: Found specification of procedure BATG_BATG_NoBaseCtor__success
[2020-11-24 23:50:39,506 INFO  L130     BoogieDeclarations]: Found specification of procedure BATG_BATG
[2020-11-24 23:50:39,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure BATG_BATG
[2020-11-24 23:50:39,506 INFO  L130     BoogieDeclarations]: Found specification of procedure getAirdrop~address_BATG
[2020-11-24 23:50:39,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure getAirdrop~address_BATG
[2020-11-24 23:50:39,506 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenSale~address_BATG
[2020-11-24 23:50:39,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenSale~address_BATG
[2020-11-24 23:50:39,506 INFO  L130     BoogieDeclarations]: Found specification of procedure viewAirdrop_BATG
[2020-11-24 23:50:39,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure viewAirdrop_BATG
[2020-11-24 23:50:39,507 INFO  L130     BoogieDeclarations]: Found specification of procedure viewSale_BATG
[2020-11-24 23:50:39,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure viewSale_BATG
[2020-11-24 23:50:39,507 INFO  L130     BoogieDeclarations]: Found specification of procedure startAirdrop~uint256~uint256~uint256~uint256_BATG
[2020-11-24 23:50:39,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure startAirdrop~uint256~uint256~uint256~uint256_BATG
[2020-11-24 23:50:39,507 INFO  L130     BoogieDeclarations]: Found specification of procedure startSale~uint256~uint256~uint256~uint256~uint256_BATG
[2020-11-24 23:50:39,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure startSale~uint256~uint256~uint256~uint256~uint256_BATG
[2020-11-24 23:50:39,507 INFO  L130     BoogieDeclarations]: Found specification of procedure clearETH_BATG
[2020-11-24 23:50:39,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure clearETH_BATG
[2020-11-24 23:50:39,507 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_BATG__success
[2020-11-24 23:50:39,507 INFO  L130     BoogieDeclarations]: Found specification of procedure aSBlock_BATG
[2020-11-24 23:50:39,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure aSBlock_BATG
[2020-11-24 23:50:39,508 INFO  L130     BoogieDeclarations]: Found specification of procedure aEBlock_BATG
[2020-11-24 23:50:39,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure aEBlock_BATG
[2020-11-24 23:50:39,508 INFO  L130     BoogieDeclarations]: Found specification of procedure aCap_BATG
[2020-11-24 23:50:39,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure aCap_BATG
[2020-11-24 23:50:39,508 INFO  L130     BoogieDeclarations]: Found specification of procedure aTot_BATG
[2020-11-24 23:50:39,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure aTot_BATG
[2020-11-24 23:50:39,508 INFO  L130     BoogieDeclarations]: Found specification of procedure aAmt_BATG
[2020-11-24 23:50:39,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure aAmt_BATG
[2020-11-24 23:50:39,509 INFO  L130     BoogieDeclarations]: Found specification of procedure sSBlock_BATG
[2020-11-24 23:50:39,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure sSBlock_BATG
[2020-11-24 23:50:39,509 INFO  L130     BoogieDeclarations]: Found specification of procedure sEBlock_BATG
[2020-11-24 23:50:39,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure sEBlock_BATG
[2020-11-24 23:50:39,509 INFO  L130     BoogieDeclarations]: Found specification of procedure sCap_BATG
[2020-11-24 23:50:39,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure sCap_BATG
[2020-11-24 23:50:39,509 INFO  L130     BoogieDeclarations]: Found specification of procedure sTot_BATG
[2020-11-24 23:50:39,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure sTot_BATG
[2020-11-24 23:50:39,509 INFO  L130     BoogieDeclarations]: Found specification of procedure sChunk_BATG
[2020-11-24 23:50:39,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure sChunk_BATG
[2020-11-24 23:50:39,510 INFO  L130     BoogieDeclarations]: Found specification of procedure sPrice_BATG
[2020-11-24 23:50:39,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure sPrice_BATG
[2020-11-24 23:50:39,510 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 23:50:39,510 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 23:50:39,510 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 23:50:39,510 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 23:50:39,510 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 23:50:39,510 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 23:50:39,510 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 23:50:39,510 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 23:50:39,510 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 23:50:39,511 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 23:50:39,511 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-24 23:50:39,511 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-24 23:50:39,511 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-24 23:50:39,511 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-24 23:50:39,511 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BATG
[2020-11-24 23:50:39,511 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 23:50:39,511 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 23:50:39,511 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 23:50:39,512 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 23:50:39,512 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 23:50:39,512 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 23:50:39,512 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 23:50:39,512 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 23:50:39,512 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 23:50:39,512 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-24 23:50:39,512 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-24 23:50:39,512 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-24 23:50:39,512 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-24 23:50:39,513 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-24 23:50:39,513 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-24 23:50:39,513 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-24 23:50:39,513 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-24 23:50:39,513 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-24 23:50:39,513 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-24 23:50:39,513 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-24 23:50:39,513 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-24 23:50:39,513 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-24 23:50:39,513 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-24 23:50:39,514 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-24 23:50:39,514 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-24 23:50:39,514 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-24 23:50:39,514 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-24 23:50:39,514 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__success
[2020-11-24 23:50:39,514 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__fail
[2020-11-24 23:50:39,514 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-24 23:50:39,514 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-24 23:50:39,514 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-24 23:50:39,515 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-24 23:50:39,515 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-24 23:50:39,515 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-24 23:50:39,515 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-24 23:50:39,515 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-24 23:50:39,515 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-24 23:50:39,515 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-24 23:50:39,515 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-24 23:50:39,515 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-24 23:50:39,516 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-24 23:50:39,516 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-24 23:50:39,516 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_TokenERC20__fail
[2020-11-24 23:50:39,516 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__success
[2020-11-24 23:50:39,516 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__fail
[2020-11-24 23:50:39,516 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__success
[2020-11-24 23:50:39,516 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__fail
[2020-11-24 23:50:39,516 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__success
[2020-11-24 23:50:39,516 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__fail
[2020-11-24 23:50:39,516 INFO  L130     BoogieDeclarations]: Found specification of procedure BATG_BATG_NoBaseCtor__fail
[2020-11-24 23:50:39,516 INFO  L130     BoogieDeclarations]: Found specification of procedure BATG_BATG__success
[2020-11-24 23:50:39,517 INFO  L130     BoogieDeclarations]: Found specification of procedure BATG_BATG__fail
[2020-11-24 23:50:39,517 INFO  L130     BoogieDeclarations]: Found specification of procedure getAirdrop~address_BATG__success
[2020-11-24 23:50:39,517 INFO  L130     BoogieDeclarations]: Found specification of procedure getAirdrop~address_BATG__fail
[2020-11-24 23:50:39,517 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenSale~address_BATG__success
[2020-11-24 23:50:39,517 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenSale~address_BATG__fail
[2020-11-24 23:50:39,517 INFO  L130     BoogieDeclarations]: Found specification of procedure viewAirdrop_BATG__success
[2020-11-24 23:50:39,517 INFO  L130     BoogieDeclarations]: Found specification of procedure viewAirdrop_BATG__fail
[2020-11-24 23:50:39,517 INFO  L130     BoogieDeclarations]: Found specification of procedure viewSale_BATG__success
[2020-11-24 23:50:39,517 INFO  L130     BoogieDeclarations]: Found specification of procedure viewSale_BATG__fail
[2020-11-24 23:50:39,517 INFO  L130     BoogieDeclarations]: Found specification of procedure startAirdrop~uint256~uint256~uint256~uint256_BATG__success
[2020-11-24 23:50:39,517 INFO  L130     BoogieDeclarations]: Found specification of procedure startAirdrop~uint256~uint256~uint256~uint256_BATG__fail
[2020-11-24 23:50:39,518 INFO  L130     BoogieDeclarations]: Found specification of procedure startSale~uint256~uint256~uint256~uint256~uint256_BATG__success
[2020-11-24 23:50:39,518 INFO  L130     BoogieDeclarations]: Found specification of procedure startSale~uint256~uint256~uint256~uint256~uint256_BATG__fail
[2020-11-24 23:50:39,518 INFO  L130     BoogieDeclarations]: Found specification of procedure clearETH_BATG__success
[2020-11-24 23:50:39,518 INFO  L130     BoogieDeclarations]: Found specification of procedure clearETH_BATG__fail
[2020-11-24 23:50:39,518 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_BATG__fail
[2020-11-24 23:50:39,518 INFO  L130     BoogieDeclarations]: Found specification of procedure aSBlock_BATG__success
[2020-11-24 23:50:39,518 INFO  L130     BoogieDeclarations]: Found specification of procedure aSBlock_BATG__fail
[2020-11-24 23:50:39,518 INFO  L130     BoogieDeclarations]: Found specification of procedure aEBlock_BATG__success
[2020-11-24 23:50:39,518 INFO  L130     BoogieDeclarations]: Found specification of procedure aEBlock_BATG__fail
[2020-11-24 23:50:39,518 INFO  L130     BoogieDeclarations]: Found specification of procedure aCap_BATG__success
[2020-11-24 23:50:39,518 INFO  L130     BoogieDeclarations]: Found specification of procedure aCap_BATG__fail
[2020-11-24 23:50:39,519 INFO  L130     BoogieDeclarations]: Found specification of procedure aTot_BATG__success
[2020-11-24 23:50:39,519 INFO  L130     BoogieDeclarations]: Found specification of procedure aTot_BATG__fail
[2020-11-24 23:50:39,519 INFO  L130     BoogieDeclarations]: Found specification of procedure aAmt_BATG__success
[2020-11-24 23:50:39,519 INFO  L130     BoogieDeclarations]: Found specification of procedure aAmt_BATG__fail
[2020-11-24 23:50:39,519 INFO  L130     BoogieDeclarations]: Found specification of procedure sSBlock_BATG__success
[2020-11-24 23:50:39,519 INFO  L130     BoogieDeclarations]: Found specification of procedure sSBlock_BATG__fail
[2020-11-24 23:50:39,519 INFO  L130     BoogieDeclarations]: Found specification of procedure sEBlock_BATG__success
[2020-11-24 23:50:39,519 INFO  L130     BoogieDeclarations]: Found specification of procedure sEBlock_BATG__fail
[2020-11-24 23:50:39,519 INFO  L130     BoogieDeclarations]: Found specification of procedure sCap_BATG__success
[2020-11-24 23:50:39,519 INFO  L130     BoogieDeclarations]: Found specification of procedure sCap_BATG__fail
[2020-11-24 23:50:39,519 INFO  L130     BoogieDeclarations]: Found specification of procedure sTot_BATG__success
[2020-11-24 23:50:39,519 INFO  L130     BoogieDeclarations]: Found specification of procedure sTot_BATG__fail
[2020-11-24 23:50:39,520 INFO  L130     BoogieDeclarations]: Found specification of procedure sChunk_BATG__success
[2020-11-24 23:50:39,520 INFO  L130     BoogieDeclarations]: Found specification of procedure sChunk_BATG__fail
[2020-11-24 23:50:39,520 INFO  L130     BoogieDeclarations]: Found specification of procedure sPrice_BATG__success
[2020-11-24 23:50:39,520 INFO  L130     BoogieDeclarations]: Found specification of procedure sPrice_BATG__fail
[2020-11-24 23:50:39,520 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 23:50:39,520 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 23:50:39,520 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 23:50:39,520 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 23:50:39,520 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 23:50:39,520 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 23:50:39,520 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 23:50:39,520 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 23:50:39,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 23:50:39,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 23:50:39,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 23:50:39,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 23:50:39,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 23:50:39,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 23:50:39,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 23:50:39,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 23:50:39,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 23:50:39,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 23:50:39,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-24 23:50:39,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-24 23:50:39,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-24 23:50:39,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-24 23:50:39,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-24 23:50:39,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-24 23:50:39,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-24 23:50:39,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-24 23:50:39,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-24 23:50:39,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-24 23:50:39,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-24 23:50:39,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-24 23:50:39,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-24 23:50:39,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-24 23:50:39,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-24 23:50:39,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-24 23:50:39,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-24 23:50:39,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-24 23:50:39,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-24 23:50:39,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-24 23:50:39,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-24 23:50:39,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-24 23:50:39,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__fail
[2020-11-24 23:50:39,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__success
[2020-11-24 23:50:39,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-24 23:50:39,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-24 23:50:39,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-24 23:50:39,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-24 23:50:39,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-24 23:50:39,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-24 23:50:39,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-24 23:50:39,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-24 23:50:39,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-24 23:50:39,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-24 23:50:39,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-24 23:50:39,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-24 23:50:39,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-24 23:50:39,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-24 23:50:39,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_TokenERC20__fail
[2020-11-24 23:50:39,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_TokenERC20__success
[2020-11-24 23:50:39,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__fail
[2020-11-24 23:50:39,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__success
[2020-11-24 23:50:39,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__fail
[2020-11-24 23:50:39,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__success
[2020-11-24 23:50:39,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__fail
[2020-11-24 23:50:39,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__success
[2020-11-24 23:50:39,526 INFO  L138     BoogieDeclarations]: Found implementation of procedure BATG_BATG_NoBaseCtor__fail
[2020-11-24 23:50:39,526 INFO  L138     BoogieDeclarations]: Found implementation of procedure BATG_BATG_NoBaseCtor__success
[2020-11-24 23:50:39,526 INFO  L138     BoogieDeclarations]: Found implementation of procedure BATG_BATG__fail
[2020-11-24 23:50:39,526 INFO  L138     BoogieDeclarations]: Found implementation of procedure BATG_BATG__success
[2020-11-24 23:50:39,526 INFO  L138     BoogieDeclarations]: Found implementation of procedure getAirdrop~address_BATG__fail
[2020-11-24 23:50:39,527 INFO  L138     BoogieDeclarations]: Found implementation of procedure getAirdrop~address_BATG__success
[2020-11-24 23:50:39,527 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenSale~address_BATG__fail
[2020-11-24 23:50:39,527 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenSale~address_BATG__success
[2020-11-24 23:50:39,527 INFO  L138     BoogieDeclarations]: Found implementation of procedure viewAirdrop_BATG__fail
[2020-11-24 23:50:39,528 INFO  L138     BoogieDeclarations]: Found implementation of procedure viewAirdrop_BATG__success
[2020-11-24 23:50:39,528 INFO  L138     BoogieDeclarations]: Found implementation of procedure viewSale_BATG__fail
[2020-11-24 23:50:39,528 INFO  L138     BoogieDeclarations]: Found implementation of procedure viewSale_BATG__success
[2020-11-24 23:50:39,528 INFO  L138     BoogieDeclarations]: Found implementation of procedure startAirdrop~uint256~uint256~uint256~uint256_BATG__fail
[2020-11-24 23:50:39,529 INFO  L138     BoogieDeclarations]: Found implementation of procedure startAirdrop~uint256~uint256~uint256~uint256_BATG__success
[2020-11-24 23:50:39,529 INFO  L138     BoogieDeclarations]: Found implementation of procedure startSale~uint256~uint256~uint256~uint256~uint256_BATG__fail
[2020-11-24 23:50:39,529 INFO  L138     BoogieDeclarations]: Found implementation of procedure startSale~uint256~uint256~uint256~uint256~uint256_BATG__success
[2020-11-24 23:50:39,529 INFO  L138     BoogieDeclarations]: Found implementation of procedure clearETH_BATG__fail
[2020-11-24 23:50:39,529 INFO  L138     BoogieDeclarations]: Found implementation of procedure clearETH_BATG__success
[2020-11-24 23:50:39,530 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_BATG__fail
[2020-11-24 23:50:39,530 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_BATG__success
[2020-11-24 23:50:39,530 INFO  L138     BoogieDeclarations]: Found implementation of procedure aSBlock_BATG__fail
[2020-11-24 23:50:39,530 INFO  L138     BoogieDeclarations]: Found implementation of procedure aSBlock_BATG__success
[2020-11-24 23:50:39,530 INFO  L138     BoogieDeclarations]: Found implementation of procedure aEBlock_BATG__fail
[2020-11-24 23:50:39,531 INFO  L138     BoogieDeclarations]: Found implementation of procedure aEBlock_BATG__success
[2020-11-24 23:50:39,531 INFO  L138     BoogieDeclarations]: Found implementation of procedure aCap_BATG__fail
[2020-11-24 23:50:39,531 INFO  L138     BoogieDeclarations]: Found implementation of procedure aCap_BATG__success
[2020-11-24 23:50:39,531 INFO  L138     BoogieDeclarations]: Found implementation of procedure aTot_BATG__fail
[2020-11-24 23:50:39,531 INFO  L138     BoogieDeclarations]: Found implementation of procedure aTot_BATG__success
[2020-11-24 23:50:39,531 INFO  L138     BoogieDeclarations]: Found implementation of procedure aAmt_BATG__fail
[2020-11-24 23:50:39,532 INFO  L138     BoogieDeclarations]: Found implementation of procedure aAmt_BATG__success
[2020-11-24 23:50:39,532 INFO  L138     BoogieDeclarations]: Found implementation of procedure sSBlock_BATG__fail
[2020-11-24 23:50:39,532 INFO  L138     BoogieDeclarations]: Found implementation of procedure sSBlock_BATG__success
[2020-11-24 23:50:39,532 INFO  L138     BoogieDeclarations]: Found implementation of procedure sEBlock_BATG__fail
[2020-11-24 23:50:39,532 INFO  L138     BoogieDeclarations]: Found implementation of procedure sEBlock_BATG__success
[2020-11-24 23:50:39,533 INFO  L138     BoogieDeclarations]: Found implementation of procedure sCap_BATG__fail
[2020-11-24 23:50:39,533 INFO  L138     BoogieDeclarations]: Found implementation of procedure sCap_BATG__success
[2020-11-24 23:50:39,533 INFO  L138     BoogieDeclarations]: Found implementation of procedure sTot_BATG__fail
[2020-11-24 23:50:39,533 INFO  L138     BoogieDeclarations]: Found implementation of procedure sTot_BATG__success
[2020-11-24 23:50:39,533 INFO  L138     BoogieDeclarations]: Found implementation of procedure sChunk_BATG__fail
[2020-11-24 23:50:39,533 INFO  L138     BoogieDeclarations]: Found implementation of procedure sChunk_BATG__success
[2020-11-24 23:50:39,534 INFO  L138     BoogieDeclarations]: Found implementation of procedure sPrice_BATG__fail
[2020-11-24 23:50:39,534 INFO  L138     BoogieDeclarations]: Found implementation of procedure sPrice_BATG__success
[2020-11-24 23:50:39,534 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 23:50:39,534 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 23:50:39,534 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 23:50:39,534 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 23:50:39,535 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 23:50:39,535 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 23:50:39,535 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 23:50:39,535 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 23:50:39,535 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 23:50:39,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 23:50:39,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 23:50:39,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 23:50:39,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 23:50:39,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 23:50:39,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-24 23:50:39,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-24 23:50:39,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-24 23:50:39,536 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-24 23:50:39,537 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BATG
[2020-11-24 23:50:39,537 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 23:50:39,537 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 23:50:39,537 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 23:50:40,161 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:50:40,469 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:50:40,469 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:50:40,470 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:50:40,533 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 23:50:40,533 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-24 23:50:40,536 INFO  L202        PluginConnector]: Adding new model BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:50:40 BoogieIcfgContainer
[2020-11-24 23:50:40,536 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:50:39" (2/2) ...
[2020-11-24 23:50:40,536 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 23:50:40,537 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@65268613 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:50:40, skipping insertion in model container
[2020-11-24 23:50:40,537 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 23:50:40,537 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 23:50:40,537 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 23:50:40,538 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 23:50:40,538 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:50:39" (1/3) ...
[2020-11-24 23:50:40,539 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@6f82badf and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:50:40, skipping insertion in model container
[2020-11-24 23:50:40,539 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:50:39" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 23:50:40,581 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:50:40 NWAContainer
[2020-11-24 23:50:40,581 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 23:50:40,581 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 23:50:40,581 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 23:50:40,582 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 23:50:40,583 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:50:40" (3/4) ...
[2020-11-24 23:50:40,584 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@23aa40b1 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:50:40, skipping insertion in model container
[2020-11-24 23:50:40,584 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:50:40" (4/4) ...
[2020-11-24 23:50:40,587 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 23:50:40,594 INFO  L110   BuchiProductObserver]: Initial RCFG 3567 locations, 4643 edges
[2020-11-24 23:50:40,594 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 23:50:40,607 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 23:50:42,365 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 23:50:42,375 INFO  L110   BuchiProductObserver]: BuchiProgram size 8360 locations, 14614 edges
[2020-11-24 23:50:42,376 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:50:42 BoogieIcfgContainer
[2020-11-24 23:50:42,376 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 23:50:42,376 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 23:50:42,376 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 23:50:42,377 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 23:50:42,378 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:50:42" (1/1) ...
[2020-11-24 23:50:42,492 INFO  L313           BlockEncoder]: Initial Icfg 8360 locations, 14614 edges
[2020-11-24 23:50:42,492 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 23:50:42,493 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 23:50:42,493 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 23:50:42,493 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 23:50:42,508 INFO  L70    emoveInfeasibleEdges]: Removed 84 edges and 15 locations because of local infeasibility
[2020-11-24 23:50:42,524 INFO  L70        RemoveSinkStates]: Removed 14 edges and 9 locations by removing sink states
[2020-11-24 23:50:42,540 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 23:50:42,544 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 23:50:42,549 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 23:50:42,549 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 23:50:42,553 INFO  L313           BlockEncoder]: Encoded RCFG 8304 locations, 14469 edges
[2020-11-24 23:50:42,554 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 11:50:42 BasicIcfg
[2020-11-24 23:50:42,554 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 23:50:42,554 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 23:50:42,554 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 23:50:42,556 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 23:50:42,556 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:50:42,556 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:50:39" (1/6) ...
[2020-11-24 23:50:42,558 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@120022b and model type BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:50:42, skipping insertion in model container
[2020-11-24 23:50:42,558 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:50:42,558 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:50:39" (2/6) ...
[2020-11-24 23:50:42,558 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@120022b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:50:42, skipping insertion in model container
[2020-11-24 23:50:42,558 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:50:42,558 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:50:40" (3/6) ...
[2020-11-24 23:50:42,558 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@120022b and model type BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 11:50:42, skipping insertion in model container
[2020-11-24 23:50:42,558 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:50:42,558 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:50:40" (4/6) ...
[2020-11-24 23:50:42,559 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@120022b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:50:42, skipping insertion in model container
[2020-11-24 23:50:42,559 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:50:42,559 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:50:42" (5/6) ...
[2020-11-24 23:50:42,559 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@120022b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 11:50:42, skipping insertion in model container
[2020-11-24 23:50:42,559 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:50:42,560 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 11:50:42" (6/6) ...
[2020-11-24 23:50:42,561 INFO  L404   chiAutomizerObserver]: Analyzing ICFG BATG_0xff759254e578bc7f725428cecb612a502e604f42_transfer-normal.bpl_BEv2
[2020-11-24 23:50:42,593 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 23:50:42,594 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 23:50:42,594 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 23:50:42,594 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 23:50:42,594 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 23:50:42,594 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 23:50:42,594 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 23:50:42,594 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 23:50:42,594 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 23:50:42,650 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 8304 states.
[2020-11-24 23:50:42,729 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:50:42,729 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:50:42,729 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:50:42,736 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:50:42,736 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:50:42,736 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 23:50:42,736 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 8304 states.
[2020-11-24 23:50:42,772 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:50:42,772 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:50:42,772 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:50:42,774 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:50:42,774 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_TokenERC200 := false;
[L3]                 call_transfer_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7673]              assume null == 0;
[L7674]  CALL        call this := FreshRefGenerator__success();
[L4051]              havoc newRef;
[L4052]              assume Alloc[newRef] == false;
[L4053]              Alloc[newRef] := true;
[L4054]              assume newRef != null;
[L7674]  RET         call this := FreshRefGenerator__success();
[L7675]              assume now >= 0;
[L7676]              assume DType[this] == BATG;
[L7677]              assume msgvalue_MSG == 0;
[L7678]              gas := gas - 53000;
[L7679]  CALL        call BATG_BATG__success(this, msgsender_MSG, msgvalue_MSG);
[L4741]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]              assume msgsender_MSG != null;
[L4173]              Balance[this] := 0;
[L4187]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4188]  COND FALSE  !(revert)
[L4741]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4742]  COND TRUE   revert
[L7679]  RET         call BATG_BATG__success(this, msgsender_MSG, msgvalue_MSG);
[L7680]              assume !revert && gas >= 0;

Loop:
[L7683]  CALL        call CorralChoice_BATG(this);
[L7382]              havoc msgsender_MSG;
[L7383]              havoc msgvalue_MSG;
[L7384]              havoc choice;
[L7385]              havoc __ret_0_totalSupply;
[L7386]              havoc tokenOwner_s338;
[L7387]              havoc balance_s338;
[L7388]              havoc tokenOwner_s484;
[L7389]              havoc spender_s484;
[L7390]              havoc remaining_s484;
[L7391]              havoc to_s381;
[L7392]              havoc tokens_s381;
[L7393]              havoc success_s381;
[L7394]              havoc spender_s409;
[L7395]              havoc tokens_s409;
[L7396]              havoc success_s409;
[L7397]              havoc from_s468;
[L7398]              havoc to_s468;
[L7399]              havoc tokens_s468;
[L7400]              havoc success_s468;
[L7401]              havoc __ret_0_owner;
[L7402]              havoc __ret_0_newOwner;
[L7403]              havoc _newOwner_s217;
[L7404]              havoc __ret_0_symbol;
[L7405]              havoc __ret_0_name;
[L7406]              havoc __ret_0_decimals;
[L7407]              havoc spender_s527;
[L7408]              havoc tokens_s527;
[L7409]              havoc data_s527;
[L7410]              havoc success_s527;
[L7411]              havoc __ret_0_aSBlock;
[L7412]              havoc __ret_0_aEBlock;
[L7413]              havoc __ret_0_aCap;
[L7414]              havoc __ret_0_aTot;
[L7415]              havoc __ret_0_aAmt;
[L7416]              havoc __ret_0_sSBlock;
[L7417]              havoc __ret_0_sEBlock;
[L7418]              havoc __ret_0_sCap;
[L7419]              havoc __ret_0_sTot;
[L7420]              havoc __ret_0_sChunk;
[L7421]              havoc __ret_0_sPrice;
[L7422]              havoc _refer_s687;
[L7423]              havoc success_s687;
[L7424]              havoc _refer_s847;
[L7425]              havoc success_s847;
[L7426]              havoc StartBlock_s868;
[L7427]              havoc EndBlock_s868;
[L7428]              havoc DropCap_s868;
[L7429]              havoc DropCount_s868;
[L7430]              havoc DropAmount_s868;
[L7431]              havoc StartBlock_s892;
[L7432]              havoc EndBlock_s892;
[L7433]              havoc SaleCap_s892;
[L7434]              havoc SaleCount_s892;
[L7435]              havoc ChunkSize_s892;
[L7436]              havoc SalePrice_s892;
[L7437]              havoc _aSBlock_s926;
[L7438]              havoc _aEBlock_s926;
[L7439]              havoc _aAmt_s926;
[L7440]              havoc _aCap_s926;
[L7441]              havoc _sSBlock_s966;
[L7442]              havoc _sEBlock_s966;
[L7443]              havoc _sChunk_s966;
[L7444]              havoc _sPrice_s966;
[L7445]              havoc _sCap_s966;
[L7446]              havoc tmpNow;
[L7447]              havoc gas;
[L7448]              assume gas > 4000000 && gas <= 8000000;
[L7449]              tmpNow := now;
[L7450]              havoc now;
[L7451]              assume now > tmpNow;
[L7452]              assume msgsender_MSG != null;
[L7453]              assume DType[msgsender_MSG] != SafeMath;
[L7454]              assume DType[msgsender_MSG] != ERC20Interface;
[L7455]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7456]              assume DType[msgsender_MSG] != Owned;
[L7457]              assume DType[msgsender_MSG] != TokenERC20;
[L7458]              assume DType[msgsender_MSG] != BATG;
[L7459]              Alloc[msgsender_MSG] := true;
[L7460]  COND TRUE   choice == 32
[L7461]              gas := gas - 21000;
[L7462]  COND FALSE  !(gas >= 0)
[L7683]  RET         call CorralChoice_BATG(this);

[2020-11-24 23:50:42,788 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:50:42,788 INFO  L82        PathProgramCache]: Analyzing trace with hash 998623930, now seen corresponding path program 1 times
[2020-11-24 23:50:42,793 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:50:42,813 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:50:42,847 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 23:50:42,848 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:50:42,848 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 23:50:43,312 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:50:43,320 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 23:50:43,321 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 23:50:43,322 INFO  L87              Difference]: Start difference. First operand 8304 states. Second operand 3 states.
[2020-11-24 23:50:43,675 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:50:43,675 INFO  L93              Difference]: Finished difference Result 8502 states and 14395 transitions.
[2020-11-24 23:50:43,675 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 23:50:43,677 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 8502 states and 14395 transitions.
[2020-11-24 23:50:43,725 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 23:50:43,788 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 8502 states to 8502 states and 14395 transitions.
[2020-11-24 23:50:43,789 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 14
[2020-11-24 23:50:43,792 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 399
[2020-11-24 23:50:43,792 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 8502 states and 14395 transitions.
[2020-11-24 23:50:43,817 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:50:43,817 INFO  L728         BuchiCegarLoop]: Abstraction has 8502 states and 14395 transitions.
[2020-11-24 23:50:43,838 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 8502 states and 14395 transitions.
[2020-11-24 23:50:43,954 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 8502 to 7554.
[2020-11-24 23:50:43,954 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 7554 states.
[2020-11-24 23:50:43,971 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 7554 states to 7554 states and 12712 transitions.
[2020-11-24 23:50:43,972 INFO  L751         BuchiCegarLoop]: Abstraction has 7554 states and 12712 transitions.
[2020-11-24 23:50:43,972 INFO  L631         BuchiCegarLoop]: Abstraction has 7554 states and 12712 transitions.
[2020-11-24 23:50:43,972 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 23:50:43,972 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7554 states and 12712 transitions.
[2020-11-24 23:50:43,985 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:50:43,985 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:50:43,985 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:50:43,986 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:50:43,986 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                success_transfer_TokenERC200 := false;
[L3]                call_transfer_TokenERC200 := false;
[L3]     CALL       call main();
[L3]                havoc p1;
[L7673]             assume null == 0;
[L7674]  CALL       call this := FreshRefGenerator__success();
[L4051]             havoc newRef;
[L4052]             assume Alloc[newRef] == false;
[L4053]             Alloc[newRef] := true;
[L4054]             assume newRef != null;
[L7674]  RET        call this := FreshRefGenerator__success();
[L7675]             assume now >= 0;
[L7676]             assume DType[this] == BATG;
[L7677]             assume msgvalue_MSG == 0;
[L7678]             gas := gas - 53000;
[L7679]  CALL       call BATG_BATG__success(this, msgsender_MSG, msgvalue_MSG);
[L4741]  CALL       call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  CALL       call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]             assume msgsender_MSG != null;
[L4173]             Balance[this] := 0;
[L4187]  RET        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4188]  COND TRUE  revert
[L4741]  RET        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4742]  COND TRUE  revert
[L7679]  RET        call BATG_BATG__success(this, msgsender_MSG, msgvalue_MSG);
[L7680]             assume !revert && gas >= 0;

Loop:
[L7683]  CALL        call CorralChoice_BATG(this);
[L7382]              havoc msgsender_MSG;
[L7383]              havoc msgvalue_MSG;
[L7384]              havoc choice;
[L7385]              havoc __ret_0_totalSupply;
[L7386]              havoc tokenOwner_s338;
[L7387]              havoc balance_s338;
[L7388]              havoc tokenOwner_s484;
[L7389]              havoc spender_s484;
[L7390]              havoc remaining_s484;
[L7391]              havoc to_s381;
[L7392]              havoc tokens_s381;
[L7393]              havoc success_s381;
[L7394]              havoc spender_s409;
[L7395]              havoc tokens_s409;
[L7396]              havoc success_s409;
[L7397]              havoc from_s468;
[L7398]              havoc to_s468;
[L7399]              havoc tokens_s468;
[L7400]              havoc success_s468;
[L7401]              havoc __ret_0_owner;
[L7402]              havoc __ret_0_newOwner;
[L7403]              havoc _newOwner_s217;
[L7404]              havoc __ret_0_symbol;
[L7405]              havoc __ret_0_name;
[L7406]              havoc __ret_0_decimals;
[L7407]              havoc spender_s527;
[L7408]              havoc tokens_s527;
[L7409]              havoc data_s527;
[L7410]              havoc success_s527;
[L7411]              havoc __ret_0_aSBlock;
[L7412]              havoc __ret_0_aEBlock;
[L7413]              havoc __ret_0_aCap;
[L7414]              havoc __ret_0_aTot;
[L7415]              havoc __ret_0_aAmt;
[L7416]              havoc __ret_0_sSBlock;
[L7417]              havoc __ret_0_sEBlock;
[L7418]              havoc __ret_0_sCap;
[L7419]              havoc __ret_0_sTot;
[L7420]              havoc __ret_0_sChunk;
[L7421]              havoc __ret_0_sPrice;
[L7422]              havoc _refer_s687;
[L7423]              havoc success_s687;
[L7424]              havoc _refer_s847;
[L7425]              havoc success_s847;
[L7426]              havoc StartBlock_s868;
[L7427]              havoc EndBlock_s868;
[L7428]              havoc DropCap_s868;
[L7429]              havoc DropCount_s868;
[L7430]              havoc DropAmount_s868;
[L7431]              havoc StartBlock_s892;
[L7432]              havoc EndBlock_s892;
[L7433]              havoc SaleCap_s892;
[L7434]              havoc SaleCount_s892;
[L7435]              havoc ChunkSize_s892;
[L7436]              havoc SalePrice_s892;
[L7437]              havoc _aSBlock_s926;
[L7438]              havoc _aEBlock_s926;
[L7439]              havoc _aAmt_s926;
[L7440]              havoc _aCap_s926;
[L7441]              havoc _sSBlock_s966;
[L7442]              havoc _sEBlock_s966;
[L7443]              havoc _sChunk_s966;
[L7444]              havoc _sPrice_s966;
[L7445]              havoc _sCap_s966;
[L7446]              havoc tmpNow;
[L7447]              havoc gas;
[L7448]              assume gas > 4000000 && gas <= 8000000;
[L7449]              tmpNow := now;
[L7450]              havoc now;
[L7451]              assume now > tmpNow;
[L7452]              assume msgsender_MSG != null;
[L7453]              assume DType[msgsender_MSG] != SafeMath;
[L7454]              assume DType[msgsender_MSG] != ERC20Interface;
[L7455]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7456]              assume DType[msgsender_MSG] != Owned;
[L7457]              assume DType[msgsender_MSG] != TokenERC20;
[L7458]              assume DType[msgsender_MSG] != BATG;
[L7459]              Alloc[msgsender_MSG] := true;
[L7460]  COND TRUE   choice == 32
[L7461]              gas := gas - 21000;
[L7462]  COND FALSE  !(gas >= 0)
[L7683]  RET         call CorralChoice_BATG(this);

[2020-11-24 23:50:43,989 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:50:43,989 INFO  L82        PathProgramCache]: Analyzing trace with hash 318565560, now seen corresponding path program 1 times
[2020-11-24 23:50:43,989 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:50:43,994 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:50:44,001 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 23:50:44,001 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:50:44,001 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [2] imperfect sequences [] total 2
[2020-11-24 23:50:44,002 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:50:44,002 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 23:50:44,002 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 23:50:44,002 INFO  L87              Difference]: Start difference. First operand 7554 states and 12712 transitions. cyclomatic complexity: 5164 Second operand 3 states.
[2020-11-24 23:50:44,237 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:50:44,237 INFO  L93              Difference]: Finished difference Result 7433 states and 8751 transitions.
[2020-11-24 23:50:44,237 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 23:50:44,237 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7433 states and 8751 transitions.
[2020-11-24 23:50:44,254 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:50:44,280 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7433 states to 7433 states and 8751 transitions.
[2020-11-24 23:50:44,280 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 244
[2020-11-24 23:50:44,280 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 244
[2020-11-24 23:50:44,280 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7433 states and 8751 transitions.
[2020-11-24 23:50:44,286 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:50:44,287 INFO  L728         BuchiCegarLoop]: Abstraction has 7433 states and 8751 transitions.
[2020-11-24 23:50:44,293 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7433 states and 8751 transitions.
[2020-11-24 23:50:44,347 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7433 to 7433.
[2020-11-24 23:50:44,347 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 7433 states.
[2020-11-24 23:50:44,357 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 7433 states to 7433 states and 8751 transitions.
[2020-11-24 23:50:44,358 INFO  L751         BuchiCegarLoop]: Abstraction has 7433 states and 8751 transitions.
[2020-11-24 23:50:44,358 INFO  L631         BuchiCegarLoop]: Abstraction has 7433 states and 8751 transitions.
[2020-11-24 23:50:44,358 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 23:50:44,358 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7433 states and 8751 transitions.
[2020-11-24 23:50:44,366 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:50:44,367 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:50:44,367 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:50:44,368 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:50:44,368 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_TokenERC200 := false;
[L3]                 call_transfer_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7673]              assume null == 0;
[L7674]  CALL        call this := FreshRefGenerator__success();
[L4051]              havoc newRef;
[L4052]              assume Alloc[newRef] == false;
[L4053]              Alloc[newRef] := true;
[L4054]              assume newRef != null;
[L7674]  RET         call this := FreshRefGenerator__success();
[L7675]              assume now >= 0;
[L7676]              assume DType[this] == BATG;
[L7677]              assume msgvalue_MSG == 0;
[L7678]              gas := gas - 53000;
[L7679]  CALL        call BATG_BATG__success(this, msgsender_MSG, msgvalue_MSG);
[L4741]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]              assume msgsender_MSG != null;
[L4173]              Balance[this] := 0;
[L4187]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4188]  COND TRUE   revert
[L4741]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4742]  COND TRUE   revert
[L7679]  RET         call BATG_BATG__success(this, msgsender_MSG, msgvalue_MSG);
[L7680]              assume !revert && gas >= 0;
[L7683]  CALL        call CorralChoice_BATG(this);
[L7382]              havoc msgsender_MSG;
[L7383]              havoc msgvalue_MSG;
[L7384]              havoc choice;
[L7385]              havoc __ret_0_totalSupply;
[L7386]              havoc tokenOwner_s338;
[L7387]              havoc balance_s338;
[L7388]              havoc tokenOwner_s484;
[L7389]              havoc spender_s484;
[L7390]              havoc remaining_s484;
[L7391]              havoc to_s381;
[L7392]              havoc tokens_s381;
[L7393]              havoc success_s381;
[L7394]              havoc spender_s409;
[L7395]              havoc tokens_s409;
[L7396]              havoc success_s409;
[L7397]              havoc from_s468;
[L7398]              havoc to_s468;
[L7399]              havoc tokens_s468;
[L7400]              havoc success_s468;
[L7401]              havoc __ret_0_owner;
[L7402]              havoc __ret_0_newOwner;
[L7403]              havoc _newOwner_s217;
[L7404]              havoc __ret_0_symbol;
[L7405]              havoc __ret_0_name;
[L7406]              havoc __ret_0_decimals;
[L7407]              havoc spender_s527;
[L7408]              havoc tokens_s527;
[L7409]              havoc data_s527;
[L7410]              havoc success_s527;
[L7411]              havoc __ret_0_aSBlock;
[L7412]              havoc __ret_0_aEBlock;
[L7413]              havoc __ret_0_aCap;
[L7414]              havoc __ret_0_aTot;
[L7415]              havoc __ret_0_aAmt;
[L7416]              havoc __ret_0_sSBlock;
[L7417]              havoc __ret_0_sEBlock;
[L7418]              havoc __ret_0_sCap;
[L7419]              havoc __ret_0_sTot;
[L7420]              havoc __ret_0_sChunk;
[L7421]              havoc __ret_0_sPrice;
[L7422]              havoc _refer_s687;
[L7423]              havoc success_s687;
[L7424]              havoc _refer_s847;
[L7425]              havoc success_s847;
[L7426]              havoc StartBlock_s868;
[L7427]              havoc EndBlock_s868;
[L7428]              havoc DropCap_s868;
[L7429]              havoc DropCount_s868;
[L7430]              havoc DropAmount_s868;
[L7431]              havoc StartBlock_s892;
[L7432]              havoc EndBlock_s892;
[L7433]              havoc SaleCap_s892;
[L7434]              havoc SaleCount_s892;
[L7435]              havoc ChunkSize_s892;
[L7436]              havoc SalePrice_s892;
[L7437]              havoc _aSBlock_s926;
[L7438]              havoc _aEBlock_s926;
[L7439]              havoc _aAmt_s926;
[L7440]              havoc _aCap_s926;
[L7441]              havoc _sSBlock_s966;
[L7442]              havoc _sEBlock_s966;
[L7443]              havoc _sChunk_s966;
[L7444]              havoc _sPrice_s966;
[L7445]              havoc _sCap_s966;
[L7446]              havoc tmpNow;
[L7447]              havoc gas;
[L7448]              assume gas > 4000000 && gas <= 8000000;
[L7449]              tmpNow := now;
[L7450]              havoc now;
[L7451]              assume now > tmpNow;
[L7452]              assume msgsender_MSG != null;
[L7453]              assume DType[msgsender_MSG] != SafeMath;
[L7454]              assume DType[msgsender_MSG] != ERC20Interface;
[L7455]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7456]              assume DType[msgsender_MSG] != Owned;
[L7457]              assume DType[msgsender_MSG] != TokenERC20;
[L7458]              assume DType[msgsender_MSG] != BATG;
[L7459]              Alloc[msgsender_MSG] := true;
[L7460]  COND FALSE  !(choice == 32)
[L7466]  COND FALSE  !(choice == 31)
[L7472]  COND FALSE  !(choice == 30)
[L7478]  COND TRUE   choice == 29
[L7479]              gas := gas - 21000;
[L7480]  COND TRUE   gas >= 0
[L7481]              assume tokens_s381 >= 0 && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7482]              assume msgvalue_MSG == 0;
[L7483]  CALL        call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s381) && msgsender_MSG != to_s381) && tokens_s381 <= balances_TokenERC20[this][msgsender_MSG]) && balances_TokenERC20[this][to_s381] + tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s381 >= 0) && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s381] >= 0) && balances_TokenERC20[this][to_s381] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][msgsender_MSG] >= 0) && balances_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TokenERC200 := true;
[L3]                 call_transfer_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L979]               havoc __exception;
[L980]               revert := false;
[L981]   COND FALSE  !(__exception)
[L1015]  CALL        call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L4479]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L4118]  COND TRUE   !(b_s45 <= a_s45)
[L4119]              revert := true;
[L4479]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L4480]  COND TRUE   revert
[L1015]  RET         call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L1016]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((((((((((success_s381 == true && balances_TokenERC20[this][msgsender_MSG] == old(balances_TokenERC20[this][msgsender_MSG]) - tokens_s381) && balances_TokenERC20[this][to_s381] == old(balances_TokenERC20[this][to_s381]) + tokens_s381) && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this])) && balances_TokenERC20[this][p1] == old(balances_TokenERC20[this][p1])) && aSBlock_BATG[this] == old(aSBlock_BATG[this])) && aEBlock_BATG[this] == old(aEBlock_BATG[this])) && aCap_BATG[this] == old(aCap_BATG[this])) && aTot_BATG[this] == old(aTot_BATG[this])) && aAmt_BATG[this] == old(aAmt_BATG[this])) && sSBlock_BATG[this] == old(sSBlock_BATG[this])) && sEBlock_BATG[this] == old(sEBlock_BATG[this])) && sCap_BATG[this] == old(sCap_BATG[this])) && sTot_BATG[this] == old(sTot_BATG[this])) && sChunk_BATG[this] == old(sChunk_BATG[this])) && sPrice_BATG[this] == old(sPrice_BATG[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L7483]  RET         call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L7683]  RET         call CorralChoice_BATG(this);

Loop:
[L7683]  CALL        call CorralChoice_BATG(this);
[L7382]              havoc msgsender_MSG;
[L7383]              havoc msgvalue_MSG;
[L7384]              havoc choice;
[L7385]              havoc __ret_0_totalSupply;
[L7386]              havoc tokenOwner_s338;
[L7387]              havoc balance_s338;
[L7388]              havoc tokenOwner_s484;
[L7389]              havoc spender_s484;
[L7390]              havoc remaining_s484;
[L7391]              havoc to_s381;
[L7392]              havoc tokens_s381;
[L7393]              havoc success_s381;
[L7394]              havoc spender_s409;
[L7395]              havoc tokens_s409;
[L7396]              havoc success_s409;
[L7397]              havoc from_s468;
[L7398]              havoc to_s468;
[L7399]              havoc tokens_s468;
[L7400]              havoc success_s468;
[L7401]              havoc __ret_0_owner;
[L7402]              havoc __ret_0_newOwner;
[L7403]              havoc _newOwner_s217;
[L7404]              havoc __ret_0_symbol;
[L7405]              havoc __ret_0_name;
[L7406]              havoc __ret_0_decimals;
[L7407]              havoc spender_s527;
[L7408]              havoc tokens_s527;
[L7409]              havoc data_s527;
[L7410]              havoc success_s527;
[L7411]              havoc __ret_0_aSBlock;
[L7412]              havoc __ret_0_aEBlock;
[L7413]              havoc __ret_0_aCap;
[L7414]              havoc __ret_0_aTot;
[L7415]              havoc __ret_0_aAmt;
[L7416]              havoc __ret_0_sSBlock;
[L7417]              havoc __ret_0_sEBlock;
[L7418]              havoc __ret_0_sCap;
[L7419]              havoc __ret_0_sTot;
[L7420]              havoc __ret_0_sChunk;
[L7421]              havoc __ret_0_sPrice;
[L7422]              havoc _refer_s687;
[L7423]              havoc success_s687;
[L7424]              havoc _refer_s847;
[L7425]              havoc success_s847;
[L7426]              havoc StartBlock_s868;
[L7427]              havoc EndBlock_s868;
[L7428]              havoc DropCap_s868;
[L7429]              havoc DropCount_s868;
[L7430]              havoc DropAmount_s868;
[L7431]              havoc StartBlock_s892;
[L7432]              havoc EndBlock_s892;
[L7433]              havoc SaleCap_s892;
[L7434]              havoc SaleCount_s892;
[L7435]              havoc ChunkSize_s892;
[L7436]              havoc SalePrice_s892;
[L7437]              havoc _aSBlock_s926;
[L7438]              havoc _aEBlock_s926;
[L7439]              havoc _aAmt_s926;
[L7440]              havoc _aCap_s926;
[L7441]              havoc _sSBlock_s966;
[L7442]              havoc _sEBlock_s966;
[L7443]              havoc _sChunk_s966;
[L7444]              havoc _sPrice_s966;
[L7445]              havoc _sCap_s966;
[L7446]              havoc tmpNow;
[L7447]              havoc gas;
[L7448]              assume gas > 4000000 && gas <= 8000000;
[L7449]              tmpNow := now;
[L7450]              havoc now;
[L7451]              assume now > tmpNow;
[L7452]              assume msgsender_MSG != null;
[L7453]              assume DType[msgsender_MSG] != SafeMath;
[L7454]              assume DType[msgsender_MSG] != ERC20Interface;
[L7455]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7456]              assume DType[msgsender_MSG] != Owned;
[L7457]              assume DType[msgsender_MSG] != TokenERC20;
[L7458]              assume DType[msgsender_MSG] != BATG;
[L7459]              Alloc[msgsender_MSG] := true;
[L7460]  COND FALSE  !(choice == 32)
[L7466]  COND FALSE  !(choice == 31)
[L7472]  COND FALSE  !(choice == 30)
[L7478]  COND TRUE   choice == 29
[L7479]              gas := gas - 21000;
[L7480]  COND TRUE   gas >= 0
[L7481]              assume tokens_s381 >= 0 && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7482]              assume msgvalue_MSG == 0;
[L7483]  CALL        call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s381) && msgsender_MSG != to_s381) && tokens_s381 <= balances_TokenERC20[this][msgsender_MSG]) && balances_TokenERC20[this][to_s381] + tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s381 >= 0) && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s381] >= 0) && balances_TokenERC20[this][to_s381] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][msgsender_MSG] >= 0) && balances_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TokenERC200 := true;
[L3]                 call_transfer_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L979]               havoc __exception;
[L980]               revert := false;
[L981]   COND FALSE  !(__exception)
[L1015]  CALL        call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L4479]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L4118]  COND TRUE   !(b_s45 <= a_s45)
[L4119]              revert := true;
[L4479]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L4480]  COND TRUE   revert
[L1015]  RET         call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L1016]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((((((((((success_s381 == true && balances_TokenERC20[this][msgsender_MSG] == old(balances_TokenERC20[this][msgsender_MSG]) - tokens_s381) && balances_TokenERC20[this][to_s381] == old(balances_TokenERC20[this][to_s381]) + tokens_s381) && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this])) && balances_TokenERC20[this][p1] == old(balances_TokenERC20[this][p1])) && aSBlock_BATG[this] == old(aSBlock_BATG[this])) && aEBlock_BATG[this] == old(aEBlock_BATG[this])) && aCap_BATG[this] == old(aCap_BATG[this])) && aTot_BATG[this] == old(aTot_BATG[this])) && aAmt_BATG[this] == old(aAmt_BATG[this])) && sSBlock_BATG[this] == old(sSBlock_BATG[this])) && sEBlock_BATG[this] == old(sEBlock_BATG[this])) && sCap_BATG[this] == old(sCap_BATG[this])) && sTot_BATG[this] == old(sTot_BATG[this])) && sChunk_BATG[this] == old(sChunk_BATG[this])) && sPrice_BATG[this] == old(sPrice_BATG[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L7483]  RET         call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L7683]  RET         call CorralChoice_BATG(this);

[2020-11-24 23:50:44,372 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:50:44,372 INFO  L82        PathProgramCache]: Analyzing trace with hash -501045506, now seen corresponding path program 1 times
[2020-11-24 23:50:44,373 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:50:44,382 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:50:44,407 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 23:50:44,407 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:50:44,407 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 23:50:44,407 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:50:44,408 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 23:50:44,408 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 23:50:44,408 INFO  L87              Difference]: Start difference. First operand 7433 states and 8751 transitions. cyclomatic complexity: 1324 Second operand 3 states.
[2020-11-24 23:50:44,525 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:50:44,525 INFO  L93              Difference]: Finished difference Result 8377 states and 9747 transitions.
[2020-11-24 23:50:44,525 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 23:50:44,525 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 8377 states and 9747 transitions.
[2020-11-24 23:50:44,546 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 23:50:44,573 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 8377 states to 8073 states and 9379 transitions.
[2020-11-24 23:50:44,573 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 306
[2020-11-24 23:50:44,574 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 306
[2020-11-24 23:50:44,574 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 8073 states and 9379 transitions.
[2020-11-24 23:50:44,580 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:50:44,580 INFO  L728         BuchiCegarLoop]: Abstraction has 8073 states and 9379 transitions.
[2020-11-24 23:50:44,587 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 8073 states and 9379 transitions.
[2020-11-24 23:50:44,630 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 8073 to 7185.
[2020-11-24 23:50:44,630 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 7185 states.
[2020-11-24 23:50:44,637 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 7185 states to 7185 states and 8269 transitions.
[2020-11-24 23:50:44,637 INFO  L751         BuchiCegarLoop]: Abstraction has 7185 states and 8269 transitions.
[2020-11-24 23:50:44,637 INFO  L631         BuchiCegarLoop]: Abstraction has 7185 states and 8269 transitions.
[2020-11-24 23:50:44,637 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 23:50:44,637 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7185 states and 8269 transitions.
[2020-11-24 23:50:44,644 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:50:44,644 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:50:44,644 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:50:44,646 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:50:44,646 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_TokenERC200 := false;
[L3]                 call_transfer_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7673]              assume null == 0;
[L7674]  CALL        call this := FreshRefGenerator__success();
[L4051]              havoc newRef;
[L4052]              assume Alloc[newRef] == false;
[L4053]              Alloc[newRef] := true;
[L4054]              assume newRef != null;
[L7674]  RET         call this := FreshRefGenerator__success();
[L7675]              assume now >= 0;
[L7676]              assume DType[this] == BATG;
[L7677]              assume msgvalue_MSG == 0;
[L7678]              gas := gas - 53000;
[L7679]  CALL        call BATG_BATG__success(this, msgsender_MSG, msgvalue_MSG);
[L4741]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]              assume msgsender_MSG != null;
[L4173]              Balance[this] := 0;
[L4187]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4188]  COND FALSE  !(revert)
[L4741]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4742]  COND FALSE  !(revert)
[L4745]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4239]              assume msgsender_MSG != null;
[L4240]              Balance[this] := 0;
[L4241]              owner_Owned[this] := null;
[L4242]              newOwner_Owned[this] := null;
[L4244]              owner_Owned[this] := msgsender_MSG;
[L4257]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]  COND FALSE  !(revert)
[L4745]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4746]  COND FALSE  !(revert)
[L4749]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4401]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]              assume msgsender_MSG != null;
[L4173]              Balance[this] := 0;
[L4187]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4188]  COND FALSE  !(revert)
[L4401]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L4402]  COND FALSE  !(revert)
[L4405]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4257]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4239]              assume msgsender_MSG != null;
[L4240]              Balance[this] := 0;
[L4241]              owner_Owned[this] := null;
[L4242]              newOwner_Owned[this] := null;
[L4244]              owner_Owned[this] := msgsender_MSG;
[L4257]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]  COND FALSE  !(revert)
[L4405]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L4406]  COND FALSE  !(revert)
[L4409]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4359]              assume msgsender_MSG != null;
[L4360]              Balance[this] := 0;
[L4361]              symbol_TokenERC20[this] := -2133012057;
[L4362]              name_TokenERC20[this] := -2133012057;
[L4363]              decimals_TokenERC20[this] := 0;
[L4364]              _totalSupply_TokenERC20[this] := 0;
[L4365]              balances_TokenERC20[this] := zeroRefintArr();
[L4366]              sum_balances0[this] := 0;
[L4367]              allowed_TokenERC20[this] := zeroRefRefintArr();
[L4368]              sum_allowed1[this] := 0;
[L4370]              symbol_TokenERC20[this] := -2089175354;
[L4371]              name_TokenERC20[this] := 1889142888;
[L4372]              decimals_TokenERC20[this] := 0;
[L4373]              __var_2 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4374]              _totalSupply_TokenERC20[this] := nonlinearMul(58694261330118072424467068354560 % 115792089237316195423570985008687907853269984665640564039457584007913129639936, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4375]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][owner_Owned[this]];
[L4376]              balances_TokenERC20[this][owner_Owned[this]] := _totalSupply_TokenERC20[this];
[L4377]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][owner_Owned[this]];
[L4378]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L4409]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4410]  COND FALSE  !(revert)
[L4749]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4750]  COND FALSE  !(revert)
[L4753]  CALL        call BATG_BATG_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4703]              assume msgsender_MSG != null;
[L4704]              Balance[this] := 0;
[L4705]              aSBlock_BATG[this] := 0;
[L4706]              aEBlock_BATG[this] := 0;
[L4707]              aCap_BATG[this] := 0;
[L4708]              aTot_BATG[this] := 0;
[L4709]              aAmt_BATG[this] := 0;
[L4710]              sSBlock_BATG[this] := 0;
[L4711]              sEBlock_BATG[this] := 0;
[L4712]              sCap_BATG[this] := 0;
[L4713]              sTot_BATG[this] := 0;
[L4714]              sChunk_BATG[this] := 0;
[L4715]              sPrice_BATG[this] := 0;
[L4753]  RET         call BATG_BATG_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4754]  COND FALSE  !(revert)
[L7679]  RET         call BATG_BATG__success(this, msgsender_MSG, msgvalue_MSG);
[L7680]              assume !revert && gas >= 0;
[L7683]  CALL        call CorralChoice_BATG(this);
[L7382]              havoc msgsender_MSG;
[L7383]              havoc msgvalue_MSG;
[L7384]              havoc choice;
[L7385]              havoc __ret_0_totalSupply;
[L7386]              havoc tokenOwner_s338;
[L7387]              havoc balance_s338;
[L7388]              havoc tokenOwner_s484;
[L7389]              havoc spender_s484;
[L7390]              havoc remaining_s484;
[L7391]              havoc to_s381;
[L7392]              havoc tokens_s381;
[L7393]              havoc success_s381;
[L7394]              havoc spender_s409;
[L7395]              havoc tokens_s409;
[L7396]              havoc success_s409;
[L7397]              havoc from_s468;
[L7398]              havoc to_s468;
[L7399]              havoc tokens_s468;
[L7400]              havoc success_s468;
[L7401]              havoc __ret_0_owner;
[L7402]              havoc __ret_0_newOwner;
[L7403]              havoc _newOwner_s217;
[L7404]              havoc __ret_0_symbol;
[L7405]              havoc __ret_0_name;
[L7406]              havoc __ret_0_decimals;
[L7407]              havoc spender_s527;
[L7408]              havoc tokens_s527;
[L7409]              havoc data_s527;
[L7410]              havoc success_s527;
[L7411]              havoc __ret_0_aSBlock;
[L7412]              havoc __ret_0_aEBlock;
[L7413]              havoc __ret_0_aCap;
[L7414]              havoc __ret_0_aTot;
[L7415]              havoc __ret_0_aAmt;
[L7416]              havoc __ret_0_sSBlock;
[L7417]              havoc __ret_0_sEBlock;
[L7418]              havoc __ret_0_sCap;
[L7419]              havoc __ret_0_sTot;
[L7420]              havoc __ret_0_sChunk;
[L7421]              havoc __ret_0_sPrice;
[L7422]              havoc _refer_s687;
[L7423]              havoc success_s687;
[L7424]              havoc _refer_s847;
[L7425]              havoc success_s847;
[L7426]              havoc StartBlock_s868;
[L7427]              havoc EndBlock_s868;
[L7428]              havoc DropCap_s868;
[L7429]              havoc DropCount_s868;
[L7430]              havoc DropAmount_s868;
[L7431]              havoc StartBlock_s892;
[L7432]              havoc EndBlock_s892;
[L7433]              havoc SaleCap_s892;
[L7434]              havoc SaleCount_s892;
[L7435]              havoc ChunkSize_s892;
[L7436]              havoc SalePrice_s892;
[L7437]              havoc _aSBlock_s926;
[L7438]              havoc _aEBlock_s926;
[L7439]              havoc _aAmt_s926;
[L7440]              havoc _aCap_s926;
[L7441]              havoc _sSBlock_s966;
[L7442]              havoc _sEBlock_s966;
[L7443]              havoc _sChunk_s966;
[L7444]              havoc _sPrice_s966;
[L7445]              havoc _sCap_s966;
[L7446]              havoc tmpNow;
[L7447]              havoc gas;
[L7448]              assume gas > 4000000 && gas <= 8000000;
[L7449]              tmpNow := now;
[L7450]              havoc now;
[L7451]              assume now > tmpNow;
[L7452]              assume msgsender_MSG != null;
[L7453]              assume DType[msgsender_MSG] != SafeMath;
[L7454]              assume DType[msgsender_MSG] != ERC20Interface;
[L7455]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7456]              assume DType[msgsender_MSG] != Owned;
[L7457]              assume DType[msgsender_MSG] != TokenERC20;
[L7458]              assume DType[msgsender_MSG] != BATG;
[L7459]              Alloc[msgsender_MSG] := true;
[L7460]  COND FALSE  !(choice == 32)
[L7466]  COND FALSE  !(choice == 31)
[L7472]  COND FALSE  !(choice == 30)
[L7478]  COND TRUE   choice == 29
[L7479]              gas := gas - 21000;
[L7480]  COND TRUE   gas >= 0
[L7481]              assume tokens_s381 >= 0 && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7482]              assume msgvalue_MSG == 0;
[L7483]  CALL        call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s381) && msgsender_MSG != to_s381) && tokens_s381 <= balances_TokenERC20[this][msgsender_MSG]) && balances_TokenERC20[this][to_s381] + tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s381 >= 0) && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s381] >= 0) && balances_TokenERC20[this][to_s381] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][msgsender_MSG] >= 0) && balances_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TokenERC200 := true;
[L3]                 call_transfer_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L979]               havoc __exception;
[L980]               revert := false;
[L981]   COND FALSE  !(__exception)
[L1015]  CALL        call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L4479]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L4118]  COND FALSE  !(!(b_s45 <= a_s45))
[L4122]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4479]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L4480]  COND FALSE  !(revert)
[L4483]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][msgsender_MSG];
[L4484]              balances_TokenERC20[this][msgsender_MSG] := __var_5;
[L4485]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][msgsender_MSG];
[L4486]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][to_s381], tokens_s381);
[L4100]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4101]  COND FALSE  !(!(c_s23 >= a_s23))
[L4486]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][to_s381], tokens_s381);
[L4487]  COND FALSE  !(revert)
[L4490]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][to_s381];
[L4491]              balances_TokenERC20[this][to_s381] := __var_6;
[L4492]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][to_s381];
[L4493]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L4494]              success_s381 := true;
[L1015]  RET         call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L1016]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((((((((((success_s381 == true && balances_TokenERC20[this][msgsender_MSG] == old(balances_TokenERC20[this][msgsender_MSG]) - tokens_s381) && balances_TokenERC20[this][to_s381] == old(balances_TokenERC20[this][to_s381]) + tokens_s381) && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this])) && balances_TokenERC20[this][p1] == old(balances_TokenERC20[this][p1])) && aSBlock_BATG[this] == old(aSBlock_BATG[this])) && aEBlock_BATG[this] == old(aEBlock_BATG[this])) && aCap_BATG[this] == old(aCap_BATG[this])) && aTot_BATG[this] == old(aTot_BATG[this])) && aAmt_BATG[this] == old(aAmt_BATG[this])) && sSBlock_BATG[this] == old(sSBlock_BATG[this])) && sEBlock_BATG[this] == old(sEBlock_BATG[this])) && sCap_BATG[this] == old(sCap_BATG[this])) && sTot_BATG[this] == old(sTot_BATG[this])) && sChunk_BATG[this] == old(sChunk_BATG[this])) && sPrice_BATG[this] == old(sPrice_BATG[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L7483]  RET         call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L7683]  RET         call CorralChoice_BATG(this);

Loop:
[L7683]  CALL        call CorralChoice_BATG(this);
[L7382]              havoc msgsender_MSG;
[L7383]              havoc msgvalue_MSG;
[L7384]              havoc choice;
[L7385]              havoc __ret_0_totalSupply;
[L7386]              havoc tokenOwner_s338;
[L7387]              havoc balance_s338;
[L7388]              havoc tokenOwner_s484;
[L7389]              havoc spender_s484;
[L7390]              havoc remaining_s484;
[L7391]              havoc to_s381;
[L7392]              havoc tokens_s381;
[L7393]              havoc success_s381;
[L7394]              havoc spender_s409;
[L7395]              havoc tokens_s409;
[L7396]              havoc success_s409;
[L7397]              havoc from_s468;
[L7398]              havoc to_s468;
[L7399]              havoc tokens_s468;
[L7400]              havoc success_s468;
[L7401]              havoc __ret_0_owner;
[L7402]              havoc __ret_0_newOwner;
[L7403]              havoc _newOwner_s217;
[L7404]              havoc __ret_0_symbol;
[L7405]              havoc __ret_0_name;
[L7406]              havoc __ret_0_decimals;
[L7407]              havoc spender_s527;
[L7408]              havoc tokens_s527;
[L7409]              havoc data_s527;
[L7410]              havoc success_s527;
[L7411]              havoc __ret_0_aSBlock;
[L7412]              havoc __ret_0_aEBlock;
[L7413]              havoc __ret_0_aCap;
[L7414]              havoc __ret_0_aTot;
[L7415]              havoc __ret_0_aAmt;
[L7416]              havoc __ret_0_sSBlock;
[L7417]              havoc __ret_0_sEBlock;
[L7418]              havoc __ret_0_sCap;
[L7419]              havoc __ret_0_sTot;
[L7420]              havoc __ret_0_sChunk;
[L7421]              havoc __ret_0_sPrice;
[L7422]              havoc _refer_s687;
[L7423]              havoc success_s687;
[L7424]              havoc _refer_s847;
[L7425]              havoc success_s847;
[L7426]              havoc StartBlock_s868;
[L7427]              havoc EndBlock_s868;
[L7428]              havoc DropCap_s868;
[L7429]              havoc DropCount_s868;
[L7430]              havoc DropAmount_s868;
[L7431]              havoc StartBlock_s892;
[L7432]              havoc EndBlock_s892;
[L7433]              havoc SaleCap_s892;
[L7434]              havoc SaleCount_s892;
[L7435]              havoc ChunkSize_s892;
[L7436]              havoc SalePrice_s892;
[L7437]              havoc _aSBlock_s926;
[L7438]              havoc _aEBlock_s926;
[L7439]              havoc _aAmt_s926;
[L7440]              havoc _aCap_s926;
[L7441]              havoc _sSBlock_s966;
[L7442]              havoc _sEBlock_s966;
[L7443]              havoc _sChunk_s966;
[L7444]              havoc _sPrice_s966;
[L7445]              havoc _sCap_s966;
[L7446]              havoc tmpNow;
[L7447]              havoc gas;
[L7448]              assume gas > 4000000 && gas <= 8000000;
[L7449]              tmpNow := now;
[L7450]              havoc now;
[L7451]              assume now > tmpNow;
[L7452]              assume msgsender_MSG != null;
[L7453]              assume DType[msgsender_MSG] != SafeMath;
[L7454]              assume DType[msgsender_MSG] != ERC20Interface;
[L7455]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L7456]              assume DType[msgsender_MSG] != Owned;
[L7457]              assume DType[msgsender_MSG] != TokenERC20;
[L7458]              assume DType[msgsender_MSG] != BATG;
[L7459]              Alloc[msgsender_MSG] := true;
[L7460]  COND FALSE  !(choice == 32)
[L7466]  COND FALSE  !(choice == 31)
[L7472]  COND FALSE  !(choice == 30)
[L7478]  COND TRUE   choice == 29
[L7479]              gas := gas - 21000;
[L7480]  COND TRUE   gas >= 0
[L7481]              assume tokens_s381 >= 0 && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7482]              assume msgvalue_MSG == 0;
[L7483]  CALL        call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s381) && msgsender_MSG != to_s381) && tokens_s381 <= balances_TokenERC20[this][msgsender_MSG]) && balances_TokenERC20[this][to_s381] + tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s381 >= 0) && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s381] >= 0) && balances_TokenERC20[this][to_s381] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][msgsender_MSG] >= 0) && balances_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TokenERC200 := true;
[L3]                 call_transfer_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L979]               havoc __exception;
[L980]               revert := false;
[L981]   COND FALSE  !(__exception)
[L1015]  CALL        call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L4479]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L4118]  COND FALSE  !(!(b_s45 <= a_s45))
[L4122]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4479]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L4480]  COND FALSE  !(revert)
[L4483]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][msgsender_MSG];
[L4484]              balances_TokenERC20[this][msgsender_MSG] := __var_5;
[L4485]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][msgsender_MSG];
[L4486]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][to_s381], tokens_s381);
[L4100]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4101]  COND FALSE  !(!(c_s23 >= a_s23))
[L4486]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][to_s381], tokens_s381);
[L4487]  COND FALSE  !(revert)
[L4490]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][to_s381];
[L4491]              balances_TokenERC20[this][to_s381] := __var_6;
[L4492]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][to_s381];
[L4493]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L4494]              success_s381 := true;
[L1015]  RET         call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L1016]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((((((((((success_s381 == true && balances_TokenERC20[this][msgsender_MSG] == old(balances_TokenERC20[this][msgsender_MSG]) - tokens_s381) && balances_TokenERC20[this][to_s381] == old(balances_TokenERC20[this][to_s381]) + tokens_s381) && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this])) && balances_TokenERC20[this][p1] == old(balances_TokenERC20[this][p1])) && aSBlock_BATG[this] == old(aSBlock_BATG[this])) && aEBlock_BATG[this] == old(aEBlock_BATG[this])) && aCap_BATG[this] == old(aCap_BATG[this])) && aTot_BATG[this] == old(aTot_BATG[this])) && aAmt_BATG[this] == old(aAmt_BATG[this])) && sSBlock_BATG[this] == old(sSBlock_BATG[this])) && sEBlock_BATG[this] == old(sEBlock_BATG[this])) && sCap_BATG[this] == old(sCap_BATG[this])) && sTot_BATG[this] == old(sTot_BATG[this])) && sChunk_BATG[this] == old(sChunk_BATG[this])) && sPrice_BATG[this] == old(sPrice_BATG[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L7483]  RET         call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L7683]  RET         call CorralChoice_BATG(this);

[2020-11-24 23:50:44,649 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:50:44,650 INFO  L82        PathProgramCache]: Analyzing trace with hash -330936305, now seen corresponding path program 1 times
[2020-11-24 23:50:44,650 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:50:44,741 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
Received shutdown request...
[2020-11-25 00:05:37,765 FATAL L265        ToolchainWalker]: An unrecoverable error occured during an interaction with an SMT solver:
de.uni_freiburg.informatik.ultimate.logic.SMTLIBException: Timeout exceeded
	at de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolator$IntegerInterpolator.interpolate(Interpolator.java:1432)
	at de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolator$MixedLAInterpolator.convert(Interpolator.java:1288)
	at de.uni_freiburg.informatik.ultimate.logic.TermTransformer.cacheConvert(TermTransformer.java:131)
	at de.uni_freiburg.informatik.ultimate.logic.TermTransformer.access$0(TermTransformer.java:127)
	at de.uni_freiburg.informatik.ultimate.logic.TermTransformer$Convert.walk(TermTransformer.java:79)
	at de.uni_freiburg.informatik.ultimate.logic.NonRecursive.run(NonRecursive.java:122)
	at de.uni_freiburg.informatik.ultimate.logic.NonRecursive.run(NonRecursive.java:113)
	at de.uni_freiburg.informatik.ultimate.logic.TermTransformer.transform(TermTransformer.java:253)
	at de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolator.mixedPivotLA(Interpolator.java:1478)
	at de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolator.combine(Interpolator.java:359)
	at de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolator.access$2(Interpolator.java:328)
	at de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolator$CombineInterpolants.walk(Interpolator.java:153)
	at de.uni_freiburg.informatik.ultimate.logic.NonRecursive.run(NonRecursive.java:122)
	at de.uni_freiburg.informatik.ultimate.logic.NonRecursive.run(NonRecursive.java:113)
	at de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolator.interpolate(Interpolator.java:220)
	at de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolator.getInterpolants(Interpolator.java:201)
	at de.uni_freiburg.informatik.ultimate.smtinterpol.smtlib2.SMTInterpol.getInterpolants(SMTInterpol.java:919)
	at de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.managedscript.ManagedScript.getInterpolants(ManagedScript.java:200)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singletracecheck.NestedInterpolantsBuilder.computeCraigInterpolants(NestedInterpolantsBuilder.java:303)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singletracecheck.NestedInterpolantsBuilder.<init>(NestedInterpolantsBuilder.java:167)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singletracecheck.NestedInterpolantsBuilder.<init>(NestedInterpolantsBuilder.java:182)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singletracecheck.InterpolatingTraceCheckCraig.computeInterpolantsTree(InterpolatingTraceCheckCraig.java:271)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singletracecheck.InterpolatingTraceCheckCraig.computeInterpolants(InterpolatingTraceCheckCraig.java:207)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.singletracecheck.InterpolatingTraceCheckCraig.<init>(InterpolatingTraceCheckCraig.java:109)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.tracehandling.TraceCheckConstructor.constructCraig(TraceCheckConstructor.java:211)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.tracehandling.TraceCheckConstructor.constructTraceCheck(TraceCheckConstructor.java:183)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.tracehandling.TraceCheckConstructor.get(TraceCheckConstructor.java:165)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.tracehandling.FixedRefinementStrategy.getTraceCheck(FixedRefinementStrategy.java:134)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.tracehandling.BaseRefinementStrategy.checkFeasibility(BaseRefinementStrategy.java:223)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.tracehandling.BaseRefinementStrategy.executeStrategy(BaseRefinementStrategy.java:197)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction.tracehandling.TraceAbstractionRefinementEngine.<init>(TraceAbstractionRefinementEngine.java:70)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.LassoCheck$LassoCheckResult.checkFeasibilityAndComputeInterpolants(LassoCheck.java:1126)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.LassoCheck$LassoCheckResult.checkStemFeasibility(LassoCheck.java:1080)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.LassoCheck$LassoCheckResult.<init>(LassoCheck.java:994)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.LassoCheck.<init>(LassoCheck.java:276)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiCegarLoop.iterate(BuchiCegarLoop.java:479)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver.doTerminationAnalysis(BuchiAutomizerObserver.java:153)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver.finish(BuchiAutomizerObserver.java:413)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.PluginConnector.runObserver(PluginConnector.java:168)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.PluginConnector.runTool(PluginConnector.java:151)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.PluginConnector.run(PluginConnector.java:128)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainWalker.executePluginConnector(ToolchainWalker.java:232)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainWalker.processPlugin(ToolchainWalker.java:226)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainWalker.walkUnprotected(ToolchainWalker.java:142)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainWalker.walk(ToolchainWalker.java:104)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainManager$Toolchain.processToolchain(ToolchainManager.java:317)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.toolchain.DefaultToolchainJob.run(DefaultToolchainJob.java:145)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
[2020-11-25 00:05:37,766 INFO  L168              Benchmark]: Toolchain (without parser) took 898575.61 ms. Allocated memory was 1.0 GB in the beginning and 6.6 GB in the end (delta: 5.5 GB). Free memory was 929.8 MB in the beginning and 4.8 GB in the end (delta: -3.9 GB). Peak memory consumption was 6.3 GB. Max. memory is 15.3 GB.
[2020-11-25 00:05:37,767 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 00:05:37,767 INFO  L168              Benchmark]: Boogie Preprocessor took 136.34 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 00:05:37,767 INFO  L168              Benchmark]: UtopiaSpecLang took 81.89 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 903.0 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 00:05:37,767 INFO  L168              Benchmark]: Boogie Printer took 22.20 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 897.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 00:05:37,768 INFO  L168              Benchmark]: RCFGBuilder took 1103.32 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 66.6 MB). Free memory was 897.6 MB in the beginning and 1.0 GB in the end (delta: -109.7 MB). Peak memory consumption was 187.5 MB. Max. memory is 15.3 GB.
[2020-11-25 00:05:37,768 INFO  L168              Benchmark]: UtopiaLTL2Aut took 44.10 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 997.6 MB in the end (delta: 9.7 MB). Peak memory consumption was 9.7 MB. Max. memory is 15.3 GB.
[2020-11-25 00:05:37,768 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1794.58 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 157.8 MB). Free memory was 997.6 MB in the beginning and 926.9 MB in the end (delta: 70.8 MB). Peak memory consumption was 511.0 MB. Max. memory is 15.3 GB.
[2020-11-25 00:05:37,769 INFO  L168              Benchmark]: BlockEncodingV2 took 178.08 ms. Allocated memory is still 1.3 GB. Free memory was 926.9 MB in the beginning and 824.1 MB in the end (delta: 102.8 MB). Peak memory consumption was 102.8 MB. Max. memory is 15.3 GB.
[2020-11-25 00:05:37,769 INFO  L168              Benchmark]: BuchiAutomizer took 895211.42 ms. Allocated memory was 1.3 GB in the beginning and 6.6 GB in the end (delta: 5.3 GB). Free memory was 824.1 MB in the beginning and 4.8 GB in the end (delta: -4.0 GB). Peak memory consumption was 6.0 GB. Max. memory is 15.3 GB.
[2020-11-25 00:05:37,772 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    8360 locations, 14614 edges
  - StatisticsResult: Encoded RCFG
    8304 locations, 14469 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 136.34 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 81.89 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 903.0 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 22.20 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 897.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1103.32 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 66.6 MB). Free memory was 897.6 MB in the beginning and 1.0 GB in the end (delta: -109.7 MB). Peak memory consumption was 187.5 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 44.10 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 997.6 MB in the end (delta: 9.7 MB). Peak memory consumption was 9.7 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1794.58 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 157.8 MB). Free memory was 997.6 MB in the beginning and 926.9 MB in the end (delta: 70.8 MB). Peak memory consumption was 511.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 178.08 ms. Allocated memory is still 1.3 GB. Free memory was 926.9 MB in the beginning and 824.1 MB in the end (delta: 102.8 MB). Peak memory consumption was 102.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 895211.42 ms. Allocated memory was 1.3 GB in the beginning and 6.6 GB in the end (delta: 5.3 GB). Free memory was 824.1 MB in the beginning and 4.8 GB in the end (delta: -4.0 GB). Peak memory consumption was 6.0 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    3567 locations, 4643 edges
  - StatisticsResult: BuchiProgram size
    8360 locations, 14614 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer:
  - ExceptionOrErrorResult: SMTLIBException: Timeout exceeded
    de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer: SMTLIBException: Timeout exceeded: de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolator$IntegerInterpolator.interpolate(Interpolator.java:1432)
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Completed graceful shutdown
