This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 09:07:13,839 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 09:07:13,840 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 09:07:13,851 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 09:07:13,851 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 09:07:13,852 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 09:07:13,853 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 09:07:13,854 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 09:07:13,856 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 09:07:13,856 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 09:07:13,857 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 09:07:13,857 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 09:07:13,858 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 09:07:13,859 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 09:07:13,859 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 09:07:13,860 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 09:07:13,861 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 09:07:13,862 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 09:07:13,863 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 09:07:13,864 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 09:07:13,865 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 09:07:13,865 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 09:07:13,867 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 09:07:13,867 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 09:07:13,867 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 09:07:13,868 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 09:07:13,868 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 09:07:13,868 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 09:07:13,869 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 09:07:13,869 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 09:07:13,869 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 09:07:13,870 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 09:07:13,870 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 09:07:13,871 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 09:07:13,871 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 09:07:13,871 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 09:07:13,872 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 09:07:13,872 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 09:07:13,872 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 09:07:13,873 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 09:07:13,873 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 09:07:13,873 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 09:07:13,881 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 09:07:13,881 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 09:07:13,882 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 09:07:13,882 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 09:07:13,882 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 09:07:13,882 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 09:07:13,882 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 09:07:13,882 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 09:07:13,882 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 09:07:13,883 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 09:07:13,883 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 09:07:13,883 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 09:07:13,883 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 09:07:13,883 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 09:07:13,883 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 09:07:13,883 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 09:07:13,883 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 09:07:13,883 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 09:07:13,884 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 09:07:13,884 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 09:07:13,884 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 09:07:13,884 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 09:07:13,884 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 09:07:13,884 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 09:07:13,884 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 09:07:13,884 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 09:07:13,911 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 09:07:13,923 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 09:07:13,925 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 09:07:13,926 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 09:07:13,926 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 09:07:13,927 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl
[2020-11-25 09:07:13,927 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl'
[2020-11-25 09:07:14,009 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 09:07:14,010 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 09:07:14,011 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 09:07:14,011 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 09:07:14,011 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 09:07:14,027 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:14" (1/1) ...
[2020-11-25 09:07:14,029 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:14" (1/1) ...
[2020-11-25 09:07:14,058 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:14" (1/1) ...
[2020-11-25 09:07:14,059 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:14" (1/1) ...
[2020-11-25 09:07:14,077 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:14" (1/1) ...
[2020-11-25 09:07:14,087 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:14" (1/1) ...
[2020-11-25 09:07:14,094 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:14" (1/1) ...
[2020-11-25 09:07:14,104 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 09:07:14,105 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 09:07:14,105 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 09:07:14,107 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 09:07:14,111 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:14" (1/1) ...
[2020-11-25 09:07:14,132 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(XMDDexChain.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(XMDDexChain.approve(spender, value), return == true && allowed_XMDDexChain[this][msg.sender][spender] == value &&  _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this]) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this]) && allowed_XMDDexChain[this][p1][p2] == old(allowed_XMDDexChain[this][p1][p2]) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this]) && name_XMDDexChain[this] == old(name_XMDDexChain[this]) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 09:07:14,137 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(XMDDexChain.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(XMDDexChain.approve(spender, value), return == true && allowed_XMDDexChain[this][msg.sender][spender] == value &&  _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this]) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this]) && allowed_XMDDexChain[this][p1][p2] == old(allowed_XMDDexChain[this][p1][p2]) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this]) && name_XMDDexChain[this] == old(name_XMDDexChain[this]) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 09:07:14,145 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(XMDDexChain.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(XMDDexChain.approve(spender, value), return == true && allowed_XMDDexChain[this][msg.sender][spender] == value &&  _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this]) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this]) && allowed_XMDDexChain[this][p1][p2] == old(allowed_XMDDexChain[this][p1][p2]) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this]) && name_XMDDexChain[this] == old(name_XMDDexChain[this]) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 09:07:14,151 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=spender_s399 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[spender_s399,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]]
[2020-11-25 09:07:14,154 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( success_s399==true && allowed_XMDDexChain[this][msg.sender][spender_s399]==tokens_s399 ) && _totalSupply_XMDDexChain[this]==( old(_totalSupply_XMDDexChain[this]) ) ) && balances_XMDDexChain[this]==( old(balances_XMDDexChain[this]) ) ) && allowed_XMDDexChain[this][p1][p2]==( old(allowed_XMDDexChain[this][p1][p2]) ) ) && symbol_XMDDexChain[this]==( old(symbol_XMDDexChain[this]) ) ) && name_XMDDexChain[this]==( old(name_XMDDexChain[this]) ) ) && decimals_XMDDexChain[this]==( old(decimals_XMDDexChain[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s399,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_XMDDexChain>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]],[IdentifierExpression[spender_s399,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]],IdentifierExpression[tokens_s399,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_XMDDexChain,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_XMDDexChain>]]]]]]
[2020-11-25 09:07:14,159 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(XMDDexChain.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(XMDDexChain.approve(spender, value), return == true && allowed_XMDDexChain[this][msg.sender][spender] == value &&  _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this]) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this]) && allowed_XMDDexChain[this][p1][p2] == old(allowed_XMDDexChain[this][p1][p2]) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this]) && name_XMDDexChain[this] == old(name_XMDDexChain[this]) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 09:07:14,159 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_XMDDexChain0) ==> ( <>AP(success_approve_XMDDexChain0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 09:07:14,168 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:07:14 PropertyContainer
[2020-11-25 09:07:14,168 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 09:07:14,169 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 09:07:14,169 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 09:07:14,169 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 09:07:14,170 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:14" (1/2) ...
[2020-11-25 09:07:14,170 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 09:07:14,170 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 09:07:14,185 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:07:14" (2/2) ...
[2020-11-25 09:07:14,185 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 09:07:14,185 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 09:07:14,185 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 09:07:14,185 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 09:07:14,186 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:14" (1/2) ...
[2020-11-25 09:07:14,247 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 09:07:14,247 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 09:07:14,247 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 09:07:14,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 09:07:14,247 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 09:07:14,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 09:07:14,247 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 09:07:14,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 09:07:14,248 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 09:07:14,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 09:07:14,248 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 09:07:14,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 09:07:14,248 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 09:07:14,248 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 09:07:14,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 09:07:14,248 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 09:07:14,248 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 09:07:14,248 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 09:07:14,249 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 09:07:14,249 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 09:07:14,249 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 09:07:14,249 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 09:07:14,249 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 09:07:14,249 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 09:07:14,249 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 09:07:14,249 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 09:07:14,249 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 09:07:14,249 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 09:07:14,249 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 09:07:14,249 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 09:07:14,250 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 09:07:14,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 09:07:14,250 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 09:07:14,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 09:07:14,250 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 09:07:14,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 09:07:14,250 INFO  L130     BoogieDeclarations]: Found specification of procedure XMDDexChain_XMDDexChain_NoBaseCtor__success
[2020-11-25 09:07:14,250 INFO  L130     BoogieDeclarations]: Found specification of procedure XMDDexChain_XMDDexChain
[2020-11-25 09:07:14,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure XMDDexChain_XMDDexChain
[2020-11-25 09:07:14,250 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_XMDDexChain
[2020-11-25 09:07:14,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_XMDDexChain
[2020-11-25 09:07:14,250 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_XMDDexChain
[2020-11-25 09:07:14,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_XMDDexChain
[2020-11-25 09:07:14,251 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_XMDDexChain
[2020-11-25 09:07:14,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_XMDDexChain
[2020-11-25 09:07:14,251 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_XMDDexChain
[2020-11-25 09:07:14,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_XMDDexChain
[2020-11-25 09:07:14,251 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_XMDDexChain
[2020-11-25 09:07:14,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_XMDDexChain
[2020-11-25 09:07:14,251 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_XMDDexChain
[2020-11-25 09:07:14,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_XMDDexChain
[2020-11-25 09:07:14,251 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_XMDDexChain
[2020-11-25 09:07:14,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_XMDDexChain
[2020-11-25 09:07:14,251 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_XMDDexChain__success
[2020-11-25 09:07:14,251 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_XMDDexChain
[2020-11-25 09:07:14,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_XMDDexChain
[2020-11-25 09:07:14,252 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_XMDDexChain
[2020-11-25 09:07:14,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_XMDDexChain
[2020-11-25 09:07:14,252 INFO  L130     BoogieDeclarations]: Found specification of procedure name_XMDDexChain
[2020-11-25 09:07:14,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_XMDDexChain
[2020-11-25 09:07:14,252 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_XMDDexChain
[2020-11-25 09:07:14,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_XMDDexChain
[2020-11-25 09:07:14,252 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_XMDDexChain
[2020-11-25 09:07:14,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_XMDDexChain
[2020-11-25 09:07:14,252 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 09:07:14,252 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 09:07:14,252 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 09:07:14,253 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 09:07:14,253 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 09:07:14,253 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 09:07:14,253 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 09:07:14,253 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 09:07:14,253 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 09:07:14,253 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 09:07:14,253 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 09:07:14,253 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 09:07:14,253 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_XMDDexChain
[2020-11-25 09:07:14,254 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 09:07:14,254 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 09:07:14,254 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 09:07:14,254 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 09:07:14,254 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 09:07:14,254 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 09:07:14,254 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 09:07:14,254 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 09:07:14,255 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 09:07:14,255 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 09:07:14,255 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 09:07:14,255 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 09:07:14,255 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 09:07:14,255 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 09:07:14,255 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 09:07:14,255 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 09:07:14,255 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 09:07:14,255 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 09:07:14,256 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 09:07:14,256 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 09:07:14,256 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 09:07:14,256 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 09:07:14,256 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 09:07:14,256 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 09:07:14,256 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 09:07:14,256 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 09:07:14,256 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 09:07:14,256 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 09:07:14,257 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 09:07:14,257 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 09:07:14,257 INFO  L130     BoogieDeclarations]: Found specification of procedure XMDDexChain_XMDDexChain_NoBaseCtor__fail
[2020-11-25 09:07:14,257 INFO  L130     BoogieDeclarations]: Found specification of procedure XMDDexChain_XMDDexChain__success
[2020-11-25 09:07:14,257 INFO  L130     BoogieDeclarations]: Found specification of procedure XMDDexChain_XMDDexChain__fail
[2020-11-25 09:07:14,257 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_XMDDexChain__success
[2020-11-25 09:07:14,257 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_XMDDexChain__fail
[2020-11-25 09:07:14,257 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_XMDDexChain__success
[2020-11-25 09:07:14,257 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_XMDDexChain__fail
[2020-11-25 09:07:14,258 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_XMDDexChain__success
[2020-11-25 09:07:14,258 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_XMDDexChain__fail
[2020-11-25 09:07:14,258 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_XMDDexChain__success
[2020-11-25 09:07:14,258 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_XMDDexChain__fail
[2020-11-25 09:07:14,258 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_XMDDexChain__success
[2020-11-25 09:07:14,258 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_XMDDexChain__fail
[2020-11-25 09:07:14,258 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_XMDDexChain__success
[2020-11-25 09:07:14,259 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_XMDDexChain__fail
[2020-11-25 09:07:14,259 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_XMDDexChain__success
[2020-11-25 09:07:14,259 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_XMDDexChain__fail
[2020-11-25 09:07:14,259 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_XMDDexChain__fail
[2020-11-25 09:07:14,259 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_XMDDexChain__success
[2020-11-25 09:07:14,259 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_XMDDexChain__fail
[2020-11-25 09:07:14,259 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_XMDDexChain__success
[2020-11-25 09:07:14,259 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_XMDDexChain__fail
[2020-11-25 09:07:14,259 INFO  L130     BoogieDeclarations]: Found specification of procedure name_XMDDexChain__success
[2020-11-25 09:07:14,259 INFO  L130     BoogieDeclarations]: Found specification of procedure name_XMDDexChain__fail
[2020-11-25 09:07:14,260 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_XMDDexChain__success
[2020-11-25 09:07:14,260 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_XMDDexChain__fail
[2020-11-25 09:07:14,260 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_XMDDexChain__success
[2020-11-25 09:07:14,260 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_XMDDexChain__fail
[2020-11-25 09:07:14,260 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 09:07:14,260 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 09:07:14,260 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 09:07:14,260 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 09:07:14,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 09:07:14,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 09:07:14,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 09:07:14,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 09:07:14,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 09:07:14,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 09:07:14,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 09:07:14,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 09:07:14,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 09:07:14,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 09:07:14,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 09:07:14,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 09:07:14,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 09:07:14,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 09:07:14,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 09:07:14,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 09:07:14,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 09:07:14,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 09:07:14,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 09:07:14,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 09:07:14,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 09:07:14,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 09:07:14,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 09:07:14,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 09:07:14,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 09:07:14,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 09:07:14,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 09:07:14,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 09:07:14,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 09:07:14,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 09:07:14,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 09:07:14,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 09:07:14,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 09:07:14,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 09:07:14,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure XMDDexChain_XMDDexChain_NoBaseCtor__fail
[2020-11-25 09:07:14,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure XMDDexChain_XMDDexChain_NoBaseCtor__success
[2020-11-25 09:07:14,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure XMDDexChain_XMDDexChain__fail
[2020-11-25 09:07:14,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure XMDDexChain_XMDDexChain__success
[2020-11-25 09:07:14,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_XMDDexChain__fail
[2020-11-25 09:07:14,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_XMDDexChain__success
[2020-11-25 09:07:14,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_XMDDexChain__fail
[2020-11-25 09:07:14,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_XMDDexChain__success
[2020-11-25 09:07:14,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_XMDDexChain__fail
[2020-11-25 09:07:14,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_XMDDexChain__success
[2020-11-25 09:07:14,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_XMDDexChain__fail
[2020-11-25 09:07:14,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_XMDDexChain__success
[2020-11-25 09:07:14,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_XMDDexChain__fail
[2020-11-25 09:07:14,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_XMDDexChain__success
[2020-11-25 09:07:14,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_XMDDexChain__fail
[2020-11-25 09:07:14,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_XMDDexChain__success
[2020-11-25 09:07:14,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_XMDDexChain__fail
[2020-11-25 09:07:14,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_XMDDexChain__success
[2020-11-25 09:07:14,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_XMDDexChain__fail
[2020-11-25 09:07:14,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_XMDDexChain__success
[2020-11-25 09:07:14,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_XMDDexChain__fail
[2020-11-25 09:07:14,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_XMDDexChain__success
[2020-11-25 09:07:14,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_XMDDexChain__fail
[2020-11-25 09:07:14,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_XMDDexChain__success
[2020-11-25 09:07:14,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_XMDDexChain__fail
[2020-11-25 09:07:14,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_XMDDexChain__success
[2020-11-25 09:07:14,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_XMDDexChain__fail
[2020-11-25 09:07:14,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_XMDDexChain__success
[2020-11-25 09:07:14,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_XMDDexChain__fail
[2020-11-25 09:07:14,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_XMDDexChain__success
[2020-11-25 09:07:14,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 09:07:14,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 09:07:14,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 09:07:14,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 09:07:14,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 09:07:14,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 09:07:14,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 09:07:14,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 09:07:14,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 09:07:14,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 09:07:14,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 09:07:14,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 09:07:14,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 09:07:14,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 09:07:14,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 09:07:14,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 09:07:14,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_XMDDexChain
[2020-11-25 09:07:14,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 09:07:14,268 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 09:07:14,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 09:07:14,741 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:07:14,900 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:07:14,901 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:07:14,901 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:07:14,943 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 09:07:14,943 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 09:07:14,944 INFO  L202        PluginConnector]: Adding new model XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:07:14 BoogieIcfgContainer
[2020-11-25 09:07:14,945 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:07:14" (2/2) ...
[2020-11-25 09:07:14,945 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 09:07:14,945 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@409c683f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:07:14, skipping insertion in model container
[2020-11-25 09:07:14,945 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 09:07:14,945 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 09:07:14,945 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 09:07:14,947 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 09:07:14,947 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:14" (1/3) ...
[2020-11-25 09:07:14,947 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@fab09f and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:07:14, skipping insertion in model container
[2020-11-25 09:07:14,947 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:07:14" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 09:07:14,984 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:07:14 NWAContainer
[2020-11-25 09:07:14,984 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 09:07:14,984 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 09:07:14,984 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 09:07:14,985 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 09:07:14,986 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:07:14" (3/4) ...
[2020-11-25 09:07:14,987 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@2d3f7e1f and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:07:14, skipping insertion in model container
[2020-11-25 09:07:14,987 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:07:14" (4/4) ...
[2020-11-25 09:07:14,990 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 09:07:14,994 INFO  L110   BuchiProductObserver]: Initial RCFG 1565 locations, 1977 edges
[2020-11-25 09:07:14,994 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 09:07:15,005 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 09:07:16,283 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 09:07:16,287 INFO  L110   BuchiProductObserver]: BuchiProgram size 3722 locations, 6405 edges
[2020-11-25 09:07:16,288 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:07:16 BoogieIcfgContainer
[2020-11-25 09:07:16,288 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 09:07:16,288 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 09:07:16,288 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 09:07:16,289 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 09:07:16,290 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:07:16" (1/1) ...
[2020-11-25 09:07:16,368 INFO  L313           BlockEncoder]: Initial Icfg 3722 locations, 6405 edges
[2020-11-25 09:07:16,368 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 09:07:16,369 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 09:07:16,369 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 09:07:16,370 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 09:07:16,380 INFO  L70    emoveInfeasibleEdges]: Removed 90 edges and 13 locations because of local infeasibility
[2020-11-25 09:07:16,388 INFO  L70        RemoveSinkStates]: Removed 38 edges and 25 locations by removing sink states
[2020-11-25 09:07:16,397 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 09:07:16,402 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 09:07:16,406 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 09:07:16,407 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 09:07:16,413 INFO  L313           BlockEncoder]: Encoded RCFG 3662 locations, 6245 edges
[2020-11-25 09:07:16,413 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 09:07:16 BasicIcfg
[2020-11-25 09:07:16,413 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 09:07:16,414 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 09:07:16,414 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 09:07:16,416 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 09:07:16,417 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:07:16,417 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:07:14" (1/6) ...
[2020-11-25 09:07:16,418 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@150025fb and model type XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:07:16, skipping insertion in model container
[2020-11-25 09:07:16,419 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:07:16,419 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:07:14" (2/6) ...
[2020-11-25 09:07:16,419 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@150025fb and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:07:16, skipping insertion in model container
[2020-11-25 09:07:16,419 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:07:16,419 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:07:14" (3/6) ...
[2020-11-25 09:07:16,419 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@150025fb and model type XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 09:07:16, skipping insertion in model container
[2020-11-25 09:07:16,419 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:07:16,419 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:07:14" (4/6) ...
[2020-11-25 09:07:16,420 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@150025fb and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:07:16, skipping insertion in model container
[2020-11-25 09:07:16,420 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:07:16,420 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:07:16" (5/6) ...
[2020-11-25 09:07:16,420 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@150025fb and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 09:07:16, skipping insertion in model container
[2020-11-25 09:07:16,420 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:07:16,420 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 09:07:16" (6/6) ...
[2020-11-25 09:07:16,421 INFO  L404   chiAutomizerObserver]: Analyzing ICFG XMDDexChain_0xa8b0279acc96efebd09955ad8240b2d30b53055e_approve.bpl_BEv2
[2020-11-25 09:07:16,459 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 09:07:16,460 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 09:07:16,460 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 09:07:16,460 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 09:07:16,460 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 09:07:16,460 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 09:07:16,460 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 09:07:16,460 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 09:07:16,460 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 09:07:16,501 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3662 states.
[2020-11-25 09:07:16,556 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:07:16,556 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:07:16,556 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:07:16,566 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:07:16,566 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:07:16,566 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 09:07:16,566 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3662 states.
[2020-11-25 09:07:16,590 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:07:16,590 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:07:16,590 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:07:16,592 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:07:16,592 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_XMDDexChain0 := false;
[L3]                 call_approve_XMDDexChain0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == XMDDexChain;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call XMDDexChain_XMDDexChain(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call XMDDexChain_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND TRUE   revert
[L794]   RET         call XMDDexChain_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call XMDDexChain_XMDDexChain(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;

Loop:
[L4261]  CALL        call CorralChoice_XMDDexChain(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != XMDDexChain;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND TRUE   choice == 20
[L4111]              gas := gas - 21000;
[L4112]  COND FALSE  !(gas >= 0)
[L4261]  RET         call CorralChoice_XMDDexChain(this);

[2020-11-25 09:07:16,610 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:07:16,610 INFO  L82        PathProgramCache]: Analyzing trace with hash 121451554, now seen corresponding path program 1 times
[2020-11-25 09:07:16,615 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:07:16,640 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:07:16,683 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:07:16,685 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:07:16,685 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:07:16,689 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:07:16,874 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:07:16,875 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:07:16,878 INFO  L87              Difference]: Start difference. First operand 3662 states. Second operand 4 states.
[2020-11-25 09:07:17,255 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:07:17,255 INFO  L93              Difference]: Finished difference Result 2516 states and 2745 transitions.
[2020-11-25 09:07:17,255 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:07:17,257 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2516 states and 2745 transitions.
[2020-11-25 09:07:17,275 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:07:17,298 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2516 states to 2516 states and 2745 transitions.
[2020-11-25 09:07:17,299 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 09:07:17,302 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 852
[2020-11-25 09:07:17,302 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2516 states and 2745 transitions.
[2020-11-25 09:07:17,310 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:07:17,310 INFO  L728         BuchiCegarLoop]: Abstraction has 2516 states and 2745 transitions.
[2020-11-25 09:07:17,329 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2516 states and 2745 transitions.
[2020-11-25 09:07:17,375 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2516 to 2516.
[2020-11-25 09:07:17,375 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2516 states.
[2020-11-25 09:07:17,380 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2516 states to 2516 states and 2745 transitions.
[2020-11-25 09:07:17,381 INFO  L751         BuchiCegarLoop]: Abstraction has 2516 states and 2745 transitions.
[2020-11-25 09:07:17,381 INFO  L631         BuchiCegarLoop]: Abstraction has 2516 states and 2745 transitions.
[2020-11-25 09:07:17,382 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 09:07:17,382 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2516 states and 2745 transitions.
[2020-11-25 09:07:17,390 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:07:17,390 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:07:17,390 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:07:17,393 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:07:17,393 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_XMDDexChain0 := false;
[L3]                 call_approve_XMDDexChain0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == XMDDexChain;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call XMDDexChain_XMDDexChain(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call XMDDexChain_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND TRUE   revert
[L794]   RET         call XMDDexChain_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call XMDDexChain_XMDDexChain(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_XMDDexChain(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != XMDDexChain;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s399;
[L3]                 call_approve_XMDDexChain0 := true;
[L3]                 call_approve_XMDDexChain0 := false;
[L3]                 revert := revert_hold;
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_XMDDexChain[this][msgsender_MSG][spender_s399];
[L2395]              allowed_XMDDexChain[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_XMDDexChain[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_XMDDexChain" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s399 == true && allowed_XMDDexChain[this][msgsender_MSG][spender_s399] == tokens_s399) && _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this])) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this])) && allowed_XMDDexChain[this][p1][p2] == old(allowed_XMDDexChain[this][p1][p2])) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this])) && name_XMDDexChain[this] == old(name_XMDDexChain[this])) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4172]  RET         call success_s399 := approve~address~uint256_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_XMDDexChain(this);

Loop:
[L4261]  CALL        call CorralChoice_XMDDexChain(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != XMDDexChain;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s399;
[L3]                 call_approve_XMDDexChain0 := true;
[L3]                 call_approve_XMDDexChain0 := false;
[L3]                 revert := revert_hold;
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_XMDDexChain[this][msgsender_MSG][spender_s399];
[L2395]              allowed_XMDDexChain[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_XMDDexChain[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_XMDDexChain" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s399 == true && allowed_XMDDexChain[this][msgsender_MSG][spender_s399] == tokens_s399) && _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this])) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this])) && allowed_XMDDexChain[this][p1][p2] == old(allowed_XMDDexChain[this][p1][p2])) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this])) && name_XMDDexChain[this] == old(name_XMDDexChain[this])) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4172]  RET         call success_s399 := approve~address~uint256_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_XMDDexChain(this);

[2020-11-25 09:07:17,398 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:07:17,398 INFO  L82        PathProgramCache]: Analyzing trace with hash 369977194, now seen corresponding path program 1 times
[2020-11-25 09:07:17,400 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:07:17,410 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:07:17,435 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:07:17,436 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:07:17,436 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:07:17,437 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:07:17,438 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:07:17,438 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:07:17,438 INFO  L87              Difference]: Start difference. First operand 2516 states and 2745 transitions. cyclomatic complexity: 231 Second operand 4 states.
[2020-11-25 09:07:17,937 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:07:17,937 INFO  L93              Difference]: Finished difference Result 3736 states and 4231 transitions.
[2020-11-25 09:07:17,937 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:07:17,938 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3736 states and 4231 transitions.
[2020-11-25 09:07:17,952 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 09:07:17,968 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3736 states to 3616 states and 4103 transitions.
[2020-11-25 09:07:17,968 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1158
[2020-11-25 09:07:17,969 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1168
[2020-11-25 09:07:17,969 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3616 states and 4103 transitions.
[2020-11-25 09:07:17,975 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:07:17,975 INFO  L728         BuchiCegarLoop]: Abstraction has 3616 states and 4103 transitions.
[2020-11-25 09:07:17,978 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3616 states and 4103 transitions.
[2020-11-25 09:07:18,007 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3616 to 2732.
[2020-11-25 09:07:18,007 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2732 states.
[2020-11-25 09:07:18,011 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2732 states to 2732 states and 2959 transitions.
[2020-11-25 09:07:18,011 INFO  L751         BuchiCegarLoop]: Abstraction has 2732 states and 2959 transitions.
[2020-11-25 09:07:18,011 INFO  L631         BuchiCegarLoop]: Abstraction has 2732 states and 2959 transitions.
[2020-11-25 09:07:18,011 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 09:07:18,012 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2732 states and 2959 transitions.
[2020-11-25 09:07:18,017 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 09:07:18,017 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:07:18,017 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:07:18,019 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:07:18,019 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_XMDDexChain0 := false;
[L3]                 call_approve_XMDDexChain0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == XMDDexChain;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call XMDDexChain_XMDDexChain(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call XMDDexChain_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call XMDDexChain_XMDDexChain_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_XMDDexChain[this] := -1282837888;
[L2236]              name_XMDDexChain[this] := -1282837888;
[L2237]              decimals_XMDDexChain[this] := 0;
[L2238]              _totalSupply_XMDDexChain[this] := 0;
[L2239]              balances_XMDDexChain[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_XMDDexChain[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_XMDDexChain[this] := 542303379;
[L2245]              name_XMDDexChain[this] := -1719409972;
[L2246]              decimals_XMDDexChain[this] := 8;
[L2247]              _totalSupply_XMDDexChain[this] := 2100000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_XMDDexChain[this][-329037191581184949150908255081869838117273532011];
[L2249]              balances_XMDDexChain[this][-329037191581184949150908255081869838117273532011] := _totalSupply_XMDDexChain[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_XMDDexChain[this][-329037191581184949150908255081869838117273532011];
[L2251]              assert { :EventEmitted "Transfer_XMDDexChain" } true;
[L2288]  RET         call XMDDexChain_XMDDexChain_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call XMDDexChain_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call XMDDexChain_XMDDexChain(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_XMDDexChain(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != XMDDexChain;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s399;
[L3]                 call_approve_XMDDexChain0 := true;
[L3]                 call_approve_XMDDexChain0 := false;
[L3]                 revert := revert_hold;
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_XMDDexChain[this][msgsender_MSG][spender_s399];
[L2395]              allowed_XMDDexChain[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_XMDDexChain[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_XMDDexChain" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s399 == true && allowed_XMDDexChain[this][msgsender_MSG][spender_s399] == tokens_s399) && _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this])) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this])) && allowed_XMDDexChain[this][p1][p2] == old(allowed_XMDDexChain[this][p1][p2])) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this])) && name_XMDDexChain[this] == old(name_XMDDexChain[this])) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4172]  RET         call success_s399 := approve~address~uint256_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_XMDDexChain(this);

Loop:
[L4261]  CALL        call CorralChoice_XMDDexChain(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != XMDDexChain;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s399;
[L3]                 call_approve_XMDDexChain0 := true;
[L3]                 call_approve_XMDDexChain0 := false;
[L3]                 revert := revert_hold;
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_XMDDexChain[this][msgsender_MSG][spender_s399];
[L2395]              allowed_XMDDexChain[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_XMDDexChain[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_XMDDexChain" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s399 == true && allowed_XMDDexChain[this][msgsender_MSG][spender_s399] == tokens_s399) && _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this])) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this])) && allowed_XMDDexChain[this][p1][p2] == old(allowed_XMDDexChain[this][p1][p2])) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this])) && name_XMDDexChain[this] == old(name_XMDDexChain[this])) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4172]  RET         call success_s399 := approve~address~uint256_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_XMDDexChain(this);

[2020-11-25 09:07:18,022 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:07:18,022 INFO  L82        PathProgramCache]: Analyzing trace with hash 375395322, now seen corresponding path program 1 times
[2020-11-25 09:07:18,023 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:07:18,051 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:07:18,180 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:07:18,180 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:07:18,180 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 09:07:18,181 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:07:18,181 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 09:07:18,181 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-25 09:07:18,181 INFO  L87              Difference]: Start difference. First operand 2732 states and 2959 transitions. cyclomatic complexity: 229 Second operand 13 states.
[2020-11-25 09:07:19,523 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:07:19,523 INFO  L93              Difference]: Finished difference Result 2853 states and 3113 transitions.
[2020-11-25 09:07:19,524 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 09:07:19,524 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2853 states and 3113 transitions.
[2020-11-25 09:07:19,531 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 09:07:19,540 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2853 states to 2853 states and 3113 transitions.
[2020-11-25 09:07:19,540 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1024
[2020-11-25 09:07:19,541 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1024
[2020-11-25 09:07:19,541 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2853 states and 3113 transitions.
[2020-11-25 09:07:19,544 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:07:19,544 INFO  L728         BuchiCegarLoop]: Abstraction has 2853 states and 3113 transitions.
[2020-11-25 09:07:19,550 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2853 states and 3113 transitions.
[2020-11-25 09:07:19,589 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2853 to 2820.
[2020-11-25 09:07:19,589 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2820 states.
[2020-11-25 09:07:19,592 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2820 states to 2820 states and 3066 transitions.
[2020-11-25 09:07:19,592 INFO  L751         BuchiCegarLoop]: Abstraction has 2820 states and 3066 transitions.
[2020-11-25 09:07:19,592 INFO  L631         BuchiCegarLoop]: Abstraction has 2820 states and 3066 transitions.
[2020-11-25 09:07:19,592 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 09:07:19,592 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2820 states and 3066 transitions.
[2020-11-25 09:07:19,597 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 09:07:19,597 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:07:19,597 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:07:19,598 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:07:19,598 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_XMDDexChain0 := false;
[L3]                 call_approve_XMDDexChain0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == XMDDexChain;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call XMDDexChain_XMDDexChain(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call XMDDexChain_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call XMDDexChain_XMDDexChain_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_XMDDexChain[this] := -1282837888;
[L2236]              name_XMDDexChain[this] := -1282837888;
[L2237]              decimals_XMDDexChain[this] := 0;
[L2238]              _totalSupply_XMDDexChain[this] := 0;
[L2239]              balances_XMDDexChain[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_XMDDexChain[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_XMDDexChain[this] := 542303379;
[L2245]              name_XMDDexChain[this] := -1719409972;
[L2246]              decimals_XMDDexChain[this] := 8;
[L2247]              _totalSupply_XMDDexChain[this] := 2100000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_XMDDexChain[this][-329037191581184949150908255081869838117273532011];
[L2249]              balances_XMDDexChain[this][-329037191581184949150908255081869838117273532011] := _totalSupply_XMDDexChain[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_XMDDexChain[this][-329037191581184949150908255081869838117273532011];
[L2251]              assert { :EventEmitted "Transfer_XMDDexChain" } true;
[L2288]  RET         call XMDDexChain_XMDDexChain_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call XMDDexChain_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call XMDDexChain_XMDDexChain(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_XMDDexChain(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != XMDDexChain;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s399;
[L3]                 call_approve_XMDDexChain0 := true;
[L3]                 call_approve_XMDDexChain0 := false;
[L3]                 revert := revert_hold;
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND TRUE   __exception
[L992]               __tmp__Balance := Balance;
[L993]               __tmp__DType := DType;
[L994]               __tmp__Alloc := Alloc;
[L995]               __tmp__balance_ADDR := balance_ADDR;
[L996]               __tmp__M_Ref_int := M_Ref_int;
[L997]               __tmp__sum_balances0 := sum_balances0;
[L998]               __tmp__alloc_allowed_XMDDexChain_lvl0 := alloc_allowed_XMDDexChain_lvl0;
[L999]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L1000]              __tmp__sum_allowed1 := sum_allowed1;
[L1001]              __tmp__Length := Length;
[L1002]              __tmp__now := now;
[L1003]              __tmp__owner_Owned := owner_Owned;
[L1004]              __tmp__newOwner_Owned := newOwner_Owned;
[L1005]              __tmp__symbol_XMDDexChain := symbol_XMDDexChain;
[L1006]              __tmp__name_XMDDexChain := name_XMDDexChain;
[L1007]              __tmp__decimals_XMDDexChain := decimals_XMDDexChain;
[L1008]              __tmp___totalSupply_XMDDexChain := _totalSupply_XMDDexChain;
[L1009]              __tmp__balances_XMDDexChain := balances_XMDDexChain;
[L1010]              __tmp__allowed_XMDDexChain := allowed_XMDDexChain;
[L1011]  CALL        call success_s399 := approve~address~uint256_XMDDexChain__fail(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2385]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_XMDDexChain[this][msgsender_MSG][spender_s399];
[L2386]              __tmp__allowed_XMDDexChain[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2387]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_XMDDexChain[this][msgsender_MSG][spender_s399];
[L2388]              success_s399 := true;
[L1011]  RET         call success_s399 := approve~address~uint256_XMDDexChain__fail(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1012]              assume revert || gas < 0;
[L4172]  RET         call success_s399 := approve~address~uint256_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_XMDDexChain(this);

Loop:
[L4261]  CALL        call CorralChoice_XMDDexChain(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != XMDDexChain;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s399;
[L3]                 call_approve_XMDDexChain0 := true;
[L3]                 call_approve_XMDDexChain0 := false;
[L3]                 revert := revert_hold;
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND TRUE   __exception
[L992]               __tmp__Balance := Balance;
[L993]               __tmp__DType := DType;
[L994]               __tmp__Alloc := Alloc;
[L995]               __tmp__balance_ADDR := balance_ADDR;
[L996]               __tmp__M_Ref_int := M_Ref_int;
[L997]               __tmp__sum_balances0 := sum_balances0;
[L998]               __tmp__alloc_allowed_XMDDexChain_lvl0 := alloc_allowed_XMDDexChain_lvl0;
[L999]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L1000]              __tmp__sum_allowed1 := sum_allowed1;
[L1001]              __tmp__Length := Length;
[L1002]              __tmp__now := now;
[L1003]              __tmp__owner_Owned := owner_Owned;
[L1004]              __tmp__newOwner_Owned := newOwner_Owned;
[L1005]              __tmp__symbol_XMDDexChain := symbol_XMDDexChain;
[L1006]              __tmp__name_XMDDexChain := name_XMDDexChain;
[L1007]              __tmp__decimals_XMDDexChain := decimals_XMDDexChain;
[L1008]              __tmp___totalSupply_XMDDexChain := _totalSupply_XMDDexChain;
[L1009]              __tmp__balances_XMDDexChain := balances_XMDDexChain;
[L1010]              __tmp__allowed_XMDDexChain := allowed_XMDDexChain;
[L1011]  CALL        call success_s399 := approve~address~uint256_XMDDexChain__fail(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2385]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_XMDDexChain[this][msgsender_MSG][spender_s399];
[L2386]              __tmp__allowed_XMDDexChain[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2387]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_XMDDexChain[this][msgsender_MSG][spender_s399];
[L2388]              success_s399 := true;
[L1011]  RET         call success_s399 := approve~address~uint256_XMDDexChain__fail(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1012]              assume revert || gas < 0;
[L4172]  RET         call success_s399 := approve~address~uint256_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_XMDDexChain(this);

[2020-11-25 09:07:19,601 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:07:19,601 INFO  L82        PathProgramCache]: Analyzing trace with hash 1134935592, now seen corresponding path program 1 times
[2020-11-25 09:07:19,602 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:07:19,609 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:07:19,631 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:07:19,631 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:07:19,631 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 09:07:19,632 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:07:19,632 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 09:07:19,632 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 09:07:19,632 INFO  L87              Difference]: Start difference. First operand 2820 states and 3066 transitions. cyclomatic complexity: 250 Second operand 5 states.
[2020-11-25 09:07:19,960 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:07:19,961 INFO  L93              Difference]: Finished difference Result 3595 states and 3994 transitions.
[2020-11-25 09:07:19,961 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 09:07:19,961 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3595 states and 3994 transitions.
[2020-11-25 09:07:19,971 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2020-11-25 09:07:19,981 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3595 states to 2766 states and 3161 transitions.
[2020-11-25 09:07:19,982 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 759
[2020-11-25 09:07:19,982 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 759
[2020-11-25 09:07:19,982 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2766 states and 3161 transitions.
[2020-11-25 09:07:19,985 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:07:19,985 INFO  L728         BuchiCegarLoop]: Abstraction has 2766 states and 3161 transitions.
[2020-11-25 09:07:19,987 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2766 states and 3161 transitions.
[2020-11-25 09:07:20,003 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2766 to 1848.
[2020-11-25 09:07:20,003 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1848 states.
[2020-11-25 09:07:20,005 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1848 states to 1848 states and 1995 transitions.
[2020-11-25 09:07:20,005 INFO  L751         BuchiCegarLoop]: Abstraction has 1848 states and 1995 transitions.
[2020-11-25 09:07:20,005 INFO  L631         BuchiCegarLoop]: Abstraction has 1848 states and 1995 transitions.
[2020-11-25 09:07:20,005 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 09:07:20,005 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1848 states and 1995 transitions.
[2020-11-25 09:07:20,007 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:07:20,007 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:07:20,007 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:07:20,009 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:07:20,009 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_XMDDexChain0 := false;
[L3]                 call_approve_XMDDexChain0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == XMDDexChain;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call XMDDexChain_XMDDexChain(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call XMDDexChain_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call XMDDexChain_XMDDexChain_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_XMDDexChain[this] := -1282837888;
[L2236]              name_XMDDexChain[this] := -1282837888;
[L2237]              decimals_XMDDexChain[this] := 0;
[L2238]              _totalSupply_XMDDexChain[this] := 0;
[L2239]              balances_XMDDexChain[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_XMDDexChain[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_XMDDexChain[this] := 542303379;
[L2245]              name_XMDDexChain[this] := -1719409972;
[L2246]              decimals_XMDDexChain[this] := 8;
[L2247]              _totalSupply_XMDDexChain[this] := 2100000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_XMDDexChain[this][-329037191581184949150908255081869838117273532011];
[L2249]              balances_XMDDexChain[this][-329037191581184949150908255081869838117273532011] := _totalSupply_XMDDexChain[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_XMDDexChain[this][-329037191581184949150908255081869838117273532011];
[L2251]              assert { :EventEmitted "Transfer_XMDDexChain" } true;
[L2288]  RET         call XMDDexChain_XMDDexChain_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call XMDDexChain_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call XMDDexChain_XMDDexChain(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_XMDDexChain(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != XMDDexChain;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(p1 != msgsender_MSG || p2 != spender_s399);
[L3]                 revert := revert_hold;
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_XMDDexChain[this][msgsender_MSG][spender_s399];
[L2395]              allowed_XMDDexChain[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_XMDDexChain[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_XMDDexChain" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s399 == true && allowed_XMDDexChain[this][msgsender_MSG][spender_s399] == tokens_s399) && _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this])) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this])) && allowed_XMDDexChain[this][p1][p2] == old(allowed_XMDDexChain[this][p1][p2])) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this])) && name_XMDDexChain[this] == old(name_XMDDexChain[this])) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4172]  RET         call success_s399 := approve~address~uint256_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_XMDDexChain(this);
[L4261]  CALL        call CorralChoice_XMDDexChain(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != XMDDexChain;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s399;
[L3]                 call_approve_XMDDexChain0 := true;
[L3]                 call_approve_XMDDexChain0 := false;
[L3]                 revert := revert_hold;
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_XMDDexChain[this][msgsender_MSG][spender_s399];
[L2395]              allowed_XMDDexChain[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_XMDDexChain[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_XMDDexChain" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s399 == true && allowed_XMDDexChain[this][msgsender_MSG][spender_s399] == tokens_s399) && _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this])) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this])) && allowed_XMDDexChain[this][p1][p2] == old(allowed_XMDDexChain[this][p1][p2])) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this])) && name_XMDDexChain[this] == old(name_XMDDexChain[this])) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4172]  RET         call success_s399 := approve~address~uint256_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_XMDDexChain(this);

Loop:
[L4261]  CALL        call CorralChoice_XMDDexChain(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != XMDDexChain;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s399;
[L3]                 call_approve_XMDDexChain0 := true;
[L3]                 call_approve_XMDDexChain0 := false;
[L3]                 revert := revert_hold;
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_XMDDexChain[this][msgsender_MSG][spender_s399];
[L2395]              allowed_XMDDexChain[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_XMDDexChain[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_XMDDexChain" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_XMDDexChain__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s399 == true && allowed_XMDDexChain[this][msgsender_MSG][spender_s399] == tokens_s399) && _totalSupply_XMDDexChain[this] == old(_totalSupply_XMDDexChain[this])) && balances_XMDDexChain[this] == old(balances_XMDDexChain[this])) && allowed_XMDDexChain[this][p1][p2] == old(allowed_XMDDexChain[this][p1][p2])) && symbol_XMDDexChain[this] == old(symbol_XMDDexChain[this])) && name_XMDDexChain[this] == old(name_XMDDexChain[this])) && decimals_XMDDexChain[this] == old(decimals_XMDDexChain[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4172]  RET         call success_s399 := approve~address~uint256_XMDDexChain(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_XMDDexChain(this);

[2020-11-25 09:07:20,013 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:07:20,013 INFO  L82        PathProgramCache]: Analyzing trace with hash 180206129, now seen corresponding path program 1 times
[2020-11-25 09:07:20,013 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:07:20,035 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:07:20,105 INFO  L134       CoverageAnalysis]: Checked inductivity of 78 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 74 trivial. 0 not checked.
[2020-11-25 09:07:20,105 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:07:20,105 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 09:07:20,105 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:07:20,105 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 09:07:20,105 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-25 09:07:20,106 INFO  L87              Difference]: Start difference. First operand 1848 states and 1995 transitions. cyclomatic complexity: 150 Second operand 7 states.
[2020-11-25 09:07:20,374 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:07:20,374 INFO  L93              Difference]: Finished difference Result 996 states and 1069 transitions.
[2020-11-25 09:07:20,374 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 09:07:20,374 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 996 states and 1069 transitions.
[2020-11-25 09:07:20,377 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 09:07:20,377 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 996 states to 0 states and 0 transitions.
[2020-11-25 09:07:20,377 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 09:07:20,377 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 09:07:20,377 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 09:07:20,377 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:07:20,377 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 09:07:20,377 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 09:07:20,377 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 09:07:20,377 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 09:07:20,377 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 09:07:20,377 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 09:07:20,377 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 09:07:20,380 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 09:07:20 BasicIcfg
[2020-11-25 09:07:20,380 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 09:07:20,381 INFO  L168              Benchmark]: Toolchain (without parser) took 6371.09 ms. Allocated memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: 559.4 MB). Free memory was 935.2 MB in the beginning and 871.7 MB in the end (delta: 63.5 MB). Peak memory consumption was 622.9 MB. Max. memory is 15.3 GB.
[2020-11-25 09:07:20,382 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:07:20,382 INFO  L168              Benchmark]: Boogie Preprocessor took 93.97 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 09:07:20,383 INFO  L168              Benchmark]: UtopiaSpecLang took 63.52 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 09:07:20,383 INFO  L168              Benchmark]: Boogie Printer took 16.32 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:07:20,383 INFO  L168              Benchmark]: RCFGBuilder took 759.97 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 800.8 MB in the end (delta: 118.3 MB). Peak memory consumption was 118.3 MB. Max. memory is 15.3 GB.
[2020-11-25 09:07:20,383 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.86 ms. Allocated memory is still 1.0 GB. Free memory was 800.8 MB in the beginning and 797.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 09:07:20,384 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1303.35 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 200.8 MB). Free memory was 797.2 MB in the beginning and 1.0 GB in the end (delta: -209.7 MB). Peak memory consumption was 175.9 MB. Max. memory is 15.3 GB.
[2020-11-25 09:07:20,384 INFO  L168              Benchmark]: BlockEncodingV2 took 125.53 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 941.0 MB in the end (delta: 65.9 MB). Peak memory consumption was 65.9 MB. Max. memory is 15.3 GB.
[2020-11-25 09:07:20,384 INFO  L168              Benchmark]: BuchiAutomizer took 3966.58 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 358.6 MB). Free memory was 941.0 MB in the beginning and 871.7 MB in the end (delta: 69.3 MB). Peak memory consumption was 427.9 MB. Max. memory is 15.3 GB.
[2020-11-25 09:07:20,387 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3722 locations, 6405 edges
  - StatisticsResult: Encoded RCFG
    3662 locations, 6245 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 93.97 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 63.52 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.32 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 759.97 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 800.8 MB in the end (delta: 118.3 MB). Peak memory consumption was 118.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.86 ms. Allocated memory is still 1.0 GB. Free memory was 800.8 MB in the beginning and 797.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1303.35 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 200.8 MB). Free memory was 797.2 MB in the beginning and 1.0 GB in the end (delta: -209.7 MB). Peak memory consumption was 175.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 125.53 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 941.0 MB in the end (delta: 65.9 MB). Peak memory consumption was 65.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 3966.58 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 358.6 MB). Free memory was 941.0 MB in the beginning and 871.7 MB in the end (delta: 69.3 MB). Peak memory consumption was 427.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1565 locations, 1977 edges
  - StatisticsResult: BuchiProgram size
    3722 locations, 6405 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 13 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 3.9s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.4s. Construction of modules took 2.1s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1835 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2820 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 13014 SDtfs, 14194 SDslu, 17568 SDs, 0 SdLazy, 22779 SolverSat, 2556 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.1s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_approve_XMDDexChain0) ==> ( <>(success_approve_XMDDexChain0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
