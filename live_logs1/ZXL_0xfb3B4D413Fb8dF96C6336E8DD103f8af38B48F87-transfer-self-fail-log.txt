This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 11:38:28,010 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 11:38:28,012 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 11:38:28,022 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 11:38:28,022 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 11:38:28,023 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 11:38:28,023 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 11:38:28,024 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 11:38:28,025 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 11:38:28,026 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 11:38:28,026 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 11:38:28,027 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 11:38:28,027 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 11:38:28,028 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 11:38:28,028 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 11:38:28,029 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 11:38:28,029 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 11:38:28,030 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 11:38:28,031 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 11:38:28,032 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 11:38:28,032 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 11:38:28,033 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 11:38:28,034 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 11:38:28,034 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 11:38:28,034 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 11:38:28,035 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 11:38:28,035 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 11:38:28,036 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 11:38:28,036 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 11:38:28,036 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 11:38:28,036 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 11:38:28,037 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 11:38:28,037 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 11:38:28,037 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 11:38:28,038 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 11:38:28,038 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 11:38:28,038 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 11:38:28,038 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 11:38:28,038 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 11:38:28,039 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 11:38:28,039 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 11:38:28,039 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 11:38:28,047 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 11:38:28,047 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 11:38:28,048 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 11:38:28,048 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 11:38:28,048 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 11:38:28,048 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 11:38:28,048 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 11:38:28,049 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 11:38:28,049 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 11:38:28,049 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 11:38:28,049 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 11:38:28,049 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 11:38:28,049 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 11:38:28,049 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 11:38:28,050 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 11:38:28,050 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 11:38:28,050 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 11:38:28,050 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 11:38:28,050 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 11:38:28,050 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 11:38:28,050 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 11:38:28,050 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 11:38:28,051 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 11:38:28,051 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 11:38:28,051 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 11:38:28,051 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 11:38:28,069 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 11:38:28,083 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 11:38:28,088 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 11:38:28,089 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 11:38:28,089 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 11:38:28,090 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl
[2020-11-25 11:38:28,090 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl'
[2020-11-25 11:38:28,139 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 11:38:28,140 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 11:38:28,140 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 11:38:28,140 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 11:38:28,140 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 11:38:28,153 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:28" (1/1) ...
[2020-11-25 11:38:28,154 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:28" (1/1) ...
[2020-11-25 11:38:28,173 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:28" (1/1) ...
[2020-11-25 11:38:28,173 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:28" (1/1) ...
[2020-11-25 11:38:28,188 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:28" (1/1) ...
[2020-11-25 11:38:28,194 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:28" (1/1) ...
[2020-11-25 11:38:28,198 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:28" (1/1) ...
[2020-11-25 11:38:28,204 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 11:38:28,205 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 11:38:28,206 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 11:38:28,207 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 11:38:28,211 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:28" (1/1) ...
[2020-11-25 11:38:28,223 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ZXL.transfer(to, value), msg.sender == to && value > balanceOf_ZXL[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][to] >= 0 && balanceOf_ZXL[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][msg.sender] >= 0 &&  balanceOf_ZXL[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ZXL.transfer)))
[2020-11-25 11:38:28,229 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ZXL.transfer(to, value), msg.sender == to && value > balanceOf_ZXL[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][to] >= 0 && balanceOf_ZXL[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][msg.sender] >= 0 &&  balanceOf_ZXL[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ZXL.transfer)))
[2020-11-25 11:38:28,235 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ZXL.transfer(to, value), msg.sender == to && value > balanceOf_ZXL[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][to] >= 0 && balanceOf_ZXL[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][msg.sender] >= 0 &&  balanceOf_ZXL[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ZXL.transfer)))
[2020-11-25 11:38:28,240 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==_to_s160 && _value_s160>balanceOf_ZXL[this][msg.sender] ) && _value_s160>=0 ) && _value_s160<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_ZXL[this][_to_s160]>=0 ) && balanceOf_ZXL[this][_to_s160]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_ZXL[this][msg.sender]>=0 ) && balanceOf_ZXL[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ZXL>],IdentifierExpression[_to_s160,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ZXL>]],BinaryExpression[COMPGT,IdentifierExpression[_value_s160,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ZXL>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ZXL>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s160,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ZXL>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s160,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ZXL>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ZXL>]]],[IdentifierExpression[_to_s160,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ZXL>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ZXL>]]],[IdentifierExpression[_to_s160,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ZXL>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ZXL>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ZXL>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 11:38:28,245 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ZXL.transfer(to, value), msg.sender == to && value > balanceOf_ZXL[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][to] >= 0 && balanceOf_ZXL[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][msg.sender] >= 0 &&  balanceOf_ZXL[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ZXL.transfer)))
[2020-11-25 11:38:28,245 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ZXL0) ==> ( <>AP(fail_transfer_ZXL0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 11:38:28,250 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:38:28 PropertyContainer
[2020-11-25 11:38:28,250 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 11:38:28,251 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 11:38:28,251 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 11:38:28,251 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 11:38:28,251 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:28" (1/2) ...
[2020-11-25 11:38:28,252 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 11:38:28,252 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 11:38:28,260 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:38:28" (2/2) ...
[2020-11-25 11:38:28,260 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 11:38:28,261 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 11:38:28,261 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 11:38:28,261 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 11:38:28,261 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:28" (1/2) ...
[2020-11-25 11:38:28,313 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 11:38:28,313 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 11:38:28,313 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 11:38:28,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 11:38:28,313 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 11:38:28,313 INFO  L130     BoogieDeclarations]: Found specification of procedure ZXL_ZXL_NoBaseCtor__success
[2020-11-25 11:38:28,313 INFO  L130     BoogieDeclarations]: Found specification of procedure ZXL_ZXL
[2020-11-25 11:38:28,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZXL_ZXL
[2020-11-25 11:38:28,314 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ZXL__success
[2020-11-25 11:38:28,314 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZXL
[2020-11-25 11:38:28,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZXL
[2020-11-25 11:38:28,314 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZXL
[2020-11-25 11:38:28,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZXL
[2020-11-25 11:38:28,314 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZXL
[2020-11-25 11:38:28,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZXL
[2020-11-25 11:38:28,314 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_ZXL
[2020-11-25 11:38:28,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_ZXL
[2020-11-25 11:38:28,315 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ZXL
[2020-11-25 11:38:28,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ZXL
[2020-11-25 11:38:28,315 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ZXL
[2020-11-25 11:38:28,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ZXL
[2020-11-25 11:38:28,315 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ZXL
[2020-11-25 11:38:28,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ZXL
[2020-11-25 11:38:28,315 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ZXL
[2020-11-25 11:38:28,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ZXL
[2020-11-25 11:38:28,315 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ZXL
[2020-11-25 11:38:28,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ZXL
[2020-11-25 11:38:28,316 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZXL
[2020-11-25 11:38:28,316 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZXL
[2020-11-25 11:38:28,316 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZXL
[2020-11-25 11:38:28,316 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZXL
[2020-11-25 11:38:28,316 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZXL
[2020-11-25 11:38:28,316 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZXL
[2020-11-25 11:38:28,316 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 11:38:28,316 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 11:38:28,316 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 11:38:28,316 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 11:38:28,316 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 11:38:28,316 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ZXL
[2020-11-25 11:38:28,316 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 11:38:28,317 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 11:38:28,317 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 11:38:28,317 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 11:38:28,317 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 11:38:28,317 INFO  L130     BoogieDeclarations]: Found specification of procedure ZXL_ZXL_NoBaseCtor__fail
[2020-11-25 11:38:28,317 INFO  L130     BoogieDeclarations]: Found specification of procedure ZXL_ZXL__success
[2020-11-25 11:38:28,317 INFO  L130     BoogieDeclarations]: Found specification of procedure ZXL_ZXL__fail
[2020-11-25 11:38:28,317 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ZXL__fail
[2020-11-25 11:38:28,317 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZXL__success
[2020-11-25 11:38:28,317 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZXL__fail
[2020-11-25 11:38:28,317 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZXL__success
[2020-11-25 11:38:28,317 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZXL__fail
[2020-11-25 11:38:28,317 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZXL__success
[2020-11-25 11:38:28,318 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZXL__fail
[2020-11-25 11:38:28,318 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_ZXL__success
[2020-11-25 11:38:28,318 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_ZXL__fail
[2020-11-25 11:38:28,318 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ZXL__success
[2020-11-25 11:38:28,318 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ZXL__fail
[2020-11-25 11:38:28,318 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ZXL__success
[2020-11-25 11:38:28,318 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ZXL__fail
[2020-11-25 11:38:28,318 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ZXL__success
[2020-11-25 11:38:28,318 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ZXL__fail
[2020-11-25 11:38:28,318 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ZXL__success
[2020-11-25 11:38:28,318 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ZXL__fail
[2020-11-25 11:38:28,318 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ZXL__success
[2020-11-25 11:38:28,318 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ZXL__fail
[2020-11-25 11:38:28,318 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZXL__success
[2020-11-25 11:38:28,319 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZXL__fail
[2020-11-25 11:38:28,319 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZXL__success
[2020-11-25 11:38:28,319 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZXL__fail
[2020-11-25 11:38:28,319 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZXL__success
[2020-11-25 11:38:28,319 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZXL__fail
[2020-11-25 11:38:28,319 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 11:38:28,319 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 11:38:28,319 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 11:38:28,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 11:38:28,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 11:38:28,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 11:38:28,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 11:38:28,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 11:38:28,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 11:38:28,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZXL_ZXL_NoBaseCtor__fail
[2020-11-25 11:38:28,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZXL_ZXL_NoBaseCtor__success
[2020-11-25 11:38:28,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZXL_ZXL__fail
[2020-11-25 11:38:28,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZXL_ZXL__success
[2020-11-25 11:38:28,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ZXL__fail
[2020-11-25 11:38:28,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ZXL__success
[2020-11-25 11:38:28,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZXL__fail
[2020-11-25 11:38:28,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZXL__success
[2020-11-25 11:38:28,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZXL__fail
[2020-11-25 11:38:28,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZXL__success
[2020-11-25 11:38:28,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZXL__fail
[2020-11-25 11:38:28,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZXL__success
[2020-11-25 11:38:28,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_ZXL__fail
[2020-11-25 11:38:28,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_ZXL__success
[2020-11-25 11:38:28,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ZXL__fail
[2020-11-25 11:38:28,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ZXL__success
[2020-11-25 11:38:28,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ZXL__fail
[2020-11-25 11:38:28,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ZXL__success
[2020-11-25 11:38:28,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ZXL__fail
[2020-11-25 11:38:28,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ZXL__success
[2020-11-25 11:38:28,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ZXL__fail
[2020-11-25 11:38:28,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ZXL__success
[2020-11-25 11:38:28,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ZXL__fail
[2020-11-25 11:38:28,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ZXL__success
[2020-11-25 11:38:28,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZXL__fail
[2020-11-25 11:38:28,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZXL__success
[2020-11-25 11:38:28,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZXL__fail
[2020-11-25 11:38:28,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZXL__success
[2020-11-25 11:38:28,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZXL__fail
[2020-11-25 11:38:28,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZXL__success
[2020-11-25 11:38:28,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 11:38:28,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 11:38:28,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 11:38:28,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 11:38:28,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 11:38:28,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 11:38:28,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 11:38:28,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 11:38:28,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ZXL
[2020-11-25 11:38:28,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 11:38:28,323 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 11:38:28,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 11:38:28,651 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:38:28,651 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:38:28,774 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 11:38:28,774 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 11:38:28,775 INFO  L202        PluginConnector]: Adding new model ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:38:28 BoogieIcfgContainer
[2020-11-25 11:38:28,775 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:38:28" (2/2) ...
[2020-11-25 11:38:28,775 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 11:38:28,776 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@55da2465 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:38:28, skipping insertion in model container
[2020-11-25 11:38:28,776 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 11:38:28,776 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 11:38:28,776 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 11:38:28,778 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 11:38:28,778 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:28" (1/3) ...
[2020-11-25 11:38:28,778 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@63e1ddad and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:38:28, skipping insertion in model container
[2020-11-25 11:38:28,778 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:38:28" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 11:38:28,812 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:38:28 NWAContainer
[2020-11-25 11:38:28,812 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 11:38:28,813 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 11:38:28,813 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 11:38:28,813 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 11:38:28,814 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:38:28" (3/4) ...
[2020-11-25 11:38:28,815 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@77c6d450 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:38:28, skipping insertion in model container
[2020-11-25 11:38:28,815 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:38:28" (4/4) ...
[2020-11-25 11:38:28,818 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 11:38:28,821 INFO  L110   BuchiProductObserver]: Initial RCFG 822 locations, 993 edges
[2020-11-25 11:38:28,821 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 11:38:28,830 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 11:38:29,735 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 11:38:29,738 INFO  L110   BuchiProductObserver]: BuchiProgram size 1910 locations, 3191 edges
[2020-11-25 11:38:29,738 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:38:29 BoogieIcfgContainer
[2020-11-25 11:38:29,738 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 11:38:29,738 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 11:38:29,738 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 11:38:29,740 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 11:38:29,740 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:38:29" (1/1) ...
[2020-11-25 11:38:29,786 INFO  L313           BlockEncoder]: Initial Icfg 1910 locations, 3191 edges
[2020-11-25 11:38:29,786 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 11:38:29,786 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 11:38:29,786 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 11:38:29,787 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 11:38:29,793 INFO  L70    emoveInfeasibleEdges]: Removed 30 edges and 8 locations because of local infeasibility
[2020-11-25 11:38:29,797 INFO  L70        RemoveSinkStates]: Removed 84 edges and 42 locations by removing sink states
[2020-11-25 11:38:29,802 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 11:38:29,804 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 11:38:29,805 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 11:38:29,806 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 11:38:29,808 INFO  L313           BlockEncoder]: Encoded RCFG 1850 locations, 3063 edges
[2020-11-25 11:38:29,808 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:38:29 BasicIcfg
[2020-11-25 11:38:29,808 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 11:38:29,808 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 11:38:29,809 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 11:38:29,810 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 11:38:29,810 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:38:29,810 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:28" (1/6) ...
[2020-11-25 11:38:29,812 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1dcee182 and model type ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:38:29, skipping insertion in model container
[2020-11-25 11:38:29,812 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:38:29,812 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:38:28" (2/6) ...
[2020-11-25 11:38:29,812 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1dcee182 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:38:29, skipping insertion in model container
[2020-11-25 11:38:29,812 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:38:29,812 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:38:28" (3/6) ...
[2020-11-25 11:38:29,812 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1dcee182 and model type ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:38:29, skipping insertion in model container
[2020-11-25 11:38:29,812 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:38:29,812 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:38:28" (4/6) ...
[2020-11-25 11:38:29,813 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1dcee182 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:38:29, skipping insertion in model container
[2020-11-25 11:38:29,813 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:38:29,813 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:38:29" (5/6) ...
[2020-11-25 11:38:29,813 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1dcee182 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 11:38:29, skipping insertion in model container
[2020-11-25 11:38:29,813 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:38:29,813 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:38:29" (6/6) ...
[2020-11-25 11:38:29,814 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transfer-self-fail.bpl_BEv2
[2020-11-25 11:38:29,844 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 11:38:29,844 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 11:38:29,844 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 11:38:29,844 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 11:38:29,844 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 11:38:29,844 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 11:38:29,844 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 11:38:29,844 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 11:38:29,844 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 11:38:29,861 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1850 states.
[2020-11-25 11:38:29,897 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:38:29,897 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:38:29,897 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:38:29,906 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:29,906 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:29,906 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 11:38:29,907 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1850 states.
[2020-11-25 11:38:29,917 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:38:29,917 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:38:29,917 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:38:29,918 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:29,918 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ZXL0 := false;
[L2]                 call_transfer_ZXL0 := false;
[L2]     CALL        call main();
[L2188]              assume null == 0;
[L2189]  CALL        call this := FreshRefGenerator__success();
[L1115]              havoc newRef;
[L1116]              assume Alloc[newRef] == false;
[L1117]              Alloc[newRef] := true;
[L1118]              assume newRef != null;
[L2189]  RET         call this := FreshRefGenerator__success();
[L2190]              assume now >= 0;
[L2191]              assume DType[this] == ZXL;
[L2192]              assume msgvalue_MSG == 0;
[L2193]              gas := gas - 53000;
[L2194]  CALL        call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L145]               havoc __exception;
[L146]               revert := false;
[L147]   COND FALSE  !(__exception)
[L169]   CALL        call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L1205]  CALL        call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1177]              assume msgsender_MSG != null;
[L1178]              Balance[this] := 0;
[L1179]              name_ZXL[this] := -1880820303;
[L1180]              symbol_ZXL[this] := -1880820303;
[L1181]              decimals_ZXL[this] := 18;
[L1182]              totalSupply_ZXL[this] := 13000000000000000000000000;
[L1183]              owner_ZXL[this] := null;
[L1184]              balanceOf_ZXL[this] := zeroRefintArr();
[L1185]              sum_balanceOf0[this] := 0;
[L1186]              allowance_ZXL[this] := zeroRefRefintArr();
[L1187]              sum_allowance1[this] := 0;
[L1189]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][msgsender_MSG];
[L1190]              balanceOf_ZXL[this][msgsender_MSG] := totalSupply_ZXL[this];
[L1191]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][msgsender_MSG];
[L1192]              owner_ZXL[this] := msgsender_MSG;
[L1205]  RET         call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1206]  COND FALSE  !(revert)
[L169]   RET         call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L170]               assume !revert && gas >= 0;
[L2194]  RET         call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L2195]              assume !revert && gas >= 0;

Loop:
[L2198]  CALL        call CorralChoice_ZXL(this);
[L2062]              havoc msgsender_MSG;
[L2063]              havoc msgvalue_MSG;
[L2064]              havoc choice;
[L2065]              havoc __ret_0_name;
[L2066]              havoc __ret_0_symbol;
[L2067]              havoc __ret_0_decimals;
[L2068]              havoc __ret_0_totalSupply;
[L2069]              havoc arg353_s0;
[L2070]              havoc __ret_0_balanceOf;
[L2071]              havoc arg354_s0;
[L2072]              havoc arg355_s0;
[L2073]              havoc __ret_0_allowance;
[L2074]              havoc _to_s160;
[L2075]              havoc _value_s160;
[L2076]              havoc _from_s200;
[L2077]              havoc _to_s200;
[L2078]              havoc _value_s200;
[L2079]              havoc success_s200;
[L2080]              havoc _spender_s221;
[L2081]              havoc _value_s221;
[L2082]              havoc success_s221;
[L2083]              havoc _spender_s259;
[L2084]              havoc _value_s259;
[L2085]              havoc _extraData_s259;
[L2086]              havoc success_s259;
[L2087]              havoc _value_s295;
[L2088]              havoc success_s295;
[L2089]              havoc _from_s350;
[L2090]              havoc _value_s350;
[L2091]              havoc success_s350;
[L2092]              havoc tmpNow;
[L2093]              havoc gas;
[L2094]              assume gas > 4000000 && gas <= 8000000;
[L2095]              tmpNow := now;
[L2096]              havoc now;
[L2097]              assume now > tmpNow;
[L2098]              assume msgsender_MSG != null;
[L2099]              assume DType[msgsender_MSG] != tokenRecipient;
[L2100]              assume DType[msgsender_MSG] != ZXL;
[L2101]              Alloc[msgsender_MSG] := true;
[L2102]  COND TRUE   choice == 12
[L2103]              gas := gas - 21000;
[L2104]  COND FALSE  !(gas >= 0)
[L2198]  RET         call CorralChoice_ZXL(this);

[2020-11-25 11:38:29,931 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:38:29,931 INFO  L82        PathProgramCache]: Analyzing trace with hash 1146618290, now seen corresponding path program 1 times
[2020-11-25 11:38:29,934 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:38:29,954 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:38:29,989 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:38:29,991 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:38:29,991 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:38:29,994 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:38:30,079 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:38:30,079 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:38:30,081 INFO  L87              Difference]: Start difference. First operand 1850 states. Second operand 4 states.
[2020-11-25 11:38:30,344 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:38:30,344 INFO  L93              Difference]: Finished difference Result 1438 states and 1563 transitions.
[2020-11-25 11:38:30,344 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:38:30,346 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1438 states and 1563 transitions.
[2020-11-25 11:38:30,355 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:38:30,370 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1438 states to 1436 states and 1559 transitions.
[2020-11-25 11:38:30,371 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 11:38:30,373 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 625
[2020-11-25 11:38:30,373 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1436 states and 1559 transitions.
[2020-11-25 11:38:30,379 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:38:30,379 INFO  L728         BuchiCegarLoop]: Abstraction has 1436 states and 1559 transitions.
[2020-11-25 11:38:30,396 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1436 states and 1559 transitions.
[2020-11-25 11:38:30,428 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1436 to 1436.
[2020-11-25 11:38:30,429 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1436 states.
[2020-11-25 11:38:30,433 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1436 states to 1436 states and 1559 transitions.
[2020-11-25 11:38:30,434 INFO  L751         BuchiCegarLoop]: Abstraction has 1436 states and 1559 transitions.
[2020-11-25 11:38:30,434 INFO  L631         BuchiCegarLoop]: Abstraction has 1436 states and 1559 transitions.
[2020-11-25 11:38:30,434 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 11:38:30,434 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1436 states and 1559 transitions.
[2020-11-25 11:38:30,440 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:38:30,440 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:38:30,440 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:38:30,442 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:30,442 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ZXL0 := false;
[L2]                 call_transfer_ZXL0 := false;
[L2]     CALL        call main();
[L2188]              assume null == 0;
[L2189]  CALL        call this := FreshRefGenerator__success();
[L1115]              havoc newRef;
[L1116]              assume Alloc[newRef] == false;
[L1117]              Alloc[newRef] := true;
[L1118]              assume newRef != null;
[L2189]  RET         call this := FreshRefGenerator__success();
[L2190]              assume now >= 0;
[L2191]              assume DType[this] == ZXL;
[L2192]              assume msgvalue_MSG == 0;
[L2193]              gas := gas - 53000;
[L2194]  CALL        call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L145]               havoc __exception;
[L146]               revert := false;
[L147]   COND FALSE  !(__exception)
[L169]   CALL        call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L1205]  CALL        call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1177]              assume msgsender_MSG != null;
[L1178]              Balance[this] := 0;
[L1179]              name_ZXL[this] := -1880820303;
[L1180]              symbol_ZXL[this] := -1880820303;
[L1181]              decimals_ZXL[this] := 18;
[L1182]              totalSupply_ZXL[this] := 13000000000000000000000000;
[L1183]              owner_ZXL[this] := null;
[L1184]              balanceOf_ZXL[this] := zeroRefintArr();
[L1185]              sum_balanceOf0[this] := 0;
[L1186]              allowance_ZXL[this] := zeroRefRefintArr();
[L1187]              sum_allowance1[this] := 0;
[L1189]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][msgsender_MSG];
[L1190]              balanceOf_ZXL[this][msgsender_MSG] := totalSupply_ZXL[this];
[L1191]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][msgsender_MSG];
[L1192]              owner_ZXL[this] := msgsender_MSG;
[L1205]  RET         call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1206]  COND FALSE  !(revert)
[L169]   RET         call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L170]               assume !revert && gas >= 0;
[L2194]  RET         call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L2195]              assume !revert && gas >= 0;
[L2198]  CALL        call CorralChoice_ZXL(this);
[L2062]              havoc msgsender_MSG;
[L2063]              havoc msgvalue_MSG;
[L2064]              havoc choice;
[L2065]              havoc __ret_0_name;
[L2066]              havoc __ret_0_symbol;
[L2067]              havoc __ret_0_decimals;
[L2068]              havoc __ret_0_totalSupply;
[L2069]              havoc arg353_s0;
[L2070]              havoc __ret_0_balanceOf;
[L2071]              havoc arg354_s0;
[L2072]              havoc arg355_s0;
[L2073]              havoc __ret_0_allowance;
[L2074]              havoc _to_s160;
[L2075]              havoc _value_s160;
[L2076]              havoc _from_s200;
[L2077]              havoc _to_s200;
[L2078]              havoc _value_s200;
[L2079]              havoc success_s200;
[L2080]              havoc _spender_s221;
[L2081]              havoc _value_s221;
[L2082]              havoc success_s221;
[L2083]              havoc _spender_s259;
[L2084]              havoc _value_s259;
[L2085]              havoc _extraData_s259;
[L2086]              havoc success_s259;
[L2087]              havoc _value_s295;
[L2088]              havoc success_s295;
[L2089]              havoc _from_s350;
[L2090]              havoc _value_s350;
[L2091]              havoc success_s350;
[L2092]              havoc tmpNow;
[L2093]              havoc gas;
[L2094]              assume gas > 4000000 && gas <= 8000000;
[L2095]              tmpNow := now;
[L2096]              havoc now;
[L2097]              assume now > tmpNow;
[L2098]              assume msgsender_MSG != null;
[L2099]              assume DType[msgsender_MSG] != tokenRecipient;
[L2100]              assume DType[msgsender_MSG] != ZXL;
[L2101]              Alloc[msgsender_MSG] := true;
[L2102]  COND FALSE  !(choice == 12)
[L2108]  COND FALSE  !(choice == 11)
[L2114]  COND FALSE  !(choice == 10)
[L2120]  COND FALSE  !(choice == 9)
[L2126]  COND FALSE  !(choice == 8)
[L2132]  COND FALSE  !(choice == 7)
[L2138]  COND TRUE   choice == 6
[L2139]              gas := gas - 21000;
[L2140]  COND TRUE   gas >= 0
[L2141]              assume _value_s160 >= 0 && _value_s160 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2142]              assume msgvalue_MSG == 0;
[L2143]  CALL        call transfer~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s160 && _value_s160 > balanceOf_ZXL[this][msgsender_MSG]) && _value_s160 >= 0) && _value_s160 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s160] >= 0) && balanceOf_ZXL[this][_to_s160] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][msgsender_MSG] >= 0) && balanceOf_ZXL[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ZXL0 := true;
[L2]                 call_transfer_ZXL0 := false;
[L2]                 revert := revert_hold;
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call transfer~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L1275]  CALL        call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s160, _value_s160);
[L1241]              __var_1 := null;
[L1242]  COND TRUE   !(_to_s145 != null)
[L1243]              revert := true;
[L1275]  RET         call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s160, _value_s160);
[L1276]  COND FALSE  !(revert)
[L227]   RET         call transfer~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L228]               assume !revert && gas >= 0;
[L2143]  RET         call transfer~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L2198]  RET         call CorralChoice_ZXL(this);

Loop:
[L2198]  CALL        call CorralChoice_ZXL(this);
[L2062]              havoc msgsender_MSG;
[L2063]              havoc msgvalue_MSG;
[L2064]              havoc choice;
[L2065]              havoc __ret_0_name;
[L2066]              havoc __ret_0_symbol;
[L2067]              havoc __ret_0_decimals;
[L2068]              havoc __ret_0_totalSupply;
[L2069]              havoc arg353_s0;
[L2070]              havoc __ret_0_balanceOf;
[L2071]              havoc arg354_s0;
[L2072]              havoc arg355_s0;
[L2073]              havoc __ret_0_allowance;
[L2074]              havoc _to_s160;
[L2075]              havoc _value_s160;
[L2076]              havoc _from_s200;
[L2077]              havoc _to_s200;
[L2078]              havoc _value_s200;
[L2079]              havoc success_s200;
[L2080]              havoc _spender_s221;
[L2081]              havoc _value_s221;
[L2082]              havoc success_s221;
[L2083]              havoc _spender_s259;
[L2084]              havoc _value_s259;
[L2085]              havoc _extraData_s259;
[L2086]              havoc success_s259;
[L2087]              havoc _value_s295;
[L2088]              havoc success_s295;
[L2089]              havoc _from_s350;
[L2090]              havoc _value_s350;
[L2091]              havoc success_s350;
[L2092]              havoc tmpNow;
[L2093]              havoc gas;
[L2094]              assume gas > 4000000 && gas <= 8000000;
[L2095]              tmpNow := now;
[L2096]              havoc now;
[L2097]              assume now > tmpNow;
[L2098]              assume msgsender_MSG != null;
[L2099]              assume DType[msgsender_MSG] != tokenRecipient;
[L2100]              assume DType[msgsender_MSG] != ZXL;
[L2101]              Alloc[msgsender_MSG] := true;
[L2102]  COND FALSE  !(choice == 12)
[L2108]  COND FALSE  !(choice == 11)
[L2114]  COND FALSE  !(choice == 10)
[L2120]  COND FALSE  !(choice == 9)
[L2126]  COND FALSE  !(choice == 8)
[L2132]  COND FALSE  !(choice == 7)
[L2138]  COND TRUE   choice == 6
[L2139]              gas := gas - 21000;
[L2140]  COND TRUE   gas >= 0
[L2141]              assume _value_s160 >= 0 && _value_s160 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2142]              assume msgvalue_MSG == 0;
[L2143]  CALL        call transfer~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s160 && _value_s160 > balanceOf_ZXL[this][msgsender_MSG]) && _value_s160 >= 0) && _value_s160 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s160] >= 0) && balanceOf_ZXL[this][_to_s160] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][msgsender_MSG] >= 0) && balanceOf_ZXL[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ZXL0 := true;
[L2]                 call_transfer_ZXL0 := false;
[L2]                 revert := revert_hold;
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call transfer~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L1275]  CALL        call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s160, _value_s160);
[L1241]              __var_1 := null;
[L1242]  COND TRUE   !(_to_s145 != null)
[L1243]              revert := true;
[L1275]  RET         call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s160, _value_s160);
[L1276]  COND FALSE  !(revert)
[L227]   RET         call transfer~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L228]               assume !revert && gas >= 0;
[L2143]  RET         call transfer~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L2198]  RET         call CorralChoice_ZXL(this);

[2020-11-25 11:38:30,447 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:38:30,447 INFO  L82        PathProgramCache]: Analyzing trace with hash 1853043232, now seen corresponding path program 1 times
[2020-11-25 11:38:30,448 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:38:30,463 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:38:30,505 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:38:30,506 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:38:30,506 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 11:38:30,507 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:38:30,507 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 11:38:30,507 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 11:38:30,508 INFO  L87              Difference]: Start difference. First operand 1436 states and 1559 transitions. cyclomatic complexity: 125 Second operand 7 states.
[2020-11-25 11:38:30,577 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:38:30,577 INFO  L93              Difference]: Finished difference Result 1500 states and 1631 transitions.
[2020-11-25 11:38:30,578 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 11:38:30,578 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1500 states and 1631 transitions.
[2020-11-25 11:38:30,586 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:38:30,593 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1500 states to 1492 states and 1623 transitions.
[2020-11-25 11:38:30,593 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 640
[2020-11-25 11:38:30,594 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 640
[2020-11-25 11:38:30,594 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1492 states and 1623 transitions.
[2020-11-25 11:38:30,596 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:38:30,597 INFO  L728         BuchiCegarLoop]: Abstraction has 1492 states and 1623 transitions.
[2020-11-25 11:38:30,598 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1492 states and 1623 transitions.
[2020-11-25 11:38:30,620 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1492 to 1462.
[2020-11-25 11:38:30,621 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1462 states.
[2020-11-25 11:38:30,623 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1462 states to 1462 states and 1592 transitions.
[2020-11-25 11:38:30,623 INFO  L751         BuchiCegarLoop]: Abstraction has 1462 states and 1592 transitions.
[2020-11-25 11:38:30,623 INFO  L631         BuchiCegarLoop]: Abstraction has 1462 states and 1592 transitions.
[2020-11-25 11:38:30,624 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 11:38:30,624 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1462 states and 1592 transitions.
[2020-11-25 11:38:30,627 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:38:30,627 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:38:30,627 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:38:30,628 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:30,628 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ZXL0 := false;
[L2]                 call_transfer_ZXL0 := false;
[L2]     CALL        call main();
[L2188]              assume null == 0;
[L2189]  CALL        call this := FreshRefGenerator__success();
[L1115]              havoc newRef;
[L1116]              assume Alloc[newRef] == false;
[L1117]              Alloc[newRef] := true;
[L1118]              assume newRef != null;
[L2189]  RET         call this := FreshRefGenerator__success();
[L2190]              assume now >= 0;
[L2191]              assume DType[this] == ZXL;
[L2192]              assume msgvalue_MSG == 0;
[L2193]              gas := gas - 53000;
[L2194]  CALL        call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L145]               havoc __exception;
[L146]               revert := false;
[L147]   COND FALSE  !(__exception)
[L169]   CALL        call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L1205]  CALL        call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1177]              assume msgsender_MSG != null;
[L1178]              Balance[this] := 0;
[L1179]              name_ZXL[this] := -1880820303;
[L1180]              symbol_ZXL[this] := -1880820303;
[L1181]              decimals_ZXL[this] := 18;
[L1182]              totalSupply_ZXL[this] := 13000000000000000000000000;
[L1183]              owner_ZXL[this] := null;
[L1184]              balanceOf_ZXL[this] := zeroRefintArr();
[L1185]              sum_balanceOf0[this] := 0;
[L1186]              allowance_ZXL[this] := zeroRefRefintArr();
[L1187]              sum_allowance1[this] := 0;
[L1189]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][msgsender_MSG];
[L1190]              balanceOf_ZXL[this][msgsender_MSG] := totalSupply_ZXL[this];
[L1191]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][msgsender_MSG];
[L1192]              owner_ZXL[this] := msgsender_MSG;
[L1205]  RET         call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1206]  COND FALSE  !(revert)
[L169]   RET         call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L170]               assume !revert && gas >= 0;
[L2194]  RET         call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L2195]              assume !revert && gas >= 0;
[L2198]  CALL        call CorralChoice_ZXL(this);
[L2062]              havoc msgsender_MSG;
[L2063]              havoc msgvalue_MSG;
[L2064]              havoc choice;
[L2065]              havoc __ret_0_name;
[L2066]              havoc __ret_0_symbol;
[L2067]              havoc __ret_0_decimals;
[L2068]              havoc __ret_0_totalSupply;
[L2069]              havoc arg353_s0;
[L2070]              havoc __ret_0_balanceOf;
[L2071]              havoc arg354_s0;
[L2072]              havoc arg355_s0;
[L2073]              havoc __ret_0_allowance;
[L2074]              havoc _to_s160;
[L2075]              havoc _value_s160;
[L2076]              havoc _from_s200;
[L2077]              havoc _to_s200;
[L2078]              havoc _value_s200;
[L2079]              havoc success_s200;
[L2080]              havoc _spender_s221;
[L2081]              havoc _value_s221;
[L2082]              havoc success_s221;
[L2083]              havoc _spender_s259;
[L2084]              havoc _value_s259;
[L2085]              havoc _extraData_s259;
[L2086]              havoc success_s259;
[L2087]              havoc _value_s295;
[L2088]              havoc success_s295;
[L2089]              havoc _from_s350;
[L2090]              havoc _value_s350;
[L2091]              havoc success_s350;
[L2092]              havoc tmpNow;
[L2093]              havoc gas;
[L2094]              assume gas > 4000000 && gas <= 8000000;
[L2095]              tmpNow := now;
[L2096]              havoc now;
[L2097]              assume now > tmpNow;
[L2098]              assume msgsender_MSG != null;
[L2099]              assume DType[msgsender_MSG] != tokenRecipient;
[L2100]              assume DType[msgsender_MSG] != ZXL;
[L2101]              Alloc[msgsender_MSG] := true;
[L2102]  COND FALSE  !(choice == 12)
[L2108]  COND FALSE  !(choice == 11)
[L2114]  COND FALSE  !(choice == 10)
[L2120]  COND FALSE  !(choice == 9)
[L2126]  COND FALSE  !(choice == 8)
[L2132]  COND FALSE  !(choice == 7)
[L2138]  COND TRUE   choice == 6
[L2139]              gas := gas - 21000;
[L2140]  COND TRUE   gas >= 0
[L2141]              assume _value_s160 >= 0 && _value_s160 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2142]              assume msgvalue_MSG == 0;
[L2143]  CALL        call transfer~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s160 && _value_s160 > balanceOf_ZXL[this][msgsender_MSG]) && _value_s160 >= 0) && _value_s160 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s160] >= 0) && balanceOf_ZXL[this][_to_s160] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][msgsender_MSG] >= 0) && balanceOf_ZXL[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ZXL0 := true;
[L2]                 call_transfer_ZXL0 := false;
[L2]                 revert := revert_hold;
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call transfer~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L1275]  CALL        call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s160, _value_s160);
[L1241]              __var_1 := null;
[L1242]  COND FALSE  !(!(_to_s145 != null))
[L1246]  COND TRUE   !(balanceOf_ZXL[this][_from_s145] >= _value_s145)
[L1247]              revert := true;
[L1275]  RET         call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s160, _value_s160);
[L1276]  COND FALSE  !(revert)
[L227]   RET         call transfer~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L228]               assume !revert && gas >= 0;
[L2143]  RET         call transfer~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L2198]  RET         call CorralChoice_ZXL(this);

Loop:
[L2198]  CALL        call CorralChoice_ZXL(this);
[L2062]              havoc msgsender_MSG;
[L2063]              havoc msgvalue_MSG;
[L2064]              havoc choice;
[L2065]              havoc __ret_0_name;
[L2066]              havoc __ret_0_symbol;
[L2067]              havoc __ret_0_decimals;
[L2068]              havoc __ret_0_totalSupply;
[L2069]              havoc arg353_s0;
[L2070]              havoc __ret_0_balanceOf;
[L2071]              havoc arg354_s0;
[L2072]              havoc arg355_s0;
[L2073]              havoc __ret_0_allowance;
[L2074]              havoc _to_s160;
[L2075]              havoc _value_s160;
[L2076]              havoc _from_s200;
[L2077]              havoc _to_s200;
[L2078]              havoc _value_s200;
[L2079]              havoc success_s200;
[L2080]              havoc _spender_s221;
[L2081]              havoc _value_s221;
[L2082]              havoc success_s221;
[L2083]              havoc _spender_s259;
[L2084]              havoc _value_s259;
[L2085]              havoc _extraData_s259;
[L2086]              havoc success_s259;
[L2087]              havoc _value_s295;
[L2088]              havoc success_s295;
[L2089]              havoc _from_s350;
[L2090]              havoc _value_s350;
[L2091]              havoc success_s350;
[L2092]              havoc tmpNow;
[L2093]              havoc gas;
[L2094]              assume gas > 4000000 && gas <= 8000000;
[L2095]              tmpNow := now;
[L2096]              havoc now;
[L2097]              assume now > tmpNow;
[L2098]              assume msgsender_MSG != null;
[L2099]              assume DType[msgsender_MSG] != tokenRecipient;
[L2100]              assume DType[msgsender_MSG] != ZXL;
[L2101]              Alloc[msgsender_MSG] := true;
[L2102]  COND FALSE  !(choice == 12)
[L2108]  COND FALSE  !(choice == 11)
[L2114]  COND FALSE  !(choice == 10)
[L2120]  COND FALSE  !(choice == 9)
[L2126]  COND FALSE  !(choice == 8)
[L2132]  COND FALSE  !(choice == 7)
[L2138]  COND TRUE   choice == 6
[L2139]              gas := gas - 21000;
[L2140]  COND TRUE   gas >= 0
[L2141]              assume _value_s160 >= 0 && _value_s160 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2142]              assume msgvalue_MSG == 0;
[L2143]  CALL        call transfer~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s160 && _value_s160 > balanceOf_ZXL[this][msgsender_MSG]) && _value_s160 >= 0) && _value_s160 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s160] >= 0) && balanceOf_ZXL[this][_to_s160] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][msgsender_MSG] >= 0) && balanceOf_ZXL[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ZXL0 := true;
[L2]                 call_transfer_ZXL0 := false;
[L2]                 revert := revert_hold;
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call transfer~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L1275]  CALL        call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s160, _value_s160);
[L1241]              __var_1 := null;
[L1242]  COND FALSE  !(!(_to_s145 != null))
[L1246]  COND TRUE   !(balanceOf_ZXL[this][_from_s145] >= _value_s145)
[L1247]              revert := true;
[L1275]  RET         call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s160, _value_s160);
[L1276]  COND FALSE  !(revert)
[L227]   RET         call transfer~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L228]               assume !revert && gas >= 0;
[L2143]  RET         call transfer~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L2198]  RET         call CorralChoice_ZXL(this);

[2020-11-25 11:38:30,631 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:38:30,631 INFO  L82        PathProgramCache]: Analyzing trace with hash -2125827507, now seen corresponding path program 1 times
[2020-11-25 11:38:30,631 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:38:30,639 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:38:30,655 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:38:30,655 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:38:30,655 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 11:38:30,655 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:38:30,655 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 11:38:30,655 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 11:38:30,656 INFO  L87              Difference]: Start difference. First operand 1462 states and 1592 transitions. cyclomatic complexity: 132 Second operand 3 states.
[2020-11-25 11:38:30,683 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:38:30,683 INFO  L93              Difference]: Finished difference Result 1884 states and 2091 transitions.
[2020-11-25 11:38:30,683 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 11:38:30,683 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1884 states and 2091 transitions.
[2020-11-25 11:38:30,690 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 11:38:30,703 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1884 states to 1792 states and 1984 transitions.
[2020-11-25 11:38:30,703 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 795
[2020-11-25 11:38:30,704 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 795
[2020-11-25 11:38:30,704 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1792 states and 1984 transitions.
[2020-11-25 11:38:30,708 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:38:30,708 INFO  L728         BuchiCegarLoop]: Abstraction has 1792 states and 1984 transitions.
[2020-11-25 11:38:30,710 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1792 states and 1984 transitions.
[2020-11-25 11:38:30,726 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1792 to 1539.
[2020-11-25 11:38:30,726 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1539 states.
[2020-11-25 11:38:30,729 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1539 states to 1539 states and 1668 transitions.
[2020-11-25 11:38:30,729 INFO  L751         BuchiCegarLoop]: Abstraction has 1539 states and 1668 transitions.
[2020-11-25 11:38:30,729 INFO  L631         BuchiCegarLoop]: Abstraction has 1539 states and 1668 transitions.
[2020-11-25 11:38:30,730 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 11:38:30,730 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1539 states and 1668 transitions.
[2020-11-25 11:38:30,734 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 11:38:30,734 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:38:30,734 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:38:30,736 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:30,736 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ZXL0 := false;
[L2]                 call_transfer_ZXL0 := false;
[L2]     CALL        call main();
[L2188]              assume null == 0;
[L2189]  CALL        call this := FreshRefGenerator__success();
[L1115]              havoc newRef;
[L1116]              assume Alloc[newRef] == false;
[L1117]              Alloc[newRef] := true;
[L1118]              assume newRef != null;
[L2189]  RET         call this := FreshRefGenerator__success();
[L2190]              assume now >= 0;
[L2191]              assume DType[this] == ZXL;
[L2192]              assume msgvalue_MSG == 0;
[L2193]              gas := gas - 53000;
[L2194]  CALL        call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L145]               havoc __exception;
[L146]               revert := false;
[L147]   COND FALSE  !(__exception)
[L169]   CALL        call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L1205]  CALL        call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1177]              assume msgsender_MSG != null;
[L1178]              Balance[this] := 0;
[L1179]              name_ZXL[this] := -1880820303;
[L1180]              symbol_ZXL[this] := -1880820303;
[L1181]              decimals_ZXL[this] := 18;
[L1182]              totalSupply_ZXL[this] := 13000000000000000000000000;
[L1183]              owner_ZXL[this] := null;
[L1184]              balanceOf_ZXL[this] := zeroRefintArr();
[L1185]              sum_balanceOf0[this] := 0;
[L1186]              allowance_ZXL[this] := zeroRefRefintArr();
[L1187]              sum_allowance1[this] := 0;
[L1189]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][msgsender_MSG];
[L1190]              balanceOf_ZXL[this][msgsender_MSG] := totalSupply_ZXL[this];
[L1191]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][msgsender_MSG];
[L1192]              owner_ZXL[this] := msgsender_MSG;
[L1205]  RET         call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1206]  COND FALSE  !(revert)
[L169]   RET         call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L170]               assume !revert && gas >= 0;
[L2194]  RET         call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L2195]              assume !revert && gas >= 0;
[L2198]  CALL        call CorralChoice_ZXL(this);
[L2062]              havoc msgsender_MSG;
[L2063]              havoc msgvalue_MSG;
[L2064]              havoc choice;
[L2065]              havoc __ret_0_name;
[L2066]              havoc __ret_0_symbol;
[L2067]              havoc __ret_0_decimals;
[L2068]              havoc __ret_0_totalSupply;
[L2069]              havoc arg353_s0;
[L2070]              havoc __ret_0_balanceOf;
[L2071]              havoc arg354_s0;
[L2072]              havoc arg355_s0;
[L2073]              havoc __ret_0_allowance;
[L2074]              havoc _to_s160;
[L2075]              havoc _value_s160;
[L2076]              havoc _from_s200;
[L2077]              havoc _to_s200;
[L2078]              havoc _value_s200;
[L2079]              havoc success_s200;
[L2080]              havoc _spender_s221;
[L2081]              havoc _value_s221;
[L2082]              havoc success_s221;
[L2083]              havoc _spender_s259;
[L2084]              havoc _value_s259;
[L2085]              havoc _extraData_s259;
[L2086]              havoc success_s259;
[L2087]              havoc _value_s295;
[L2088]              havoc success_s295;
[L2089]              havoc _from_s350;
[L2090]              havoc _value_s350;
[L2091]              havoc success_s350;
[L2092]              havoc tmpNow;
[L2093]              havoc gas;
[L2094]              assume gas > 4000000 && gas <= 8000000;
[L2095]              tmpNow := now;
[L2096]              havoc now;
[L2097]              assume now > tmpNow;
[L2098]              assume msgsender_MSG != null;
[L2099]              assume DType[msgsender_MSG] != tokenRecipient;
[L2100]              assume DType[msgsender_MSG] != ZXL;
[L2101]              Alloc[msgsender_MSG] := true;
[L2102]  COND FALSE  !(choice == 12)
[L2108]  COND FALSE  !(choice == 11)
[L2114]  COND FALSE  !(choice == 10)
[L2120]  COND FALSE  !(choice == 9)
[L2126]  COND FALSE  !(choice == 8)
[L2132]  COND FALSE  !(choice == 7)
[L2138]  COND TRUE   choice == 6
[L2139]              gas := gas - 21000;
[L2140]  COND TRUE   gas >= 0
[L2141]              assume _value_s160 >= 0 && _value_s160 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2142]              assume msgvalue_MSG == 0;
[L2143]  CALL        call transfer~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s160 && _value_s160 > balanceOf_ZXL[this][msgsender_MSG]) && _value_s160 >= 0) && _value_s160 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s160] >= 0) && balanceOf_ZXL[this][_to_s160] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][msgsender_MSG] >= 0) && balanceOf_ZXL[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ZXL0 := true;
[L2]                 call_transfer_ZXL0 := false;
[L2]                 revert := revert_hold;
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call transfer~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L1275]  CALL        call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s160, _value_s160);
[L1241]              __var_1 := null;
[L1242]  COND FALSE  !(!(_to_s145 != null))
[L1246]  COND FALSE  !(!(balanceOf_ZXL[this][_from_s145] >= _value_s145))
[L1250]  COND FALSE  !(!((balanceOf_ZXL[this][_to_s145] + _value_s145) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_ZXL[this][_to_s145]))
[L1254]              previousBalances_s145 := (balanceOf_ZXL[this][_from_s145] + balanceOf_ZXL[this][_to_s145]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1255]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][_from_s145];
[L1256]              balanceOf_ZXL[this][_from_s145] := (balanceOf_ZXL[this][_from_s145] - _value_s145) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1257]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][_from_s145];
[L1258]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][_to_s145];
[L1259]              balanceOf_ZXL[this][_to_s145] := (balanceOf_ZXL[this][_to_s145] + _value_s145) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1260]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][_to_s145];
[L1261]              assert { :EventEmitted "Transfer_ZXL" } true;
[L1262]              assert (balanceOf_ZXL[this][_from_s145] + balanceOf_ZXL[this][_to_s145]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s145;
[L1275]  RET         call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s160, _value_s160);
[L1276]  COND FALSE  !(revert)
[L227]   RET         call transfer~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L228]               assume !revert && gas >= 0;
[L2143]  RET         call transfer~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L2198]  RET         call CorralChoice_ZXL(this);

Loop:
[L2198]  CALL        call CorralChoice_ZXL(this);
[L2062]              havoc msgsender_MSG;
[L2063]              havoc msgvalue_MSG;
[L2064]              havoc choice;
[L2065]              havoc __ret_0_name;
[L2066]              havoc __ret_0_symbol;
[L2067]              havoc __ret_0_decimals;
[L2068]              havoc __ret_0_totalSupply;
[L2069]              havoc arg353_s0;
[L2070]              havoc __ret_0_balanceOf;
[L2071]              havoc arg354_s0;
[L2072]              havoc arg355_s0;
[L2073]              havoc __ret_0_allowance;
[L2074]              havoc _to_s160;
[L2075]              havoc _value_s160;
[L2076]              havoc _from_s200;
[L2077]              havoc _to_s200;
[L2078]              havoc _value_s200;
[L2079]              havoc success_s200;
[L2080]              havoc _spender_s221;
[L2081]              havoc _value_s221;
[L2082]              havoc success_s221;
[L2083]              havoc _spender_s259;
[L2084]              havoc _value_s259;
[L2085]              havoc _extraData_s259;
[L2086]              havoc success_s259;
[L2087]              havoc _value_s295;
[L2088]              havoc success_s295;
[L2089]              havoc _from_s350;
[L2090]              havoc _value_s350;
[L2091]              havoc success_s350;
[L2092]              havoc tmpNow;
[L2093]              havoc gas;
[L2094]              assume gas > 4000000 && gas <= 8000000;
[L2095]              tmpNow := now;
[L2096]              havoc now;
[L2097]              assume now > tmpNow;
[L2098]              assume msgsender_MSG != null;
[L2099]              assume DType[msgsender_MSG] != tokenRecipient;
[L2100]              assume DType[msgsender_MSG] != ZXL;
[L2101]              Alloc[msgsender_MSG] := true;
[L2102]  COND FALSE  !(choice == 12)
[L2108]  COND FALSE  !(choice == 11)
[L2114]  COND FALSE  !(choice == 10)
[L2120]  COND FALSE  !(choice == 9)
[L2126]  COND FALSE  !(choice == 8)
[L2132]  COND FALSE  !(choice == 7)
[L2138]  COND TRUE   choice == 6
[L2139]              gas := gas - 21000;
[L2140]  COND TRUE   gas >= 0
[L2141]              assume _value_s160 >= 0 && _value_s160 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2142]              assume msgvalue_MSG == 0;
[L2143]  CALL        call transfer~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s160 && _value_s160 > balanceOf_ZXL[this][msgsender_MSG]) && _value_s160 >= 0) && _value_s160 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s160] >= 0) && balanceOf_ZXL[this][_to_s160] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][msgsender_MSG] >= 0) && balanceOf_ZXL[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ZXL0 := true;
[L2]                 call_transfer_ZXL0 := false;
[L2]                 revert := revert_hold;
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call transfer~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L1275]  CALL        call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s160, _value_s160);
[L1241]              __var_1 := null;
[L1242]  COND FALSE  !(!(_to_s145 != null))
[L1246]  COND FALSE  !(!(balanceOf_ZXL[this][_from_s145] >= _value_s145))
[L1250]  COND FALSE  !(!((balanceOf_ZXL[this][_to_s145] + _value_s145) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_ZXL[this][_to_s145]))
[L1254]              previousBalances_s145 := (balanceOf_ZXL[this][_from_s145] + balanceOf_ZXL[this][_to_s145]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1255]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][_from_s145];
[L1256]              balanceOf_ZXL[this][_from_s145] := (balanceOf_ZXL[this][_from_s145] - _value_s145) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1257]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][_from_s145];
[L1258]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][_to_s145];
[L1259]              balanceOf_ZXL[this][_to_s145] := (balanceOf_ZXL[this][_to_s145] + _value_s145) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1260]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][_to_s145];
[L1261]              assert { :EventEmitted "Transfer_ZXL" } true;
[L1262]              assert (balanceOf_ZXL[this][_from_s145] + balanceOf_ZXL[this][_to_s145]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s145;
[L1275]  RET         call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s160, _value_s160);
[L1276]  COND FALSE  !(revert)
[L227]   RET         call transfer~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L228]               assume !revert && gas >= 0;
[L2143]  RET         call transfer~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _to_s160, _value_s160);
[L2198]  RET         call CorralChoice_ZXL(this);

[2020-11-25 11:38:30,739 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:38:30,739 INFO  L82        PathProgramCache]: Analyzing trace with hash -179425583, now seen corresponding path program 1 times
[2020-11-25 11:38:30,740 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:38:30,754 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:38:30,822 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:38:30,823 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:38:30,823 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 11:38:30,823 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:38:30,823 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 11:38:30,823 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=12, Invalid=30, Unknown=0, NotChecked=0, Total=42
[2020-11-25 11:38:30,824 INFO  L87              Difference]: Start difference. First operand 1539 states and 1668 transitions. cyclomatic complexity: 131 Second operand 7 states.
[2020-11-25 11:38:31,308 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:38:31,308 INFO  L93              Difference]: Finished difference Result 891 states and 950 transitions.
[2020-11-25 11:38:31,308 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 11:38:31,308 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 891 states and 950 transitions.
[2020-11-25 11:38:31,313 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 11:38:31,313 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 891 states to 0 states and 0 transitions.
[2020-11-25 11:38:31,313 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 11:38:31,313 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 11:38:31,313 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 11:38:31,313 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:38:31,313 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:38:31,313 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:38:31,314 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:38:31,314 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 11:38:31,314 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 11:38:31,314 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 11:38:31,314 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 11:38:31,318 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:38:31 BasicIcfg
[2020-11-25 11:38:31,318 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 11:38:31,319 INFO  L168              Benchmark]: Toolchain (without parser) took 3179.36 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 242.7 MB). Free memory was 940.6 MB in the beginning and 824.5 MB in the end (delta: 116.1 MB). Peak memory consumption was 358.8 MB. Max. memory is 15.3 GB.
[2020-11-25 11:38:31,320 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.11 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:38:31,320 INFO  L168              Benchmark]: Boogie Preprocessor took 65.13 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:38:31,321 INFO  L168              Benchmark]: UtopiaSpecLang took 44.94 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:38:31,321 INFO  L168              Benchmark]: Boogie Printer took 9.93 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:38:31,322 INFO  L168              Benchmark]: RCFGBuilder took 515.26 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.7 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
[2020-11-25 11:38:31,322 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.34 ms. Allocated memory is still 1.0 GB. Free memory was 870.7 MB in the beginning and 867.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 11:38:31,322 INFO  L168              Benchmark]: BÃ¼chi Program Product took 925.42 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.2 MB). Free memory was 867.2 MB in the beginning and 879.6 MB in the end (delta: -12.5 MB). Peak memory consumption was 151.2 MB. Max. memory is 15.3 GB.
[2020-11-25 11:38:31,323 INFO  L168              Benchmark]: BlockEncodingV2 took 70.01 ms. Allocated memory is still 1.1 GB. Free memory was 879.6 MB in the beginning and 848.3 MB in the end (delta: 31.4 MB). Peak memory consumption was 31.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:38:31,323 INFO  L168              Benchmark]: BuchiAutomizer took 1509.85 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 183.5 MB). Free memory was 848.3 MB in the beginning and 824.5 MB in the end (delta: 23.8 MB). Peak memory consumption was 207.3 MB. Max. memory is 15.3 GB.
[2020-11-25 11:38:31,326 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1910 locations, 3191 edges
  - StatisticsResult: Encoded RCFG
    1850 locations, 3063 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.11 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 65.13 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 44.94 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 9.93 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 515.26 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.7 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.34 ms. Allocated memory is still 1.0 GB. Free memory was 870.7 MB in the beginning and 867.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 925.42 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.2 MB). Free memory was 867.2 MB in the beginning and 879.6 MB in the end (delta: -12.5 MB). Peak memory consumption was 151.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 70.01 ms. Allocated memory is still 1.1 GB. Free memory was 879.6 MB in the beginning and 848.3 MB in the end (delta: 31.4 MB). Peak memory consumption was 31.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1509.85 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 183.5 MB). Free memory was 848.3 MB in the beginning and 824.5 MB in the end (delta: 23.8 MB). Peak memory consumption was 207.3 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    822 locations, 993 edges
  - StatisticsResult: BuchiProgram size
    1910 locations, 3191 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 7 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.4s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.2s. Construction of modules took 0.5s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 3 MinimizatonAttempts, 283 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1539 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 5935 SDtfs, 2989 SDslu, 12081 SDs, 0 SdLazy, 2680 SolverSat, 810 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.5s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_ZXL0) ==> ( <>(fail_transfer_ZXL0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
