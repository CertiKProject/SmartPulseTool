This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 03:25:23,373 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 03:25:23,374 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 03:25:23,381 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 03:25:23,381 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 03:25:23,382 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 03:25:23,383 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 03:25:23,384 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 03:25:23,385 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 03:25:23,385 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 03:25:23,386 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 03:25:23,386 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 03:25:23,387 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 03:25:23,387 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 03:25:23,388 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 03:25:23,389 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 03:25:23,389 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 03:25:23,391 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 03:25:23,392 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 03:25:23,393 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 03:25:23,394 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 03:25:23,395 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 03:25:23,397 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 03:25:23,397 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 03:25:23,397 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 03:25:23,398 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 03:25:23,398 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 03:25:23,399 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 03:25:23,399 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 03:25:23,399 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 03:25:23,400 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 03:25:23,400 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 03:25:23,401 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 03:25:23,401 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 03:25:23,402 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 03:25:23,402 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 03:25:23,402 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 03:25:23,402 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 03:25:23,402 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 03:25:23,403 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 03:25:23,403 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 03:25:23,403 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 03:25:23,409 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 03:25:23,409 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 03:25:23,410 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 03:25:23,410 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 03:25:23,410 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 03:25:23,410 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 03:25:23,410 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 03:25:23,410 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 03:25:23,410 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 03:25:23,410 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 03:25:23,410 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 03:25:23,410 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 03:25:23,410 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 03:25:23,410 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 03:25:23,411 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 03:25:23,411 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 03:25:23,411 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 03:25:23,411 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 03:25:23,411 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 03:25:23,411 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 03:25:23,411 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 03:25:23,411 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 03:25:23,411 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 03:25:23,411 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 03:25:23,411 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 03:25:23,411 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 03:25:23,430 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 03:25:23,443 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 03:25:23,448 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 03:25:23,449 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 03:25:23,449 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 03:25:23,450 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl
[2020-11-25 03:25:23,450 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl'
[2020-11-25 03:25:23,550 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 03:25:23,551 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 03:25:23,552 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 03:25:23,552 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 03:25:23,552 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 03:25:23,577 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:25:23" (1/1) ...
[2020-11-25 03:25:23,578 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:25:23" (1/1) ...
[2020-11-25 03:25:23,613 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:25:23" (1/1) ...
[2020-11-25 03:25:23,614 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:25:23" (1/1) ...
[2020-11-25 03:25:23,640 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:25:23" (1/1) ...
[2020-11-25 03:25:23,653 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:25:23" (1/1) ...
[2020-11-25 03:25:23,663 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:25:23" (1/1) ...
[2020-11-25 03:25:23,677 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 03:25:23,677 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 03:25:23,677 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 03:25:23,679 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 03:25:23,683 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:25:23" (1/1) ...
[2020-11-25 03:25:23,701 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20Pausable.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20Pausable.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && mintStopped_RariToken[this] == old(mintStopped_RariToken[this]) && _paused_Pausable[this] == old(_paused_Pausable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 03:25:23,707 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20Pausable.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20Pausable.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && mintStopped_RariToken[this] == old(mintStopped_RariToken[this]) && _paused_Pausable[this] == old(_paused_Pausable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 03:25:23,714 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20Pausable.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20Pausable.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && mintStopped_RariToken[this] == old(mintStopped_RariToken[this]) && _paused_Pausable[this] == old(_paused_Pausable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 03:25:23,723 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=to_s841 ) && msg.sender!=to_s841 ) && value_s841<=_balances_ERC20[this][msg.sender] ) && ( _balances_ERC20[this][to_s841] + value_s841 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && value_s841>=0 ) && value_s841<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s841]>=0 ) && _balances_ERC20[this][to_s841]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>],IdentifierExpression[to_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[to_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],IdentifierExpression[value_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[to_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[to_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 03:25:23,726 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( __ret_0_==true && _balances_ERC20[this][msg.sender]==( ( old(_balances_ERC20[this][msg.sender]) ) - value_s841 ) ) && _balances_ERC20[this][to_s841]==( ( old(_balances_ERC20[this][to_s841]) ) + value_s841 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _allowances_ERC20[this]==( old(_allowances_ERC20[this]) ) ) && _balances_ERC20[this][p1]==( old(_balances_ERC20[this][p1]) ) ) && mintStopped_RariToken[this]==( old(mintStopped_RariToken[this]) ) ) && _paused_Pausable[this]==( old(_paused_Pausable[this]) ) ) && _owner_Ownable[this]==( old(_owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ERC20Pausable>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]],IdentifierExpression[value_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[to_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[to_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]],IdentifierExpression[value_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[mintStopped_RariToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[mintStopped_RariToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]]]]
[2020-11-25 03:25:23,732 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20Pausable.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20Pausable.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && mintStopped_RariToken[this] == old(mintStopped_RariToken[this]) && _paused_Pausable[this] == old(_paused_Pausable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 03:25:23,732 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC20Pausable0) ==> ( <>AP(success_transfer_ERC20Pausable0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 03:25:23,744 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:25:23 PropertyContainer
[2020-11-25 03:25:23,744 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 03:25:23,745 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 03:25:23,745 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 03:25:23,745 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 03:25:23,746 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:25:23" (1/2) ...
[2020-11-25 03:25:23,746 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 03:25:23,746 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 03:25:23,767 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:25:23" (2/2) ...
[2020-11-25 03:25:23,767 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 03:25:23,767 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 03:25:23,767 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 03:25:23,767 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 03:25:23,768 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:25:23" (1/2) ...
[2020-11-25 03:25:23,820 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 03:25:23,820 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-25 03:25:23,820 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-25 03:25:23,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-25 03:25:23,820 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-25 03:25:23,821 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 03:25:23,821 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 03:25:23,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 03:25:23,821 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 03:25:23,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 03:25:23,821 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable
[2020-11-25 03:25:23,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable
[2020-11-25 03:25:23,821 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_Ownable
[2020-11-25 03:25:23,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_Ownable
[2020-11-25 03:25:23,822 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 03:25:23,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 03:25:23,822 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__success
[2020-11-25 03:25:23,822 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-25 03:25:23,823 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable
[2020-11-25 03:25:23,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable
[2020-11-25 03:25:23,823 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable
[2020-11-25 03:25:23,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable
[2020-11-25 03:25:23,823 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable
[2020-11-25 03:25:23,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable
[2020-11-25 03:25:23,823 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable
[2020-11-25 03:25:23,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable
[2020-11-25 03:25:23,823 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 03:25:23,823 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 03:25:23,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 03:25:23,824 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 03:25:23,824 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 03:25:23,824 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 03:25:23,824 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 03:25:23,824 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 03:25:23,824 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 03:25:23,824 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 03:25:23,824 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 03:25:23,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 03:25:23,824 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 03:25:23,825 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 03:25:23,825 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 03:25:23,825 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 03:25:23,825 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 03:25:23,825 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 03:25:23,825 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 03:25:23,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 03:25:23,825 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 03:25:23,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 03:25:23,825 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 03:25:23,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 03:25:23,826 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 03:25:23,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 03:25:23,826 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 03:25:23,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 03:25:23,826 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 03:25:23,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 03:25:23,826 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 03:25:23,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 03:25:23,826 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 03:25:23,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 03:25:23,827 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 03:25:23,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 03:25:23,827 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 03:25:23,827 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 03:25:23,827 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 03:25:23,827 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 03:25:23,827 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 03:25:23,827 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Pausable_ERC20Pausable_NoBaseCtor__success
[2020-11-25 03:25:23,827 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Pausable_ERC20Pausable
[2020-11-25 03:25:23,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Pausable_ERC20Pausable
[2020-11-25 03:25:23,828 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable
[2020-11-25 03:25:23,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable
[2020-11-25 03:25:23,828 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable
[2020-11-25 03:25:23,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable
[2020-11-25 03:25:23,828 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Pausable
[2020-11-25 03:25:23,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20Pausable
[2020-11-25 03:25:23,828 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20Pausable
[2020-11-25 03:25:23,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20Pausable
[2020-11-25 03:25:23,828 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20Pausable
[2020-11-25 03:25:23,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20Pausable
[2020-11-25 03:25:23,829 INFO  L130     BoogieDeclarations]: Found specification of procedure RariToken_RariToken_NoBaseCtor__success
[2020-11-25 03:25:23,829 INFO  L130     BoogieDeclarations]: Found specification of procedure RariToken_RariToken
[2020-11-25 03:25:23,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure RariToken_RariToken
[2020-11-25 03:25:23,829 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_RariToken
[2020-11-25 03:25:23,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_RariToken
[2020-11-25 03:25:23,829 INFO  L130     BoogieDeclarations]: Found specification of procedure stopMint_RariToken
[2020-11-25 03:25:23,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopMint_RariToken
[2020-11-25 03:25:23,829 INFO  L130     BoogieDeclarations]: Found specification of procedure name_RariToken
[2020-11-25 03:25:23,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_RariToken
[2020-11-25 03:25:23,829 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_RariToken
[2020-11-25 03:25:23,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_RariToken
[2020-11-25 03:25:23,830 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_RariToken
[2020-11-25 03:25:23,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_RariToken
[2020-11-25 03:25:23,830 INFO  L130     BoogieDeclarations]: Found specification of procedure mintStopped_RariToken
[2020-11-25 03:25:23,830 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintStopped_RariToken
[2020-11-25 03:25:23,830 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 03:25:23,830 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 03:25:23,830 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 03:25:23,830 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 03:25:23,830 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__success
[2020-11-25 03:25:23,830 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__success
[2020-11-25 03:25:23,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-25 03:25:23,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-25 03:25:23,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 03:25:23,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 03:25:23,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Pausable
[2020-11-25 03:25:23,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Pausable
[2020-11-25 03:25:23,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 03:25:23,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 03:25:23,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 03:25:23,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 03:25:23,832 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 03:25:23,832 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 03:25:23,832 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Pausable
[2020-11-25 03:25:23,832 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Pausable
[2020-11-25 03:25:23,832 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_RariToken
[2020-11-25 03:25:23,832 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 03:25:23,832 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 03:25:23,832 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 03:25:23,832 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-25 03:25:23,832 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-25 03:25:23,833 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-25 03:25:23,833 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 03:25:23,833 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 03:25:23,833 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 03:25:23,833 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 03:25:23,833 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 03:25:23,833 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__success
[2020-11-25 03:25:23,833 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__fail
[2020-11-25 03:25:23,833 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_Ownable__success
[2020-11-25 03:25:23,833 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_Ownable__fail
[2020-11-25 03:25:23,833 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 03:25:23,834 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 03:25:23,834 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 03:25:23,834 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-25 03:25:23,834 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__success
[2020-11-25 03:25:23,834 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__fail
[2020-11-25 03:25:23,834 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__success
[2020-11-25 03:25:23,834 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__fail
[2020-11-25 03:25:23,834 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__success
[2020-11-25 03:25:23,834 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__fail
[2020-11-25 03:25:23,835 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__success
[2020-11-25 03:25:23,835 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__fail
[2020-11-25 03:25:23,835 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 03:25:23,835 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 03:25:23,835 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 03:25:23,835 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 03:25:23,835 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 03:25:23,835 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 03:25:23,835 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 03:25:23,835 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 03:25:23,836 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 03:25:23,836 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 03:25:23,836 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 03:25:23,836 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 03:25:23,836 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 03:25:23,836 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 03:25:23,836 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 03:25:23,836 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 03:25:23,836 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 03:25:23,836 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 03:25:23,837 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 03:25:23,837 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 03:25:23,837 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 03:25:23,837 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 03:25:23,837 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 03:25:23,837 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 03:25:23,837 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 03:25:23,837 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 03:25:23,837 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 03:25:23,837 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 03:25:23,837 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 03:25:23,838 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 03:25:23,838 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 03:25:23,838 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 03:25:23,838 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 03:25:23,838 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 03:25:23,838 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 03:25:23,838 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Pausable_ERC20Pausable_NoBaseCtor__fail
[2020-11-25 03:25:23,838 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Pausable_ERC20Pausable__success
[2020-11-25 03:25:23,838 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Pausable_ERC20Pausable__fail
[2020-11-25 03:25:23,838 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable__success
[2020-11-25 03:25:23,838 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable__fail
[2020-11-25 03:25:23,839 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable__success
[2020-11-25 03:25:23,839 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable__fail
[2020-11-25 03:25:23,839 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Pausable__success
[2020-11-25 03:25:23,839 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Pausable__fail
[2020-11-25 03:25:23,839 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20Pausable__success
[2020-11-25 03:25:23,839 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20Pausable__fail
[2020-11-25 03:25:23,839 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20Pausable__success
[2020-11-25 03:25:23,839 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20Pausable__fail
[2020-11-25 03:25:23,839 INFO  L130     BoogieDeclarations]: Found specification of procedure RariToken_RariToken_NoBaseCtor__fail
[2020-11-25 03:25:23,839 INFO  L130     BoogieDeclarations]: Found specification of procedure RariToken_RariToken__success
[2020-11-25 03:25:23,839 INFO  L130     BoogieDeclarations]: Found specification of procedure RariToken_RariToken__fail
[2020-11-25 03:25:23,839 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_RariToken__success
[2020-11-25 03:25:23,840 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_RariToken__fail
[2020-11-25 03:25:23,840 INFO  L130     BoogieDeclarations]: Found specification of procedure stopMint_RariToken__success
[2020-11-25 03:25:23,840 INFO  L130     BoogieDeclarations]: Found specification of procedure stopMint_RariToken__fail
[2020-11-25 03:25:23,840 INFO  L130     BoogieDeclarations]: Found specification of procedure name_RariToken__success
[2020-11-25 03:25:23,840 INFO  L130     BoogieDeclarations]: Found specification of procedure name_RariToken__fail
[2020-11-25 03:25:23,840 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_RariToken__success
[2020-11-25 03:25:23,840 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_RariToken__fail
[2020-11-25 03:25:23,840 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_RariToken__success
[2020-11-25 03:25:23,840 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_RariToken__fail
[2020-11-25 03:25:23,840 INFO  L130     BoogieDeclarations]: Found specification of procedure mintStopped_RariToken__success
[2020-11-25 03:25:23,840 INFO  L130     BoogieDeclarations]: Found specification of procedure mintStopped_RariToken__fail
[2020-11-25 03:25:23,840 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 03:25:23,840 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 03:25:23,841 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 03:25:23,841 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 03:25:23,841 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__fail
[2020-11-25 03:25:23,841 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__fail
[2020-11-25 03:25:23,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 03:25:23,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 03:25:23,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 03:25:23,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-25 03:25:23,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-25 03:25:23,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-25 03:25:23,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-25 03:25:23,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-25 03:25:23,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 03:25:23,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 03:25:23,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 03:25:23,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 03:25:23,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 03:25:23,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 03:25:23,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__fail
[2020-11-25 03:25:23,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__success
[2020-11-25 03:25:23,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_Ownable__fail
[2020-11-25 03:25:23,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_Ownable__success
[2020-11-25 03:25:23,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 03:25:23,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 03:25:23,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 03:25:23,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__success
[2020-11-25 03:25:23,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-25 03:25:23,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-25 03:25:23,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__fail
[2020-11-25 03:25:23,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__success
[2020-11-25 03:25:23,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__fail
[2020-11-25 03:25:23,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__success
[2020-11-25 03:25:23,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__fail
[2020-11-25 03:25:23,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__success
[2020-11-25 03:25:23,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__fail
[2020-11-25 03:25:23,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__success
[2020-11-25 03:25:23,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 03:25:23,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 03:25:23,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 03:25:23,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 03:25:23,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 03:25:23,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 03:25:23,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 03:25:23,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 03:25:23,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 03:25:23,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 03:25:23,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 03:25:23,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 03:25:23,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 03:25:23,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 03:25:23,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 03:25:23,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 03:25:23,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 03:25:23,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 03:25:23,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 03:25:23,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 03:25:23,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 03:25:23,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 03:25:23,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 03:25:23,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 03:25:23,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 03:25:23,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 03:25:23,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 03:25:23,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 03:25:23,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 03:25:23,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 03:25:23,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 03:25:23,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 03:25:23,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 03:25:23,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 03:25:23,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 03:25:23,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 03:25:23,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 03:25:23,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 03:25:23,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 03:25:23,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 03:25:23,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 03:25:23,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 03:25:23,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 03:25:23,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 03:25:23,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 03:25:23,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 03:25:23,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 03:25:23,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 03:25:23,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Pausable_ERC20Pausable_NoBaseCtor__fail
[2020-11-25 03:25:23,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Pausable_ERC20Pausable_NoBaseCtor__success
[2020-11-25 03:25:23,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Pausable_ERC20Pausable__fail
[2020-11-25 03:25:23,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Pausable_ERC20Pausable__success
[2020-11-25 03:25:23,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable__fail
[2020-11-25 03:25:23,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable__success
[2020-11-25 03:25:23,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable__fail
[2020-11-25 03:25:23,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable__success
[2020-11-25 03:25:23,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20Pausable__fail
[2020-11-25 03:25:23,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20Pausable__success
[2020-11-25 03:25:23,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20Pausable__fail
[2020-11-25 03:25:23,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20Pausable__success
[2020-11-25 03:25:23,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20Pausable__fail
[2020-11-25 03:25:23,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20Pausable__success
[2020-11-25 03:25:23,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure RariToken_RariToken_NoBaseCtor__fail
[2020-11-25 03:25:23,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure RariToken_RariToken_NoBaseCtor__success
[2020-11-25 03:25:23,849 INFO  L138     BoogieDeclarations]: Found implementation of procedure RariToken_RariToken__fail
[2020-11-25 03:25:23,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure RariToken_RariToken__success
[2020-11-25 03:25:23,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_RariToken__fail
[2020-11-25 03:25:23,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_RariToken__success
[2020-11-25 03:25:23,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopMint_RariToken__fail
[2020-11-25 03:25:23,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopMint_RariToken__success
[2020-11-25 03:25:23,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_RariToken__fail
[2020-11-25 03:25:23,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_RariToken__success
[2020-11-25 03:25:23,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_RariToken__fail
[2020-11-25 03:25:23,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_RariToken__success
[2020-11-25 03:25:23,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_RariToken__fail
[2020-11-25 03:25:23,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_RariToken__success
[2020-11-25 03:25:23,850 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintStopped_RariToken__fail
[2020-11-25 03:25:23,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintStopped_RariToken__success
[2020-11-25 03:25:23,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 03:25:23,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 03:25:23,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 03:25:23,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 03:25:23,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 03:25:23,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 03:25:23,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 03:25:23,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 03:25:23,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__fail
[2020-11-25 03:25:23,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__success
[2020-11-25 03:25:23,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__fail
[2020-11-25 03:25:23,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__success
[2020-11-25 03:25:23,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-25 03:25:23,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-25 03:25:23,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 03:25:23,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 03:25:23,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Pausable
[2020-11-25 03:25:23,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Pausable
[2020-11-25 03:25:23,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 03:25:23,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 03:25:23,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 03:25:23,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 03:25:23,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 03:25:23,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 03:25:23,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Pausable
[2020-11-25 03:25:23,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Pausable
[2020-11-25 03:25:23,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_RariToken
[2020-11-25 03:25:23,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 03:25:23,853 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 03:25:23,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 03:25:24,375 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 03:25:24,440 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 03:25:24,441 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 03:25:24,441 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 03:25:24,774 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 03:25:24,774 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-25 03:25:24,777 INFO  L202        PluginConnector]: Adding new model RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:25:24 BoogieIcfgContainer
[2020-11-25 03:25:24,777 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:25:23" (2/2) ...
[2020-11-25 03:25:24,777 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 03:25:24,777 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@466120d2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:25:24, skipping insertion in model container
[2020-11-25 03:25:24,777 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 03:25:24,777 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 03:25:24,777 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 03:25:24,779 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 03:25:24,779 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:25:23" (1/3) ...
[2020-11-25 03:25:24,779 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2cafb494 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:25:24, skipping insertion in model container
[2020-11-25 03:25:24,779 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:25:23" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 03:25:24,817 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:25:24 NWAContainer
[2020-11-25 03:25:24,817 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 03:25:24,818 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 03:25:24,818 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 03:25:24,819 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 03:25:24,820 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:25:24" (3/4) ...
[2020-11-25 03:25:24,822 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@323f9d0e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:25:24, skipping insertion in model container
[2020-11-25 03:25:24,822 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:25:24" (4/4) ...
[2020-11-25 03:25:24,826 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 03:25:24,832 INFO  L110   BuchiProductObserver]: Initial RCFG 2842 locations, 4273 edges
[2020-11-25 03:25:24,832 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 03:25:24,844 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 03:25:26,620 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 03:25:26,630 INFO  L110   BuchiProductObserver]: BuchiProgram size 7470 locations, 14051 edges
[2020-11-25 03:25:26,630 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:25:26 BoogieIcfgContainer
[2020-11-25 03:25:26,630 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 03:25:26,630 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 03:25:26,630 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 03:25:26,632 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 03:25:26,632 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:25:26" (1/1) ...
[2020-11-25 03:25:26,764 INFO  L313           BlockEncoder]: Initial Icfg 7470 locations, 14051 edges
[2020-11-25 03:25:26,764 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 03:25:26,764 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 03:25:26,765 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 03:25:26,765 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 03:25:26,784 INFO  L70    emoveInfeasibleEdges]: Removed 243 edges and 19 locations because of local infeasibility
[2020-11-25 03:25:26,799 INFO  L70        RemoveSinkStates]: Removed 164 edges and 109 locations by removing sink states
[2020-11-25 03:25:26,819 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 03:25:26,825 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 03:25:26,831 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 03:25:26,831 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 03:25:26,835 INFO  L313           BlockEncoder]: Encoded RCFG 7308 locations, 13594 edges
[2020-11-25 03:25:26,836 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:25:26 BasicIcfg
[2020-11-25 03:25:26,836 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 03:25:26,836 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 03:25:26,836 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 03:25:26,838 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 03:25:26,838 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 03:25:26,838 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:25:23" (1/6) ...
[2020-11-25 03:25:26,840 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@16824054 and model type RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:25:26, skipping insertion in model container
[2020-11-25 03:25:26,840 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 03:25:26,840 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:25:23" (2/6) ...
[2020-11-25 03:25:26,840 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@16824054 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:25:26, skipping insertion in model container
[2020-11-25 03:25:26,840 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 03:25:26,840 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:25:24" (3/6) ...
[2020-11-25 03:25:26,840 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@16824054 and model type RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:25:26, skipping insertion in model container
[2020-11-25 03:25:26,840 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 03:25:26,840 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:25:24" (4/6) ...
[2020-11-25 03:25:26,840 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@16824054 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:25:26, skipping insertion in model container
[2020-11-25 03:25:26,841 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 03:25:26,841 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:25:26" (5/6) ...
[2020-11-25 03:25:26,841 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@16824054 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 03:25:26, skipping insertion in model container
[2020-11-25 03:25:26,841 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 03:25:26,841 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:25:26" (6/6) ...
[2020-11-25 03:25:26,842 INFO  L404   chiAutomizerObserver]: Analyzing ICFG RariToken_0xfca59cd816ab1ead66534d82bc21e7515ce441cf_transfer-normal.bpl_BEv2
[2020-11-25 03:25:26,873 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 03:25:26,873 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 03:25:26,873 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 03:25:26,873 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 03:25:26,873 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 03:25:26,873 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 03:25:26,873 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 03:25:26,873 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 03:25:26,873 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 03:25:26,928 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7308 states.
[2020-11-25 03:25:26,991 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 03:25:26,991 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 03:25:26,991 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 03:25:26,998 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 03:25:26,998 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 03:25:26,998 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 03:25:26,998 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7308 states.
[2020-11-25 03:25:27,030 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 03:25:27,031 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 03:25:27,031 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 03:25:27,032 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 03:25:27,032 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC20Pausable0 := false;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7437]              assume null == 0;
[L7438]  CALL        call this := FreshRefGenerator__success();
[L2891]              havoc newRef;
[L2892]              assume Alloc[newRef] == false;
[L2893]              Alloc[newRef] := true;
[L2894]              assume newRef != null;
[L7438]  RET         call this := FreshRefGenerator__success();
[L7439]              assume now >= 0;
[L7440]              assume DType[this] == RariToken;
[L7441]              assume msgvalue_MSG == 0;
[L7442]              gas := gas - 53000;
[L7443]  CALL        call RariToken_RariToken(this, msgsender_MSG, msgvalue_MSG);
[L1725]              havoc __exception;
[L1726]              revert := false;
[L1727]  COND FALSE  !(__exception)
[L1751]  CALL        call RariToken_RariToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4976]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L4976]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4977]  COND TRUE   revert
[L1751]  RET         call RariToken_RariToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1752]              assume !revert && gas >= 0;
[L7443]  RET         call RariToken_RariToken(this, msgsender_MSG, msgvalue_MSG);
[L7444]              assume !revert && gas >= 0;

Loop:
[L7447]  CALL        call CorralChoice_RariToken(this);
[L7245]              havoc msgsender_MSG;
[L7246]              havoc msgvalue_MSG;
[L7247]              havoc choice;
[L7248]              havoc __ret_0_owner;
[L7249]              havoc __ret_0_isOwner;
[L7250]              havoc newOwner_s105;
[L7251]              havoc __ret_0_paused;
[L7252]              havoc __ret_0_totalSupply;
[L7253]              havoc account_s455;
[L7254]              havoc __ret_0_balanceOf;
[L7255]              havoc to_s841;
[L7256]              havoc value_s841;
[L7257]              havoc __ret_0_transfer;
[L7258]              havoc owner_s490;
[L7259]              havoc spender_s490;
[L7260]              havoc __ret_0_allowance;
[L7261]              havoc spender_s880;
[L7262]              havoc value_s880;
[L7263]              havoc __ret_0_approve;
[L7264]              havoc from_s862;
[L7265]              havoc to_s862;
[L7266]              havoc value_s862;
[L7267]              havoc __ret_0_transferFrom;
[L7268]              havoc spender_s898;
[L7269]              havoc addedValue_s898;
[L7270]              havoc __ret_0_increaseAllowance;
[L7271]              havoc spender_s916;
[L7272]              havoc subtractedValue_s916;
[L7273]              havoc __ret_0_decreaseAllowance;
[L7274]              havoc __ret_0_name;
[L7275]              havoc __ret_0_symbol;
[L7276]              havoc __ret_0_decimals;
[L7277]              havoc __ret_0_mintStopped;
[L7278]              havoc account_s960;
[L7279]              havoc amount_s960;
[L7280]              havoc __ret_0_mint;
[L7281]              havoc tmpNow;
[L7282]              havoc gas;
[L7283]              assume gas > 4000000 && gas <= 8000000;
[L7284]              tmpNow := now;
[L7285]              havoc now;
[L7286]              assume now > tmpNow;
[L7287]              assume msgsender_MSG != null;
[L7288]              assume DType[msgsender_MSG] != Context;
[L7289]              assume DType[msgsender_MSG] != Ownable;
[L7290]              assume DType[msgsender_MSG] != Pausable;
[L7291]              assume DType[msgsender_MSG] != IERC20;
[L7292]              assume DType[msgsender_MSG] != SafeMath;
[L7293]              assume DType[msgsender_MSG] != ERC20;
[L7294]              assume DType[msgsender_MSG] != ERC20Pausable;
[L7295]              assume DType[msgsender_MSG] != RariToken;
[L7296]              Alloc[msgsender_MSG] := true;
[L7297]  COND TRUE   choice == 21
[L7298]              gas := gas - 21000;
[L7299]  COND FALSE  !(gas >= 0)
[L7447]  RET         call CorralChoice_RariToken(this);

[2020-11-25 03:25:27,046 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 03:25:27,046 INFO  L82        PathProgramCache]: Analyzing trace with hash -757405681, now seen corresponding path program 1 times
[2020-11-25 03:25:27,050 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 03:25:27,070 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 03:25:27,108 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 03:25:27,110 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 03:25:27,111 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 03:25:27,516 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 03:25:27,524 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 03:25:27,525 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 03:25:27,526 INFO  L87              Difference]: Start difference. First operand 7308 states. Second operand 3 states.
[2020-11-25 03:25:27,898 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 03:25:27,898 INFO  L93              Difference]: Finished difference Result 4442 states and 5499 transitions.
[2020-11-25 03:25:27,898 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 03:25:27,899 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4442 states and 5499 transitions.
[2020-11-25 03:25:27,925 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 03:25:27,957 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4442 states to 4442 states and 5499 transitions.
[2020-11-25 03:25:27,958 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 03:25:27,961 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 939
[2020-11-25 03:25:27,962 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4442 states and 5499 transitions.
[2020-11-25 03:25:27,974 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 03:25:27,974 INFO  L728         BuchiCegarLoop]: Abstraction has 4442 states and 5499 transitions.
[2020-11-25 03:25:27,991 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4442 states and 5499 transitions.
[2020-11-25 03:25:28,057 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4442 to 4442.
[2020-11-25 03:25:28,058 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4442 states.
[2020-11-25 03:25:28,065 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4442 states to 4442 states and 5499 transitions.
[2020-11-25 03:25:28,066 INFO  L751         BuchiCegarLoop]: Abstraction has 4442 states and 5499 transitions.
[2020-11-25 03:25:28,066 INFO  L631         BuchiCegarLoop]: Abstraction has 4442 states and 5499 transitions.
[2020-11-25 03:25:28,066 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 03:25:28,066 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4442 states and 5499 transitions.
[2020-11-25 03:25:28,077 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 03:25:28,077 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 03:25:28,077 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 03:25:28,079 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 03:25:28,079 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC20Pausable0 := false;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7437]              assume null == 0;
[L7438]  CALL        call this := FreshRefGenerator__success();
[L2891]              havoc newRef;
[L2892]              assume Alloc[newRef] == false;
[L2893]              Alloc[newRef] := true;
[L2894]              assume newRef != null;
[L7438]  RET         call this := FreshRefGenerator__success();
[L7439]              assume now >= 0;
[L7440]              assume DType[this] == RariToken;
[L7441]              assume msgvalue_MSG == 0;
[L7442]              gas := gas - 53000;
[L7443]  CALL        call RariToken_RariToken(this, msgsender_MSG, msgvalue_MSG);
[L1725]              havoc __exception;
[L1726]              revert := false;
[L1727]  COND FALSE  !(__exception)
[L1751]  CALL        call RariToken_RariToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4976]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND TRUE   revert
[L4976]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4977]  COND TRUE   revert
[L1751]  RET         call RariToken_RariToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1752]              assume !revert && gas >= 0;
[L7443]  RET         call RariToken_RariToken(this, msgsender_MSG, msgvalue_MSG);
[L7444]              assume !revert && gas >= 0;
[L7447]  CALL        call CorralChoice_RariToken(this);
[L7245]              havoc msgsender_MSG;
[L7246]              havoc msgvalue_MSG;
[L7247]              havoc choice;
[L7248]              havoc __ret_0_owner;
[L7249]              havoc __ret_0_isOwner;
[L7250]              havoc newOwner_s105;
[L7251]              havoc __ret_0_paused;
[L7252]              havoc __ret_0_totalSupply;
[L7253]              havoc account_s455;
[L7254]              havoc __ret_0_balanceOf;
[L7255]              havoc to_s841;
[L7256]              havoc value_s841;
[L7257]              havoc __ret_0_transfer;
[L7258]              havoc owner_s490;
[L7259]              havoc spender_s490;
[L7260]              havoc __ret_0_allowance;
[L7261]              havoc spender_s880;
[L7262]              havoc value_s880;
[L7263]              havoc __ret_0_approve;
[L7264]              havoc from_s862;
[L7265]              havoc to_s862;
[L7266]              havoc value_s862;
[L7267]              havoc __ret_0_transferFrom;
[L7268]              havoc spender_s898;
[L7269]              havoc addedValue_s898;
[L7270]              havoc __ret_0_increaseAllowance;
[L7271]              havoc spender_s916;
[L7272]              havoc subtractedValue_s916;
[L7273]              havoc __ret_0_decreaseAllowance;
[L7274]              havoc __ret_0_name;
[L7275]              havoc __ret_0_symbol;
[L7276]              havoc __ret_0_decimals;
[L7277]              havoc __ret_0_mintStopped;
[L7278]              havoc account_s960;
[L7279]              havoc amount_s960;
[L7280]              havoc __ret_0_mint;
[L7281]              havoc tmpNow;
[L7282]              havoc gas;
[L7283]              assume gas > 4000000 && gas <= 8000000;
[L7284]              tmpNow := now;
[L7285]              havoc now;
[L7286]              assume now > tmpNow;
[L7287]              assume msgsender_MSG != null;
[L7288]              assume DType[msgsender_MSG] != Context;
[L7289]              assume DType[msgsender_MSG] != Ownable;
[L7290]              assume DType[msgsender_MSG] != Pausable;
[L7291]              assume DType[msgsender_MSG] != IERC20;
[L7292]              assume DType[msgsender_MSG] != SafeMath;
[L7293]              assume DType[msgsender_MSG] != ERC20;
[L7294]              assume DType[msgsender_MSG] != ERC20Pausable;
[L7295]              assume DType[msgsender_MSG] != RariToken;
[L7296]              Alloc[msgsender_MSG] := true;
[L7297]  COND FALSE  !(choice == 21)
[L7303]  COND FALSE  !(choice == 20)
[L7309]  COND FALSE  !(choice == 19)
[L7315]  COND FALSE  !(choice == 18)
[L7321]  COND FALSE  !(choice == 17)
[L7327]  COND FALSE  !(choice == 16)
[L7333]  COND FALSE  !(choice == 15)
[L7339]  COND FALSE  !(choice == 14)
[L7345]  COND FALSE  !(choice == 13)
[L7351]  COND TRUE   choice == 12
[L7352]              gas := gas - 21000;
[L7353]  COND TRUE   gas >= 0
[L7354]              assume value_s841 >= 0 && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7355]              assume msgvalue_MSG == 0;
[L7356]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s841) && msgsender_MSG != to_s841) && value_s841 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s841] + value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s841 >= 0) && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s841] >= 0) && _balances_ERC20[this][to_s841] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1413]              havoc __exception;
[L1414]              revert := false;
[L1415]  COND FALSE  !(__exception)
[L1439]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L4697]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L6534]  COND FALSE  !(!!_paused_Pausable[this])
[L4697]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4698]  COND TRUE   revert
[L1439]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L1440]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - value_s841) && _balances_ERC20[this][to_s841] == old(_balances_ERC20[this][to_s841]) + value_s841) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && mintStopped_RariToken[this] == old(mintStopped_RariToken[this])) && _paused_Pausable[this] == old(_paused_Pausable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L7356]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L7447]  RET         call CorralChoice_RariToken(this);

Loop:
[L7447]  CALL        call CorralChoice_RariToken(this);
[L7245]              havoc msgsender_MSG;
[L7246]              havoc msgvalue_MSG;
[L7247]              havoc choice;
[L7248]              havoc __ret_0_owner;
[L7249]              havoc __ret_0_isOwner;
[L7250]              havoc newOwner_s105;
[L7251]              havoc __ret_0_paused;
[L7252]              havoc __ret_0_totalSupply;
[L7253]              havoc account_s455;
[L7254]              havoc __ret_0_balanceOf;
[L7255]              havoc to_s841;
[L7256]              havoc value_s841;
[L7257]              havoc __ret_0_transfer;
[L7258]              havoc owner_s490;
[L7259]              havoc spender_s490;
[L7260]              havoc __ret_0_allowance;
[L7261]              havoc spender_s880;
[L7262]              havoc value_s880;
[L7263]              havoc __ret_0_approve;
[L7264]              havoc from_s862;
[L7265]              havoc to_s862;
[L7266]              havoc value_s862;
[L7267]              havoc __ret_0_transferFrom;
[L7268]              havoc spender_s898;
[L7269]              havoc addedValue_s898;
[L7270]              havoc __ret_0_increaseAllowance;
[L7271]              havoc spender_s916;
[L7272]              havoc subtractedValue_s916;
[L7273]              havoc __ret_0_decreaseAllowance;
[L7274]              havoc __ret_0_name;
[L7275]              havoc __ret_0_symbol;
[L7276]              havoc __ret_0_decimals;
[L7277]              havoc __ret_0_mintStopped;
[L7278]              havoc account_s960;
[L7279]              havoc amount_s960;
[L7280]              havoc __ret_0_mint;
[L7281]              havoc tmpNow;
[L7282]              havoc gas;
[L7283]              assume gas > 4000000 && gas <= 8000000;
[L7284]              tmpNow := now;
[L7285]              havoc now;
[L7286]              assume now > tmpNow;
[L7287]              assume msgsender_MSG != null;
[L7288]              assume DType[msgsender_MSG] != Context;
[L7289]              assume DType[msgsender_MSG] != Ownable;
[L7290]              assume DType[msgsender_MSG] != Pausable;
[L7291]              assume DType[msgsender_MSG] != IERC20;
[L7292]              assume DType[msgsender_MSG] != SafeMath;
[L7293]              assume DType[msgsender_MSG] != ERC20;
[L7294]              assume DType[msgsender_MSG] != ERC20Pausable;
[L7295]              assume DType[msgsender_MSG] != RariToken;
[L7296]              Alloc[msgsender_MSG] := true;
[L7297]  COND FALSE  !(choice == 21)
[L7303]  COND FALSE  !(choice == 20)
[L7309]  COND FALSE  !(choice == 19)
[L7315]  COND FALSE  !(choice == 18)
[L7321]  COND FALSE  !(choice == 17)
[L7327]  COND FALSE  !(choice == 16)
[L7333]  COND FALSE  !(choice == 15)
[L7339]  COND FALSE  !(choice == 14)
[L7345]  COND FALSE  !(choice == 13)
[L7351]  COND TRUE   choice == 12
[L7352]              gas := gas - 21000;
[L7353]  COND TRUE   gas >= 0
[L7354]              assume value_s841 >= 0 && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7355]              assume msgvalue_MSG == 0;
[L7356]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s841) && msgsender_MSG != to_s841) && value_s841 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s841] + value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s841 >= 0) && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s841] >= 0) && _balances_ERC20[this][to_s841] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1413]              havoc __exception;
[L1414]              revert := false;
[L1415]  COND FALSE  !(__exception)
[L1439]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L4697]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L6534]  COND FALSE  !(!!_paused_Pausable[this])
[L4697]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4698]  COND TRUE   revert
[L1439]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L1440]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - value_s841) && _balances_ERC20[this][to_s841] == old(_balances_ERC20[this][to_s841]) + value_s841) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && mintStopped_RariToken[this] == old(mintStopped_RariToken[this])) && _paused_Pausable[this] == old(_paused_Pausable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L7356]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L7447]  RET         call CorralChoice_RariToken(this);

[2020-11-25 03:25:28,083 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 03:25:28,083 INFO  L82        PathProgramCache]: Analyzing trace with hash 733798434, now seen corresponding path program 1 times
[2020-11-25 03:25:28,084 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 03:25:28,095 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 03:25:28,118 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 03:25:28,118 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 03:25:28,118 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 03:25:28,119 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 03:25:28,119 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 03:25:28,119 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 03:25:28,120 INFO  L87              Difference]: Start difference. First operand 4442 states and 5499 transitions. cyclomatic complexity: 1059 Second operand 4 states.
[2020-11-25 03:25:29,255 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 03:25:29,255 INFO  L93              Difference]: Finished difference Result 6150 states and 7275 transitions.
[2020-11-25 03:25:29,255 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 03:25:29,255 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6150 states and 7275 transitions.
[2020-11-25 03:25:29,274 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 03:25:29,299 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6150 states to 5770 states and 6815 transitions.
[2020-11-25 03:25:29,299 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1261
[2020-11-25 03:25:29,302 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1303
[2020-11-25 03:25:29,303 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5770 states and 6815 transitions.
[2020-11-25 03:25:29,312 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 03:25:29,312 INFO  L728         BuchiCegarLoop]: Abstraction has 5770 states and 6815 transitions.
[2020-11-25 03:25:29,317 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5770 states and 6815 transitions.
[2020-11-25 03:25:29,368 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5770 to 4686.
[2020-11-25 03:25:29,368 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4686 states.
[2020-11-25 03:25:29,375 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4686 states to 4686 states and 5403 transitions.
[2020-11-25 03:25:29,376 INFO  L751         BuchiCegarLoop]: Abstraction has 4686 states and 5403 transitions.
[2020-11-25 03:25:29,376 INFO  L631         BuchiCegarLoop]: Abstraction has 4686 states and 5403 transitions.
[2020-11-25 03:25:29,376 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 03:25:29,376 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4686 states and 5403 transitions.
[2020-11-25 03:25:29,406 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 03:25:29,406 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 03:25:29,406 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 03:25:29,414 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [10, 10, 10, 10, 10, 10, 10, 10, 10, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 03:25:29,414 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC20Pausable0 := false;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7437]              assume null == 0;
[L7438]  CALL        call this := FreshRefGenerator__success();
[L2891]              havoc newRef;
[L2892]              assume Alloc[newRef] == false;
[L2893]              Alloc[newRef] := true;
[L2894]              assume newRef != null;
[L7438]  RET         call this := FreshRefGenerator__success();
[L7439]              assume now >= 0;
[L7440]              assume DType[this] == RariToken;
[L7441]              assume msgvalue_MSG == 0;
[L7442]              gas := gas - 53000;
[L7443]  CALL        call RariToken_RariToken(this, msgsender_MSG, msgvalue_MSG);
[L1725]              havoc __exception;
[L1726]              revert := false;
[L1727]  COND FALSE  !(__exception)
[L1751]  CALL        call RariToken_RariToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4976]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L4976]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4977]  COND FALSE  !(revert)
[L4980]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3028]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3028]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3032]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2980]              assume msgsender_MSG != null;
[L2981]              Balance[this] := 0;
[L2982]              _owner_Ownable[this] := null;
[L2984]  COND TRUE   DType[this] == RariToken
[L2985]  CALL        call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2937]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L3007]              msgSender_s45 := msgSender_s45;
[L3008]              _owner_Ownable[this] := msgSender_s45;
[L3009]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3032]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3033]  COND FALSE  !(revert)
[L4980]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4981]  COND FALSE  !(revert)
[L4984]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3256]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]  COND FALSE  !(revert)
[L3260]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3028]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3028]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3032]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2980]              assume msgsender_MSG != null;
[L2981]              Balance[this] := 0;
[L2982]              _owner_Ownable[this] := null;
[L2984]  COND TRUE   DType[this] == RariToken
[L2985]  CALL        call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2937]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L3007]              msgSender_s45 := msgSender_s45;
[L3008]              _owner_Ownable[this] := msgSender_s45;
[L3009]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3032]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3033]  COND FALSE  !(revert)
[L3260]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3261]  COND FALSE  !(revert)
[L3264]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3231]              assume msgsender_MSG != null;
[L3232]              Balance[this] := 0;
[L3233]              _paused_Pausable[this] := false;
[L3235]              _paused_Pausable[this] := false;
[L3264]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3265]  COND FALSE  !(revert)
[L4984]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4985]  COND FALSE  !(revert)
[L4988]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3362]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3347]              assume msgsender_MSG != null;
[L3348]              Balance[this] := 0;
[L3362]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L4988]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4989]  COND FALSE  !(revert)
[L4992]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3568]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3568]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3569]  COND FALSE  !(revert)
[L3572]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3362]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3347]              assume msgsender_MSG != null;
[L3348]              Balance[this] := 0;
[L3362]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L3572]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3573]  COND FALSE  !(revert)
[L3576]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3540]              assume msgsender_MSG != null;
[L3541]              Balance[this] := 0;
[L3542]              _balances_ERC20[this] := zeroRefintArr();
[L3543]              sum__balances0[this] := 0;
[L3544]              _allowances_ERC20[this] := zeroRefRefintArr();
[L3545]              sum__allowances1[this] := 0;
[L3546]              _totalSupply_ERC20[this] := 0;
[L3576]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3577]  COND FALSE  !(revert)
[L4992]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4993]  COND FALSE  !(revert)
[L4996]  CALL        call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4642]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L4642]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4643]  COND FALSE  !(revert)
[L4646]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3028]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3028]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3032]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2980]              assume msgsender_MSG != null;
[L2981]              Balance[this] := 0;
[L2982]              _owner_Ownable[this] := null;
[L2984]  COND TRUE   DType[this] == RariToken
[L2985]  CALL        call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2937]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L3007]              msgSender_s45 := msgSender_s45;
[L3008]              _owner_Ownable[this] := msgSender_s45;
[L3009]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3032]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3033]  COND FALSE  !(revert)
[L4646]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4647]  COND FALSE  !(revert)
[L4650]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3256]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]  COND FALSE  !(revert)
[L3260]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3028]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3028]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3032]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2980]              assume msgsender_MSG != null;
[L2981]              Balance[this] := 0;
[L2982]              _owner_Ownable[this] := null;
[L2984]  COND TRUE   DType[this] == RariToken
[L2985]  CALL        call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2937]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L3007]              msgSender_s45 := msgSender_s45;
[L3008]              _owner_Ownable[this] := msgSender_s45;
[L3009]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3032]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3033]  COND FALSE  !(revert)
[L3260]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3261]  COND FALSE  !(revert)
[L3264]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3231]              assume msgsender_MSG != null;
[L3232]              Balance[this] := 0;
[L3233]              _paused_Pausable[this] := false;
[L3235]              _paused_Pausable[this] := false;
[L3264]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3265]  COND FALSE  !(revert)
[L4650]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4651]  COND FALSE  !(revert)
[L4654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3362]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3347]              assume msgsender_MSG != null;
[L3348]              Balance[this] := 0;
[L3362]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L4654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4655]  COND FALSE  !(revert)
[L4658]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3568]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3568]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3569]  COND FALSE  !(revert)
[L3572]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3362]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3347]              assume msgsender_MSG != null;
[L3348]              Balance[this] := 0;
[L3362]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L3572]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3573]  COND FALSE  !(revert)
[L3576]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3540]              assume msgsender_MSG != null;
[L3541]              Balance[this] := 0;
[L3542]              _balances_ERC20[this] := zeroRefintArr();
[L3543]              sum__balances0[this] := 0;
[L3544]              _allowances_ERC20[this] := zeroRefRefintArr();
[L3545]              sum__allowances1[this] := 0;
[L3546]              _totalSupply_ERC20[this] := 0;
[L3576]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3577]  COND FALSE  !(revert)
[L4658]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4659]  COND FALSE  !(revert)
[L4662]  CALL        call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4607]              assume msgsender_MSG != null;
[L4608]              Balance[this] := 0;
[L4662]  RET         call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4663]  COND FALSE  !(revert)
[L4996]  RET         call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4997]  COND FALSE  !(revert)
[L5000]  CALL        call RariToken_RariToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4933]              assume msgsender_MSG != null;
[L4934]              Balance[this] := 0;
[L4935]              name_RariToken[this] := 920169039;
[L4936]              symbol_RariToken[this] := 1865763617;
[L4937]              decimals_RariToken[this] := 18;
[L4938]              mintStopped_RariToken[this] := false;
[L5000]  RET         call RariToken_RariToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L5001]  COND FALSE  !(revert)
[L1751]  RET         call RariToken_RariToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1752]              assume !revert && gas >= 0;
[L7443]  RET         call RariToken_RariToken(this, msgsender_MSG, msgvalue_MSG);
[L7444]              assume !revert && gas >= 0;
[L7447]  CALL        call CorralChoice_RariToken(this);
[L7245]              havoc msgsender_MSG;
[L7246]              havoc msgvalue_MSG;
[L7247]              havoc choice;
[L7248]              havoc __ret_0_owner;
[L7249]              havoc __ret_0_isOwner;
[L7250]              havoc newOwner_s105;
[L7251]              havoc __ret_0_paused;
[L7252]              havoc __ret_0_totalSupply;
[L7253]              havoc account_s455;
[L7254]              havoc __ret_0_balanceOf;
[L7255]              havoc to_s841;
[L7256]              havoc value_s841;
[L7257]              havoc __ret_0_transfer;
[L7258]              havoc owner_s490;
[L7259]              havoc spender_s490;
[L7260]              havoc __ret_0_allowance;
[L7261]              havoc spender_s880;
[L7262]              havoc value_s880;
[L7263]              havoc __ret_0_approve;
[L7264]              havoc from_s862;
[L7265]              havoc to_s862;
[L7266]              havoc value_s862;
[L7267]              havoc __ret_0_transferFrom;
[L7268]              havoc spender_s898;
[L7269]              havoc addedValue_s898;
[L7270]              havoc __ret_0_increaseAllowance;
[L7271]              havoc spender_s916;
[L7272]              havoc subtractedValue_s916;
[L7273]              havoc __ret_0_decreaseAllowance;
[L7274]              havoc __ret_0_name;
[L7275]              havoc __ret_0_symbol;
[L7276]              havoc __ret_0_decimals;
[L7277]              havoc __ret_0_mintStopped;
[L7278]              havoc account_s960;
[L7279]              havoc amount_s960;
[L7280]              havoc __ret_0_mint;
[L7281]              havoc tmpNow;
[L7282]              havoc gas;
[L7283]              assume gas > 4000000 && gas <= 8000000;
[L7284]              tmpNow := now;
[L7285]              havoc now;
[L7286]              assume now > tmpNow;
[L7287]              assume msgsender_MSG != null;
[L7288]              assume DType[msgsender_MSG] != Context;
[L7289]              assume DType[msgsender_MSG] != Ownable;
[L7290]              assume DType[msgsender_MSG] != Pausable;
[L7291]              assume DType[msgsender_MSG] != IERC20;
[L7292]              assume DType[msgsender_MSG] != SafeMath;
[L7293]              assume DType[msgsender_MSG] != ERC20;
[L7294]              assume DType[msgsender_MSG] != ERC20Pausable;
[L7295]              assume DType[msgsender_MSG] != RariToken;
[L7296]              Alloc[msgsender_MSG] := true;
[L7297]  COND FALSE  !(choice == 21)
[L7303]  COND FALSE  !(choice == 20)
[L7309]  COND FALSE  !(choice == 19)
[L7315]  COND FALSE  !(choice == 18)
[L7321]  COND FALSE  !(choice == 17)
[L7327]  COND FALSE  !(choice == 16)
[L7333]  COND FALSE  !(choice == 15)
[L7339]  COND FALSE  !(choice == 14)
[L7345]  COND FALSE  !(choice == 13)
[L7351]  COND TRUE   choice == 12
[L7352]              gas := gas - 21000;
[L7353]  COND TRUE   gas >= 0
[L7354]              assume value_s841 >= 0 && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7355]              assume msgvalue_MSG == 0;
[L7356]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s841) && msgsender_MSG != to_s841) && value_s841 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s841] + value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s841 >= 0) && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s841] >= 0) && _balances_ERC20[this][to_s841] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1413]              havoc __exception;
[L1414]              revert := false;
[L1415]  COND TRUE   __exception
[L1416]              __tmp__Balance := Balance;
[L1417]              __tmp__DType := DType;
[L1418]              __tmp__Alloc := Alloc;
[L1419]              __tmp__balance_ADDR := balance_ADDR;
[L1420]              __tmp__M_Ref_int := M_Ref_int;
[L1421]              __tmp__sum__balances0 := sum__balances0;
[L1422]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1423]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1424]              __tmp__sum__allowances1 := sum__allowances1;
[L1425]              __tmp__Length := Length;
[L1426]              __tmp__now := now;
[L1427]              __tmp___owner_Ownable := _owner_Ownable;
[L1428]              __tmp___paused_Pausable := _paused_Pausable;
[L1429]              __tmp___balances_ERC20 := _balances_ERC20;
[L1430]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1431]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1432]              __tmp__name_RariToken := name_RariToken;
[L1433]              __tmp__symbol_RariToken := symbol_RariToken;
[L1434]              __tmp__decimals_RariToken := decimals_RariToken;
[L1435]              __tmp__mintStopped_RariToken := mintStopped_RariToken;
[L1436]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L4672]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6526]  COND TRUE   !!__tmp___paused_Pausable[this]
[L6527]              revert := true;
[L4672]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4673]  COND TRUE   revert
[L1436]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L1437]              assume revert || gas < 0;
[L7356]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L7447]  RET         call CorralChoice_RariToken(this);

Loop:
[L7447]  CALL        call CorralChoice_RariToken(this);
[L7245]              havoc msgsender_MSG;
[L7246]              havoc msgvalue_MSG;
[L7247]              havoc choice;
[L7248]              havoc __ret_0_owner;
[L7249]              havoc __ret_0_isOwner;
[L7250]              havoc newOwner_s105;
[L7251]              havoc __ret_0_paused;
[L7252]              havoc __ret_0_totalSupply;
[L7253]              havoc account_s455;
[L7254]              havoc __ret_0_balanceOf;
[L7255]              havoc to_s841;
[L7256]              havoc value_s841;
[L7257]              havoc __ret_0_transfer;
[L7258]              havoc owner_s490;
[L7259]              havoc spender_s490;
[L7260]              havoc __ret_0_allowance;
[L7261]              havoc spender_s880;
[L7262]              havoc value_s880;
[L7263]              havoc __ret_0_approve;
[L7264]              havoc from_s862;
[L7265]              havoc to_s862;
[L7266]              havoc value_s862;
[L7267]              havoc __ret_0_transferFrom;
[L7268]              havoc spender_s898;
[L7269]              havoc addedValue_s898;
[L7270]              havoc __ret_0_increaseAllowance;
[L7271]              havoc spender_s916;
[L7272]              havoc subtractedValue_s916;
[L7273]              havoc __ret_0_decreaseAllowance;
[L7274]              havoc __ret_0_name;
[L7275]              havoc __ret_0_symbol;
[L7276]              havoc __ret_0_decimals;
[L7277]              havoc __ret_0_mintStopped;
[L7278]              havoc account_s960;
[L7279]              havoc amount_s960;
[L7280]              havoc __ret_0_mint;
[L7281]              havoc tmpNow;
[L7282]              havoc gas;
[L7283]              assume gas > 4000000 && gas <= 8000000;
[L7284]              tmpNow := now;
[L7285]              havoc now;
[L7286]              assume now > tmpNow;
[L7287]              assume msgsender_MSG != null;
[L7288]              assume DType[msgsender_MSG] != Context;
[L7289]              assume DType[msgsender_MSG] != Ownable;
[L7290]              assume DType[msgsender_MSG] != Pausable;
[L7291]              assume DType[msgsender_MSG] != IERC20;
[L7292]              assume DType[msgsender_MSG] != SafeMath;
[L7293]              assume DType[msgsender_MSG] != ERC20;
[L7294]              assume DType[msgsender_MSG] != ERC20Pausable;
[L7295]              assume DType[msgsender_MSG] != RariToken;
[L7296]              Alloc[msgsender_MSG] := true;
[L7297]  COND FALSE  !(choice == 21)
[L7303]  COND FALSE  !(choice == 20)
[L7309]  COND FALSE  !(choice == 19)
[L7315]  COND FALSE  !(choice == 18)
[L7321]  COND FALSE  !(choice == 17)
[L7327]  COND FALSE  !(choice == 16)
[L7333]  COND FALSE  !(choice == 15)
[L7339]  COND FALSE  !(choice == 14)
[L7345]  COND FALSE  !(choice == 13)
[L7351]  COND TRUE   choice == 12
[L7352]              gas := gas - 21000;
[L7353]  COND TRUE   gas >= 0
[L7354]              assume value_s841 >= 0 && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7355]              assume msgvalue_MSG == 0;
[L7356]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s841) && msgsender_MSG != to_s841) && value_s841 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s841] + value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s841 >= 0) && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s841] >= 0) && _balances_ERC20[this][to_s841] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1413]              havoc __exception;
[L1414]              revert := false;
[L1415]  COND TRUE   __exception
[L1416]              __tmp__Balance := Balance;
[L1417]              __tmp__DType := DType;
[L1418]              __tmp__Alloc := Alloc;
[L1419]              __tmp__balance_ADDR := balance_ADDR;
[L1420]              __tmp__M_Ref_int := M_Ref_int;
[L1421]              __tmp__sum__balances0 := sum__balances0;
[L1422]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1423]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1424]              __tmp__sum__allowances1 := sum__allowances1;
[L1425]              __tmp__Length := Length;
[L1426]              __tmp__now := now;
[L1427]              __tmp___owner_Ownable := _owner_Ownable;
[L1428]              __tmp___paused_Pausable := _paused_Pausable;
[L1429]              __tmp___balances_ERC20 := _balances_ERC20;
[L1430]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1431]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1432]              __tmp__name_RariToken := name_RariToken;
[L1433]              __tmp__symbol_RariToken := symbol_RariToken;
[L1434]              __tmp__decimals_RariToken := decimals_RariToken;
[L1435]              __tmp__mintStopped_RariToken := mintStopped_RariToken;
[L1436]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L4672]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6526]  COND TRUE   !!__tmp___paused_Pausable[this]
[L6527]              revert := true;
[L4672]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4673]  COND TRUE   revert
[L1436]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L1437]              assume revert || gas < 0;
[L7356]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L7447]  RET         call CorralChoice_RariToken(this);

[2020-11-25 03:25:29,436 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 03:25:29,436 INFO  L82        PathProgramCache]: Analyzing trace with hash 1498380590, now seen corresponding path program 1 times
[2020-11-25 03:25:29,437 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 03:25:29,455 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 03:25:29,594 INFO  L134       CoverageAnalysis]: Checked inductivity of 709 backedges. 6 proven. 0 refuted. 0 times theorem prover too weak. 703 trivial. 0 not checked.
[2020-11-25 03:25:29,595 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 03:25:29,595 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 03:25:29,595 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 03:25:29,596 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 03:25:29,596 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=157, Unknown=0, NotChecked=0, Total=182
[2020-11-25 03:25:29,596 INFO  L87              Difference]: Start difference. First operand 4686 states and 5403 transitions. cyclomatic complexity: 719 Second operand 14 states.
[2020-11-25 03:25:33,601 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 03:25:33,601 INFO  L93              Difference]: Finished difference Result 7277 states and 8465 transitions.
[2020-11-25 03:25:33,601 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 18 states. 
[2020-11-25 03:25:33,601 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7277 states and 8465 transitions.
[2020-11-25 03:25:33,617 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 03:25:33,637 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7277 states to 7277 states and 8465 transitions.
[2020-11-25 03:25:33,637 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1667
[2020-11-25 03:25:33,638 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1667
[2020-11-25 03:25:33,638 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7277 states and 8465 transitions.
[2020-11-25 03:25:33,645 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 03:25:33,645 INFO  L728         BuchiCegarLoop]: Abstraction has 7277 states and 8465 transitions.
[2020-11-25 03:25:33,649 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7277 states and 8465 transitions.
[2020-11-25 03:25:33,733 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7277 to 6690.
[2020-11-25 03:25:33,733 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 6690 states.
[2020-11-25 03:25:33,742 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 6690 states to 6690 states and 7856 transitions.
[2020-11-25 03:25:33,742 INFO  L751         BuchiCegarLoop]: Abstraction has 6690 states and 7856 transitions.
[2020-11-25 03:25:33,742 INFO  L631         BuchiCegarLoop]: Abstraction has 6690 states and 7856 transitions.
[2020-11-25 03:25:33,742 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 03:25:33,742 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6690 states and 7856 transitions.
[2020-11-25 03:25:33,751 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 03:25:33,751 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 03:25:33,751 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 03:25:33,755 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [10, 10, 10, 10, 10, 10, 10, 10, 10, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 03:25:33,755 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC20Pausable0 := false;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7437]              assume null == 0;
[L7438]  CALL        call this := FreshRefGenerator__success();
[L2891]              havoc newRef;
[L2892]              assume Alloc[newRef] == false;
[L2893]              Alloc[newRef] := true;
[L2894]              assume newRef != null;
[L7438]  RET         call this := FreshRefGenerator__success();
[L7439]              assume now >= 0;
[L7440]              assume DType[this] == RariToken;
[L7441]              assume msgvalue_MSG == 0;
[L7442]              gas := gas - 53000;
[L7443]  CALL        call RariToken_RariToken(this, msgsender_MSG, msgvalue_MSG);
[L1725]              havoc __exception;
[L1726]              revert := false;
[L1727]  COND TRUE   __exception
[L1728]              __tmp__Balance := Balance;
[L1729]              __tmp__DType := DType;
[L1730]              __tmp__Alloc := Alloc;
[L1731]              __tmp__balance_ADDR := balance_ADDR;
[L1732]              __tmp__M_Ref_int := M_Ref_int;
[L1733]              __tmp__sum__balances0 := sum__balances0;
[L1734]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1735]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1736]              __tmp__sum__allowances1 := sum__allowances1;
[L1737]              __tmp__Length := Length;
[L1738]              __tmp__now := now;
[L1739]              __tmp___owner_Ownable := _owner_Ownable;
[L1740]              __tmp___paused_Pausable := _paused_Pausable;
[L1741]              __tmp___balances_ERC20 := _balances_ERC20;
[L1742]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1743]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1744]              __tmp__name_RariToken := name_RariToken;
[L1745]              __tmp__symbol_RariToken := symbol_RariToken;
[L1746]              __tmp__decimals_RariToken := decimals_RariToken;
[L1747]              __tmp__mintStopped_RariToken := mintStopped_RariToken;
[L1748]  CALL        call RariToken_RariToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4944]  CALL        call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2915]  CALL        call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              __tmp__Balance[this] := 0;
[L2915]  RET         call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2916]  COND FALSE  !(revert)
[L4944]  RET         call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L4945]  COND FALSE  !(revert)
[L4948]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3015]  CALL        call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2915]  CALL        call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              __tmp__Balance[this] := 0;
[L2915]  RET         call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2916]  COND FALSE  !(revert)
[L3015]  RET         call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L3016]  COND FALSE  !(revert)
[L3019]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2945]              assume msgsender_MSG != null;
[L2946]              __tmp__Balance[this] := 0;
[L2947]              __tmp___owner_Ownable[this] := null;
[L2949]  COND TRUE   __tmp__DType[this] == RariToken
[L2950]  CALL        call msgSender_s45 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2931]              __ret_0_ := msgsender_MSG;
[L2950]  RET         call msgSender_s45 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND FALSE  !(revert)
[L2972]              msgSender_s45 := msgSender_s45;
[L2973]              __tmp___owner_Ownable[this] := msgSender_s45;
[L3019]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3020]  COND FALSE  !(revert)
[L4948]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4949]  COND FALSE  !(revert)
[L4952]  CALL        call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3240]  CALL        call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2915]  CALL        call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              __tmp__Balance[this] := 0;
[L2915]  RET         call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2916]  COND FALSE  !(revert)
[L3240]  RET         call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L3241]  COND FALSE  !(revert)
[L3244]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3015]  CALL        call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2915]  CALL        call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              __tmp__Balance[this] := 0;
[L2915]  RET         call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2916]  COND FALSE  !(revert)
[L3015]  RET         call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L3016]  COND FALSE  !(revert)
[L3019]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2945]              assume msgsender_MSG != null;
[L2946]              __tmp__Balance[this] := 0;
[L2947]              __tmp___owner_Ownable[this] := null;
[L2949]  COND TRUE   __tmp__DType[this] == RariToken
[L2950]  CALL        call msgSender_s45 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2931]              __ret_0_ := msgsender_MSG;
[L2950]  RET         call msgSender_s45 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND FALSE  !(revert)
[L2972]              msgSender_s45 := msgSender_s45;
[L2973]              __tmp___owner_Ownable[this] := msgSender_s45;
[L3019]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3020]  COND FALSE  !(revert)
[L3244]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3245]  COND FALSE  !(revert)
[L3248]  CALL        call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3221]              assume msgsender_MSG != null;
[L3222]              __tmp__Balance[this] := 0;
[L3223]              __tmp___paused_Pausable[this] := false;
[L3225]              __tmp___paused_Pausable[this] := false;
[L3248]  RET         call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3249]  COND FALSE  !(revert)
[L4952]  RET         call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4953]  COND FALSE  !(revert)
[L4956]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3354]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3339]              assume msgsender_MSG != null;
[L3340]              __tmp__Balance[this] := 0;
[L3354]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3355]  COND FALSE  !(revert)
[L4956]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4957]  COND FALSE  !(revert)
[L4960]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3552]  CALL        call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2915]  CALL        call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              __tmp__Balance[this] := 0;
[L2915]  RET         call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2916]  COND FALSE  !(revert)
[L3552]  RET         call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L3553]  COND FALSE  !(revert)
[L3556]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3354]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3339]              assume msgsender_MSG != null;
[L3340]              __tmp__Balance[this] := 0;
[L3354]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3355]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3527]              assume msgsender_MSG != null;
[L3528]              __tmp__Balance[this] := 0;
[L3529]              __tmp___balances_ERC20[this] := zeroRefintArr();
[L3530]              __tmp__sum__balances0[this] := 0;
[L3531]              __tmp___allowances_ERC20[this] := zeroRefRefintArr();
[L3532]              __tmp__sum__allowances1[this] := 0;
[L3533]              __tmp___totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4960]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4961]  COND FALSE  !(revert)
[L4964]  CALL        call ERC20Pausable_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4614]  CALL        call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2915]  CALL        call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              __tmp__Balance[this] := 0;
[L2915]  RET         call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2916]  COND FALSE  !(revert)
[L4614]  RET         call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L4615]  COND FALSE  !(revert)
[L4618]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3015]  CALL        call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2915]  CALL        call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              __tmp__Balance[this] := 0;
[L2915]  RET         call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2916]  COND FALSE  !(revert)
[L3015]  RET         call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L3016]  COND FALSE  !(revert)
[L3019]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2945]              assume msgsender_MSG != null;
[L2946]              __tmp__Balance[this] := 0;
[L2947]              __tmp___owner_Ownable[this] := null;
[L2949]  COND TRUE   __tmp__DType[this] == RariToken
[L2950]  CALL        call msgSender_s45 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2931]              __ret_0_ := msgsender_MSG;
[L2950]  RET         call msgSender_s45 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND FALSE  !(revert)
[L2972]              msgSender_s45 := msgSender_s45;
[L2973]              __tmp___owner_Ownable[this] := msgSender_s45;
[L3019]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3020]  COND FALSE  !(revert)
[L4618]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4619]  COND FALSE  !(revert)
[L4622]  CALL        call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3240]  CALL        call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2915]  CALL        call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              __tmp__Balance[this] := 0;
[L2915]  RET         call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2916]  COND FALSE  !(revert)
[L3240]  RET         call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L3241]  COND FALSE  !(revert)
[L3244]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3015]  CALL        call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2915]  CALL        call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              __tmp__Balance[this] := 0;
[L2915]  RET         call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2916]  COND FALSE  !(revert)
[L3015]  RET         call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L3016]  COND FALSE  !(revert)
[L3019]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2945]              assume msgsender_MSG != null;
[L2946]              __tmp__Balance[this] := 0;
[L2947]              __tmp___owner_Ownable[this] := null;
[L2949]  COND TRUE   __tmp__DType[this] == RariToken
[L2950]  CALL        call msgSender_s45 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2931]              __ret_0_ := msgsender_MSG;
[L2950]  RET         call msgSender_s45 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND FALSE  !(revert)
[L2972]              msgSender_s45 := msgSender_s45;
[L2973]              __tmp___owner_Ownable[this] := msgSender_s45;
[L3019]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3020]  COND FALSE  !(revert)
[L3244]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3245]  COND FALSE  !(revert)
[L3248]  CALL        call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3221]              assume msgsender_MSG != null;
[L3222]              __tmp__Balance[this] := 0;
[L3223]              __tmp___paused_Pausable[this] := false;
[L3225]              __tmp___paused_Pausable[this] := false;
[L3248]  RET         call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3249]  COND FALSE  !(revert)
[L4622]  RET         call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4623]  COND FALSE  !(revert)
[L4626]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3354]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3339]              assume msgsender_MSG != null;
[L3340]              __tmp__Balance[this] := 0;
[L3354]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3355]  COND FALSE  !(revert)
[L4626]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4627]  COND FALSE  !(revert)
[L4630]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3552]  CALL        call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2915]  CALL        call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              __tmp__Balance[this] := 0;
[L2915]  RET         call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2916]  COND FALSE  !(revert)
[L3552]  RET         call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L3553]  COND FALSE  !(revert)
[L3556]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3354]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3339]              assume msgsender_MSG != null;
[L3340]              __tmp__Balance[this] := 0;
[L3354]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3355]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3527]              assume msgsender_MSG != null;
[L3528]              __tmp__Balance[this] := 0;
[L3529]              __tmp___balances_ERC20[this] := zeroRefintArr();
[L3530]              __tmp__sum__balances0[this] := 0;
[L3531]              __tmp___allowances_ERC20[this] := zeroRefRefintArr();
[L3532]              __tmp__sum__allowances1[this] := 0;
[L3533]              __tmp___totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4630]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4631]  COND FALSE  !(revert)
[L4634]  CALL        call ERC20Pausable_ERC20Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4599]              assume msgsender_MSG != null;
[L4600]              __tmp__Balance[this] := 0;
[L4634]  RET         call ERC20Pausable_ERC20Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4635]  COND FALSE  !(revert)
[L4964]  RET         call ERC20Pausable_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4965]  COND FALSE  !(revert)
[L4968]  CALL        call RariToken_RariToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4921]              assume msgsender_MSG != null;
[L4922]              __tmp__Balance[this] := 0;
[L4923]              __tmp__name_RariToken[this] := 920169039;
[L4924]              __tmp__symbol_RariToken[this] := 1865763617;
[L4925]              __tmp__decimals_RariToken[this] := 18;
[L4926]              __tmp__mintStopped_RariToken[this] := false;
[L4968]  RET         call RariToken_RariToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4969]  COND FALSE  !(revert)
[L1748]  RET         call RariToken_RariToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1749]              assume revert || gas < 0;
[L7443]  RET         call RariToken_RariToken(this, msgsender_MSG, msgvalue_MSG);
[L7444]              assume !revert && gas >= 0;
[L7447]  CALL        call CorralChoice_RariToken(this);
[L7245]              havoc msgsender_MSG;
[L7246]              havoc msgvalue_MSG;
[L7247]              havoc choice;
[L7248]              havoc __ret_0_owner;
[L7249]              havoc __ret_0_isOwner;
[L7250]              havoc newOwner_s105;
[L7251]              havoc __ret_0_paused;
[L7252]              havoc __ret_0_totalSupply;
[L7253]              havoc account_s455;
[L7254]              havoc __ret_0_balanceOf;
[L7255]              havoc to_s841;
[L7256]              havoc value_s841;
[L7257]              havoc __ret_0_transfer;
[L7258]              havoc owner_s490;
[L7259]              havoc spender_s490;
[L7260]              havoc __ret_0_allowance;
[L7261]              havoc spender_s880;
[L7262]              havoc value_s880;
[L7263]              havoc __ret_0_approve;
[L7264]              havoc from_s862;
[L7265]              havoc to_s862;
[L7266]              havoc value_s862;
[L7267]              havoc __ret_0_transferFrom;
[L7268]              havoc spender_s898;
[L7269]              havoc addedValue_s898;
[L7270]              havoc __ret_0_increaseAllowance;
[L7271]              havoc spender_s916;
[L7272]              havoc subtractedValue_s916;
[L7273]              havoc __ret_0_decreaseAllowance;
[L7274]              havoc __ret_0_name;
[L7275]              havoc __ret_0_symbol;
[L7276]              havoc __ret_0_decimals;
[L7277]              havoc __ret_0_mintStopped;
[L7278]              havoc account_s960;
[L7279]              havoc amount_s960;
[L7280]              havoc __ret_0_mint;
[L7281]              havoc tmpNow;
[L7282]              havoc gas;
[L7283]              assume gas > 4000000 && gas <= 8000000;
[L7284]              tmpNow := now;
[L7285]              havoc now;
[L7286]              assume now > tmpNow;
[L7287]              assume msgsender_MSG != null;
[L7288]              assume DType[msgsender_MSG] != Context;
[L7289]              assume DType[msgsender_MSG] != Ownable;
[L7290]              assume DType[msgsender_MSG] != Pausable;
[L7291]              assume DType[msgsender_MSG] != IERC20;
[L7292]              assume DType[msgsender_MSG] != SafeMath;
[L7293]              assume DType[msgsender_MSG] != ERC20;
[L7294]              assume DType[msgsender_MSG] != ERC20Pausable;
[L7295]              assume DType[msgsender_MSG] != RariToken;
[L7296]              Alloc[msgsender_MSG] := true;
[L7297]  COND FALSE  !(choice == 21)
[L7303]  COND FALSE  !(choice == 20)
[L7309]  COND FALSE  !(choice == 19)
[L7315]  COND FALSE  !(choice == 18)
[L7321]  COND FALSE  !(choice == 17)
[L7327]  COND FALSE  !(choice == 16)
[L7333]  COND FALSE  !(choice == 15)
[L7339]  COND FALSE  !(choice == 14)
[L7345]  COND FALSE  !(choice == 13)
[L7351]  COND TRUE   choice == 12
[L7352]              gas := gas - 21000;
[L7353]  COND TRUE   gas >= 0
[L7354]              assume value_s841 >= 0 && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7355]              assume msgvalue_MSG == 0;
[L7356]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s841) && msgsender_MSG != to_s841) && value_s841 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s841] + value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s841 >= 0) && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s841] >= 0) && _balances_ERC20[this][to_s841] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1413]              havoc __exception;
[L1414]              revert := false;
[L1415]  COND TRUE   __exception
[L1416]              __tmp__Balance := Balance;
[L1417]              __tmp__DType := DType;
[L1418]              __tmp__Alloc := Alloc;
[L1419]              __tmp__balance_ADDR := balance_ADDR;
[L1420]              __tmp__M_Ref_int := M_Ref_int;
[L1421]              __tmp__sum__balances0 := sum__balances0;
[L1422]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1423]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1424]              __tmp__sum__allowances1 := sum__allowances1;
[L1425]              __tmp__Length := Length;
[L1426]              __tmp__now := now;
[L1427]              __tmp___owner_Ownable := _owner_Ownable;
[L1428]              __tmp___paused_Pausable := _paused_Pausable;
[L1429]              __tmp___balances_ERC20 := _balances_ERC20;
[L1430]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1431]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1432]              __tmp__name_RariToken := name_RariToken;
[L1433]              __tmp__symbol_RariToken := symbol_RariToken;
[L1434]              __tmp__decimals_RariToken := decimals_RariToken;
[L1435]              __tmp__mintStopped_RariToken := mintStopped_RariToken;
[L1436]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L4672]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6526]  COND TRUE   !!__tmp___paused_Pausable[this]
[L6527]              revert := true;
[L4672]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4673]  COND TRUE   revert
[L1436]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L1437]              assume revert || gas < 0;
[L7356]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L7447]  RET         call CorralChoice_RariToken(this);

Loop:
[L7447]  CALL        call CorralChoice_RariToken(this);
[L7245]              havoc msgsender_MSG;
[L7246]              havoc msgvalue_MSG;
[L7247]              havoc choice;
[L7248]              havoc __ret_0_owner;
[L7249]              havoc __ret_0_isOwner;
[L7250]              havoc newOwner_s105;
[L7251]              havoc __ret_0_paused;
[L7252]              havoc __ret_0_totalSupply;
[L7253]              havoc account_s455;
[L7254]              havoc __ret_0_balanceOf;
[L7255]              havoc to_s841;
[L7256]              havoc value_s841;
[L7257]              havoc __ret_0_transfer;
[L7258]              havoc owner_s490;
[L7259]              havoc spender_s490;
[L7260]              havoc __ret_0_allowance;
[L7261]              havoc spender_s880;
[L7262]              havoc value_s880;
[L7263]              havoc __ret_0_approve;
[L7264]              havoc from_s862;
[L7265]              havoc to_s862;
[L7266]              havoc value_s862;
[L7267]              havoc __ret_0_transferFrom;
[L7268]              havoc spender_s898;
[L7269]              havoc addedValue_s898;
[L7270]              havoc __ret_0_increaseAllowance;
[L7271]              havoc spender_s916;
[L7272]              havoc subtractedValue_s916;
[L7273]              havoc __ret_0_decreaseAllowance;
[L7274]              havoc __ret_0_name;
[L7275]              havoc __ret_0_symbol;
[L7276]              havoc __ret_0_decimals;
[L7277]              havoc __ret_0_mintStopped;
[L7278]              havoc account_s960;
[L7279]              havoc amount_s960;
[L7280]              havoc __ret_0_mint;
[L7281]              havoc tmpNow;
[L7282]              havoc gas;
[L7283]              assume gas > 4000000 && gas <= 8000000;
[L7284]              tmpNow := now;
[L7285]              havoc now;
[L7286]              assume now > tmpNow;
[L7287]              assume msgsender_MSG != null;
[L7288]              assume DType[msgsender_MSG] != Context;
[L7289]              assume DType[msgsender_MSG] != Ownable;
[L7290]              assume DType[msgsender_MSG] != Pausable;
[L7291]              assume DType[msgsender_MSG] != IERC20;
[L7292]              assume DType[msgsender_MSG] != SafeMath;
[L7293]              assume DType[msgsender_MSG] != ERC20;
[L7294]              assume DType[msgsender_MSG] != ERC20Pausable;
[L7295]              assume DType[msgsender_MSG] != RariToken;
[L7296]              Alloc[msgsender_MSG] := true;
[L7297]  COND FALSE  !(choice == 21)
[L7303]  COND FALSE  !(choice == 20)
[L7309]  COND FALSE  !(choice == 19)
[L7315]  COND FALSE  !(choice == 18)
[L7321]  COND FALSE  !(choice == 17)
[L7327]  COND FALSE  !(choice == 16)
[L7333]  COND FALSE  !(choice == 15)
[L7339]  COND FALSE  !(choice == 14)
[L7345]  COND FALSE  !(choice == 13)
[L7351]  COND TRUE   choice == 12
[L7352]              gas := gas - 21000;
[L7353]  COND TRUE   gas >= 0
[L7354]              assume value_s841 >= 0 && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7355]              assume msgvalue_MSG == 0;
[L7356]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s841) && msgsender_MSG != to_s841) && value_s841 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s841] + value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s841 >= 0) && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s841] >= 0) && _balances_ERC20[this][to_s841] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1413]              havoc __exception;
[L1414]              revert := false;
[L1415]  COND TRUE   __exception
[L1416]              __tmp__Balance := Balance;
[L1417]              __tmp__DType := DType;
[L1418]              __tmp__Alloc := Alloc;
[L1419]              __tmp__balance_ADDR := balance_ADDR;
[L1420]              __tmp__M_Ref_int := M_Ref_int;
[L1421]              __tmp__sum__balances0 := sum__balances0;
[L1422]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1423]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1424]              __tmp__sum__allowances1 := sum__allowances1;
[L1425]              __tmp__Length := Length;
[L1426]              __tmp__now := now;
[L1427]              __tmp___owner_Ownable := _owner_Ownable;
[L1428]              __tmp___paused_Pausable := _paused_Pausable;
[L1429]              __tmp___balances_ERC20 := _balances_ERC20;
[L1430]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1431]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1432]              __tmp__name_RariToken := name_RariToken;
[L1433]              __tmp__symbol_RariToken := symbol_RariToken;
[L1434]              __tmp__decimals_RariToken := decimals_RariToken;
[L1435]              __tmp__mintStopped_RariToken := mintStopped_RariToken;
[L1436]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L4672]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6526]  COND TRUE   !!__tmp___paused_Pausable[this]
[L6527]              revert := true;
[L4672]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4673]  COND TRUE   revert
[L1436]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L1437]              assume revert || gas < 0;
[L7356]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L7447]  RET         call CorralChoice_RariToken(this);

[2020-11-25 03:25:33,769 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 03:25:33,769 INFO  L82        PathProgramCache]: Analyzing trace with hash 1601291444, now seen corresponding path program 1 times
[2020-11-25 03:25:33,770 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 03:25:33,785 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 03:25:33,871 INFO  L134       CoverageAnalysis]: Checked inductivity of 703 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 703 trivial. 0 not checked.
[2020-11-25 03:25:33,871 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 03:25:33,871 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 03:25:33,872 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 03:25:33,872 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 03:25:33,872 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 03:25:33,872 INFO  L87              Difference]: Start difference. First operand 6690 states and 7856 transitions. cyclomatic complexity: 1170 Second operand 4 states.
[2020-11-25 03:25:34,434 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 03:25:34,435 INFO  L93              Difference]: Finished difference Result 8036 states and 9746 transitions.
[2020-11-25 03:25:34,435 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 03:25:34,435 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 8036 states and 9746 transitions.
[2020-11-25 03:25:34,455 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 24
[2020-11-25 03:25:34,480 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 8036 states to 7784 states and 9470 transitions.
[2020-11-25 03:25:34,480 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1816
[2020-11-25 03:25:34,481 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1816
[2020-11-25 03:25:34,481 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7784 states and 9470 transitions.
[2020-11-25 03:25:34,488 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 03:25:34,488 INFO  L728         BuchiCegarLoop]: Abstraction has 7784 states and 9470 transitions.
[2020-11-25 03:25:34,493 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7784 states and 9470 transitions.
[2020-11-25 03:25:34,556 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7784 to 7168.
[2020-11-25 03:25:34,556 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 7168 states.
[2020-11-25 03:25:34,566 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 7168 states to 7168 states and 8573 transitions.
[2020-11-25 03:25:34,566 INFO  L751         BuchiCegarLoop]: Abstraction has 7168 states and 8573 transitions.
[2020-11-25 03:25:34,566 INFO  L631         BuchiCegarLoop]: Abstraction has 7168 states and 8573 transitions.
[2020-11-25 03:25:34,566 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 03:25:34,566 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7168 states and 8573 transitions.
[2020-11-25 03:25:34,575 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 16
[2020-11-25 03:25:34,575 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 03:25:34,576 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 03:25:34,578 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [10, 10, 10, 10, 10, 10, 10, 10, 10, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 03:25:34,578 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC20Pausable0 := false;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7437]              assume null == 0;
[L7438]  CALL        call this := FreshRefGenerator__success();
[L2891]              havoc newRef;
[L2892]              assume Alloc[newRef] == false;
[L2893]              Alloc[newRef] := true;
[L2894]              assume newRef != null;
[L7438]  RET         call this := FreshRefGenerator__success();
[L7439]              assume now >= 0;
[L7440]              assume DType[this] == RariToken;
[L7441]              assume msgvalue_MSG == 0;
[L7442]              gas := gas - 53000;
[L7443]  CALL        call RariToken_RariToken(this, msgsender_MSG, msgvalue_MSG);
[L1725]              havoc __exception;
[L1726]              revert := false;
[L1727]  COND FALSE  !(__exception)
[L1751]  CALL        call RariToken_RariToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4976]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L4976]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4977]  COND FALSE  !(revert)
[L4980]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3028]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3028]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3032]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2980]              assume msgsender_MSG != null;
[L2981]              Balance[this] := 0;
[L2982]              _owner_Ownable[this] := null;
[L2984]  COND TRUE   DType[this] == RariToken
[L2985]  CALL        call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2937]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L3007]              msgSender_s45 := msgSender_s45;
[L3008]              _owner_Ownable[this] := msgSender_s45;
[L3009]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3032]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3033]  COND FALSE  !(revert)
[L4980]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4981]  COND FALSE  !(revert)
[L4984]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3256]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]  COND FALSE  !(revert)
[L3260]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3028]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3028]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3032]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2980]              assume msgsender_MSG != null;
[L2981]              Balance[this] := 0;
[L2982]              _owner_Ownable[this] := null;
[L2984]  COND TRUE   DType[this] == RariToken
[L2985]  CALL        call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2937]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L3007]              msgSender_s45 := msgSender_s45;
[L3008]              _owner_Ownable[this] := msgSender_s45;
[L3009]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3032]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3033]  COND FALSE  !(revert)
[L3260]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3261]  COND FALSE  !(revert)
[L3264]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3231]              assume msgsender_MSG != null;
[L3232]              Balance[this] := 0;
[L3233]              _paused_Pausable[this] := false;
[L3235]              _paused_Pausable[this] := false;
[L3264]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3265]  COND FALSE  !(revert)
[L4984]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4985]  COND FALSE  !(revert)
[L4988]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3362]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3347]              assume msgsender_MSG != null;
[L3348]              Balance[this] := 0;
[L3362]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L4988]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4989]  COND FALSE  !(revert)
[L4992]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3568]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3568]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3569]  COND FALSE  !(revert)
[L3572]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3362]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3347]              assume msgsender_MSG != null;
[L3348]              Balance[this] := 0;
[L3362]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L3572]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3573]  COND FALSE  !(revert)
[L3576]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3540]              assume msgsender_MSG != null;
[L3541]              Balance[this] := 0;
[L3542]              _balances_ERC20[this] := zeroRefintArr();
[L3543]              sum__balances0[this] := 0;
[L3544]              _allowances_ERC20[this] := zeroRefRefintArr();
[L3545]              sum__allowances1[this] := 0;
[L3546]              _totalSupply_ERC20[this] := 0;
[L3576]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3577]  COND FALSE  !(revert)
[L4992]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4993]  COND FALSE  !(revert)
[L4996]  CALL        call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4642]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L4642]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4643]  COND FALSE  !(revert)
[L4646]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3028]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3028]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3032]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2980]              assume msgsender_MSG != null;
[L2981]              Balance[this] := 0;
[L2982]              _owner_Ownable[this] := null;
[L2984]  COND TRUE   DType[this] == RariToken
[L2985]  CALL        call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2937]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L3007]              msgSender_s45 := msgSender_s45;
[L3008]              _owner_Ownable[this] := msgSender_s45;
[L3009]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3032]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3033]  COND FALSE  !(revert)
[L4646]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4647]  COND FALSE  !(revert)
[L4650]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3256]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]  COND FALSE  !(revert)
[L3260]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3028]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3028]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3032]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2980]              assume msgsender_MSG != null;
[L2981]              Balance[this] := 0;
[L2982]              _owner_Ownable[this] := null;
[L2984]  COND TRUE   DType[this] == RariToken
[L2985]  CALL        call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2937]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L3007]              msgSender_s45 := msgSender_s45;
[L3008]              _owner_Ownable[this] := msgSender_s45;
[L3009]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3032]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3033]  COND FALSE  !(revert)
[L3260]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3261]  COND FALSE  !(revert)
[L3264]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3231]              assume msgsender_MSG != null;
[L3232]              Balance[this] := 0;
[L3233]              _paused_Pausable[this] := false;
[L3235]              _paused_Pausable[this] := false;
[L3264]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3265]  COND FALSE  !(revert)
[L4650]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4651]  COND FALSE  !(revert)
[L4654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3362]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3347]              assume msgsender_MSG != null;
[L3348]              Balance[this] := 0;
[L3362]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L4654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4655]  COND FALSE  !(revert)
[L4658]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3568]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3568]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3569]  COND FALSE  !(revert)
[L3572]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3362]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3347]              assume msgsender_MSG != null;
[L3348]              Balance[this] := 0;
[L3362]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L3572]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3573]  COND FALSE  !(revert)
[L3576]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3540]              assume msgsender_MSG != null;
[L3541]              Balance[this] := 0;
[L3542]              _balances_ERC20[this] := zeroRefintArr();
[L3543]              sum__balances0[this] := 0;
[L3544]              _allowances_ERC20[this] := zeroRefRefintArr();
[L3545]              sum__allowances1[this] := 0;
[L3546]              _totalSupply_ERC20[this] := 0;
[L3576]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3577]  COND FALSE  !(revert)
[L4658]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4659]  COND FALSE  !(revert)
[L4662]  CALL        call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4607]              assume msgsender_MSG != null;
[L4608]              Balance[this] := 0;
[L4662]  RET         call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4663]  COND FALSE  !(revert)
[L4996]  RET         call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4997]  COND FALSE  !(revert)
[L5000]  CALL        call RariToken_RariToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4933]              assume msgsender_MSG != null;
[L4934]              Balance[this] := 0;
[L4935]              name_RariToken[this] := 920169039;
[L4936]              symbol_RariToken[this] := 1865763617;
[L4937]              decimals_RariToken[this] := 18;
[L4938]              mintStopped_RariToken[this] := false;
[L5000]  RET         call RariToken_RariToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L5001]  COND FALSE  !(revert)
[L1751]  RET         call RariToken_RariToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1752]              assume !revert && gas >= 0;
[L7443]  RET         call RariToken_RariToken(this, msgsender_MSG, msgvalue_MSG);
[L7444]              assume !revert && gas >= 0;
[L7447]  CALL        call CorralChoice_RariToken(this);
[L7245]              havoc msgsender_MSG;
[L7246]              havoc msgvalue_MSG;
[L7247]              havoc choice;
[L7248]              havoc __ret_0_owner;
[L7249]              havoc __ret_0_isOwner;
[L7250]              havoc newOwner_s105;
[L7251]              havoc __ret_0_paused;
[L7252]              havoc __ret_0_totalSupply;
[L7253]              havoc account_s455;
[L7254]              havoc __ret_0_balanceOf;
[L7255]              havoc to_s841;
[L7256]              havoc value_s841;
[L7257]              havoc __ret_0_transfer;
[L7258]              havoc owner_s490;
[L7259]              havoc spender_s490;
[L7260]              havoc __ret_0_allowance;
[L7261]              havoc spender_s880;
[L7262]              havoc value_s880;
[L7263]              havoc __ret_0_approve;
[L7264]              havoc from_s862;
[L7265]              havoc to_s862;
[L7266]              havoc value_s862;
[L7267]              havoc __ret_0_transferFrom;
[L7268]              havoc spender_s898;
[L7269]              havoc addedValue_s898;
[L7270]              havoc __ret_0_increaseAllowance;
[L7271]              havoc spender_s916;
[L7272]              havoc subtractedValue_s916;
[L7273]              havoc __ret_0_decreaseAllowance;
[L7274]              havoc __ret_0_name;
[L7275]              havoc __ret_0_symbol;
[L7276]              havoc __ret_0_decimals;
[L7277]              havoc __ret_0_mintStopped;
[L7278]              havoc account_s960;
[L7279]              havoc amount_s960;
[L7280]              havoc __ret_0_mint;
[L7281]              havoc tmpNow;
[L7282]              havoc gas;
[L7283]              assume gas > 4000000 && gas <= 8000000;
[L7284]              tmpNow := now;
[L7285]              havoc now;
[L7286]              assume now > tmpNow;
[L7287]              assume msgsender_MSG != null;
[L7288]              assume DType[msgsender_MSG] != Context;
[L7289]              assume DType[msgsender_MSG] != Ownable;
[L7290]              assume DType[msgsender_MSG] != Pausable;
[L7291]              assume DType[msgsender_MSG] != IERC20;
[L7292]              assume DType[msgsender_MSG] != SafeMath;
[L7293]              assume DType[msgsender_MSG] != ERC20;
[L7294]              assume DType[msgsender_MSG] != ERC20Pausable;
[L7295]              assume DType[msgsender_MSG] != RariToken;
[L7296]              Alloc[msgsender_MSG] := true;
[L7297]  COND FALSE  !(choice == 21)
[L7303]  COND FALSE  !(choice == 20)
[L7309]  COND FALSE  !(choice == 19)
[L7315]  COND FALSE  !(choice == 18)
[L7321]  COND FALSE  !(choice == 17)
[L7327]  COND FALSE  !(choice == 16)
[L7333]  COND FALSE  !(choice == 15)
[L7339]  COND FALSE  !(choice == 14)
[L7345]  COND FALSE  !(choice == 13)
[L7351]  COND TRUE   choice == 12
[L7352]              gas := gas - 21000;
[L7353]  COND TRUE   gas >= 0
[L7354]              assume value_s841 >= 0 && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7355]              assume msgvalue_MSG == 0;
[L7356]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s841) && msgsender_MSG != to_s841) && value_s841 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s841] + value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s841 >= 0) && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s841] >= 0) && _balances_ERC20[this][to_s841] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1413]              havoc __exception;
[L1414]              revert := false;
[L1415]  COND TRUE   __exception
[L1416]              __tmp__Balance := Balance;
[L1417]              __tmp__DType := DType;
[L1418]              __tmp__Alloc := Alloc;
[L1419]              __tmp__balance_ADDR := balance_ADDR;
[L1420]              __tmp__M_Ref_int := M_Ref_int;
[L1421]              __tmp__sum__balances0 := sum__balances0;
[L1422]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1423]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1424]              __tmp__sum__allowances1 := sum__allowances1;
[L1425]              __tmp__Length := Length;
[L1426]              __tmp__now := now;
[L1427]              __tmp___owner_Ownable := _owner_Ownable;
[L1428]              __tmp___paused_Pausable := _paused_Pausable;
[L1429]              __tmp___balances_ERC20 := _balances_ERC20;
[L1430]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1431]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1432]              __tmp__name_RariToken := name_RariToken;
[L1433]              __tmp__symbol_RariToken := symbol_RariToken;
[L1434]              __tmp__decimals_RariToken := decimals_RariToken;
[L1435]              __tmp__mintStopped_RariToken := mintStopped_RariToken;
[L1436]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L4672]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6526]  COND FALSE  !(!!__tmp___paused_Pausable[this])
[L4672]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4673]  COND FALSE  !(revert)
[L4676]  COND TRUE   __tmp__DType[this] == RariToken
[L4677]  CALL        call __var_31 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L3609]  COND TRUE   __tmp__DType[this] == RariToken
[L3610]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2931]              __ret_0_ := msgsender_MSG;
[L3610]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L3611]  COND FALSE  !(revert)
[L3627]  COND TRUE   __tmp__DType[this] == RariToken
[L3628]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, recipient_s474, amount_s474);
[L4234]              __var_16 := null;
[L4235]  COND TRUE   !(sender_s657 != null)
[L4236]              revert := true;
[L3628]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, recipient_s474, amount_s474);
[L3629]  COND TRUE   revert
[L4677]  RET         call __var_31 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L4678]  COND TRUE   revert
[L1436]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L1437]              assume revert || gas < 0;
[L7356]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L7447]  RET         call CorralChoice_RariToken(this);

Loop:
[L7447]  CALL        call CorralChoice_RariToken(this);
[L7245]              havoc msgsender_MSG;
[L7246]              havoc msgvalue_MSG;
[L7247]              havoc choice;
[L7248]              havoc __ret_0_owner;
[L7249]              havoc __ret_0_isOwner;
[L7250]              havoc newOwner_s105;
[L7251]              havoc __ret_0_paused;
[L7252]              havoc __ret_0_totalSupply;
[L7253]              havoc account_s455;
[L7254]              havoc __ret_0_balanceOf;
[L7255]              havoc to_s841;
[L7256]              havoc value_s841;
[L7257]              havoc __ret_0_transfer;
[L7258]              havoc owner_s490;
[L7259]              havoc spender_s490;
[L7260]              havoc __ret_0_allowance;
[L7261]              havoc spender_s880;
[L7262]              havoc value_s880;
[L7263]              havoc __ret_0_approve;
[L7264]              havoc from_s862;
[L7265]              havoc to_s862;
[L7266]              havoc value_s862;
[L7267]              havoc __ret_0_transferFrom;
[L7268]              havoc spender_s898;
[L7269]              havoc addedValue_s898;
[L7270]              havoc __ret_0_increaseAllowance;
[L7271]              havoc spender_s916;
[L7272]              havoc subtractedValue_s916;
[L7273]              havoc __ret_0_decreaseAllowance;
[L7274]              havoc __ret_0_name;
[L7275]              havoc __ret_0_symbol;
[L7276]              havoc __ret_0_decimals;
[L7277]              havoc __ret_0_mintStopped;
[L7278]              havoc account_s960;
[L7279]              havoc amount_s960;
[L7280]              havoc __ret_0_mint;
[L7281]              havoc tmpNow;
[L7282]              havoc gas;
[L7283]              assume gas > 4000000 && gas <= 8000000;
[L7284]              tmpNow := now;
[L7285]              havoc now;
[L7286]              assume now > tmpNow;
[L7287]              assume msgsender_MSG != null;
[L7288]              assume DType[msgsender_MSG] != Context;
[L7289]              assume DType[msgsender_MSG] != Ownable;
[L7290]              assume DType[msgsender_MSG] != Pausable;
[L7291]              assume DType[msgsender_MSG] != IERC20;
[L7292]              assume DType[msgsender_MSG] != SafeMath;
[L7293]              assume DType[msgsender_MSG] != ERC20;
[L7294]              assume DType[msgsender_MSG] != ERC20Pausable;
[L7295]              assume DType[msgsender_MSG] != RariToken;
[L7296]              Alloc[msgsender_MSG] := true;
[L7297]  COND FALSE  !(choice == 21)
[L7303]  COND FALSE  !(choice == 20)
[L7309]  COND FALSE  !(choice == 19)
[L7315]  COND FALSE  !(choice == 18)
[L7321]  COND FALSE  !(choice == 17)
[L7327]  COND FALSE  !(choice == 16)
[L7333]  COND FALSE  !(choice == 15)
[L7339]  COND FALSE  !(choice == 14)
[L7345]  COND FALSE  !(choice == 13)
[L7351]  COND TRUE   choice == 12
[L7352]              gas := gas - 21000;
[L7353]  COND TRUE   gas >= 0
[L7354]              assume value_s841 >= 0 && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7355]              assume msgvalue_MSG == 0;
[L7356]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s841) && msgsender_MSG != to_s841) && value_s841 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s841] + value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s841 >= 0) && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s841] >= 0) && _balances_ERC20[this][to_s841] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1413]              havoc __exception;
[L1414]              revert := false;
[L1415]  COND TRUE   __exception
[L1416]              __tmp__Balance := Balance;
[L1417]              __tmp__DType := DType;
[L1418]              __tmp__Alloc := Alloc;
[L1419]              __tmp__balance_ADDR := balance_ADDR;
[L1420]              __tmp__M_Ref_int := M_Ref_int;
[L1421]              __tmp__sum__balances0 := sum__balances0;
[L1422]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1423]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1424]              __tmp__sum__allowances1 := sum__allowances1;
[L1425]              __tmp__Length := Length;
[L1426]              __tmp__now := now;
[L1427]              __tmp___owner_Ownable := _owner_Ownable;
[L1428]              __tmp___paused_Pausable := _paused_Pausable;
[L1429]              __tmp___balances_ERC20 := _balances_ERC20;
[L1430]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1431]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1432]              __tmp__name_RariToken := name_RariToken;
[L1433]              __tmp__symbol_RariToken := symbol_RariToken;
[L1434]              __tmp__decimals_RariToken := decimals_RariToken;
[L1435]              __tmp__mintStopped_RariToken := mintStopped_RariToken;
[L1436]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L4672]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6526]  COND FALSE  !(!!__tmp___paused_Pausable[this])
[L4672]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4673]  COND FALSE  !(revert)
[L4676]  COND TRUE   __tmp__DType[this] == RariToken
[L4677]  CALL        call __var_31 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L3609]  COND TRUE   __tmp__DType[this] == RariToken
[L3610]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2931]              __ret_0_ := msgsender_MSG;
[L3610]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L3611]  COND FALSE  !(revert)
[L3627]  COND TRUE   __tmp__DType[this] == RariToken
[L3628]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, recipient_s474, amount_s474);
[L4234]              __var_16 := null;
[L4235]  COND TRUE   !(sender_s657 != null)
[L4236]              revert := true;
[L3628]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, recipient_s474, amount_s474);
[L3629]  COND TRUE   revert
[L4677]  RET         call __var_31 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L4678]  COND TRUE   revert
[L1436]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L1437]              assume revert || gas < 0;
[L7356]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L7447]  RET         call CorralChoice_RariToken(this);

[2020-11-25 03:25:34,583 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 03:25:34,583 INFO  L82        PathProgramCache]: Analyzing trace with hash 360698242, now seen corresponding path program 1 times
[2020-11-25 03:25:34,584 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 03:25:34,597 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 03:25:34,726 INFO  L134       CoverageAnalysis]: Checked inductivity of 709 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 709 trivial. 0 not checked.
[2020-11-25 03:25:34,727 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 03:25:34,727 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-25 03:25:34,727 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 03:25:34,727 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-25 03:25:34,727 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=15, Invalid=57, Unknown=0, NotChecked=0, Total=72
[2020-11-25 03:25:34,727 INFO  L87              Difference]: Start difference. First operand 7168 states and 8573 transitions. cyclomatic complexity: 1409 Second operand 9 states.
[2020-11-25 03:25:34,897 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 03:25:34,897 INFO  L93              Difference]: Finished difference Result 7208 states and 8623 transitions.
[2020-11-25 03:25:34,897 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 9 states. 
[2020-11-25 03:25:34,897 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7208 states and 8623 transitions.
[2020-11-25 03:25:34,918 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 16
[2020-11-25 03:25:34,941 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7208 states to 7172 states and 8581 transitions.
[2020-11-25 03:25:34,941 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1708
[2020-11-25 03:25:34,942 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1708
[2020-11-25 03:25:34,942 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7172 states and 8581 transitions.
[2020-11-25 03:25:34,946 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 03:25:34,946 INFO  L728         BuchiCegarLoop]: Abstraction has 7172 states and 8581 transitions.
[2020-11-25 03:25:34,951 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7172 states and 8581 transitions.
[2020-11-25 03:25:34,998 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7172 to 7172.
[2020-11-25 03:25:34,998 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 7172 states.
[2020-11-25 03:25:35,008 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 7172 states to 7172 states and 8581 transitions.
[2020-11-25 03:25:35,008 INFO  L751         BuchiCegarLoop]: Abstraction has 7172 states and 8581 transitions.
[2020-11-25 03:25:35,008 INFO  L631         BuchiCegarLoop]: Abstraction has 7172 states and 8581 transitions.
[2020-11-25 03:25:35,008 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 03:25:35,008 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7172 states and 8581 transitions.
[2020-11-25 03:25:35,017 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 16
[2020-11-25 03:25:35,017 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 03:25:35,017 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 03:25:35,018 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [10, 10, 10, 10, 10, 10, 10, 10, 10, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 03:25:35,018 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC20Pausable0 := false;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7437]              assume null == 0;
[L7438]  CALL        call this := FreshRefGenerator__success();
[L2891]              havoc newRef;
[L2892]              assume Alloc[newRef] == false;
[L2893]              Alloc[newRef] := true;
[L2894]              assume newRef != null;
[L7438]  RET         call this := FreshRefGenerator__success();
[L7439]              assume now >= 0;
[L7440]              assume DType[this] == RariToken;
[L7441]              assume msgvalue_MSG == 0;
[L7442]              gas := gas - 53000;
[L7443]  CALL        call RariToken_RariToken(this, msgsender_MSG, msgvalue_MSG);
[L1725]              havoc __exception;
[L1726]              revert := false;
[L1727]  COND FALSE  !(__exception)
[L1751]  CALL        call RariToken_RariToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4976]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L4976]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4977]  COND FALSE  !(revert)
[L4980]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3028]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3028]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3032]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2980]              assume msgsender_MSG != null;
[L2981]              Balance[this] := 0;
[L2982]              _owner_Ownable[this] := null;
[L2984]  COND TRUE   DType[this] == RariToken
[L2985]  CALL        call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2937]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L3007]              msgSender_s45 := msgSender_s45;
[L3008]              _owner_Ownable[this] := msgSender_s45;
[L3009]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3032]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3033]  COND FALSE  !(revert)
[L4980]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4981]  COND FALSE  !(revert)
[L4984]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3256]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]  COND FALSE  !(revert)
[L3260]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3028]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3028]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3032]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2980]              assume msgsender_MSG != null;
[L2981]              Balance[this] := 0;
[L2982]              _owner_Ownable[this] := null;
[L2984]  COND TRUE   DType[this] == RariToken
[L2985]  CALL        call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2937]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L3007]              msgSender_s45 := msgSender_s45;
[L3008]              _owner_Ownable[this] := msgSender_s45;
[L3009]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3032]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3033]  COND FALSE  !(revert)
[L3260]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3261]  COND FALSE  !(revert)
[L3264]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3231]              assume msgsender_MSG != null;
[L3232]              Balance[this] := 0;
[L3233]              _paused_Pausable[this] := false;
[L3235]              _paused_Pausable[this] := false;
[L3264]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3265]  COND FALSE  !(revert)
[L4984]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4985]  COND FALSE  !(revert)
[L4988]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3362]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3347]              assume msgsender_MSG != null;
[L3348]              Balance[this] := 0;
[L3362]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L4988]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4989]  COND FALSE  !(revert)
[L4992]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3568]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3568]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3569]  COND FALSE  !(revert)
[L3572]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3362]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3347]              assume msgsender_MSG != null;
[L3348]              Balance[this] := 0;
[L3362]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L3572]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3573]  COND FALSE  !(revert)
[L3576]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3540]              assume msgsender_MSG != null;
[L3541]              Balance[this] := 0;
[L3542]              _balances_ERC20[this] := zeroRefintArr();
[L3543]              sum__balances0[this] := 0;
[L3544]              _allowances_ERC20[this] := zeroRefRefintArr();
[L3545]              sum__allowances1[this] := 0;
[L3546]              _totalSupply_ERC20[this] := 0;
[L3576]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3577]  COND FALSE  !(revert)
[L4992]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4993]  COND FALSE  !(revert)
[L4996]  CALL        call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4642]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L4642]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4643]  COND FALSE  !(revert)
[L4646]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3028]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3028]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3032]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2980]              assume msgsender_MSG != null;
[L2981]              Balance[this] := 0;
[L2982]              _owner_Ownable[this] := null;
[L2984]  COND TRUE   DType[this] == RariToken
[L2985]  CALL        call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2937]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L3007]              msgSender_s45 := msgSender_s45;
[L3008]              _owner_Ownable[this] := msgSender_s45;
[L3009]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3032]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3033]  COND FALSE  !(revert)
[L4646]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4647]  COND FALSE  !(revert)
[L4650]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3256]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]  COND FALSE  !(revert)
[L3260]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3028]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3028]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3032]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2980]              assume msgsender_MSG != null;
[L2981]              Balance[this] := 0;
[L2982]              _owner_Ownable[this] := null;
[L2984]  COND TRUE   DType[this] == RariToken
[L2985]  CALL        call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2937]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L3007]              msgSender_s45 := msgSender_s45;
[L3008]              _owner_Ownable[this] := msgSender_s45;
[L3009]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3032]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3033]  COND FALSE  !(revert)
[L3260]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3261]  COND FALSE  !(revert)
[L3264]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3231]              assume msgsender_MSG != null;
[L3232]              Balance[this] := 0;
[L3233]              _paused_Pausable[this] := false;
[L3235]              _paused_Pausable[this] := false;
[L3264]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3265]  COND FALSE  !(revert)
[L4650]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4651]  COND FALSE  !(revert)
[L4654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3362]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3347]              assume msgsender_MSG != null;
[L3348]              Balance[this] := 0;
[L3362]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L4654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4655]  COND FALSE  !(revert)
[L4658]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3568]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3568]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3569]  COND FALSE  !(revert)
[L3572]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3362]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3347]              assume msgsender_MSG != null;
[L3348]              Balance[this] := 0;
[L3362]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L3572]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3573]  COND FALSE  !(revert)
[L3576]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3540]              assume msgsender_MSG != null;
[L3541]              Balance[this] := 0;
[L3542]              _balances_ERC20[this] := zeroRefintArr();
[L3543]              sum__balances0[this] := 0;
[L3544]              _allowances_ERC20[this] := zeroRefRefintArr();
[L3545]              sum__allowances1[this] := 0;
[L3546]              _totalSupply_ERC20[this] := 0;
[L3576]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3577]  COND FALSE  !(revert)
[L4658]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4659]  COND FALSE  !(revert)
[L4662]  CALL        call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4607]              assume msgsender_MSG != null;
[L4608]              Balance[this] := 0;
[L4662]  RET         call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4663]  COND FALSE  !(revert)
[L4996]  RET         call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4997]  COND FALSE  !(revert)
[L5000]  CALL        call RariToken_RariToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4933]              assume msgsender_MSG != null;
[L4934]              Balance[this] := 0;
[L4935]              name_RariToken[this] := 920169039;
[L4936]              symbol_RariToken[this] := 1865763617;
[L4937]              decimals_RariToken[this] := 18;
[L4938]              mintStopped_RariToken[this] := false;
[L5000]  RET         call RariToken_RariToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L5001]  COND FALSE  !(revert)
[L1751]  RET         call RariToken_RariToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1752]              assume !revert && gas >= 0;
[L7443]  RET         call RariToken_RariToken(this, msgsender_MSG, msgvalue_MSG);
[L7444]              assume !revert && gas >= 0;
[L7447]  CALL        call CorralChoice_RariToken(this);
[L7245]              havoc msgsender_MSG;
[L7246]              havoc msgvalue_MSG;
[L7247]              havoc choice;
[L7248]              havoc __ret_0_owner;
[L7249]              havoc __ret_0_isOwner;
[L7250]              havoc newOwner_s105;
[L7251]              havoc __ret_0_paused;
[L7252]              havoc __ret_0_totalSupply;
[L7253]              havoc account_s455;
[L7254]              havoc __ret_0_balanceOf;
[L7255]              havoc to_s841;
[L7256]              havoc value_s841;
[L7257]              havoc __ret_0_transfer;
[L7258]              havoc owner_s490;
[L7259]              havoc spender_s490;
[L7260]              havoc __ret_0_allowance;
[L7261]              havoc spender_s880;
[L7262]              havoc value_s880;
[L7263]              havoc __ret_0_approve;
[L7264]              havoc from_s862;
[L7265]              havoc to_s862;
[L7266]              havoc value_s862;
[L7267]              havoc __ret_0_transferFrom;
[L7268]              havoc spender_s898;
[L7269]              havoc addedValue_s898;
[L7270]              havoc __ret_0_increaseAllowance;
[L7271]              havoc spender_s916;
[L7272]              havoc subtractedValue_s916;
[L7273]              havoc __ret_0_decreaseAllowance;
[L7274]              havoc __ret_0_name;
[L7275]              havoc __ret_0_symbol;
[L7276]              havoc __ret_0_decimals;
[L7277]              havoc __ret_0_mintStopped;
[L7278]              havoc account_s960;
[L7279]              havoc amount_s960;
[L7280]              havoc __ret_0_mint;
[L7281]              havoc tmpNow;
[L7282]              havoc gas;
[L7283]              assume gas > 4000000 && gas <= 8000000;
[L7284]              tmpNow := now;
[L7285]              havoc now;
[L7286]              assume now > tmpNow;
[L7287]              assume msgsender_MSG != null;
[L7288]              assume DType[msgsender_MSG] != Context;
[L7289]              assume DType[msgsender_MSG] != Ownable;
[L7290]              assume DType[msgsender_MSG] != Pausable;
[L7291]              assume DType[msgsender_MSG] != IERC20;
[L7292]              assume DType[msgsender_MSG] != SafeMath;
[L7293]              assume DType[msgsender_MSG] != ERC20;
[L7294]              assume DType[msgsender_MSG] != ERC20Pausable;
[L7295]              assume DType[msgsender_MSG] != RariToken;
[L7296]              Alloc[msgsender_MSG] := true;
[L7297]  COND FALSE  !(choice == 21)
[L7303]  COND FALSE  !(choice == 20)
[L7309]  COND FALSE  !(choice == 19)
[L7315]  COND FALSE  !(choice == 18)
[L7321]  COND FALSE  !(choice == 17)
[L7327]  COND FALSE  !(choice == 16)
[L7333]  COND FALSE  !(choice == 15)
[L7339]  COND FALSE  !(choice == 14)
[L7345]  COND FALSE  !(choice == 13)
[L7351]  COND TRUE   choice == 12
[L7352]              gas := gas - 21000;
[L7353]  COND TRUE   gas >= 0
[L7354]              assume value_s841 >= 0 && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7355]              assume msgvalue_MSG == 0;
[L7356]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s841) && msgsender_MSG != to_s841) && value_s841 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s841] + value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s841 >= 0) && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s841] >= 0) && _balances_ERC20[this][to_s841] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1413]              havoc __exception;
[L1414]              revert := false;
[L1415]  COND TRUE   __exception
[L1416]              __tmp__Balance := Balance;
[L1417]              __tmp__DType := DType;
[L1418]              __tmp__Alloc := Alloc;
[L1419]              __tmp__balance_ADDR := balance_ADDR;
[L1420]              __tmp__M_Ref_int := M_Ref_int;
[L1421]              __tmp__sum__balances0 := sum__balances0;
[L1422]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1423]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1424]              __tmp__sum__allowances1 := sum__allowances1;
[L1425]              __tmp__Length := Length;
[L1426]              __tmp__now := now;
[L1427]              __tmp___owner_Ownable := _owner_Ownable;
[L1428]              __tmp___paused_Pausable := _paused_Pausable;
[L1429]              __tmp___balances_ERC20 := _balances_ERC20;
[L1430]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1431]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1432]              __tmp__name_RariToken := name_RariToken;
[L1433]              __tmp__symbol_RariToken := symbol_RariToken;
[L1434]              __tmp__decimals_RariToken := decimals_RariToken;
[L1435]              __tmp__mintStopped_RariToken := mintStopped_RariToken;
[L1436]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L4672]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6526]  COND FALSE  !(!!__tmp___paused_Pausable[this])
[L4672]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4673]  COND FALSE  !(revert)
[L4676]  COND TRUE   __tmp__DType[this] == RariToken
[L4677]  CALL        call __var_31 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L3609]  COND TRUE   __tmp__DType[this] == RariToken
[L3610]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2931]              __ret_0_ := msgsender_MSG;
[L3610]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L3611]  COND FALSE  !(revert)
[L3627]  COND TRUE   __tmp__DType[this] == RariToken
[L3628]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, recipient_s474, amount_s474);
[L4234]              __var_16 := null;
[L4235]  COND FALSE  !(!(sender_s657 != null))
[L4239]              __var_17 := null;
[L4240]  COND TRUE   !(recipient_s657 != null)
[L4241]              revert := true;
[L3628]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, recipient_s474, amount_s474);
[L3629]  COND TRUE   revert
[L4677]  RET         call __var_31 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L4678]  COND TRUE   revert
[L1436]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L1437]              assume revert || gas < 0;
[L7356]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L7447]  RET         call CorralChoice_RariToken(this);

Loop:
[L7447]  CALL        call CorralChoice_RariToken(this);
[L7245]              havoc msgsender_MSG;
[L7246]              havoc msgvalue_MSG;
[L7247]              havoc choice;
[L7248]              havoc __ret_0_owner;
[L7249]              havoc __ret_0_isOwner;
[L7250]              havoc newOwner_s105;
[L7251]              havoc __ret_0_paused;
[L7252]              havoc __ret_0_totalSupply;
[L7253]              havoc account_s455;
[L7254]              havoc __ret_0_balanceOf;
[L7255]              havoc to_s841;
[L7256]              havoc value_s841;
[L7257]              havoc __ret_0_transfer;
[L7258]              havoc owner_s490;
[L7259]              havoc spender_s490;
[L7260]              havoc __ret_0_allowance;
[L7261]              havoc spender_s880;
[L7262]              havoc value_s880;
[L7263]              havoc __ret_0_approve;
[L7264]              havoc from_s862;
[L7265]              havoc to_s862;
[L7266]              havoc value_s862;
[L7267]              havoc __ret_0_transferFrom;
[L7268]              havoc spender_s898;
[L7269]              havoc addedValue_s898;
[L7270]              havoc __ret_0_increaseAllowance;
[L7271]              havoc spender_s916;
[L7272]              havoc subtractedValue_s916;
[L7273]              havoc __ret_0_decreaseAllowance;
[L7274]              havoc __ret_0_name;
[L7275]              havoc __ret_0_symbol;
[L7276]              havoc __ret_0_decimals;
[L7277]              havoc __ret_0_mintStopped;
[L7278]              havoc account_s960;
[L7279]              havoc amount_s960;
[L7280]              havoc __ret_0_mint;
[L7281]              havoc tmpNow;
[L7282]              havoc gas;
[L7283]              assume gas > 4000000 && gas <= 8000000;
[L7284]              tmpNow := now;
[L7285]              havoc now;
[L7286]              assume now > tmpNow;
[L7287]              assume msgsender_MSG != null;
[L7288]              assume DType[msgsender_MSG] != Context;
[L7289]              assume DType[msgsender_MSG] != Ownable;
[L7290]              assume DType[msgsender_MSG] != Pausable;
[L7291]              assume DType[msgsender_MSG] != IERC20;
[L7292]              assume DType[msgsender_MSG] != SafeMath;
[L7293]              assume DType[msgsender_MSG] != ERC20;
[L7294]              assume DType[msgsender_MSG] != ERC20Pausable;
[L7295]              assume DType[msgsender_MSG] != RariToken;
[L7296]              Alloc[msgsender_MSG] := true;
[L7297]  COND FALSE  !(choice == 21)
[L7303]  COND FALSE  !(choice == 20)
[L7309]  COND FALSE  !(choice == 19)
[L7315]  COND FALSE  !(choice == 18)
[L7321]  COND FALSE  !(choice == 17)
[L7327]  COND FALSE  !(choice == 16)
[L7333]  COND FALSE  !(choice == 15)
[L7339]  COND FALSE  !(choice == 14)
[L7345]  COND FALSE  !(choice == 13)
[L7351]  COND TRUE   choice == 12
[L7352]              gas := gas - 21000;
[L7353]  COND TRUE   gas >= 0
[L7354]              assume value_s841 >= 0 && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7355]              assume msgvalue_MSG == 0;
[L7356]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s841) && msgsender_MSG != to_s841) && value_s841 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s841] + value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s841 >= 0) && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s841] >= 0) && _balances_ERC20[this][to_s841] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1413]              havoc __exception;
[L1414]              revert := false;
[L1415]  COND TRUE   __exception
[L1416]              __tmp__Balance := Balance;
[L1417]              __tmp__DType := DType;
[L1418]              __tmp__Alloc := Alloc;
[L1419]              __tmp__balance_ADDR := balance_ADDR;
[L1420]              __tmp__M_Ref_int := M_Ref_int;
[L1421]              __tmp__sum__balances0 := sum__balances0;
[L1422]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1423]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1424]              __tmp__sum__allowances1 := sum__allowances1;
[L1425]              __tmp__Length := Length;
[L1426]              __tmp__now := now;
[L1427]              __tmp___owner_Ownable := _owner_Ownable;
[L1428]              __tmp___paused_Pausable := _paused_Pausable;
[L1429]              __tmp___balances_ERC20 := _balances_ERC20;
[L1430]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1431]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1432]              __tmp__name_RariToken := name_RariToken;
[L1433]              __tmp__symbol_RariToken := symbol_RariToken;
[L1434]              __tmp__decimals_RariToken := decimals_RariToken;
[L1435]              __tmp__mintStopped_RariToken := mintStopped_RariToken;
[L1436]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L4672]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6526]  COND FALSE  !(!!__tmp___paused_Pausable[this])
[L4672]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4673]  COND FALSE  !(revert)
[L4676]  COND TRUE   __tmp__DType[this] == RariToken
[L4677]  CALL        call __var_31 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L3609]  COND TRUE   __tmp__DType[this] == RariToken
[L3610]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2931]              __ret_0_ := msgsender_MSG;
[L3610]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L3611]  COND FALSE  !(revert)
[L3627]  COND TRUE   __tmp__DType[this] == RariToken
[L3628]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, recipient_s474, amount_s474);
[L4234]              __var_16 := null;
[L4235]  COND FALSE  !(!(sender_s657 != null))
[L4239]              __var_17 := null;
[L4240]  COND TRUE   !(recipient_s657 != null)
[L4241]              revert := true;
[L3628]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, recipient_s474, amount_s474);
[L3629]  COND TRUE   revert
[L4677]  RET         call __var_31 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L4678]  COND TRUE   revert
[L1436]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L1437]              assume revert || gas < 0;
[L7356]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L7447]  RET         call CorralChoice_RariToken(this);

[2020-11-25 03:25:35,023 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 03:25:35,023 INFO  L82        PathProgramCache]: Analyzing trace with hash -478811850, now seen corresponding path program 1 times
[2020-11-25 03:25:35,024 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 03:25:35,039 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 03:25:35,056 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 03:25:35,153 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 03:25:35,153 INFO  L82        PathProgramCache]: Analyzing trace with hash 1082849986, now seen corresponding path program 1 times
[2020-11-25 03:25:35,154 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 03:25:35,158 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 03:25:35,163 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 03:25:35,175 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 03:25:35,175 INFO  L82        PathProgramCache]: Analyzing trace with hash 672551469, now seen corresponding path program 1 times
[2020-11-25 03:25:35,175 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 03:25:35,198 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 03:25:35,220 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 17 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 113 to 223
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
[2020-11-25 03:25:35,674 WARN  L188               SmtUtils]: Spent 115.00 ms on a formula simplification that was a NOOP. DAG size: 247
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
[2020-11-25 03:25:35,848 WARN  L188               SmtUtils]: Spent 165.00 ms on a formula simplification that was a NOOP. DAG size: 199
[2020-11-25 03:25:36,283 WARN  L188               SmtUtils]: Spent 432.00 ms on a formula simplification. DAG size of input: 278 DAG size of output: 245
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 03:25:36,603 WARN  L188               SmtUtils]: Spent 207.00 ms on a formula simplification that was a NOOP. DAG size: 315
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7933 to 15859
[2020-11-25 03:25:36,744 WARN  L188               SmtUtils]: Spent 130.00 ms on a formula simplification that was a NOOP. DAG size: 256
[2020-11-25 03:25:36,872 WARN  L188               SmtUtils]: Spent 126.00 ms on a formula simplification that was a NOOP. DAG size: 256
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6271 to 12541
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 03:25:36,964 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-25 03:25:37,375 WARN  L188               SmtUtils]: Spent 122.00 ms on a formula simplification. DAG size of input: 220 DAG size of output: 204
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 03:25:37,790 WARN  L188               SmtUtils]: Spent 101.00 ms on a formula simplification that was a NOOP. DAG size: 199
[2020-11-25 03:25:38,235 WARN  L188               SmtUtils]: Spent 442.00 ms on a formula simplification. DAG size of input: 277 DAG size of output: 245
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 03:25:38,469 WARN  L188               SmtUtils]: Spent 140.00 ms on a formula simplification that was a NOOP. DAG size: 315
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 03:25:38,577 WARN  L188               SmtUtils]: Spent 104.00 ms on a formula simplification that was a NOOP. DAG size: 256
[2020-11-25 03:25:39,121 WARN  L188               SmtUtils]: Spent 542.00 ms on a formula simplification. DAG size of input: 442 DAG size of output: 427
Garbage collection #1: 179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 179 to 353
Garbage collection #2: 353 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 353 to 701
Garbage collection #3: 701 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 701 to 1399
Garbage collection #4: 1399 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1399 to 2797
Garbage collection #5: 2797 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2797 to 5591
Garbage collection #6: 5591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5591 to 11177
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
[2020-11-25 03:25:39,499 WARN  L188               SmtUtils]: Spent 137.00 ms on a formula simplification. DAG size of input: 282 DAG size of output: 281
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 03:25:39,586 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 03:25:39,608 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 03:25:39,618 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:25:39 BasicIcfg
[2020-11-25 03:25:39,618 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 03:25:39,618 INFO  L168              Benchmark]: Toolchain (without parser) took 16067.68 ms. Allocated memory was 1.0 GB in the beginning and 2.2 GB in the end (delta: 1.1 GB). Free memory was 929.8 MB in the beginning and 1.5 GB in the end (delta: -523.5 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
[2020-11-25 03:25:39,619 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.19 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 03:25:39,619 INFO  L168              Benchmark]: Boogie Preprocessor took 125.19 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 03:25:39,619 INFO  L168              Benchmark]: UtopiaSpecLang took 67.43 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 903.0 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 03:25:39,620 INFO  L168              Benchmark]: Boogie Printer took 22.21 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 897.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 03:25:39,620 INFO  L168              Benchmark]: RCFGBuilder took 1009.90 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.8 MB). Free memory was 897.6 MB in the beginning and 982.4 MB in the end (delta: -84.8 MB). Peak memory consumption was 186.0 MB. Max. memory is 15.3 GB.
[2020-11-25 03:25:39,620 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.20 ms. Allocated memory is still 1.1 GB. Free memory was 982.4 MB in the beginning and 969.4 MB in the end (delta: 13.0 MB). Peak memory consumption was 13.0 MB. Max. memory is 15.3 GB.
[2020-11-25 03:25:39,621 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1812.37 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 163.6 MB). Free memory was 969.4 MB in the beginning and 841.7 MB in the end (delta: 127.7 MB). Peak memory consumption was 472.2 MB. Max. memory is 15.3 GB.
[2020-11-25 03:25:39,621 INFO  L168              Benchmark]: BlockEncodingV2 took 205.53 ms. Allocated memory is still 1.3 GB. Free memory was 841.7 MB in the beginning and 729.5 MB in the end (delta: 112.3 MB). Peak memory consumption was 112.3 MB. Max. memory is 15.3 GB.
[2020-11-25 03:25:39,621 INFO  L168              Benchmark]: BuchiAutomizer took 12782.01 ms. Allocated memory was 1.3 GB in the beginning and 2.2 GB in the end (delta: 912.3 MB). Free memory was 729.5 MB in the beginning and 1.5 GB in the end (delta: -723.8 MB). Peak memory consumption was 749.8 MB. Max. memory is 15.3 GB.
[2020-11-25 03:25:39,623 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    7470 locations, 14051 edges
  - StatisticsResult: Encoded RCFG
    7308 locations, 13594 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.19 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 125.19 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 67.43 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 903.0 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 22.21 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 897.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1009.90 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.8 MB). Free memory was 897.6 MB in the beginning and 982.4 MB in the end (delta: -84.8 MB). Peak memory consumption was 186.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.20 ms. Allocated memory is still 1.1 GB. Free memory was 982.4 MB in the beginning and 969.4 MB in the end (delta: 13.0 MB). Peak memory consumption was 13.0 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1812.37 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 163.6 MB). Free memory was 969.4 MB in the beginning and 841.7 MB in the end (delta: 127.7 MB). Peak memory consumption was 472.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 205.53 ms. Allocated memory is still 1.3 GB. Free memory was 841.7 MB in the beginning and 729.5 MB in the end (delta: 112.3 MB). Peak memory consumption was 112.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 12782.01 ms. Allocated memory was 1.3 GB in the beginning and 2.2 GB in the end (delta: 912.3 MB). Free memory was 729.5 MB in the beginning and 1.5 GB in the end (delta: -723.8 MB). Peak memory consumption was 749.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2842 locations, 4273 edges
  - StatisticsResult: BuchiProgram size
    7470 locations, 14051 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 14 locations. The remainder module has 7172 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 12.7s and 6 iterations.  TraceHistogramMax:10. Analysis of lassos took 5.5s. Construction of modules took 4.6s. BÃ¼chi inclusion checks took 1.6s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.3s AutomataMinimizationTime, 5 MinimizatonAttempts, 2287 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.2s Buchi closure took 0.0s. Biggest automaton had 7172 states and ocurred in iteration 5.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 27851 SDtfs, 26624 SDslu, 52739 SDs, 0 SdLazy, 69631 SolverSat, 5396 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 4.6s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1865763630) = (new RariToken)({from : 1865763627});
[L1725]              havoc __exception;
[L1726]              revert := false;
[L1727]  COND FALSE  !(__exception)
[L1751]  CALL        call RariToken_RariToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4976]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L4976]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4977]  COND FALSE  !(revert)
[L4980]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3028]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3028]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3032]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2980]              assume msgsender_MSG != null;
[L2981]              Balance[this] := 0;
[L2982]              _owner_Ownable[this] := null;
[L2984]  COND TRUE   DType[this] == RariToken
[L2985]  CALL        call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2937]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L3007]              msgSender_s45 := msgSender_s45;
[L3008]              _owner_Ownable[this] := msgSender_s45;
[L3009]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3032]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3033]  COND FALSE  !(revert)
[L4980]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4981]  COND FALSE  !(revert)
[L4984]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3256]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]  COND FALSE  !(revert)
[L3260]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3028]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3028]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3032]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2980]              assume msgsender_MSG != null;
[L2981]              Balance[this] := 0;
[L2982]              _owner_Ownable[this] := null;
[L2984]  COND TRUE   DType[this] == RariToken
[L2985]  CALL        call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2937]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L3007]              msgSender_s45 := msgSender_s45;
[L3008]              _owner_Ownable[this] := msgSender_s45;
[L3009]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3032]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3033]  COND FALSE  !(revert)
[L3260]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3261]  COND FALSE  !(revert)
[L3264]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3231]              assume msgsender_MSG != null;
[L3232]              Balance[this] := 0;
[L3233]              _paused_Pausable[this] := false;
[L3235]              _paused_Pausable[this] := false;
[L3264]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3265]  COND FALSE  !(revert)
[L4984]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4985]  COND FALSE  !(revert)
[L4988]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3362]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3347]              assume msgsender_MSG != null;
[L3348]              Balance[this] := 0;
[L3362]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L4988]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4989]  COND FALSE  !(revert)
[L4992]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3568]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3568]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3569]  COND FALSE  !(revert)
[L3572]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3362]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3347]              assume msgsender_MSG != null;
[L3348]              Balance[this] := 0;
[L3362]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L3572]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3573]  COND FALSE  !(revert)
[L3576]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3540]              assume msgsender_MSG != null;
[L3541]              Balance[this] := 0;
[L3542]              _balances_ERC20[this] := zeroRefintArr();
[L3543]              sum__balances0[this] := 0;
[L3544]              _allowances_ERC20[this] := zeroRefRefintArr();
[L3545]              sum__allowances1[this] := 0;
[L3546]              _totalSupply_ERC20[this] := 0;
[L3576]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3577]  COND FALSE  !(revert)
[L4992]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4993]  COND FALSE  !(revert)
[L4996]  CALL        call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4642]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L4642]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4643]  COND FALSE  !(revert)
[L4646]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3028]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3028]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3032]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2980]              assume msgsender_MSG != null;
[L2981]              Balance[this] := 0;
[L2982]              _owner_Ownable[this] := null;
[L2984]  COND TRUE   DType[this] == RariToken
[L2985]  CALL        call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2937]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L3007]              msgSender_s45 := msgSender_s45;
[L3008]              _owner_Ownable[this] := msgSender_s45;
[L3009]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3032]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3033]  COND FALSE  !(revert)
[L4646]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4647]  COND FALSE  !(revert)
[L4650]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3256]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]  COND FALSE  !(revert)
[L3260]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3028]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3028]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3029]  COND FALSE  !(revert)
[L3032]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2980]              assume msgsender_MSG != null;
[L2981]              Balance[this] := 0;
[L2982]              _owner_Ownable[this] := null;
[L2984]  COND TRUE   DType[this] == RariToken
[L2985]  CALL        call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2937]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call msgSender_s45 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L3007]              msgSender_s45 := msgSender_s45;
[L3008]              _owner_Ownable[this] := msgSender_s45;
[L3009]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3032]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3033]  COND FALSE  !(revert)
[L3260]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3261]  COND FALSE  !(revert)
[L3264]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3231]              assume msgsender_MSG != null;
[L3232]              Balance[this] := 0;
[L3233]              _paused_Pausable[this] := false;
[L3235]              _paused_Pausable[this] := false;
[L3264]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3265]  COND FALSE  !(revert)
[L4650]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4651]  COND FALSE  !(revert)
[L4654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3362]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3347]              assume msgsender_MSG != null;
[L3348]              Balance[this] := 0;
[L3362]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L4654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4655]  COND FALSE  !(revert)
[L4658]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3568]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2923]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2908]              assume msgsender_MSG != null;
[L2909]              Balance[this] := 0;
[L2923]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2924]  COND FALSE  !(revert)
[L3568]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3569]  COND FALSE  !(revert)
[L3572]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3362]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3347]              assume msgsender_MSG != null;
[L3348]              Balance[this] := 0;
[L3362]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L3572]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3573]  COND FALSE  !(revert)
[L3576]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3540]              assume msgsender_MSG != null;
[L3541]              Balance[this] := 0;
[L3542]              _balances_ERC20[this] := zeroRefintArr();
[L3543]              sum__balances0[this] := 0;
[L3544]              _allowances_ERC20[this] := zeroRefRefintArr();
[L3545]              sum__allowances1[this] := 0;
[L3546]              _totalSupply_ERC20[this] := 0;
[L3576]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3577]  COND FALSE  !(revert)
[L4658]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4659]  COND FALSE  !(revert)
[L4662]  CALL        call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4607]              assume msgsender_MSG != null;
[L4608]              Balance[this] := 0;
[L4662]  RET         call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4663]  COND FALSE  !(revert)
[L4996]  RET         call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4997]  COND FALSE  !(revert)
[L5000]  CALL        call RariToken_RariToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4933]              assume msgsender_MSG != null;
[L4934]              Balance[this] := 0;
[L4935]              name_RariToken[this] := 920169039;
[L4936]              symbol_RariToken[this] := 1865763617;
[L4937]              decimals_RariToken[this] := 18;
[L4938]              mintStopped_RariToken[this] := false;
[L5000]  RET         call RariToken_RariToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L5001]  COND FALSE  !(revert)
[L1751]  RET         call RariToken_RariToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1752]              assume !revert && gas >= 0;
[L7443]  RET         call RariToken_RariToken(this, msgsender_MSG, msgvalue_MSG);
ERC20Pausable(1865763630).transfer~address~uint256.gas(3979002)({from : 1865763624, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s841) && msgsender_MSG != to_s841) && value_s841 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s841] + value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s841 >= 0) && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s841] >= 0) && _balances_ERC20[this][to_s841] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1413]              havoc __exception;
[L1414]              revert := false;
[L1415]  COND TRUE   __exception
[L1416]              __tmp__Balance := Balance;
[L1417]              __tmp__DType := DType;
[L1418]              __tmp__Alloc := Alloc;
[L1419]              __tmp__balance_ADDR := balance_ADDR;
[L1420]              __tmp__M_Ref_int := M_Ref_int;
[L1421]              __tmp__sum__balances0 := sum__balances0;
[L1422]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1423]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1424]              __tmp__sum__allowances1 := sum__allowances1;
[L1425]              __tmp__Length := Length;
[L1426]              __tmp__now := now;
[L1427]              __tmp___owner_Ownable := _owner_Ownable;
[L1428]              __tmp___paused_Pausable := _paused_Pausable;
[L1429]              __tmp___balances_ERC20 := _balances_ERC20;
[L1430]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1431]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1432]              __tmp__name_RariToken := name_RariToken;
[L1433]              __tmp__symbol_RariToken := symbol_RariToken;
[L1434]              __tmp__decimals_RariToken := decimals_RariToken;
[L1435]              __tmp__mintStopped_RariToken := mintStopped_RariToken;
[L1436]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L4672]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6526]  COND FALSE  !(!!__tmp___paused_Pausable[this])
[L4672]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4673]  COND FALSE  !(revert)
[L4676]  COND TRUE   __tmp__DType[this] == RariToken
[L4677]  CALL        call __var_31 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L3609]  COND TRUE   __tmp__DType[this] == RariToken
[L3610]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2931]              __ret_0_ := msgsender_MSG;
[L3610]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L3611]  COND FALSE  !(revert)
[L3627]  COND TRUE   __tmp__DType[this] == RariToken
[L3628]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, recipient_s474, amount_s474);
[L4234]              __var_16 := null;
[L4235]  COND FALSE  !(!(sender_s657 != null))
[L4239]              __var_17 := null;
[L4240]  COND TRUE   !(recipient_s657 != null)
[L4241]              revert := true;
[L3628]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, recipient_s474, amount_s474);
[L3629]  COND TRUE   revert
[L4677]  RET         call __var_31 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L4678]  COND TRUE   revert
[L1436]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L1437]              assume revert || gas < 0;
[L7356]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);

Loop:
ERC20Pausable(1865763630).transfer~address~uint256.gas(3979001)({from : 1865763620, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s841) && msgsender_MSG != to_s841) && value_s841 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s841] + value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s841 >= 0) && value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s841] >= 0) && _balances_ERC20[this][to_s841] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1413]              havoc __exception;
[L1414]              revert := false;
[L1415]  COND TRUE   __exception
[L1416]              __tmp__Balance := Balance;
[L1417]              __tmp__DType := DType;
[L1418]              __tmp__Alloc := Alloc;
[L1419]              __tmp__balance_ADDR := balance_ADDR;
[L1420]              __tmp__M_Ref_int := M_Ref_int;
[L1421]              __tmp__sum__balances0 := sum__balances0;
[L1422]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1423]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1424]              __tmp__sum__allowances1 := sum__allowances1;
[L1425]              __tmp__Length := Length;
[L1426]              __tmp__now := now;
[L1427]              __tmp___owner_Ownable := _owner_Ownable;
[L1428]              __tmp___paused_Pausable := _paused_Pausable;
[L1429]              __tmp___balances_ERC20 := _balances_ERC20;
[L1430]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1431]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1432]              __tmp__name_RariToken := name_RariToken;
[L1433]              __tmp__symbol_RariToken := symbol_RariToken;
[L1434]              __tmp__decimals_RariToken := decimals_RariToken;
[L1435]              __tmp__mintStopped_RariToken := mintStopped_RariToken;
[L1436]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L4672]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6526]  COND FALSE  !(!!__tmp___paused_Pausable[this])
[L4672]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4673]  COND FALSE  !(revert)
[L4676]  COND TRUE   __tmp__DType[this] == RariToken
[L4677]  CALL        call __var_31 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L3609]  COND TRUE   __tmp__DType[this] == RariToken
[L3610]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2931]              __ret_0_ := msgsender_MSG;
[L3610]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L3611]  COND FALSE  !(revert)
[L3627]  COND TRUE   __tmp__DType[this] == RariToken
[L3628]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, recipient_s474, amount_s474);
[L4234]              __var_16 := null;
[L4235]  COND FALSE  !(!(sender_s657 != null))
[L4239]              __var_17 := null;
[L4240]  COND TRUE   !(recipient_s657 != null)
[L4241]              revert := true;
[L3628]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, recipient_s474, amount_s474);
[L3629]  COND TRUE   revert
[L4677]  RET         call __var_31 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L4678]  COND TRUE   revert
[L1436]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);
[L1437]              assume revert || gas < 0;
[L7356]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s841, value_s841);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
