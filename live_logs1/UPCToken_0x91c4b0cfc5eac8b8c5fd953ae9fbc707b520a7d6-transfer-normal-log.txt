This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 07:50:00,087 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 07:50:00,088 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 07:50:00,099 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 07:50:00,099 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 07:50:00,100 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 07:50:00,101 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 07:50:00,103 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 07:50:00,105 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 07:50:00,105 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 07:50:00,106 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 07:50:00,106 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 07:50:00,107 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 07:50:00,108 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 07:50:00,109 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 07:50:00,110 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 07:50:00,110 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 07:50:00,111 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 07:50:00,113 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 07:50:00,114 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 07:50:00,115 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 07:50:00,116 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 07:50:00,118 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 07:50:00,118 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 07:50:00,118 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 07:50:00,118 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 07:50:00,119 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 07:50:00,119 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 07:50:00,120 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 07:50:00,120 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 07:50:00,120 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 07:50:00,121 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 07:50:00,121 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 07:50:00,122 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 07:50:00,123 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 07:50:00,123 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 07:50:00,123 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 07:50:00,123 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 07:50:00,124 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 07:50:00,124 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 07:50:00,125 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 07:50:00,125 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 07:50:00,133 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 07:50:00,133 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 07:50:00,134 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 07:50:00,134 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 07:50:00,134 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 07:50:00,134 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 07:50:00,134 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 07:50:00,134 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 07:50:00,135 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 07:50:00,135 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 07:50:00,135 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 07:50:00,135 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 07:50:00,135 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 07:50:00,135 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 07:50:00,135 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 07:50:00,135 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 07:50:00,135 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 07:50:00,136 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 07:50:00,136 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 07:50:00,136 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 07:50:00,136 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 07:50:00,136 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 07:50:00,136 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 07:50:00,136 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 07:50:00,136 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 07:50:00,136 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 07:50:00,161 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 07:50:00,174 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 07:50:00,177 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 07:50:00,178 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 07:50:00,178 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 07:50:00,179 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl
[2020-11-25 07:50:00,179 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl'
[2020-11-25 07:50:00,267 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 07:50:00,269 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 07:50:00,269 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 07:50:00,269 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 07:50:00,269 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 07:50:00,286 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:00" (1/1) ...
[2020-11-25 07:50:00,288 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:00" (1/1) ...
[2020-11-25 07:50:00,327 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:00" (1/1) ...
[2020-11-25 07:50:00,328 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:00" (1/1) ...
[2020-11-25 07:50:00,351 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:00" (1/1) ...
[2020-11-25 07:50:00,363 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:00" (1/1) ...
[2020-11-25 07:50:00,372 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:00" (1/1) ...
[2020-11-25 07:50:00,383 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 07:50:00,384 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 07:50:00,384 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 07:50:00,386 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 07:50:00,390 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:00" (1/1) ...
[2020-11-25 07:50:00,409 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20Pausable.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20Pausable.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _paused_Pausable[this] == old(_paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 07:50:00,415 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20Pausable.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20Pausable.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _paused_Pausable[this] == old(_paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 07:50:00,423 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20Pausable.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20Pausable.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _paused_Pausable[this] == old(_paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 07:50:00,432 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=to_s648 ) && msg.sender!=to_s648 ) && value_s648<=_balances_ERC20[this][msg.sender] ) && ( _balances_ERC20[this][to_s648] + value_s648 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && value_s648>=0 ) && value_s648<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s648]>=0 ) && _balances_ERC20[this][to_s648]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>],IdentifierExpression[to_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[to_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],IdentifierExpression[value_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[to_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[to_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 07:50:00,435 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && _balances_ERC20[this][msg.sender]==( ( old(_balances_ERC20[this][msg.sender]) ) - value_s648 ) ) && _balances_ERC20[this][to_s648]==( ( old(_balances_ERC20[this][to_s648]) ) + value_s648 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _allowances_ERC20[this]==( old(_allowances_ERC20[this]) ) ) && _balances_ERC20[this][p1]==( old(_balances_ERC20[this][p1]) ) ) && _paused_Pausable[this]==( old(_paused_Pausable[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ERC20Pausable>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]],IdentifierExpression[value_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[to_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[to_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]],IdentifierExpression[value_s648,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20Pausable>]]]]]]
[2020-11-25 07:50:00,440 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20Pausable.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20Pausable.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _paused_Pausable[this] == old(_paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 07:50:00,440 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC20Pausable0) ==> ( <>AP(success_transfer_ERC20Pausable0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 07:50:00,451 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:50:00 PropertyContainer
[2020-11-25 07:50:00,451 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 07:50:00,452 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 07:50:00,452 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 07:50:00,452 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 07:50:00,453 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:00" (1/2) ...
[2020-11-25 07:50:00,453 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 07:50:00,453 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 07:50:00,470 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:50:00" (2/2) ...
[2020-11-25 07:50:00,470 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 07:50:00,471 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 07:50:00,471 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 07:50:00,471 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 07:50:00,472 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:00" (1/2) ...
[2020-11-25 07:50:00,526 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 07:50:00,526 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 07:50:00,526 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 07:50:00,526 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 07:50:00,526 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 07:50:00,527 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 07:50:00,527 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 07:50:00,527 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 07:50:00,527 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 07:50:00,527 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 07:50:00,527 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 07:50:00,527 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 07:50:00,527 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 07:50:00,528 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 07:50:00,528 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 07:50:00,528 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 07:50:00,528 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 07:50:00,528 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 07:50:00,529 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 07:50:00,529 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 07:50:00,529 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 07:50:00,529 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 07:50:00,529 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 07:50:00,529 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 07:50:00,529 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 07:50:00,529 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 07:50:00,529 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 07:50:00,529 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 07:50:00,530 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 07:50:00,530 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 07:50:00,530 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 07:50:00,530 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 07:50:00,530 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 07:50:00,530 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 07:50:00,530 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 07:50:00,530 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 07:50:00,530 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 07:50:00,530 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 07:50:00,531 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 07:50:00,531 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 07:50:00,531 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 07:50:00,531 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 07:50:00,531 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 07:50:00,531 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 07:50:00,531 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__success
[2020-11-25 07:50:00,531 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 07:50:00,531 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 07:50:00,531 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-25 07:50:00,532 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable
[2020-11-25 07:50:00,532 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable
[2020-11-25 07:50:00,532 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable
[2020-11-25 07:50:00,532 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable
[2020-11-25 07:50:00,532 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable
[2020-11-25 07:50:00,532 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable
[2020-11-25 07:50:00,532 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable
[2020-11-25 07:50:00,532 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable
[2020-11-25 07:50:00,532 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Pausable_ERC20Pausable_NoBaseCtor__success
[2020-11-25 07:50:00,532 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Pausable_ERC20Pausable
[2020-11-25 07:50:00,532 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Pausable_ERC20Pausable
[2020-11-25 07:50:00,533 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable
[2020-11-25 07:50:00,533 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable
[2020-11-25 07:50:00,533 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable
[2020-11-25 07:50:00,533 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable
[2020-11-25 07:50:00,533 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Pausable
[2020-11-25 07:50:00,533 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20Pausable
[2020-11-25 07:50:00,533 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20Pausable
[2020-11-25 07:50:00,533 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20Pausable
[2020-11-25 07:50:00,533 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20Pausable
[2020-11-25 07:50:00,533 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20Pausable
[2020-11-25 07:50:00,534 INFO  L130     BoogieDeclarations]: Found specification of procedure UPCToken_UPCToken_NoBaseCtor__success
[2020-11-25 07:50:00,534 INFO  L130     BoogieDeclarations]: Found specification of procedure UPCToken_UPCToken
[2020-11-25 07:50:00,534 INFO  L138     BoogieDeclarations]: Found implementation of procedure UPCToken_UPCToken
[2020-11-25 07:50:00,534 INFO  L130     BoogieDeclarations]: Found specification of procedure name_UPCToken
[2020-11-25 07:50:00,534 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_UPCToken
[2020-11-25 07:50:00,534 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_UPCToken
[2020-11-25 07:50:00,534 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_UPCToken
[2020-11-25 07:50:00,534 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_UPCToken
[2020-11-25 07:50:00,535 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_UPCToken
[2020-11-25 07:50:00,535 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 07:50:00,535 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 07:50:00,535 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 07:50:00,535 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 07:50:00,535 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__success
[2020-11-25 07:50:00,535 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__success
[2020-11-25 07:50:00,535 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 07:50:00,535 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 07:50:00,536 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 07:50:00,536 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 07:50:00,536 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 07:50:00,536 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 07:50:00,536 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 07:50:00,536 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 07:50:00,536 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Pausable
[2020-11-25 07:50:00,536 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Pausable
[2020-11-25 07:50:00,536 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Pausable
[2020-11-25 07:50:00,536 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Pausable
[2020-11-25 07:50:00,537 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_UPCToken
[2020-11-25 07:50:00,537 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 07:50:00,537 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 07:50:00,537 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 07:50:00,537 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 07:50:00,537 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 07:50:00,537 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 07:50:00,537 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 07:50:00,537 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 07:50:00,537 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 07:50:00,538 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 07:50:00,538 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 07:50:00,538 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 07:50:00,538 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 07:50:00,538 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 07:50:00,538 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 07:50:00,538 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 07:50:00,538 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 07:50:00,538 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 07:50:00,538 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 07:50:00,538 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 07:50:00,539 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 07:50:00,539 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 07:50:00,539 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 07:50:00,539 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 07:50:00,539 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 07:50:00,539 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 07:50:00,539 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 07:50:00,539 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 07:50:00,539 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:50:00,539 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:50:00,539 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:50:00,539 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:50:00,540 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 07:50:00,540 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 07:50:00,540 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 07:50:00,540 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 07:50:00,540 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 07:50:00,540 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 07:50:00,540 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 07:50:00,540 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 07:50:00,540 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 07:50:00,540 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 07:50:00,540 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-25 07:50:00,540 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__success
[2020-11-25 07:50:00,541 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__fail
[2020-11-25 07:50:00,541 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__success
[2020-11-25 07:50:00,541 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__fail
[2020-11-25 07:50:00,541 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__success
[2020-11-25 07:50:00,541 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__fail
[2020-11-25 07:50:00,541 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__success
[2020-11-25 07:50:00,541 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__fail
[2020-11-25 07:50:00,541 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Pausable_ERC20Pausable_NoBaseCtor__fail
[2020-11-25 07:50:00,541 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Pausable_ERC20Pausable__success
[2020-11-25 07:50:00,541 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Pausable_ERC20Pausable__fail
[2020-11-25 07:50:00,541 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:00,542 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:00,542 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:00,542 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:00,542 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:00,542 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:00,542 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:00,542 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:00,542 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:00,542 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:00,542 INFO  L130     BoogieDeclarations]: Found specification of procedure UPCToken_UPCToken_NoBaseCtor__fail
[2020-11-25 07:50:00,542 INFO  L130     BoogieDeclarations]: Found specification of procedure UPCToken_UPCToken__success
[2020-11-25 07:50:00,542 INFO  L130     BoogieDeclarations]: Found specification of procedure UPCToken_UPCToken__fail
[2020-11-25 07:50:00,542 INFO  L130     BoogieDeclarations]: Found specification of procedure name_UPCToken__success
[2020-11-25 07:50:00,542 INFO  L130     BoogieDeclarations]: Found specification of procedure name_UPCToken__fail
[2020-11-25 07:50:00,543 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_UPCToken__success
[2020-11-25 07:50:00,543 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_UPCToken__fail
[2020-11-25 07:50:00,543 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_UPCToken__success
[2020-11-25 07:50:00,543 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_UPCToken__fail
[2020-11-25 07:50:00,543 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 07:50:00,543 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 07:50:00,543 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 07:50:00,543 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 07:50:00,543 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__fail
[2020-11-25 07:50:00,543 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__fail
[2020-11-25 07:50:00,543 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 07:50:00,544 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 07:50:00,544 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 07:50:00,544 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 07:50:00,544 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 07:50:00,544 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 07:50:00,544 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 07:50:00,544 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 07:50:00,544 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 07:50:00,544 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 07:50:00,544 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 07:50:00,544 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 07:50:00,545 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 07:50:00,545 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 07:50:00,545 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 07:50:00,545 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 07:50:00,545 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 07:50:00,545 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 07:50:00,545 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 07:50:00,545 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 07:50:00,545 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 07:50:00,545 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 07:50:00,545 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 07:50:00,546 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 07:50:00,546 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 07:50:00,546 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 07:50:00,546 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 07:50:00,546 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 07:50:00,546 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 07:50:00,546 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 07:50:00,546 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 07:50:00,546 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 07:50:00,546 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 07:50:00,546 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 07:50:00,547 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 07:50:00,547 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 07:50:00,547 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:50:00,547 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:50:00,547 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:50:00,547 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:50:00,547 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 07:50:00,547 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 07:50:00,547 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 07:50:00,547 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 07:50:00,547 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 07:50:00,548 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 07:50:00,548 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 07:50:00,548 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 07:50:00,548 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 07:50:00,548 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 07:50:00,548 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 07:50:00,548 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__success
[2020-11-25 07:50:00,548 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 07:50:00,548 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 07:50:00,548 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-25 07:50:00,548 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-25 07:50:00,548 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__fail
[2020-11-25 07:50:00,549 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__success
[2020-11-25 07:50:00,549 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__fail
[2020-11-25 07:50:00,549 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__success
[2020-11-25 07:50:00,549 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__fail
[2020-11-25 07:50:00,549 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__success
[2020-11-25 07:50:00,549 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__fail
[2020-11-25 07:50:00,549 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__success
[2020-11-25 07:50:00,549 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Pausable_ERC20Pausable_NoBaseCtor__fail
[2020-11-25 07:50:00,549 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Pausable_ERC20Pausable_NoBaseCtor__success
[2020-11-25 07:50:00,549 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Pausable_ERC20Pausable__fail
[2020-11-25 07:50:00,549 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Pausable_ERC20Pausable__success
[2020-11-25 07:50:00,549 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:00,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:00,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:00,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:00,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:00,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:00,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:00,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:00,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20Pausable__fail
[2020-11-25 07:50:00,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20Pausable__success
[2020-11-25 07:50:00,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure UPCToken_UPCToken_NoBaseCtor__fail
[2020-11-25 07:50:00,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure UPCToken_UPCToken_NoBaseCtor__success
[2020-11-25 07:50:00,551 INFO  L138     BoogieDeclarations]: Found implementation of procedure UPCToken_UPCToken__fail
[2020-11-25 07:50:00,551 INFO  L138     BoogieDeclarations]: Found implementation of procedure UPCToken_UPCToken__success
[2020-11-25 07:50:00,551 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_UPCToken__fail
[2020-11-25 07:50:00,551 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_UPCToken__success
[2020-11-25 07:50:00,551 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_UPCToken__fail
[2020-11-25 07:50:00,551 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_UPCToken__success
[2020-11-25 07:50:00,551 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_UPCToken__fail
[2020-11-25 07:50:00,551 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_UPCToken__success
[2020-11-25 07:50:00,551 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 07:50:00,551 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 07:50:00,551 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 07:50:00,551 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 07:50:00,552 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 07:50:00,552 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 07:50:00,552 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 07:50:00,552 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 07:50:00,552 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__fail
[2020-11-25 07:50:00,552 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__success
[2020-11-25 07:50:00,552 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__fail
[2020-11-25 07:50:00,552 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__success
[2020-11-25 07:50:00,552 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 07:50:00,552 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 07:50:00,552 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 07:50:00,553 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 07:50:00,553 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 07:50:00,553 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 07:50:00,553 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 07:50:00,553 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 07:50:00,553 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Pausable
[2020-11-25 07:50:00,553 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Pausable
[2020-11-25 07:50:00,553 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Pausable
[2020-11-25 07:50:00,553 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Pausable
[2020-11-25 07:50:00,553 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_UPCToken
[2020-11-25 07:50:00,553 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 07:50:00,554 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 07:50:00,554 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 07:50:01,080 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:50:01,116 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:50:01,116 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:50:01,116 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:50:01,394 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 07:50:01,395 INFO  L286             CfgBuilder]: Removed 7 assue(true) statements.
[2020-11-25 07:50:01,397 INFO  L202        PluginConnector]: Adding new model UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:50:01 BoogieIcfgContainer
[2020-11-25 07:50:01,397 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:50:00" (2/2) ...
[2020-11-25 07:50:01,397 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 07:50:01,398 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@2f9b10b4 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:50:01, skipping insertion in model container
[2020-11-25 07:50:01,398 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 07:50:01,399 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 07:50:01,399 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 07:50:01,400 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 07:50:01,401 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:00" (1/3) ...
[2020-11-25 07:50:01,401 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5084cd61 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:50:01, skipping insertion in model container
[2020-11-25 07:50:01,401 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:50:00" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 07:50:01,460 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:50:01 NWAContainer
[2020-11-25 07:50:01,460 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 07:50:01,460 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 07:50:01,460 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 07:50:01,461 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 07:50:01,462 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:50:01" (3/4) ...
[2020-11-25 07:50:01,463 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@9c3fcf2 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:50:01, skipping insertion in model container
[2020-11-25 07:50:01,463 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:50:01" (4/4) ...
[2020-11-25 07:50:01,466 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 07:50:01,470 INFO  L110   BuchiProductObserver]: Initial RCFG 2066 locations, 2934 edges
[2020-11-25 07:50:01,471 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 07:50:01,482 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 07:50:02,887 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 07:50:02,897 INFO  L110   BuchiProductObserver]: BuchiProgram size 5280 locations, 9642 edges
[2020-11-25 07:50:02,898 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:50:02 BoogieIcfgContainer
[2020-11-25 07:50:02,898 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 07:50:02,898 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 07:50:02,898 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 07:50:02,900 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 07:50:02,901 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:50:02" (1/1) ...
[2020-11-25 07:50:03,071 INFO  L313           BlockEncoder]: Initial Icfg 5280 locations, 9642 edges
[2020-11-25 07:50:03,072 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 07:50:03,072 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 07:50:03,072 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 07:50:03,073 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 07:50:03,086 INFO  L70    emoveInfeasibleEdges]: Removed 138 edges and 17 locations because of local infeasibility
[2020-11-25 07:50:03,096 INFO  L70        RemoveSinkStates]: Removed 74 edges and 49 locations by removing sink states
[2020-11-25 07:50:03,108 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 07:50:03,113 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 07:50:03,118 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 07:50:03,119 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 07:50:03,122 INFO  L313           BlockEncoder]: Encoded RCFG 5188 locations, 9392 edges
[2020-11-25 07:50:03,122 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 07:50:03 BasicIcfg
[2020-11-25 07:50:03,122 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 07:50:03,123 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 07:50:03,123 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 07:50:03,125 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 07:50:03,125 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:50:03,125 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:50:00" (1/6) ...
[2020-11-25 07:50:03,126 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@540283e6 and model type UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:50:03, skipping insertion in model container
[2020-11-25 07:50:03,126 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:50:03,126 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:50:00" (2/6) ...
[2020-11-25 07:50:03,127 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@540283e6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:50:03, skipping insertion in model container
[2020-11-25 07:50:03,127 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:50:03,127 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:50:01" (3/6) ...
[2020-11-25 07:50:03,127 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@540283e6 and model type UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 07:50:03, skipping insertion in model container
[2020-11-25 07:50:03,127 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:50:03,127 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:50:01" (4/6) ...
[2020-11-25 07:50:03,127 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@540283e6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:50:03, skipping insertion in model container
[2020-11-25 07:50:03,127 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:50:03,127 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:50:02" (5/6) ...
[2020-11-25 07:50:03,127 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@540283e6 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 07:50:03, skipping insertion in model container
[2020-11-25 07:50:03,128 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:50:03,128 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 07:50:03" (6/6) ...
[2020-11-25 07:50:03,129 INFO  L404   chiAutomizerObserver]: Analyzing ICFG UPCToken_0x91c4b0cfc5eac8b8c5fd953ae9fbc707b520a7d6_transfer-normal.bpl_BEv2
[2020-11-25 07:50:03,161 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 07:50:03,161 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 07:50:03,161 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 07:50:03,161 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 07:50:03,162 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 07:50:03,162 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 07:50:03,162 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 07:50:03,162 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 07:50:03,162 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 07:50:03,196 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5188 states.
[2020-11-25 07:50:03,260 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:50:03,260 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:50:03,260 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:50:03,269 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:50:03,269 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:50:03,269 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 07:50:03,269 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5188 states.
[2020-11-25 07:50:03,298 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:50:03,298 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:50:03,298 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:50:03,300 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:50:03,300 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC20Pausable0 := false;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L5739]              assume null == 0;
[L5740]  CALL        call this := FreshRefGenerator__success();
[L2444]              havoc newRef;
[L2445]              assume Alloc[newRef] == false;
[L2446]              Alloc[newRef] := true;
[L2447]              assume newRef != null;
[L5740]  RET         call this := FreshRefGenerator__success();
[L5741]              assume now >= 0;
[L5742]              assume DType[this] == UPCToken;
[L5743]              assume msgvalue_MSG == 0;
[L5744]              gas := gas - 53000;
[L5745]  CALL        call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L1538]              havoc __exception;
[L1539]              revert := false;
[L1540]  COND FALSE  !(__exception)
[L1564]  CALL        call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3754]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2617]              assume msgsender_MSG != null;
[L2618]              Balance[this] := 0;
[L2632]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2633]  COND FALSE  !(revert)
[L3754]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3755]  COND TRUE   revert
[L1564]  RET         call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1565]              assume !revert && gas >= 0;
[L5745]  RET         call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L5746]              assume !revert && gas >= 0;

Loop:
[L5749]  CALL        call CorralChoice_UPCToken(this);
[L5584]              havoc msgsender_MSG;
[L5585]              havoc msgvalue_MSG;
[L5586]              havoc choice;
[L5587]              havoc __ret_0_totalSupply;
[L5588]              havoc account_s242;
[L5589]              havoc __ret_0_balanceOf;
[L5590]              havoc to_s648;
[L5591]              havoc value_s648;
[L5592]              havoc __ret_0_transfer;
[L5593]              havoc owner_s277;
[L5594]              havoc spender_s277;
[L5595]              havoc __ret_0_allowance;
[L5596]              havoc spender_s687;
[L5597]              havoc value_s687;
[L5598]              havoc __ret_0_approve;
[L5599]              havoc from_s669;
[L5600]              havoc to_s669;
[L5601]              havoc value_s669;
[L5602]              havoc __ret_0_transferFrom;
[L5603]              havoc spender_s705;
[L5604]              havoc addedValue_s705;
[L5605]              havoc __ret_0_increaseAllowance;
[L5606]              havoc spender_s723;
[L5607]              havoc subtractedValue_s723;
[L5608]              havoc __ret_0_decreaseAllowance;
[L5609]              havoc __ret_0_owner;
[L5610]              havoc _newOwner_s519;
[L5611]              havoc __ret_0_paused;
[L5612]              havoc __ret_0_name;
[L5613]              havoc __ret_0_symbol;
[L5614]              havoc __ret_0_decimals;
[L5615]              havoc tmpNow;
[L5616]              havoc gas;
[L5617]              assume gas > 4000000 && gas <= 8000000;
[L5618]              tmpNow := now;
[L5619]              havoc now;
[L5620]              assume now > tmpNow;
[L5621]              assume msgsender_MSG != null;
[L5622]              assume DType[msgsender_MSG] != SafeMath;
[L5623]              assume DType[msgsender_MSG] != IERC20;
[L5624]              assume DType[msgsender_MSG] != ERC20;
[L5625]              assume DType[msgsender_MSG] != Ownable;
[L5626]              assume DType[msgsender_MSG] != Pausable;
[L5627]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5628]              assume DType[msgsender_MSG] != UPCToken;
[L5629]              Alloc[msgsender_MSG] := true;
[L5630]  COND TRUE   choice == 16
[L5631]              gas := gas - 21000;
[L5632]  COND FALSE  !(gas >= 0)
[L5749]  RET         call CorralChoice_UPCToken(this);

[2020-11-25 07:50:03,317 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:50:03,317 INFO  L82        PathProgramCache]: Analyzing trace with hash 393436394, now seen corresponding path program 1 times
[2020-11-25 07:50:03,322 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:50:03,343 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:50:03,388 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 07:50:03,390 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:50:03,390 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 07:50:03,698 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:50:03,710 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 07:50:03,711 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 07:50:03,712 INFO  L87              Difference]: Start difference. First operand 5188 states. Second operand 4 states.
[2020-11-25 07:50:04,259 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:50:04,259 INFO  L93              Difference]: Finished difference Result 3070 states and 3663 transitions.
[2020-11-25 07:50:04,259 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 07:50:04,260 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3070 states and 3663 transitions.
[2020-11-25 07:50:04,277 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:50:04,300 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3070 states to 3070 states and 3663 transitions.
[2020-11-25 07:50:04,301 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 07:50:04,303 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 821
[2020-11-25 07:50:04,304 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3070 states and 3663 transitions.
[2020-11-25 07:50:04,312 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:50:04,312 INFO  L728         BuchiCegarLoop]: Abstraction has 3070 states and 3663 transitions.
[2020-11-25 07:50:04,325 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3070 states and 3663 transitions.
[2020-11-25 07:50:04,369 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3070 to 3070.
[2020-11-25 07:50:04,370 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3070 states.
[2020-11-25 07:50:04,375 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3070 states to 3070 states and 3663 transitions.
[2020-11-25 07:50:04,376 INFO  L751         BuchiCegarLoop]: Abstraction has 3070 states and 3663 transitions.
[2020-11-25 07:50:04,376 INFO  L631         BuchiCegarLoop]: Abstraction has 3070 states and 3663 transitions.
[2020-11-25 07:50:04,376 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 07:50:04,376 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3070 states and 3663 transitions.
[2020-11-25 07:50:04,382 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:50:04,382 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:50:04,382 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:50:04,384 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:50:04,384 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC20Pausable0 := false;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L5739]              assume null == 0;
[L5740]  CALL        call this := FreshRefGenerator__success();
[L2444]              havoc newRef;
[L2445]              assume Alloc[newRef] == false;
[L2446]              Alloc[newRef] := true;
[L2447]              assume newRef != null;
[L5740]  RET         call this := FreshRefGenerator__success();
[L5741]              assume now >= 0;
[L5742]              assume DType[this] == UPCToken;
[L5743]              assume msgvalue_MSG == 0;
[L5744]              gas := gas - 53000;
[L5745]  CALL        call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L1538]              havoc __exception;
[L1539]              revert := false;
[L1540]  COND FALSE  !(__exception)
[L1564]  CALL        call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3754]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2617]              assume msgsender_MSG != null;
[L2618]              Balance[this] := 0;
[L2632]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2633]  COND FALSE  !(revert)
[L3754]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3755]  COND TRUE   revert
[L1564]  RET         call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1565]              assume !revert && gas >= 0;
[L5745]  RET         call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L5746]              assume !revert && gas >= 0;
[L5749]  CALL        call CorralChoice_UPCToken(this);
[L5584]              havoc msgsender_MSG;
[L5585]              havoc msgvalue_MSG;
[L5586]              havoc choice;
[L5587]              havoc __ret_0_totalSupply;
[L5588]              havoc account_s242;
[L5589]              havoc __ret_0_balanceOf;
[L5590]              havoc to_s648;
[L5591]              havoc value_s648;
[L5592]              havoc __ret_0_transfer;
[L5593]              havoc owner_s277;
[L5594]              havoc spender_s277;
[L5595]              havoc __ret_0_allowance;
[L5596]              havoc spender_s687;
[L5597]              havoc value_s687;
[L5598]              havoc __ret_0_approve;
[L5599]              havoc from_s669;
[L5600]              havoc to_s669;
[L5601]              havoc value_s669;
[L5602]              havoc __ret_0_transferFrom;
[L5603]              havoc spender_s705;
[L5604]              havoc addedValue_s705;
[L5605]              havoc __ret_0_increaseAllowance;
[L5606]              havoc spender_s723;
[L5607]              havoc subtractedValue_s723;
[L5608]              havoc __ret_0_decreaseAllowance;
[L5609]              havoc __ret_0_owner;
[L5610]              havoc _newOwner_s519;
[L5611]              havoc __ret_0_paused;
[L5612]              havoc __ret_0_name;
[L5613]              havoc __ret_0_symbol;
[L5614]              havoc __ret_0_decimals;
[L5615]              havoc tmpNow;
[L5616]              havoc gas;
[L5617]              assume gas > 4000000 && gas <= 8000000;
[L5618]              tmpNow := now;
[L5619]              havoc now;
[L5620]              assume now > tmpNow;
[L5621]              assume msgsender_MSG != null;
[L5622]              assume DType[msgsender_MSG] != SafeMath;
[L5623]              assume DType[msgsender_MSG] != IERC20;
[L5624]              assume DType[msgsender_MSG] != ERC20;
[L5625]              assume DType[msgsender_MSG] != Ownable;
[L5626]              assume DType[msgsender_MSG] != Pausable;
[L5627]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5628]              assume DType[msgsender_MSG] != UPCToken;
[L5629]              Alloc[msgsender_MSG] := true;
[L5630]  COND FALSE  !(choice == 16)
[L5636]  COND FALSE  !(choice == 15)
[L5642]  COND TRUE   choice == 14
[L5643]              gas := gas - 21000;
[L5644]  COND TRUE   gas >= 0
[L5645]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5646]              assume msgvalue_MSG == 0;
[L5647]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s648) && msgsender_MSG != to_s648) && value_s648 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s648] + value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1222]              havoc __exception;
[L1223]              revert := false;
[L1224]  COND FALSE  !(__exception)
[L1248]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3468]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(!!_paused_Pausable[this])
[L3468]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3469]  COND TRUE   revert
[L1248]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1249]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - value_s648) && _balances_ERC20[this][to_s648] == old(_balances_ERC20[this][to_s648]) + value_s648) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _paused_Pausable[this] == old(_paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L5647]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5749]  RET         call CorralChoice_UPCToken(this);

Loop:
[L5749]  CALL        call CorralChoice_UPCToken(this);
[L5584]              havoc msgsender_MSG;
[L5585]              havoc msgvalue_MSG;
[L5586]              havoc choice;
[L5587]              havoc __ret_0_totalSupply;
[L5588]              havoc account_s242;
[L5589]              havoc __ret_0_balanceOf;
[L5590]              havoc to_s648;
[L5591]              havoc value_s648;
[L5592]              havoc __ret_0_transfer;
[L5593]              havoc owner_s277;
[L5594]              havoc spender_s277;
[L5595]              havoc __ret_0_allowance;
[L5596]              havoc spender_s687;
[L5597]              havoc value_s687;
[L5598]              havoc __ret_0_approve;
[L5599]              havoc from_s669;
[L5600]              havoc to_s669;
[L5601]              havoc value_s669;
[L5602]              havoc __ret_0_transferFrom;
[L5603]              havoc spender_s705;
[L5604]              havoc addedValue_s705;
[L5605]              havoc __ret_0_increaseAllowance;
[L5606]              havoc spender_s723;
[L5607]              havoc subtractedValue_s723;
[L5608]              havoc __ret_0_decreaseAllowance;
[L5609]              havoc __ret_0_owner;
[L5610]              havoc _newOwner_s519;
[L5611]              havoc __ret_0_paused;
[L5612]              havoc __ret_0_name;
[L5613]              havoc __ret_0_symbol;
[L5614]              havoc __ret_0_decimals;
[L5615]              havoc tmpNow;
[L5616]              havoc gas;
[L5617]              assume gas > 4000000 && gas <= 8000000;
[L5618]              tmpNow := now;
[L5619]              havoc now;
[L5620]              assume now > tmpNow;
[L5621]              assume msgsender_MSG != null;
[L5622]              assume DType[msgsender_MSG] != SafeMath;
[L5623]              assume DType[msgsender_MSG] != IERC20;
[L5624]              assume DType[msgsender_MSG] != ERC20;
[L5625]              assume DType[msgsender_MSG] != Ownable;
[L5626]              assume DType[msgsender_MSG] != Pausable;
[L5627]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5628]              assume DType[msgsender_MSG] != UPCToken;
[L5629]              Alloc[msgsender_MSG] := true;
[L5630]  COND FALSE  !(choice == 16)
[L5636]  COND FALSE  !(choice == 15)
[L5642]  COND TRUE   choice == 14
[L5643]              gas := gas - 21000;
[L5644]  COND TRUE   gas >= 0
[L5645]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5646]              assume msgvalue_MSG == 0;
[L5647]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s648) && msgsender_MSG != to_s648) && value_s648 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s648] + value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1222]              havoc __exception;
[L1223]              revert := false;
[L1224]  COND FALSE  !(__exception)
[L1248]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3468]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(!!_paused_Pausable[this])
[L3468]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3469]  COND TRUE   revert
[L1248]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1249]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - value_s648) && _balances_ERC20[this][to_s648] == old(_balances_ERC20[this][to_s648]) + value_s648) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _paused_Pausable[this] == old(_paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L5647]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5749]  RET         call CorralChoice_UPCToken(this);

[2020-11-25 07:50:04,388 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:50:04,388 INFO  L82        PathProgramCache]: Analyzing trace with hash -1356868398, now seen corresponding path program 1 times
[2020-11-25 07:50:04,389 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:50:04,400 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:50:04,421 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 07:50:04,421 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:50:04,421 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 07:50:04,422 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:50:04,423 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 07:50:04,423 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 07:50:04,423 INFO  L87              Difference]: Start difference. First operand 3070 states and 3663 transitions. cyclomatic complexity: 595 Second operand 4 states.
[2020-11-25 07:50:05,438 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:50:05,438 INFO  L93              Difference]: Finished difference Result 4468 states and 5215 transitions.
[2020-11-25 07:50:05,438 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 07:50:05,439 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4468 states and 5215 transitions.
[2020-11-25 07:50:05,455 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 07:50:05,474 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4468 states to 4144 states and 4819 transitions.
[2020-11-25 07:50:05,474 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1108
[2020-11-25 07:50:05,475 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1144
[2020-11-25 07:50:05,475 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4144 states and 4819 transitions.
[2020-11-25 07:50:05,480 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:50:05,480 INFO  L728         BuchiCegarLoop]: Abstraction has 4144 states and 4819 transitions.
[2020-11-25 07:50:05,483 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4144 states and 4819 transitions.
[2020-11-25 07:50:05,514 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4144 to 3290.
[2020-11-25 07:50:05,514 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3290 states.
[2020-11-25 07:50:05,518 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3290 states to 3290 states and 3709 transitions.
[2020-11-25 07:50:05,518 INFO  L751         BuchiCegarLoop]: Abstraction has 3290 states and 3709 transitions.
[2020-11-25 07:50:05,518 INFO  L631         BuchiCegarLoop]: Abstraction has 3290 states and 3709 transitions.
[2020-11-25 07:50:05,518 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 07:50:05,518 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3290 states and 3709 transitions.
[2020-11-25 07:50:05,524 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:50:05,524 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:50:05,524 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:50:05,527 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:50:05,527 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC20Pausable0 := false;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L5739]              assume null == 0;
[L5740]  CALL        call this := FreshRefGenerator__success();
[L2444]              havoc newRef;
[L2445]              assume Alloc[newRef] == false;
[L2446]              Alloc[newRef] := true;
[L2447]              assume newRef != null;
[L5740]  RET         call this := FreshRefGenerator__success();
[L5741]              assume now >= 0;
[L5742]              assume DType[this] == UPCToken;
[L5743]              assume msgvalue_MSG == 0;
[L5744]              gas := gas - 53000;
[L5745]  CALL        call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L1538]              havoc __exception;
[L1539]              revert := false;
[L1540]  COND FALSE  !(__exception)
[L1564]  CALL        call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3754]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2617]              assume msgsender_MSG != null;
[L2618]              Balance[this] := 0;
[L2632]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2633]  COND FALSE  !(revert)
[L3754]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3755]  COND FALSE  !(revert)
[L3758]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2678]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2617]              assume msgsender_MSG != null;
[L2618]              Balance[this] := 0;
[L2632]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2633]  COND FALSE  !(revert)
[L2678]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2682]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]              assume msgsender_MSG != null;
[L2655]              Balance[this] := 0;
[L2656]              _balances_ERC20[this] := zeroRefintArr();
[L2657]              sum__balances0[this] := 0;
[L2658]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2659]              sum__allowances1[this] := 0;
[L2660]              _totalSupply_ERC20[this] := 0;
[L2682]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L3758]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3762]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]              assume msgsender_MSG != null;
[L3147]              Balance[this] := 0;
[L3148]              owner_Ownable[this] := null;
[L3162]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3163]  COND FALSE  !(revert)
[L3762]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3763]  COND FALSE  !(revert)
[L3766]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3299]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]              assume msgsender_MSG != null;
[L3147]              Balance[this] := 0;
[L3148]              owner_Ownable[this] := null;
[L3162]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3163]  COND FALSE  !(revert)
[L3299]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3300]  COND FALSE  !(revert)
[L3303]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3278]              assume msgsender_MSG != null;
[L3279]              Balance[this] := 0;
[L3280]              _paused_Pausable[this] := false;
[L3282]              _paused_Pausable[this] := false;
[L3303]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  COND FALSE  !(revert)
[L3766]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3767]  COND FALSE  !(revert)
[L3770]  CALL        call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3417]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2617]              assume msgsender_MSG != null;
[L2618]              Balance[this] := 0;
[L2632]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2633]  COND FALSE  !(revert)
[L3417]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3418]  COND FALSE  !(revert)
[L3421]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2678]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2617]              assume msgsender_MSG != null;
[L2618]              Balance[this] := 0;
[L2632]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2633]  COND FALSE  !(revert)
[L2678]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2682]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]              assume msgsender_MSG != null;
[L2655]              Balance[this] := 0;
[L2656]              _balances_ERC20[this] := zeroRefintArr();
[L2657]              sum__balances0[this] := 0;
[L2658]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2659]              sum__allowances1[this] := 0;
[L2660]              _totalSupply_ERC20[this] := 0;
[L2682]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L3421]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3422]  COND FALSE  !(revert)
[L3425]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]              assume msgsender_MSG != null;
[L3147]              Balance[this] := 0;
[L3148]              owner_Ownable[this] := null;
[L3162]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3163]  COND FALSE  !(revert)
[L3425]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3426]  COND FALSE  !(revert)
[L3429]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3299]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]              assume msgsender_MSG != null;
[L3147]              Balance[this] := 0;
[L3148]              owner_Ownable[this] := null;
[L3162]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3163]  COND FALSE  !(revert)
[L3299]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3300]  COND FALSE  !(revert)
[L3303]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3278]              assume msgsender_MSG != null;
[L3279]              Balance[this] := 0;
[L3280]              _paused_Pausable[this] := false;
[L3282]              _paused_Pausable[this] := false;
[L3303]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  COND FALSE  !(revert)
[L3429]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3430]  COND FALSE  !(revert)
[L3433]  CALL        call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3386]              assume msgsender_MSG != null;
[L3387]              Balance[this] := 0;
[L3433]  RET         call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3434]  COND FALSE  !(revert)
[L3770]  RET         call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3771]  COND FALSE  !(revert)
[L3774]  CALL        call UPCToken_UPCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]              assume msgsender_MSG != null;
[L3710]              Balance[this] := 0;
[L3711]              name_UPCToken[this] := 995162267;
[L3712]              symbol_UPCToken[this] := 189219111;
[L3713]              decimals_UPCToken[this] := 18;
[L3714]              INIT_TOTALSUPPLY_UPCToken[this] := 1000000000;
[L3716]              owner_Ownable[this] := msgsender_MSG;
[L3717]              _totalSupply_ERC20[this] := INIT_TOTALSUPPLY_UPCToken[this];
[L3718]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][owner_Ownable[this]];
[L3719]              _balances_ERC20[this][owner_Ownable[this]] := _totalSupply_ERC20[this];
[L3720]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][owner_Ownable[this]];
[L3721]              assert { :EventEmitted "Transfer_UPCToken" } true;
[L3774]  RET         call UPCToken_UPCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3775]  COND FALSE  !(revert)
[L1564]  RET         call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1565]              assume !revert && gas >= 0;
[L5745]  RET         call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L5746]              assume !revert && gas >= 0;
[L5749]  CALL        call CorralChoice_UPCToken(this);
[L5584]              havoc msgsender_MSG;
[L5585]              havoc msgvalue_MSG;
[L5586]              havoc choice;
[L5587]              havoc __ret_0_totalSupply;
[L5588]              havoc account_s242;
[L5589]              havoc __ret_0_balanceOf;
[L5590]              havoc to_s648;
[L5591]              havoc value_s648;
[L5592]              havoc __ret_0_transfer;
[L5593]              havoc owner_s277;
[L5594]              havoc spender_s277;
[L5595]              havoc __ret_0_allowance;
[L5596]              havoc spender_s687;
[L5597]              havoc value_s687;
[L5598]              havoc __ret_0_approve;
[L5599]              havoc from_s669;
[L5600]              havoc to_s669;
[L5601]              havoc value_s669;
[L5602]              havoc __ret_0_transferFrom;
[L5603]              havoc spender_s705;
[L5604]              havoc addedValue_s705;
[L5605]              havoc __ret_0_increaseAllowance;
[L5606]              havoc spender_s723;
[L5607]              havoc subtractedValue_s723;
[L5608]              havoc __ret_0_decreaseAllowance;
[L5609]              havoc __ret_0_owner;
[L5610]              havoc _newOwner_s519;
[L5611]              havoc __ret_0_paused;
[L5612]              havoc __ret_0_name;
[L5613]              havoc __ret_0_symbol;
[L5614]              havoc __ret_0_decimals;
[L5615]              havoc tmpNow;
[L5616]              havoc gas;
[L5617]              assume gas > 4000000 && gas <= 8000000;
[L5618]              tmpNow := now;
[L5619]              havoc now;
[L5620]              assume now > tmpNow;
[L5621]              assume msgsender_MSG != null;
[L5622]              assume DType[msgsender_MSG] != SafeMath;
[L5623]              assume DType[msgsender_MSG] != IERC20;
[L5624]              assume DType[msgsender_MSG] != ERC20;
[L5625]              assume DType[msgsender_MSG] != Ownable;
[L5626]              assume DType[msgsender_MSG] != Pausable;
[L5627]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5628]              assume DType[msgsender_MSG] != UPCToken;
[L5629]              Alloc[msgsender_MSG] := true;
[L5630]  COND FALSE  !(choice == 16)
[L5636]  COND FALSE  !(choice == 15)
[L5642]  COND TRUE   choice == 14
[L5643]              gas := gas - 21000;
[L5644]  COND TRUE   gas >= 0
[L5645]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5646]              assume msgvalue_MSG == 0;
[L5647]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s648) && msgsender_MSG != to_s648) && value_s648 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s648] + value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1222]              havoc __exception;
[L1223]              revert := false;
[L1224]  COND TRUE   __exception
[L1225]              __tmp__Balance := Balance;
[L1226]              __tmp__DType := DType;
[L1227]              __tmp__Alloc := Alloc;
[L1228]              __tmp__balance_ADDR := balance_ADDR;
[L1229]              __tmp__M_Ref_int := M_Ref_int;
[L1230]              __tmp__sum__balances0 := sum__balances0;
[L1231]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1232]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1233]              __tmp__sum__allowances1 := sum__allowances1;
[L1234]              __tmp__Length := Length;
[L1235]              __tmp__now := now;
[L1236]              __tmp___balances_ERC20 := _balances_ERC20;
[L1237]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1238]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1239]              __tmp__owner_Ownable := owner_Ownable;
[L1240]              __tmp___paused_Pausable := _paused_Pausable;
[L1241]              __tmp__name_UPCToken := name_UPCToken;
[L1242]              __tmp__symbol_UPCToken := symbol_UPCToken;
[L1243]              __tmp__decimals_UPCToken := decimals_UPCToken;
[L1244]              __tmp__INIT_TOTALSUPPLY_UPCToken := INIT_TOTALSUPPLY_UPCToken;
[L1245]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3443]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND TRUE   !!__tmp___paused_Pausable[this]
[L4965]              revert := true;
[L3443]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3444]  COND TRUE   revert
[L1245]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1246]              assume revert || gas < 0;
[L5647]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5749]  RET         call CorralChoice_UPCToken(this);

Loop:
[L5749]  CALL        call CorralChoice_UPCToken(this);
[L5584]              havoc msgsender_MSG;
[L5585]              havoc msgvalue_MSG;
[L5586]              havoc choice;
[L5587]              havoc __ret_0_totalSupply;
[L5588]              havoc account_s242;
[L5589]              havoc __ret_0_balanceOf;
[L5590]              havoc to_s648;
[L5591]              havoc value_s648;
[L5592]              havoc __ret_0_transfer;
[L5593]              havoc owner_s277;
[L5594]              havoc spender_s277;
[L5595]              havoc __ret_0_allowance;
[L5596]              havoc spender_s687;
[L5597]              havoc value_s687;
[L5598]              havoc __ret_0_approve;
[L5599]              havoc from_s669;
[L5600]              havoc to_s669;
[L5601]              havoc value_s669;
[L5602]              havoc __ret_0_transferFrom;
[L5603]              havoc spender_s705;
[L5604]              havoc addedValue_s705;
[L5605]              havoc __ret_0_increaseAllowance;
[L5606]              havoc spender_s723;
[L5607]              havoc subtractedValue_s723;
[L5608]              havoc __ret_0_decreaseAllowance;
[L5609]              havoc __ret_0_owner;
[L5610]              havoc _newOwner_s519;
[L5611]              havoc __ret_0_paused;
[L5612]              havoc __ret_0_name;
[L5613]              havoc __ret_0_symbol;
[L5614]              havoc __ret_0_decimals;
[L5615]              havoc tmpNow;
[L5616]              havoc gas;
[L5617]              assume gas > 4000000 && gas <= 8000000;
[L5618]              tmpNow := now;
[L5619]              havoc now;
[L5620]              assume now > tmpNow;
[L5621]              assume msgsender_MSG != null;
[L5622]              assume DType[msgsender_MSG] != SafeMath;
[L5623]              assume DType[msgsender_MSG] != IERC20;
[L5624]              assume DType[msgsender_MSG] != ERC20;
[L5625]              assume DType[msgsender_MSG] != Ownable;
[L5626]              assume DType[msgsender_MSG] != Pausable;
[L5627]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5628]              assume DType[msgsender_MSG] != UPCToken;
[L5629]              Alloc[msgsender_MSG] := true;
[L5630]  COND FALSE  !(choice == 16)
[L5636]  COND FALSE  !(choice == 15)
[L5642]  COND TRUE   choice == 14
[L5643]              gas := gas - 21000;
[L5644]  COND TRUE   gas >= 0
[L5645]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5646]              assume msgvalue_MSG == 0;
[L5647]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s648) && msgsender_MSG != to_s648) && value_s648 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s648] + value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1222]              havoc __exception;
[L1223]              revert := false;
[L1224]  COND TRUE   __exception
[L1225]              __tmp__Balance := Balance;
[L1226]              __tmp__DType := DType;
[L1227]              __tmp__Alloc := Alloc;
[L1228]              __tmp__balance_ADDR := balance_ADDR;
[L1229]              __tmp__M_Ref_int := M_Ref_int;
[L1230]              __tmp__sum__balances0 := sum__balances0;
[L1231]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1232]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1233]              __tmp__sum__allowances1 := sum__allowances1;
[L1234]              __tmp__Length := Length;
[L1235]              __tmp__now := now;
[L1236]              __tmp___balances_ERC20 := _balances_ERC20;
[L1237]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1238]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1239]              __tmp__owner_Ownable := owner_Ownable;
[L1240]              __tmp___paused_Pausable := _paused_Pausable;
[L1241]              __tmp__name_UPCToken := name_UPCToken;
[L1242]              __tmp__symbol_UPCToken := symbol_UPCToken;
[L1243]              __tmp__decimals_UPCToken := decimals_UPCToken;
[L1244]              __tmp__INIT_TOTALSUPPLY_UPCToken := INIT_TOTALSUPPLY_UPCToken;
[L1245]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3443]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND TRUE   !!__tmp___paused_Pausable[this]
[L4965]              revert := true;
[L3443]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3444]  COND TRUE   revert
[L1245]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1246]              assume revert || gas < 0;
[L5647]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5749]  RET         call CorralChoice_UPCToken(this);

[2020-11-25 07:50:05,532 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:50:05,532 INFO  L82        PathProgramCache]: Analyzing trace with hash -767360385, now seen corresponding path program 1 times
[2020-11-25 07:50:05,533 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:50:05,552 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:50:05,682 INFO  L134       CoverageAnalysis]: Checked inductivity of 161 backedges. 6 proven. 0 refuted. 0 times theorem prover too weak. 155 trivial. 0 not checked.
[2020-11-25 07:50:05,682 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:50:05,682 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 07:50:05,682 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:50:05,683 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 07:50:05,683 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=157, Unknown=0, NotChecked=0, Total=182
[2020-11-25 07:50:05,683 INFO  L87              Difference]: Start difference. First operand 3290 states and 3709 transitions. cyclomatic complexity: 421 Second operand 14 states.
[2020-11-25 07:50:08,194 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:50:08,194 INFO  L93              Difference]: Finished difference Result 5226 states and 5951 transitions.
[2020-11-25 07:50:08,194 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 18 states. 
[2020-11-25 07:50:08,195 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5226 states and 5951 transitions.
[2020-11-25 07:50:08,207 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 07:50:08,223 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5226 states to 5226 states and 5951 transitions.
[2020-11-25 07:50:08,223 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1490
[2020-11-25 07:50:08,224 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1490
[2020-11-25 07:50:08,224 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5226 states and 5951 transitions.
[2020-11-25 07:50:08,229 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:50:08,229 INFO  L728         BuchiCegarLoop]: Abstraction has 5226 states and 5951 transitions.
[2020-11-25 07:50:08,232 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5226 states and 5951 transitions.
[2020-11-25 07:50:08,265 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5226 to 3389.
[2020-11-25 07:50:08,265 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3389 states.
[2020-11-25 07:50:08,269 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3389 states to 3389 states and 3814 transitions.
[2020-11-25 07:50:08,269 INFO  L751         BuchiCegarLoop]: Abstraction has 3389 states and 3814 transitions.
[2020-11-25 07:50:08,269 INFO  L631         BuchiCegarLoop]: Abstraction has 3389 states and 3814 transitions.
[2020-11-25 07:50:08,269 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 07:50:08,269 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3389 states and 3814 transitions.
[2020-11-25 07:50:08,273 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 07:50:08,273 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:50:08,273 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:50:08,275 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:50:08,275 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC20Pausable0 := false;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L5739]              assume null == 0;
[L5740]  CALL        call this := FreshRefGenerator__success();
[L2444]              havoc newRef;
[L2445]              assume Alloc[newRef] == false;
[L2446]              Alloc[newRef] := true;
[L2447]              assume newRef != null;
[L5740]  RET         call this := FreshRefGenerator__success();
[L5741]              assume now >= 0;
[L5742]              assume DType[this] == UPCToken;
[L5743]              assume msgvalue_MSG == 0;
[L5744]              gas := gas - 53000;
[L5745]  CALL        call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L1538]              havoc __exception;
[L1539]              revert := false;
[L1540]  COND TRUE   __exception
[L1541]              __tmp__Balance := Balance;
[L1542]              __tmp__DType := DType;
[L1543]              __tmp__Alloc := Alloc;
[L1544]              __tmp__balance_ADDR := balance_ADDR;
[L1545]              __tmp__M_Ref_int := M_Ref_int;
[L1546]              __tmp__sum__balances0 := sum__balances0;
[L1547]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1548]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1549]              __tmp__sum__allowances1 := sum__allowances1;
[L1550]              __tmp__Length := Length;
[L1551]              __tmp__now := now;
[L1552]              __tmp___balances_ERC20 := _balances_ERC20;
[L1553]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1554]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1555]              __tmp__owner_Ownable := owner_Ownable;
[L1556]              __tmp___paused_Pausable := _paused_Pausable;
[L1557]              __tmp__name_UPCToken := name_UPCToken;
[L1558]              __tmp__symbol_UPCToken := symbol_UPCToken;
[L1559]              __tmp__decimals_UPCToken := decimals_UPCToken;
[L1560]              __tmp__INIT_TOTALSUPPLY_UPCToken := INIT_TOTALSUPPLY_UPCToken;
[L1561]  CALL        call UPCToken_UPCToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3726]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2624]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2609]              assume msgsender_MSG != null;
[L2610]              __tmp__Balance[this] := 0;
[L2624]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2625]  COND FALSE  !(revert)
[L3726]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3727]  COND FALSE  !(revert)
[L3730]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2666]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2624]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2609]              assume msgsender_MSG != null;
[L2610]              __tmp__Balance[this] := 0;
[L2624]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2625]  COND FALSE  !(revert)
[L2666]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2667]  COND FALSE  !(revert)
[L2670]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2641]              assume msgsender_MSG != null;
[L2642]              __tmp__Balance[this] := 0;
[L2643]              __tmp___balances_ERC20[this] := zeroRefintArr();
[L2644]              __tmp__sum__balances0[this] := 0;
[L2645]              __tmp___allowances_ERC20[this] := zeroRefRefintArr();
[L2646]              __tmp__sum__allowances1[this] := 0;
[L2647]              __tmp___totalSupply_ERC20[this] := 0;
[L2670]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2671]  COND FALSE  !(revert)
[L3730]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3731]  COND FALSE  !(revert)
[L3734]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3154]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3137]              assume msgsender_MSG != null;
[L3138]              __tmp__Balance[this] := 0;
[L3139]              __tmp__owner_Ownable[this] := null;
[L3154]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3155]  COND FALSE  !(revert)
[L3734]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3735]  COND FALSE  !(revert)
[L3738]  CALL        call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3287]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3154]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3137]              assume msgsender_MSG != null;
[L3138]              __tmp__Balance[this] := 0;
[L3139]              __tmp__owner_Ownable[this] := null;
[L3154]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3155]  COND FALSE  !(revert)
[L3287]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3288]  COND FALSE  !(revert)
[L3291]  CALL        call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3268]              assume msgsender_MSG != null;
[L3269]              __tmp__Balance[this] := 0;
[L3270]              __tmp___paused_Pausable[this] := false;
[L3272]              __tmp___paused_Pausable[this] := false;
[L3291]  RET         call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3292]  COND FALSE  !(revert)
[L3738]  RET         call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3739]  COND FALSE  !(revert)
[L3742]  CALL        call ERC20Pausable_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3393]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2624]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2609]              assume msgsender_MSG != null;
[L2610]              __tmp__Balance[this] := 0;
[L2624]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2625]  COND FALSE  !(revert)
[L3393]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3394]  COND FALSE  !(revert)
[L3397]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2666]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2624]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2609]              assume msgsender_MSG != null;
[L2610]              __tmp__Balance[this] := 0;
[L2624]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2625]  COND FALSE  !(revert)
[L2666]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2667]  COND FALSE  !(revert)
[L2670]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2641]              assume msgsender_MSG != null;
[L2642]              __tmp__Balance[this] := 0;
[L2643]              __tmp___balances_ERC20[this] := zeroRefintArr();
[L2644]              __tmp__sum__balances0[this] := 0;
[L2645]              __tmp___allowances_ERC20[this] := zeroRefRefintArr();
[L2646]              __tmp__sum__allowances1[this] := 0;
[L2647]              __tmp___totalSupply_ERC20[this] := 0;
[L2670]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2671]  COND FALSE  !(revert)
[L3397]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3398]  COND FALSE  !(revert)
[L3401]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3154]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3137]              assume msgsender_MSG != null;
[L3138]              __tmp__Balance[this] := 0;
[L3139]              __tmp__owner_Ownable[this] := null;
[L3154]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3155]  COND FALSE  !(revert)
[L3401]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3402]  COND FALSE  !(revert)
[L3405]  CALL        call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3287]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3154]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3137]              assume msgsender_MSG != null;
[L3138]              __tmp__Balance[this] := 0;
[L3139]              __tmp__owner_Ownable[this] := null;
[L3154]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3155]  COND FALSE  !(revert)
[L3287]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3288]  COND FALSE  !(revert)
[L3291]  CALL        call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3268]              assume msgsender_MSG != null;
[L3269]              __tmp__Balance[this] := 0;
[L3270]              __tmp___paused_Pausable[this] := false;
[L3272]              __tmp___paused_Pausable[this] := false;
[L3291]  RET         call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3292]  COND FALSE  !(revert)
[L3405]  RET         call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3406]  COND FALSE  !(revert)
[L3409]  CALL        call ERC20Pausable_ERC20Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3378]              assume msgsender_MSG != null;
[L3379]              __tmp__Balance[this] := 0;
[L3409]  RET         call ERC20Pausable_ERC20Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3410]  COND FALSE  !(revert)
[L3742]  RET         call ERC20Pausable_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3743]  COND FALSE  !(revert)
[L3746]  CALL        call UPCToken_UPCToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3692]              assume msgsender_MSG != null;
[L3693]              __tmp__Balance[this] := 0;
[L3694]              __tmp__name_UPCToken[this] := 995162267;
[L3695]              __tmp__symbol_UPCToken[this] := 189219111;
[L3696]              __tmp__decimals_UPCToken[this] := 18;
[L3697]              __tmp__INIT_TOTALSUPPLY_UPCToken[this] := 1000000000;
[L3699]              __tmp__owner_Ownable[this] := msgsender_MSG;
[L3700]              __tmp___totalSupply_ERC20[this] := __tmp__INIT_TOTALSUPPLY_UPCToken[this];
[L3701]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][__tmp__owner_Ownable[this]];
[L3702]              __tmp___balances_ERC20[this][__tmp__owner_Ownable[this]] := __tmp___totalSupply_ERC20[this];
[L3703]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][__tmp__owner_Ownable[this]];
[L3746]  RET         call UPCToken_UPCToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3747]  COND FALSE  !(revert)
[L1561]  RET         call UPCToken_UPCToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1562]              assume revert || gas < 0;
[L5745]  RET         call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L5746]              assume !revert && gas >= 0;
[L5749]  CALL        call CorralChoice_UPCToken(this);
[L5584]              havoc msgsender_MSG;
[L5585]              havoc msgvalue_MSG;
[L5586]              havoc choice;
[L5587]              havoc __ret_0_totalSupply;
[L5588]              havoc account_s242;
[L5589]              havoc __ret_0_balanceOf;
[L5590]              havoc to_s648;
[L5591]              havoc value_s648;
[L5592]              havoc __ret_0_transfer;
[L5593]              havoc owner_s277;
[L5594]              havoc spender_s277;
[L5595]              havoc __ret_0_allowance;
[L5596]              havoc spender_s687;
[L5597]              havoc value_s687;
[L5598]              havoc __ret_0_approve;
[L5599]              havoc from_s669;
[L5600]              havoc to_s669;
[L5601]              havoc value_s669;
[L5602]              havoc __ret_0_transferFrom;
[L5603]              havoc spender_s705;
[L5604]              havoc addedValue_s705;
[L5605]              havoc __ret_0_increaseAllowance;
[L5606]              havoc spender_s723;
[L5607]              havoc subtractedValue_s723;
[L5608]              havoc __ret_0_decreaseAllowance;
[L5609]              havoc __ret_0_owner;
[L5610]              havoc _newOwner_s519;
[L5611]              havoc __ret_0_paused;
[L5612]              havoc __ret_0_name;
[L5613]              havoc __ret_0_symbol;
[L5614]              havoc __ret_0_decimals;
[L5615]              havoc tmpNow;
[L5616]              havoc gas;
[L5617]              assume gas > 4000000 && gas <= 8000000;
[L5618]              tmpNow := now;
[L5619]              havoc now;
[L5620]              assume now > tmpNow;
[L5621]              assume msgsender_MSG != null;
[L5622]              assume DType[msgsender_MSG] != SafeMath;
[L5623]              assume DType[msgsender_MSG] != IERC20;
[L5624]              assume DType[msgsender_MSG] != ERC20;
[L5625]              assume DType[msgsender_MSG] != Ownable;
[L5626]              assume DType[msgsender_MSG] != Pausable;
[L5627]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5628]              assume DType[msgsender_MSG] != UPCToken;
[L5629]              Alloc[msgsender_MSG] := true;
[L5630]  COND FALSE  !(choice == 16)
[L5636]  COND FALSE  !(choice == 15)
[L5642]  COND TRUE   choice == 14
[L5643]              gas := gas - 21000;
[L5644]  COND TRUE   gas >= 0
[L5645]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5646]              assume msgvalue_MSG == 0;
[L5647]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s648) && msgsender_MSG != to_s648) && value_s648 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s648] + value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1222]              havoc __exception;
[L1223]              revert := false;
[L1224]  COND TRUE   __exception
[L1225]              __tmp__Balance := Balance;
[L1226]              __tmp__DType := DType;
[L1227]              __tmp__Alloc := Alloc;
[L1228]              __tmp__balance_ADDR := balance_ADDR;
[L1229]              __tmp__M_Ref_int := M_Ref_int;
[L1230]              __tmp__sum__balances0 := sum__balances0;
[L1231]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1232]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1233]              __tmp__sum__allowances1 := sum__allowances1;
[L1234]              __tmp__Length := Length;
[L1235]              __tmp__now := now;
[L1236]              __tmp___balances_ERC20 := _balances_ERC20;
[L1237]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1238]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1239]              __tmp__owner_Ownable := owner_Ownable;
[L1240]              __tmp___paused_Pausable := _paused_Pausable;
[L1241]              __tmp__name_UPCToken := name_UPCToken;
[L1242]              __tmp__symbol_UPCToken := symbol_UPCToken;
[L1243]              __tmp__decimals_UPCToken := decimals_UPCToken;
[L1244]              __tmp__INIT_TOTALSUPPLY_UPCToken := INIT_TOTALSUPPLY_UPCToken;
[L1245]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3443]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND TRUE   !!__tmp___paused_Pausable[this]
[L4965]              revert := true;
[L3443]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3444]  COND TRUE   revert
[L1245]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1246]              assume revert || gas < 0;
[L5647]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5749]  RET         call CorralChoice_UPCToken(this);

Loop:
[L5749]  CALL        call CorralChoice_UPCToken(this);
[L5584]              havoc msgsender_MSG;
[L5585]              havoc msgvalue_MSG;
[L5586]              havoc choice;
[L5587]              havoc __ret_0_totalSupply;
[L5588]              havoc account_s242;
[L5589]              havoc __ret_0_balanceOf;
[L5590]              havoc to_s648;
[L5591]              havoc value_s648;
[L5592]              havoc __ret_0_transfer;
[L5593]              havoc owner_s277;
[L5594]              havoc spender_s277;
[L5595]              havoc __ret_0_allowance;
[L5596]              havoc spender_s687;
[L5597]              havoc value_s687;
[L5598]              havoc __ret_0_approve;
[L5599]              havoc from_s669;
[L5600]              havoc to_s669;
[L5601]              havoc value_s669;
[L5602]              havoc __ret_0_transferFrom;
[L5603]              havoc spender_s705;
[L5604]              havoc addedValue_s705;
[L5605]              havoc __ret_0_increaseAllowance;
[L5606]              havoc spender_s723;
[L5607]              havoc subtractedValue_s723;
[L5608]              havoc __ret_0_decreaseAllowance;
[L5609]              havoc __ret_0_owner;
[L5610]              havoc _newOwner_s519;
[L5611]              havoc __ret_0_paused;
[L5612]              havoc __ret_0_name;
[L5613]              havoc __ret_0_symbol;
[L5614]              havoc __ret_0_decimals;
[L5615]              havoc tmpNow;
[L5616]              havoc gas;
[L5617]              assume gas > 4000000 && gas <= 8000000;
[L5618]              tmpNow := now;
[L5619]              havoc now;
[L5620]              assume now > tmpNow;
[L5621]              assume msgsender_MSG != null;
[L5622]              assume DType[msgsender_MSG] != SafeMath;
[L5623]              assume DType[msgsender_MSG] != IERC20;
[L5624]              assume DType[msgsender_MSG] != ERC20;
[L5625]              assume DType[msgsender_MSG] != Ownable;
[L5626]              assume DType[msgsender_MSG] != Pausable;
[L5627]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5628]              assume DType[msgsender_MSG] != UPCToken;
[L5629]              Alloc[msgsender_MSG] := true;
[L5630]  COND FALSE  !(choice == 16)
[L5636]  COND FALSE  !(choice == 15)
[L5642]  COND TRUE   choice == 14
[L5643]              gas := gas - 21000;
[L5644]  COND TRUE   gas >= 0
[L5645]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5646]              assume msgvalue_MSG == 0;
[L5647]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s648) && msgsender_MSG != to_s648) && value_s648 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s648] + value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1222]              havoc __exception;
[L1223]              revert := false;
[L1224]  COND TRUE   __exception
[L1225]              __tmp__Balance := Balance;
[L1226]              __tmp__DType := DType;
[L1227]              __tmp__Alloc := Alloc;
[L1228]              __tmp__balance_ADDR := balance_ADDR;
[L1229]              __tmp__M_Ref_int := M_Ref_int;
[L1230]              __tmp__sum__balances0 := sum__balances0;
[L1231]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1232]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1233]              __tmp__sum__allowances1 := sum__allowances1;
[L1234]              __tmp__Length := Length;
[L1235]              __tmp__now := now;
[L1236]              __tmp___balances_ERC20 := _balances_ERC20;
[L1237]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1238]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1239]              __tmp__owner_Ownable := owner_Ownable;
[L1240]              __tmp___paused_Pausable := _paused_Pausable;
[L1241]              __tmp__name_UPCToken := name_UPCToken;
[L1242]              __tmp__symbol_UPCToken := symbol_UPCToken;
[L1243]              __tmp__decimals_UPCToken := decimals_UPCToken;
[L1244]              __tmp__INIT_TOTALSUPPLY_UPCToken := INIT_TOTALSUPPLY_UPCToken;
[L1245]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3443]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND TRUE   !!__tmp___paused_Pausable[this]
[L4965]              revert := true;
[L3443]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3444]  COND TRUE   revert
[L1245]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1246]              assume revert || gas < 0;
[L5647]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5749]  RET         call CorralChoice_UPCToken(this);

[2020-11-25 07:50:08,279 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:50:08,279 INFO  L82        PathProgramCache]: Analyzing trace with hash -1700097961, now seen corresponding path program 1 times
[2020-11-25 07:50:08,280 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:50:08,291 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:50:08,337 INFO  L134       CoverageAnalysis]: Checked inductivity of 161 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 161 trivial. 0 not checked.
[2020-11-25 07:50:08,338 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:50:08,338 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 07:50:08,338 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:50:08,338 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 07:50:08,338 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 07:50:08,338 INFO  L87              Difference]: Start difference. First operand 3389 states and 3814 transitions. cyclomatic complexity: 429 Second operand 4 states.
[2020-11-25 07:50:08,851 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:50:08,852 INFO  L93              Difference]: Finished difference Result 4031 states and 4655 transitions.
[2020-11-25 07:50:08,852 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 07:50:08,852 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4031 states and 4655 transitions.
[2020-11-25 07:50:08,864 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 12
[2020-11-25 07:50:08,876 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4031 states to 3840 states and 4459 transitions.
[2020-11-25 07:50:08,877 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1136
[2020-11-25 07:50:08,877 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1136
[2020-11-25 07:50:08,877 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3840 states and 4459 transitions.
[2020-11-25 07:50:08,881 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:50:08,881 INFO  L728         BuchiCegarLoop]: Abstraction has 3840 states and 4459 transitions.
[2020-11-25 07:50:08,884 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3840 states and 4459 transitions.
[2020-11-25 07:50:08,912 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3840 to 3396.
[2020-11-25 07:50:08,912 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3396 states.
[2020-11-25 07:50:08,916 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3396 states to 3396 states and 3861 transitions.
[2020-11-25 07:50:08,917 INFO  L751         BuchiCegarLoop]: Abstraction has 3396 states and 3861 transitions.
[2020-11-25 07:50:08,917 INFO  L631         BuchiCegarLoop]: Abstraction has 3396 states and 3861 transitions.
[2020-11-25 07:50:08,917 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 07:50:08,917 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3396 states and 3861 transitions.
[2020-11-25 07:50:08,941 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 07:50:08,941 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:50:08,941 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:50:08,945 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:50:08,945 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC20Pausable0 := false;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L5739]              assume null == 0;
[L5740]  CALL        call this := FreshRefGenerator__success();
[L2444]              havoc newRef;
[L2445]              assume Alloc[newRef] == false;
[L2446]              Alloc[newRef] := true;
[L2447]              assume newRef != null;
[L5740]  RET         call this := FreshRefGenerator__success();
[L5741]              assume now >= 0;
[L5742]              assume DType[this] == UPCToken;
[L5743]              assume msgvalue_MSG == 0;
[L5744]              gas := gas - 53000;
[L5745]  CALL        call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L1538]              havoc __exception;
[L1539]              revert := false;
[L1540]  COND FALSE  !(__exception)
[L1564]  CALL        call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3754]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2617]              assume msgsender_MSG != null;
[L2618]              Balance[this] := 0;
[L2632]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2633]  COND FALSE  !(revert)
[L3754]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3755]  COND FALSE  !(revert)
[L3758]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2678]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2617]              assume msgsender_MSG != null;
[L2618]              Balance[this] := 0;
[L2632]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2633]  COND FALSE  !(revert)
[L2678]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2682]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]              assume msgsender_MSG != null;
[L2655]              Balance[this] := 0;
[L2656]              _balances_ERC20[this] := zeroRefintArr();
[L2657]              sum__balances0[this] := 0;
[L2658]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2659]              sum__allowances1[this] := 0;
[L2660]              _totalSupply_ERC20[this] := 0;
[L2682]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L3758]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3762]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]              assume msgsender_MSG != null;
[L3147]              Balance[this] := 0;
[L3148]              owner_Ownable[this] := null;
[L3162]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3163]  COND FALSE  !(revert)
[L3762]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3763]  COND FALSE  !(revert)
[L3766]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3299]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]              assume msgsender_MSG != null;
[L3147]              Balance[this] := 0;
[L3148]              owner_Ownable[this] := null;
[L3162]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3163]  COND FALSE  !(revert)
[L3299]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3300]  COND FALSE  !(revert)
[L3303]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3278]              assume msgsender_MSG != null;
[L3279]              Balance[this] := 0;
[L3280]              _paused_Pausable[this] := false;
[L3282]              _paused_Pausable[this] := false;
[L3303]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  COND FALSE  !(revert)
[L3766]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3767]  COND FALSE  !(revert)
[L3770]  CALL        call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3417]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2617]              assume msgsender_MSG != null;
[L2618]              Balance[this] := 0;
[L2632]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2633]  COND FALSE  !(revert)
[L3417]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3418]  COND FALSE  !(revert)
[L3421]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2678]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2617]              assume msgsender_MSG != null;
[L2618]              Balance[this] := 0;
[L2632]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2633]  COND FALSE  !(revert)
[L2678]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2682]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]              assume msgsender_MSG != null;
[L2655]              Balance[this] := 0;
[L2656]              _balances_ERC20[this] := zeroRefintArr();
[L2657]              sum__balances0[this] := 0;
[L2658]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2659]              sum__allowances1[this] := 0;
[L2660]              _totalSupply_ERC20[this] := 0;
[L2682]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L3421]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3422]  COND FALSE  !(revert)
[L3425]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]              assume msgsender_MSG != null;
[L3147]              Balance[this] := 0;
[L3148]              owner_Ownable[this] := null;
[L3162]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3163]  COND FALSE  !(revert)
[L3425]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3426]  COND FALSE  !(revert)
[L3429]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3299]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]              assume msgsender_MSG != null;
[L3147]              Balance[this] := 0;
[L3148]              owner_Ownable[this] := null;
[L3162]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3163]  COND FALSE  !(revert)
[L3299]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3300]  COND FALSE  !(revert)
[L3303]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3278]              assume msgsender_MSG != null;
[L3279]              Balance[this] := 0;
[L3280]              _paused_Pausable[this] := false;
[L3282]              _paused_Pausable[this] := false;
[L3303]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  COND FALSE  !(revert)
[L3429]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3430]  COND FALSE  !(revert)
[L3433]  CALL        call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3386]              assume msgsender_MSG != null;
[L3387]              Balance[this] := 0;
[L3433]  RET         call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3434]  COND FALSE  !(revert)
[L3770]  RET         call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3771]  COND FALSE  !(revert)
[L3774]  CALL        call UPCToken_UPCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]              assume msgsender_MSG != null;
[L3710]              Balance[this] := 0;
[L3711]              name_UPCToken[this] := 995162267;
[L3712]              symbol_UPCToken[this] := 189219111;
[L3713]              decimals_UPCToken[this] := 18;
[L3714]              INIT_TOTALSUPPLY_UPCToken[this] := 1000000000;
[L3716]              owner_Ownable[this] := msgsender_MSG;
[L3717]              _totalSupply_ERC20[this] := INIT_TOTALSUPPLY_UPCToken[this];
[L3718]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][owner_Ownable[this]];
[L3719]              _balances_ERC20[this][owner_Ownable[this]] := _totalSupply_ERC20[this];
[L3720]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][owner_Ownable[this]];
[L3721]              assert { :EventEmitted "Transfer_UPCToken" } true;
[L3774]  RET         call UPCToken_UPCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3775]  COND FALSE  !(revert)
[L1564]  RET         call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1565]              assume !revert && gas >= 0;
[L5745]  RET         call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L5746]              assume !revert && gas >= 0;
[L5749]  CALL        call CorralChoice_UPCToken(this);
[L5584]              havoc msgsender_MSG;
[L5585]              havoc msgvalue_MSG;
[L5586]              havoc choice;
[L5587]              havoc __ret_0_totalSupply;
[L5588]              havoc account_s242;
[L5589]              havoc __ret_0_balanceOf;
[L5590]              havoc to_s648;
[L5591]              havoc value_s648;
[L5592]              havoc __ret_0_transfer;
[L5593]              havoc owner_s277;
[L5594]              havoc spender_s277;
[L5595]              havoc __ret_0_allowance;
[L5596]              havoc spender_s687;
[L5597]              havoc value_s687;
[L5598]              havoc __ret_0_approve;
[L5599]              havoc from_s669;
[L5600]              havoc to_s669;
[L5601]              havoc value_s669;
[L5602]              havoc __ret_0_transferFrom;
[L5603]              havoc spender_s705;
[L5604]              havoc addedValue_s705;
[L5605]              havoc __ret_0_increaseAllowance;
[L5606]              havoc spender_s723;
[L5607]              havoc subtractedValue_s723;
[L5608]              havoc __ret_0_decreaseAllowance;
[L5609]              havoc __ret_0_owner;
[L5610]              havoc _newOwner_s519;
[L5611]              havoc __ret_0_paused;
[L5612]              havoc __ret_0_name;
[L5613]              havoc __ret_0_symbol;
[L5614]              havoc __ret_0_decimals;
[L5615]              havoc tmpNow;
[L5616]              havoc gas;
[L5617]              assume gas > 4000000 && gas <= 8000000;
[L5618]              tmpNow := now;
[L5619]              havoc now;
[L5620]              assume now > tmpNow;
[L5621]              assume msgsender_MSG != null;
[L5622]              assume DType[msgsender_MSG] != SafeMath;
[L5623]              assume DType[msgsender_MSG] != IERC20;
[L5624]              assume DType[msgsender_MSG] != ERC20;
[L5625]              assume DType[msgsender_MSG] != Ownable;
[L5626]              assume DType[msgsender_MSG] != Pausable;
[L5627]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5628]              assume DType[msgsender_MSG] != UPCToken;
[L5629]              Alloc[msgsender_MSG] := true;
[L5630]  COND FALSE  !(choice == 16)
[L5636]  COND FALSE  !(choice == 15)
[L5642]  COND TRUE   choice == 14
[L5643]              gas := gas - 21000;
[L5644]  COND TRUE   gas >= 0
[L5645]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5646]              assume msgvalue_MSG == 0;
[L5647]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s648) && msgsender_MSG != to_s648) && value_s648 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s648] + value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1222]              havoc __exception;
[L1223]              revert := false;
[L1224]  COND TRUE   __exception
[L1225]              __tmp__Balance := Balance;
[L1226]              __tmp__DType := DType;
[L1227]              __tmp__Alloc := Alloc;
[L1228]              __tmp__balance_ADDR := balance_ADDR;
[L1229]              __tmp__M_Ref_int := M_Ref_int;
[L1230]              __tmp__sum__balances0 := sum__balances0;
[L1231]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1232]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1233]              __tmp__sum__allowances1 := sum__allowances1;
[L1234]              __tmp__Length := Length;
[L1235]              __tmp__now := now;
[L1236]              __tmp___balances_ERC20 := _balances_ERC20;
[L1237]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1238]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1239]              __tmp__owner_Ownable := owner_Ownable;
[L1240]              __tmp___paused_Pausable := _paused_Pausable;
[L1241]              __tmp__name_UPCToken := name_UPCToken;
[L1242]              __tmp__symbol_UPCToken := symbol_UPCToken;
[L1243]              __tmp__decimals_UPCToken := decimals_UPCToken;
[L1244]              __tmp__INIT_TOTALSUPPLY_UPCToken := INIT_TOTALSUPPLY_UPCToken;
[L1245]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3443]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(!!__tmp___paused_Pausable[this])
[L3443]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3444]  COND FALSE  !(revert)
[L3447]  COND TRUE   __tmp__DType[this] == UPCToken
[L3448]  CALL        call __var_11 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2714]  COND TRUE   __tmp__DType[this] == UPCToken
[L2715]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L3036]              __var_4 := null;
[L3037]  COND TRUE   !(sender_s444 != null)
[L3038]              revert := true;
[L2715]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L2716]  COND TRUE   revert
[L3448]  RET         call __var_11 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3449]  COND TRUE   revert
[L1245]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1246]              assume revert || gas < 0;
[L5647]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5749]  RET         call CorralChoice_UPCToken(this);

Loop:
[L5749]  CALL        call CorralChoice_UPCToken(this);
[L5584]              havoc msgsender_MSG;
[L5585]              havoc msgvalue_MSG;
[L5586]              havoc choice;
[L5587]              havoc __ret_0_totalSupply;
[L5588]              havoc account_s242;
[L5589]              havoc __ret_0_balanceOf;
[L5590]              havoc to_s648;
[L5591]              havoc value_s648;
[L5592]              havoc __ret_0_transfer;
[L5593]              havoc owner_s277;
[L5594]              havoc spender_s277;
[L5595]              havoc __ret_0_allowance;
[L5596]              havoc spender_s687;
[L5597]              havoc value_s687;
[L5598]              havoc __ret_0_approve;
[L5599]              havoc from_s669;
[L5600]              havoc to_s669;
[L5601]              havoc value_s669;
[L5602]              havoc __ret_0_transferFrom;
[L5603]              havoc spender_s705;
[L5604]              havoc addedValue_s705;
[L5605]              havoc __ret_0_increaseAllowance;
[L5606]              havoc spender_s723;
[L5607]              havoc subtractedValue_s723;
[L5608]              havoc __ret_0_decreaseAllowance;
[L5609]              havoc __ret_0_owner;
[L5610]              havoc _newOwner_s519;
[L5611]              havoc __ret_0_paused;
[L5612]              havoc __ret_0_name;
[L5613]              havoc __ret_0_symbol;
[L5614]              havoc __ret_0_decimals;
[L5615]              havoc tmpNow;
[L5616]              havoc gas;
[L5617]              assume gas > 4000000 && gas <= 8000000;
[L5618]              tmpNow := now;
[L5619]              havoc now;
[L5620]              assume now > tmpNow;
[L5621]              assume msgsender_MSG != null;
[L5622]              assume DType[msgsender_MSG] != SafeMath;
[L5623]              assume DType[msgsender_MSG] != IERC20;
[L5624]              assume DType[msgsender_MSG] != ERC20;
[L5625]              assume DType[msgsender_MSG] != Ownable;
[L5626]              assume DType[msgsender_MSG] != Pausable;
[L5627]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5628]              assume DType[msgsender_MSG] != UPCToken;
[L5629]              Alloc[msgsender_MSG] := true;
[L5630]  COND FALSE  !(choice == 16)
[L5636]  COND FALSE  !(choice == 15)
[L5642]  COND TRUE   choice == 14
[L5643]              gas := gas - 21000;
[L5644]  COND TRUE   gas >= 0
[L5645]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5646]              assume msgvalue_MSG == 0;
[L5647]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s648) && msgsender_MSG != to_s648) && value_s648 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s648] + value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1222]              havoc __exception;
[L1223]              revert := false;
[L1224]  COND TRUE   __exception
[L1225]              __tmp__Balance := Balance;
[L1226]              __tmp__DType := DType;
[L1227]              __tmp__Alloc := Alloc;
[L1228]              __tmp__balance_ADDR := balance_ADDR;
[L1229]              __tmp__M_Ref_int := M_Ref_int;
[L1230]              __tmp__sum__balances0 := sum__balances0;
[L1231]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1232]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1233]              __tmp__sum__allowances1 := sum__allowances1;
[L1234]              __tmp__Length := Length;
[L1235]              __tmp__now := now;
[L1236]              __tmp___balances_ERC20 := _balances_ERC20;
[L1237]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1238]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1239]              __tmp__owner_Ownable := owner_Ownable;
[L1240]              __tmp___paused_Pausable := _paused_Pausable;
[L1241]              __tmp__name_UPCToken := name_UPCToken;
[L1242]              __tmp__symbol_UPCToken := symbol_UPCToken;
[L1243]              __tmp__decimals_UPCToken := decimals_UPCToken;
[L1244]              __tmp__INIT_TOTALSUPPLY_UPCToken := INIT_TOTALSUPPLY_UPCToken;
[L1245]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3443]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(!!__tmp___paused_Pausable[this])
[L3443]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3444]  COND FALSE  !(revert)
[L3447]  COND TRUE   __tmp__DType[this] == UPCToken
[L3448]  CALL        call __var_11 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2714]  COND TRUE   __tmp__DType[this] == UPCToken
[L2715]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L3036]              __var_4 := null;
[L3037]  COND TRUE   !(sender_s444 != null)
[L3038]              revert := true;
[L2715]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L2716]  COND TRUE   revert
[L3448]  RET         call __var_11 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3449]  COND TRUE   revert
[L1245]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1246]              assume revert || gas < 0;
[L5647]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5749]  RET         call CorralChoice_UPCToken(this);

[2020-11-25 07:50:08,976 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:50:08,976 INFO  L82        PathProgramCache]: Analyzing trace with hash 60192448, now seen corresponding path program 1 times
[2020-11-25 07:50:08,977 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:50:08,991 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:50:09,060 INFO  L134       CoverageAnalysis]: Checked inductivity of 161 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 161 trivial. 0 not checked.
[2020-11-25 07:50:09,060 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:50:09,060 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 07:50:09,061 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:50:09,061 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 07:50:09,061 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 07:50:09,061 INFO  L87              Difference]: Start difference. First operand 3396 states and 3861 transitions. cyclomatic complexity: 469 Second operand 7 states.
[2020-11-25 07:50:09,119 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:50:09,119 INFO  L93              Difference]: Finished difference Result 3436 states and 3911 transitions.
[2020-11-25 07:50:09,119 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 07:50:09,119 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3436 states and 3911 transitions.
[2020-11-25 07:50:09,129 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 07:50:09,141 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3436 states to 3400 states and 3869 transitions.
[2020-11-25 07:50:09,141 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1088
[2020-11-25 07:50:09,142 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1088
[2020-11-25 07:50:09,142 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3400 states and 3869 transitions.
[2020-11-25 07:50:09,145 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:50:09,145 INFO  L728         BuchiCegarLoop]: Abstraction has 3400 states and 3869 transitions.
[2020-11-25 07:50:09,147 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3400 states and 3869 transitions.
[2020-11-25 07:50:09,168 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3400 to 3400.
[2020-11-25 07:50:09,168 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3400 states.
[2020-11-25 07:50:09,171 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3400 states to 3400 states and 3869 transitions.
[2020-11-25 07:50:09,171 INFO  L751         BuchiCegarLoop]: Abstraction has 3400 states and 3869 transitions.
[2020-11-25 07:50:09,171 INFO  L631         BuchiCegarLoop]: Abstraction has 3400 states and 3869 transitions.
[2020-11-25 07:50:09,171 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 07:50:09,171 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3400 states and 3869 transitions.
[2020-11-25 07:50:09,175 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 07:50:09,175 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:50:09,175 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:50:09,176 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:50:09,176 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC20Pausable0 := false;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L5739]              assume null == 0;
[L5740]  CALL        call this := FreshRefGenerator__success();
[L2444]              havoc newRef;
[L2445]              assume Alloc[newRef] == false;
[L2446]              Alloc[newRef] := true;
[L2447]              assume newRef != null;
[L5740]  RET         call this := FreshRefGenerator__success();
[L5741]              assume now >= 0;
[L5742]              assume DType[this] == UPCToken;
[L5743]              assume msgvalue_MSG == 0;
[L5744]              gas := gas - 53000;
[L5745]  CALL        call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L1538]              havoc __exception;
[L1539]              revert := false;
[L1540]  COND FALSE  !(__exception)
[L1564]  CALL        call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3754]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2617]              assume msgsender_MSG != null;
[L2618]              Balance[this] := 0;
[L2632]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2633]  COND FALSE  !(revert)
[L3754]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3755]  COND FALSE  !(revert)
[L3758]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2678]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2617]              assume msgsender_MSG != null;
[L2618]              Balance[this] := 0;
[L2632]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2633]  COND FALSE  !(revert)
[L2678]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2682]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]              assume msgsender_MSG != null;
[L2655]              Balance[this] := 0;
[L2656]              _balances_ERC20[this] := zeroRefintArr();
[L2657]              sum__balances0[this] := 0;
[L2658]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2659]              sum__allowances1[this] := 0;
[L2660]              _totalSupply_ERC20[this] := 0;
[L2682]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L3758]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3762]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]              assume msgsender_MSG != null;
[L3147]              Balance[this] := 0;
[L3148]              owner_Ownable[this] := null;
[L3162]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3163]  COND FALSE  !(revert)
[L3762]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3763]  COND FALSE  !(revert)
[L3766]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3299]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]              assume msgsender_MSG != null;
[L3147]              Balance[this] := 0;
[L3148]              owner_Ownable[this] := null;
[L3162]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3163]  COND FALSE  !(revert)
[L3299]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3300]  COND FALSE  !(revert)
[L3303]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3278]              assume msgsender_MSG != null;
[L3279]              Balance[this] := 0;
[L3280]              _paused_Pausable[this] := false;
[L3282]              _paused_Pausable[this] := false;
[L3303]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  COND FALSE  !(revert)
[L3766]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3767]  COND FALSE  !(revert)
[L3770]  CALL        call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3417]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2617]              assume msgsender_MSG != null;
[L2618]              Balance[this] := 0;
[L2632]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2633]  COND FALSE  !(revert)
[L3417]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3418]  COND FALSE  !(revert)
[L3421]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2678]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2617]              assume msgsender_MSG != null;
[L2618]              Balance[this] := 0;
[L2632]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2633]  COND FALSE  !(revert)
[L2678]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2682]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]              assume msgsender_MSG != null;
[L2655]              Balance[this] := 0;
[L2656]              _balances_ERC20[this] := zeroRefintArr();
[L2657]              sum__balances0[this] := 0;
[L2658]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2659]              sum__allowances1[this] := 0;
[L2660]              _totalSupply_ERC20[this] := 0;
[L2682]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L3421]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3422]  COND FALSE  !(revert)
[L3425]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]              assume msgsender_MSG != null;
[L3147]              Balance[this] := 0;
[L3148]              owner_Ownable[this] := null;
[L3162]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3163]  COND FALSE  !(revert)
[L3425]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3426]  COND FALSE  !(revert)
[L3429]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3299]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]              assume msgsender_MSG != null;
[L3147]              Balance[this] := 0;
[L3148]              owner_Ownable[this] := null;
[L3162]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3163]  COND FALSE  !(revert)
[L3299]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3300]  COND FALSE  !(revert)
[L3303]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3278]              assume msgsender_MSG != null;
[L3279]              Balance[this] := 0;
[L3280]              _paused_Pausable[this] := false;
[L3282]              _paused_Pausable[this] := false;
[L3303]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  COND FALSE  !(revert)
[L3429]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3430]  COND FALSE  !(revert)
[L3433]  CALL        call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3386]              assume msgsender_MSG != null;
[L3387]              Balance[this] := 0;
[L3433]  RET         call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3434]  COND FALSE  !(revert)
[L3770]  RET         call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3771]  COND FALSE  !(revert)
[L3774]  CALL        call UPCToken_UPCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]              assume msgsender_MSG != null;
[L3710]              Balance[this] := 0;
[L3711]              name_UPCToken[this] := 995162267;
[L3712]              symbol_UPCToken[this] := 189219111;
[L3713]              decimals_UPCToken[this] := 18;
[L3714]              INIT_TOTALSUPPLY_UPCToken[this] := 1000000000;
[L3716]              owner_Ownable[this] := msgsender_MSG;
[L3717]              _totalSupply_ERC20[this] := INIT_TOTALSUPPLY_UPCToken[this];
[L3718]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][owner_Ownable[this]];
[L3719]              _balances_ERC20[this][owner_Ownable[this]] := _totalSupply_ERC20[this];
[L3720]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][owner_Ownable[this]];
[L3721]              assert { :EventEmitted "Transfer_UPCToken" } true;
[L3774]  RET         call UPCToken_UPCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3775]  COND FALSE  !(revert)
[L1564]  RET         call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1565]              assume !revert && gas >= 0;
[L5745]  RET         call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
[L5746]              assume !revert && gas >= 0;
[L5749]  CALL        call CorralChoice_UPCToken(this);
[L5584]              havoc msgsender_MSG;
[L5585]              havoc msgvalue_MSG;
[L5586]              havoc choice;
[L5587]              havoc __ret_0_totalSupply;
[L5588]              havoc account_s242;
[L5589]              havoc __ret_0_balanceOf;
[L5590]              havoc to_s648;
[L5591]              havoc value_s648;
[L5592]              havoc __ret_0_transfer;
[L5593]              havoc owner_s277;
[L5594]              havoc spender_s277;
[L5595]              havoc __ret_0_allowance;
[L5596]              havoc spender_s687;
[L5597]              havoc value_s687;
[L5598]              havoc __ret_0_approve;
[L5599]              havoc from_s669;
[L5600]              havoc to_s669;
[L5601]              havoc value_s669;
[L5602]              havoc __ret_0_transferFrom;
[L5603]              havoc spender_s705;
[L5604]              havoc addedValue_s705;
[L5605]              havoc __ret_0_increaseAllowance;
[L5606]              havoc spender_s723;
[L5607]              havoc subtractedValue_s723;
[L5608]              havoc __ret_0_decreaseAllowance;
[L5609]              havoc __ret_0_owner;
[L5610]              havoc _newOwner_s519;
[L5611]              havoc __ret_0_paused;
[L5612]              havoc __ret_0_name;
[L5613]              havoc __ret_0_symbol;
[L5614]              havoc __ret_0_decimals;
[L5615]              havoc tmpNow;
[L5616]              havoc gas;
[L5617]              assume gas > 4000000 && gas <= 8000000;
[L5618]              tmpNow := now;
[L5619]              havoc now;
[L5620]              assume now > tmpNow;
[L5621]              assume msgsender_MSG != null;
[L5622]              assume DType[msgsender_MSG] != SafeMath;
[L5623]              assume DType[msgsender_MSG] != IERC20;
[L5624]              assume DType[msgsender_MSG] != ERC20;
[L5625]              assume DType[msgsender_MSG] != Ownable;
[L5626]              assume DType[msgsender_MSG] != Pausable;
[L5627]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5628]              assume DType[msgsender_MSG] != UPCToken;
[L5629]              Alloc[msgsender_MSG] := true;
[L5630]  COND FALSE  !(choice == 16)
[L5636]  COND FALSE  !(choice == 15)
[L5642]  COND TRUE   choice == 14
[L5643]              gas := gas - 21000;
[L5644]  COND TRUE   gas >= 0
[L5645]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5646]              assume msgvalue_MSG == 0;
[L5647]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s648) && msgsender_MSG != to_s648) && value_s648 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s648] + value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1222]              havoc __exception;
[L1223]              revert := false;
[L1224]  COND TRUE   __exception
[L1225]              __tmp__Balance := Balance;
[L1226]              __tmp__DType := DType;
[L1227]              __tmp__Alloc := Alloc;
[L1228]              __tmp__balance_ADDR := balance_ADDR;
[L1229]              __tmp__M_Ref_int := M_Ref_int;
[L1230]              __tmp__sum__balances0 := sum__balances0;
[L1231]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1232]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1233]              __tmp__sum__allowances1 := sum__allowances1;
[L1234]              __tmp__Length := Length;
[L1235]              __tmp__now := now;
[L1236]              __tmp___balances_ERC20 := _balances_ERC20;
[L1237]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1238]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1239]              __tmp__owner_Ownable := owner_Ownable;
[L1240]              __tmp___paused_Pausable := _paused_Pausable;
[L1241]              __tmp__name_UPCToken := name_UPCToken;
[L1242]              __tmp__symbol_UPCToken := symbol_UPCToken;
[L1243]              __tmp__decimals_UPCToken := decimals_UPCToken;
[L1244]              __tmp__INIT_TOTALSUPPLY_UPCToken := INIT_TOTALSUPPLY_UPCToken;
[L1245]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3443]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(!!__tmp___paused_Pausable[this])
[L3443]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3444]  COND FALSE  !(revert)
[L3447]  COND TRUE   __tmp__DType[this] == UPCToken
[L3448]  CALL        call __var_11 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2714]  COND TRUE   __tmp__DType[this] == UPCToken
[L2715]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L3036]              __var_4 := null;
[L3037]  COND FALSE  !(!(sender_s444 != null))
[L3041]              __var_5 := null;
[L3042]  COND TRUE   !(recipient_s444 != null)
[L3043]              revert := true;
[L2715]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L2716]  COND TRUE   revert
[L3448]  RET         call __var_11 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3449]  COND TRUE   revert
[L1245]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1246]              assume revert || gas < 0;
[L5647]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5749]  RET         call CorralChoice_UPCToken(this);

Loop:
[L5749]  CALL        call CorralChoice_UPCToken(this);
[L5584]              havoc msgsender_MSG;
[L5585]              havoc msgvalue_MSG;
[L5586]              havoc choice;
[L5587]              havoc __ret_0_totalSupply;
[L5588]              havoc account_s242;
[L5589]              havoc __ret_0_balanceOf;
[L5590]              havoc to_s648;
[L5591]              havoc value_s648;
[L5592]              havoc __ret_0_transfer;
[L5593]              havoc owner_s277;
[L5594]              havoc spender_s277;
[L5595]              havoc __ret_0_allowance;
[L5596]              havoc spender_s687;
[L5597]              havoc value_s687;
[L5598]              havoc __ret_0_approve;
[L5599]              havoc from_s669;
[L5600]              havoc to_s669;
[L5601]              havoc value_s669;
[L5602]              havoc __ret_0_transferFrom;
[L5603]              havoc spender_s705;
[L5604]              havoc addedValue_s705;
[L5605]              havoc __ret_0_increaseAllowance;
[L5606]              havoc spender_s723;
[L5607]              havoc subtractedValue_s723;
[L5608]              havoc __ret_0_decreaseAllowance;
[L5609]              havoc __ret_0_owner;
[L5610]              havoc _newOwner_s519;
[L5611]              havoc __ret_0_paused;
[L5612]              havoc __ret_0_name;
[L5613]              havoc __ret_0_symbol;
[L5614]              havoc __ret_0_decimals;
[L5615]              havoc tmpNow;
[L5616]              havoc gas;
[L5617]              assume gas > 4000000 && gas <= 8000000;
[L5618]              tmpNow := now;
[L5619]              havoc now;
[L5620]              assume now > tmpNow;
[L5621]              assume msgsender_MSG != null;
[L5622]              assume DType[msgsender_MSG] != SafeMath;
[L5623]              assume DType[msgsender_MSG] != IERC20;
[L5624]              assume DType[msgsender_MSG] != ERC20;
[L5625]              assume DType[msgsender_MSG] != Ownable;
[L5626]              assume DType[msgsender_MSG] != Pausable;
[L5627]              assume DType[msgsender_MSG] != ERC20Pausable;
[L5628]              assume DType[msgsender_MSG] != UPCToken;
[L5629]              Alloc[msgsender_MSG] := true;
[L5630]  COND FALSE  !(choice == 16)
[L5636]  COND FALSE  !(choice == 15)
[L5642]  COND TRUE   choice == 14
[L5643]              gas := gas - 21000;
[L5644]  COND TRUE   gas >= 0
[L5645]              assume value_s648 >= 0 && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5646]              assume msgvalue_MSG == 0;
[L5647]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s648) && msgsender_MSG != to_s648) && value_s648 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s648] + value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1222]              havoc __exception;
[L1223]              revert := false;
[L1224]  COND TRUE   __exception
[L1225]              __tmp__Balance := Balance;
[L1226]              __tmp__DType := DType;
[L1227]              __tmp__Alloc := Alloc;
[L1228]              __tmp__balance_ADDR := balance_ADDR;
[L1229]              __tmp__M_Ref_int := M_Ref_int;
[L1230]              __tmp__sum__balances0 := sum__balances0;
[L1231]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1232]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1233]              __tmp__sum__allowances1 := sum__allowances1;
[L1234]              __tmp__Length := Length;
[L1235]              __tmp__now := now;
[L1236]              __tmp___balances_ERC20 := _balances_ERC20;
[L1237]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1238]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1239]              __tmp__owner_Ownable := owner_Ownable;
[L1240]              __tmp___paused_Pausable := _paused_Pausable;
[L1241]              __tmp__name_UPCToken := name_UPCToken;
[L1242]              __tmp__symbol_UPCToken := symbol_UPCToken;
[L1243]              __tmp__decimals_UPCToken := decimals_UPCToken;
[L1244]              __tmp__INIT_TOTALSUPPLY_UPCToken := INIT_TOTALSUPPLY_UPCToken;
[L1245]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3443]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(!!__tmp___paused_Pausable[this])
[L3443]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3444]  COND FALSE  !(revert)
[L3447]  COND TRUE   __tmp__DType[this] == UPCToken
[L3448]  CALL        call __var_11 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2714]  COND TRUE   __tmp__DType[this] == UPCToken
[L2715]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L3036]              __var_4 := null;
[L3037]  COND FALSE  !(!(sender_s444 != null))
[L3041]              __var_5 := null;
[L3042]  COND TRUE   !(recipient_s444 != null)
[L3043]              revert := true;
[L2715]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L2716]  COND TRUE   revert
[L3448]  RET         call __var_11 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3449]  COND TRUE   revert
[L1245]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1246]              assume revert || gas < 0;
[L5647]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L5749]  RET         call CorralChoice_UPCToken(this);

[2020-11-25 07:50:09,180 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:50:09,180 INFO  L82        PathProgramCache]: Analyzing trace with hash 1367904460, now seen corresponding path program 1 times
[2020-11-25 07:50:09,181 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:50:09,194 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:50:09,208 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:50:09,277 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:50:09,277 INFO  L82        PathProgramCache]: Analyzing trace with hash -591114606, now seen corresponding path program 1 times
[2020-11-25 07:50:09,278 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:50:09,282 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:50:09,286 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:50:09,296 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:50:09,296 INFO  L82        PathProgramCache]: Analyzing trace with hash 490949853, now seen corresponding path program 1 times
[2020-11-25 07:50:09,296 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:50:09,316 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:50:09,334 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #4: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
[2020-11-25 07:50:09,747 WARN  L188               SmtUtils]: Spent 102.00 ms on a formula simplification that was a NOOP. DAG size: 247
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 07:50:09,889 WARN  L188               SmtUtils]: Spent 133.00 ms on a formula simplification that was a NOOP. DAG size: 199
[2020-11-25 07:50:10,257 WARN  L188               SmtUtils]: Spent 366.00 ms on a formula simplification. DAG size of input: 254 DAG size of output: 242
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 07:50:10,467 WARN  L188               SmtUtils]: Spent 102.00 ms on a formula simplification that was a NOOP. DAG size: 304
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1759 to 3517
[2020-11-25 07:50:10,731 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
[2020-11-25 07:50:11,268 WARN  L188               SmtUtils]: Spent 277.00 ms on a formula simplification. DAG size of input: 232 DAG size of output: 222
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #4: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 07:50:12,054 WARN  L188               SmtUtils]: Spent 345.00 ms on a formula simplification. DAG size of input: 253 DAG size of output: 242
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 07:50:12,281 WARN  L188               SmtUtils]: Spent 137.00 ms on a formula simplification that was a NOOP. DAG size: 304
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 07:50:12,398 WARN  L188               SmtUtils]: Spent 113.00 ms on a formula simplification that was a NOOP. DAG size: 245
[2020-11-25 07:50:12,990 WARN  L188               SmtUtils]: Spent 590.00 ms on a formula simplification. DAG size of input: 440 DAG size of output: 427
Garbage collection #1: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #2: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #3: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #4: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #5: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #6: 5281 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5281 to 10559
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
[2020-11-25 07:50:13,480 WARN  L188               SmtUtils]: Spent 208.00 ms on a formula simplification. DAG size of input: 288 DAG size of output: 287
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 07:50:13,573 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:50:13,592 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:50:13,603 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 07:50:13 BasicIcfg
[2020-11-25 07:50:13,603 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 07:50:13,603 INFO  L168              Benchmark]: Toolchain (without parser) took 13335.50 ms. Allocated memory was 1.0 GB in the beginning and 2.0 GB in the end (delta: 1.0 GB). Free memory was 935.2 MB in the beginning and 1.5 GB in the end (delta: -587.5 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-25 07:50:13,604 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 07:50:13,604 INFO  L168              Benchmark]: Boogie Preprocessor took 114.61 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 919.1 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 07:50:13,605 INFO  L168              Benchmark]: UtopiaSpecLang took 67.50 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:50:13,605 INFO  L168              Benchmark]: Boogie Printer took 18.78 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.3 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:50:13,605 INFO  L168              Benchmark]: RCFGBuilder took 927.70 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 741.9 MB in the end (delta: 166.4 MB). Peak memory consumption was 166.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:50:13,606 INFO  L168              Benchmark]: UtopiaLTL2Aut took 61.41 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 62.9 MB). Free memory was 741.9 MB in the beginning and 1.0 GB in the end (delta: -285.4 MB). Peak memory consumption was 29.3 MB. Max. memory is 15.3 GB.
[2020-11-25 07:50:13,606 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1437.70 ms. Allocated memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: 135.8 MB). Free memory was 1.0 GB in the beginning and 732.2 MB in the end (delta: 295.1 MB). Peak memory consumption was 430.9 MB. Max. memory is 15.3 GB.
[2020-11-25 07:50:13,607 INFO  L168              Benchmark]: BlockEncodingV2 took 224.16 ms. Allocated memory was 1.2 GB in the beginning and 1.3 GB in the end (delta: 25.7 MB). Free memory was 732.2 MB in the beginning and 1.1 GB in the end (delta: -366.8 MB). Peak memory consumption was 117.1 MB. Max. memory is 15.3 GB.
[2020-11-25 07:50:13,607 INFO  L168              Benchmark]: BuchiAutomizer took 10480.48 ms. Allocated memory was 1.3 GB in the beginning and 2.0 GB in the end (delta: 781.7 MB). Free memory was 1.1 GB in the beginning and 1.5 GB in the end (delta: -423.7 MB). Peak memory consumption was 992.9 MB. Max. memory is 15.3 GB.
[2020-11-25 07:50:13,610 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5280 locations, 9642 edges
  - StatisticsResult: Encoded RCFG
    5188 locations, 9392 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 114.61 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 919.1 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 67.50 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 18.78 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.3 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 927.70 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 741.9 MB in the end (delta: 166.4 MB). Peak memory consumption was 166.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 61.41 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 62.9 MB). Free memory was 741.9 MB in the beginning and 1.0 GB in the end (delta: -285.4 MB). Peak memory consumption was 29.3 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1437.70 ms. Allocated memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: 135.8 MB). Free memory was 1.0 GB in the beginning and 732.2 MB in the end (delta: 295.1 MB). Peak memory consumption was 430.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 224.16 ms. Allocated memory was 1.2 GB in the beginning and 1.3 GB in the end (delta: 25.7 MB). Free memory was 732.2 MB in the beginning and 1.1 GB in the end (delta: -366.8 MB). Peak memory consumption was 117.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 10480.48 ms. Allocated memory was 1.3 GB in the beginning and 2.0 GB in the end (delta: 781.7 MB). Free memory was 1.1 GB in the beginning and 1.5 GB in the end (delta: -423.7 MB). Peak memory consumption was 992.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2066 locations, 2934 edges
  - StatisticsResult: BuchiProgram size
    5280 locations, 9642 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 14 locations. The remainder module has 3400 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 10.4s and 6 iterations.  TraceHistogramMax:4. Analysis of lassos took 5.1s. Construction of modules took 3.5s. BÃ¼chi inclusion checks took 1.1s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 3135 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3400 states and ocurred in iteration 5.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 19273 SDtfs, 18326 SDslu, 34437 SDs, 0 SdLazy, 46660 SolverSat, 3627 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 3.5s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1000000012) = (new UPCToken)({from : 1000000014});
[L1538]              havoc __exception;
[L1539]              revert := false;
[L1540]  COND FALSE  !(__exception)
[L1564]  CALL        call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3754]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2617]              assume msgsender_MSG != null;
[L2618]              Balance[this] := 0;
[L2632]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2633]  COND FALSE  !(revert)
[L3754]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3755]  COND FALSE  !(revert)
[L3758]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2678]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2617]              assume msgsender_MSG != null;
[L2618]              Balance[this] := 0;
[L2632]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2633]  COND FALSE  !(revert)
[L2678]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2682]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]              assume msgsender_MSG != null;
[L2655]              Balance[this] := 0;
[L2656]              _balances_ERC20[this] := zeroRefintArr();
[L2657]              sum__balances0[this] := 0;
[L2658]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2659]              sum__allowances1[this] := 0;
[L2660]              _totalSupply_ERC20[this] := 0;
[L2682]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L3758]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3762]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]              assume msgsender_MSG != null;
[L3147]              Balance[this] := 0;
[L3148]              owner_Ownable[this] := null;
[L3162]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3163]  COND FALSE  !(revert)
[L3762]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3763]  COND FALSE  !(revert)
[L3766]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3299]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]              assume msgsender_MSG != null;
[L3147]              Balance[this] := 0;
[L3148]              owner_Ownable[this] := null;
[L3162]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3163]  COND FALSE  !(revert)
[L3299]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3300]  COND FALSE  !(revert)
[L3303]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3278]              assume msgsender_MSG != null;
[L3279]              Balance[this] := 0;
[L3280]              _paused_Pausable[this] := false;
[L3282]              _paused_Pausable[this] := false;
[L3303]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  COND FALSE  !(revert)
[L3766]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3767]  COND FALSE  !(revert)
[L3770]  CALL        call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3417]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2617]              assume msgsender_MSG != null;
[L2618]              Balance[this] := 0;
[L2632]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2633]  COND FALSE  !(revert)
[L3417]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3418]  COND FALSE  !(revert)
[L3421]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2678]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2632]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2617]              assume msgsender_MSG != null;
[L2618]              Balance[this] := 0;
[L2632]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2633]  COND FALSE  !(revert)
[L2678]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2682]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]              assume msgsender_MSG != null;
[L2655]              Balance[this] := 0;
[L2656]              _balances_ERC20[this] := zeroRefintArr();
[L2657]              sum__balances0[this] := 0;
[L2658]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2659]              sum__allowances1[this] := 0;
[L2660]              _totalSupply_ERC20[this] := 0;
[L2682]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L3421]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3422]  COND FALSE  !(revert)
[L3425]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]              assume msgsender_MSG != null;
[L3147]              Balance[this] := 0;
[L3148]              owner_Ownable[this] := null;
[L3162]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3163]  COND FALSE  !(revert)
[L3425]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3426]  COND FALSE  !(revert)
[L3429]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3299]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3162]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3146]              assume msgsender_MSG != null;
[L3147]              Balance[this] := 0;
[L3148]              owner_Ownable[this] := null;
[L3162]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3163]  COND FALSE  !(revert)
[L3299]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3300]  COND FALSE  !(revert)
[L3303]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3278]              assume msgsender_MSG != null;
[L3279]              Balance[this] := 0;
[L3280]              _paused_Pausable[this] := false;
[L3282]              _paused_Pausable[this] := false;
[L3303]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  COND FALSE  !(revert)
[L3429]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3430]  COND FALSE  !(revert)
[L3433]  CALL        call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3386]              assume msgsender_MSG != null;
[L3387]              Balance[this] := 0;
[L3433]  RET         call ERC20Pausable_ERC20Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3434]  COND FALSE  !(revert)
[L3770]  RET         call ERC20Pausable_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3771]  COND FALSE  !(revert)
[L3774]  CALL        call UPCToken_UPCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]              assume msgsender_MSG != null;
[L3710]              Balance[this] := 0;
[L3711]              name_UPCToken[this] := 995162267;
[L3712]              symbol_UPCToken[this] := 189219111;
[L3713]              decimals_UPCToken[this] := 18;
[L3714]              INIT_TOTALSUPPLY_UPCToken[this] := 1000000000;
[L3716]              owner_Ownable[this] := msgsender_MSG;
[L3717]              _totalSupply_ERC20[this] := INIT_TOTALSUPPLY_UPCToken[this];
[L3718]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][owner_Ownable[this]];
[L3719]              _balances_ERC20[this][owner_Ownable[this]] := _totalSupply_ERC20[this];
[L3720]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][owner_Ownable[this]];
[L3721]              assert { :EventEmitted "Transfer_UPCToken" } true;
[L3774]  RET         call UPCToken_UPCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3775]  COND FALSE  !(revert)
[L1564]  RET         call UPCToken_UPCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1565]              assume !revert && gas >= 0;
[L5745]  RET         call UPCToken_UPCToken(this, msgsender_MSG, msgvalue_MSG);
ERC20Pausable(1000000012).transfer~address~uint256.gas(3979002)({from : 1000000014, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s648) && msgsender_MSG != to_s648) && value_s648 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s648] + value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1222]              havoc __exception;
[L1223]              revert := false;
[L1224]  COND TRUE   __exception
[L1225]              __tmp__Balance := Balance;
[L1226]              __tmp__DType := DType;
[L1227]              __tmp__Alloc := Alloc;
[L1228]              __tmp__balance_ADDR := balance_ADDR;
[L1229]              __tmp__M_Ref_int := M_Ref_int;
[L1230]              __tmp__sum__balances0 := sum__balances0;
[L1231]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1232]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1233]              __tmp__sum__allowances1 := sum__allowances1;
[L1234]              __tmp__Length := Length;
[L1235]              __tmp__now := now;
[L1236]              __tmp___balances_ERC20 := _balances_ERC20;
[L1237]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1238]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1239]              __tmp__owner_Ownable := owner_Ownable;
[L1240]              __tmp___paused_Pausable := _paused_Pausable;
[L1241]              __tmp__name_UPCToken := name_UPCToken;
[L1242]              __tmp__symbol_UPCToken := symbol_UPCToken;
[L1243]              __tmp__decimals_UPCToken := decimals_UPCToken;
[L1244]              __tmp__INIT_TOTALSUPPLY_UPCToken := INIT_TOTALSUPPLY_UPCToken;
[L1245]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3443]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(!!__tmp___paused_Pausable[this])
[L3443]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3444]  COND FALSE  !(revert)
[L3447]  COND TRUE   __tmp__DType[this] == UPCToken
[L3448]  CALL        call __var_11 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2714]  COND TRUE   __tmp__DType[this] == UPCToken
[L2715]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L3036]              __var_4 := null;
[L3037]  COND FALSE  !(!(sender_s444 != null))
[L3041]              __var_5 := null;
[L3042]  COND TRUE   !(recipient_s444 != null)
[L3043]              revert := true;
[L2715]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L2716]  COND TRUE   revert
[L3448]  RET         call __var_11 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3449]  COND TRUE   revert
[L1245]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1246]              assume revert || gas < 0;
[L5647]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);

Loop:
ERC20Pausable(1000000012).transfer~address~uint256.gas(3979001)({from : 1000000007, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s648) && msgsender_MSG != to_s648) && value_s648 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s648] + value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s648 >= 0) && value_s648 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s648] >= 0) && _balances_ERC20[this][to_s648] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC20Pausable0 := true;
[L3]                 call_transfer_ERC20Pausable0 := false;
[L3]                 revert := revert_hold;
[L1222]              havoc __exception;
[L1223]              revert := false;
[L1224]  COND TRUE   __exception
[L1225]              __tmp__Balance := Balance;
[L1226]              __tmp__DType := DType;
[L1227]              __tmp__Alloc := Alloc;
[L1228]              __tmp__balance_ADDR := balance_ADDR;
[L1229]              __tmp__M_Ref_int := M_Ref_int;
[L1230]              __tmp__sum__balances0 := sum__balances0;
[L1231]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1232]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1233]              __tmp__sum__allowances1 := sum__allowances1;
[L1234]              __tmp__Length := Length;
[L1235]              __tmp__now := now;
[L1236]              __tmp___balances_ERC20 := _balances_ERC20;
[L1237]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1238]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1239]              __tmp__owner_Ownable := owner_Ownable;
[L1240]              __tmp___paused_Pausable := _paused_Pausable;
[L1241]              __tmp__name_UPCToken := name_UPCToken;
[L1242]              __tmp__symbol_UPCToken := symbol_UPCToken;
[L1243]              __tmp__decimals_UPCToken := decimals_UPCToken;
[L1244]              __tmp__INIT_TOTALSUPPLY_UPCToken := INIT_TOTALSUPPLY_UPCToken;
[L1245]  CALL        call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3443]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(!!__tmp___paused_Pausable[this])
[L3443]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3444]  COND FALSE  !(revert)
[L3447]  COND TRUE   __tmp__DType[this] == UPCToken
[L3448]  CALL        call __var_11 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L2714]  COND TRUE   __tmp__DType[this] == UPCToken
[L2715]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L3036]              __var_4 := null;
[L3037]  COND FALSE  !(!(sender_s444 != null))
[L3041]              __var_5 := null;
[L3042]  COND TRUE   !(recipient_s444 != null)
[L3043]              revert := true;
[L2715]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s261, amount_s261);
[L2716]  COND TRUE   revert
[L3448]  RET         call __var_11 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L3449]  COND TRUE   revert
[L1245]  RET         call __ret_0_ := transfer~address~uint256_ERC20Pausable__fail(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);
[L1246]              assume revert || gas < 0;
[L5647]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20Pausable(this, msgsender_MSG, msgvalue_MSG, to_s648, value_s648);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
