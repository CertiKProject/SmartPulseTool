This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 17:37:31,389 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 17:37:31,390 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 17:37:31,400 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 17:37:31,400 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 17:37:31,401 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 17:37:31,402 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 17:37:31,403 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 17:37:31,404 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 17:37:31,405 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 17:37:31,406 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 17:37:31,406 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 17:37:31,406 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 17:37:31,407 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 17:37:31,408 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 17:37:31,409 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 17:37:31,409 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 17:37:31,410 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 17:37:31,411 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 17:37:31,413 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 17:37:31,414 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 17:37:31,414 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 17:37:31,416 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 17:37:31,416 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 17:37:31,416 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 17:37:31,417 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 17:37:31,417 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 17:37:31,417 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 17:37:31,418 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 17:37:31,418 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 17:37:31,418 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 17:37:31,419 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 17:37:31,419 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 17:37:31,420 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 17:37:31,420 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 17:37:31,420 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 17:37:31,421 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 17:37:31,421 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 17:37:31,421 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 17:37:31,422 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 17:37:31,422 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 17:37:31,422 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 17:37:31,430 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 17:37:31,430 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 17:37:31,430 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 17:37:31,431 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 17:37:31,431 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 17:37:31,431 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 17:37:31,431 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 17:37:31,431 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 17:37:31,431 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 17:37:31,431 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 17:37:31,431 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 17:37:31,432 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 17:37:31,432 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 17:37:31,432 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 17:37:31,432 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 17:37:31,432 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 17:37:31,432 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 17:37:31,432 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 17:37:31,432 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 17:37:31,432 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 17:37:31,432 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 17:37:31,433 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 17:37:31,433 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 17:37:31,433 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 17:37:31,433 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 17:37:31,433 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 17:37:31,455 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 17:37:31,468 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 17:37:31,471 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 17:37:31,472 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 17:37:31,472 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 17:37:31,473 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl
[2020-11-25 17:37:31,473 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl'
[2020-11-25 17:37:31,540 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 17:37:31,542 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 17:37:31,542 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 17:37:31,542 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 17:37:31,542 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 17:37:31,559 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:37:31" (1/1) ...
[2020-11-25 17:37:31,560 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:37:31" (1/1) ...
[2020-11-25 17:37:31,591 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:37:31" (1/1) ...
[2020-11-25 17:37:31,592 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:37:31" (1/1) ...
[2020-11-25 17:37:31,607 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:37:31" (1/1) ...
[2020-11-25 17:37:31,614 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:37:31" (1/1) ...
[2020-11-25 17:37:31,619 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:37:31" (1/1) ...
[2020-11-25 17:37:31,626 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 17:37:31,627 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 17:37:31,627 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 17:37:31,629 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 17:37:31,632 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:37:31" (1/1) ...
[2020-11-25 17:37:31,646 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(HALE.transfer(to, value), msg.sender != to && (value > _balances_HALE[this][msg.sender] || _balances_HALE[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HALE[this][to] >= 0 && _balances_HALE[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HALE[this][msg.sender] >= 0 &&  _balances_HALE[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(HALE.transfer)))
[2020-11-25 17:37:31,651 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(HALE.transfer(to, value), msg.sender != to && (value > _balances_HALE[this][msg.sender] || _balances_HALE[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HALE[this][to] >= 0 && _balances_HALE[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HALE[this][msg.sender] >= 0 &&  _balances_HALE[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(HALE.transfer)))
[2020-11-25 17:37:31,658 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(HALE.transfer(to, value), msg.sender != to && (value > _balances_HALE[this][msg.sender] || _balances_HALE[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HALE[this][to] >= 0 && _balances_HALE[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HALE[this][msg.sender] >= 0 &&  _balances_HALE[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(HALE.transfer)))
[2020-11-25 17:37:31,665 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender!=to_s331 && ( value_s331>_balances_HALE[this][msg.sender] || ( _balances_HALE[this][to_s331] + value_s331 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && value_s331>=0 ) && value_s331<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_HALE[this][to_s331]>=0 ) && _balances_HALE[this][to_s331]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_HALE[this][msg.sender]>=0 ) && _balances_HALE[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_HALE>],IdentifierExpression[to_s331,<IMPLEMENTATION_INPARAM,transfer~address~uint256_HALE>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[value_s331,<IMPLEMENTATION_INPARAM,transfer~address~uint256_HALE>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_HALE,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_HALE>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_HALE>]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_HALE,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_HALE>]]],[IdentifierExpression[to_s331,<IMPLEMENTATION_INPARAM,transfer~address~uint256_HALE>]]],IdentifierExpression[value_s331,<IMPLEMENTATION_INPARAM,transfer~address~uint256_HALE>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s331,<IMPLEMENTATION_INPARAM,transfer~address~uint256_HALE>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s331,<IMPLEMENTATION_INPARAM,transfer~address~uint256_HALE>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_HALE,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_HALE>]]],[IdentifierExpression[to_s331,<IMPLEMENTATION_INPARAM,transfer~address~uint256_HALE>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_HALE,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_HALE>]]],[IdentifierExpression[to_s331,<IMPLEMENTATION_INPARAM,transfer~address~uint256_HALE>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_HALE,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_HALE>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_HALE>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_HALE,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_HALE>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_HALE>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 17:37:31,668 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(HALE.transfer(to, value), msg.sender != to && (value > _balances_HALE[this][msg.sender] || _balances_HALE[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HALE[this][to] >= 0 && _balances_HALE[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HALE[this][msg.sender] >= 0 &&  _balances_HALE[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(HALE.transfer)))
[2020-11-25 17:37:31,669 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_HALE0) ==> ( <>AP(fail_transfer_HALE0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 17:37:31,674 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:37:31 PropertyContainer
[2020-11-25 17:37:31,674 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 17:37:31,674 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 17:37:31,675 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 17:37:31,675 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 17:37:31,675 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:37:31" (1/2) ...
[2020-11-25 17:37:31,676 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 17:37:31,676 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 17:37:31,685 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:37:31" (2/2) ...
[2020-11-25 17:37:31,685 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 17:37:31,685 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 17:37:31,685 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 17:37:31,685 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 17:37:31,686 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:37:31" (1/2) ...
[2020-11-25 17:37:31,736 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 17:37:31,736 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 17:37:31,736 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 17:37:31,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 17:37:31,736 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 17:37:31,736 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 17:37:31,736 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 17:37:31,737 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 17:37:31,737 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 17:37:31,737 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 17:37:31,737 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 17:37:31,737 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 17:37:31,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 17:37:31,737 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 17:37:31,737 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 17:37:31,737 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 17:37:31,737 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 17:37:31,738 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 17:37:31,738 INFO  L130     BoogieDeclarations]: Found specification of procedure HALE_HALE_NoBaseCtor__success
[2020-11-25 17:37:31,738 INFO  L130     BoogieDeclarations]: Found specification of procedure HALE_HALE
[2020-11-25 17:37:31,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure HALE_HALE
[2020-11-25 17:37:31,738 INFO  L130     BoogieDeclarations]: Found specification of procedure name_HALE
[2020-11-25 17:37:31,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_HALE
[2020-11-25 17:37:31,738 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_HALE
[2020-11-25 17:37:31,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_HALE
[2020-11-25 17:37:31,738 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_HALE
[2020-11-25 17:37:31,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_HALE
[2020-11-25 17:37:31,739 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_HALE
[2020-11-25 17:37:31,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_HALE
[2020-11-25 17:37:31,739 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_HALE
[2020-11-25 17:37:31,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_HALE
[2020-11-25 17:37:31,739 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_HALE
[2020-11-25 17:37:31,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_HALE
[2020-11-25 17:37:31,739 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_HALE
[2020-11-25 17:37:31,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_HALE
[2020-11-25 17:37:31,739 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_HALE
[2020-11-25 17:37:31,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_HALE
[2020-11-25 17:37:31,739 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_HALE
[2020-11-25 17:37:31,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_HALE
[2020-11-25 17:37:31,739 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_HALE
[2020-11-25 17:37:31,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_HALE
[2020-11-25 17:37:31,740 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_HALE
[2020-11-25 17:37:31,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_HALE
[2020-11-25 17:37:31,740 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_HALE
[2020-11-25 17:37:31,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_HALE
[2020-11-25 17:37:31,740 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_HALE
[2020-11-25 17:37:31,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_HALE
[2020-11-25 17:37:31,740 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_HALE__success
[2020-11-25 17:37:31,740 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_HALE__success
[2020-11-25 17:37:31,740 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_HALE__success
[2020-11-25 17:37:31,740 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_HALE__success
[2020-11-25 17:37:31,740 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 17:37:31,740 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 17:37:31,741 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 17:37:31,741 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 17:37:31,741 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 17:37:31,741 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 17:37:31,741 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 17:37:31,741 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_HALE
[2020-11-25 17:37:31,741 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 17:37:31,741 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 17:37:31,741 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 17:37:31,741 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 17:37:31,741 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 17:37:31,741 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 17:37:31,741 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 17:37:31,741 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 17:37:31,742 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 17:37:31,742 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 17:37:31,742 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 17:37:31,742 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 17:37:31,742 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 17:37:31,742 INFO  L130     BoogieDeclarations]: Found specification of procedure HALE_HALE_NoBaseCtor__fail
[2020-11-25 17:37:31,742 INFO  L130     BoogieDeclarations]: Found specification of procedure HALE_HALE__success
[2020-11-25 17:37:31,742 INFO  L130     BoogieDeclarations]: Found specification of procedure HALE_HALE__fail
[2020-11-25 17:37:31,742 INFO  L130     BoogieDeclarations]: Found specification of procedure name_HALE__success
[2020-11-25 17:37:31,742 INFO  L130     BoogieDeclarations]: Found specification of procedure name_HALE__fail
[2020-11-25 17:37:31,742 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_HALE__success
[2020-11-25 17:37:31,742 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_HALE__fail
[2020-11-25 17:37:31,742 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_HALE__success
[2020-11-25 17:37:31,743 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_HALE__fail
[2020-11-25 17:37:31,743 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_HALE__success
[2020-11-25 17:37:31,743 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_HALE__fail
[2020-11-25 17:37:31,743 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_HALE__success
[2020-11-25 17:37:31,743 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_HALE__fail
[2020-11-25 17:37:31,743 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_HALE__success
[2020-11-25 17:37:31,743 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_HALE__fail
[2020-11-25 17:37:31,743 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_HALE__success
[2020-11-25 17:37:31,743 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_HALE__fail
[2020-11-25 17:37:31,743 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_HALE__success
[2020-11-25 17:37:31,743 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_HALE__fail
[2020-11-25 17:37:31,743 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_HALE__success
[2020-11-25 17:37:31,744 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_HALE__fail
[2020-11-25 17:37:31,744 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_HALE__success
[2020-11-25 17:37:31,744 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_HALE__fail
[2020-11-25 17:37:31,744 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_HALE__success
[2020-11-25 17:37:31,744 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_HALE__fail
[2020-11-25 17:37:31,744 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_HALE__success
[2020-11-25 17:37:31,744 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_HALE__fail
[2020-11-25 17:37:31,744 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_HALE__success
[2020-11-25 17:37:31,744 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_HALE__fail
[2020-11-25 17:37:31,744 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_HALE__fail
[2020-11-25 17:37:31,744 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_HALE__fail
[2020-11-25 17:37:31,744 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_HALE__fail
[2020-11-25 17:37:31,744 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_HALE__fail
[2020-11-25 17:37:31,745 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 17:37:31,745 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 17:37:31,745 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 17:37:31,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 17:37:31,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 17:37:31,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 17:37:31,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 17:37:31,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 17:37:31,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 17:37:31,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 17:37:31,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 17:37:31,745 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 17:37:31,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 17:37:31,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 17:37:31,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 17:37:31,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 17:37:31,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 17:37:31,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 17:37:31,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 17:37:31,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 17:37:31,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 17:37:31,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 17:37:31,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 17:37:31,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure HALE_HALE_NoBaseCtor__fail
[2020-11-25 17:37:31,746 INFO  L138     BoogieDeclarations]: Found implementation of procedure HALE_HALE_NoBaseCtor__success
[2020-11-25 17:37:31,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure HALE_HALE__fail
[2020-11-25 17:37:31,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure HALE_HALE__success
[2020-11-25 17:37:31,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_HALE__fail
[2020-11-25 17:37:31,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_HALE__success
[2020-11-25 17:37:31,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_HALE__fail
[2020-11-25 17:37:31,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_HALE__success
[2020-11-25 17:37:31,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_HALE__fail
[2020-11-25 17:37:31,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_HALE__success
[2020-11-25 17:37:31,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_HALE__fail
[2020-11-25 17:37:31,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_HALE__success
[2020-11-25 17:37:31,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_HALE__fail
[2020-11-25 17:37:31,747 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_HALE__success
[2020-11-25 17:37:31,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_HALE__fail
[2020-11-25 17:37:31,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_HALE__success
[2020-11-25 17:37:31,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_HALE__fail
[2020-11-25 17:37:31,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_HALE__success
[2020-11-25 17:37:31,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_HALE__fail
[2020-11-25 17:37:31,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_HALE__success
[2020-11-25 17:37:31,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_HALE__fail
[2020-11-25 17:37:31,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_HALE__success
[2020-11-25 17:37:31,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_HALE__fail
[2020-11-25 17:37:31,748 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_HALE__success
[2020-11-25 17:37:31,749 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_HALE__fail
[2020-11-25 17:37:31,749 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_HALE__success
[2020-11-25 17:37:31,749 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_HALE__fail
[2020-11-25 17:37:31,749 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_HALE__success
[2020-11-25 17:37:31,749 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_HALE__fail
[2020-11-25 17:37:31,749 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_HALE__success
[2020-11-25 17:37:31,749 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_HALE__fail
[2020-11-25 17:37:31,749 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_HALE__success
[2020-11-25 17:37:31,749 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_HALE__fail
[2020-11-25 17:37:31,749 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_HALE__success
[2020-11-25 17:37:31,749 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_HALE__fail
[2020-11-25 17:37:31,749 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_HALE__success
[2020-11-25 17:37:31,749 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_HALE__fail
[2020-11-25 17:37:31,749 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_HALE__success
[2020-11-25 17:37:31,750 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 17:37:31,750 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 17:37:31,750 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 17:37:31,750 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 17:37:31,750 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 17:37:31,750 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 17:37:31,750 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 17:37:31,750 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 17:37:31,750 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 17:37:31,750 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 17:37:31,750 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_HALE
[2020-11-25 17:37:31,750 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 17:37:31,750 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 17:37:31,750 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 17:37:32,164 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 17:37:32,165 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 17:37:32,201 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 17:37:32,201 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 17:37:32,203 INFO  L202        PluginConnector]: Adding new model HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:37:32 BoogieIcfgContainer
[2020-11-25 17:37:32,203 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:37:31" (2/2) ...
[2020-11-25 17:37:32,203 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 17:37:32,203 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@59a309a6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:37:32, skipping insertion in model container
[2020-11-25 17:37:32,203 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 17:37:32,203 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 17:37:32,203 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 17:37:32,204 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 17:37:32,205 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:37:31" (1/3) ...
[2020-11-25 17:37:32,205 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1e99de80 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:37:32, skipping insertion in model container
[2020-11-25 17:37:32,205 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:37:31" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 17:37:32,238 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:37:32 NWAContainer
[2020-11-25 17:37:32,238 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 17:37:32,239 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 17:37:32,239 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 17:37:32,239 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 17:37:32,240 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:37:32" (3/4) ...
[2020-11-25 17:37:32,240 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4f02a4f0 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:37:32, skipping insertion in model container
[2020-11-25 17:37:32,240 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:37:32" (4/4) ...
[2020-11-25 17:37:32,243 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 17:37:32,245 INFO  L110   BuchiProductObserver]: Initial RCFG 966 locations, 1238 edges
[2020-11-25 17:37:32,246 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 17:37:32,253 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 17:37:33,137 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 17:37:33,141 INFO  L110   BuchiProductObserver]: BuchiProgram size 2364 locations, 4022 edges
[2020-11-25 17:37:33,141 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:37:33 BoogieIcfgContainer
[2020-11-25 17:37:33,141 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 17:37:33,141 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 17:37:33,141 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 17:37:33,143 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 17:37:33,143 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:37:33" (1/1) ...
[2020-11-25 17:37:33,194 INFO  L313           BlockEncoder]: Initial Icfg 2364 locations, 4022 edges
[2020-11-25 17:37:33,194 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 17:37:33,195 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 17:37:33,195 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 17:37:33,195 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 17:37:33,203 INFO  L70    emoveInfeasibleEdges]: Removed 36 edges and 10 locations because of local infeasibility
[2020-11-25 17:37:33,207 INFO  L70        RemoveSinkStates]: Removed 80 edges and 40 locations by removing sink states
[2020-11-25 17:37:33,214 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 17:37:33,216 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 17:37:33,218 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 17:37:33,219 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 17:37:33,221 INFO  L313           BlockEncoder]: Encoded RCFG 2302 locations, 3889 edges
[2020-11-25 17:37:33,221 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:37:33 BasicIcfg
[2020-11-25 17:37:33,222 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 17:37:33,222 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 17:37:33,222 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 17:37:33,224 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 17:37:33,224 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:37:33,224 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:37:31" (1/6) ...
[2020-11-25 17:37:33,226 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@65646694 and model type HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:37:33, skipping insertion in model container
[2020-11-25 17:37:33,226 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:37:33,226 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:37:31" (2/6) ...
[2020-11-25 17:37:33,226 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@65646694 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:37:33, skipping insertion in model container
[2020-11-25 17:37:33,227 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:37:33,227 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:37:32" (3/6) ...
[2020-11-25 17:37:33,227 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@65646694 and model type HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:37:33, skipping insertion in model container
[2020-11-25 17:37:33,227 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:37:33,227 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:37:32" (4/6) ...
[2020-11-25 17:37:33,227 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@65646694 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:37:33, skipping insertion in model container
[2020-11-25 17:37:33,227 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:37:33,227 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:37:33" (5/6) ...
[2020-11-25 17:37:33,228 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@65646694 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:37:33, skipping insertion in model container
[2020-11-25 17:37:33,228 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:37:33,228 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:37:33" (6/6) ...
[2020-11-25 17:37:33,229 INFO  L404   chiAutomizerObserver]: Analyzing ICFG HALE_0x43f263e363c0c2e39033fcbd9982b78a42d43031_transfer-fail.bpl_BEv2
[2020-11-25 17:37:33,263 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 17:37:33,264 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 17:37:33,264 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 17:37:33,264 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 17:37:33,264 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 17:37:33,264 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 17:37:33,264 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 17:37:33,264 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 17:37:33,264 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 17:37:33,285 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2302 states.
[2020-11-25 17:37:33,324 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:37:33,325 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:37:33,325 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:37:33,334 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:37:33,334 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:37:33,334 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 17:37:33,335 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2302 states.
[2020-11-25 17:37:33,348 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:37:33,348 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:37:33,348 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:37:33,350 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:37:33,350 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_HALE0 := false;
[L2]                 call_transfer_HALE0 := false;
[L2]     CALL        call main();
[L2715]              assume null == 0;
[L2716]  CALL        call this := FreshRefGenerator__success();
[L1265]              havoc newRef;
[L1266]              assume Alloc[newRef] == false;
[L1267]              Alloc[newRef] := true;
[L1268]              assume newRef != null;
[L2716]  RET         call this := FreshRefGenerator__success();
[L2717]              assume now >= 0;
[L2718]              assume DType[this] == HALE;
[L2719]              assume msgvalue_MSG == 0;
[L2720]              gas := gas - 53000;
[L2721]  CALL        call HALE_HALE(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L208]               havoc __exception;
[L209]               revert := false;
[L210]   COND FALSE  !(__exception)
[L231]   CALL        call HALE_HALE__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1519]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1297]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1282]              assume msgsender_MSG != null;
[L1283]              Balance[this] := 0;
[L1297]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1298]  COND FALSE  !(revert)
[L1519]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1520]  COND TRUE   revert
[L231]   RET         call HALE_HALE__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L232]               assume !revert && gas >= 0;
[L2721]  RET         call HALE_HALE(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L2722]              assume !revert && gas >= 0;

Loop:
[L2725]  CALL        call CorralChoice_HALE(this);
[L2572]              havoc msgsender_MSG;
[L2573]              havoc msgvalue_MSG;
[L2574]              havoc choice;
[L2575]              havoc to_s331;
[L2576]              havoc value_s331;
[L2577]              havoc __ret_0_transfer;
[L2578]              havoc spender_s391;
[L2579]              havoc value_s391;
[L2580]              havoc __ret_0_approve;
[L2581]              havoc from_s426;
[L2582]              havoc to_s426;
[L2583]              havoc value_s426;
[L2584]              havoc __ret_0_transferFrom;
[L2585]              havoc __ret_0_totalSupply;
[L2586]              havoc owner_s296;
[L2587]              havoc __ret_0_balanceOf;
[L2588]              havoc owner_s312;
[L2589]              havoc spender_s312;
[L2590]              havoc __ret_0_allowance;
[L2591]              havoc initialSupply_s252;
[L2592]              havoc tokenName_s252;
[L2593]              havoc decimalUnits_s252;
[L2594]              havoc tokenSymbol_s252;
[L2595]              havoc __ret_0_name;
[L2596]              havoc __ret_0_symbol;
[L2597]              havoc __ret_0_decimals;
[L2598]              havoc value_s343;
[L2599]              havoc from_s356;
[L2600]              havoc value_s356;
[L2601]              havoc spender_s453;
[L2602]              havoc addedValue_s453;
[L2603]              havoc __ret_0_increaseAllowance;
[L2604]              havoc spender_s480;
[L2605]              havoc subtractedValue_s480;
[L2606]              havoc __ret_0_decreaseAllowance;
[L2607]              havoc tmpNow;
[L2608]              havoc gas;
[L2609]              assume gas > 4000000 && gas <= 8000000;
[L2610]              tmpNow := now;
[L2611]              havoc now;
[L2612]              assume now > tmpNow;
[L2613]              assume msgsender_MSG != null;
[L2614]              assume DType[msgsender_MSG] != IERC20;
[L2615]              assume DType[msgsender_MSG] != SafeMath;
[L2616]              assume DType[msgsender_MSG] != HALE;
[L2617]              Alloc[msgsender_MSG] := true;
[L2618]  COND TRUE   choice == 13
[L2619]              gas := gas - 21000;
[L2620]  COND FALSE  !(gas >= 0)
[L2725]  RET         call CorralChoice_HALE(this);

[2020-11-25 17:37:33,366 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:37:33,367 INFO  L82        PathProgramCache]: Analyzing trace with hash 1592204573, now seen corresponding path program 1 times
[2020-11-25 17:37:33,372 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:37:33,395 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:37:33,441 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 17:37:33,443 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:37:33,443 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 17:37:33,447 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:37:33,569 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 17:37:33,569 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 17:37:33,571 INFO  L87              Difference]: Start difference. First operand 2302 states. Second operand 4 states.
[2020-11-25 17:37:33,822 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:37:33,822 INFO  L93              Difference]: Finished difference Result 1776 states and 2000 transitions.
[2020-11-25 17:37:33,822 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 17:37:33,823 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1776 states and 2000 transitions.
[2020-11-25 17:37:33,831 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:37:33,845 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1776 states to 1776 states and 2000 transitions.
[2020-11-25 17:37:33,845 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 17:37:33,847 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 493
[2020-11-25 17:37:33,847 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1776 states and 2000 transitions.
[2020-11-25 17:37:33,853 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:37:33,853 INFO  L728         BuchiCegarLoop]: Abstraction has 1776 states and 2000 transitions.
[2020-11-25 17:37:33,866 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1776 states and 2000 transitions.
[2020-11-25 17:37:33,900 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1776 to 1776.
[2020-11-25 17:37:33,900 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1776 states.
[2020-11-25 17:37:33,903 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1776 states to 1776 states and 2000 transitions.
[2020-11-25 17:37:33,904 INFO  L751         BuchiCegarLoop]: Abstraction has 1776 states and 2000 transitions.
[2020-11-25 17:37:33,904 INFO  L631         BuchiCegarLoop]: Abstraction has 1776 states and 2000 transitions.
[2020-11-25 17:37:33,904 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 17:37:33,905 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1776 states and 2000 transitions.
[2020-11-25 17:37:33,910 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:37:33,910 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:37:33,910 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:37:33,911 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:37:33,911 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_HALE0 := false;
[L2]                 call_transfer_HALE0 := false;
[L2]     CALL        call main();
[L2715]              assume null == 0;
[L2716]  CALL        call this := FreshRefGenerator__success();
[L1265]              havoc newRef;
[L1266]              assume Alloc[newRef] == false;
[L1267]              Alloc[newRef] := true;
[L1268]              assume newRef != null;
[L2716]  RET         call this := FreshRefGenerator__success();
[L2717]              assume now >= 0;
[L2718]              assume DType[this] == HALE;
[L2719]              assume msgvalue_MSG == 0;
[L2720]              gas := gas - 53000;
[L2721]  CALL        call HALE_HALE(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L208]               havoc __exception;
[L209]               revert := false;
[L210]   COND FALSE  !(__exception)
[L231]   CALL        call HALE_HALE__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1519]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1297]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1282]              assume msgsender_MSG != null;
[L1283]              Balance[this] := 0;
[L1297]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1298]  COND FALSE  !(revert)
[L1519]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1520]  COND TRUE   revert
[L231]   RET         call HALE_HALE__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L232]               assume !revert && gas >= 0;
[L2721]  RET         call HALE_HALE(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L2722]              assume !revert && gas >= 0;
[L2725]  CALL        call CorralChoice_HALE(this);
[L2572]              havoc msgsender_MSG;
[L2573]              havoc msgvalue_MSG;
[L2574]              havoc choice;
[L2575]              havoc to_s331;
[L2576]              havoc value_s331;
[L2577]              havoc __ret_0_transfer;
[L2578]              havoc spender_s391;
[L2579]              havoc value_s391;
[L2580]              havoc __ret_0_approve;
[L2581]              havoc from_s426;
[L2582]              havoc to_s426;
[L2583]              havoc value_s426;
[L2584]              havoc __ret_0_transferFrom;
[L2585]              havoc __ret_0_totalSupply;
[L2586]              havoc owner_s296;
[L2587]              havoc __ret_0_balanceOf;
[L2588]              havoc owner_s312;
[L2589]              havoc spender_s312;
[L2590]              havoc __ret_0_allowance;
[L2591]              havoc initialSupply_s252;
[L2592]              havoc tokenName_s252;
[L2593]              havoc decimalUnits_s252;
[L2594]              havoc tokenSymbol_s252;
[L2595]              havoc __ret_0_name;
[L2596]              havoc __ret_0_symbol;
[L2597]              havoc __ret_0_decimals;
[L2598]              havoc value_s343;
[L2599]              havoc from_s356;
[L2600]              havoc value_s356;
[L2601]              havoc spender_s453;
[L2602]              havoc addedValue_s453;
[L2603]              havoc __ret_0_increaseAllowance;
[L2604]              havoc spender_s480;
[L2605]              havoc subtractedValue_s480;
[L2606]              havoc __ret_0_decreaseAllowance;
[L2607]              havoc tmpNow;
[L2608]              havoc gas;
[L2609]              assume gas > 4000000 && gas <= 8000000;
[L2610]              tmpNow := now;
[L2611]              havoc now;
[L2612]              assume now > tmpNow;
[L2613]              assume msgsender_MSG != null;
[L2614]              assume DType[msgsender_MSG] != IERC20;
[L2615]              assume DType[msgsender_MSG] != SafeMath;
[L2616]              assume DType[msgsender_MSG] != HALE;
[L2617]              Alloc[msgsender_MSG] := true;
[L2618]  COND TRUE   choice == 13
[L2619]              gas := gas - 21000;
[L2620]  COND TRUE   gas >= 0
[L2621]              assume value_s331 >= 0 && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2622]              assume msgvalue_MSG == 0;
[L2623]  CALL        call __ret_0_transfer := transfer~address~uint256_HALE(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s331 && (value_s331 > _balances_HALE[this][msgsender_MSG] || _balances_HALE[this][to_s331] + value_s331 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s331 >= 0) && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HALE[this][to_s331] >= 0) && _balances_HALE[this][to_s331] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HALE[this][msgsender_MSG] >= 0) && _balances_HALE[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_HALE0 := true;
[L2]                 call_transfer_HALE0 := false;
[L2]                 revert := revert_hold;
[L560]               havoc __exception;
[L561]               revert := false;
[L562]   COND FALSE  !(__exception)
[L583]   CALL        call __ret_0_ := transfer~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L1613]  CALL        call _transfer~address~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L1810]              __var_4 := null;
[L1811]  COND TRUE   !(to_s526 != null)
[L1812]              revert := true;
[L1613]  RET         call _transfer~address~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L1614]  COND TRUE   revert
[L583]   RET         call __ret_0_ := transfer~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L584]               assume !revert && gas >= 0;
[L2623]  RET         call __ret_0_transfer := transfer~address~uint256_HALE(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2725]  RET         call CorralChoice_HALE(this);

Loop:
[L2725]  CALL        call CorralChoice_HALE(this);
[L2572]              havoc msgsender_MSG;
[L2573]              havoc msgvalue_MSG;
[L2574]              havoc choice;
[L2575]              havoc to_s331;
[L2576]              havoc value_s331;
[L2577]              havoc __ret_0_transfer;
[L2578]              havoc spender_s391;
[L2579]              havoc value_s391;
[L2580]              havoc __ret_0_approve;
[L2581]              havoc from_s426;
[L2582]              havoc to_s426;
[L2583]              havoc value_s426;
[L2584]              havoc __ret_0_transferFrom;
[L2585]              havoc __ret_0_totalSupply;
[L2586]              havoc owner_s296;
[L2587]              havoc __ret_0_balanceOf;
[L2588]              havoc owner_s312;
[L2589]              havoc spender_s312;
[L2590]              havoc __ret_0_allowance;
[L2591]              havoc initialSupply_s252;
[L2592]              havoc tokenName_s252;
[L2593]              havoc decimalUnits_s252;
[L2594]              havoc tokenSymbol_s252;
[L2595]              havoc __ret_0_name;
[L2596]              havoc __ret_0_symbol;
[L2597]              havoc __ret_0_decimals;
[L2598]              havoc value_s343;
[L2599]              havoc from_s356;
[L2600]              havoc value_s356;
[L2601]              havoc spender_s453;
[L2602]              havoc addedValue_s453;
[L2603]              havoc __ret_0_increaseAllowance;
[L2604]              havoc spender_s480;
[L2605]              havoc subtractedValue_s480;
[L2606]              havoc __ret_0_decreaseAllowance;
[L2607]              havoc tmpNow;
[L2608]              havoc gas;
[L2609]              assume gas > 4000000 && gas <= 8000000;
[L2610]              tmpNow := now;
[L2611]              havoc now;
[L2612]              assume now > tmpNow;
[L2613]              assume msgsender_MSG != null;
[L2614]              assume DType[msgsender_MSG] != IERC20;
[L2615]              assume DType[msgsender_MSG] != SafeMath;
[L2616]              assume DType[msgsender_MSG] != HALE;
[L2617]              Alloc[msgsender_MSG] := true;
[L2618]  COND TRUE   choice == 13
[L2619]              gas := gas - 21000;
[L2620]  COND TRUE   gas >= 0
[L2621]              assume value_s331 >= 0 && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2622]              assume msgvalue_MSG == 0;
[L2623]  CALL        call __ret_0_transfer := transfer~address~uint256_HALE(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s331 && (value_s331 > _balances_HALE[this][msgsender_MSG] || _balances_HALE[this][to_s331] + value_s331 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s331 >= 0) && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HALE[this][to_s331] >= 0) && _balances_HALE[this][to_s331] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HALE[this][msgsender_MSG] >= 0) && _balances_HALE[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_HALE0 := true;
[L2]                 call_transfer_HALE0 := false;
[L2]                 revert := revert_hold;
[L560]               havoc __exception;
[L561]               revert := false;
[L562]   COND FALSE  !(__exception)
[L583]   CALL        call __ret_0_ := transfer~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L1613]  CALL        call _transfer~address~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L1810]              __var_4 := null;
[L1811]  COND TRUE   !(to_s526 != null)
[L1812]              revert := true;
[L1613]  RET         call _transfer~address~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L1614]  COND TRUE   revert
[L583]   RET         call __ret_0_ := transfer~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L584]               assume !revert && gas >= 0;
[L2623]  RET         call __ret_0_transfer := transfer~address~uint256_HALE(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2725]  RET         call CorralChoice_HALE(this);

[2020-11-25 17:37:33,915 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:37:33,915 INFO  L82        PathProgramCache]: Analyzing trace with hash 2117089128, now seen corresponding path program 1 times
[2020-11-25 17:37:33,916 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:37:33,926 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:37:33,944 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 17:37:33,944 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:37:33,944 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 17:37:33,945 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:37:33,945 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 17:37:33,945 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 17:37:33,945 INFO  L87              Difference]: Start difference. First operand 1776 states and 2000 transitions. cyclomatic complexity: 226 Second operand 4 states.
[2020-11-25 17:37:34,326 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:37:34,326 INFO  L93              Difference]: Finished difference Result 2424 states and 2702 transitions.
[2020-11-25 17:37:34,326 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 17:37:34,326 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2424 states and 2702 transitions.
[2020-11-25 17:37:34,336 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 17:37:34,346 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2424 states to 2258 states and 2512 transitions.
[2020-11-25 17:37:34,347 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 611
[2020-11-25 17:37:34,348 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 623
[2020-11-25 17:37:34,348 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2258 states and 2512 transitions.
[2020-11-25 17:37:34,352 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:37:34,352 INFO  L728         BuchiCegarLoop]: Abstraction has 2258 states and 2512 transitions.
[2020-11-25 17:37:34,355 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2258 states and 2512 transitions.
[2020-11-25 17:37:34,377 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2258 to 1974.
[2020-11-25 17:37:34,377 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1974 states.
[2020-11-25 17:37:34,380 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1974 states to 1974 states and 2160 transitions.
[2020-11-25 17:37:34,380 INFO  L751         BuchiCegarLoop]: Abstraction has 1974 states and 2160 transitions.
[2020-11-25 17:37:34,380 INFO  L631         BuchiCegarLoop]: Abstraction has 1974 states and 2160 transitions.
[2020-11-25 17:37:34,380 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 17:37:34,380 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1974 states and 2160 transitions.
[2020-11-25 17:37:34,385 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 17:37:34,385 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:37:34,385 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:37:34,387 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:37:34,387 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_HALE0 := false;
[L2]                 call_transfer_HALE0 := false;
[L2]     CALL        call main();
[L2715]              assume null == 0;
[L2716]  CALL        call this := FreshRefGenerator__success();
[L1265]              havoc newRef;
[L1266]              assume Alloc[newRef] == false;
[L1267]              Alloc[newRef] := true;
[L1268]              assume newRef != null;
[L2716]  RET         call this := FreshRefGenerator__success();
[L2717]              assume now >= 0;
[L2718]              assume DType[this] == HALE;
[L2719]              assume msgvalue_MSG == 0;
[L2720]              gas := gas - 53000;
[L2721]  CALL        call HALE_HALE(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L208]               havoc __exception;
[L209]               revert := false;
[L210]   COND FALSE  !(__exception)
[L231]   CALL        call HALE_HALE__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1519]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1297]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1282]              assume msgsender_MSG != null;
[L1283]              Balance[this] := 0;
[L1297]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1298]  COND FALSE  !(revert)
[L1519]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1520]  COND FALSE  !(revert)
[L1523]  CALL        call HALE_HALE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1487]              _name_HALE[this] := 243011368;
[L1488]              _symbol_HALE[this] := 243011368;
[L1489]              _decimals_HALE[this] := 0;
[L1490]              _balances_HALE[this] := zeroRefintArr();
[L1491]              sum__balances0[this] := 0;
[L1492]              _allowed_HALE[this] := zeroRefRefintArr();
[L1493]              sum__allowed1[this] := 0;
[L1494]              _totalSupply_HALE[this] := 0;
[L1496]              sum__balances0[this] := sum__balances0[this] - _balances_HALE[this][msgsender_MSG];
[L1497]              _balances_HALE[this][msgsender_MSG] := initialSupply_s252;
[L1498]              sum__balances0[this] := sum__balances0[this] + _balances_HALE[this][msgsender_MSG];
[L1499]              _totalSupply_HALE[this] := initialSupply_s252;
[L1500]              _name_HALE[this] := tokenName_s252;
[L1501]              _symbol_HALE[this] := tokenSymbol_s252;
[L1502]              _decimals_HALE[this] := decimalUnits_s252;
[L1523]  RET         call HALE_HALE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1524]  COND FALSE  !(revert)
[L231]   RET         call HALE_HALE__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L232]               assume !revert && gas >= 0;
[L2721]  RET         call HALE_HALE(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L2722]              assume !revert && gas >= 0;
[L2725]  CALL        call CorralChoice_HALE(this);
[L2572]              havoc msgsender_MSG;
[L2573]              havoc msgvalue_MSG;
[L2574]              havoc choice;
[L2575]              havoc to_s331;
[L2576]              havoc value_s331;
[L2577]              havoc __ret_0_transfer;
[L2578]              havoc spender_s391;
[L2579]              havoc value_s391;
[L2580]              havoc __ret_0_approve;
[L2581]              havoc from_s426;
[L2582]              havoc to_s426;
[L2583]              havoc value_s426;
[L2584]              havoc __ret_0_transferFrom;
[L2585]              havoc __ret_0_totalSupply;
[L2586]              havoc owner_s296;
[L2587]              havoc __ret_0_balanceOf;
[L2588]              havoc owner_s312;
[L2589]              havoc spender_s312;
[L2590]              havoc __ret_0_allowance;
[L2591]              havoc initialSupply_s252;
[L2592]              havoc tokenName_s252;
[L2593]              havoc decimalUnits_s252;
[L2594]              havoc tokenSymbol_s252;
[L2595]              havoc __ret_0_name;
[L2596]              havoc __ret_0_symbol;
[L2597]              havoc __ret_0_decimals;
[L2598]              havoc value_s343;
[L2599]              havoc from_s356;
[L2600]              havoc value_s356;
[L2601]              havoc spender_s453;
[L2602]              havoc addedValue_s453;
[L2603]              havoc __ret_0_increaseAllowance;
[L2604]              havoc spender_s480;
[L2605]              havoc subtractedValue_s480;
[L2606]              havoc __ret_0_decreaseAllowance;
[L2607]              havoc tmpNow;
[L2608]              havoc gas;
[L2609]              assume gas > 4000000 && gas <= 8000000;
[L2610]              tmpNow := now;
[L2611]              havoc now;
[L2612]              assume now > tmpNow;
[L2613]              assume msgsender_MSG != null;
[L2614]              assume DType[msgsender_MSG] != IERC20;
[L2615]              assume DType[msgsender_MSG] != SafeMath;
[L2616]              assume DType[msgsender_MSG] != HALE;
[L2617]              Alloc[msgsender_MSG] := true;
[L2618]  COND TRUE   choice == 13
[L2619]              gas := gas - 21000;
[L2620]  COND TRUE   gas >= 0
[L2621]              assume value_s331 >= 0 && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2622]              assume msgvalue_MSG == 0;
[L2623]  CALL        call __ret_0_transfer := transfer~address~uint256_HALE(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s331 && (value_s331 > _balances_HALE[this][msgsender_MSG] || _balances_HALE[this][to_s331] + value_s331 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s331 >= 0) && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HALE[this][to_s331] >= 0) && _balances_HALE[this][to_s331] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HALE[this][msgsender_MSG] >= 0) && _balances_HALE[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_HALE0 := true;
[L2]                 call_transfer_HALE0 := false;
[L2]                 revert := revert_hold;
[L560]               havoc __exception;
[L561]               revert := false;
[L562]   COND FALSE  !(__exception)
[L583]   CALL        call __ret_0_ := transfer~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L1613]  CALL        call _transfer~address~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L1810]              __var_4 := null;
[L1811]  COND FALSE  !(!(to_s526 != null))
[L1815]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_HALE[this][from_s526], value_s526);
[L1406]  COND FALSE  !(!(b_s149 <= a_s149))
[L1410]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1411]              __ret_0_ := c_s149;
[L1815]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_HALE[this][from_s526], value_s526);
[L1816]  COND FALSE  !(revert)
[L1819]              sum__balances0[this] := sum__balances0[this] - _balances_HALE[this][from_s526];
[L1820]              _balances_HALE[this][from_s526] := __var_5;
[L1821]              sum__balances0[this] := sum__balances0[this] + _balances_HALE[this][from_s526];
[L1822]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_HALE[this][to_s526], value_s526);
[L1430]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1431]  COND FALSE  !(!(c_s173 >= a_s173))
[L1435]              __ret_0_ := c_s173;
[L1822]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_HALE[this][to_s526], value_s526);
[L1823]  COND FALSE  !(revert)
[L1826]              sum__balances0[this] := sum__balances0[this] - _balances_HALE[this][to_s526];
[L1827]              _balances_HALE[this][to_s526] := __var_6;
[L1828]              sum__balances0[this] := sum__balances0[this] + _balances_HALE[this][to_s526];
[L1829]              assert { :EventEmitted "Transfer_HALE" } true;
[L1613]  RET         call _transfer~address~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L1614]  COND FALSE  !(revert)
[L1617]              __ret_0_ := true;
[L583]   RET         call __ret_0_ := transfer~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L584]               assume !revert && gas >= 0;
[L2623]  RET         call __ret_0_transfer := transfer~address~uint256_HALE(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2725]  RET         call CorralChoice_HALE(this);

Loop:
[L2725]  CALL        call CorralChoice_HALE(this);
[L2572]              havoc msgsender_MSG;
[L2573]              havoc msgvalue_MSG;
[L2574]              havoc choice;
[L2575]              havoc to_s331;
[L2576]              havoc value_s331;
[L2577]              havoc __ret_0_transfer;
[L2578]              havoc spender_s391;
[L2579]              havoc value_s391;
[L2580]              havoc __ret_0_approve;
[L2581]              havoc from_s426;
[L2582]              havoc to_s426;
[L2583]              havoc value_s426;
[L2584]              havoc __ret_0_transferFrom;
[L2585]              havoc __ret_0_totalSupply;
[L2586]              havoc owner_s296;
[L2587]              havoc __ret_0_balanceOf;
[L2588]              havoc owner_s312;
[L2589]              havoc spender_s312;
[L2590]              havoc __ret_0_allowance;
[L2591]              havoc initialSupply_s252;
[L2592]              havoc tokenName_s252;
[L2593]              havoc decimalUnits_s252;
[L2594]              havoc tokenSymbol_s252;
[L2595]              havoc __ret_0_name;
[L2596]              havoc __ret_0_symbol;
[L2597]              havoc __ret_0_decimals;
[L2598]              havoc value_s343;
[L2599]              havoc from_s356;
[L2600]              havoc value_s356;
[L2601]              havoc spender_s453;
[L2602]              havoc addedValue_s453;
[L2603]              havoc __ret_0_increaseAllowance;
[L2604]              havoc spender_s480;
[L2605]              havoc subtractedValue_s480;
[L2606]              havoc __ret_0_decreaseAllowance;
[L2607]              havoc tmpNow;
[L2608]              havoc gas;
[L2609]              assume gas > 4000000 && gas <= 8000000;
[L2610]              tmpNow := now;
[L2611]              havoc now;
[L2612]              assume now > tmpNow;
[L2613]              assume msgsender_MSG != null;
[L2614]              assume DType[msgsender_MSG] != IERC20;
[L2615]              assume DType[msgsender_MSG] != SafeMath;
[L2616]              assume DType[msgsender_MSG] != HALE;
[L2617]              Alloc[msgsender_MSG] := true;
[L2618]  COND TRUE   choice == 13
[L2619]              gas := gas - 21000;
[L2620]  COND TRUE   gas >= 0
[L2621]              assume value_s331 >= 0 && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2622]              assume msgvalue_MSG == 0;
[L2623]  CALL        call __ret_0_transfer := transfer~address~uint256_HALE(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s331 && (value_s331 > _balances_HALE[this][msgsender_MSG] || _balances_HALE[this][to_s331] + value_s331 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s331 >= 0) && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HALE[this][to_s331] >= 0) && _balances_HALE[this][to_s331] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HALE[this][msgsender_MSG] >= 0) && _balances_HALE[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_HALE0 := true;
[L2]                 call_transfer_HALE0 := false;
[L2]                 revert := revert_hold;
[L560]               havoc __exception;
[L561]               revert := false;
[L562]   COND FALSE  !(__exception)
[L583]   CALL        call __ret_0_ := transfer~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L1613]  CALL        call _transfer~address~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L1810]              __var_4 := null;
[L1811]  COND FALSE  !(!(to_s526 != null))
[L1815]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_HALE[this][from_s526], value_s526);
[L1406]  COND FALSE  !(!(b_s149 <= a_s149))
[L1410]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1411]              __ret_0_ := c_s149;
[L1815]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_HALE[this][from_s526], value_s526);
[L1816]  COND FALSE  !(revert)
[L1819]              sum__balances0[this] := sum__balances0[this] - _balances_HALE[this][from_s526];
[L1820]              _balances_HALE[this][from_s526] := __var_5;
[L1821]              sum__balances0[this] := sum__balances0[this] + _balances_HALE[this][from_s526];
[L1822]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_HALE[this][to_s526], value_s526);
[L1430]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1431]  COND FALSE  !(!(c_s173 >= a_s173))
[L1435]              __ret_0_ := c_s173;
[L1822]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_HALE[this][to_s526], value_s526);
[L1823]  COND FALSE  !(revert)
[L1826]              sum__balances0[this] := sum__balances0[this] - _balances_HALE[this][to_s526];
[L1827]              _balances_HALE[this][to_s526] := __var_6;
[L1828]              sum__balances0[this] := sum__balances0[this] + _balances_HALE[this][to_s526];
[L1829]              assert { :EventEmitted "Transfer_HALE" } true;
[L1613]  RET         call _transfer~address~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L1614]  COND FALSE  !(revert)
[L1617]              __ret_0_ := true;
[L583]   RET         call __ret_0_ := transfer~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L584]               assume !revert && gas >= 0;
[L2623]  RET         call __ret_0_transfer := transfer~address~uint256_HALE(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2725]  RET         call CorralChoice_HALE(this);

[2020-11-25 17:37:34,390 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:37:34,390 INFO  L82        PathProgramCache]: Analyzing trace with hash -1063817316, now seen corresponding path program 1 times
[2020-11-25 17:37:34,391 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:37:34,412 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:37:34,598 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 17:37:34,598 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:37:34,598 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-25 17:37:34,599 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:37:34,599 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-25 17:37:34,599 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=30, Invalid=180, Unknown=0, NotChecked=0, Total=210
[2020-11-25 17:37:34,599 INFO  L87              Difference]: Start difference. First operand 1974 states and 2160 transitions. cyclomatic complexity: 188 Second operand 15 states.
[2020-11-25 17:37:36,324 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:37:36,325 INFO  L93              Difference]: Finished difference Result 2055 states and 2253 transitions.
[2020-11-25 17:37:36,325 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-25 17:37:36,325 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2055 states and 2253 transitions.
[2020-11-25 17:37:36,334 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 17:37:36,344 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2055 states to 2055 states and 2253 transitions.
[2020-11-25 17:37:36,344 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 597
[2020-11-25 17:37:36,345 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 597
[2020-11-25 17:37:36,345 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2055 states and 2253 transitions.
[2020-11-25 17:37:36,347 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:37:36,347 INFO  L728         BuchiCegarLoop]: Abstraction has 2055 states and 2253 transitions.
[2020-11-25 17:37:36,349 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2055 states and 2253 transitions.
[2020-11-25 17:37:36,368 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2055 to 1893.
[2020-11-25 17:37:36,369 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1893 states.
[2020-11-25 17:37:36,371 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1893 states to 1893 states and 2056 transitions.
[2020-11-25 17:37:36,371 INFO  L751         BuchiCegarLoop]: Abstraction has 1893 states and 2056 transitions.
[2020-11-25 17:37:36,371 INFO  L631         BuchiCegarLoop]: Abstraction has 1893 states and 2056 transitions.
[2020-11-25 17:37:36,371 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 17:37:36,371 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1893 states and 2056 transitions.
[2020-11-25 17:37:36,382 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:37:36,382 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:37:36,382 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:37:36,387 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:37:36,388 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_HALE0 := false;
[L2]                 call_transfer_HALE0 := false;
[L2]     CALL        call main();
[L2715]              assume null == 0;
[L2716]  CALL        call this := FreshRefGenerator__success();
[L1265]              havoc newRef;
[L1266]              assume Alloc[newRef] == false;
[L1267]              Alloc[newRef] := true;
[L1268]              assume newRef != null;
[L2716]  RET         call this := FreshRefGenerator__success();
[L2717]              assume now >= 0;
[L2718]              assume DType[this] == HALE;
[L2719]              assume msgvalue_MSG == 0;
[L2720]              gas := gas - 53000;
[L2721]  CALL        call HALE_HALE(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L208]               havoc __exception;
[L209]               revert := false;
[L210]   COND TRUE   __exception
[L211]               __tmp__Balance := Balance;
[L212]               __tmp__DType := DType;
[L213]               __tmp__Alloc := Alloc;
[L214]               __tmp__balance_ADDR := balance_ADDR;
[L215]               __tmp__M_Ref_int := M_Ref_int;
[L216]               __tmp__sum__balances0 := sum__balances0;
[L217]               __tmp__alloc__allowed_HALE_lvl0 := alloc__allowed_HALE_lvl0;
[L218]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L219]               __tmp__sum__allowed1 := sum__allowed1;
[L220]               __tmp__Length := Length;
[L221]               __tmp__now := now;
[L222]               __tmp___name_HALE := _name_HALE;
[L223]               __tmp___symbol_HALE := _symbol_HALE;
[L224]               __tmp___decimals_HALE := _decimals_HALE;
[L225]               __tmp___balances_HALE := _balances_HALE;
[L226]               __tmp___allowed_HALE := _allowed_HALE;
[L227]               __tmp___totalSupply_HALE := _totalSupply_HALE;
[L228]   CALL        call HALE_HALE__fail(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1507]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L1289]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1274]              assume msgsender_MSG != null;
[L1275]              __tmp__Balance[this] := 0;
[L1289]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1290]  COND FALSE  !(revert)
[L1507]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L1508]  COND FALSE  !(revert)
[L1511]  CALL        call HALE_HALE_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1462]              assume msgsender_MSG != null;
[L1463]              __tmp__Balance[this] := 0;
[L1464]              __tmp___name_HALE[this] := 243011368;
[L1465]              __tmp___symbol_HALE[this] := 243011368;
[L1466]              __tmp___decimals_HALE[this] := 0;
[L1467]              __tmp___balances_HALE[this] := zeroRefintArr();
[L1468]              __tmp__sum__balances0[this] := 0;
[L1469]              __tmp___allowed_HALE[this] := zeroRefRefintArr();
[L1470]              __tmp__sum__allowed1[this] := 0;
[L1471]              __tmp___totalSupply_HALE[this] := 0;
[L1473]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_HALE[this][msgsender_MSG];
[L1474]              __tmp___balances_HALE[this][msgsender_MSG] := initialSupply_s252;
[L1475]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_HALE[this][msgsender_MSG];
[L1476]              __tmp___totalSupply_HALE[this] := initialSupply_s252;
[L1477]              __tmp___name_HALE[this] := tokenName_s252;
[L1478]              __tmp___symbol_HALE[this] := tokenSymbol_s252;
[L1479]              __tmp___decimals_HALE[this] := decimalUnits_s252;
[L1511]  RET         call HALE_HALE_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1512]  COND FALSE  !(revert)
[L228]   RET         call HALE_HALE__fail(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L229]               assume revert || gas < 0;
[L2721]  RET         call HALE_HALE(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L2722]              assume !revert && gas >= 0;
[L2725]  CALL        call CorralChoice_HALE(this);
[L2572]              havoc msgsender_MSG;
[L2573]              havoc msgvalue_MSG;
[L2574]              havoc choice;
[L2575]              havoc to_s331;
[L2576]              havoc value_s331;
[L2577]              havoc __ret_0_transfer;
[L2578]              havoc spender_s391;
[L2579]              havoc value_s391;
[L2580]              havoc __ret_0_approve;
[L2581]              havoc from_s426;
[L2582]              havoc to_s426;
[L2583]              havoc value_s426;
[L2584]              havoc __ret_0_transferFrom;
[L2585]              havoc __ret_0_totalSupply;
[L2586]              havoc owner_s296;
[L2587]              havoc __ret_0_balanceOf;
[L2588]              havoc owner_s312;
[L2589]              havoc spender_s312;
[L2590]              havoc __ret_0_allowance;
[L2591]              havoc initialSupply_s252;
[L2592]              havoc tokenName_s252;
[L2593]              havoc decimalUnits_s252;
[L2594]              havoc tokenSymbol_s252;
[L2595]              havoc __ret_0_name;
[L2596]              havoc __ret_0_symbol;
[L2597]              havoc __ret_0_decimals;
[L2598]              havoc value_s343;
[L2599]              havoc from_s356;
[L2600]              havoc value_s356;
[L2601]              havoc spender_s453;
[L2602]              havoc addedValue_s453;
[L2603]              havoc __ret_0_increaseAllowance;
[L2604]              havoc spender_s480;
[L2605]              havoc subtractedValue_s480;
[L2606]              havoc __ret_0_decreaseAllowance;
[L2607]              havoc tmpNow;
[L2608]              havoc gas;
[L2609]              assume gas > 4000000 && gas <= 8000000;
[L2610]              tmpNow := now;
[L2611]              havoc now;
[L2612]              assume now > tmpNow;
[L2613]              assume msgsender_MSG != null;
[L2614]              assume DType[msgsender_MSG] != IERC20;
[L2615]              assume DType[msgsender_MSG] != SafeMath;
[L2616]              assume DType[msgsender_MSG] != HALE;
[L2617]              Alloc[msgsender_MSG] := true;
[L2618]  COND TRUE   choice == 13
[L2619]              gas := gas - 21000;
[L2620]  COND TRUE   gas >= 0
[L2621]              assume value_s331 >= 0 && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2622]              assume msgvalue_MSG == 0;
[L2623]  CALL        call __ret_0_transfer := transfer~address~uint256_HALE(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s331 && (value_s331 > _balances_HALE[this][msgsender_MSG] || _balances_HALE[this][to_s331] + value_s331 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s331 >= 0) && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HALE[this][to_s331] >= 0) && _balances_HALE[this][to_s331] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HALE[this][msgsender_MSG] >= 0) && _balances_HALE[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_HALE0 := true;
[L2]                 call_transfer_HALE0 := false;
[L2]                 revert := revert_hold;
[L560]               havoc __exception;
[L561]               revert := false;
[L562]   COND FALSE  !(__exception)
[L583]   CALL        call __ret_0_ := transfer~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L1613]  CALL        call _transfer~address~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L1810]              __var_4 := null;
[L1811]  COND FALSE  !(!(to_s526 != null))
[L1815]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_HALE[this][from_s526], value_s526);
[L1406]  COND FALSE  !(!(b_s149 <= a_s149))
[L1410]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1411]              __ret_0_ := c_s149;
[L1815]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_HALE[this][from_s526], value_s526);
[L1816]  COND FALSE  !(revert)
[L1819]              sum__balances0[this] := sum__balances0[this] - _balances_HALE[this][from_s526];
[L1820]              _balances_HALE[this][from_s526] := __var_5;
[L1821]              sum__balances0[this] := sum__balances0[this] + _balances_HALE[this][from_s526];
[L1822]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_HALE[this][to_s526], value_s526);
[L1430]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1431]  COND FALSE  !(!(c_s173 >= a_s173))
[L1435]              __ret_0_ := c_s173;
[L1822]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_HALE[this][to_s526], value_s526);
[L1823]  COND FALSE  !(revert)
[L1826]              sum__balances0[this] := sum__balances0[this] - _balances_HALE[this][to_s526];
[L1827]              _balances_HALE[this][to_s526] := __var_6;
[L1828]              sum__balances0[this] := sum__balances0[this] + _balances_HALE[this][to_s526];
[L1829]              assert { :EventEmitted "Transfer_HALE" } true;
[L1613]  RET         call _transfer~address~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L1614]  COND FALSE  !(revert)
[L1617]              __ret_0_ := true;
[L583]   RET         call __ret_0_ := transfer~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L584]               assume !revert && gas >= 0;
[L2623]  RET         call __ret_0_transfer := transfer~address~uint256_HALE(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2725]  RET         call CorralChoice_HALE(this);

Loop:
[L2725]  CALL        call CorralChoice_HALE(this);
[L2572]              havoc msgsender_MSG;
[L2573]              havoc msgvalue_MSG;
[L2574]              havoc choice;
[L2575]              havoc to_s331;
[L2576]              havoc value_s331;
[L2577]              havoc __ret_0_transfer;
[L2578]              havoc spender_s391;
[L2579]              havoc value_s391;
[L2580]              havoc __ret_0_approve;
[L2581]              havoc from_s426;
[L2582]              havoc to_s426;
[L2583]              havoc value_s426;
[L2584]              havoc __ret_0_transferFrom;
[L2585]              havoc __ret_0_totalSupply;
[L2586]              havoc owner_s296;
[L2587]              havoc __ret_0_balanceOf;
[L2588]              havoc owner_s312;
[L2589]              havoc spender_s312;
[L2590]              havoc __ret_0_allowance;
[L2591]              havoc initialSupply_s252;
[L2592]              havoc tokenName_s252;
[L2593]              havoc decimalUnits_s252;
[L2594]              havoc tokenSymbol_s252;
[L2595]              havoc __ret_0_name;
[L2596]              havoc __ret_0_symbol;
[L2597]              havoc __ret_0_decimals;
[L2598]              havoc value_s343;
[L2599]              havoc from_s356;
[L2600]              havoc value_s356;
[L2601]              havoc spender_s453;
[L2602]              havoc addedValue_s453;
[L2603]              havoc __ret_0_increaseAllowance;
[L2604]              havoc spender_s480;
[L2605]              havoc subtractedValue_s480;
[L2606]              havoc __ret_0_decreaseAllowance;
[L2607]              havoc tmpNow;
[L2608]              havoc gas;
[L2609]              assume gas > 4000000 && gas <= 8000000;
[L2610]              tmpNow := now;
[L2611]              havoc now;
[L2612]              assume now > tmpNow;
[L2613]              assume msgsender_MSG != null;
[L2614]              assume DType[msgsender_MSG] != IERC20;
[L2615]              assume DType[msgsender_MSG] != SafeMath;
[L2616]              assume DType[msgsender_MSG] != HALE;
[L2617]              Alloc[msgsender_MSG] := true;
[L2618]  COND TRUE   choice == 13
[L2619]              gas := gas - 21000;
[L2620]  COND FALSE  !(gas >= 0)
[L2725]  RET         call CorralChoice_HALE(this);

[2020-11-25 17:37:36,391 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:37:36,391 INFO  L82        PathProgramCache]: Analyzing trace with hash 791190450, now seen corresponding path program 1 times
[2020-11-25 17:37:36,392 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:37:36,400 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:37:36,433 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 17:37:36,433 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:37:36,433 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 17:37:36,434 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:37:36,434 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 17:37:36,434 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 17:37:36,434 INFO  L87              Difference]: Start difference. First operand 1893 states and 2056 transitions. cyclomatic complexity: 166 Second operand 4 states.
[2020-11-25 17:37:36,590 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:37:36,590 INFO  L93              Difference]: Finished difference Result 2450 states and 2759 transitions.
[2020-11-25 17:37:36,590 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 17:37:36,590 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2450 states and 2759 transitions.
[2020-11-25 17:37:36,597 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 17:37:36,604 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2450 states to 2386 states and 2695 transitions.
[2020-11-25 17:37:36,604 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 668
[2020-11-25 17:37:36,604 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 668
[2020-11-25 17:37:36,604 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2386 states and 2695 transitions.
[2020-11-25 17:37:36,606 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:37:36,606 INFO  L728         BuchiCegarLoop]: Abstraction has 2386 states and 2695 transitions.
[2020-11-25 17:37:36,609 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2386 states and 2695 transitions.
[2020-11-25 17:37:36,628 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2386 to 1829.
[2020-11-25 17:37:36,628 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1829 states.
[2020-11-25 17:37:36,632 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1829 states to 1829 states and 1991 transitions.
[2020-11-25 17:37:36,632 INFO  L751         BuchiCegarLoop]: Abstraction has 1829 states and 1991 transitions.
[2020-11-25 17:37:36,633 INFO  L631         BuchiCegarLoop]: Abstraction has 1829 states and 1991 transitions.
[2020-11-25 17:37:36,633 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 17:37:36,633 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1829 states and 1991 transitions.
[2020-11-25 17:37:36,638 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:37:36,638 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:37:36,638 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:37:36,641 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:37:36,641 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_HALE0 := false;
[L2]                 call_transfer_HALE0 := false;
[L2]     CALL        call main();
[L2715]              assume null == 0;
[L2716]  CALL        call this := FreshRefGenerator__success();
[L1265]              havoc newRef;
[L1266]              assume Alloc[newRef] == false;
[L1267]              Alloc[newRef] := true;
[L1268]              assume newRef != null;
[L2716]  RET         call this := FreshRefGenerator__success();
[L2717]              assume now >= 0;
[L2718]              assume DType[this] == HALE;
[L2719]              assume msgvalue_MSG == 0;
[L2720]              gas := gas - 53000;
[L2721]  CALL        call HALE_HALE(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L208]               havoc __exception;
[L209]               revert := false;
[L210]   COND FALSE  !(__exception)
[L231]   CALL        call HALE_HALE__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1519]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1297]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1282]              assume msgsender_MSG != null;
[L1283]              Balance[this] := 0;
[L1297]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1298]  COND FALSE  !(revert)
[L1519]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1520]  COND FALSE  !(revert)
[L1523]  CALL        call HALE_HALE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1487]              _name_HALE[this] := 243011368;
[L1488]              _symbol_HALE[this] := 243011368;
[L1489]              _decimals_HALE[this] := 0;
[L1490]              _balances_HALE[this] := zeroRefintArr();
[L1491]              sum__balances0[this] := 0;
[L1492]              _allowed_HALE[this] := zeroRefRefintArr();
[L1493]              sum__allowed1[this] := 0;
[L1494]              _totalSupply_HALE[this] := 0;
[L1496]              sum__balances0[this] := sum__balances0[this] - _balances_HALE[this][msgsender_MSG];
[L1497]              _balances_HALE[this][msgsender_MSG] := initialSupply_s252;
[L1498]              sum__balances0[this] := sum__balances0[this] + _balances_HALE[this][msgsender_MSG];
[L1499]              _totalSupply_HALE[this] := initialSupply_s252;
[L1500]              _name_HALE[this] := tokenName_s252;
[L1501]              _symbol_HALE[this] := tokenSymbol_s252;
[L1502]              _decimals_HALE[this] := decimalUnits_s252;
[L1523]  RET         call HALE_HALE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1524]  COND FALSE  !(revert)
[L231]   RET         call HALE_HALE__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L232]               assume !revert && gas >= 0;
[L2721]  RET         call HALE_HALE(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L2722]              assume !revert && gas >= 0;
[L2725]  CALL        call CorralChoice_HALE(this);
[L2572]              havoc msgsender_MSG;
[L2573]              havoc msgvalue_MSG;
[L2574]              havoc choice;
[L2575]              havoc to_s331;
[L2576]              havoc value_s331;
[L2577]              havoc __ret_0_transfer;
[L2578]              havoc spender_s391;
[L2579]              havoc value_s391;
[L2580]              havoc __ret_0_approve;
[L2581]              havoc from_s426;
[L2582]              havoc to_s426;
[L2583]              havoc value_s426;
[L2584]              havoc __ret_0_transferFrom;
[L2585]              havoc __ret_0_totalSupply;
[L2586]              havoc owner_s296;
[L2587]              havoc __ret_0_balanceOf;
[L2588]              havoc owner_s312;
[L2589]              havoc spender_s312;
[L2590]              havoc __ret_0_allowance;
[L2591]              havoc initialSupply_s252;
[L2592]              havoc tokenName_s252;
[L2593]              havoc decimalUnits_s252;
[L2594]              havoc tokenSymbol_s252;
[L2595]              havoc __ret_0_name;
[L2596]              havoc __ret_0_symbol;
[L2597]              havoc __ret_0_decimals;
[L2598]              havoc value_s343;
[L2599]              havoc from_s356;
[L2600]              havoc value_s356;
[L2601]              havoc spender_s453;
[L2602]              havoc addedValue_s453;
[L2603]              havoc __ret_0_increaseAllowance;
[L2604]              havoc spender_s480;
[L2605]              havoc subtractedValue_s480;
[L2606]              havoc __ret_0_decreaseAllowance;
[L2607]              havoc tmpNow;
[L2608]              havoc gas;
[L2609]              assume gas > 4000000 && gas <= 8000000;
[L2610]              tmpNow := now;
[L2611]              havoc now;
[L2612]              assume now > tmpNow;
[L2613]              assume msgsender_MSG != null;
[L2614]              assume DType[msgsender_MSG] != IERC20;
[L2615]              assume DType[msgsender_MSG] != SafeMath;
[L2616]              assume DType[msgsender_MSG] != HALE;
[L2617]              Alloc[msgsender_MSG] := true;
[L2618]  COND FALSE  !(choice == 13)
[L2625]  COND FALSE  !(choice == 12)
[L2632]  COND FALSE  !(choice == 11)
[L2639]  COND FALSE  !(choice == 10)
[L2645]  COND FALSE  !(choice == 9)
[L2651]  COND FALSE  !(choice == 8)
[L2657]  COND FALSE  !(choice == 7)
[L2663]  COND FALSE  !(choice == 6)
[L2669]  COND FALSE  !(choice == 5)
[L2675]  COND TRUE   choice == 4
[L2676]              gas := gas - 21000;
[L2677]  COND TRUE   gas >= 0
[L2678]              assume value_s343 >= 0 && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2679]              assume msgvalue_MSG == 0;
[L2680]  CALL        call burn~uint256_HALE(this, msgsender_MSG, msgvalue_MSG, value_s343);
[L613]               havoc __exception;
[L614]               revert := false;
[L615]   COND FALSE  !(__exception)
[L636]   CALL        call burn~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, value_s343);
[L1631]  CALL        call _burn~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, value_s343);
[L1861]              __var_7 := null;
[L1862]  COND FALSE  !(!(account_s568 != null))
[L1866]  CALL        call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_HALE[this], value_s568);
[L1406]  COND FALSE  !(!(b_s149 <= a_s149))
[L1410]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1411]              __ret_0_ := c_s149;
[L1866]  RET         call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_HALE[this], value_s568);
[L1867]  COND FALSE  !(revert)
[L1870]              _totalSupply_HALE[this] := __var_8;
[L1871]  CALL        call __var_9 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_HALE[this][account_s568], value_s568);
[L1406]  COND FALSE  !(!(b_s149 <= a_s149))
[L1410]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1411]              __ret_0_ := c_s149;
[L1871]  RET         call __var_9 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_HALE[this][account_s568], value_s568);
[L1872]  COND FALSE  !(revert)
[L1875]              sum__balances0[this] := sum__balances0[this] - _balances_HALE[this][account_s568];
[L1876]              _balances_HALE[this][account_s568] := __var_9;
[L1877]              sum__balances0[this] := sum__balances0[this] + _balances_HALE[this][account_s568];
[L1878]              assert { :EventEmitted "Transfer_HALE" } true;
[L1631]  RET         call _burn~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, value_s343);
[L1632]  COND FALSE  !(revert)
[L636]   RET         call burn~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, value_s343);
[L637]               assume !revert && gas >= 0;
[L2680]  RET         call burn~uint256_HALE(this, msgsender_MSG, msgvalue_MSG, value_s343);
[L2725]  RET         call CorralChoice_HALE(this);
[L2725]  CALL        call CorralChoice_HALE(this);
[L2572]              havoc msgsender_MSG;
[L2573]              havoc msgvalue_MSG;
[L2574]              havoc choice;
[L2575]              havoc to_s331;
[L2576]              havoc value_s331;
[L2577]              havoc __ret_0_transfer;
[L2578]              havoc spender_s391;
[L2579]              havoc value_s391;
[L2580]              havoc __ret_0_approve;
[L2581]              havoc from_s426;
[L2582]              havoc to_s426;
[L2583]              havoc value_s426;
[L2584]              havoc __ret_0_transferFrom;
[L2585]              havoc __ret_0_totalSupply;
[L2586]              havoc owner_s296;
[L2587]              havoc __ret_0_balanceOf;
[L2588]              havoc owner_s312;
[L2589]              havoc spender_s312;
[L2590]              havoc __ret_0_allowance;
[L2591]              havoc initialSupply_s252;
[L2592]              havoc tokenName_s252;
[L2593]              havoc decimalUnits_s252;
[L2594]              havoc tokenSymbol_s252;
[L2595]              havoc __ret_0_name;
[L2596]              havoc __ret_0_symbol;
[L2597]              havoc __ret_0_decimals;
[L2598]              havoc value_s343;
[L2599]              havoc from_s356;
[L2600]              havoc value_s356;
[L2601]              havoc spender_s453;
[L2602]              havoc addedValue_s453;
[L2603]              havoc __ret_0_increaseAllowance;
[L2604]              havoc spender_s480;
[L2605]              havoc subtractedValue_s480;
[L2606]              havoc __ret_0_decreaseAllowance;
[L2607]              havoc tmpNow;
[L2608]              havoc gas;
[L2609]              assume gas > 4000000 && gas <= 8000000;
[L2610]              tmpNow := now;
[L2611]              havoc now;
[L2612]              assume now > tmpNow;
[L2613]              assume msgsender_MSG != null;
[L2614]              assume DType[msgsender_MSG] != IERC20;
[L2615]              assume DType[msgsender_MSG] != SafeMath;
[L2616]              assume DType[msgsender_MSG] != HALE;
[L2617]              Alloc[msgsender_MSG] := true;
[L2618]  COND TRUE   choice == 13
[L2619]              gas := gas - 21000;
[L2620]  COND TRUE   gas >= 0
[L2621]              assume value_s331 >= 0 && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2622]              assume msgvalue_MSG == 0;
[L2623]  CALL        call __ret_0_transfer := transfer~address~uint256_HALE(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s331 && (value_s331 > _balances_HALE[this][msgsender_MSG] || _balances_HALE[this][to_s331] + value_s331 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s331 >= 0) && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HALE[this][to_s331] >= 0) && _balances_HALE[this][to_s331] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HALE[this][msgsender_MSG] >= 0) && _balances_HALE[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_HALE0 := true;
[L2]                 call_transfer_HALE0 := false;
[L2]                 revert := revert_hold;
[L560]               havoc __exception;
[L561]               revert := false;
[L562]   COND FALSE  !(__exception)
[L583]   CALL        call __ret_0_ := transfer~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L1613]  CALL        call _transfer~address~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L1810]              __var_4 := null;
[L1811]  COND FALSE  !(!(to_s526 != null))
[L1815]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_HALE[this][from_s526], value_s526);
[L1406]  COND FALSE  !(!(b_s149 <= a_s149))
[L1410]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1411]              __ret_0_ := c_s149;
[L1815]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_HALE[this][from_s526], value_s526);
[L1816]  COND FALSE  !(revert)
[L1819]              sum__balances0[this] := sum__balances0[this] - _balances_HALE[this][from_s526];
[L1820]              _balances_HALE[this][from_s526] := __var_5;
[L1821]              sum__balances0[this] := sum__balances0[this] + _balances_HALE[this][from_s526];
[L1822]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_HALE[this][to_s526], value_s526);
[L1430]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1431]  COND FALSE  !(!(c_s173 >= a_s173))
[L1435]              __ret_0_ := c_s173;
[L1822]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_HALE[this][to_s526], value_s526);
[L1823]  COND FALSE  !(revert)
[L1826]              sum__balances0[this] := sum__balances0[this] - _balances_HALE[this][to_s526];
[L1827]              _balances_HALE[this][to_s526] := __var_6;
[L1828]              sum__balances0[this] := sum__balances0[this] + _balances_HALE[this][to_s526];
[L1829]              assert { :EventEmitted "Transfer_HALE" } true;
[L1613]  RET         call _transfer~address~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L1614]  COND FALSE  !(revert)
[L1617]              __ret_0_ := true;
[L583]   RET         call __ret_0_ := transfer~address~uint256_HALE__success(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L584]               assume !revert && gas >= 0;
[L2623]  RET         call __ret_0_transfer := transfer~address~uint256_HALE(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2725]  RET         call CorralChoice_HALE(this);

Loop:
[L2725]  CALL        call CorralChoice_HALE(this);
[L2572]              havoc msgsender_MSG;
[L2573]              havoc msgvalue_MSG;
[L2574]              havoc choice;
[L2575]              havoc to_s331;
[L2576]              havoc value_s331;
[L2577]              havoc __ret_0_transfer;
[L2578]              havoc spender_s391;
[L2579]              havoc value_s391;
[L2580]              havoc __ret_0_approve;
[L2581]              havoc from_s426;
[L2582]              havoc to_s426;
[L2583]              havoc value_s426;
[L2584]              havoc __ret_0_transferFrom;
[L2585]              havoc __ret_0_totalSupply;
[L2586]              havoc owner_s296;
[L2587]              havoc __ret_0_balanceOf;
[L2588]              havoc owner_s312;
[L2589]              havoc spender_s312;
[L2590]              havoc __ret_0_allowance;
[L2591]              havoc initialSupply_s252;
[L2592]              havoc tokenName_s252;
[L2593]              havoc decimalUnits_s252;
[L2594]              havoc tokenSymbol_s252;
[L2595]              havoc __ret_0_name;
[L2596]              havoc __ret_0_symbol;
[L2597]              havoc __ret_0_decimals;
[L2598]              havoc value_s343;
[L2599]              havoc from_s356;
[L2600]              havoc value_s356;
[L2601]              havoc spender_s453;
[L2602]              havoc addedValue_s453;
[L2603]              havoc __ret_0_increaseAllowance;
[L2604]              havoc spender_s480;
[L2605]              havoc subtractedValue_s480;
[L2606]              havoc __ret_0_decreaseAllowance;
[L2607]              havoc tmpNow;
[L2608]              havoc gas;
[L2609]              assume gas > 4000000 && gas <= 8000000;
[L2610]              tmpNow := now;
[L2611]              havoc now;
[L2612]              assume now > tmpNow;
[L2613]              assume msgsender_MSG != null;
[L2614]              assume DType[msgsender_MSG] != IERC20;
[L2615]              assume DType[msgsender_MSG] != SafeMath;
[L2616]              assume DType[msgsender_MSG] != HALE;
[L2617]              Alloc[msgsender_MSG] := true;
[L2618]  COND TRUE   choice == 13
[L2619]              gas := gas - 21000;
[L2620]  COND FALSE  !(gas >= 0)
[L2725]  RET         call CorralChoice_HALE(this);

[2020-11-25 17:37:36,645 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:37:36,645 INFO  L82        PathProgramCache]: Analyzing trace with hash -912839866, now seen corresponding path program 1 times
[2020-11-25 17:37:36,646 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:37:36,665 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:37:36,765 INFO  L134       CoverageAnalysis]: Checked inductivity of 54 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 54 trivial. 0 not checked.
[2020-11-25 17:37:36,766 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:37:36,766 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 17:37:36,766 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:37:36,766 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-25 17:37:36,766 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=24, Invalid=108, Unknown=0, NotChecked=0, Total=132
[2020-11-25 17:37:36,766 INFO  L87              Difference]: Start difference. First operand 1829 states and 1991 transitions. cyclomatic complexity: 165 Second operand 12 states.
[2020-11-25 17:37:37,422 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:37:37,423 INFO  L93              Difference]: Finished difference Result 1076 states and 1164 transitions.
[2020-11-25 17:37:37,423 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 12 states. 
[2020-11-25 17:37:37,423 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1076 states and 1164 transitions.
[2020-11-25 17:37:37,425 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 17:37:37,425 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1076 states to 0 states and 0 transitions.
[2020-11-25 17:37:37,425 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 17:37:37,425 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 17:37:37,425 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 17:37:37,425 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:37:37,425 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 17:37:37,425 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 17:37:37,425 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 17:37:37,425 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 17:37:37,425 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 17:37:37,425 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 17:37:37,425 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 17:37:37,429 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:37:37 BasicIcfg
[2020-11-25 17:37:37,429 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 17:37:37,429 INFO  L168              Benchmark]: Toolchain (without parser) took 5888.07 ms. Allocated memory was 1.0 GB in the beginning and 1.5 GB in the end (delta: 496.0 MB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -236.6 MB). Peak memory consumption was 259.4 MB. Max. memory is 15.3 GB.
[2020-11-25 17:37:37,430 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 17:37:37,430 INFO  L168              Benchmark]: Boogie Preprocessor took 84.52 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 17:37:37,430 INFO  L168              Benchmark]: UtopiaSpecLang took 47.62 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 17:37:37,430 INFO  L168              Benchmark]: Boogie Printer took 10.64 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 17:37:37,431 INFO  L168              Benchmark]: RCFGBuilder took 517.85 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 854.7 MB in the end (delta: 69.8 MB). Peak memory consumption was 69.8 MB. Max. memory is 15.3 GB.
[2020-11-25 17:37:37,431 INFO  L168              Benchmark]: UtopiaLTL2Aut took 35.18 ms. Allocated memory is still 1.0 GB. Free memory was 854.7 MB in the beginning and 845.7 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
[2020-11-25 17:37:37,431 INFO  L168              Benchmark]: BÃ¼chi Program Product took 902.41 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.7 MB). Free memory was 845.7 MB in the beginning and 835.1 MB in the end (delta: 10.5 MB). Peak memory consumption was 131.0 MB. Max. memory is 15.3 GB.
[2020-11-25 17:37:37,432 INFO  L168              Benchmark]: BlockEncodingV2 took 80.37 ms. Allocated memory is still 1.1 GB. Free memory was 835.1 MB in the beginning and 792.3 MB in the end (delta: 42.9 MB). Peak memory consumption was 42.9 MB. Max. memory is 15.3 GB.
[2020-11-25 17:37:37,432 INFO  L168              Benchmark]: BuchiAutomizer took 4206.75 ms. Allocated memory was 1.1 GB in the beginning and 1.5 GB in the end (delta: 438.3 MB). Free memory was 792.3 MB in the beginning and 1.2 GB in the end (delta: -384.9 MB). Peak memory consumption was 53.4 MB. Max. memory is 15.3 GB.
[2020-11-25 17:37:37,434 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2364 locations, 4022 edges
  - StatisticsResult: Encoded RCFG
    2302 locations, 3889 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 84.52 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 47.62 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.64 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 517.85 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 854.7 MB in the end (delta: 69.8 MB). Peak memory consumption was 69.8 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 35.18 ms. Allocated memory is still 1.0 GB. Free memory was 854.7 MB in the beginning and 845.7 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 902.41 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.7 MB). Free memory was 845.7 MB in the beginning and 835.1 MB in the end (delta: 10.5 MB). Peak memory consumption was 131.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 80.37 ms. Allocated memory is still 1.1 GB. Free memory was 835.1 MB in the beginning and 792.3 MB in the end (delta: 42.9 MB). Peak memory consumption was 42.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 4206.75 ms. Allocated memory was 1.1 GB in the beginning and 1.5 GB in the end (delta: 438.3 MB). Free memory was 792.3 MB in the beginning and 1.2 GB in the end (delta: -384.9 MB). Peak memory consumption was 53.4 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    966 locations, 1238 edges
  - StatisticsResult: BuchiProgram size
    2364 locations, 4022 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 15 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 4.1s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.5s. Construction of modules took 2.4s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1003 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1974 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 9394 SDtfs, 8969 SDslu, 17363 SDs, 0 SdLazy, 22888 SolverSat, 1454 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.4s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_HALE0) ==> ( <>(fail_transfer_HALE0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
