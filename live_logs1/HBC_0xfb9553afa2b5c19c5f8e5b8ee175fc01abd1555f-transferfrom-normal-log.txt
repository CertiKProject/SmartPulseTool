This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 17:40:08,403 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 17:40:08,404 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 17:40:08,412 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 17:40:08,412 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 17:40:08,412 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 17:40:08,413 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 17:40:08,414 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 17:40:08,415 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 17:40:08,415 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 17:40:08,416 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 17:40:08,416 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 17:40:08,417 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 17:40:08,417 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 17:40:08,418 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 17:40:08,418 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 17:40:08,418 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 17:40:08,419 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 17:40:08,420 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 17:40:08,421 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 17:40:08,422 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 17:40:08,422 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 17:40:08,423 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 17:40:08,423 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 17:40:08,424 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 17:40:08,424 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 17:40:08,424 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 17:40:08,425 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 17:40:08,425 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 17:40:08,425 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 17:40:08,425 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 17:40:08,425 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 17:40:08,426 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 17:40:08,426 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 17:40:08,427 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 17:40:08,427 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 17:40:08,427 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 17:40:08,427 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 17:40:08,427 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 17:40:08,428 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 17:40:08,428 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 17:40:08,428 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 17:40:08,433 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 17:40:08,434 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 17:40:08,434 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 17:40:08,434 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 17:40:08,434 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 17:40:08,434 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 17:40:08,435 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 17:40:08,435 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 17:40:08,435 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 17:40:08,435 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 17:40:08,435 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 17:40:08,435 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 17:40:08,435 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 17:40:08,435 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 17:40:08,435 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 17:40:08,435 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 17:40:08,435 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 17:40:08,435 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 17:40:08,435 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 17:40:08,435 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 17:40:08,436 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 17:40:08,436 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 17:40:08,436 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 17:40:08,436 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 17:40:08,436 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 17:40:08,436 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 17:40:08,454 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 17:40:08,465 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 17:40:08,467 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 17:40:08,468 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 17:40:08,468 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 17:40:08,469 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl
[2020-11-25 17:40:08,469 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl'
[2020-11-25 17:40:08,549 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 17:40:08,550 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 17:40:08,550 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 17:40:08,550 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 17:40:08,550 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 17:40:08,580 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:40:08" (1/1) ...
[2020-11-25 17:40:08,582 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:40:08" (1/1) ...
[2020-11-25 17:40:08,615 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:40:08" (1/1) ...
[2020-11-25 17:40:08,615 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:40:08" (1/1) ...
[2020-11-25 17:40:08,635 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:40:08" (1/1) ...
[2020-11-25 17:40:08,644 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:40:08" (1/1) ...
[2020-11-25 17:40:08,652 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:40:08" (1/1) ...
[2020-11-25 17:40:08,660 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 17:40:08,660 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 17:40:08,661 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 17:40:08,662 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 17:40:08,666 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:40:08" (1/1) ...
[2020-11-25 17:40:08,686 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(HBC.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_HBC[this][from] && value <= allowed_HBC[this][from][msg.sender] && balances_HBC[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_HBC[this][to] >= 0 && balances_HBC[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_HBC[this][from] >= 0 &&  balances_HBC[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_HBC[this][from][msg.sender] >= 0 && allowed_HBC[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(HBC.transferFrom(from, to, value), return == true && balances_HBC[this][from] == old(balances_HBC[this][from]) - value && balances_HBC[this][to] == old(balances_HBC[this][to]) + value && allowed_HBC[this][from][msg.sender] == old(allowed_HBC[this][from][msg.sender]) - value && totalTokenSupply_HBC[this] == old(totalTokenSupply_HBC[this]) && balances_HBC[this][p1] == old(balances_HBC[this][p1]) && allowed_HBC[this][p2][p3] == old(allowed_HBC[this][p2][p3]) && stopped_HBC[this] == old(stopped_HBC[this]) && owner_HBC[this] == old(owner_HBC[this]) && totalBurned_HBC[this] == old(totalBurned_HBC[this]) && forbiddenAddresses_HBC[this] == old(forbiddenAddresses_HBC[this]))))
[2020-11-25 17:40:08,691 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(HBC.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_HBC[this][from] && value <= allowed_HBC[this][from][msg.sender] && balances_HBC[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_HBC[this][to] >= 0 && balances_HBC[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_HBC[this][from] >= 0 &&  balances_HBC[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_HBC[this][from][msg.sender] >= 0 && allowed_HBC[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(HBC.transferFrom(from, to, value), return == true && balances_HBC[this][from] == old(balances_HBC[this][from]) - value && balances_HBC[this][to] == old(balances_HBC[this][to]) + value && allowed_HBC[this][from][msg.sender] == old(allowed_HBC[this][from][msg.sender]) - value && totalTokenSupply_HBC[this] == old(totalTokenSupply_HBC[this]) && balances_HBC[this][p1] == old(balances_HBC[this][p1]) && allowed_HBC[this][p2][p3] == old(allowed_HBC[this][p2][p3]) && stopped_HBC[this] == old(stopped_HBC[this]) && owner_HBC[this] == old(owner_HBC[this]) && totalBurned_HBC[this] == old(totalBurned_HBC[this]) && forbiddenAddresses_HBC[this] == old(forbiddenAddresses_HBC[this]))))
[2020-11-25 17:40:08,699 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(HBC.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_HBC[this][from] && value <= allowed_HBC[this][from][msg.sender] && balances_HBC[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_HBC[this][to] >= 0 && balances_HBC[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_HBC[this][from] >= 0 &&  balances_HBC[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_HBC[this][from][msg.sender] >= 0 && allowed_HBC[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(HBC.transferFrom(from, to, value), return == true && balances_HBC[this][from] == old(balances_HBC[this][from]) - value && balances_HBC[this][to] == old(balances_HBC[this][to]) + value && allowed_HBC[this][from][msg.sender] == old(allowed_HBC[this][from][msg.sender]) - value && totalTokenSupply_HBC[this] == old(totalTokenSupply_HBC[this]) && balances_HBC[this][p1] == old(balances_HBC[this][p1]) && allowed_HBC[this][p2][p3] == old(allowed_HBC[this][p2][p3]) && stopped_HBC[this] == old(stopped_HBC[this]) && owner_HBC[this] == old(owner_HBC[this]) && totalBurned_HBC[this] == old(totalBurned_HBC[this]) && forbiddenAddresses_HBC[this] == old(forbiddenAddresses_HBC[this]))))
[2020-11-25 17:40:08,706 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s570 && p1!=_to_s570 ) && ( p2!=_from_s570 || p3!=msg.sender ) ) && _from_s570!=_to_s570 ) && _value_s570<=balances_HBC[this][_from_s570] ) && _value_s570<=allowed_HBC[this][_from_s570][msg.sender] ) && ( balances_HBC[this][_to_s570] + _value_s570 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s570>=0 ) && _value_s570<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_HBC[this][_to_s570]>=0 ) && balances_HBC[this][_to_s570]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_HBC[this][_from_s570]>=0 ) && balances_HBC[this][_from_s570]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_HBC[this][_from_s570][msg.sender]>=0 ) && allowed_HBC[this][_from_s570][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_from_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[_from_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>],IdentifierExpression[_to_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[_from_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[_from_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[_to_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],IdentifierExpression[_value_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[_to_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[_to_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[_from_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[_from_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[_from_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[_from_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 17:40:08,709 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( __ret_0_==true && balances_HBC[this][_from_s570]==( ( old(balances_HBC[this][_from_s570]) ) - _value_s570 ) ) && balances_HBC[this][_to_s570]==( ( old(balances_HBC[this][_to_s570]) ) + _value_s570 ) ) && allowed_HBC[this][_from_s570][msg.sender]==( ( old(allowed_HBC[this][_from_s570][msg.sender]) ) - _value_s570 ) ) && totalTokenSupply_HBC[this]==( old(totalTokenSupply_HBC[this]) ) ) && balances_HBC[this][p1]==( old(balances_HBC[this][p1]) ) ) && allowed_HBC[this][p2][p3]==( old(allowed_HBC[this][p2][p3]) ) ) && stopped_HBC[this]==( old(stopped_HBC[this]) ) ) && owner_HBC[this]==( old(owner_HBC[this]) ) ) && totalBurned_HBC[this]==( old(totalBurned_HBC[this]) ) ) && forbiddenAddresses_HBC[this]==( old(forbiddenAddresses_HBC[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_HBC>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[_from_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[_from_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]]],IdentifierExpression[_value_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[_to_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[_to_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]]],IdentifierExpression[_value_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[_from_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[_from_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]]],IdentifierExpression[_value_s570,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalTokenSupply_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalTokenSupply_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[stopped_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[stopped_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalBurned_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalBurned_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[forbiddenAddresses_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[forbiddenAddresses_HBC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_HBC>]]]]]]
[2020-11-25 17:40:08,714 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(HBC.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_HBC[this][from] && value <= allowed_HBC[this][from][msg.sender] && balances_HBC[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_HBC[this][to] >= 0 && balances_HBC[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_HBC[this][from] >= 0 &&  balances_HBC[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_HBC[this][from][msg.sender] >= 0 && allowed_HBC[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(HBC.transferFrom(from, to, value), return == true && balances_HBC[this][from] == old(balances_HBC[this][from]) - value && balances_HBC[this][to] == old(balances_HBC[this][to]) + value && allowed_HBC[this][from][msg.sender] == old(allowed_HBC[this][from][msg.sender]) - value && totalTokenSupply_HBC[this] == old(totalTokenSupply_HBC[this]) && balances_HBC[this][p1] == old(balances_HBC[this][p1]) && allowed_HBC[this][p2][p3] == old(allowed_HBC[this][p2][p3]) && stopped_HBC[this] == old(stopped_HBC[this]) && owner_HBC[this] == old(owner_HBC[this]) && totalBurned_HBC[this] == old(totalBurned_HBC[this]) && forbiddenAddresses_HBC[this] == old(forbiddenAddresses_HBC[this]))))
[2020-11-25 17:40:08,715 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_HBC0) ==> ( <>AP(success_transferFrom_HBC0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 17:40:08,723 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:40:08 PropertyContainer
[2020-11-25 17:40:08,724 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 17:40:08,724 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 17:40:08,724 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 17:40:08,724 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 17:40:08,725 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:40:08" (1/2) ...
[2020-11-25 17:40:08,725 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 17:40:08,725 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 17:40:08,739 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:40:08" (2/2) ...
[2020-11-25 17:40:08,739 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 17:40:08,739 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 17:40:08,739 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 17:40:08,740 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 17:40:08,740 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:40:08" (1/2) ...
[2020-11-25 17:40:08,792 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 17:40:08,792 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 17:40:08,792 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 17:40:08,792 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 17:40:08,792 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 17:40:08,792 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 17:40:08,792 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 17:40:08,792 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 17:40:08,793 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 17:40:08,793 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 17:40:08,793 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 17:40:08,793 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 17:40:08,793 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 17:40:08,793 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 17:40:08,793 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 17:40:08,793 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 17:40:08,794 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 17:40:08,794 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 17:40:08,794 INFO  L130     BoogieDeclarations]: Found specification of procedure HBC_HBC_NoBaseCtor__success
[2020-11-25 17:40:08,794 INFO  L130     BoogieDeclarations]: Found specification of procedure HBC_HBC
[2020-11-25 17:40:08,794 INFO  L138     BoogieDeclarations]: Found implementation of procedure HBC_HBC
[2020-11-25 17:40:08,794 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseTransfer_HBC
[2020-11-25 17:40:08,794 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseTransfer_HBC
[2020-11-25 17:40:08,795 INFO  L130     BoogieDeclarations]: Found specification of procedure resumeTransfer_HBC
[2020-11-25 17:40:08,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure resumeTransfer_HBC
[2020-11-25 17:40:08,795 INFO  L130     BoogieDeclarations]: Found specification of procedure addToForbiddenAddresses~address_HBC
[2020-11-25 17:40:08,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure addToForbiddenAddresses~address_HBC
[2020-11-25 17:40:08,795 INFO  L130     BoogieDeclarations]: Found specification of procedure removeFromForbiddenAddresses~address_HBC
[2020-11-25 17:40:08,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeFromForbiddenAddresses~address_HBC
[2020-11-25 17:40:08,795 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_HBC
[2020-11-25 17:40:08,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_HBC
[2020-11-25 17:40:08,795 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_HBC
[2020-11-25 17:40:08,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_HBC
[2020-11-25 17:40:08,796 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_HBC
[2020-11-25 17:40:08,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_HBC
[2020-11-25 17:40:08,796 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_HBC
[2020-11-25 17:40:08,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_HBC
[2020-11-25 17:40:08,796 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_HBC
[2020-11-25 17:40:08,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_HBC
[2020-11-25 17:40:08,796 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_HBC
[2020-11-25 17:40:08,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_HBC
[2020-11-25 17:40:08,796 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_HBC
[2020-11-25 17:40:08,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_HBC
[2020-11-25 17:40:08,797 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_HBC
[2020-11-25 17:40:08,797 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_HBC
[2020-11-25 17:40:08,797 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_HBC
[2020-11-25 17:40:08,797 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_HBC
[2020-11-25 17:40:08,797 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_HBC
[2020-11-25 17:40:08,797 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_HBC
[2020-11-25 17:40:08,797 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_HBC
[2020-11-25 17:40:08,797 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_HBC
[2020-11-25 17:40:08,797 INFO  L130     BoogieDeclarations]: Found specification of procedure TOKEN_DECIMALS_HBC
[2020-11-25 17:40:08,797 INFO  L138     BoogieDeclarations]: Found implementation of procedure TOKEN_DECIMALS_HBC
[2020-11-25 17:40:08,797 INFO  L130     BoogieDeclarations]: Found specification of procedure name_HBC
[2020-11-25 17:40:08,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_HBC
[2020-11-25 17:40:08,798 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_HBC
[2020-11-25 17:40:08,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_HBC
[2020-11-25 17:40:08,798 INFO  L130     BoogieDeclarations]: Found specification of procedure totalTokenSupply_HBC
[2020-11-25 17:40:08,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalTokenSupply_HBC
[2020-11-25 17:40:08,798 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_HBC
[2020-11-25 17:40:08,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_HBC
[2020-11-25 17:40:08,798 INFO  L130     BoogieDeclarations]: Found specification of procedure stopped_HBC
[2020-11-25 17:40:08,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopped_HBC
[2020-11-25 17:40:08,798 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_HBC
[2020-11-25 17:40:08,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_HBC
[2020-11-25 17:40:08,799 INFO  L130     BoogieDeclarations]: Found specification of procedure totalBurned_HBC
[2020-11-25 17:40:08,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalBurned_HBC
[2020-11-25 17:40:08,799 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_HBC
[2020-11-25 17:40:08,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_HBC
[2020-11-25 17:40:08,799 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 17:40:08,799 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 17:40:08,799 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 17:40:08,799 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 17:40:08,800 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 17:40:08,800 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 17:40:08,800 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 17:40:08,800 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 17:40:08,800 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_HBC
[2020-11-25 17:40:08,800 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 17:40:08,800 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 17:40:08,800 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 17:40:08,801 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 17:40:08,801 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 17:40:08,801 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 17:40:08,801 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 17:40:08,801 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 17:40:08,801 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 17:40:08,801 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 17:40:08,801 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 17:40:08,801 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 17:40:08,802 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 17:40:08,802 INFO  L130     BoogieDeclarations]: Found specification of procedure HBC_HBC_NoBaseCtor__fail
[2020-11-25 17:40:08,802 INFO  L130     BoogieDeclarations]: Found specification of procedure HBC_HBC__success
[2020-11-25 17:40:08,802 INFO  L130     BoogieDeclarations]: Found specification of procedure HBC_HBC__fail
[2020-11-25 17:40:08,802 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseTransfer_HBC__success
[2020-11-25 17:40:08,802 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseTransfer_HBC__fail
[2020-11-25 17:40:08,802 INFO  L130     BoogieDeclarations]: Found specification of procedure resumeTransfer_HBC__success
[2020-11-25 17:40:08,802 INFO  L130     BoogieDeclarations]: Found specification of procedure resumeTransfer_HBC__fail
[2020-11-25 17:40:08,802 INFO  L130     BoogieDeclarations]: Found specification of procedure addToForbiddenAddresses~address_HBC__success
[2020-11-25 17:40:08,802 INFO  L130     BoogieDeclarations]: Found specification of procedure addToForbiddenAddresses~address_HBC__fail
[2020-11-25 17:40:08,802 INFO  L130     BoogieDeclarations]: Found specification of procedure removeFromForbiddenAddresses~address_HBC__success
[2020-11-25 17:40:08,803 INFO  L130     BoogieDeclarations]: Found specification of procedure removeFromForbiddenAddresses~address_HBC__fail
[2020-11-25 17:40:08,803 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_HBC__success
[2020-11-25 17:40:08,803 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_HBC__fail
[2020-11-25 17:40:08,803 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_HBC__success
[2020-11-25 17:40:08,803 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_HBC__fail
[2020-11-25 17:40:08,803 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_HBC__success
[2020-11-25 17:40:08,803 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_HBC__fail
[2020-11-25 17:40:08,803 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_HBC__success
[2020-11-25 17:40:08,803 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_HBC__fail
[2020-11-25 17:40:08,803 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_HBC__success
[2020-11-25 17:40:08,804 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_HBC__fail
[2020-11-25 17:40:08,804 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_HBC__success
[2020-11-25 17:40:08,804 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_HBC__fail
[2020-11-25 17:40:08,804 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_HBC__success
[2020-11-25 17:40:08,804 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_HBC__fail
[2020-11-25 17:40:08,804 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_HBC__success
[2020-11-25 17:40:08,804 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_HBC__fail
[2020-11-25 17:40:08,804 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_HBC__success
[2020-11-25 17:40:08,804 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_HBC__fail
[2020-11-25 17:40:08,804 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_HBC__success
[2020-11-25 17:40:08,805 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_HBC__fail
[2020-11-25 17:40:08,805 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_HBC__success
[2020-11-25 17:40:08,805 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_HBC__fail
[2020-11-25 17:40:08,805 INFO  L130     BoogieDeclarations]: Found specification of procedure TOKEN_DECIMALS_HBC__success
[2020-11-25 17:40:08,805 INFO  L130     BoogieDeclarations]: Found specification of procedure TOKEN_DECIMALS_HBC__fail
[2020-11-25 17:40:08,805 INFO  L130     BoogieDeclarations]: Found specification of procedure name_HBC__success
[2020-11-25 17:40:08,805 INFO  L130     BoogieDeclarations]: Found specification of procedure name_HBC__fail
[2020-11-25 17:40:08,805 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_HBC__success
[2020-11-25 17:40:08,805 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_HBC__fail
[2020-11-25 17:40:08,806 INFO  L130     BoogieDeclarations]: Found specification of procedure totalTokenSupply_HBC__success
[2020-11-25 17:40:08,806 INFO  L130     BoogieDeclarations]: Found specification of procedure totalTokenSupply_HBC__fail
[2020-11-25 17:40:08,806 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_HBC__success
[2020-11-25 17:40:08,806 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_HBC__fail
[2020-11-25 17:40:08,806 INFO  L130     BoogieDeclarations]: Found specification of procedure stopped_HBC__success
[2020-11-25 17:40:08,806 INFO  L130     BoogieDeclarations]: Found specification of procedure stopped_HBC__fail
[2020-11-25 17:40:08,806 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_HBC__success
[2020-11-25 17:40:08,806 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_HBC__fail
[2020-11-25 17:40:08,806 INFO  L130     BoogieDeclarations]: Found specification of procedure totalBurned_HBC__success
[2020-11-25 17:40:08,807 INFO  L130     BoogieDeclarations]: Found specification of procedure totalBurned_HBC__fail
[2020-11-25 17:40:08,807 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_HBC__success
[2020-11-25 17:40:08,807 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_HBC__fail
[2020-11-25 17:40:08,807 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 17:40:08,807 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 17:40:08,807 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 17:40:08,807 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 17:40:08,807 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 17:40:08,807 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 17:40:08,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 17:40:08,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 17:40:08,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 17:40:08,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 17:40:08,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 17:40:08,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 17:40:08,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 17:40:08,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 17:40:08,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 17:40:08,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 17:40:08,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 17:40:08,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 17:40:08,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 17:40:08,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 17:40:08,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 17:40:08,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 17:40:08,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 17:40:08,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 17:40:08,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure HBC_HBC_NoBaseCtor__fail
[2020-11-25 17:40:08,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure HBC_HBC_NoBaseCtor__success
[2020-11-25 17:40:08,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure HBC_HBC__fail
[2020-11-25 17:40:08,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure HBC_HBC__success
[2020-11-25 17:40:08,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseTransfer_HBC__fail
[2020-11-25 17:40:08,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseTransfer_HBC__success
[2020-11-25 17:40:08,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure resumeTransfer_HBC__fail
[2020-11-25 17:40:08,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure resumeTransfer_HBC__success
[2020-11-25 17:40:08,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure addToForbiddenAddresses~address_HBC__fail
[2020-11-25 17:40:08,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure addToForbiddenAddresses~address_HBC__success
[2020-11-25 17:40:08,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeFromForbiddenAddresses~address_HBC__fail
[2020-11-25 17:40:08,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeFromForbiddenAddresses~address_HBC__success
[2020-11-25 17:40:08,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_HBC__fail
[2020-11-25 17:40:08,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_HBC__success
[2020-11-25 17:40:08,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_HBC__fail
[2020-11-25 17:40:08,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_HBC__success
[2020-11-25 17:40:08,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_HBC__fail
[2020-11-25 17:40:08,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_HBC__success
[2020-11-25 17:40:08,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_HBC__fail
[2020-11-25 17:40:08,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_HBC__success
[2020-11-25 17:40:08,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_HBC__fail
[2020-11-25 17:40:08,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_HBC__success
[2020-11-25 17:40:08,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_HBC__fail
[2020-11-25 17:40:08,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_HBC__success
[2020-11-25 17:40:08,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_HBC__fail
[2020-11-25 17:40:08,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_HBC__success
[2020-11-25 17:40:08,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_HBC__fail
[2020-11-25 17:40:08,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_HBC__success
[2020-11-25 17:40:08,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_HBC__fail
[2020-11-25 17:40:08,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_HBC__success
[2020-11-25 17:40:08,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_HBC__fail
[2020-11-25 17:40:08,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_HBC__success
[2020-11-25 17:40:08,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_HBC__fail
[2020-11-25 17:40:08,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_HBC__success
[2020-11-25 17:40:08,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure TOKEN_DECIMALS_HBC__fail
[2020-11-25 17:40:08,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure TOKEN_DECIMALS_HBC__success
[2020-11-25 17:40:08,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_HBC__fail
[2020-11-25 17:40:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_HBC__success
[2020-11-25 17:40:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_HBC__fail
[2020-11-25 17:40:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_HBC__success
[2020-11-25 17:40:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalTokenSupply_HBC__fail
[2020-11-25 17:40:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalTokenSupply_HBC__success
[2020-11-25 17:40:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_HBC__fail
[2020-11-25 17:40:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_HBC__success
[2020-11-25 17:40:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopped_HBC__fail
[2020-11-25 17:40:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopped_HBC__success
[2020-11-25 17:40:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_HBC__fail
[2020-11-25 17:40:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_HBC__success
[2020-11-25 17:40:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalBurned_HBC__fail
[2020-11-25 17:40:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalBurned_HBC__success
[2020-11-25 17:40:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_HBC__fail
[2020-11-25 17:40:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_HBC__success
[2020-11-25 17:40:08,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 17:40:08,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 17:40:08,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 17:40:08,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 17:40:08,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 17:40:08,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 17:40:08,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 17:40:08,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 17:40:08,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 17:40:08,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 17:40:08,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 17:40:08,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 17:40:08,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_HBC
[2020-11-25 17:40:08,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 17:40:08,814 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 17:40:08,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 17:40:09,182 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 17:40:09,183 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 17:40:09,183 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 17:40:09,261 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 17:40:09,522 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 17:40:09,522 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 17:40:09,524 INFO  L202        PluginConnector]: Adding new model HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:40:09 BoogieIcfgContainer
[2020-11-25 17:40:09,525 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:40:08" (2/2) ...
[2020-11-25 17:40:09,525 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 17:40:09,525 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6f03e335 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:40:09, skipping insertion in model container
[2020-11-25 17:40:09,525 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 17:40:09,525 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 17:40:09,525 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 17:40:09,527 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 17:40:09,527 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:40:08" (1/3) ...
[2020-11-25 17:40:09,528 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@7752cd0e and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:40:09, skipping insertion in model container
[2020-11-25 17:40:09,528 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:40:08" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 17:40:09,566 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:40:09 NWAContainer
[2020-11-25 17:40:09,567 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 17:40:09,567 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 17:40:09,567 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 17:40:09,568 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 17:40:09,569 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:40:09" (3/4) ...
[2020-11-25 17:40:09,569 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@62dfe39 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:40:09, skipping insertion in model container
[2020-11-25 17:40:09,570 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:40:09" (4/4) ...
[2020-11-25 17:40:09,573 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 17:40:09,577 INFO  L110   BuchiProductObserver]: Initial RCFG 1759 locations, 2200 edges
[2020-11-25 17:40:09,577 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 17:40:09,588 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 17:40:10,867 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 17:40:10,872 INFO  L110   BuchiProductObserver]: BuchiProgram size 4126 locations, 7067 edges
[2020-11-25 17:40:10,872 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:40:10 BoogieIcfgContainer
[2020-11-25 17:40:10,872 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 17:40:10,873 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 17:40:10,873 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 17:40:10,874 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 17:40:10,875 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:40:10" (1/1) ...
[2020-11-25 17:40:10,954 INFO  L313           BlockEncoder]: Initial Icfg 4126 locations, 7067 edges
[2020-11-25 17:40:10,954 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 17:40:10,955 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 17:40:10,955 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 17:40:10,956 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 17:40:10,968 INFO  L70    emoveInfeasibleEdges]: Removed 60 edges and 9 locations because of local infeasibility
[2020-11-25 17:40:10,975 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 17:40:10,989 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 17:40:10,993 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 17:40:10,996 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 17:40:10,996 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 17:40:11,001 INFO  L313           BlockEncoder]: Encoded RCFG 4086 locations, 6961 edges
[2020-11-25 17:40:11,001 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:40:11 BasicIcfg
[2020-11-25 17:40:11,001 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 17:40:11,002 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 17:40:11,002 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 17:40:11,004 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 17:40:11,004 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:40:11,004 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:40:08" (1/6) ...
[2020-11-25 17:40:11,006 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d95c5ec and model type HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:40:11, skipping insertion in model container
[2020-11-25 17:40:11,006 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:40:11,006 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:40:08" (2/6) ...
[2020-11-25 17:40:11,006 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d95c5ec and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:40:11, skipping insertion in model container
[2020-11-25 17:40:11,006 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:40:11,006 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:40:09" (3/6) ...
[2020-11-25 17:40:11,006 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d95c5ec and model type HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:40:11, skipping insertion in model container
[2020-11-25 17:40:11,006 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:40:11,006 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:40:09" (4/6) ...
[2020-11-25 17:40:11,006 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d95c5ec and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:40:11, skipping insertion in model container
[2020-11-25 17:40:11,006 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:40:11,006 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:40:10" (5/6) ...
[2020-11-25 17:40:11,007 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d95c5ec and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:40:11, skipping insertion in model container
[2020-11-25 17:40:11,007 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:40:11,007 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:40:11" (6/6) ...
[2020-11-25 17:40:11,008 INFO  L404   chiAutomizerObserver]: Analyzing ICFG HBC_0xfb9553afa2b5c19c5f8e5b8ee175fc01abd1555f_transferfrom-normal.bpl_BEv2
[2020-11-25 17:40:11,042 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 17:40:11,043 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 17:40:11,043 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 17:40:11,043 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 17:40:11,043 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 17:40:11,043 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 17:40:11,043 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 17:40:11,043 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 17:40:11,043 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 17:40:11,077 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4086 states.
[2020-11-25 17:40:11,126 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:40:11,126 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:40:11,126 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:40:11,134 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:40:11,134 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:40:11,134 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 17:40:11,134 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4086 states.
[2020-11-25 17:40:11,156 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:40:11,156 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:40:11,156 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:40:11,158 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:40:11,158 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_HBC0 := false;
[L3]                 call_transferFrom_HBC0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4521]              assume null == 0;
[L4522]  CALL        call this := FreshRefGenerator__success();
[L2237]              havoc newRef;
[L2238]              assume Alloc[newRef] == false;
[L2239]              Alloc[newRef] := true;
[L2240]              assume newRef != null;
[L4522]  RET         call this := FreshRefGenerator__success();
[L4523]              assume now >= 0;
[L4524]              assume DType[this] == HBC;
[L4525]              assume msgvalue_MSG == 0;
[L4526]              gas := gas - 53000;
[L4527]  CALL        call HBC_HBC(this, msgsender_MSG, msgvalue_MSG);
[L255]               havoc __exception;
[L256]               revert := false;
[L257]   COND FALSE  !(__exception)
[L284]   CALL        call HBC_HBC__success(this, msgsender_MSG, msgvalue_MSG);
[L2496]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2425]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2410]              assume msgsender_MSG != null;
[L2411]              Balance[this] := 0;
[L2425]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2426]  COND FALSE  !(revert)
[L2496]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2497]  COND TRUE   revert
[L284]   RET         call HBC_HBC__success(this, msgsender_MSG, msgvalue_MSG);
[L285]               assume !revert && gas >= 0;
[L4527]  RET         call HBC_HBC(this, msgsender_MSG, msgvalue_MSG);
[L4528]              assume !revert && gas >= 0;

Loop:
[L4531]  CALL        call CorralChoice_HBC(this);
[L4312]              havoc msgsender_MSG;
[L4313]              havoc msgvalue_MSG;
[L4314]              havoc choice;
[L4315]              havoc __ret_0_totalSupply;
[L4316]              havoc _owner_s433;
[L4317]              havoc __ret_0_balanceOf;
[L4318]              havoc _address_s750;
[L4319]              havoc _tokens_s750;
[L4320]              havoc __ret_0_transfer;
[L4321]              havoc _owner_s648;
[L4322]              havoc _spender_s648;
[L4323]              havoc __ret_0_allowance;
[L4324]              havoc _from_s570;
[L4325]              havoc _to_s570;
[L4326]              havoc _value_s570;
[L4327]              havoc __ret_0_transferFrom;
[L4328]              havoc _spender_s612;
[L4329]              havoc _tokens_s612;
[L4330]              havoc __ret_0_approve;
[L4331]              havoc __ret_0_TOKEN_DECIMALS;
[L4332]              havoc __ret_0_name;
[L4333]              havoc __ret_0_symbol;
[L4334]              havoc __ret_0_totalTokenSupply;
[L4335]              havoc __ret_0_decimals;
[L4336]              havoc __ret_0_stopped;
[L4337]              havoc __ret_0_owner;
[L4338]              havoc __ret_0_totalBurned;
[L4339]              havoc arg951_s0;
[L4340]              havoc __ret_0_balances;
[L4341]              havoc _newAddr_s337;
[L4342]              havoc _newAddr_s350;
[L4343]              havoc _value_s413;
[L4344]              havoc __ret_0_burn;
[L4345]              havoc _newOwner_s812;
[L4346]              havoc _spender_s881;
[L4347]              havoc _addedValue_s881;
[L4348]              havoc success_s881;
[L4349]              havoc _spender_s948;
[L4350]              havoc _subtractedValue_s948;
[L4351]              havoc success_s948;
[L4352]              havoc tmpNow;
[L4353]              havoc gas;
[L4354]              assume gas > 4000000 && gas <= 8000000;
[L4355]              tmpNow := now;
[L4356]              havoc now;
[L4357]              assume now > tmpNow;
[L4358]              assume msgsender_MSG != null;
[L4359]              assume DType[msgsender_MSG] != SafeMath;
[L4360]              assume DType[msgsender_MSG] != ERC20Interface;
[L4361]              assume DType[msgsender_MSG] != HBC;
[L4362]              Alloc[msgsender_MSG] := true;
[L4363]  COND TRUE   choice == 24
[L4364]              gas := gas - 21000;
[L4365]  COND FALSE  !(gas >= 0)
[L4531]  RET         call CorralChoice_HBC(this);

[2020-11-25 17:40:11,172 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:40:11,172 INFO  L82        PathProgramCache]: Analyzing trace with hash -1134774765, now seen corresponding path program 1 times
[2020-11-25 17:40:11,175 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:40:11,194 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:40:11,232 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 17:40:11,233 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:40:11,233 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 17:40:11,462 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:40:11,472 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 17:40:11,473 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 17:40:11,474 INFO  L87              Difference]: Start difference. First operand 4086 states. Second operand 4 states.
[2020-11-25 17:40:12,628 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:40:12,628 INFO  L93              Difference]: Finished difference Result 5014 states and 8213 transitions.
[2020-11-25 17:40:12,629 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 17:40:12,630 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5014 states and 8213 transitions.
[2020-11-25 17:40:12,658 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 17:40:12,693 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5014 states to 4778 states and 7812 transitions.
[2020-11-25 17:40:12,694 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 16
[2020-11-25 17:40:12,699 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1544
[2020-11-25 17:40:12,700 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4778 states and 7812 transitions.
[2020-11-25 17:40:12,715 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:40:12,715 INFO  L728         BuchiCegarLoop]: Abstraction has 4778 states and 7812 transitions.
[2020-11-25 17:40:12,730 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4778 states and 7812 transitions.
[2020-11-25 17:40:12,792 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4778 to 3574.
[2020-11-25 17:40:12,793 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3574 states.
[2020-11-25 17:40:12,800 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3574 states to 3574 states and 5551 transitions.
[2020-11-25 17:40:12,800 INFO  L751         BuchiCegarLoop]: Abstraction has 3574 states and 5551 transitions.
[2020-11-25 17:40:12,801 INFO  L631         BuchiCegarLoop]: Abstraction has 3574 states and 5551 transitions.
[2020-11-25 17:40:12,801 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 17:40:12,801 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3574 states and 5551 transitions.
[2020-11-25 17:40:12,810 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:40:12,810 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:40:12,810 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:40:12,811 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:40:12,811 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_HBC0 := false;
[L3]                 call_transferFrom_HBC0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4521]              assume null == 0;
[L4522]  CALL        call this := FreshRefGenerator__success();
[L2237]              havoc newRef;
[L2238]              assume Alloc[newRef] == false;
[L2239]              Alloc[newRef] := true;
[L2240]              assume newRef != null;
[L4522]  RET         call this := FreshRefGenerator__success();
[L4523]              assume now >= 0;
[L4524]              assume DType[this] == HBC;
[L4525]              assume msgvalue_MSG == 0;
[L4526]              gas := gas - 53000;
[L4527]  CALL        call HBC_HBC(this, msgsender_MSG, msgvalue_MSG);
[L255]               havoc __exception;
[L256]               revert := false;
[L257]   COND FALSE  !(__exception)
[L284]   CALL        call HBC_HBC__success(this, msgsender_MSG, msgvalue_MSG);
[L2496]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2425]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2410]              assume msgsender_MSG != null;
[L2411]              Balance[this] := 0;
[L2425]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2426]  COND FALSE  !(revert)
[L2496]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2497]  COND FALSE  !(revert)
[L2500]  CALL        call HBC_HBC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2459]              assume msgsender_MSG != null;
[L2460]              Balance[this] := 0;
[L2461]              TOKEN_DECIMALS_HBC[this] := 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2462]              name_HBC[this] := 1908934807;
[L2463]              symbol_HBC[this] := -845215461;
[L2464]              totalTokenSupply_HBC[this] := 10000000000 * TOKEN_DECIMALS_HBC[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2465]              decimals_HBC[this] := 18;
[L2466]              stopped_HBC[this] := false;
[L2467]              owner_HBC[this] := null;
[L2468]              totalBurned_HBC[this] := 0;
[L2469]              balances_HBC[this] := zeroRefintArr();
[L2470]              sum_balances0[this] := 0;
[L2471]              allowed_HBC[this] := zeroRefRefintArr();
[L2472]              sum_allowed1[this] := 0;
[L2473]              forbiddenAddresses_HBC[this] := zeroRefRefArr();
[L2475]              owner_HBC[this] := msgsender_MSG;
[L2476]              sum_balances0[this] := sum_balances0[this] - balances_HBC[this][owner_HBC[this]];
[L2477]              balances_HBC[this][owner_HBC[this]] := totalTokenSupply_HBC[this];
[L2478]              sum_balances0[this] := sum_balances0[this] + balances_HBC[this][owner_HBC[this]];
[L2479]              assert { :EventEmitted "Transfer_HBC" } true;
[L2500]  RET         call HBC_HBC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  COND FALSE  !(revert)
[L284]   RET         call HBC_HBC__success(this, msgsender_MSG, msgvalue_MSG);
[L285]               assume !revert && gas >= 0;
[L4527]  RET         call HBC_HBC(this, msgsender_MSG, msgvalue_MSG);
[L4528]              assume !revert && gas >= 0;

Loop:
[L4531]  CALL        call CorralChoice_HBC(this);
[L4312]              havoc msgsender_MSG;
[L4313]              havoc msgvalue_MSG;
[L4314]              havoc choice;
[L4315]              havoc __ret_0_totalSupply;
[L4316]              havoc _owner_s433;
[L4317]              havoc __ret_0_balanceOf;
[L4318]              havoc _address_s750;
[L4319]              havoc _tokens_s750;
[L4320]              havoc __ret_0_transfer;
[L4321]              havoc _owner_s648;
[L4322]              havoc _spender_s648;
[L4323]              havoc __ret_0_allowance;
[L4324]              havoc _from_s570;
[L4325]              havoc _to_s570;
[L4326]              havoc _value_s570;
[L4327]              havoc __ret_0_transferFrom;
[L4328]              havoc _spender_s612;
[L4329]              havoc _tokens_s612;
[L4330]              havoc __ret_0_approve;
[L4331]              havoc __ret_0_TOKEN_DECIMALS;
[L4332]              havoc __ret_0_name;
[L4333]              havoc __ret_0_symbol;
[L4334]              havoc __ret_0_totalTokenSupply;
[L4335]              havoc __ret_0_decimals;
[L4336]              havoc __ret_0_stopped;
[L4337]              havoc __ret_0_owner;
[L4338]              havoc __ret_0_totalBurned;
[L4339]              havoc arg951_s0;
[L4340]              havoc __ret_0_balances;
[L4341]              havoc _newAddr_s337;
[L4342]              havoc _newAddr_s350;
[L4343]              havoc _value_s413;
[L4344]              havoc __ret_0_burn;
[L4345]              havoc _newOwner_s812;
[L4346]              havoc _spender_s881;
[L4347]              havoc _addedValue_s881;
[L4348]              havoc success_s881;
[L4349]              havoc _spender_s948;
[L4350]              havoc _subtractedValue_s948;
[L4351]              havoc success_s948;
[L4352]              havoc tmpNow;
[L4353]              havoc gas;
[L4354]              assume gas > 4000000 && gas <= 8000000;
[L4355]              tmpNow := now;
[L4356]              havoc now;
[L4357]              assume now > tmpNow;
[L4358]              assume msgsender_MSG != null;
[L4359]              assume DType[msgsender_MSG] != SafeMath;
[L4360]              assume DType[msgsender_MSG] != ERC20Interface;
[L4361]              assume DType[msgsender_MSG] != HBC;
[L4362]              Alloc[msgsender_MSG] := true;
[L4363]  COND TRUE   choice == 24
[L4364]              gas := gas - 21000;
[L4365]  COND FALSE  !(gas >= 0)
[L4531]  RET         call CorralChoice_HBC(this);

[2020-11-25 17:40:12,814 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:40:12,814 INFO  L82        PathProgramCache]: Analyzing trace with hash 410936944, now seen corresponding path program 1 times
[2020-11-25 17:40:12,814 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:40:12,820 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:40:12,831 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 17:40:12,831 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:40:12,831 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 17:40:12,832 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:40:12,832 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 17:40:12,833 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 17:40:12,833 INFO  L87              Difference]: Start difference. First operand 3574 states and 5551 transitions. cyclomatic complexity: 1979 Second operand 4 states.
[2020-11-25 17:40:13,438 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:40:13,438 INFO  L93              Difference]: Finished difference Result 3435 states and 3736 transitions.
[2020-11-25 17:40:13,439 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 17:40:13,439 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3435 states and 3736 transitions.
[2020-11-25 17:40:13,449 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:40:13,459 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3435 states to 3435 states and 3736 transitions.
[2020-11-25 17:40:13,459 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1087
[2020-11-25 17:40:13,459 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1087
[2020-11-25 17:40:13,459 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3435 states and 3736 transitions.
[2020-11-25 17:40:13,461 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:40:13,461 INFO  L728         BuchiCegarLoop]: Abstraction has 3435 states and 3736 transitions.
[2020-11-25 17:40:13,465 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3435 states and 3736 transitions.
[2020-11-25 17:40:13,487 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3435 to 3435.
[2020-11-25 17:40:13,487 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3435 states.
[2020-11-25 17:40:13,492 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3435 states to 3435 states and 3736 transitions.
[2020-11-25 17:40:13,492 INFO  L751         BuchiCegarLoop]: Abstraction has 3435 states and 3736 transitions.
[2020-11-25 17:40:13,492 INFO  L631         BuchiCegarLoop]: Abstraction has 3435 states and 3736 transitions.
[2020-11-25 17:40:13,492 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 17:40:13,492 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3435 states and 3736 transitions.
[2020-11-25 17:40:13,498 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:40:13,499 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:40:13,499 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:40:13,500 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:40:13,500 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_HBC0 := false;
[L3]                 call_transferFrom_HBC0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4521]              assume null == 0;
[L4522]  CALL        call this := FreshRefGenerator__success();
[L2237]              havoc newRef;
[L2238]              assume Alloc[newRef] == false;
[L2239]              Alloc[newRef] := true;
[L2240]              assume newRef != null;
[L4522]  RET         call this := FreshRefGenerator__success();
[L4523]              assume now >= 0;
[L4524]              assume DType[this] == HBC;
[L4525]              assume msgvalue_MSG == 0;
[L4526]              gas := gas - 53000;
[L4527]  CALL        call HBC_HBC(this, msgsender_MSG, msgvalue_MSG);
[L255]               havoc __exception;
[L256]               revert := false;
[L257]   COND FALSE  !(__exception)
[L284]   CALL        call HBC_HBC__success(this, msgsender_MSG, msgvalue_MSG);
[L2496]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2425]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2410]              assume msgsender_MSG != null;
[L2411]              Balance[this] := 0;
[L2425]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2426]  COND FALSE  !(revert)
[L2496]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2497]  COND FALSE  !(revert)
[L2500]  CALL        call HBC_HBC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2459]              assume msgsender_MSG != null;
[L2460]              Balance[this] := 0;
[L2461]              TOKEN_DECIMALS_HBC[this] := 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2462]              name_HBC[this] := 1908934807;
[L2463]              symbol_HBC[this] := -845215461;
[L2464]              totalTokenSupply_HBC[this] := 10000000000 * TOKEN_DECIMALS_HBC[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2465]              decimals_HBC[this] := 18;
[L2466]              stopped_HBC[this] := false;
[L2467]              owner_HBC[this] := null;
[L2468]              totalBurned_HBC[this] := 0;
[L2469]              balances_HBC[this] := zeroRefintArr();
[L2470]              sum_balances0[this] := 0;
[L2471]              allowed_HBC[this] := zeroRefRefintArr();
[L2472]              sum_allowed1[this] := 0;
[L2473]              forbiddenAddresses_HBC[this] := zeroRefRefArr();
[L2475]              owner_HBC[this] := msgsender_MSG;
[L2476]              sum_balances0[this] := sum_balances0[this] - balances_HBC[this][owner_HBC[this]];
[L2477]              balances_HBC[this][owner_HBC[this]] := totalTokenSupply_HBC[this];
[L2478]              sum_balances0[this] := sum_balances0[this] + balances_HBC[this][owner_HBC[this]];
[L2479]              assert { :EventEmitted "Transfer_HBC" } true;
[L2500]  RET         call HBC_HBC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  COND FALSE  !(revert)
[L284]   RET         call HBC_HBC__success(this, msgsender_MSG, msgvalue_MSG);
[L285]               assume !revert && gas >= 0;
[L4527]  RET         call HBC_HBC(this, msgsender_MSG, msgvalue_MSG);
[L4528]              assume !revert && gas >= 0;
[L4531]  CALL        call CorralChoice_HBC(this);
[L4312]              havoc msgsender_MSG;
[L4313]              havoc msgvalue_MSG;
[L4314]              havoc choice;
[L4315]              havoc __ret_0_totalSupply;
[L4316]              havoc _owner_s433;
[L4317]              havoc __ret_0_balanceOf;
[L4318]              havoc _address_s750;
[L4319]              havoc _tokens_s750;
[L4320]              havoc __ret_0_transfer;
[L4321]              havoc _owner_s648;
[L4322]              havoc _spender_s648;
[L4323]              havoc __ret_0_allowance;
[L4324]              havoc _from_s570;
[L4325]              havoc _to_s570;
[L4326]              havoc _value_s570;
[L4327]              havoc __ret_0_transferFrom;
[L4328]              havoc _spender_s612;
[L4329]              havoc _tokens_s612;
[L4330]              havoc __ret_0_approve;
[L4331]              havoc __ret_0_TOKEN_DECIMALS;
[L4332]              havoc __ret_0_name;
[L4333]              havoc __ret_0_symbol;
[L4334]              havoc __ret_0_totalTokenSupply;
[L4335]              havoc __ret_0_decimals;
[L4336]              havoc __ret_0_stopped;
[L4337]              havoc __ret_0_owner;
[L4338]              havoc __ret_0_totalBurned;
[L4339]              havoc arg951_s0;
[L4340]              havoc __ret_0_balances;
[L4341]              havoc _newAddr_s337;
[L4342]              havoc _newAddr_s350;
[L4343]              havoc _value_s413;
[L4344]              havoc __ret_0_burn;
[L4345]              havoc _newOwner_s812;
[L4346]              havoc _spender_s881;
[L4347]              havoc _addedValue_s881;
[L4348]              havoc success_s881;
[L4349]              havoc _spender_s948;
[L4350]              havoc _subtractedValue_s948;
[L4351]              havoc success_s948;
[L4352]              havoc tmpNow;
[L4353]              havoc gas;
[L4354]              assume gas > 4000000 && gas <= 8000000;
[L4355]              tmpNow := now;
[L4356]              havoc now;
[L4357]              assume now > tmpNow;
[L4358]              assume msgsender_MSG != null;
[L4359]              assume DType[msgsender_MSG] != SafeMath;
[L4360]              assume DType[msgsender_MSG] != ERC20Interface;
[L4361]              assume DType[msgsender_MSG] != HBC;
[L4362]              Alloc[msgsender_MSG] := true;
[L4363]  COND FALSE  !(choice == 24)
[L4369]  COND FALSE  !(choice == 23)
[L4375]  COND FALSE  !(choice == 22)
[L4382]  COND FALSE  !(choice == 21)
[L4388]  COND TRUE   choice == 20
[L4389]              gas := gas - 21000;
[L4390]  COND TRUE   gas >= 0
[L4391]              assume _value_s570 >= 0 && _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4392]              assume msgvalue_MSG == 0;
[L4393]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_HBC(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s570 && p1 != _to_s570) && (p2 != _from_s570 || p3 != msgsender_MSG)) && _from_s570 != _to_s570) && _value_s570 <= balances_HBC[this][_from_s570]) && _value_s570 <= allowed_HBC[this][_from_s570][msgsender_MSG]) && balances_HBC[this][_to_s570] + _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s570 >= 0) && _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HBC[this][_to_s570] >= 0) && balances_HBC[this][_to_s570] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HBC[this][_from_s570] >= 0) && balances_HBC[this][_from_s570] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_HBC[this][_from_s570][msgsender_MSG] >= 0) && allowed_HBC[this][_from_s570][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_HBC0 := true;
[L3]                 call_transferFrom_HBC0 := false;
[L3]                 revert := revert_hold;
[L762]               havoc __exception;
[L763]               revert := false;
[L764]   COND FALSE  !(__exception)
[L791]   CALL        call __ret_0_ := transferFrom~address~address~uint256_HBC__success(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L2743]  COND FALSE  !(!!stopped_HBC[this])
[L2747]              __var_4 := null;
[L2748]  COND FALSE  !(!(_to_s570 != null))
[L2752]              __var_5 := null;
[L2753]  COND FALSE  !(!(_from_s570 != null))
[L2757]  COND FALSE  !(!(forbiddenAddresses_HBC[this][_from_s570] != _from_s570))
[L2761]  COND FALSE  !(!(forbiddenAddresses_HBC[this][_to_s570] != _to_s570))
[L2765]  COND TRUE   _value_s570 == 0
[L2766]              assert { :EventEmitted "Transfer_HBC" } true;
[L2767]              __ret_0_ := true;
[L791]   RET         call __ret_0_ := transferFrom~address~address~uint256_HBC__success(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L792]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && balances_HBC[this][_from_s570] == old(balances_HBC[this][_from_s570]) - _value_s570) && balances_HBC[this][_to_s570] == old(balances_HBC[this][_to_s570]) + _value_s570) && allowed_HBC[this][_from_s570][msgsender_MSG] == old(allowed_HBC[this][_from_s570][msgsender_MSG]) - _value_s570) && totalTokenSupply_HBC[this] == old(totalTokenSupply_HBC[this])) && balances_HBC[this][p1] == old(balances_HBC[this][p1])) && allowed_HBC[this][p2][p3] == old(allowed_HBC[this][p2][p3])) && stopped_HBC[this] == old(stopped_HBC[this])) && owner_HBC[this] == old(owner_HBC[this])) && totalBurned_HBC[this] == old(totalBurned_HBC[this])) && forbiddenAddresses_HBC[this] == old(forbiddenAddresses_HBC[this]));
[L3]                 revert := revert_hold;
[L4393]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_HBC(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L4531]  RET         call CorralChoice_HBC(this);

Loop:
[L4531]  CALL        call CorralChoice_HBC(this);
[L4312]              havoc msgsender_MSG;
[L4313]              havoc msgvalue_MSG;
[L4314]              havoc choice;
[L4315]              havoc __ret_0_totalSupply;
[L4316]              havoc _owner_s433;
[L4317]              havoc __ret_0_balanceOf;
[L4318]              havoc _address_s750;
[L4319]              havoc _tokens_s750;
[L4320]              havoc __ret_0_transfer;
[L4321]              havoc _owner_s648;
[L4322]              havoc _spender_s648;
[L4323]              havoc __ret_0_allowance;
[L4324]              havoc _from_s570;
[L4325]              havoc _to_s570;
[L4326]              havoc _value_s570;
[L4327]              havoc __ret_0_transferFrom;
[L4328]              havoc _spender_s612;
[L4329]              havoc _tokens_s612;
[L4330]              havoc __ret_0_approve;
[L4331]              havoc __ret_0_TOKEN_DECIMALS;
[L4332]              havoc __ret_0_name;
[L4333]              havoc __ret_0_symbol;
[L4334]              havoc __ret_0_totalTokenSupply;
[L4335]              havoc __ret_0_decimals;
[L4336]              havoc __ret_0_stopped;
[L4337]              havoc __ret_0_owner;
[L4338]              havoc __ret_0_totalBurned;
[L4339]              havoc arg951_s0;
[L4340]              havoc __ret_0_balances;
[L4341]              havoc _newAddr_s337;
[L4342]              havoc _newAddr_s350;
[L4343]              havoc _value_s413;
[L4344]              havoc __ret_0_burn;
[L4345]              havoc _newOwner_s812;
[L4346]              havoc _spender_s881;
[L4347]              havoc _addedValue_s881;
[L4348]              havoc success_s881;
[L4349]              havoc _spender_s948;
[L4350]              havoc _subtractedValue_s948;
[L4351]              havoc success_s948;
[L4352]              havoc tmpNow;
[L4353]              havoc gas;
[L4354]              assume gas > 4000000 && gas <= 8000000;
[L4355]              tmpNow := now;
[L4356]              havoc now;
[L4357]              assume now > tmpNow;
[L4358]              assume msgsender_MSG != null;
[L4359]              assume DType[msgsender_MSG] != SafeMath;
[L4360]              assume DType[msgsender_MSG] != ERC20Interface;
[L4361]              assume DType[msgsender_MSG] != HBC;
[L4362]              Alloc[msgsender_MSG] := true;
[L4363]  COND FALSE  !(choice == 24)
[L4369]  COND FALSE  !(choice == 23)
[L4375]  COND FALSE  !(choice == 22)
[L4382]  COND FALSE  !(choice == 21)
[L4388]  COND TRUE   choice == 20
[L4389]              gas := gas - 21000;
[L4390]  COND TRUE   gas >= 0
[L4391]              assume _value_s570 >= 0 && _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4392]              assume msgvalue_MSG == 0;
[L4393]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_HBC(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s570 && p1 != _to_s570) && (p2 != _from_s570 || p3 != msgsender_MSG)) && _from_s570 != _to_s570) && _value_s570 <= balances_HBC[this][_from_s570]) && _value_s570 <= allowed_HBC[this][_from_s570][msgsender_MSG]) && balances_HBC[this][_to_s570] + _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s570 >= 0) && _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HBC[this][_to_s570] >= 0) && balances_HBC[this][_to_s570] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HBC[this][_from_s570] >= 0) && balances_HBC[this][_from_s570] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_HBC[this][_from_s570][msgsender_MSG] >= 0) && allowed_HBC[this][_from_s570][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_HBC0 := true;
[L3]                 call_transferFrom_HBC0 := false;
[L3]                 revert := revert_hold;
[L762]               havoc __exception;
[L763]               revert := false;
[L764]   COND FALSE  !(__exception)
[L791]   CALL        call __ret_0_ := transferFrom~address~address~uint256_HBC__success(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L2743]  COND FALSE  !(!!stopped_HBC[this])
[L2747]              __var_4 := null;
[L2748]  COND FALSE  !(!(_to_s570 != null))
[L2752]              __var_5 := null;
[L2753]  COND FALSE  !(!(_from_s570 != null))
[L2757]  COND FALSE  !(!(forbiddenAddresses_HBC[this][_from_s570] != _from_s570))
[L2761]  COND FALSE  !(!(forbiddenAddresses_HBC[this][_to_s570] != _to_s570))
[L2765]  COND TRUE   _value_s570 == 0
[L2766]              assert { :EventEmitted "Transfer_HBC" } true;
[L2767]              __ret_0_ := true;
[L791]   RET         call __ret_0_ := transferFrom~address~address~uint256_HBC__success(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L792]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && balances_HBC[this][_from_s570] == old(balances_HBC[this][_from_s570]) - _value_s570) && balances_HBC[this][_to_s570] == old(balances_HBC[this][_to_s570]) + _value_s570) && allowed_HBC[this][_from_s570][msgsender_MSG] == old(allowed_HBC[this][_from_s570][msgsender_MSG]) - _value_s570) && totalTokenSupply_HBC[this] == old(totalTokenSupply_HBC[this])) && balances_HBC[this][p1] == old(balances_HBC[this][p1])) && allowed_HBC[this][p2][p3] == old(allowed_HBC[this][p2][p3])) && stopped_HBC[this] == old(stopped_HBC[this])) && owner_HBC[this] == old(owner_HBC[this])) && totalBurned_HBC[this] == old(totalBurned_HBC[this])) && forbiddenAddresses_HBC[this] == old(forbiddenAddresses_HBC[this]));
[L3]                 revert := revert_hold;
[L4393]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_HBC(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L4531]  RET         call CorralChoice_HBC(this);

[2020-11-25 17:40:13,504 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:40:13,504 INFO  L82        PathProgramCache]: Analyzing trace with hash 873815982, now seen corresponding path program 1 times
[2020-11-25 17:40:13,505 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:40:13,540 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:40:14,164 WARN  L188               SmtUtils]: Spent 184.00 ms on a formula simplification. DAG size of input: 181 DAG size of output: 76
[2020-11-25 17:40:14,307 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 17:40:14,308 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:40:14,308 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [16] imperfect sequences [] total 16
[2020-11-25 17:40:14,308 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:40:14,308 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-25 17:40:14,308 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=40, Invalid=232, Unknown=0, NotChecked=0, Total=272
[2020-11-25 17:40:14,309 INFO  L87              Difference]: Start difference. First operand 3435 states and 3736 transitions. cyclomatic complexity: 303 Second operand 17 states.
[2020-11-25 17:40:19,047 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:40:19,047 INFO  L93              Difference]: Finished difference Result 3630 states and 3986 transitions.
[2020-11-25 17:40:19,047 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 19 states. 
[2020-11-25 17:40:19,047 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3630 states and 3986 transitions.
[2020-11-25 17:40:19,055 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 10
[2020-11-25 17:40:19,065 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3630 states to 3630 states and 3986 transitions.
[2020-11-25 17:40:19,065 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1151
[2020-11-25 17:40:19,065 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1151
[2020-11-25 17:40:19,066 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3630 states and 3986 transitions.
[2020-11-25 17:40:19,069 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:40:19,069 INFO  L728         BuchiCegarLoop]: Abstraction has 3630 states and 3986 transitions.
[2020-11-25 17:40:19,072 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3630 states and 3986 transitions.
[2020-11-25 17:40:19,096 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3630 to 3583.
[2020-11-25 17:40:19,096 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3583 states.
[2020-11-25 17:40:19,099 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3583 states to 3583 states and 3904 transitions.
[2020-11-25 17:40:19,100 INFO  L751         BuchiCegarLoop]: Abstraction has 3583 states and 3904 transitions.
[2020-11-25 17:40:19,100 INFO  L631         BuchiCegarLoop]: Abstraction has 3583 states and 3904 transitions.
[2020-11-25 17:40:19,100 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 17:40:19,100 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3583 states and 3904 transitions.
[2020-11-25 17:40:19,104 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 17:40:19,104 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:40:19,104 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:40:19,105 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:40:19,106 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_HBC0 := false;
[L3]                 call_transferFrom_HBC0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4521]              assume null == 0;
[L4522]  CALL        call this := FreshRefGenerator__success();
[L2237]              havoc newRef;
[L2238]              assume Alloc[newRef] == false;
[L2239]              Alloc[newRef] := true;
[L2240]              assume newRef != null;
[L4522]  RET         call this := FreshRefGenerator__success();
[L4523]              assume now >= 0;
[L4524]              assume DType[this] == HBC;
[L4525]              assume msgvalue_MSG == 0;
[L4526]              gas := gas - 53000;
[L4527]  CALL        call HBC_HBC(this, msgsender_MSG, msgvalue_MSG);
[L255]               havoc __exception;
[L256]               revert := false;
[L257]   COND FALSE  !(__exception)
[L284]   CALL        call HBC_HBC__success(this, msgsender_MSG, msgvalue_MSG);
[L2496]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2425]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2410]              assume msgsender_MSG != null;
[L2411]              Balance[this] := 0;
[L2425]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2426]  COND FALSE  !(revert)
[L2496]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2497]  COND FALSE  !(revert)
[L2500]  CALL        call HBC_HBC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2459]              assume msgsender_MSG != null;
[L2460]              Balance[this] := 0;
[L2461]              TOKEN_DECIMALS_HBC[this] := 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2462]              name_HBC[this] := 1908934807;
[L2463]              symbol_HBC[this] := -845215461;
[L2464]              totalTokenSupply_HBC[this] := 10000000000 * TOKEN_DECIMALS_HBC[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2465]              decimals_HBC[this] := 18;
[L2466]              stopped_HBC[this] := false;
[L2467]              owner_HBC[this] := null;
[L2468]              totalBurned_HBC[this] := 0;
[L2469]              balances_HBC[this] := zeroRefintArr();
[L2470]              sum_balances0[this] := 0;
[L2471]              allowed_HBC[this] := zeroRefRefintArr();
[L2472]              sum_allowed1[this] := 0;
[L2473]              forbiddenAddresses_HBC[this] := zeroRefRefArr();
[L2475]              owner_HBC[this] := msgsender_MSG;
[L2476]              sum_balances0[this] := sum_balances0[this] - balances_HBC[this][owner_HBC[this]];
[L2477]              balances_HBC[this][owner_HBC[this]] := totalTokenSupply_HBC[this];
[L2478]              sum_balances0[this] := sum_balances0[this] + balances_HBC[this][owner_HBC[this]];
[L2479]              assert { :EventEmitted "Transfer_HBC" } true;
[L2500]  RET         call HBC_HBC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  COND FALSE  !(revert)
[L284]   RET         call HBC_HBC__success(this, msgsender_MSG, msgvalue_MSG);
[L285]               assume !revert && gas >= 0;
[L4527]  RET         call HBC_HBC(this, msgsender_MSG, msgvalue_MSG);
[L4528]              assume !revert && gas >= 0;
[L4531]  CALL        call CorralChoice_HBC(this);
[L4312]              havoc msgsender_MSG;
[L4313]              havoc msgvalue_MSG;
[L4314]              havoc choice;
[L4315]              havoc __ret_0_totalSupply;
[L4316]              havoc _owner_s433;
[L4317]              havoc __ret_0_balanceOf;
[L4318]              havoc _address_s750;
[L4319]              havoc _tokens_s750;
[L4320]              havoc __ret_0_transfer;
[L4321]              havoc _owner_s648;
[L4322]              havoc _spender_s648;
[L4323]              havoc __ret_0_allowance;
[L4324]              havoc _from_s570;
[L4325]              havoc _to_s570;
[L4326]              havoc _value_s570;
[L4327]              havoc __ret_0_transferFrom;
[L4328]              havoc _spender_s612;
[L4329]              havoc _tokens_s612;
[L4330]              havoc __ret_0_approve;
[L4331]              havoc __ret_0_TOKEN_DECIMALS;
[L4332]              havoc __ret_0_name;
[L4333]              havoc __ret_0_symbol;
[L4334]              havoc __ret_0_totalTokenSupply;
[L4335]              havoc __ret_0_decimals;
[L4336]              havoc __ret_0_stopped;
[L4337]              havoc __ret_0_owner;
[L4338]              havoc __ret_0_totalBurned;
[L4339]              havoc arg951_s0;
[L4340]              havoc __ret_0_balances;
[L4341]              havoc _newAddr_s337;
[L4342]              havoc _newAddr_s350;
[L4343]              havoc _value_s413;
[L4344]              havoc __ret_0_burn;
[L4345]              havoc _newOwner_s812;
[L4346]              havoc _spender_s881;
[L4347]              havoc _addedValue_s881;
[L4348]              havoc success_s881;
[L4349]              havoc _spender_s948;
[L4350]              havoc _subtractedValue_s948;
[L4351]              havoc success_s948;
[L4352]              havoc tmpNow;
[L4353]              havoc gas;
[L4354]              assume gas > 4000000 && gas <= 8000000;
[L4355]              tmpNow := now;
[L4356]              havoc now;
[L4357]              assume now > tmpNow;
[L4358]              assume msgsender_MSG != null;
[L4359]              assume DType[msgsender_MSG] != SafeMath;
[L4360]              assume DType[msgsender_MSG] != ERC20Interface;
[L4361]              assume DType[msgsender_MSG] != HBC;
[L4362]              Alloc[msgsender_MSG] := true;
[L4363]  COND FALSE  !(choice == 24)
[L4369]  COND FALSE  !(choice == 23)
[L4375]  COND FALSE  !(choice == 22)
[L4382]  COND FALSE  !(choice == 21)
[L4388]  COND TRUE   choice == 20
[L4389]              gas := gas - 21000;
[L4390]  COND TRUE   gas >= 0
[L4391]              assume _value_s570 >= 0 && _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4392]              assume msgvalue_MSG == 0;
[L4393]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_HBC(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s570 && p1 != _to_s570) && (p2 != _from_s570 || p3 != msgsender_MSG)) && _from_s570 != _to_s570) && _value_s570 <= balances_HBC[this][_from_s570]) && _value_s570 <= allowed_HBC[this][_from_s570][msgsender_MSG]) && balances_HBC[this][_to_s570] + _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s570 >= 0) && _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HBC[this][_to_s570] >= 0) && balances_HBC[this][_to_s570] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HBC[this][_from_s570] >= 0) && balances_HBC[this][_from_s570] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_HBC[this][_from_s570][msgsender_MSG] >= 0) && allowed_HBC[this][_from_s570][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_HBC0 := true;
[L3]                 call_transferFrom_HBC0 := false;
[L3]                 revert := revert_hold;
[L762]               havoc __exception;
[L763]               revert := false;
[L764]   COND TRUE   __exception
[L765]               __tmp__Balance := Balance;
[L766]               __tmp__DType := DType;
[L767]               __tmp__Alloc := Alloc;
[L768]               __tmp__balance_ADDR := balance_ADDR;
[L769]               __tmp__M_Ref_int := M_Ref_int;
[L770]               __tmp__sum_balances0 := sum_balances0;
[L771]               __tmp__alloc_allowed_HBC_lvl0 := alloc_allowed_HBC_lvl0;
[L772]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L773]               __tmp__sum_allowed1 := sum_allowed1;
[L774]               __tmp__sum_forbiddenAddresses2 := sum_forbiddenAddresses2;
[L775]               __tmp__Length := Length;
[L776]               __tmp__now := now;
[L777]               __tmp__TOKEN_DECIMALS_HBC := TOKEN_DECIMALS_HBC;
[L778]               __tmp__name_HBC := name_HBC;
[L779]               __tmp__symbol_HBC := symbol_HBC;
[L780]               __tmp__totalTokenSupply_HBC := totalTokenSupply_HBC;
[L781]               __tmp__decimals_HBC := decimals_HBC;
[L782]               __tmp__stopped_HBC := stopped_HBC;
[L783]               __tmp__owner_HBC := owner_HBC;
[L784]               __tmp__totalBurned_HBC := totalBurned_HBC;
[L785]               __tmp__balances_HBC := balances_HBC;
[L786]               __tmp__allowed_HBC := allowed_HBC;
[L787]               __tmp__forbiddenAddresses_HBC := forbiddenAddresses_HBC;
[L788]   CALL        call __ret_0_ := transferFrom~address~address~uint256_HBC__fail(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L2681]  COND TRUE   !!__tmp__stopped_HBC[this]
[L2682]              revert := true;
[L788]   RET         call __ret_0_ := transferFrom~address~address~uint256_HBC__fail(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L789]               assume revert || gas < 0;
[L4393]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_HBC(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L4531]  RET         call CorralChoice_HBC(this);

Loop:
[L4531]  CALL        call CorralChoice_HBC(this);
[L4312]              havoc msgsender_MSG;
[L4313]              havoc msgvalue_MSG;
[L4314]              havoc choice;
[L4315]              havoc __ret_0_totalSupply;
[L4316]              havoc _owner_s433;
[L4317]              havoc __ret_0_balanceOf;
[L4318]              havoc _address_s750;
[L4319]              havoc _tokens_s750;
[L4320]              havoc __ret_0_transfer;
[L4321]              havoc _owner_s648;
[L4322]              havoc _spender_s648;
[L4323]              havoc __ret_0_allowance;
[L4324]              havoc _from_s570;
[L4325]              havoc _to_s570;
[L4326]              havoc _value_s570;
[L4327]              havoc __ret_0_transferFrom;
[L4328]              havoc _spender_s612;
[L4329]              havoc _tokens_s612;
[L4330]              havoc __ret_0_approve;
[L4331]              havoc __ret_0_TOKEN_DECIMALS;
[L4332]              havoc __ret_0_name;
[L4333]              havoc __ret_0_symbol;
[L4334]              havoc __ret_0_totalTokenSupply;
[L4335]              havoc __ret_0_decimals;
[L4336]              havoc __ret_0_stopped;
[L4337]              havoc __ret_0_owner;
[L4338]              havoc __ret_0_totalBurned;
[L4339]              havoc arg951_s0;
[L4340]              havoc __ret_0_balances;
[L4341]              havoc _newAddr_s337;
[L4342]              havoc _newAddr_s350;
[L4343]              havoc _value_s413;
[L4344]              havoc __ret_0_burn;
[L4345]              havoc _newOwner_s812;
[L4346]              havoc _spender_s881;
[L4347]              havoc _addedValue_s881;
[L4348]              havoc success_s881;
[L4349]              havoc _spender_s948;
[L4350]              havoc _subtractedValue_s948;
[L4351]              havoc success_s948;
[L4352]              havoc tmpNow;
[L4353]              havoc gas;
[L4354]              assume gas > 4000000 && gas <= 8000000;
[L4355]              tmpNow := now;
[L4356]              havoc now;
[L4357]              assume now > tmpNow;
[L4358]              assume msgsender_MSG != null;
[L4359]              assume DType[msgsender_MSG] != SafeMath;
[L4360]              assume DType[msgsender_MSG] != ERC20Interface;
[L4361]              assume DType[msgsender_MSG] != HBC;
[L4362]              Alloc[msgsender_MSG] := true;
[L4363]  COND FALSE  !(choice == 24)
[L4369]  COND FALSE  !(choice == 23)
[L4375]  COND FALSE  !(choice == 22)
[L4382]  COND FALSE  !(choice == 21)
[L4388]  COND TRUE   choice == 20
[L4389]              gas := gas - 21000;
[L4390]  COND TRUE   gas >= 0
[L4391]              assume _value_s570 >= 0 && _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4392]              assume msgvalue_MSG == 0;
[L4393]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_HBC(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s570 && p1 != _to_s570) && (p2 != _from_s570 || p3 != msgsender_MSG)) && _from_s570 != _to_s570) && _value_s570 <= balances_HBC[this][_from_s570]) && _value_s570 <= allowed_HBC[this][_from_s570][msgsender_MSG]) && balances_HBC[this][_to_s570] + _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s570 >= 0) && _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HBC[this][_to_s570] >= 0) && balances_HBC[this][_to_s570] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HBC[this][_from_s570] >= 0) && balances_HBC[this][_from_s570] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_HBC[this][_from_s570][msgsender_MSG] >= 0) && allowed_HBC[this][_from_s570][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_HBC0 := true;
[L3]                 call_transferFrom_HBC0 := false;
[L3]                 revert := revert_hold;
[L762]               havoc __exception;
[L763]               revert := false;
[L764]   COND TRUE   __exception
[L765]               __tmp__Balance := Balance;
[L766]               __tmp__DType := DType;
[L767]               __tmp__Alloc := Alloc;
[L768]               __tmp__balance_ADDR := balance_ADDR;
[L769]               __tmp__M_Ref_int := M_Ref_int;
[L770]               __tmp__sum_balances0 := sum_balances0;
[L771]               __tmp__alloc_allowed_HBC_lvl0 := alloc_allowed_HBC_lvl0;
[L772]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L773]               __tmp__sum_allowed1 := sum_allowed1;
[L774]               __tmp__sum_forbiddenAddresses2 := sum_forbiddenAddresses2;
[L775]               __tmp__Length := Length;
[L776]               __tmp__now := now;
[L777]               __tmp__TOKEN_DECIMALS_HBC := TOKEN_DECIMALS_HBC;
[L778]               __tmp__name_HBC := name_HBC;
[L779]               __tmp__symbol_HBC := symbol_HBC;
[L780]               __tmp__totalTokenSupply_HBC := totalTokenSupply_HBC;
[L781]               __tmp__decimals_HBC := decimals_HBC;
[L782]               __tmp__stopped_HBC := stopped_HBC;
[L783]               __tmp__owner_HBC := owner_HBC;
[L784]               __tmp__totalBurned_HBC := totalBurned_HBC;
[L785]               __tmp__balances_HBC := balances_HBC;
[L786]               __tmp__allowed_HBC := allowed_HBC;
[L787]               __tmp__forbiddenAddresses_HBC := forbiddenAddresses_HBC;
[L788]   CALL        call __ret_0_ := transferFrom~address~address~uint256_HBC__fail(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L2681]  COND TRUE   !!__tmp__stopped_HBC[this]
[L2682]              revert := true;
[L788]   RET         call __ret_0_ := transferFrom~address~address~uint256_HBC__fail(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L789]               assume revert || gas < 0;
[L4393]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_HBC(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L4531]  RET         call CorralChoice_HBC(this);

[2020-11-25 17:40:19,108 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:40:19,109 INFO  L82        PathProgramCache]: Analyzing trace with hash 1722312239, now seen corresponding path program 1 times
[2020-11-25 17:40:19,109 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:40:19,116 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:40:19,228 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 17:40:19,229 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:40:19,229 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2020-11-25 17:40:19,229 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:40:19,230 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 11 interpolants.
[2020-11-25 17:40:19,230 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=19, Invalid=91, Unknown=0, NotChecked=0, Total=110
[2020-11-25 17:40:19,230 INFO  L87              Difference]: Start difference. First operand 3583 states and 3904 transitions. cyclomatic complexity: 325 Second operand 11 states.
[2020-11-25 17:40:20,983 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:40:20,983 INFO  L93              Difference]: Finished difference Result 6007 states and 6708 transitions.
[2020-11-25 17:40:20,983 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 17:40:20,984 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6007 states and 6708 transitions.
[2020-11-25 17:40:20,996 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 20
[2020-11-25 17:40:21,011 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6007 states to 6007 states and 6708 transitions.
[2020-11-25 17:40:21,011 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1924
[2020-11-25 17:40:21,012 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1924
[2020-11-25 17:40:21,012 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 6007 states and 6708 transitions.
[2020-11-25 17:40:21,017 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:40:21,017 INFO  L728         BuchiCegarLoop]: Abstraction has 6007 states and 6708 transitions.
[2020-11-25 17:40:21,020 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 6007 states and 6708 transitions.
[2020-11-25 17:40:21,062 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 6007 to 5105.
[2020-11-25 17:40:21,062 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5105 states.
[2020-11-25 17:40:21,069 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5105 states to 5105 states and 5772 transitions.
[2020-11-25 17:40:21,069 INFO  L751         BuchiCegarLoop]: Abstraction has 5105 states and 5772 transitions.
[2020-11-25 17:40:21,069 INFO  L631         BuchiCegarLoop]: Abstraction has 5105 states and 5772 transitions.
[2020-11-25 17:40:21,069 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 17:40:21,069 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5105 states and 5772 transitions.
[2020-11-25 17:40:21,076 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 16
[2020-11-25 17:40:21,076 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:40:21,076 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:40:21,077 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:40:21,077 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_HBC0 := false;
[L3]                 call_transferFrom_HBC0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4521]              assume null == 0;
[L4522]  CALL        call this := FreshRefGenerator__success();
[L2237]              havoc newRef;
[L2238]              assume Alloc[newRef] == false;
[L2239]              Alloc[newRef] := true;
[L2240]              assume newRef != null;
[L4522]  RET         call this := FreshRefGenerator__success();
[L4523]              assume now >= 0;
[L4524]              assume DType[this] == HBC;
[L4525]              assume msgvalue_MSG == 0;
[L4526]              gas := gas - 53000;
[L4527]  CALL        call HBC_HBC(this, msgsender_MSG, msgvalue_MSG);
[L255]               havoc __exception;
[L256]               revert := false;
[L257]   COND FALSE  !(__exception)
[L284]   CALL        call HBC_HBC__success(this, msgsender_MSG, msgvalue_MSG);
[L2496]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2425]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2410]              assume msgsender_MSG != null;
[L2411]              Balance[this] := 0;
[L2425]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2426]  COND FALSE  !(revert)
[L2496]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2497]  COND FALSE  !(revert)
[L2500]  CALL        call HBC_HBC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2459]              assume msgsender_MSG != null;
[L2460]              Balance[this] := 0;
[L2461]              TOKEN_DECIMALS_HBC[this] := 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2462]              name_HBC[this] := 1908934807;
[L2463]              symbol_HBC[this] := -845215461;
[L2464]              totalTokenSupply_HBC[this] := 10000000000 * TOKEN_DECIMALS_HBC[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2465]              decimals_HBC[this] := 18;
[L2466]              stopped_HBC[this] := false;
[L2467]              owner_HBC[this] := null;
[L2468]              totalBurned_HBC[this] := 0;
[L2469]              balances_HBC[this] := zeroRefintArr();
[L2470]              sum_balances0[this] := 0;
[L2471]              allowed_HBC[this] := zeroRefRefintArr();
[L2472]              sum_allowed1[this] := 0;
[L2473]              forbiddenAddresses_HBC[this] := zeroRefRefArr();
[L2475]              owner_HBC[this] := msgsender_MSG;
[L2476]              sum_balances0[this] := sum_balances0[this] - balances_HBC[this][owner_HBC[this]];
[L2477]              balances_HBC[this][owner_HBC[this]] := totalTokenSupply_HBC[this];
[L2478]              sum_balances0[this] := sum_balances0[this] + balances_HBC[this][owner_HBC[this]];
[L2479]              assert { :EventEmitted "Transfer_HBC" } true;
[L2500]  RET         call HBC_HBC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  COND FALSE  !(revert)
[L284]   RET         call HBC_HBC__success(this, msgsender_MSG, msgvalue_MSG);
[L285]               assume !revert && gas >= 0;
[L4527]  RET         call HBC_HBC(this, msgsender_MSG, msgvalue_MSG);
[L4528]              assume !revert && gas >= 0;
[L4531]  CALL        call CorralChoice_HBC(this);
[L4312]              havoc msgsender_MSG;
[L4313]              havoc msgvalue_MSG;
[L4314]              havoc choice;
[L4315]              havoc __ret_0_totalSupply;
[L4316]              havoc _owner_s433;
[L4317]              havoc __ret_0_balanceOf;
[L4318]              havoc _address_s750;
[L4319]              havoc _tokens_s750;
[L4320]              havoc __ret_0_transfer;
[L4321]              havoc _owner_s648;
[L4322]              havoc _spender_s648;
[L4323]              havoc __ret_0_allowance;
[L4324]              havoc _from_s570;
[L4325]              havoc _to_s570;
[L4326]              havoc _value_s570;
[L4327]              havoc __ret_0_transferFrom;
[L4328]              havoc _spender_s612;
[L4329]              havoc _tokens_s612;
[L4330]              havoc __ret_0_approve;
[L4331]              havoc __ret_0_TOKEN_DECIMALS;
[L4332]              havoc __ret_0_name;
[L4333]              havoc __ret_0_symbol;
[L4334]              havoc __ret_0_totalTokenSupply;
[L4335]              havoc __ret_0_decimals;
[L4336]              havoc __ret_0_stopped;
[L4337]              havoc __ret_0_owner;
[L4338]              havoc __ret_0_totalBurned;
[L4339]              havoc arg951_s0;
[L4340]              havoc __ret_0_balances;
[L4341]              havoc _newAddr_s337;
[L4342]              havoc _newAddr_s350;
[L4343]              havoc _value_s413;
[L4344]              havoc __ret_0_burn;
[L4345]              havoc _newOwner_s812;
[L4346]              havoc _spender_s881;
[L4347]              havoc _addedValue_s881;
[L4348]              havoc success_s881;
[L4349]              havoc _spender_s948;
[L4350]              havoc _subtractedValue_s948;
[L4351]              havoc success_s948;
[L4352]              havoc tmpNow;
[L4353]              havoc gas;
[L4354]              assume gas > 4000000 && gas <= 8000000;
[L4355]              tmpNow := now;
[L4356]              havoc now;
[L4357]              assume now > tmpNow;
[L4358]              assume msgsender_MSG != null;
[L4359]              assume DType[msgsender_MSG] != SafeMath;
[L4360]              assume DType[msgsender_MSG] != ERC20Interface;
[L4361]              assume DType[msgsender_MSG] != HBC;
[L4362]              Alloc[msgsender_MSG] := true;
[L4363]  COND FALSE  !(choice == 24)
[L4369]  COND FALSE  !(choice == 23)
[L4375]  COND FALSE  !(choice == 22)
[L4382]  COND FALSE  !(choice == 21)
[L4388]  COND TRUE   choice == 20
[L4389]              gas := gas - 21000;
[L4390]  COND TRUE   gas >= 0
[L4391]              assume _value_s570 >= 0 && _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4392]              assume msgvalue_MSG == 0;
[L4393]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_HBC(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s570 && p1 != _to_s570) && (p2 != _from_s570 || p3 != msgsender_MSG)) && _from_s570 != _to_s570) && _value_s570 <= balances_HBC[this][_from_s570]) && _value_s570 <= allowed_HBC[this][_from_s570][msgsender_MSG]) && balances_HBC[this][_to_s570] + _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s570 >= 0) && _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HBC[this][_to_s570] >= 0) && balances_HBC[this][_to_s570] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HBC[this][_from_s570] >= 0) && balances_HBC[this][_from_s570] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_HBC[this][_from_s570][msgsender_MSG] >= 0) && allowed_HBC[this][_from_s570][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_HBC0 := true;
[L3]                 call_transferFrom_HBC0 := false;
[L3]                 revert := revert_hold;
[L762]               havoc __exception;
[L763]               revert := false;
[L764]   COND TRUE   __exception
[L765]               __tmp__Balance := Balance;
[L766]               __tmp__DType := DType;
[L767]               __tmp__Alloc := Alloc;
[L768]               __tmp__balance_ADDR := balance_ADDR;
[L769]               __tmp__M_Ref_int := M_Ref_int;
[L770]               __tmp__sum_balances0 := sum_balances0;
[L771]               __tmp__alloc_allowed_HBC_lvl0 := alloc_allowed_HBC_lvl0;
[L772]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L773]               __tmp__sum_allowed1 := sum_allowed1;
[L774]               __tmp__sum_forbiddenAddresses2 := sum_forbiddenAddresses2;
[L775]               __tmp__Length := Length;
[L776]               __tmp__now := now;
[L777]               __tmp__TOKEN_DECIMALS_HBC := TOKEN_DECIMALS_HBC;
[L778]               __tmp__name_HBC := name_HBC;
[L779]               __tmp__symbol_HBC := symbol_HBC;
[L780]               __tmp__totalTokenSupply_HBC := totalTokenSupply_HBC;
[L781]               __tmp__decimals_HBC := decimals_HBC;
[L782]               __tmp__stopped_HBC := stopped_HBC;
[L783]               __tmp__owner_HBC := owner_HBC;
[L784]               __tmp__totalBurned_HBC := totalBurned_HBC;
[L785]               __tmp__balances_HBC := balances_HBC;
[L786]               __tmp__allowed_HBC := allowed_HBC;
[L787]               __tmp__forbiddenAddresses_HBC := forbiddenAddresses_HBC;
[L788]   CALL        call __ret_0_ := transferFrom~address~address~uint256_HBC__fail(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L2681]  COND FALSE  !(!!__tmp__stopped_HBC[this])
[L2685]              __var_4 := null;
[L2686]  COND TRUE   !(_to_s570 != null)
[L2687]              revert := true;
[L788]   RET         call __ret_0_ := transferFrom~address~address~uint256_HBC__fail(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L789]               assume revert || gas < 0;
[L4393]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_HBC(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L4531]  RET         call CorralChoice_HBC(this);

Loop:
[L4531]  CALL        call CorralChoice_HBC(this);
[L4312]              havoc msgsender_MSG;
[L4313]              havoc msgvalue_MSG;
[L4314]              havoc choice;
[L4315]              havoc __ret_0_totalSupply;
[L4316]              havoc _owner_s433;
[L4317]              havoc __ret_0_balanceOf;
[L4318]              havoc _address_s750;
[L4319]              havoc _tokens_s750;
[L4320]              havoc __ret_0_transfer;
[L4321]              havoc _owner_s648;
[L4322]              havoc _spender_s648;
[L4323]              havoc __ret_0_allowance;
[L4324]              havoc _from_s570;
[L4325]              havoc _to_s570;
[L4326]              havoc _value_s570;
[L4327]              havoc __ret_0_transferFrom;
[L4328]              havoc _spender_s612;
[L4329]              havoc _tokens_s612;
[L4330]              havoc __ret_0_approve;
[L4331]              havoc __ret_0_TOKEN_DECIMALS;
[L4332]              havoc __ret_0_name;
[L4333]              havoc __ret_0_symbol;
[L4334]              havoc __ret_0_totalTokenSupply;
[L4335]              havoc __ret_0_decimals;
[L4336]              havoc __ret_0_stopped;
[L4337]              havoc __ret_0_owner;
[L4338]              havoc __ret_0_totalBurned;
[L4339]              havoc arg951_s0;
[L4340]              havoc __ret_0_balances;
[L4341]              havoc _newAddr_s337;
[L4342]              havoc _newAddr_s350;
[L4343]              havoc _value_s413;
[L4344]              havoc __ret_0_burn;
[L4345]              havoc _newOwner_s812;
[L4346]              havoc _spender_s881;
[L4347]              havoc _addedValue_s881;
[L4348]              havoc success_s881;
[L4349]              havoc _spender_s948;
[L4350]              havoc _subtractedValue_s948;
[L4351]              havoc success_s948;
[L4352]              havoc tmpNow;
[L4353]              havoc gas;
[L4354]              assume gas > 4000000 && gas <= 8000000;
[L4355]              tmpNow := now;
[L4356]              havoc now;
[L4357]              assume now > tmpNow;
[L4358]              assume msgsender_MSG != null;
[L4359]              assume DType[msgsender_MSG] != SafeMath;
[L4360]              assume DType[msgsender_MSG] != ERC20Interface;
[L4361]              assume DType[msgsender_MSG] != HBC;
[L4362]              Alloc[msgsender_MSG] := true;
[L4363]  COND FALSE  !(choice == 24)
[L4369]  COND FALSE  !(choice == 23)
[L4375]  COND FALSE  !(choice == 22)
[L4382]  COND FALSE  !(choice == 21)
[L4388]  COND TRUE   choice == 20
[L4389]              gas := gas - 21000;
[L4390]  COND TRUE   gas >= 0
[L4391]              assume _value_s570 >= 0 && _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4392]              assume msgvalue_MSG == 0;
[L4393]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_HBC(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s570 && p1 != _to_s570) && (p2 != _from_s570 || p3 != msgsender_MSG)) && _from_s570 != _to_s570) && _value_s570 <= balances_HBC[this][_from_s570]) && _value_s570 <= allowed_HBC[this][_from_s570][msgsender_MSG]) && balances_HBC[this][_to_s570] + _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s570 >= 0) && _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HBC[this][_to_s570] >= 0) && balances_HBC[this][_to_s570] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HBC[this][_from_s570] >= 0) && balances_HBC[this][_from_s570] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_HBC[this][_from_s570][msgsender_MSG] >= 0) && allowed_HBC[this][_from_s570][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_HBC0 := true;
[L3]                 call_transferFrom_HBC0 := false;
[L3]                 revert := revert_hold;
[L762]               havoc __exception;
[L763]               revert := false;
[L764]   COND TRUE   __exception
[L765]               __tmp__Balance := Balance;
[L766]               __tmp__DType := DType;
[L767]               __tmp__Alloc := Alloc;
[L768]               __tmp__balance_ADDR := balance_ADDR;
[L769]               __tmp__M_Ref_int := M_Ref_int;
[L770]               __tmp__sum_balances0 := sum_balances0;
[L771]               __tmp__alloc_allowed_HBC_lvl0 := alloc_allowed_HBC_lvl0;
[L772]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L773]               __tmp__sum_allowed1 := sum_allowed1;
[L774]               __tmp__sum_forbiddenAddresses2 := sum_forbiddenAddresses2;
[L775]               __tmp__Length := Length;
[L776]               __tmp__now := now;
[L777]               __tmp__TOKEN_DECIMALS_HBC := TOKEN_DECIMALS_HBC;
[L778]               __tmp__name_HBC := name_HBC;
[L779]               __tmp__symbol_HBC := symbol_HBC;
[L780]               __tmp__totalTokenSupply_HBC := totalTokenSupply_HBC;
[L781]               __tmp__decimals_HBC := decimals_HBC;
[L782]               __tmp__stopped_HBC := stopped_HBC;
[L783]               __tmp__owner_HBC := owner_HBC;
[L784]               __tmp__totalBurned_HBC := totalBurned_HBC;
[L785]               __tmp__balances_HBC := balances_HBC;
[L786]               __tmp__allowed_HBC := allowed_HBC;
[L787]               __tmp__forbiddenAddresses_HBC := forbiddenAddresses_HBC;
[L788]   CALL        call __ret_0_ := transferFrom~address~address~uint256_HBC__fail(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L2681]  COND FALSE  !(!!__tmp__stopped_HBC[this])
[L2685]              __var_4 := null;
[L2686]  COND TRUE   !(_to_s570 != null)
[L2687]              revert := true;
[L788]   RET         call __ret_0_ := transferFrom~address~address~uint256_HBC__fail(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L789]               assume revert || gas < 0;
[L4393]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_HBC(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L4531]  RET         call CorralChoice_HBC(this);

[2020-11-25 17:40:21,080 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:40:21,080 INFO  L82        PathProgramCache]: Analyzing trace with hash 622510040, now seen corresponding path program 1 times
[2020-11-25 17:40:21,081 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:40:21,088 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:40:21,097 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:40:21,141 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:40:21,141 INFO  L82        PathProgramCache]: Analyzing trace with hash 1480983944, now seen corresponding path program 1 times
[2020-11-25 17:40:21,142 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:40:21,145 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:40:21,149 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:40:21,161 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:40:21,161 INFO  L82        PathProgramCache]: Analyzing trace with hash 1618797407, now seen corresponding path program 1 times
[2020-11-25 17:40:21,161 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:40:21,172 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:40:21,184 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
[2020-11-25 17:40:21,461 WARN  L188               SmtUtils]: Spent 120.00 ms on a formula simplification. DAG size of input: 128 DAG size of output: 122
[2020-11-25 17:40:21,620 WARN  L188               SmtUtils]: Spent 157.00 ms on a formula simplification that was a NOOP. DAG size: 292
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 7933 to 15859
[2020-11-25 17:40:22,288 WARN  L188               SmtUtils]: Spent 649.00 ms on a formula simplification. DAG size of input: 240 DAG size of output: 240
[2020-11-25 17:40:23,097 WARN  L188               SmtUtils]: Spent 805.00 ms on a formula simplification. DAG size of input: 290 DAG size of output: 274
Garbage collection #1: 101 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 12541 to 25073
Garbage collection #9: 25073 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 25073 to 50131
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 17:40:23,316 WARN  L188               SmtUtils]: Spent 187.00 ms on a formula simplification. DAG size of input: 167 DAG size of output: 161
[2020-11-25 17:40:23,518 WARN  L188               SmtUtils]: Spent 200.00 ms on a formula simplification that was a NOOP. DAG size: 346
Garbage collection #1: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #2: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #3: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #4: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #5: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #6: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #7: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
[2020-11-25 17:40:24,002 WARN  L188               SmtUtils]: Spent 474.00 ms on a formula simplification. DAG size of input: 277 DAG size of output: 277
[2020-11-25 17:40:24,223 WARN  L188               SmtUtils]: Spent 219.00 ms on a formula simplification that was a NOOP. DAG size: 277
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4027 to 8053
[2020-11-25 17:40:24,624 WARN  L188               SmtUtils]: Spent 366.00 ms on a formula simplification. DAG size of input: 187 DAG size of output: 171
[2020-11-25 17:40:24,631 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
[2020-11-25 17:40:25,419 WARN  L188               SmtUtils]: Spent 151.00 ms on a formula simplification that was a NOOP. DAG size: 292
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 17:40:25,985 WARN  L188               SmtUtils]: Spent 556.00 ms on a formula simplification. DAG size of input: 240 DAG size of output: 240
[2020-11-25 17:40:26,682 WARN  L188               SmtUtils]: Spent 694.00 ms on a formula simplification. DAG size of input: 289 DAG size of output: 274
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12541 to 25073
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
[2020-11-25 17:40:26,978 WARN  L188               SmtUtils]: Spent 276.00 ms on a formula simplification. DAG size of input: 183 DAG size of output: 172
[2020-11-25 17:40:27,292 WARN  L188               SmtUtils]: Spent 312.00 ms on a formula simplification that was a NOOP. DAG size: 357
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9181 to 18353
[2020-11-25 17:40:28,396 WARN  L188               SmtUtils]: Spent 1.09 s on a formula simplification. DAG size of input: 293 DAG size of output: 288
[2020-11-25 17:40:29,529 WARN  L188               SmtUtils]: Spent 1.13 s on a formula simplification. DAG size of input: 508 DAG size of output: 490
Garbage collection #1: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #2: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #3: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #4: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #5: 3019 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #6: 6037 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6037 to 12073
Garbage collection #7: 12073 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 12073 to 24137
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2179 to 4357
[2020-11-25 17:40:29,975 WARN  L188               SmtUtils]: Spent 410.00 ms on a formula simplification. DAG size of input: 213 DAG size of output: 202
[2020-11-25 17:40:30,203 WARN  L188               SmtUtils]: Spent 211.00 ms on a formula simplification that was a NOOP. DAG size: 326
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 17:40:30,443 WARN  L188               SmtUtils]: Spent 188.00 ms on a formula simplification. DAG size of input: 310 DAG size of output: 309
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 17:40:30,549 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:40:30,564 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:40:30,571 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:40:30 BasicIcfg
[2020-11-25 17:40:30,571 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 17:40:30,571 INFO  L168              Benchmark]: Toolchain (without parser) took 22022.05 ms. Allocated memory was 1.0 GB in the beginning and 2.3 GB in the end (delta: 1.3 GB). Free memory was 940.6 MB in the beginning and 955.3 MB in the end (delta: -14.7 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
[2020-11-25 17:40:30,572 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 17:40:30,572 INFO  L168              Benchmark]: Boogie Preprocessor took 109.96 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 17:40:30,572 INFO  L168              Benchmark]: UtopiaSpecLang took 63.20 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 17:40:30,573 INFO  L168              Benchmark]: Boogie Printer took 15.30 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 17:40:30,573 INFO  L168              Benchmark]: RCFGBuilder took 785.78 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 801.0 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
[2020-11-25 17:40:30,573 INFO  L168              Benchmark]: UtopiaLTL2Aut took 41.31 ms. Allocated memory is still 1.0 GB. Free memory was 801.0 MB in the beginning and 792.0 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 17:40:30,574 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1305.60 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 188.2 MB). Free memory was 792.0 MB in the beginning and 971.3 MB in the end (delta: -179.2 MB). Peak memory consumption was 169.7 MB. Max. memory is 15.3 GB.
[2020-11-25 17:40:30,574 INFO  L168              Benchmark]: BlockEncodingV2 took 128.80 ms. Allocated memory is still 1.2 GB. Free memory was 971.3 MB in the beginning and 904.9 MB in the end (delta: 66.4 MB). Peak memory consumption was 66.4 MB. Max. memory is 15.3 GB.
[2020-11-25 17:40:30,574 INFO  L168              Benchmark]: BuchiAutomizer took 19569.30 ms. Allocated memory was 1.2 GB in the beginning and 2.3 GB in the end (delta: 1.1 GB). Free memory was 904.9 MB in the beginning and 955.3 MB in the end (delta: -50.4 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
[2020-11-25 17:40:30,577 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4126 locations, 7067 edges
  - StatisticsResult: Encoded RCFG
    4086 locations, 6961 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 109.96 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 63.20 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.30 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 785.78 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 801.0 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 41.31 ms. Allocated memory is still 1.0 GB. Free memory was 801.0 MB in the beginning and 792.0 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1305.60 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 188.2 MB). Free memory was 792.0 MB in the beginning and 971.3 MB in the end (delta: -179.2 MB). Peak memory consumption was 169.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 128.80 ms. Allocated memory is still 1.2 GB. Free memory was 971.3 MB in the beginning and 904.9 MB in the end (delta: 66.4 MB). Peak memory consumption was 66.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 19569.30 ms. Allocated memory was 1.2 GB in the beginning and 2.3 GB in the end (delta: 1.1 GB). Free memory was 904.9 MB in the beginning and 955.3 MB in the end (delta: -50.4 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1759 locations, 2200 edges
  - StatisticsResult: BuchiProgram size
    4126 locations, 7067 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 17 locations. The remainder module has 5105 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 19.5s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 10.7s. Construction of modules took 6.6s. BÃ¼chi inclusion checks took 1.6s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 2153 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 5105 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 18397 SDtfs, 20931 SDslu, 23318 SDs, 0 SdLazy, 66152 SolverSat, 3588 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 6.6s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(10000000000000000000000000015) = (new HBC)({from : 10000000000000000000000000014});
[L255]               havoc __exception;
[L256]               revert := false;
[L257]   COND FALSE  !(__exception)
[L284]   CALL        call HBC_HBC__success(this, msgsender_MSG, msgvalue_MSG);
[L2496]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2425]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2410]              assume msgsender_MSG != null;
[L2411]              Balance[this] := 0;
[L2425]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2426]  COND FALSE  !(revert)
[L2496]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2497]  COND FALSE  !(revert)
[L2500]  CALL        call HBC_HBC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2459]              assume msgsender_MSG != null;
[L2460]              Balance[this] := 0;
[L2461]              TOKEN_DECIMALS_HBC[this] := 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2462]              name_HBC[this] := 1908934807;
[L2463]              symbol_HBC[this] := -845215461;
[L2464]              totalTokenSupply_HBC[this] := 10000000000 * TOKEN_DECIMALS_HBC[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2465]              decimals_HBC[this] := 18;
[L2466]              stopped_HBC[this] := false;
[L2467]              owner_HBC[this] := null;
[L2468]              totalBurned_HBC[this] := 0;
[L2469]              balances_HBC[this] := zeroRefintArr();
[L2470]              sum_balances0[this] := 0;
[L2471]              allowed_HBC[this] := zeroRefRefintArr();
[L2472]              sum_allowed1[this] := 0;
[L2473]              forbiddenAddresses_HBC[this] := zeroRefRefArr();
[L2475]              owner_HBC[this] := msgsender_MSG;
[L2476]              sum_balances0[this] := sum_balances0[this] - balances_HBC[this][owner_HBC[this]];
[L2477]              balances_HBC[this][owner_HBC[this]] := totalTokenSupply_HBC[this];
[L2478]              sum_balances0[this] := sum_balances0[this] + balances_HBC[this][owner_HBC[this]];
[L2479]              assert { :EventEmitted "Transfer_HBC" } true;
[L2500]  RET         call HBC_HBC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  COND FALSE  !(revert)
[L284]   RET         call HBC_HBC__success(this, msgsender_MSG, msgvalue_MSG);
[L285]               assume !revert && gas >= 0;
[L4527]  RET         call HBC_HBC(this, msgsender_MSG, msgvalue_MSG);
HBC(10000000000000000000000000015).transferFrom~address~address~uint256.gas(3979002)({from : 10000000000000000000000000012, _from : 10000000000000000000000000014, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s570 && p1 != _to_s570) && (p2 != _from_s570 || p3 != msgsender_MSG)) && _from_s570 != _to_s570) && _value_s570 <= balances_HBC[this][_from_s570]) && _value_s570 <= allowed_HBC[this][_from_s570][msgsender_MSG]) && balances_HBC[this][_to_s570] + _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s570 >= 0) && _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HBC[this][_to_s570] >= 0) && balances_HBC[this][_to_s570] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HBC[this][_from_s570] >= 0) && balances_HBC[this][_from_s570] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_HBC[this][_from_s570][msgsender_MSG] >= 0) && allowed_HBC[this][_from_s570][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_HBC0 := true;
[L3]                 call_transferFrom_HBC0 := false;
[L3]                 revert := revert_hold;
[L762]               havoc __exception;
[L763]               revert := false;
[L764]   COND TRUE   __exception
[L765]               __tmp__Balance := Balance;
[L766]               __tmp__DType := DType;
[L767]               __tmp__Alloc := Alloc;
[L768]               __tmp__balance_ADDR := balance_ADDR;
[L769]               __tmp__M_Ref_int := M_Ref_int;
[L770]               __tmp__sum_balances0 := sum_balances0;
[L771]               __tmp__alloc_allowed_HBC_lvl0 := alloc_allowed_HBC_lvl0;
[L772]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L773]               __tmp__sum_allowed1 := sum_allowed1;
[L774]               __tmp__sum_forbiddenAddresses2 := sum_forbiddenAddresses2;
[L775]               __tmp__Length := Length;
[L776]               __tmp__now := now;
[L777]               __tmp__TOKEN_DECIMALS_HBC := TOKEN_DECIMALS_HBC;
[L778]               __tmp__name_HBC := name_HBC;
[L779]               __tmp__symbol_HBC := symbol_HBC;
[L780]               __tmp__totalTokenSupply_HBC := totalTokenSupply_HBC;
[L781]               __tmp__decimals_HBC := decimals_HBC;
[L782]               __tmp__stopped_HBC := stopped_HBC;
[L783]               __tmp__owner_HBC := owner_HBC;
[L784]               __tmp__totalBurned_HBC := totalBurned_HBC;
[L785]               __tmp__balances_HBC := balances_HBC;
[L786]               __tmp__allowed_HBC := allowed_HBC;
[L787]               __tmp__forbiddenAddresses_HBC := forbiddenAddresses_HBC;
[L788]   CALL        call __ret_0_ := transferFrom~address~address~uint256_HBC__fail(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L2681]  COND FALSE  !(!!__tmp__stopped_HBC[this])
[L2685]              __var_4 := null;
[L2686]  COND TRUE   !(_to_s570 != null)
[L2687]              revert := true;
[L788]   RET         call __ret_0_ := transferFrom~address~address~uint256_HBC__fail(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L789]               assume revert || gas < 0;
[L4393]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_HBC(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);

Loop:
HBC(10000000000000000000000000015).transferFrom~address~address~uint256.gas(3979001)({from : 10000000000000000000000000011, _from : 10000000000000000000000000019, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s570 && p1 != _to_s570) && (p2 != _from_s570 || p3 != msgsender_MSG)) && _from_s570 != _to_s570) && _value_s570 <= balances_HBC[this][_from_s570]) && _value_s570 <= allowed_HBC[this][_from_s570][msgsender_MSG]) && balances_HBC[this][_to_s570] + _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s570 >= 0) && _value_s570 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HBC[this][_to_s570] >= 0) && balances_HBC[this][_to_s570] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_HBC[this][_from_s570] >= 0) && balances_HBC[this][_from_s570] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_HBC[this][_from_s570][msgsender_MSG] >= 0) && allowed_HBC[this][_from_s570][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_HBC0 := true;
[L3]                 call_transferFrom_HBC0 := false;
[L3]                 revert := revert_hold;
[L762]               havoc __exception;
[L763]               revert := false;
[L764]   COND TRUE   __exception
[L765]               __tmp__Balance := Balance;
[L766]               __tmp__DType := DType;
[L767]               __tmp__Alloc := Alloc;
[L768]               __tmp__balance_ADDR := balance_ADDR;
[L769]               __tmp__M_Ref_int := M_Ref_int;
[L770]               __tmp__sum_balances0 := sum_balances0;
[L771]               __tmp__alloc_allowed_HBC_lvl0 := alloc_allowed_HBC_lvl0;
[L772]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L773]               __tmp__sum_allowed1 := sum_allowed1;
[L774]               __tmp__sum_forbiddenAddresses2 := sum_forbiddenAddresses2;
[L775]               __tmp__Length := Length;
[L776]               __tmp__now := now;
[L777]               __tmp__TOKEN_DECIMALS_HBC := TOKEN_DECIMALS_HBC;
[L778]               __tmp__name_HBC := name_HBC;
[L779]               __tmp__symbol_HBC := symbol_HBC;
[L780]               __tmp__totalTokenSupply_HBC := totalTokenSupply_HBC;
[L781]               __tmp__decimals_HBC := decimals_HBC;
[L782]               __tmp__stopped_HBC := stopped_HBC;
[L783]               __tmp__owner_HBC := owner_HBC;
[L784]               __tmp__totalBurned_HBC := totalBurned_HBC;
[L785]               __tmp__balances_HBC := balances_HBC;
[L786]               __tmp__allowed_HBC := allowed_HBC;
[L787]               __tmp__forbiddenAddresses_HBC := forbiddenAddresses_HBC;
[L788]   CALL        call __ret_0_ := transferFrom~address~address~uint256_HBC__fail(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L2681]  COND FALSE  !(!!__tmp__stopped_HBC[this])
[L2685]              __var_4 := null;
[L2686]  COND TRUE   !(_to_s570 != null)
[L2687]              revert := true;
[L788]   RET         call __ret_0_ := transferFrom~address~address~uint256_HBC__fail(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);
[L789]               assume revert || gas < 0;
[L4393]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_HBC(this, msgsender_MSG, msgvalue_MSG, _from_s570, _to_s570, _value_s570);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
