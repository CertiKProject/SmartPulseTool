This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 16:49:47,831 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 16:49:47,833 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 16:49:47,843 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 16:49:47,844 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 16:49:47,845 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 16:49:47,847 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 16:49:47,850 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 16:49:47,852 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 16:49:47,853 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 16:49:47,855 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 16:49:47,855 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 16:49:47,856 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 16:49:47,857 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 16:49:47,858 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 16:49:47,858 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 16:49:47,859 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 16:49:47,860 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 16:49:47,861 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 16:49:47,862 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 16:49:47,863 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 16:49:47,863 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 16:49:47,865 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 16:49:47,865 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 16:49:47,865 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 16:49:47,866 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 16:49:47,866 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 16:49:47,867 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 16:49:47,867 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 16:49:47,867 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 16:49:47,868 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 16:49:47,869 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 16:49:47,869 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 16:49:47,870 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 16:49:47,871 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 16:49:47,871 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 16:49:47,872 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 16:49:47,872 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 16:49:47,873 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 16:49:47,873 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 16:49:47,874 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 16:49:47,874 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 16:49:47,882 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 16:49:47,882 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 16:49:47,883 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 16:49:47,883 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 16:49:47,883 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 16:49:47,883 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 16:49:47,883 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 16:49:47,883 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 16:49:47,883 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 16:49:47,884 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 16:49:47,884 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 16:49:47,884 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 16:49:47,884 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 16:49:47,884 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 16:49:47,884 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 16:49:47,884 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 16:49:47,884 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 16:49:47,884 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 16:49:47,884 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 16:49:47,885 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 16:49:47,885 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 16:49:47,885 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 16:49:47,885 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 16:49:47,885 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 16:49:47,885 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 16:49:47,885 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 16:49:47,909 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 16:49:47,922 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 16:49:47,925 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 16:49:47,926 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 16:49:47,926 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 16:49:47,926 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl
[2020-11-25 16:49:47,927 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl'
[2020-11-25 16:49:48,017 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 16:49:48,018 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 16:49:48,018 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 16:49:48,018 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 16:49:48,018 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 16:49:48,034 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:49:48" (1/1) ...
[2020-11-25 16:49:48,036 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:49:48" (1/1) ...
[2020-11-25 16:49:48,065 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:49:48" (1/1) ...
[2020-11-25 16:49:48,066 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:49:48" (1/1) ...
[2020-11-25 16:49:48,089 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:49:48" (1/1) ...
[2020-11-25 16:49:48,099 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:49:48" (1/1) ...
[2020-11-25 16:49:48,106 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:49:48" (1/1) ...
[2020-11-25 16:49:48,114 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 16:49:48,115 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 16:49:48,115 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 16:49:48,117 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 16:49:48,121 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:49:48" (1/1) ...
[2020-11-25 16:49:48,140 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 16:49:48,145 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 16:49:48,152 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 16:49:48,159 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender!=to_s325 && ( value_s325>_balances_ERC20[this][msg.sender] || ( _balances_ERC20[this][to_s325] + value_s325 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && value_s325>=0 ) && value_s325<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s325]>=0 ) && _balances_ERC20[this][to_s325]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[to_s325,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[value_s325,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s325,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IdentifierExpression[value_s325,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s325,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s325,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s325,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s325,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 16:49:48,165 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 16:49:48,165 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(fail_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 16:49:48,173 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:49:48 PropertyContainer
[2020-11-25 16:49:48,173 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 16:49:48,173 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 16:49:48,173 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 16:49:48,174 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 16:49:48,174 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:49:48" (1/2) ...
[2020-11-25 16:49:48,175 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 16:49:48,175 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 16:49:48,188 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:49:48" (2/2) ...
[2020-11-25 16:49:48,188 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 16:49:48,188 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 16:49:48,188 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 16:49:48,188 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 16:49:48,189 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:49:48" (1/2) ...
[2020-11-25 16:49:48,243 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 16:49:48,243 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 16:49:48,243 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 16:49:48,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 16:49:48,243 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 16:49:48,243 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 16:49:48,243 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 16:49:48,243 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 16:49:48,244 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 16:49:48,244 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 16:49:48,244 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:49:48,244 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 16:49:48,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 16:49:48,244 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:49:48,244 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:49:48,244 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 16:49:48,244 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:49:48,245 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:49:48,245 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 16:49:48,245 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 16:49:48,245 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 16:49:48,245 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 16:49:48,245 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 16:49:48,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 16:49:48,245 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 16:49:48,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 16:49:48,245 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 16:49:48,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 16:49:48,246 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 16:49:48,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 16:49:48,246 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 16:49:48,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 16:49:48,246 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 16:49:48,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 16:49:48,246 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 16:49:48,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 16:49:48,246 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 16:49:48,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 16:49:48,246 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 16:49:48,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 16:49:48,247 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 16:49:48,247 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 16:49:48,247 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 16:49:48,247 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 16:49:48,247 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 16:49:48,247 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 16:49:48,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 16:49:48,247 INFO  L130     BoogieDeclarations]: Found specification of procedure changeOwner~address_Owned
[2020-11-25 16:49:48,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeOwner~address_Owned
[2020-11-25 16:49:48,247 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 16:49:48,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 16:49:48,247 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 16:49:48,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 16:49:48,247 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 16:49:48,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 16:49:48,248 INFO  L130     BoogieDeclarations]: Found specification of procedure FnxToken_FnxToken_NoBaseCtor__success
[2020-11-25 16:49:48,248 INFO  L130     BoogieDeclarations]: Found specification of procedure FnxToken_FnxToken
[2020-11-25 16:49:48,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure FnxToken_FnxToken
[2020-11-25 16:49:48,248 INFO  L130     BoogieDeclarations]: Found specification of procedure name_FnxToken
[2020-11-25 16:49:48,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_FnxToken
[2020-11-25 16:49:48,248 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_FnxToken
[2020-11-25 16:49:48,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_FnxToken
[2020-11-25 16:49:48,248 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_FnxToken
[2020-11-25 16:49:48,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_FnxToken
[2020-11-25 16:49:48,248 INFO  L130     BoogieDeclarations]: Found specification of procedure changeTokenName~string~string_FnxToken
[2020-11-25 16:49:48,249 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeTokenName~string~string_FnxToken
[2020-11-25 16:49:48,249 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_FnxToken
[2020-11-25 16:49:48,249 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_FnxToken
[2020-11-25 16:49:48,249 INFO  L130     BoogieDeclarations]: Found specification of procedure MAX_TOTAL_TOKEN_AMOUNT_FnxToken
[2020-11-25 16:49:48,249 INFO  L138     BoogieDeclarations]: Found implementation of procedure MAX_TOTAL_TOKEN_AMOUNT_FnxToken
[2020-11-25 16:49:48,249 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 16:49:48,249 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 16:49:48,249 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 16:49:48,249 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 16:49:48,249 INFO  L130     BoogieDeclarations]: Found specification of procedure maxWanTokenAmountNotReached_pre__success
[2020-11-25 16:49:48,250 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 16:49:48,250 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 16:49:48,250 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 16:49:48,250 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 16:49:48,250 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 16:49:48,250 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 16:49:48,250 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 16:49:48,250 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 16:49:48,250 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_FnxToken
[2020-11-25 16:49:48,250 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 16:49:48,251 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 16:49:48,251 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 16:49:48,251 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 16:49:48,251 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 16:49:48,251 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:49:48,251 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 16:49:48,251 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 16:49:48,251 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:49:48,251 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:49:48,251 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 16:49:48,252 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:49:48,252 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:49:48,252 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 16:49:48,252 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 16:49:48,252 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 16:49:48,252 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 16:49:48,252 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 16:49:48,252 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 16:49:48,252 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 16:49:48,252 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 16:49:48,252 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 16:49:48,253 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 16:49:48,253 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 16:49:48,253 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 16:49:48,253 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 16:49:48,253 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 16:49:48,253 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 16:49:48,253 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 16:49:48,253 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 16:49:48,254 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 16:49:48,254 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:49:48,254 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:49:48,254 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:49:48,254 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:49:48,254 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 16:49:48,254 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 16:49:48,254 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 16:49:48,254 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 16:49:48,254 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 16:49:48,254 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 16:49:48,255 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 16:49:48,255 INFO  L130     BoogieDeclarations]: Found specification of procedure changeOwner~address_Owned__success
[2020-11-25 16:49:48,255 INFO  L130     BoogieDeclarations]: Found specification of procedure changeOwner~address_Owned__fail
[2020-11-25 16:49:48,255 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 16:49:48,255 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 16:49:48,255 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 16:49:48,255 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 16:49:48,255 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 16:49:48,255 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 16:49:48,255 INFO  L130     BoogieDeclarations]: Found specification of procedure FnxToken_FnxToken_NoBaseCtor__fail
[2020-11-25 16:49:48,256 INFO  L130     BoogieDeclarations]: Found specification of procedure FnxToken_FnxToken__success
[2020-11-25 16:49:48,256 INFO  L130     BoogieDeclarations]: Found specification of procedure FnxToken_FnxToken__fail
[2020-11-25 16:49:48,256 INFO  L130     BoogieDeclarations]: Found specification of procedure name_FnxToken__success
[2020-11-25 16:49:48,256 INFO  L130     BoogieDeclarations]: Found specification of procedure name_FnxToken__fail
[2020-11-25 16:49:48,256 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_FnxToken__success
[2020-11-25 16:49:48,256 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_FnxToken__fail
[2020-11-25 16:49:48,256 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_FnxToken__success
[2020-11-25 16:49:48,256 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_FnxToken__fail
[2020-11-25 16:49:48,256 INFO  L130     BoogieDeclarations]: Found specification of procedure changeTokenName~string~string_FnxToken__success
[2020-11-25 16:49:48,257 INFO  L130     BoogieDeclarations]: Found specification of procedure changeTokenName~string~string_FnxToken__fail
[2020-11-25 16:49:48,257 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_FnxToken__success
[2020-11-25 16:49:48,257 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_FnxToken__fail
[2020-11-25 16:49:48,257 INFO  L130     BoogieDeclarations]: Found specification of procedure MAX_TOTAL_TOKEN_AMOUNT_FnxToken__success
[2020-11-25 16:49:48,257 INFO  L130     BoogieDeclarations]: Found specification of procedure MAX_TOTAL_TOKEN_AMOUNT_FnxToken__fail
[2020-11-25 16:49:48,257 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 16:49:48,257 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 16:49:48,257 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 16:49:48,257 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 16:49:48,257 INFO  L130     BoogieDeclarations]: Found specification of procedure maxWanTokenAmountNotReached_pre__fail
[2020-11-25 16:49:48,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 16:49:48,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 16:49:48,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 16:49:48,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 16:49:48,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 16:49:48,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 16:49:48,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:49:48,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:49:48,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 16:49:48,258 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 16:49:48,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:49:48,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:49:48,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:49:48,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:49:48,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 16:49:48,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 16:49:48,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:49:48,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:49:48,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:49:48,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:49:48,259 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 16:49:48,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 16:49:48,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 16:49:48,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 16:49:48,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 16:49:48,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 16:49:48,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 16:49:48,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 16:49:48,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 16:49:48,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 16:49:48,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 16:49:48,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 16:49:48,260 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 16:49:48,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 16:49:48,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 16:49:48,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 16:49:48,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 16:49:48,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 16:49:48,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 16:49:48,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 16:49:48,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 16:49:48,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 16:49:48,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:49:48,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:49:48,261 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:49:48,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:49:48,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 16:49:48,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 16:49:48,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 16:49:48,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 16:49:48,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 16:49:48,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 16:49:48,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 16:49:48,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 16:49:48,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 16:49:48,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 16:49:48,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 16:49:48,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 16:49:48,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeOwner~address_Owned__fail
[2020-11-25 16:49:48,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeOwner~address_Owned__success
[2020-11-25 16:49:48,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 16:49:48,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 16:49:48,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 16:49:48,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 16:49:48,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 16:49:48,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 16:49:48,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure FnxToken_FnxToken_NoBaseCtor__fail
[2020-11-25 16:49:48,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure FnxToken_FnxToken_NoBaseCtor__success
[2020-11-25 16:49:48,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure FnxToken_FnxToken__fail
[2020-11-25 16:49:48,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure FnxToken_FnxToken__success
[2020-11-25 16:49:48,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_FnxToken__fail
[2020-11-25 16:49:48,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_FnxToken__success
[2020-11-25 16:49:48,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_FnxToken__fail
[2020-11-25 16:49:48,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_FnxToken__success
[2020-11-25 16:49:48,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_FnxToken__fail
[2020-11-25 16:49:48,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_FnxToken__success
[2020-11-25 16:49:48,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeTokenName~string~string_FnxToken__fail
[2020-11-25 16:49:48,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeTokenName~string~string_FnxToken__success
[2020-11-25 16:49:48,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_FnxToken__fail
[2020-11-25 16:49:48,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_FnxToken__success
[2020-11-25 16:49:48,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure MAX_TOTAL_TOKEN_AMOUNT_FnxToken__fail
[2020-11-25 16:49:48,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure MAX_TOTAL_TOKEN_AMOUNT_FnxToken__success
[2020-11-25 16:49:48,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 16:49:48,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 16:49:48,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 16:49:48,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 16:49:48,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 16:49:48,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 16:49:48,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 16:49:48,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 16:49:48,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure maxWanTokenAmountNotReached_pre__fail
[2020-11-25 16:49:48,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure maxWanTokenAmountNotReached_pre__success
[2020-11-25 16:49:48,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 16:49:48,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 16:49:48,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 16:49:48,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 16:49:48,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 16:49:48,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 16:49:48,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 16:49:48,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 16:49:48,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_FnxToken
[2020-11-25 16:49:48,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 16:49:48,266 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 16:49:48,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 16:49:48,457 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:49:48,457 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:49:48,891 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 16:49:48,891 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 16:49:48,893 INFO  L202        PluginConnector]: Adding new model FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:49:48 BoogieIcfgContainer
[2020-11-25 16:49:48,893 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:49:48" (2/2) ...
[2020-11-25 16:49:48,893 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 16:49:48,893 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@47ca9420 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:49:48, skipping insertion in model container
[2020-11-25 16:49:48,893 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 16:49:48,893 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 16:49:48,894 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 16:49:48,895 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 16:49:48,895 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:49:48" (1/3) ...
[2020-11-25 16:49:48,896 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1540334f and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:49:48, skipping insertion in model container
[2020-11-25 16:49:48,896 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:49:48" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 16:49:48,933 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:49:48 NWAContainer
[2020-11-25 16:49:48,933 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 16:49:48,934 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 16:49:48,934 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 16:49:48,934 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 16:49:48,935 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:49:48" (3/4) ...
[2020-11-25 16:49:48,936 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@7c2cabd7 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:49:48, skipping insertion in model container
[2020-11-25 16:49:48,936 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:49:48" (4/4) ...
[2020-11-25 16:49:48,939 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 16:49:48,942 INFO  L110   BuchiProductObserver]: Initial RCFG 1564 locations, 2063 edges
[2020-11-25 16:49:48,942 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 16:49:48,953 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 16:49:50,302 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 16:49:50,307 INFO  L110   BuchiProductObserver]: BuchiProgram size 3846 locations, 6762 edges
[2020-11-25 16:49:50,308 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:49:50 BoogieIcfgContainer
[2020-11-25 16:49:50,308 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 16:49:50,308 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 16:49:50,308 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 16:49:50,309 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 16:49:50,310 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:49:50" (1/1) ...
[2020-11-25 16:49:50,374 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_2 := div~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s186, b_s186, -1820858731);
[2020-11-25 16:49:50,375 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_19 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][account_s680][msgsender_MSG], value_s680);
[2020-11-25 16:49:50,375 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_3 := mod~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s229, b_s229, -1950754390);
[2020-11-25 16:49:50,376 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_3 := mod~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s229, b_s229, -1950754390);
[2020-11-25 16:49:50,377 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_2 := div~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s186, b_s186, -1820858731);
[2020-11-25 16:49:50,378 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_19 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][account_s680][msgsender_MSG], value_s680);
[2020-11-25 16:49:50,388 INFO  L313           BlockEncoder]: Initial Icfg 3846 locations, 6762 edges
[2020-11-25 16:49:50,388 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 16:49:50,389 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 16:49:50,389 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 16:49:50,389 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 16:49:50,401 INFO  L70    emoveInfeasibleEdges]: Removed 93 edges and 14 locations because of local infeasibility
[2020-11-25 16:49:50,412 INFO  L70        RemoveSinkStates]: Removed 122 edges and 66 locations by removing sink states
[2020-11-25 16:49:50,423 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 16:49:50,427 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 16:49:50,430 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 16:49:50,431 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 16:49:50,435 INFO  L313           BlockEncoder]: Encoded RCFG 3740 locations, 6509 edges
[2020-11-25 16:49:50,436 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:49:50 BasicIcfg
[2020-11-25 16:49:50,436 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 16:49:50,436 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 16:49:50,436 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 16:49:50,438 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 16:49:50,438 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:49:50,438 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:49:48" (1/6) ...
[2020-11-25 16:49:50,440 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b2985b2 and model type FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:49:50, skipping insertion in model container
[2020-11-25 16:49:50,440 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:49:50,440 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:49:48" (2/6) ...
[2020-11-25 16:49:50,440 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b2985b2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:49:50, skipping insertion in model container
[2020-11-25 16:49:50,440 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:49:50,440 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:49:48" (3/6) ...
[2020-11-25 16:49:50,440 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b2985b2 and model type FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:49:50, skipping insertion in model container
[2020-11-25 16:49:50,440 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:49:50,440 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:49:48" (4/6) ...
[2020-11-25 16:49:50,440 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b2985b2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:49:50, skipping insertion in model container
[2020-11-25 16:49:50,440 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:49:50,440 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:49:50" (5/6) ...
[2020-11-25 16:49:50,441 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b2985b2 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 04:49:50, skipping insertion in model container
[2020-11-25 16:49:50,441 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:49:50,441 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:49:50" (6/6) ...
[2020-11-25 16:49:50,442 INFO  L404   chiAutomizerObserver]: Analyzing ICFG FnxToken_0xef9cd7882c067686691b6ff49e650b43afbbcc6b_transfer-fail.bpl_BEv2
[2020-11-25 16:49:50,476 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 16:49:50,476 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 16:49:50,476 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 16:49:50,476 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 16:49:50,476 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 16:49:50,476 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 16:49:50,477 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 16:49:50,477 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 16:49:50,477 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 16:49:50,506 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3740 states.
[2020-11-25 16:49:50,554 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:49:50,554 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:49:50,554 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:49:50,563 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:49:50,563 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:49:50,563 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 16:49:50,563 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3740 states.
[2020-11-25 16:49:50,577 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:49:50,577 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:49:50,577 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:49:50,579 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:49:50,579 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L4426]              assume null == 0;
[L4427]  CALL        call this := FreshRefGenerator__success();
[L2000]              havoc newRef;
[L2001]              assume Alloc[newRef] == false;
[L2002]              Alloc[newRef] := true;
[L2003]              assume newRef != null;
[L4427]  RET         call this := FreshRefGenerator__success();
[L4428]              assume now >= 0;
[L4429]              assume DType[this] == FnxToken;
[L4430]              assume msgvalue_MSG == 0;
[L4431]              gas := gas - 53000;
[L4432]  CALL        call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2894]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2768]              assume msgsender_MSG != null;
[L2769]              Balance[this] := 0;
[L2770]              owner_Owned[this] := null;
[L2771]              newOwner_Owned[this] := null;
[L2773]              owner_Owned[this] := msgsender_MSG;
[L2786]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L2894]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2895]  COND TRUE   revert
[L4432]  RET         call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4433]              assume !revert && gas >= 0;

Loop:
[L4436]  CALL        call CorralChoice_FnxToken(this);
[L4255]              havoc msgsender_MSG;
[L4256]              havoc msgvalue_MSG;
[L4257]              havoc choice;
[L4258]              havoc to_s325;
[L4259]              havoc value_s325;
[L4260]              havoc __ret_0_transfer;
[L4261]              havoc spender_s361;
[L4262]              havoc value_s361;
[L4263]              havoc __ret_0_approve;
[L4264]              havoc from_s410;
[L4265]              havoc to_s410;
[L4266]              havoc value_s410;
[L4267]              havoc __ret_0_transferFrom;
[L4268]              havoc __ret_0_totalSupply;
[L4269]              havoc owner_s290;
[L4270]              havoc __ret_0_balanceOf;
[L4271]              havoc owner_s306;
[L4272]              havoc spender_s306;
[L4273]              havoc __ret_0_allowance;
[L4274]              havoc spender_s459;
[L4275]              havoc addedValue_s459;
[L4276]              havoc __ret_0_increaseAllowance;
[L4277]              havoc spender_s508;
[L4278]              havoc subtractedValue_s508;
[L4279]              havoc __ret_0_decreaseAllowance;
[L4280]              havoc __ret_0_owner;
[L4281]              havoc __ret_0_newOwner;
[L4282]              havoc _newOwner_s717;
[L4283]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4284]              havoc __ret_0_name;
[L4285]              havoc __ret_0_symbol;
[L4286]              havoc __ret_0_decimals;
[L4287]              havoc newName_s809;
[L4288]              havoc newSymbol_s809;
[L4289]              havoc account_s827;
[L4290]              havoc amount_s827;
[L4291]              havoc tmpNow;
[L4292]              havoc gas;
[L4293]              assume gas > 4000000 && gas <= 8000000;
[L4294]              tmpNow := now;
[L4295]              havoc now;
[L4296]              assume now > tmpNow;
[L4297]              assume msgsender_MSG != null;
[L4298]              assume DType[msgsender_MSG] != IERC20;
[L4299]              assume DType[msgsender_MSG] != SafeMath;
[L4300]              assume DType[msgsender_MSG] != ERC20;
[L4301]              assume DType[msgsender_MSG] != Owned;
[L4302]              assume DType[msgsender_MSG] != FnxToken;
[L4303]              Alloc[msgsender_MSG] := true;
[L4304]  COND TRUE   choice == 18
[L4305]              gas := gas - 21000;
[L4306]  COND FALSE  !(gas >= 0)
[L4436]  RET         call CorralChoice_FnxToken(this);

[2020-11-25 16:49:50,591 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:49:50,591 INFO  L82        PathProgramCache]: Analyzing trace with hash 2076547372, now seen corresponding path program 1 times
[2020-11-25 16:49:50,595 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:49:50,613 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:49:50,657 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:49:50,659 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:49:50,659 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 16:49:50,834 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:49:50,842 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 16:49:50,842 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 16:49:50,844 INFO  L87              Difference]: Start difference. First operand 3740 states. Second operand 3 states.
[2020-11-25 16:49:50,979 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:49:50,979 INFO  L93              Difference]: Finished difference Result 3352 states and 5402 transitions.
[2020-11-25 16:49:50,979 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 16:49:50,980 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3352 states and 5402 transitions.
[2020-11-25 16:49:50,999 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:49:51,040 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3352 states to 3350 states and 5396 transitions.
[2020-11-25 16:49:51,041 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 14
[2020-11-25 16:49:51,045 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 948
[2020-11-25 16:49:51,046 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3350 states and 5396 transitions.
[2020-11-25 16:49:51,060 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:49:51,060 INFO  L728         BuchiCegarLoop]: Abstraction has 3350 states and 5396 transitions.
[2020-11-25 16:49:51,078 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3350 states and 5396 transitions.
[2020-11-25 16:49:51,145 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3350 to 2776.
[2020-11-25 16:49:51,146 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2776 states.
[2020-11-25 16:49:51,155 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2776 states to 2776 states and 4389 transitions.
[2020-11-25 16:49:51,156 INFO  L751         BuchiCegarLoop]: Abstraction has 2776 states and 4389 transitions.
[2020-11-25 16:49:51,156 INFO  L631         BuchiCegarLoop]: Abstraction has 2776 states and 4389 transitions.
[2020-11-25 16:49:51,156 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 16:49:51,156 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2776 states and 4389 transitions.
[2020-11-25 16:49:51,167 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:49:51,168 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:49:51,168 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:49:51,169 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:49:51,169 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                fail_transfer_ERC200 := false;
[L2]                call_transfer_ERC200 := false;
[L2]     CALL       call main();
[L4426]             assume null == 0;
[L4427]  CALL       call this := FreshRefGenerator__success();
[L2000]             havoc newRef;
[L2001]             assume Alloc[newRef] == false;
[L2002]             Alloc[newRef] := true;
[L2003]             assume newRef != null;
[L4427]  RET        call this := FreshRefGenerator__success();
[L4428]             assume now >= 0;
[L4429]             assume DType[this] == FnxToken;
[L4430]             assume msgvalue_MSG == 0;
[L4431]             gas := gas - 53000;
[L4432]  CALL       call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2894]  CALL       call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  CALL       call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2768]             assume msgsender_MSG != null;
[L2769]             Balance[this] := 0;
[L2770]             owner_Owned[this] := null;
[L2771]             newOwner_Owned[this] := null;
[L2773]             owner_Owned[this] := msgsender_MSG;
[L2786]  RET        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND TRUE  revert
[L2894]  RET        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2895]  COND TRUE  revert
[L4432]  RET        call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4433]             assume !revert && gas >= 0;

Loop:
[L4436]  CALL        call CorralChoice_FnxToken(this);
[L4255]              havoc msgsender_MSG;
[L4256]              havoc msgvalue_MSG;
[L4257]              havoc choice;
[L4258]              havoc to_s325;
[L4259]              havoc value_s325;
[L4260]              havoc __ret_0_transfer;
[L4261]              havoc spender_s361;
[L4262]              havoc value_s361;
[L4263]              havoc __ret_0_approve;
[L4264]              havoc from_s410;
[L4265]              havoc to_s410;
[L4266]              havoc value_s410;
[L4267]              havoc __ret_0_transferFrom;
[L4268]              havoc __ret_0_totalSupply;
[L4269]              havoc owner_s290;
[L4270]              havoc __ret_0_balanceOf;
[L4271]              havoc owner_s306;
[L4272]              havoc spender_s306;
[L4273]              havoc __ret_0_allowance;
[L4274]              havoc spender_s459;
[L4275]              havoc addedValue_s459;
[L4276]              havoc __ret_0_increaseAllowance;
[L4277]              havoc spender_s508;
[L4278]              havoc subtractedValue_s508;
[L4279]              havoc __ret_0_decreaseAllowance;
[L4280]              havoc __ret_0_owner;
[L4281]              havoc __ret_0_newOwner;
[L4282]              havoc _newOwner_s717;
[L4283]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4284]              havoc __ret_0_name;
[L4285]              havoc __ret_0_symbol;
[L4286]              havoc __ret_0_decimals;
[L4287]              havoc newName_s809;
[L4288]              havoc newSymbol_s809;
[L4289]              havoc account_s827;
[L4290]              havoc amount_s827;
[L4291]              havoc tmpNow;
[L4292]              havoc gas;
[L4293]              assume gas > 4000000 && gas <= 8000000;
[L4294]              tmpNow := now;
[L4295]              havoc now;
[L4296]              assume now > tmpNow;
[L4297]              assume msgsender_MSG != null;
[L4298]              assume DType[msgsender_MSG] != IERC20;
[L4299]              assume DType[msgsender_MSG] != SafeMath;
[L4300]              assume DType[msgsender_MSG] != ERC20;
[L4301]              assume DType[msgsender_MSG] != Owned;
[L4302]              assume DType[msgsender_MSG] != FnxToken;
[L4303]              Alloc[msgsender_MSG] := true;
[L4304]  COND TRUE   choice == 18
[L4305]              gas := gas - 21000;
[L4306]  COND FALSE  !(gas >= 0)
[L4436]  RET         call CorralChoice_FnxToken(this);

[2020-11-25 16:49:51,171 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:49:51,171 INFO  L82        PathProgramCache]: Analyzing trace with hash 1396489002, now seen corresponding path program 1 times
[2020-11-25 16:49:51,172 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:49:51,178 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:49:51,186 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:49:51,186 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:49:51,186 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [2] imperfect sequences [] total 2
[2020-11-25 16:49:51,188 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:49:51,188 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 16:49:51,188 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 16:49:51,188 INFO  L87              Difference]: Start difference. First operand 2776 states and 4389 transitions. cyclomatic complexity: 1615 Second operand 3 states.
[2020-11-25 16:49:51,273 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:49:51,274 INFO  L93              Difference]: Finished difference Result 3354 states and 5266 transitions.
[2020-11-25 16:49:51,274 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 16:49:51,274 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3354 states and 5266 transitions.
[2020-11-25 16:49:51,290 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:49:51,308 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3354 states to 3158 states and 4967 transitions.
[2020-11-25 16:49:51,308 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 880
[2020-11-25 16:49:51,310 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 907
[2020-11-25 16:49:51,310 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3158 states and 4967 transitions.
[2020-11-25 16:49:51,314 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:49:51,314 INFO  L728         BuchiCegarLoop]: Abstraction has 3158 states and 4967 transitions.
[2020-11-25 16:49:51,317 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3158 states and 4967 transitions.
[2020-11-25 16:49:51,343 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3158 to 2660.
[2020-11-25 16:49:51,343 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2660 states.
[2020-11-25 16:49:51,348 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2660 states to 2660 states and 4065 transitions.
[2020-11-25 16:49:51,348 INFO  L751         BuchiCegarLoop]: Abstraction has 2660 states and 4065 transitions.
[2020-11-25 16:49:51,348 INFO  L631         BuchiCegarLoop]: Abstraction has 2660 states and 4065 transitions.
[2020-11-25 16:49:51,348 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 16:49:51,348 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2660 states and 4065 transitions.
[2020-11-25 16:49:51,354 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:49:51,355 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:49:51,355 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:49:51,356 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:49:51,356 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L4426]              assume null == 0;
[L4427]  CALL        call this := FreshRefGenerator__success();
[L2000]              havoc newRef;
[L2001]              assume Alloc[newRef] == false;
[L2002]              Alloc[newRef] := true;
[L2003]              assume newRef != null;
[L4427]  RET         call this := FreshRefGenerator__success();
[L4428]              assume now >= 0;
[L4429]              assume DType[this] == FnxToken;
[L4430]              assume msgvalue_MSG == 0;
[L4431]              gas := gas - 53000;
[L4432]  CALL        call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2894]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2768]              assume msgsender_MSG != null;
[L2769]              Balance[this] := 0;
[L2770]              owner_Owned[this] := null;
[L2771]              newOwner_Owned[this] := null;
[L2773]              owner_Owned[this] := msgsender_MSG;
[L2786]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L2894]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2895]  COND FALSE  !(revert)
[L2898]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2032]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2017]              assume msgsender_MSG != null;
[L2018]              Balance[this] := 0;
[L2032]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2033]  COND FALSE  !(revert)
[L2898]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2899]  COND FALSE  !(revert)
[L2902]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2300]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2032]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2017]              assume msgsender_MSG != null;
[L2018]              Balance[this] := 0;
[L2032]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2033]  COND FALSE  !(revert)
[L2300]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2301]  COND FALSE  !(revert)
[L2304]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]              assume msgsender_MSG != null;
[L2277]              Balance[this] := 0;
[L2278]              _balances_ERC20[this] := zeroRefintArr();
[L2279]              sum__balances0[this] := 0;
[L2280]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2281]              sum__allowed1[this] := 0;
[L2282]              _totalSupply_ERC20[this] := 0;
[L2304]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2305]  COND FALSE  !(revert)
[L2902]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2903]  COND FALSE  !(revert)
[L2906]  CALL        call FnxToken_FnxToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2863]              assume msgsender_MSG != null;
[L2864]              Balance[this] := 0;
[L2865]              _name_FnxToken[this] := 699458114;
[L2866]              _symbol_FnxToken[this] := -216537299;
[L2867]              _decimals_FnxToken[this] := 18;
[L2868]              MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this] := 500000000;
[L2906]  RET         call FnxToken_FnxToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2907]  COND FALSE  !(revert)
[L4432]  RET         call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4433]              assume !revert && gas >= 0;

Loop:
[L4436]  CALL        call CorralChoice_FnxToken(this);
[L4255]              havoc msgsender_MSG;
[L4256]              havoc msgvalue_MSG;
[L4257]              havoc choice;
[L4258]              havoc to_s325;
[L4259]              havoc value_s325;
[L4260]              havoc __ret_0_transfer;
[L4261]              havoc spender_s361;
[L4262]              havoc value_s361;
[L4263]              havoc __ret_0_approve;
[L4264]              havoc from_s410;
[L4265]              havoc to_s410;
[L4266]              havoc value_s410;
[L4267]              havoc __ret_0_transferFrom;
[L4268]              havoc __ret_0_totalSupply;
[L4269]              havoc owner_s290;
[L4270]              havoc __ret_0_balanceOf;
[L4271]              havoc owner_s306;
[L4272]              havoc spender_s306;
[L4273]              havoc __ret_0_allowance;
[L4274]              havoc spender_s459;
[L4275]              havoc addedValue_s459;
[L4276]              havoc __ret_0_increaseAllowance;
[L4277]              havoc spender_s508;
[L4278]              havoc subtractedValue_s508;
[L4279]              havoc __ret_0_decreaseAllowance;
[L4280]              havoc __ret_0_owner;
[L4281]              havoc __ret_0_newOwner;
[L4282]              havoc _newOwner_s717;
[L4283]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4284]              havoc __ret_0_name;
[L4285]              havoc __ret_0_symbol;
[L4286]              havoc __ret_0_decimals;
[L4287]              havoc newName_s809;
[L4288]              havoc newSymbol_s809;
[L4289]              havoc account_s827;
[L4290]              havoc amount_s827;
[L4291]              havoc tmpNow;
[L4292]              havoc gas;
[L4293]              assume gas > 4000000 && gas <= 8000000;
[L4294]              tmpNow := now;
[L4295]              havoc now;
[L4296]              assume now > tmpNow;
[L4297]              assume msgsender_MSG != null;
[L4298]              assume DType[msgsender_MSG] != IERC20;
[L4299]              assume DType[msgsender_MSG] != SafeMath;
[L4300]              assume DType[msgsender_MSG] != ERC20;
[L4301]              assume DType[msgsender_MSG] != Owned;
[L4302]              assume DType[msgsender_MSG] != FnxToken;
[L4303]              Alloc[msgsender_MSG] := true;
[L4304]  COND TRUE   choice == 18
[L4305]              gas := gas - 21000;
[L4306]  COND FALSE  !(gas >= 0)
[L4436]  RET         call CorralChoice_FnxToken(this);

[2020-11-25 16:49:51,358 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:49:51,358 INFO  L82        PathProgramCache]: Analyzing trace with hash -1841955726, now seen corresponding path program 1 times
[2020-11-25 16:49:51,359 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:49:51,365 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:49:51,377 INFO  L134       CoverageAnalysis]: Checked inductivity of 9 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 9 trivial. 0 not checked.
[2020-11-25 16:49:51,378 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:49:51,378 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:49:51,378 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:49:51,378 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:49:51,378 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:49:51,378 INFO  L87              Difference]: Start difference. First operand 2660 states and 4065 transitions. cyclomatic complexity: 1407 Second operand 4 states.
[2020-11-25 16:49:51,605 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:49:51,606 INFO  L93              Difference]: Finished difference Result 2472 states and 2673 transitions.
[2020-11-25 16:49:51,606 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:49:51,606 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2472 states and 2673 transitions.
[2020-11-25 16:49:51,613 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:49:51,621 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2472 states to 2472 states and 2673 transitions.
[2020-11-25 16:49:51,621 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 675
[2020-11-25 16:49:51,621 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 713
[2020-11-25 16:49:51,621 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2472 states and 2673 transitions.
[2020-11-25 16:49:51,623 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:49:51,623 INFO  L728         BuchiCegarLoop]: Abstraction has 2472 states and 2673 transitions.
[2020-11-25 16:49:51,626 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2472 states and 2673 transitions.
[2020-11-25 16:49:51,641 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2472 to 2462.
[2020-11-25 16:49:51,641 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2462 states.
[2020-11-25 16:49:51,644 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2462 states to 2462 states and 2663 transitions.
[2020-11-25 16:49:51,645 INFO  L751         BuchiCegarLoop]: Abstraction has 2462 states and 2663 transitions.
[2020-11-25 16:49:51,645 INFO  L631         BuchiCegarLoop]: Abstraction has 2462 states and 2663 transitions.
[2020-11-25 16:49:51,645 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 16:49:51,645 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2462 states and 2663 transitions.
[2020-11-25 16:49:51,649 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:49:51,649 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:49:51,649 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:49:51,651 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:49:51,651 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L4426]              assume null == 0;
[L4427]  CALL        call this := FreshRefGenerator__success();
[L2000]              havoc newRef;
[L2001]              assume Alloc[newRef] == false;
[L2002]              Alloc[newRef] := true;
[L2003]              assume newRef != null;
[L4427]  RET         call this := FreshRefGenerator__success();
[L4428]              assume now >= 0;
[L4429]              assume DType[this] == FnxToken;
[L4430]              assume msgvalue_MSG == 0;
[L4431]              gas := gas - 53000;
[L4432]  CALL        call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2894]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2768]              assume msgsender_MSG != null;
[L2769]              Balance[this] := 0;
[L2770]              owner_Owned[this] := null;
[L2771]              newOwner_Owned[this] := null;
[L2773]              owner_Owned[this] := msgsender_MSG;
[L2786]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L2894]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2895]  COND FALSE  !(revert)
[L2898]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2032]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2017]              assume msgsender_MSG != null;
[L2018]              Balance[this] := 0;
[L2032]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2033]  COND FALSE  !(revert)
[L2898]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2899]  COND FALSE  !(revert)
[L2902]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2300]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2032]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2017]              assume msgsender_MSG != null;
[L2018]              Balance[this] := 0;
[L2032]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2033]  COND FALSE  !(revert)
[L2300]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2301]  COND FALSE  !(revert)
[L2304]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]              assume msgsender_MSG != null;
[L2277]              Balance[this] := 0;
[L2278]              _balances_ERC20[this] := zeroRefintArr();
[L2279]              sum__balances0[this] := 0;
[L2280]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2281]              sum__allowed1[this] := 0;
[L2282]              _totalSupply_ERC20[this] := 0;
[L2304]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2305]  COND FALSE  !(revert)
[L2902]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2903]  COND FALSE  !(revert)
[L2906]  CALL        call FnxToken_FnxToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2863]              assume msgsender_MSG != null;
[L2864]              Balance[this] := 0;
[L2865]              _name_FnxToken[this] := 699458114;
[L2866]              _symbol_FnxToken[this] := -216537299;
[L2867]              _decimals_FnxToken[this] := 18;
[L2868]              MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this] := 500000000;
[L2906]  RET         call FnxToken_FnxToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2907]  COND FALSE  !(revert)
[L4432]  RET         call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4433]              assume !revert && gas >= 0;
[L4436]  CALL        call CorralChoice_FnxToken(this);
[L4255]              havoc msgsender_MSG;
[L4256]              havoc msgvalue_MSG;
[L4257]              havoc choice;
[L4258]              havoc to_s325;
[L4259]              havoc value_s325;
[L4260]              havoc __ret_0_transfer;
[L4261]              havoc spender_s361;
[L4262]              havoc value_s361;
[L4263]              havoc __ret_0_approve;
[L4264]              havoc from_s410;
[L4265]              havoc to_s410;
[L4266]              havoc value_s410;
[L4267]              havoc __ret_0_transferFrom;
[L4268]              havoc __ret_0_totalSupply;
[L4269]              havoc owner_s290;
[L4270]              havoc __ret_0_balanceOf;
[L4271]              havoc owner_s306;
[L4272]              havoc spender_s306;
[L4273]              havoc __ret_0_allowance;
[L4274]              havoc spender_s459;
[L4275]              havoc addedValue_s459;
[L4276]              havoc __ret_0_increaseAllowance;
[L4277]              havoc spender_s508;
[L4278]              havoc subtractedValue_s508;
[L4279]              havoc __ret_0_decreaseAllowance;
[L4280]              havoc __ret_0_owner;
[L4281]              havoc __ret_0_newOwner;
[L4282]              havoc _newOwner_s717;
[L4283]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4284]              havoc __ret_0_name;
[L4285]              havoc __ret_0_symbol;
[L4286]              havoc __ret_0_decimals;
[L4287]              havoc newName_s809;
[L4288]              havoc newSymbol_s809;
[L4289]              havoc account_s827;
[L4290]              havoc amount_s827;
[L4291]              havoc tmpNow;
[L4292]              havoc gas;
[L4293]              assume gas > 4000000 && gas <= 8000000;
[L4294]              tmpNow := now;
[L4295]              havoc now;
[L4296]              assume now > tmpNow;
[L4297]              assume msgsender_MSG != null;
[L4298]              assume DType[msgsender_MSG] != IERC20;
[L4299]              assume DType[msgsender_MSG] != SafeMath;
[L4300]              assume DType[msgsender_MSG] != ERC20;
[L4301]              assume DType[msgsender_MSG] != Owned;
[L4302]              assume DType[msgsender_MSG] != FnxToken;
[L4303]              Alloc[msgsender_MSG] := true;
[L4304]  COND TRUE   choice == 18
[L4305]              gas := gas - 21000;
[L4306]  COND TRUE   gas >= 0
[L4307]              assume value_s325 >= 0 && value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4308]              assume msgvalue_MSG == 0;
[L4309]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s325 && (value_s325 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s325] + value_s325 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s325 >= 0) && value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s325] >= 0) && _balances_ERC20[this][to_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L448]               havoc __exception;
[L449]               revert := false;
[L450]   COND FALSE  !(__exception)
[L474]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L2367]  COND TRUE   DType[this] == FnxToken
[L2368]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s325, value_s325);
[L2583]              __var_10 := null;
[L2584]  COND FALSE  !(!(to_s554 != null))
[L2588]  CALL        call __var_11 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s554], value_s554);
[L2108]  CALL        call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2131]  COND FALSE  !(!(b_s136 <= a_s136))
[L2135]              c_s136 := (a_s136 - b_s136) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2136]              __ret_0_ := c_s136;
[L2108]  RET         call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2109]  COND FALSE  !(revert)
[L2112]              __ret_0_ := __var_1;
[L2588]  RET         call __var_11 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s554], value_s554);
[L2589]  COND FALSE  !(revert)
[L2592]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s554];
[L2593]              _balances_ERC20[this][from_s554] := __var_11;
[L2594]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s554];
[L2595]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s554], value_s554);
[L2085]              c_s93 := (a_s93 + b_s93) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2086]  COND FALSE  !(!(c_s93 >= a_s93))
[L2090]              __ret_0_ := c_s93;
[L2595]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s554], value_s554);
[L2596]  COND FALSE  !(revert)
[L2599]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s554];
[L2600]              _balances_ERC20[this][to_s554] := __var_12;
[L2601]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s554];
[L2602]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2368]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s325, value_s325);
[L2369]  COND FALSE  !(revert)
[L2380]              __ret_0_ := true;
[L474]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L475]               assume !revert && gas >= 0;
[L4309]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L4436]  RET         call CorralChoice_FnxToken(this);

Loop:
[L4436]  CALL        call CorralChoice_FnxToken(this);
[L4255]              havoc msgsender_MSG;
[L4256]              havoc msgvalue_MSG;
[L4257]              havoc choice;
[L4258]              havoc to_s325;
[L4259]              havoc value_s325;
[L4260]              havoc __ret_0_transfer;
[L4261]              havoc spender_s361;
[L4262]              havoc value_s361;
[L4263]              havoc __ret_0_approve;
[L4264]              havoc from_s410;
[L4265]              havoc to_s410;
[L4266]              havoc value_s410;
[L4267]              havoc __ret_0_transferFrom;
[L4268]              havoc __ret_0_totalSupply;
[L4269]              havoc owner_s290;
[L4270]              havoc __ret_0_balanceOf;
[L4271]              havoc owner_s306;
[L4272]              havoc spender_s306;
[L4273]              havoc __ret_0_allowance;
[L4274]              havoc spender_s459;
[L4275]              havoc addedValue_s459;
[L4276]              havoc __ret_0_increaseAllowance;
[L4277]              havoc spender_s508;
[L4278]              havoc subtractedValue_s508;
[L4279]              havoc __ret_0_decreaseAllowance;
[L4280]              havoc __ret_0_owner;
[L4281]              havoc __ret_0_newOwner;
[L4282]              havoc _newOwner_s717;
[L4283]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4284]              havoc __ret_0_name;
[L4285]              havoc __ret_0_symbol;
[L4286]              havoc __ret_0_decimals;
[L4287]              havoc newName_s809;
[L4288]              havoc newSymbol_s809;
[L4289]              havoc account_s827;
[L4290]              havoc amount_s827;
[L4291]              havoc tmpNow;
[L4292]              havoc gas;
[L4293]              assume gas > 4000000 && gas <= 8000000;
[L4294]              tmpNow := now;
[L4295]              havoc now;
[L4296]              assume now > tmpNow;
[L4297]              assume msgsender_MSG != null;
[L4298]              assume DType[msgsender_MSG] != IERC20;
[L4299]              assume DType[msgsender_MSG] != SafeMath;
[L4300]              assume DType[msgsender_MSG] != ERC20;
[L4301]              assume DType[msgsender_MSG] != Owned;
[L4302]              assume DType[msgsender_MSG] != FnxToken;
[L4303]              Alloc[msgsender_MSG] := true;
[L4304]  COND TRUE   choice == 18
[L4305]              gas := gas - 21000;
[L4306]  COND TRUE   gas >= 0
[L4307]              assume value_s325 >= 0 && value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4308]              assume msgvalue_MSG == 0;
[L4309]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s325 && (value_s325 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s325] + value_s325 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s325 >= 0) && value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s325] >= 0) && _balances_ERC20[this][to_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L448]               havoc __exception;
[L449]               revert := false;
[L450]   COND FALSE  !(__exception)
[L474]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L2367]  COND TRUE   DType[this] == FnxToken
[L2368]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s325, value_s325);
[L2583]              __var_10 := null;
[L2584]  COND FALSE  !(!(to_s554 != null))
[L2588]  CALL        call __var_11 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s554], value_s554);
[L2108]  CALL        call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2131]  COND FALSE  !(!(b_s136 <= a_s136))
[L2135]              c_s136 := (a_s136 - b_s136) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2136]              __ret_0_ := c_s136;
[L2108]  RET         call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2109]  COND FALSE  !(revert)
[L2112]              __ret_0_ := __var_1;
[L2588]  RET         call __var_11 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s554], value_s554);
[L2589]  COND FALSE  !(revert)
[L2592]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s554];
[L2593]              _balances_ERC20[this][from_s554] := __var_11;
[L2594]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s554];
[L2595]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s554], value_s554);
[L2085]              c_s93 := (a_s93 + b_s93) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2086]  COND FALSE  !(!(c_s93 >= a_s93))
[L2090]              __ret_0_ := c_s93;
[L2595]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s554], value_s554);
[L2596]  COND FALSE  !(revert)
[L2599]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s554];
[L2600]              _balances_ERC20[this][to_s554] := __var_12;
[L2601]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s554];
[L2602]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2368]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s325, value_s325);
[L2369]  COND FALSE  !(revert)
[L2380]              __ret_0_ := true;
[L474]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L475]               assume !revert && gas >= 0;
[L4309]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L4436]  RET         call CorralChoice_FnxToken(this);

[2020-11-25 16:49:51,654 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:49:51,654 INFO  L82        PathProgramCache]: Analyzing trace with hash -1548533540, now seen corresponding path program 1 times
[2020-11-25 16:49:51,655 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:49:51,668 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:49:51,846 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 16:49:51,846 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:49:52,097 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-25 16:49:52,098 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:49:52,099 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-25 16:49:52,099 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=28, Invalid=182, Unknown=0, NotChecked=0, Total=210
[2020-11-25 16:49:52,099 INFO  L87              Difference]: Start difference. First operand 2462 states and 2663 transitions. cyclomatic complexity: 203 Second operand 15 states.
[2020-11-25 16:49:53,716 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:49:53,716 INFO  L93              Difference]: Finished difference Result 2534 states and 2741 transitions.
[2020-11-25 16:49:53,716 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-25 16:49:53,716 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2534 states and 2741 transitions.
[2020-11-25 16:49:53,721 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:49:53,728 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2534 states to 2534 states and 2741 transitions.
[2020-11-25 16:49:53,728 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 726
[2020-11-25 16:49:53,729 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 726
[2020-11-25 16:49:53,729 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2534 states and 2741 transitions.
[2020-11-25 16:49:53,731 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:49:53,731 INFO  L728         BuchiCegarLoop]: Abstraction has 2534 states and 2741 transitions.
[2020-11-25 16:49:53,733 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2534 states and 2741 transitions.
[2020-11-25 16:49:53,749 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2534 to 2499.
[2020-11-25 16:49:53,749 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2499 states.
[2020-11-25 16:49:53,751 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2499 states to 2499 states and 2705 transitions.
[2020-11-25 16:49:53,751 INFO  L751         BuchiCegarLoop]: Abstraction has 2499 states and 2705 transitions.
[2020-11-25 16:49:53,751 INFO  L631         BuchiCegarLoop]: Abstraction has 2499 states and 2705 transitions.
[2020-11-25 16:49:53,751 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 16:49:53,751 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2499 states and 2705 transitions.
[2020-11-25 16:49:53,754 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:49:53,754 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:49:53,754 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:49:53,757 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:49:53,757 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L4426]              assume null == 0;
[L4427]  CALL        call this := FreshRefGenerator__success();
[L2000]              havoc newRef;
[L2001]              assume Alloc[newRef] == false;
[L2002]              Alloc[newRef] := true;
[L2003]              assume newRef != null;
[L4427]  RET         call this := FreshRefGenerator__success();
[L4428]              assume now >= 0;
[L4429]              assume DType[this] == FnxToken;
[L4430]              assume msgvalue_MSG == 0;
[L4431]              gas := gas - 53000;
[L4432]  CALL        call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2894]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2768]              assume msgsender_MSG != null;
[L2769]              Balance[this] := 0;
[L2770]              owner_Owned[this] := null;
[L2771]              newOwner_Owned[this] := null;
[L2773]              owner_Owned[this] := msgsender_MSG;
[L2786]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L2894]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2895]  COND FALSE  !(revert)
[L2898]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2032]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2017]              assume msgsender_MSG != null;
[L2018]              Balance[this] := 0;
[L2032]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2033]  COND FALSE  !(revert)
[L2898]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2899]  COND FALSE  !(revert)
[L2902]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2300]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2032]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2017]              assume msgsender_MSG != null;
[L2018]              Balance[this] := 0;
[L2032]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2033]  COND FALSE  !(revert)
[L2300]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2301]  COND FALSE  !(revert)
[L2304]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]              assume msgsender_MSG != null;
[L2277]              Balance[this] := 0;
[L2278]              _balances_ERC20[this] := zeroRefintArr();
[L2279]              sum__balances0[this] := 0;
[L2280]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2281]              sum__allowed1[this] := 0;
[L2282]              _totalSupply_ERC20[this] := 0;
[L2304]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2305]  COND FALSE  !(revert)
[L2902]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2903]  COND FALSE  !(revert)
[L2906]  CALL        call FnxToken_FnxToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2863]              assume msgsender_MSG != null;
[L2864]              Balance[this] := 0;
[L2865]              _name_FnxToken[this] := 699458114;
[L2866]              _symbol_FnxToken[this] := -216537299;
[L2867]              _decimals_FnxToken[this] := 18;
[L2868]              MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this] := 500000000;
[L2906]  RET         call FnxToken_FnxToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2907]  COND FALSE  !(revert)
[L4432]  RET         call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4433]              assume !revert && gas >= 0;
[L4436]  CALL        call CorralChoice_FnxToken(this);
[L4255]              havoc msgsender_MSG;
[L4256]              havoc msgvalue_MSG;
[L4257]              havoc choice;
[L4258]              havoc to_s325;
[L4259]              havoc value_s325;
[L4260]              havoc __ret_0_transfer;
[L4261]              havoc spender_s361;
[L4262]              havoc value_s361;
[L4263]              havoc __ret_0_approve;
[L4264]              havoc from_s410;
[L4265]              havoc to_s410;
[L4266]              havoc value_s410;
[L4267]              havoc __ret_0_transferFrom;
[L4268]              havoc __ret_0_totalSupply;
[L4269]              havoc owner_s290;
[L4270]              havoc __ret_0_balanceOf;
[L4271]              havoc owner_s306;
[L4272]              havoc spender_s306;
[L4273]              havoc __ret_0_allowance;
[L4274]              havoc spender_s459;
[L4275]              havoc addedValue_s459;
[L4276]              havoc __ret_0_increaseAllowance;
[L4277]              havoc spender_s508;
[L4278]              havoc subtractedValue_s508;
[L4279]              havoc __ret_0_decreaseAllowance;
[L4280]              havoc __ret_0_owner;
[L4281]              havoc __ret_0_newOwner;
[L4282]              havoc _newOwner_s717;
[L4283]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4284]              havoc __ret_0_name;
[L4285]              havoc __ret_0_symbol;
[L4286]              havoc __ret_0_decimals;
[L4287]              havoc newName_s809;
[L4288]              havoc newSymbol_s809;
[L4289]              havoc account_s827;
[L4290]              havoc amount_s827;
[L4291]              havoc tmpNow;
[L4292]              havoc gas;
[L4293]              assume gas > 4000000 && gas <= 8000000;
[L4294]              tmpNow := now;
[L4295]              havoc now;
[L4296]              assume now > tmpNow;
[L4297]              assume msgsender_MSG != null;
[L4298]              assume DType[msgsender_MSG] != IERC20;
[L4299]              assume DType[msgsender_MSG] != SafeMath;
[L4300]              assume DType[msgsender_MSG] != ERC20;
[L4301]              assume DType[msgsender_MSG] != Owned;
[L4302]              assume DType[msgsender_MSG] != FnxToken;
[L4303]              Alloc[msgsender_MSG] := true;
[L4304]  COND TRUE   choice == 18
[L4305]              gas := gas - 21000;
[L4306]  COND TRUE   gas >= 0
[L4307]              assume value_s325 >= 0 && value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4308]              assume msgvalue_MSG == 0;
[L4309]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((msgsender_MSG != to_s325 && (value_s325 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s325] + value_s325 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s325 >= 0) && value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s325] >= 0) && _balances_ERC20[this][to_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L448]               havoc __exception;
[L449]               revert := false;
[L450]   COND FALSE  !(__exception)
[L474]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L2367]  COND FALSE  !(DType[this] == FnxToken)
[L2372]  COND TRUE   DType[this] == ERC20
[L2373]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s325, value_s325);
[L2583]              __var_10 := null;
[L2584]  COND FALSE  !(!(to_s554 != null))
[L2588]  CALL        call __var_11 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s554], value_s554);
[L2108]  CALL        call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2131]  COND FALSE  !(!(b_s136 <= a_s136))
[L2135]              c_s136 := (a_s136 - b_s136) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2136]              __ret_0_ := c_s136;
[L2108]  RET         call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2109]  COND FALSE  !(revert)
[L2112]              __ret_0_ := __var_1;
[L2588]  RET         call __var_11 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s554], value_s554);
[L2589]  COND FALSE  !(revert)
[L2592]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s554];
[L2593]              _balances_ERC20[this][from_s554] := __var_11;
[L2594]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s554];
[L2595]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s554], value_s554);
[L2085]              c_s93 := (a_s93 + b_s93) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2086]  COND FALSE  !(!(c_s93 >= a_s93))
[L2090]              __ret_0_ := c_s93;
[L2595]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s554], value_s554);
[L2596]  COND FALSE  !(revert)
[L2599]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s554];
[L2600]              _balances_ERC20[this][to_s554] := __var_12;
[L2601]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s554];
[L2602]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2373]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s325, value_s325);
[L2374]  COND FALSE  !(revert)
[L2380]              __ret_0_ := true;
[L474]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L475]               assume !revert && gas >= 0;
[L4309]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L4436]  RET         call CorralChoice_FnxToken(this);
[L4436]  CALL        call CorralChoice_FnxToken(this);
[L4255]              havoc msgsender_MSG;
[L4256]              havoc msgvalue_MSG;
[L4257]              havoc choice;
[L4258]              havoc to_s325;
[L4259]              havoc value_s325;
[L4260]              havoc __ret_0_transfer;
[L4261]              havoc spender_s361;
[L4262]              havoc value_s361;
[L4263]              havoc __ret_0_approve;
[L4264]              havoc from_s410;
[L4265]              havoc to_s410;
[L4266]              havoc value_s410;
[L4267]              havoc __ret_0_transferFrom;
[L4268]              havoc __ret_0_totalSupply;
[L4269]              havoc owner_s290;
[L4270]              havoc __ret_0_balanceOf;
[L4271]              havoc owner_s306;
[L4272]              havoc spender_s306;
[L4273]              havoc __ret_0_allowance;
[L4274]              havoc spender_s459;
[L4275]              havoc addedValue_s459;
[L4276]              havoc __ret_0_increaseAllowance;
[L4277]              havoc spender_s508;
[L4278]              havoc subtractedValue_s508;
[L4279]              havoc __ret_0_decreaseAllowance;
[L4280]              havoc __ret_0_owner;
[L4281]              havoc __ret_0_newOwner;
[L4282]              havoc _newOwner_s717;
[L4283]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4284]              havoc __ret_0_name;
[L4285]              havoc __ret_0_symbol;
[L4286]              havoc __ret_0_decimals;
[L4287]              havoc newName_s809;
[L4288]              havoc newSymbol_s809;
[L4289]              havoc account_s827;
[L4290]              havoc amount_s827;
[L4291]              havoc tmpNow;
[L4292]              havoc gas;
[L4293]              assume gas > 4000000 && gas <= 8000000;
[L4294]              tmpNow := now;
[L4295]              havoc now;
[L4296]              assume now > tmpNow;
[L4297]              assume msgsender_MSG != null;
[L4298]              assume DType[msgsender_MSG] != IERC20;
[L4299]              assume DType[msgsender_MSG] != SafeMath;
[L4300]              assume DType[msgsender_MSG] != ERC20;
[L4301]              assume DType[msgsender_MSG] != Owned;
[L4302]              assume DType[msgsender_MSG] != FnxToken;
[L4303]              Alloc[msgsender_MSG] := true;
[L4304]  COND TRUE   choice == 18
[L4305]              gas := gas - 21000;
[L4306]  COND TRUE   gas >= 0
[L4307]              assume value_s325 >= 0 && value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4308]              assume msgvalue_MSG == 0;
[L4309]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s325 && (value_s325 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s325] + value_s325 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s325 >= 0) && value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s325] >= 0) && _balances_ERC20[this][to_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L448]               havoc __exception;
[L449]               revert := false;
[L450]   COND FALSE  !(__exception)
[L474]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L2367]  COND TRUE   DType[this] == FnxToken
[L2368]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s325, value_s325);
[L2583]              __var_10 := null;
[L2584]  COND FALSE  !(!(to_s554 != null))
[L2588]  CALL        call __var_11 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s554], value_s554);
[L2108]  CALL        call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2131]  COND FALSE  !(!(b_s136 <= a_s136))
[L2135]              c_s136 := (a_s136 - b_s136) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2136]              __ret_0_ := c_s136;
[L2108]  RET         call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2109]  COND FALSE  !(revert)
[L2112]              __ret_0_ := __var_1;
[L2588]  RET         call __var_11 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s554], value_s554);
[L2589]  COND FALSE  !(revert)
[L2592]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s554];
[L2593]              _balances_ERC20[this][from_s554] := __var_11;
[L2594]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s554];
[L2595]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s554], value_s554);
[L2085]              c_s93 := (a_s93 + b_s93) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2086]  COND FALSE  !(!(c_s93 >= a_s93))
[L2090]              __ret_0_ := c_s93;
[L2595]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s554], value_s554);
[L2596]  COND FALSE  !(revert)
[L2599]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s554];
[L2600]              _balances_ERC20[this][to_s554] := __var_12;
[L2601]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s554];
[L2602]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2368]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s325, value_s325);
[L2369]  COND FALSE  !(revert)
[L2380]              __ret_0_ := true;
[L474]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L475]               assume !revert && gas >= 0;
[L4309]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L4436]  RET         call CorralChoice_FnxToken(this);

Loop:
[L4436]  CALL        call CorralChoice_FnxToken(this);
[L4255]              havoc msgsender_MSG;
[L4256]              havoc msgvalue_MSG;
[L4257]              havoc choice;
[L4258]              havoc to_s325;
[L4259]              havoc value_s325;
[L4260]              havoc __ret_0_transfer;
[L4261]              havoc spender_s361;
[L4262]              havoc value_s361;
[L4263]              havoc __ret_0_approve;
[L4264]              havoc from_s410;
[L4265]              havoc to_s410;
[L4266]              havoc value_s410;
[L4267]              havoc __ret_0_transferFrom;
[L4268]              havoc __ret_0_totalSupply;
[L4269]              havoc owner_s290;
[L4270]              havoc __ret_0_balanceOf;
[L4271]              havoc owner_s306;
[L4272]              havoc spender_s306;
[L4273]              havoc __ret_0_allowance;
[L4274]              havoc spender_s459;
[L4275]              havoc addedValue_s459;
[L4276]              havoc __ret_0_increaseAllowance;
[L4277]              havoc spender_s508;
[L4278]              havoc subtractedValue_s508;
[L4279]              havoc __ret_0_decreaseAllowance;
[L4280]              havoc __ret_0_owner;
[L4281]              havoc __ret_0_newOwner;
[L4282]              havoc _newOwner_s717;
[L4283]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4284]              havoc __ret_0_name;
[L4285]              havoc __ret_0_symbol;
[L4286]              havoc __ret_0_decimals;
[L4287]              havoc newName_s809;
[L4288]              havoc newSymbol_s809;
[L4289]              havoc account_s827;
[L4290]              havoc amount_s827;
[L4291]              havoc tmpNow;
[L4292]              havoc gas;
[L4293]              assume gas > 4000000 && gas <= 8000000;
[L4294]              tmpNow := now;
[L4295]              havoc now;
[L4296]              assume now > tmpNow;
[L4297]              assume msgsender_MSG != null;
[L4298]              assume DType[msgsender_MSG] != IERC20;
[L4299]              assume DType[msgsender_MSG] != SafeMath;
[L4300]              assume DType[msgsender_MSG] != ERC20;
[L4301]              assume DType[msgsender_MSG] != Owned;
[L4302]              assume DType[msgsender_MSG] != FnxToken;
[L4303]              Alloc[msgsender_MSG] := true;
[L4304]  COND TRUE   choice == 18
[L4305]              gas := gas - 21000;
[L4306]  COND TRUE   gas >= 0
[L4307]              assume value_s325 >= 0 && value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4308]              assume msgvalue_MSG == 0;
[L4309]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s325 && (value_s325 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s325] + value_s325 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s325 >= 0) && value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s325] >= 0) && _balances_ERC20[this][to_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L448]               havoc __exception;
[L449]               revert := false;
[L450]   COND FALSE  !(__exception)
[L474]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L2367]  COND TRUE   DType[this] == FnxToken
[L2368]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s325, value_s325);
[L2583]              __var_10 := null;
[L2584]  COND FALSE  !(!(to_s554 != null))
[L2588]  CALL        call __var_11 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s554], value_s554);
[L2108]  CALL        call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2131]  COND FALSE  !(!(b_s136 <= a_s136))
[L2135]              c_s136 := (a_s136 - b_s136) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2136]              __ret_0_ := c_s136;
[L2108]  RET         call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2109]  COND FALSE  !(revert)
[L2112]              __ret_0_ := __var_1;
[L2588]  RET         call __var_11 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s554], value_s554);
[L2589]  COND FALSE  !(revert)
[L2592]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s554];
[L2593]              _balances_ERC20[this][from_s554] := __var_11;
[L2594]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s554];
[L2595]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s554], value_s554);
[L2085]              c_s93 := (a_s93 + b_s93) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2086]  COND FALSE  !(!(c_s93 >= a_s93))
[L2090]              __ret_0_ := c_s93;
[L2595]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s554], value_s554);
[L2596]  COND FALSE  !(revert)
[L2599]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s554];
[L2600]              _balances_ERC20[this][to_s554] := __var_12;
[L2601]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s554];
[L2602]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2368]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s325, value_s325);
[L2369]  COND FALSE  !(revert)
[L2380]              __ret_0_ := true;
[L474]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L475]               assume !revert && gas >= 0;
[L4309]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L4436]  RET         call CorralChoice_FnxToken(this);

[2020-11-25 16:49:53,760 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:49:53,760 INFO  L82        PathProgramCache]: Analyzing trace with hash 1689151869, now seen corresponding path program 1 times
[2020-11-25 16:49:53,761 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:49:53,769 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:49:53,813 INFO  L134       CoverageAnalysis]: Checked inductivity of 71 backedges. 1 proven. 0 refuted. 0 times theorem prover too weak. 70 trivial. 0 not checked.
[2020-11-25 16:49:53,813 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:49:53,814 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 16:49:53,814 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:49:53,814 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 16:49:53,814 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 16:49:53,814 INFO  L87              Difference]: Start difference. First operand 2499 states and 2705 transitions. cyclomatic complexity: 209 Second operand 6 states.
[2020-11-25 16:49:53,851 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:49:53,851 INFO  L93              Difference]: Finished difference Result 2533 states and 2738 transitions.
[2020-11-25 16:49:53,851 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-25 16:49:53,851 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2533 states and 2738 transitions.
[2020-11-25 16:49:53,856 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:49:53,862 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2533 states to 2489 states and 2691 transitions.
[2020-11-25 16:49:53,862 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 719
[2020-11-25 16:49:53,863 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 719
[2020-11-25 16:49:53,863 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2489 states and 2691 transitions.
[2020-11-25 16:49:53,865 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:49:53,865 INFO  L728         BuchiCegarLoop]: Abstraction has 2489 states and 2691 transitions.
[2020-11-25 16:49:53,867 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2489 states and 2691 transitions.
[2020-11-25 16:49:53,882 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2489 to 2489.
[2020-11-25 16:49:53,882 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2489 states.
[2020-11-25 16:49:53,884 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2489 states to 2489 states and 2691 transitions.
[2020-11-25 16:49:53,884 INFO  L751         BuchiCegarLoop]: Abstraction has 2489 states and 2691 transitions.
[2020-11-25 16:49:53,884 INFO  L631         BuchiCegarLoop]: Abstraction has 2489 states and 2691 transitions.
[2020-11-25 16:49:53,884 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 16:49:53,884 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2489 states and 2691 transitions.
[2020-11-25 16:49:53,887 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:49:53,887 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:49:53,887 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:49:53,889 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:49:53,890 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L4426]              assume null == 0;
[L4427]  CALL        call this := FreshRefGenerator__success();
[L2000]              havoc newRef;
[L2001]              assume Alloc[newRef] == false;
[L2002]              Alloc[newRef] := true;
[L2003]              assume newRef != null;
[L4427]  RET         call this := FreshRefGenerator__success();
[L4428]              assume now >= 0;
[L4429]              assume DType[this] == FnxToken;
[L4430]              assume msgvalue_MSG == 0;
[L4431]              gas := gas - 53000;
[L4432]  CALL        call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2894]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2768]              assume msgsender_MSG != null;
[L2769]              Balance[this] := 0;
[L2770]              owner_Owned[this] := null;
[L2771]              newOwner_Owned[this] := null;
[L2773]              owner_Owned[this] := msgsender_MSG;
[L2786]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2787]  COND FALSE  !(revert)
[L2894]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2895]  COND FALSE  !(revert)
[L2898]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2032]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2017]              assume msgsender_MSG != null;
[L2018]              Balance[this] := 0;
[L2032]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2033]  COND FALSE  !(revert)
[L2898]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2899]  COND FALSE  !(revert)
[L2902]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2300]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2032]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2017]              assume msgsender_MSG != null;
[L2018]              Balance[this] := 0;
[L2032]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2033]  COND FALSE  !(revert)
[L2300]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2301]  COND FALSE  !(revert)
[L2304]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]              assume msgsender_MSG != null;
[L2277]              Balance[this] := 0;
[L2278]              _balances_ERC20[this] := zeroRefintArr();
[L2279]              sum__balances0[this] := 0;
[L2280]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2281]              sum__allowed1[this] := 0;
[L2282]              _totalSupply_ERC20[this] := 0;
[L2304]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2305]  COND FALSE  !(revert)
[L2902]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2903]  COND FALSE  !(revert)
[L2906]  CALL        call FnxToken_FnxToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2863]              assume msgsender_MSG != null;
[L2864]              Balance[this] := 0;
[L2865]              _name_FnxToken[this] := 699458114;
[L2866]              _symbol_FnxToken[this] := -216537299;
[L2867]              _decimals_FnxToken[this] := 18;
[L2868]              MAX_TOTAL_TOKEN_AMOUNT_FnxToken[this] := 500000000;
[L2906]  RET         call FnxToken_FnxToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2907]  COND FALSE  !(revert)
[L4432]  RET         call FnxToken_FnxToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4433]              assume !revert && gas >= 0;
[L4436]  CALL        call CorralChoice_FnxToken(this);
[L4255]              havoc msgsender_MSG;
[L4256]              havoc msgvalue_MSG;
[L4257]              havoc choice;
[L4258]              havoc to_s325;
[L4259]              havoc value_s325;
[L4260]              havoc __ret_0_transfer;
[L4261]              havoc spender_s361;
[L4262]              havoc value_s361;
[L4263]              havoc __ret_0_approve;
[L4264]              havoc from_s410;
[L4265]              havoc to_s410;
[L4266]              havoc value_s410;
[L4267]              havoc __ret_0_transferFrom;
[L4268]              havoc __ret_0_totalSupply;
[L4269]              havoc owner_s290;
[L4270]              havoc __ret_0_balanceOf;
[L4271]              havoc owner_s306;
[L4272]              havoc spender_s306;
[L4273]              havoc __ret_0_allowance;
[L4274]              havoc spender_s459;
[L4275]              havoc addedValue_s459;
[L4276]              havoc __ret_0_increaseAllowance;
[L4277]              havoc spender_s508;
[L4278]              havoc subtractedValue_s508;
[L4279]              havoc __ret_0_decreaseAllowance;
[L4280]              havoc __ret_0_owner;
[L4281]              havoc __ret_0_newOwner;
[L4282]              havoc _newOwner_s717;
[L4283]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4284]              havoc __ret_0_name;
[L4285]              havoc __ret_0_symbol;
[L4286]              havoc __ret_0_decimals;
[L4287]              havoc newName_s809;
[L4288]              havoc newSymbol_s809;
[L4289]              havoc account_s827;
[L4290]              havoc amount_s827;
[L4291]              havoc tmpNow;
[L4292]              havoc gas;
[L4293]              assume gas > 4000000 && gas <= 8000000;
[L4294]              tmpNow := now;
[L4295]              havoc now;
[L4296]              assume now > tmpNow;
[L4297]              assume msgsender_MSG != null;
[L4298]              assume DType[msgsender_MSG] != IERC20;
[L4299]              assume DType[msgsender_MSG] != SafeMath;
[L4300]              assume DType[msgsender_MSG] != ERC20;
[L4301]              assume DType[msgsender_MSG] != Owned;
[L4302]              assume DType[msgsender_MSG] != FnxToken;
[L4303]              Alloc[msgsender_MSG] := true;
[L4304]  COND TRUE   choice == 18
[L4305]              gas := gas - 21000;
[L4306]  COND TRUE   gas >= 0
[L4307]              assume value_s325 >= 0 && value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4308]              assume msgvalue_MSG == 0;
[L4309]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((msgsender_MSG != to_s325 && (value_s325 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s325] + value_s325 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s325 >= 0) && value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s325] >= 0) && _balances_ERC20[this][to_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L448]               havoc __exception;
[L449]               revert := false;
[L450]   COND FALSE  !(__exception)
[L474]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L2367]  COND TRUE   DType[this] == FnxToken
[L2368]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s325, value_s325);
[L2583]              __var_10 := null;
[L2584]  COND FALSE  !(!(to_s554 != null))
[L2588]  CALL        call __var_11 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s554], value_s554);
[L2108]  CALL        call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2131]  COND FALSE  !(!(b_s136 <= a_s136))
[L2135]              c_s136 := (a_s136 - b_s136) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2136]              __ret_0_ := c_s136;
[L2108]  RET         call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2109]  COND FALSE  !(revert)
[L2112]              __ret_0_ := __var_1;
[L2588]  RET         call __var_11 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s554], value_s554);
[L2589]  COND FALSE  !(revert)
[L2592]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s554];
[L2593]              _balances_ERC20[this][from_s554] := __var_11;
[L2594]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s554];
[L2595]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s554], value_s554);
[L2085]              c_s93 := (a_s93 + b_s93) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2086]  COND FALSE  !(!(c_s93 >= a_s93))
[L2090]              __ret_0_ := c_s93;
[L2595]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s554], value_s554);
[L2596]  COND FALSE  !(revert)
[L2599]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s554];
[L2600]              _balances_ERC20[this][to_s554] := __var_12;
[L2601]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s554];
[L2602]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2368]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s325, value_s325);
[L2369]  COND FALSE  !(revert)
[L2380]              __ret_0_ := true;
[L474]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L475]               assume !revert && gas >= 0;
[L4309]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L4436]  RET         call CorralChoice_FnxToken(this);
[L4436]  CALL        call CorralChoice_FnxToken(this);
[L4255]              havoc msgsender_MSG;
[L4256]              havoc msgvalue_MSG;
[L4257]              havoc choice;
[L4258]              havoc to_s325;
[L4259]              havoc value_s325;
[L4260]              havoc __ret_0_transfer;
[L4261]              havoc spender_s361;
[L4262]              havoc value_s361;
[L4263]              havoc __ret_0_approve;
[L4264]              havoc from_s410;
[L4265]              havoc to_s410;
[L4266]              havoc value_s410;
[L4267]              havoc __ret_0_transferFrom;
[L4268]              havoc __ret_0_totalSupply;
[L4269]              havoc owner_s290;
[L4270]              havoc __ret_0_balanceOf;
[L4271]              havoc owner_s306;
[L4272]              havoc spender_s306;
[L4273]              havoc __ret_0_allowance;
[L4274]              havoc spender_s459;
[L4275]              havoc addedValue_s459;
[L4276]              havoc __ret_0_increaseAllowance;
[L4277]              havoc spender_s508;
[L4278]              havoc subtractedValue_s508;
[L4279]              havoc __ret_0_decreaseAllowance;
[L4280]              havoc __ret_0_owner;
[L4281]              havoc __ret_0_newOwner;
[L4282]              havoc _newOwner_s717;
[L4283]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4284]              havoc __ret_0_name;
[L4285]              havoc __ret_0_symbol;
[L4286]              havoc __ret_0_decimals;
[L4287]              havoc newName_s809;
[L4288]              havoc newSymbol_s809;
[L4289]              havoc account_s827;
[L4290]              havoc amount_s827;
[L4291]              havoc tmpNow;
[L4292]              havoc gas;
[L4293]              assume gas > 4000000 && gas <= 8000000;
[L4294]              tmpNow := now;
[L4295]              havoc now;
[L4296]              assume now > tmpNow;
[L4297]              assume msgsender_MSG != null;
[L4298]              assume DType[msgsender_MSG] != IERC20;
[L4299]              assume DType[msgsender_MSG] != SafeMath;
[L4300]              assume DType[msgsender_MSG] != ERC20;
[L4301]              assume DType[msgsender_MSG] != Owned;
[L4302]              assume DType[msgsender_MSG] != FnxToken;
[L4303]              Alloc[msgsender_MSG] := true;
[L4304]  COND TRUE   choice == 18
[L4305]              gas := gas - 21000;
[L4306]  COND TRUE   gas >= 0
[L4307]              assume value_s325 >= 0 && value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4308]              assume msgvalue_MSG == 0;
[L4309]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s325 && (value_s325 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s325] + value_s325 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s325 >= 0) && value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s325] >= 0) && _balances_ERC20[this][to_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L448]               havoc __exception;
[L449]               revert := false;
[L450]   COND FALSE  !(__exception)
[L474]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L2367]  COND TRUE   DType[this] == FnxToken
[L2368]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s325, value_s325);
[L2583]              __var_10 := null;
[L2584]  COND FALSE  !(!(to_s554 != null))
[L2588]  CALL        call __var_11 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s554], value_s554);
[L2108]  CALL        call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2131]  COND FALSE  !(!(b_s136 <= a_s136))
[L2135]              c_s136 := (a_s136 - b_s136) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2136]              __ret_0_ := c_s136;
[L2108]  RET         call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2109]  COND FALSE  !(revert)
[L2112]              __ret_0_ := __var_1;
[L2588]  RET         call __var_11 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s554], value_s554);
[L2589]  COND FALSE  !(revert)
[L2592]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s554];
[L2593]              _balances_ERC20[this][from_s554] := __var_11;
[L2594]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s554];
[L2595]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s554], value_s554);
[L2085]              c_s93 := (a_s93 + b_s93) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2086]  COND FALSE  !(!(c_s93 >= a_s93))
[L2090]              __ret_0_ := c_s93;
[L2595]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s554], value_s554);
[L2596]  COND FALSE  !(revert)
[L2599]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s554];
[L2600]              _balances_ERC20[this][to_s554] := __var_12;
[L2601]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s554];
[L2602]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2368]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s325, value_s325);
[L2369]  COND FALSE  !(revert)
[L2380]              __ret_0_ := true;
[L474]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L475]               assume !revert && gas >= 0;
[L4309]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L4436]  RET         call CorralChoice_FnxToken(this);

Loop:
[L4436]  CALL        call CorralChoice_FnxToken(this);
[L4255]              havoc msgsender_MSG;
[L4256]              havoc msgvalue_MSG;
[L4257]              havoc choice;
[L4258]              havoc to_s325;
[L4259]              havoc value_s325;
[L4260]              havoc __ret_0_transfer;
[L4261]              havoc spender_s361;
[L4262]              havoc value_s361;
[L4263]              havoc __ret_0_approve;
[L4264]              havoc from_s410;
[L4265]              havoc to_s410;
[L4266]              havoc value_s410;
[L4267]              havoc __ret_0_transferFrom;
[L4268]              havoc __ret_0_totalSupply;
[L4269]              havoc owner_s290;
[L4270]              havoc __ret_0_balanceOf;
[L4271]              havoc owner_s306;
[L4272]              havoc spender_s306;
[L4273]              havoc __ret_0_allowance;
[L4274]              havoc spender_s459;
[L4275]              havoc addedValue_s459;
[L4276]              havoc __ret_0_increaseAllowance;
[L4277]              havoc spender_s508;
[L4278]              havoc subtractedValue_s508;
[L4279]              havoc __ret_0_decreaseAllowance;
[L4280]              havoc __ret_0_owner;
[L4281]              havoc __ret_0_newOwner;
[L4282]              havoc _newOwner_s717;
[L4283]              havoc __ret_0_MAX_TOTAL_TOKEN_AMOUNT;
[L4284]              havoc __ret_0_name;
[L4285]              havoc __ret_0_symbol;
[L4286]              havoc __ret_0_decimals;
[L4287]              havoc newName_s809;
[L4288]              havoc newSymbol_s809;
[L4289]              havoc account_s827;
[L4290]              havoc amount_s827;
[L4291]              havoc tmpNow;
[L4292]              havoc gas;
[L4293]              assume gas > 4000000 && gas <= 8000000;
[L4294]              tmpNow := now;
[L4295]              havoc now;
[L4296]              assume now > tmpNow;
[L4297]              assume msgsender_MSG != null;
[L4298]              assume DType[msgsender_MSG] != IERC20;
[L4299]              assume DType[msgsender_MSG] != SafeMath;
[L4300]              assume DType[msgsender_MSG] != ERC20;
[L4301]              assume DType[msgsender_MSG] != Owned;
[L4302]              assume DType[msgsender_MSG] != FnxToken;
[L4303]              Alloc[msgsender_MSG] := true;
[L4304]  COND TRUE   choice == 18
[L4305]              gas := gas - 21000;
[L4306]  COND TRUE   gas >= 0
[L4307]              assume value_s325 >= 0 && value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4308]              assume msgvalue_MSG == 0;
[L4309]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s325 && (value_s325 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s325] + value_s325 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s325 >= 0) && value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s325] >= 0) && _balances_ERC20[this][to_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L448]               havoc __exception;
[L449]               revert := false;
[L450]   COND FALSE  !(__exception)
[L474]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L2367]  COND TRUE   DType[this] == FnxToken
[L2368]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s325, value_s325);
[L2583]              __var_10 := null;
[L2584]  COND FALSE  !(!(to_s554 != null))
[L2588]  CALL        call __var_11 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s554], value_s554);
[L2108]  CALL        call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2131]  COND FALSE  !(!(b_s136 <= a_s136))
[L2135]              c_s136 := (a_s136 - b_s136) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2136]              __ret_0_ := c_s136;
[L2108]  RET         call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s109, b_s109, 1257583290);
[L2109]  COND FALSE  !(revert)
[L2112]              __ret_0_ := __var_1;
[L2588]  RET         call __var_11 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s554], value_s554);
[L2589]  COND FALSE  !(revert)
[L2592]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s554];
[L2593]              _balances_ERC20[this][from_s554] := __var_11;
[L2594]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s554];
[L2595]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s554], value_s554);
[L2085]              c_s93 := (a_s93 + b_s93) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2086]  COND FALSE  !(!(c_s93 >= a_s93))
[L2090]              __ret_0_ := c_s93;
[L2595]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s554], value_s554);
[L2596]  COND FALSE  !(revert)
[L2599]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s554];
[L2600]              _balances_ERC20[this][to_s554] := __var_12;
[L2601]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s554];
[L2602]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2368]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s325, value_s325);
[L2369]  COND FALSE  !(revert)
[L2380]              __ret_0_ := true;
[L474]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L475]               assume !revert && gas >= 0;
[L4309]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s325, value_s325);
[L4436]  RET         call CorralChoice_FnxToken(this);

[2020-11-25 16:49:53,893 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:49:53,893 INFO  L82        PathProgramCache]: Analyzing trace with hash 1895345726, now seen corresponding path program 1 times
[2020-11-25 16:49:53,894 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:49:53,915 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:49:54,049 INFO  L134       CoverageAnalysis]: Checked inductivity of 71 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 71 trivial. 0 not checked.
[2020-11-25 16:49:54,049 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:49:54,049 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 16:49:54,050 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:49:54,050 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 16:49:54,050 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=27, Invalid=129, Unknown=0, NotChecked=0, Total=156
[2020-11-25 16:49:54,050 INFO  L87              Difference]: Start difference. First operand 2489 states and 2691 transitions. cyclomatic complexity: 205 Second operand 13 states.
[2020-11-25 16:49:55,187 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:49:55,187 INFO  L93              Difference]: Finished difference Result 1439 states and 1552 transitions.
[2020-11-25 16:49:55,187 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 16:49:55,187 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1439 states and 1552 transitions.
[2020-11-25 16:49:55,190 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 16:49:55,190 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1439 states to 0 states and 0 transitions.
[2020-11-25 16:49:55,190 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 16:49:55,190 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 16:49:55,190 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 16:49:55,190 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:49:55,190 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:49:55,190 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:49:55,190 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:49:55,190 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 16:49:55,190 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 16:49:55,190 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 16:49:55,190 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 16:49:55,193 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:49:55 BasicIcfg
[2020-11-25 16:49:55,193 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 16:49:55,194 INFO  L168              Benchmark]: Toolchain (without parser) took 7176.56 ms. Allocated memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: 592.4 MB). Free memory was 935.2 MB in the beginning and 902.9 MB in the end (delta: 32.3 MB). Peak memory consumption was 624.7 MB. Max. memory is 15.3 GB.
[2020-11-25 16:49:55,194 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:49:55,194 INFO  L168              Benchmark]: Boogie Preprocessor took 96.67 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 16:49:55,195 INFO  L168              Benchmark]: UtopiaSpecLang took 58.27 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:49:55,195 INFO  L168              Benchmark]: Boogie Printer took 14.49 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:49:55,195 INFO  L168              Benchmark]: RCFGBuilder took 705.20 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 806.3 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
[2020-11-25 16:49:55,196 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.98 ms. Allocated memory is still 1.0 GB. Free memory was 806.3 MB in the beginning and 797.4 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 16:49:55,196 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1374.21 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 173.5 MB). Free memory was 797.4 MB in the beginning and 1.0 GB in the end (delta: -204.7 MB). Peak memory consumption was 167.7 MB. Max. memory is 15.3 GB.
[2020-11-25 16:49:55,196 INFO  L168              Benchmark]: BlockEncodingV2 took 127.72 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 941.9 MB in the end (delta: 60.2 MB). Peak memory consumption was 60.2 MB. Max. memory is 15.3 GB.
[2020-11-25 16:49:55,196 INFO  L168              Benchmark]: BuchiAutomizer took 4757.28 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 418.9 MB). Free memory was 941.9 MB in the beginning and 902.9 MB in the end (delta: 39.0 MB). Peak memory consumption was 457.9 MB. Max. memory is 15.3 GB.
[2020-11-25 16:49:55,199 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3846 locations, 6762 edges
  - StatisticsResult: Encoded RCFG
    3740 locations, 6509 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 96.67 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 58.27 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 14.49 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 705.20 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 806.3 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.98 ms. Allocated memory is still 1.0 GB. Free memory was 806.3 MB in the beginning and 797.4 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1374.21 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 173.5 MB). Free memory was 797.4 MB in the beginning and 1.0 GB in the end (delta: -204.7 MB). Peak memory consumption was 167.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 127.72 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 941.9 MB in the end (delta: 60.2 MB). Peak memory consumption was 60.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 4757.28 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 418.9 MB). Free memory was 941.9 MB in the beginning and 902.9 MB in the end (delta: 39.0 MB). Peak memory consumption was 457.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1564 locations, 2063 edges
  - StatisticsResult: BuchiProgram size
    3846 locations, 6762 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 15 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 4.7s and 7 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.9s. Construction of modules took 2.3s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 1117 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2776 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 17842 SDtfs, 10718 SDslu, 30527 SDs, 0 SdLazy, 34637 SolverSat, 1949 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_ERC200) ==> ( <>(fail_transfer_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
