This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 20:10:47,852 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 20:10:47,854 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 20:10:47,867 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 20:10:47,868 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 20:10:47,869 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 20:10:47,872 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 20:10:47,875 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 20:10:47,878 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 20:10:47,880 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 20:10:47,881 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 20:10:47,881 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 20:10:47,881 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 20:10:47,882 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 20:10:47,883 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 20:10:47,884 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 20:10:47,884 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 20:10:47,886 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 20:10:47,887 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 20:10:47,888 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 20:10:47,889 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 20:10:47,890 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 20:10:47,891 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 20:10:47,892 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 20:10:47,892 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 20:10:47,892 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 20:10:47,893 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 20:10:47,893 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 20:10:47,894 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 20:10:47,894 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 20:10:47,894 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 20:10:47,895 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 20:10:47,895 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 20:10:47,896 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 20:10:47,896 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 20:10:47,897 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 20:10:47,897 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 20:10:47,897 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 20:10:47,897 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 20:10:47,898 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 20:10:47,899 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 20:10:47,899 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 20:10:47,907 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 20:10:47,907 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 20:10:47,908 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 20:10:47,908 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 20:10:47,908 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 20:10:47,908 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 20:10:47,908 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 20:10:47,908 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 20:10:47,908 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 20:10:47,909 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 20:10:47,909 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 20:10:47,909 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 20:10:47,909 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 20:10:47,909 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 20:10:47,909 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 20:10:47,909 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 20:10:47,909 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 20:10:47,910 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 20:10:47,910 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 20:10:47,910 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 20:10:47,910 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 20:10:47,910 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 20:10:47,910 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 20:10:47,910 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 20:10:47,910 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 20:10:47,911 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 20:10:47,931 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 20:10:47,943 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 20:10:47,945 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 20:10:47,947 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 20:10:47,947 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 20:10:47,948 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl
[2020-11-24 20:10:47,948 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl'
[2020-11-24 20:10:48,059 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 20:10:48,060 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 20:10:48,060 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 20:10:48,061 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 20:10:48,061 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 20:10:48,077 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:48" (1/1) ...
[2020-11-24 20:10:48,080 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:48" (1/1) ...
[2020-11-24 20:10:48,116 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:48" (1/1) ...
[2020-11-24 20:10:48,117 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:48" (1/1) ...
[2020-11-24 20:10:48,143 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:48" (1/1) ...
[2020-11-24 20:10:48,157 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:48" (1/1) ...
[2020-11-24 20:10:48,174 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:48" (1/1) ...
[2020-11-24 20:10:48,189 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 20:10:48,189 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 20:10:48,189 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 20:10:48,191 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 20:10:48,195 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:48" (1/1) ...
[2020-11-24 20:10:48,215 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.allowance(owner, spender), _allowed_ERC20[this][owner][spender] >= 0 && _allowed_ERC20[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.allowance(owner, spender), return == _allowed_ERC20[this][owner][spender] &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && amount_KOCToken[this] == old(amount_KOCToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:10:48,221 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.allowance(owner, spender), _allowed_ERC20[this][owner][spender] >= 0 && _allowed_ERC20[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.allowance(owner, spender), return == _allowed_ERC20[this][owner][spender] &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && amount_KOCToken[this] == old(amount_KOCToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:10:48,228 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.allowance(owner, spender), _allowed_ERC20[this][owner][spender] >= 0 && _allowed_ERC20[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.allowance(owner, spender), return == _allowed_ERC20[this][owner][spender] &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && amount_KOCToken[this] == old(amount_KOCToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:10:48,235 INFO  L636   opiaSpecLangObserver]: Parsed ( _allowed_ERC20[this][owner_s439][spender_s439]>=0 && _allowed_ERC20[this][owner_s439][spender_s439]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],[IdentifierExpression[owner_s439,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],[IdentifierExpression[spender_s439,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],[IdentifierExpression[owner_s439,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],[IdentifierExpression[spender_s439,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 20:10:48,238 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==_allowed_ERC20[this][owner_s439][spender_s439] && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowed_ERC20[this]==( old(_allowed_ERC20[this]) ) ) && amount_KOCToken[this]==( old(amount_KOCToken[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,allowance~address~address_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],[IdentifierExpression[owner_s439,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],[IdentifierExpression[spender_s439,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[amount_KOCToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[amount_KOCToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]]]]
[2020-11-24 20:10:48,246 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.allowance(owner, spender), _allowed_ERC20[this][owner][spender] >= 0 && _allowed_ERC20[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.allowance(owner, spender), return == _allowed_ERC20[this][owner][spender] &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && amount_KOCToken[this] == old(amount_KOCToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:10:48,246 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_allowance_ERC200) ==> ( <>AP(success_allowance_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 20:10:48,260 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:10:48 PropertyContainer
[2020-11-24 20:10:48,261 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 20:10:48,261 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 20:10:48,261 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 20:10:48,261 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 20:10:48,262 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:48" (1/2) ...
[2020-11-24 20:10:48,263 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 20:10:48,263 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 20:10:48,283 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:10:48" (2/2) ...
[2020-11-24 20:10:48,283 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 20:10:48,283 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 20:10:48,283 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 20:10:48,283 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 20:10:48,284 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:48" (1/2) ...
[2020-11-24 20:10:48,340 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 20:10:48,340 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__success
[2020-11-24 20:10:48,340 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:10:48,340 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 20:10:48,340 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 20:10:48,340 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:10:48,340 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 20:10:48,341 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 20:10:48,341 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:10:48,341 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-24 20:10:48,341 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles_NoBaseCtor__success
[2020-11-24 20:10:48,341 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles
[2020-11-24 20:10:48,341 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles
[2020-11-24 20:10:48,341 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__success
[2020-11-24 20:10:48,342 INFO  L130     BoogieDeclarations]: Found specification of procedure remove~Role~address_Roles__success
[2020-11-24 20:10:48,342 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__success
[2020-11-24 20:10:48,342 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole_NoBaseCtor__success
[2020-11-24 20:10:48,342 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole
[2020-11-24 20:10:48,342 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole
[2020-11-24 20:10:48,342 INFO  L130     BoogieDeclarations]: Found specification of procedure isMinter~address_MinterRole
[2020-11-24 20:10:48,342 INFO  L138     BoogieDeclarations]: Found implementation of procedure isMinter~address_MinterRole
[2020-11-24 20:10:48,342 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_MinterRole
[2020-11-24 20:10:48,343 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_MinterRole
[2020-11-24 20:10:48,343 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceMinter_MinterRole
[2020-11-24 20:10:48,343 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceMinter_MinterRole
[2020-11-24 20:10:48,343 INFO  L130     BoogieDeclarations]: Found specification of procedure _addMinter~address_MinterRole__success
[2020-11-24 20:10:48,343 INFO  L130     BoogieDeclarations]: Found specification of procedure _removeMinter~address_MinterRole__success
[2020-11-24 20:10:48,343 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 20:10:48,343 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-24 20:10:48,343 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-24 20:10:48,343 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-24 20:10:48,343 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-24 20:10:48,344 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-24 20:10:48,344 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-24 20:10:48,344 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-24 20:10:48,344 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-24 20:10:48,344 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 20:10:48,344 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-24 20:10:48,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-24 20:10:48,344 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-24 20:10:48,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-24 20:10:48,344 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-24 20:10:48,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-24 20:10:48,345 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 20:10:48,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-24 20:10:48,345 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-24 20:10:48,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-24 20:10:48,345 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 20:10:48,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-24 20:10:48,345 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 20:10:48,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 20:10:48,345 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-24 20:10:48,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-24 20:10:48,346 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-24 20:10:48,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-24 20:10:48,346 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 20:10:48,346 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-24 20:10:48,346 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-24 20:10:48,346 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 20:10:48,346 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-24 20:10:48,346 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-24 20:10:48,346 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-24 20:10:48,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-24 20:10:48,347 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-24 20:10:48,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-24 20:10:48,347 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-24 20:10:48,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-24 20:10:48,347 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-24 20:10:48,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-24 20:10:48,347 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__success
[2020-11-24 20:10:48,347 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable
[2020-11-24 20:10:48,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable
[2020-11-24 20:10:48,348 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20Mintable
[2020-11-24 20:10:48,348 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20Mintable
[2020-11-24 20:10:48,348 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped_NoBaseCtor__success
[2020-11-24 20:10:48,348 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped
[2020-11-24 20:10:48,348 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped
[2020-11-24 20:10:48,348 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Capped
[2020-11-24 20:10:48,348 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Capped
[2020-11-24 20:10:48,348 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20Capped__success
[2020-11-24 20:10:48,348 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-24 20:10:48,348 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable
[2020-11-24 20:10:48,349 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable
[2020-11-24 20:10:48,349 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable
[2020-11-24 20:10:48,349 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable
[2020-11-24 20:10:48,349 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-24 20:10:48,349 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-24 20:10:48,349 INFO  L130     BoogieDeclarations]: Found specification of procedure KOCToken_KOCToken_NoBaseCtor__success
[2020-11-24 20:10:48,349 INFO  L130     BoogieDeclarations]: Found specification of procedure KOCToken_KOCToken
[2020-11-24 20:10:48,349 INFO  L138     BoogieDeclarations]: Found implementation of procedure KOCToken_KOCToken
[2020-11-24 20:10:48,349 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 20:10:48,350 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 20:10:48,350 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 20:10:48,350 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__success
[2020-11-24 20:10:48,350 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 20:10:48,350 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 20:10:48,350 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Roles
[2020-11-24 20:10:48,350 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Roles
[2020-11-24 20:10:48,350 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MinterRole
[2020-11-24 20:10:48,350 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_MinterRole
[2020-11-24 20:10:48,350 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 20:10:48,350 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 20:10:48,351 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 20:10:48,351 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 20:10:48,351 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 20:10:48,351 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 20:10:48,351 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Mintable
[2020-11-24 20:10:48,351 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Mintable
[2020-11-24 20:10:48,351 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Capped
[2020-11-24 20:10:48,351 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Capped
[2020-11-24 20:10:48,351 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-24 20:10:48,352 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-24 20:10:48,352 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_KOCToken
[2020-11-24 20:10:48,352 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 20:10:48,352 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 20:10:48,352 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__fail
[2020-11-24 20:10:48,352 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:10:48,352 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 20:10:48,352 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 20:10:48,352 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:48,352 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:48,353 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:48,353 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:48,353 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:48,353 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles_NoBaseCtor__fail
[2020-11-24 20:10:48,353 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles__success
[2020-11-24 20:10:48,353 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles__fail
[2020-11-24 20:10:48,353 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__fail
[2020-11-24 20:10:48,353 INFO  L130     BoogieDeclarations]: Found specification of procedure remove~Role~address_Roles__fail
[2020-11-24 20:10:48,353 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__fail
[2020-11-24 20:10:48,353 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole_NoBaseCtor__fail
[2020-11-24 20:10:48,354 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole__success
[2020-11-24 20:10:48,354 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole__fail
[2020-11-24 20:10:48,354 INFO  L130     BoogieDeclarations]: Found specification of procedure isMinter~address_MinterRole__success
[2020-11-24 20:10:48,354 INFO  L130     BoogieDeclarations]: Found specification of procedure isMinter~address_MinterRole__fail
[2020-11-24 20:10:48,354 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_MinterRole__success
[2020-11-24 20:10:48,354 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_MinterRole__fail
[2020-11-24 20:10:48,354 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceMinter_MinterRole__success
[2020-11-24 20:10:48,354 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceMinter_MinterRole__fail
[2020-11-24 20:10:48,354 INFO  L130     BoogieDeclarations]: Found specification of procedure _addMinter~address_MinterRole__fail
[2020-11-24 20:10:48,354 INFO  L130     BoogieDeclarations]: Found specification of procedure _removeMinter~address_MinterRole__fail
[2020-11-24 20:10:48,355 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 20:10:48,355 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-24 20:10:48,355 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-24 20:10:48,355 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 20:10:48,355 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-24 20:10:48,355 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-24 20:10:48,355 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-24 20:10:48,355 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-24 20:10:48,355 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-24 20:10:48,356 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-24 20:10:48,356 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-24 20:10:48,356 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-24 20:10:48,356 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-24 20:10:48,356 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 20:10:48,356 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-24 20:10:48,356 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-24 20:10:48,356 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 20:10:48,356 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 20:10:48,356 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:10:48,356 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:10:48,357 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:10:48,357 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:10:48,357 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 20:10:48,357 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-24 20:10:48,357 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-24 20:10:48,357 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 20:10:48,357 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-24 20:10:48,357 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-24 20:10:48,357 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-24 20:10:48,357 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-24 20:10:48,357 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-24 20:10:48,358 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-24 20:10:48,358 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-24 20:10:48,358 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-24 20:10:48,358 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-24 20:10:48,358 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-24 20:10:48,358 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__fail
[2020-11-24 20:10:48,358 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable__success
[2020-11-24 20:10:48,358 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable__fail
[2020-11-24 20:10:48,358 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20Mintable__success
[2020-11-24 20:10:48,358 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20Mintable__fail
[2020-11-24 20:10:48,359 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped_NoBaseCtor__fail
[2020-11-24 20:10:48,359 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped__success
[2020-11-24 20:10:48,359 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped__fail
[2020-11-24 20:10:48,359 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Capped__success
[2020-11-24 20:10:48,359 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Capped__fail
[2020-11-24 20:10:48,359 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20Capped__fail
[2020-11-24 20:10:48,359 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-24 20:10:48,359 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-24 20:10:48,359 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-24 20:10:48,359 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__success
[2020-11-24 20:10:48,359 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__fail
[2020-11-24 20:10:48,359 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-24 20:10:48,360 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-24 20:10:48,360 INFO  L130     BoogieDeclarations]: Found specification of procedure KOCToken_KOCToken_NoBaseCtor__fail
[2020-11-24 20:10:48,360 INFO  L130     BoogieDeclarations]: Found specification of procedure KOCToken_KOCToken__success
[2020-11-24 20:10:48,360 INFO  L130     BoogieDeclarations]: Found specification of procedure KOCToken_KOCToken__fail
[2020-11-24 20:10:48,360 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 20:10:48,360 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 20:10:48,360 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 20:10:48,360 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__fail
[2020-11-24 20:10:48,360 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 20:10:48,360 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 20:10:48,360 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__fail
[2020-11-24 20:10:48,360 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__success
[2020-11-24 20:10:48,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:10:48,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:10:48,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 20:10:48,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 20:10:48,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:48,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:10:48,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:48,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 20:10:48,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:48,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 20:10:48,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:48,362 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:10:48,362 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-24 20:10:48,362 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-24 20:10:48,362 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles_NoBaseCtor__fail
[2020-11-24 20:10:48,362 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles_NoBaseCtor__success
[2020-11-24 20:10:48,362 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles__fail
[2020-11-24 20:10:48,362 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles__success
[2020-11-24 20:10:48,362 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__fail
[2020-11-24 20:10:48,362 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__success
[2020-11-24 20:10:48,362 INFO  L138     BoogieDeclarations]: Found implementation of procedure remove~Role~address_Roles__fail
[2020-11-24 20:10:48,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure remove~Role~address_Roles__success
[2020-11-24 20:10:48,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__fail
[2020-11-24 20:10:48,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__success
[2020-11-24 20:10:48,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole_NoBaseCtor__fail
[2020-11-24 20:10:48,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole_NoBaseCtor__success
[2020-11-24 20:10:48,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole__fail
[2020-11-24 20:10:48,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole__success
[2020-11-24 20:10:48,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure isMinter~address_MinterRole__fail
[2020-11-24 20:10:48,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure isMinter~address_MinterRole__success
[2020-11-24 20:10:48,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_MinterRole__fail
[2020-11-24 20:10:48,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_MinterRole__success
[2020-11-24 20:10:48,364 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceMinter_MinterRole__fail
[2020-11-24 20:10:48,364 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceMinter_MinterRole__success
[2020-11-24 20:10:48,364 INFO  L138     BoogieDeclarations]: Found implementation of procedure _addMinter~address_MinterRole__fail
[2020-11-24 20:10:48,364 INFO  L138     BoogieDeclarations]: Found implementation of procedure _addMinter~address_MinterRole__success
[2020-11-24 20:10:48,364 INFO  L138     BoogieDeclarations]: Found implementation of procedure _removeMinter~address_MinterRole__fail
[2020-11-24 20:10:48,364 INFO  L138     BoogieDeclarations]: Found implementation of procedure _removeMinter~address_MinterRole__success
[2020-11-24 20:10:48,364 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 20:10:48,364 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 20:10:48,364 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-24 20:10:48,364 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-24 20:10:48,364 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 20:10:48,364 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 20:10:48,365 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-24 20:10:48,365 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-24 20:10:48,365 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-24 20:10:48,365 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-24 20:10:48,365 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-24 20:10:48,365 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-24 20:10:48,365 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-24 20:10:48,365 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-24 20:10:48,365 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 20:10:48,365 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-24 20:10:48,365 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-24 20:10:48,365 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-24 20:10:48,366 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 20:10:48,366 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 20:10:48,366 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:10:48,366 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:10:48,366 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:10:48,366 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:10:48,366 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 20:10:48,366 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 20:10:48,366 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-24 20:10:48,366 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-24 20:10:48,366 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-24 20:10:48,366 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-24 20:10:48,367 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 20:10:48,367 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 20:10:48,367 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-24 20:10:48,367 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-24 20:10:48,367 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-24 20:10:48,367 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-24 20:10:48,367 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-24 20:10:48,367 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-24 20:10:48,367 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-24 20:10:48,367 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-24 20:10:48,368 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-24 20:10:48,368 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-24 20:10:48,368 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-24 20:10:48,368 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-24 20:10:48,368 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__fail
[2020-11-24 20:10:48,368 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__success
[2020-11-24 20:10:48,368 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable__fail
[2020-11-24 20:10:48,368 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable__success
[2020-11-24 20:10:48,368 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20Mintable__fail
[2020-11-24 20:10:48,368 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20Mintable__success
[2020-11-24 20:10:48,368 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped_NoBaseCtor__fail
[2020-11-24 20:10:48,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped_NoBaseCtor__success
[2020-11-24 20:10:48,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped__fail
[2020-11-24 20:10:48,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped__success
[2020-11-24 20:10:48,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Capped__fail
[2020-11-24 20:10:48,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Capped__success
[2020-11-24 20:10:48,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20Capped__fail
[2020-11-24 20:10:48,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20Capped__success
[2020-11-24 20:10:48,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-24 20:10:48,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-24 20:10:48,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-24 20:10:48,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-24 20:10:48,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__fail
[2020-11-24 20:10:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__success
[2020-11-24 20:10:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-24 20:10:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-24 20:10:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure KOCToken_KOCToken_NoBaseCtor__fail
[2020-11-24 20:10:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure KOCToken_KOCToken_NoBaseCtor__success
[2020-11-24 20:10:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure KOCToken_KOCToken__fail
[2020-11-24 20:10:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure KOCToken_KOCToken__success
[2020-11-24 20:10:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 20:10:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 20:10:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 20:10:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 20:10:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 20:10:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 20:10:48,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__fail
[2020-11-24 20:10:48,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__success
[2020-11-24 20:10:48,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 20:10:48,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 20:10:48,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Roles
[2020-11-24 20:10:48,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Roles
[2020-11-24 20:10:48,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MinterRole
[2020-11-24 20:10:48,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_MinterRole
[2020-11-24 20:10:48,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 20:10:48,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 20:10:48,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 20:10:48,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 20:10:48,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 20:10:48,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 20:10:48,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Mintable
[2020-11-24 20:10:48,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Mintable
[2020-11-24 20:10:48,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Capped
[2020-11-24 20:10:48,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Capped
[2020-11-24 20:10:48,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-24 20:10:48,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-24 20:10:48,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_KOCToken
[2020-11-24 20:10:48,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 20:10:48,372 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 20:10:48,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 20:10:49,054 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:10:49,055 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:10:49,056 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:10:49,527 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 20:10:49,527 INFO  L286             CfgBuilder]: Removed 10 assue(true) statements.
[2020-11-24 20:10:49,530 INFO  L202        PluginConnector]: Adding new model KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:10:49 BoogieIcfgContainer
[2020-11-24 20:10:49,530 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:10:48" (2/2) ...
[2020-11-24 20:10:49,530 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 20:10:49,531 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@52327e61 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:10:49, skipping insertion in model container
[2020-11-24 20:10:49,531 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 20:10:49,531 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 20:10:49,531 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 20:10:49,532 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 20:10:49,533 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:48" (1/3) ...
[2020-11-24 20:10:49,533 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@528d803a and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:10:49, skipping insertion in model container
[2020-11-24 20:10:49,533 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:10:48" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 20:10:49,572 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:10:49 NWAContainer
[2020-11-24 20:10:49,572 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 20:10:49,572 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 20:10:49,572 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 20:10:49,573 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 20:10:49,574 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:10:49" (3/4) ...
[2020-11-24 20:10:49,574 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@3342e12 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:10:49, skipping insertion in model container
[2020-11-24 20:10:49,575 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:10:49" (4/4) ...
[2020-11-24 20:10:49,578 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 20:10:49,584 INFO  L110   BuchiProductObserver]: Initial RCFG 2791 locations, 4111 edges
[2020-11-24 20:10:49,584 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 20:10:49,597 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 20:10:51,745 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 20:10:51,755 INFO  L110   BuchiProductObserver]: BuchiProgram size 7214 locations, 13510 edges
[2020-11-24 20:10:51,755 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:10:51 BoogieIcfgContainer
[2020-11-24 20:10:51,755 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 20:10:51,755 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 20:10:51,755 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 20:10:51,756 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 20:10:51,757 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:10:51" (1/1) ...
[2020-11-24 20:10:51,936 INFO  L313           BlockEncoder]: Initial Icfg 7214 locations, 13510 edges
[2020-11-24 20:10:51,936 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 20:10:51,936 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 20:10:51,937 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 20:10:51,937 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 20:10:51,953 INFO  L70    emoveInfeasibleEdges]: Removed 195 edges and 23 locations because of local infeasibility
[2020-11-24 20:10:51,967 INFO  L70        RemoveSinkStates]: Removed 110 edges and 73 locations by removing sink states
[2020-11-24 20:10:51,986 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 20:10:51,991 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 20:10:51,995 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 20:10:51,996 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 20:10:52,000 INFO  L313           BlockEncoder]: Encoded RCFG 7084 locations, 13155 edges
[2020-11-24 20:10:52,000 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:10:52 BasicIcfg
[2020-11-24 20:10:52,000 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 20:10:52,000 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 20:10:52,000 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 20:10:52,002 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 20:10:52,002 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:10:52,003 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:10:48" (1/6) ...
[2020-11-24 20:10:52,004 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6639bb37 and model type KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:10:52, skipping insertion in model container
[2020-11-24 20:10:52,004 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:10:52,004 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:10:48" (2/6) ...
[2020-11-24 20:10:52,004 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6639bb37 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:10:52, skipping insertion in model container
[2020-11-24 20:10:52,004 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:10:52,004 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:10:49" (3/6) ...
[2020-11-24 20:10:52,004 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6639bb37 and model type KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:10:52, skipping insertion in model container
[2020-11-24 20:10:52,004 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:10:52,004 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:10:49" (4/6) ...
[2020-11-24 20:10:52,005 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6639bb37 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:10:52, skipping insertion in model container
[2020-11-24 20:10:52,005 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:10:52,005 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:10:51" (5/6) ...
[2020-11-24 20:10:52,005 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6639bb37 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 08:10:52, skipping insertion in model container
[2020-11-24 20:10:52,005 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:10:52,005 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:10:52" (6/6) ...
[2020-11-24 20:10:52,006 INFO  L404   chiAutomizerObserver]: Analyzing ICFG KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_allowance.bpl_BEv2
[2020-11-24 20:10:52,041 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 20:10:52,041 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 20:10:52,041 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 20:10:52,041 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 20:10:52,041 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 20:10:52,041 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 20:10:52,041 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 20:10:52,041 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 20:10:52,041 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 20:10:52,090 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7084 states.
[2020-11-24 20:10:52,140 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:10:52,140 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:10:52,140 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:10:52,147 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:10:52,148 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:10:52,148 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 20:10:52,148 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7084 states.
[2020-11-24 20:10:52,168 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:10:52,168 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:10:52,168 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:10:52,170 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:10:52,170 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_ERC200 := false;
[L2]                 call_allowance_ERC200 := false;
[L2]     CALL        call main();
[L7799]              assume null == 0;
[L7800]  CALL        call this := FreshRefGenerator__success();
[L2939]              havoc newRef;
[L2940]              assume Alloc[newRef] == false;
[L2941]              Alloc[newRef] := true;
[L2942]              assume newRef != null;
[L7800]  RET         call this := FreshRefGenerator__success();
[L7801]              assume now >= 0;
[L7802]              assume DType[this] == KOCToken;
[L7803]              assume msgvalue_MSG == 0;
[L7804]              gas := gas - 53000;
[L7805]  CALL        call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L1940]              havoc __exception;
[L1941]              revert := false;
[L1942]  COND FALSE  !(__exception)
[L1969]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4870]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L4870]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  COND TRUE   revert
[L1969]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1970]              assume !revert && gas >= 0;
[L7805]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L7806]              assume !revert && gas >= 0;

Loop:
[L7809]  CALL        call CorralChoice_KOCToken(this);
[L7654]              havoc msgsender_MSG;
[L7655]              havoc msgvalue_MSG;
[L7656]              havoc choice;
[L7657]              havoc to_s458;
[L7658]              havoc value_s458;
[L7659]              havoc __ret_0_transfer;
[L7660]              havoc spender_s477;
[L7661]              havoc value_s477;
[L7662]              havoc __ret_0_approve;
[L7663]              havoc from_s512;
[L7664]              havoc to_s512;
[L7665]              havoc value_s512;
[L7666]              havoc __ret_0_transferFrom;
[L7667]              havoc __ret_0_totalSupply;
[L7668]              havoc owner_s423;
[L7669]              havoc __ret_0_balanceOf;
[L7670]              havoc owner_s439;
[L7671]              havoc spender_s439;
[L7672]              havoc __ret_0_allowance;
[L7673]              havoc spender_s539;
[L7674]              havoc addedValue_s539;
[L7675]              havoc __ret_0_increaseAllowance;
[L7676]              havoc spender_s566;
[L7677]              havoc subtractedValue_s566;
[L7678]              havoc __ret_0_decreaseAllowance;
[L7679]              havoc name_s795;
[L7680]              havoc symbol_s795;
[L7681]              havoc decimals_s795;
[L7682]              havoc __ret_0_name;
[L7683]              havoc __ret_0_symbol;
[L7684]              havoc __ret_0_decimals;
[L7685]              havoc value_s912;
[L7686]              havoc from_s925;
[L7687]              havoc value_s925;
[L7688]              havoc tmpNow;
[L7689]              havoc gas;
[L7690]              assume gas > 4000000 && gas <= 8000000;
[L7691]              tmpNow := now;
[L7692]              havoc now;
[L7693]              assume now > tmpNow;
[L7694]              assume msgsender_MSG != null;
[L7695]              assume DType[msgsender_MSG] != SafeMath;
[L7696]              assume DType[msgsender_MSG] != Roles;
[L7697]              assume DType[msgsender_MSG] != MinterRole;
[L7698]              assume DType[msgsender_MSG] != IERC20;
[L7699]              assume DType[msgsender_MSG] != ERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7701]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7702]              assume DType[msgsender_MSG] != ERC20Capped;
[L7703]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7704]              assume DType[msgsender_MSG] != KOCToken;
[L7705]              Alloc[msgsender_MSG] := true;
[L7706]  COND TRUE   choice == 13
[L7707]              gas := gas - 21000;
[L7708]  COND FALSE  !(gas >= 0)
[L7809]  RET         call CorralChoice_KOCToken(this);

[2020-11-24 20:10:52,183 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:10:52,183 INFO  L82        PathProgramCache]: Analyzing trace with hash 607303649, now seen corresponding path program 1 times
[2020-11-24 20:10:52,188 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:10:52,204 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:10:52,241 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:10:52,242 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:10:52,242 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:10:52,548 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:10:52,556 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:10:52,557 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:10:52,558 INFO  L87              Difference]: Start difference. First operand 7084 states. Second operand 4 states.
[2020-11-24 20:10:53,044 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:10:53,045 INFO  L93              Difference]: Finished difference Result 2903 states and 3586 transitions.
[2020-11-24 20:10:53,045 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:10:53,046 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2903 states and 3586 transitions.
[2020-11-24 20:10:53,062 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:10:53,082 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2903 states to 2903 states and 3586 transitions.
[2020-11-24 20:10:53,083 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 20:10:53,085 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 754
[2020-11-24 20:10:53,085 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2903 states and 3586 transitions.
[2020-11-24 20:10:53,096 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:10:53,096 INFO  L728         BuchiCegarLoop]: Abstraction has 2903 states and 3586 transitions.
[2020-11-24 20:10:53,110 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2903 states and 3586 transitions.
[2020-11-24 20:10:53,165 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2903 to 2903.
[2020-11-24 20:10:53,166 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2903 states.
[2020-11-24 20:10:53,172 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2903 states to 2903 states and 3586 transitions.
[2020-11-24 20:10:53,173 INFO  L751         BuchiCegarLoop]: Abstraction has 2903 states and 3586 transitions.
[2020-11-24 20:10:53,173 INFO  L631         BuchiCegarLoop]: Abstraction has 2903 states and 3586 transitions.
[2020-11-24 20:10:53,173 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 20:10:53,173 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2903 states and 3586 transitions.
[2020-11-24 20:10:53,179 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:10:53,179 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:10:53,179 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:10:53,181 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:10:53,181 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_ERC200 := false;
[L2]                 call_allowance_ERC200 := false;
[L2]     CALL        call main();
[L7799]              assume null == 0;
[L7800]  CALL        call this := FreshRefGenerator__success();
[L2939]              havoc newRef;
[L2940]              assume Alloc[newRef] == false;
[L2941]              Alloc[newRef] := true;
[L2942]              assume newRef != null;
[L7800]  RET         call this := FreshRefGenerator__success();
[L7801]              assume now >= 0;
[L7802]              assume DType[this] == KOCToken;
[L7803]              assume msgvalue_MSG == 0;
[L7804]              gas := gas - 53000;
[L7805]  CALL        call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L1940]              havoc __exception;
[L1941]              revert := false;
[L1942]  COND FALSE  !(__exception)
[L1969]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4870]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L4870]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  COND TRUE   revert
[L1969]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1970]              assume !revert && gas >= 0;
[L7805]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L7806]              assume !revert && gas >= 0;
[L7809]  CALL        call CorralChoice_KOCToken(this);
[L7654]              havoc msgsender_MSG;
[L7655]              havoc msgvalue_MSG;
[L7656]              havoc choice;
[L7657]              havoc to_s458;
[L7658]              havoc value_s458;
[L7659]              havoc __ret_0_transfer;
[L7660]              havoc spender_s477;
[L7661]              havoc value_s477;
[L7662]              havoc __ret_0_approve;
[L7663]              havoc from_s512;
[L7664]              havoc to_s512;
[L7665]              havoc value_s512;
[L7666]              havoc __ret_0_transferFrom;
[L7667]              havoc __ret_0_totalSupply;
[L7668]              havoc owner_s423;
[L7669]              havoc __ret_0_balanceOf;
[L7670]              havoc owner_s439;
[L7671]              havoc spender_s439;
[L7672]              havoc __ret_0_allowance;
[L7673]              havoc spender_s539;
[L7674]              havoc addedValue_s539;
[L7675]              havoc __ret_0_increaseAllowance;
[L7676]              havoc spender_s566;
[L7677]              havoc subtractedValue_s566;
[L7678]              havoc __ret_0_decreaseAllowance;
[L7679]              havoc name_s795;
[L7680]              havoc symbol_s795;
[L7681]              havoc decimals_s795;
[L7682]              havoc __ret_0_name;
[L7683]              havoc __ret_0_symbol;
[L7684]              havoc __ret_0_decimals;
[L7685]              havoc value_s912;
[L7686]              havoc from_s925;
[L7687]              havoc value_s925;
[L7688]              havoc tmpNow;
[L7689]              havoc gas;
[L7690]              assume gas > 4000000 && gas <= 8000000;
[L7691]              tmpNow := now;
[L7692]              havoc now;
[L7693]              assume now > tmpNow;
[L7694]              assume msgsender_MSG != null;
[L7695]              assume DType[msgsender_MSG] != SafeMath;
[L7696]              assume DType[msgsender_MSG] != Roles;
[L7697]              assume DType[msgsender_MSG] != MinterRole;
[L7698]              assume DType[msgsender_MSG] != IERC20;
[L7699]              assume DType[msgsender_MSG] != ERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7701]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7702]              assume DType[msgsender_MSG] != ERC20Capped;
[L7703]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7704]              assume DType[msgsender_MSG] != KOCToken;
[L7705]              Alloc[msgsender_MSG] := true;
[L7706]  COND FALSE  !(choice == 13)
[L7713]  COND FALSE  !(choice == 12)
[L7720]  COND FALSE  !(choice == 11)
[L7727]  COND FALSE  !(choice == 10)
[L7733]  COND FALSE  !(choice == 9)
[L7739]  COND TRUE   choice == 8
[L7740]              gas := gas - 21000;
[L7741]  COND TRUE   gas >= 0
[L7742]              assume msgvalue_MSG == 0;
[L7743]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_ERC20[this][owner_s439][spender_s439] >= 0 && _allowed_ERC20[this][owner_s439][spender_s439] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L798]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L3597]              __ret_0_ := _allowed_ERC20[this][owner_s439][spender_s439];
[L798]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L799]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _allowed_ERC20[this][owner_s439][spender_s439] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L7743]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L7809]  RET         call CorralChoice_KOCToken(this);

Loop:
[L7809]  CALL        call CorralChoice_KOCToken(this);
[L7654]              havoc msgsender_MSG;
[L7655]              havoc msgvalue_MSG;
[L7656]              havoc choice;
[L7657]              havoc to_s458;
[L7658]              havoc value_s458;
[L7659]              havoc __ret_0_transfer;
[L7660]              havoc spender_s477;
[L7661]              havoc value_s477;
[L7662]              havoc __ret_0_approve;
[L7663]              havoc from_s512;
[L7664]              havoc to_s512;
[L7665]              havoc value_s512;
[L7666]              havoc __ret_0_transferFrom;
[L7667]              havoc __ret_0_totalSupply;
[L7668]              havoc owner_s423;
[L7669]              havoc __ret_0_balanceOf;
[L7670]              havoc owner_s439;
[L7671]              havoc spender_s439;
[L7672]              havoc __ret_0_allowance;
[L7673]              havoc spender_s539;
[L7674]              havoc addedValue_s539;
[L7675]              havoc __ret_0_increaseAllowance;
[L7676]              havoc spender_s566;
[L7677]              havoc subtractedValue_s566;
[L7678]              havoc __ret_0_decreaseAllowance;
[L7679]              havoc name_s795;
[L7680]              havoc symbol_s795;
[L7681]              havoc decimals_s795;
[L7682]              havoc __ret_0_name;
[L7683]              havoc __ret_0_symbol;
[L7684]              havoc __ret_0_decimals;
[L7685]              havoc value_s912;
[L7686]              havoc from_s925;
[L7687]              havoc value_s925;
[L7688]              havoc tmpNow;
[L7689]              havoc gas;
[L7690]              assume gas > 4000000 && gas <= 8000000;
[L7691]              tmpNow := now;
[L7692]              havoc now;
[L7693]              assume now > tmpNow;
[L7694]              assume msgsender_MSG != null;
[L7695]              assume DType[msgsender_MSG] != SafeMath;
[L7696]              assume DType[msgsender_MSG] != Roles;
[L7697]              assume DType[msgsender_MSG] != MinterRole;
[L7698]              assume DType[msgsender_MSG] != IERC20;
[L7699]              assume DType[msgsender_MSG] != ERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7701]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7702]              assume DType[msgsender_MSG] != ERC20Capped;
[L7703]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7704]              assume DType[msgsender_MSG] != KOCToken;
[L7705]              Alloc[msgsender_MSG] := true;
[L7706]  COND FALSE  !(choice == 13)
[L7713]  COND FALSE  !(choice == 12)
[L7720]  COND FALSE  !(choice == 11)
[L7727]  COND FALSE  !(choice == 10)
[L7733]  COND FALSE  !(choice == 9)
[L7739]  COND TRUE   choice == 8
[L7740]              gas := gas - 21000;
[L7741]  COND TRUE   gas >= 0
[L7742]              assume msgvalue_MSG == 0;
[L7743]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_ERC20[this][owner_s439][spender_s439] >= 0 && _allowed_ERC20[this][owner_s439][spender_s439] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L798]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L3597]              __ret_0_ := _allowed_ERC20[this][owner_s439][spender_s439];
[L798]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L799]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _allowed_ERC20[this][owner_s439][spender_s439] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L7743]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L7809]  RET         call CorralChoice_KOCToken(this);

[2020-11-24 20:10:53,185 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:10:53,185 INFO  L82        PathProgramCache]: Analyzing trace with hash 1623528417, now seen corresponding path program 1 times
[2020-11-24 20:10:53,186 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:10:53,194 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:10:53,210 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:10:53,210 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:10:53,210 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:10:53,211 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:10:53,211 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:10:53,211 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:10:53,212 INFO  L87              Difference]: Start difference. First operand 2903 states and 3586 transitions. cyclomatic complexity: 685 Second operand 3 states.
[2020-11-24 20:10:53,314 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:10:53,314 INFO  L93              Difference]: Finished difference Result 3899 states and 4850 transitions.
[2020-11-24 20:10:53,314 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:10:53,314 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3899 states and 4850 transitions.
[2020-11-24 20:10:53,329 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:10:53,346 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3899 states to 3899 states and 4850 transitions.
[2020-11-24 20:10:53,346 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1048
[2020-11-24 20:10:53,347 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1048
[2020-11-24 20:10:53,347 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3899 states and 4850 transitions.
[2020-11-24 20:10:53,352 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:10:53,352 INFO  L728         BuchiCegarLoop]: Abstraction has 3899 states and 4850 transitions.
[2020-11-24 20:10:53,355 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3899 states and 4850 transitions.
[2020-11-24 20:10:53,387 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3899 to 3391.
[2020-11-24 20:10:53,387 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3391 states.
[2020-11-24 20:10:53,392 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3391 states to 3391 states and 4238 transitions.
[2020-11-24 20:10:53,392 INFO  L751         BuchiCegarLoop]: Abstraction has 3391 states and 4238 transitions.
[2020-11-24 20:10:53,392 INFO  L631         BuchiCegarLoop]: Abstraction has 3391 states and 4238 transitions.
[2020-11-24 20:10:53,392 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 20:10:53,392 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3391 states and 4238 transitions.
[2020-11-24 20:10:53,398 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:10:53,398 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:10:53,398 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:10:53,400 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:10:53,400 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_ERC200 := false;
[L2]                 call_allowance_ERC200 := false;
[L2]     CALL        call main();
[L7799]              assume null == 0;
[L7800]  CALL        call this := FreshRefGenerator__success();
[L2939]              havoc newRef;
[L2940]              assume Alloc[newRef] == false;
[L2941]              Alloc[newRef] := true;
[L2942]              assume newRef != null;
[L7800]  RET         call this := FreshRefGenerator__success();
[L7801]              assume now >= 0;
[L7802]              assume DType[this] == KOCToken;
[L7803]              assume msgvalue_MSG == 0;
[L7804]              gas := gas - 53000;
[L7805]  CALL        call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L1940]              havoc __exception;
[L1941]              revert := false;
[L1942]  COND FALSE  !(__exception)
[L1969]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4870]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L4870]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  COND FALSE  !(revert)
[L4874]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3555]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L3555]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  COND FALSE  !(revert)
[L3559]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3531]              assume msgsender_MSG != null;
[L3532]              Balance[this] := 0;
[L3533]              _balances_ERC20[this] := zeroRefintArr();
[L3534]              sum__balances0[this] := 0;
[L3535]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3536]              sum__allowed1[this] := 0;
[L3537]              _totalSupply_ERC20[this] := 0;
[L3559]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3560]  COND FALSE  !(revert)
[L4874]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4875]  COND FALSE  !(revert)
[L4878]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4389]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L4389]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4390]  COND FALSE  !(revert)
[L4393]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4364]              assume msgsender_MSG != null;
[L4365]              Balance[this] := 0;
[L4366]              _name_ERC20Detailed[this] := 1767506099;
[L4367]              _symbol_ERC20Detailed[this] := 1767506099;
[L4368]              _decimals_ERC20Detailed[this] := 0;
[L4370]              _name_ERC20Detailed[this] := name_s795;
[L4371]              _symbol_ERC20Detailed[this] := symbol_s795;
[L4372]              _decimals_ERC20Detailed[this] := decimals_s795;
[L4393]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4394]  COND FALSE  !(revert)
[L4878]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4879]  COND FALSE  !(revert)
[L4882]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L4721]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4722]  COND FALSE  !(revert)
[L4725]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3555]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L3555]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  COND FALSE  !(revert)
[L3559]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3531]              assume msgsender_MSG != null;
[L3532]              Balance[this] := 0;
[L3533]              _balances_ERC20[this] := zeroRefintArr();
[L3534]              sum__balances0[this] := 0;
[L3535]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3536]              sum__allowed1[this] := 0;
[L3537]              _totalSupply_ERC20[this] := 0;
[L3559]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3560]  COND FALSE  !(revert)
[L4725]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4726]  COND FALSE  !(revert)
[L4729]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4698]              assume msgsender_MSG != null;
[L4699]              Balance[this] := 0;
[L4729]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4730]  COND FALSE  !(revert)
[L4882]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4883]  COND FALSE  !(revert)
[L4886]  CALL        call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4826]              assume msgsender_MSG != null;
[L4827]              Balance[this] := 0;
[L4828]              amount_KOCToken[this] := 10000000;
[L4830]              __var_27 := ConstantToRef(7544919301613266970804652377014389568456575767);
[L4831]  COND TRUE   DType[this] == KOCToken
[L4832]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4109]              __var_15 := null;
[L4110]  COND TRUE   !(account_s654 != null)
[L4111]              revert := true;
[L4832]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4833]  COND TRUE   revert
[L4886]  RET         call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4887]  COND FALSE  !(revert)
[L1969]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1970]              assume !revert && gas >= 0;
[L7805]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L7806]              assume !revert && gas >= 0;
[L7809]  CALL        call CorralChoice_KOCToken(this);
[L7654]              havoc msgsender_MSG;
[L7655]              havoc msgvalue_MSG;
[L7656]              havoc choice;
[L7657]              havoc to_s458;
[L7658]              havoc value_s458;
[L7659]              havoc __ret_0_transfer;
[L7660]              havoc spender_s477;
[L7661]              havoc value_s477;
[L7662]              havoc __ret_0_approve;
[L7663]              havoc from_s512;
[L7664]              havoc to_s512;
[L7665]              havoc value_s512;
[L7666]              havoc __ret_0_transferFrom;
[L7667]              havoc __ret_0_totalSupply;
[L7668]              havoc owner_s423;
[L7669]              havoc __ret_0_balanceOf;
[L7670]              havoc owner_s439;
[L7671]              havoc spender_s439;
[L7672]              havoc __ret_0_allowance;
[L7673]              havoc spender_s539;
[L7674]              havoc addedValue_s539;
[L7675]              havoc __ret_0_increaseAllowance;
[L7676]              havoc spender_s566;
[L7677]              havoc subtractedValue_s566;
[L7678]              havoc __ret_0_decreaseAllowance;
[L7679]              havoc name_s795;
[L7680]              havoc symbol_s795;
[L7681]              havoc decimals_s795;
[L7682]              havoc __ret_0_name;
[L7683]              havoc __ret_0_symbol;
[L7684]              havoc __ret_0_decimals;
[L7685]              havoc value_s912;
[L7686]              havoc from_s925;
[L7687]              havoc value_s925;
[L7688]              havoc tmpNow;
[L7689]              havoc gas;
[L7690]              assume gas > 4000000 && gas <= 8000000;
[L7691]              tmpNow := now;
[L7692]              havoc now;
[L7693]              assume now > tmpNow;
[L7694]              assume msgsender_MSG != null;
[L7695]              assume DType[msgsender_MSG] != SafeMath;
[L7696]              assume DType[msgsender_MSG] != Roles;
[L7697]              assume DType[msgsender_MSG] != MinterRole;
[L7698]              assume DType[msgsender_MSG] != IERC20;
[L7699]              assume DType[msgsender_MSG] != ERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7701]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7702]              assume DType[msgsender_MSG] != ERC20Capped;
[L7703]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7704]              assume DType[msgsender_MSG] != KOCToken;
[L7705]              Alloc[msgsender_MSG] := true;
[L7706]  COND FALSE  !(choice == 13)
[L7713]  COND FALSE  !(choice == 12)
[L7720]  COND FALSE  !(choice == 11)
[L7727]  COND FALSE  !(choice == 10)
[L7733]  COND FALSE  !(choice == 9)
[L7739]  COND TRUE   choice == 8
[L7740]              gas := gas - 21000;
[L7741]  COND TRUE   gas >= 0
[L7742]              assume msgvalue_MSG == 0;
[L7743]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_ERC20[this][owner_s439][spender_s439] >= 0 && _allowed_ERC20[this][owner_s439][spender_s439] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L798]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L3597]              __ret_0_ := _allowed_ERC20[this][owner_s439][spender_s439];
[L798]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L799]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _allowed_ERC20[this][owner_s439][spender_s439] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L7743]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L7809]  RET         call CorralChoice_KOCToken(this);

Loop:
[L7809]  CALL        call CorralChoice_KOCToken(this);
[L7654]              havoc msgsender_MSG;
[L7655]              havoc msgvalue_MSG;
[L7656]              havoc choice;
[L7657]              havoc to_s458;
[L7658]              havoc value_s458;
[L7659]              havoc __ret_0_transfer;
[L7660]              havoc spender_s477;
[L7661]              havoc value_s477;
[L7662]              havoc __ret_0_approve;
[L7663]              havoc from_s512;
[L7664]              havoc to_s512;
[L7665]              havoc value_s512;
[L7666]              havoc __ret_0_transferFrom;
[L7667]              havoc __ret_0_totalSupply;
[L7668]              havoc owner_s423;
[L7669]              havoc __ret_0_balanceOf;
[L7670]              havoc owner_s439;
[L7671]              havoc spender_s439;
[L7672]              havoc __ret_0_allowance;
[L7673]              havoc spender_s539;
[L7674]              havoc addedValue_s539;
[L7675]              havoc __ret_0_increaseAllowance;
[L7676]              havoc spender_s566;
[L7677]              havoc subtractedValue_s566;
[L7678]              havoc __ret_0_decreaseAllowance;
[L7679]              havoc name_s795;
[L7680]              havoc symbol_s795;
[L7681]              havoc decimals_s795;
[L7682]              havoc __ret_0_name;
[L7683]              havoc __ret_0_symbol;
[L7684]              havoc __ret_0_decimals;
[L7685]              havoc value_s912;
[L7686]              havoc from_s925;
[L7687]              havoc value_s925;
[L7688]              havoc tmpNow;
[L7689]              havoc gas;
[L7690]              assume gas > 4000000 && gas <= 8000000;
[L7691]              tmpNow := now;
[L7692]              havoc now;
[L7693]              assume now > tmpNow;
[L7694]              assume msgsender_MSG != null;
[L7695]              assume DType[msgsender_MSG] != SafeMath;
[L7696]              assume DType[msgsender_MSG] != Roles;
[L7697]              assume DType[msgsender_MSG] != MinterRole;
[L7698]              assume DType[msgsender_MSG] != IERC20;
[L7699]              assume DType[msgsender_MSG] != ERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7701]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7702]              assume DType[msgsender_MSG] != ERC20Capped;
[L7703]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7704]              assume DType[msgsender_MSG] != KOCToken;
[L7705]              Alloc[msgsender_MSG] := true;
[L7706]  COND FALSE  !(choice == 13)
[L7713]  COND FALSE  !(choice == 12)
[L7720]  COND FALSE  !(choice == 11)
[L7727]  COND FALSE  !(choice == 10)
[L7733]  COND FALSE  !(choice == 9)
[L7739]  COND TRUE   choice == 8
[L7740]              gas := gas - 21000;
[L7741]  COND TRUE   gas >= 0
[L7742]              assume msgvalue_MSG == 0;
[L7743]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_ERC20[this][owner_s439][spender_s439] >= 0 && _allowed_ERC20[this][owner_s439][spender_s439] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L798]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L3597]              __ret_0_ := _allowed_ERC20[this][owner_s439][spender_s439];
[L798]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L799]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _allowed_ERC20[this][owner_s439][spender_s439] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L7743]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L7809]  RET         call CorralChoice_KOCToken(this);

[2020-11-24 20:10:53,404 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:10:53,404 INFO  L82        PathProgramCache]: Analyzing trace with hash 1510956472, now seen corresponding path program 1 times
[2020-11-24 20:10:53,405 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:10:53,417 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:10:53,464 INFO  L134       CoverageAnalysis]: Checked inductivity of 119 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 119 trivial. 0 not checked.
[2020-11-24 20:10:53,464 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:10:53,464 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 20:10:53,464 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:10:53,464 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 20:10:53,465 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 20:10:53,465 INFO  L87              Difference]: Start difference. First operand 3391 states and 4238 transitions. cyclomatic complexity: 849 Second operand 5 states.
[2020-11-24 20:10:53,497 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:10:53,497 INFO  L93              Difference]: Finished difference Result 3393 states and 4239 transitions.
[2020-11-24 20:10:53,497 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:10:53,497 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3393 states and 4239 transitions.
[2020-11-24 20:10:53,506 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:10:53,516 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3393 states to 3390 states and 4236 transitions.
[2020-11-24 20:10:53,516 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 914
[2020-11-24 20:10:53,517 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 914
[2020-11-24 20:10:53,517 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3390 states and 4236 transitions.
[2020-11-24 20:10:53,520 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:10:53,520 INFO  L728         BuchiCegarLoop]: Abstraction has 3390 states and 4236 transitions.
[2020-11-24 20:10:53,523 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3390 states and 4236 transitions.
[2020-11-24 20:10:53,549 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3390 to 3390.
[2020-11-24 20:10:53,549 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3390 states.
[2020-11-24 20:10:53,553 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3390 states to 3390 states and 4236 transitions.
[2020-11-24 20:10:53,553 INFO  L751         BuchiCegarLoop]: Abstraction has 3390 states and 4236 transitions.
[2020-11-24 20:10:53,553 INFO  L631         BuchiCegarLoop]: Abstraction has 3390 states and 4236 transitions.
[2020-11-24 20:10:53,553 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 20:10:53,553 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3390 states and 4236 transitions.
[2020-11-24 20:10:53,557 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:10:53,557 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:10:53,558 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:10:53,559 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:10:53,559 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_ERC200 := false;
[L2]                 call_allowance_ERC200 := false;
[L2]     CALL        call main();
[L7799]              assume null == 0;
[L7800]  CALL        call this := FreshRefGenerator__success();
[L2939]              havoc newRef;
[L2940]              assume Alloc[newRef] == false;
[L2941]              Alloc[newRef] := true;
[L2942]              assume newRef != null;
[L7800]  RET         call this := FreshRefGenerator__success();
[L7801]              assume now >= 0;
[L7802]              assume DType[this] == KOCToken;
[L7803]              assume msgvalue_MSG == 0;
[L7804]              gas := gas - 53000;
[L7805]  CALL        call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L1940]              havoc __exception;
[L1941]              revert := false;
[L1942]  COND FALSE  !(__exception)
[L1969]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4870]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L4870]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  COND FALSE  !(revert)
[L4874]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3555]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L3555]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  COND FALSE  !(revert)
[L3559]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3531]              assume msgsender_MSG != null;
[L3532]              Balance[this] := 0;
[L3533]              _balances_ERC20[this] := zeroRefintArr();
[L3534]              sum__balances0[this] := 0;
[L3535]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3536]              sum__allowed1[this] := 0;
[L3537]              _totalSupply_ERC20[this] := 0;
[L3559]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3560]  COND FALSE  !(revert)
[L4874]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4875]  COND FALSE  !(revert)
[L4878]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4389]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L4389]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4390]  COND FALSE  !(revert)
[L4393]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4364]              assume msgsender_MSG != null;
[L4365]              Balance[this] := 0;
[L4366]              _name_ERC20Detailed[this] := 1767506099;
[L4367]              _symbol_ERC20Detailed[this] := 1767506099;
[L4368]              _decimals_ERC20Detailed[this] := 0;
[L4370]              _name_ERC20Detailed[this] := name_s795;
[L4371]              _symbol_ERC20Detailed[this] := symbol_s795;
[L4372]              _decimals_ERC20Detailed[this] := decimals_s795;
[L4393]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4394]  COND FALSE  !(revert)
[L4878]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4879]  COND FALSE  !(revert)
[L4882]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L4721]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4722]  COND FALSE  !(revert)
[L4725]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3555]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L3555]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  COND FALSE  !(revert)
[L3559]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3531]              assume msgsender_MSG != null;
[L3532]              Balance[this] := 0;
[L3533]              _balances_ERC20[this] := zeroRefintArr();
[L3534]              sum__balances0[this] := 0;
[L3535]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3536]              sum__allowed1[this] := 0;
[L3537]              _totalSupply_ERC20[this] := 0;
[L3559]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3560]  COND FALSE  !(revert)
[L4725]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4726]  COND FALSE  !(revert)
[L4729]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4698]              assume msgsender_MSG != null;
[L4699]              Balance[this] := 0;
[L4729]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4730]  COND FALSE  !(revert)
[L4882]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4883]  COND FALSE  !(revert)
[L4886]  CALL        call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4826]              assume msgsender_MSG != null;
[L4827]              Balance[this] := 0;
[L4828]              amount_KOCToken[this] := 10000000;
[L4830]              __var_27 := ConstantToRef(7544919301613266970804652377014389568456575767);
[L4831]  COND TRUE   DType[this] == KOCToken
[L4832]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4109]              __var_15 := null;
[L4110]  COND FALSE  !(!(account_s654 != null))
[L4114]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L3082]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3083]  COND TRUE   !(c_s106 >= a_s106)
[L3084]              revert := true;
[L4114]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L4115]  COND TRUE   revert
[L4832]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4833]  COND TRUE   revert
[L4886]  RET         call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4887]  COND FALSE  !(revert)
[L1969]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1970]              assume !revert && gas >= 0;
[L7805]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L7806]              assume !revert && gas >= 0;
[L7809]  CALL        call CorralChoice_KOCToken(this);
[L7654]              havoc msgsender_MSG;
[L7655]              havoc msgvalue_MSG;
[L7656]              havoc choice;
[L7657]              havoc to_s458;
[L7658]              havoc value_s458;
[L7659]              havoc __ret_0_transfer;
[L7660]              havoc spender_s477;
[L7661]              havoc value_s477;
[L7662]              havoc __ret_0_approve;
[L7663]              havoc from_s512;
[L7664]              havoc to_s512;
[L7665]              havoc value_s512;
[L7666]              havoc __ret_0_transferFrom;
[L7667]              havoc __ret_0_totalSupply;
[L7668]              havoc owner_s423;
[L7669]              havoc __ret_0_balanceOf;
[L7670]              havoc owner_s439;
[L7671]              havoc spender_s439;
[L7672]              havoc __ret_0_allowance;
[L7673]              havoc spender_s539;
[L7674]              havoc addedValue_s539;
[L7675]              havoc __ret_0_increaseAllowance;
[L7676]              havoc spender_s566;
[L7677]              havoc subtractedValue_s566;
[L7678]              havoc __ret_0_decreaseAllowance;
[L7679]              havoc name_s795;
[L7680]              havoc symbol_s795;
[L7681]              havoc decimals_s795;
[L7682]              havoc __ret_0_name;
[L7683]              havoc __ret_0_symbol;
[L7684]              havoc __ret_0_decimals;
[L7685]              havoc value_s912;
[L7686]              havoc from_s925;
[L7687]              havoc value_s925;
[L7688]              havoc tmpNow;
[L7689]              havoc gas;
[L7690]              assume gas > 4000000 && gas <= 8000000;
[L7691]              tmpNow := now;
[L7692]              havoc now;
[L7693]              assume now > tmpNow;
[L7694]              assume msgsender_MSG != null;
[L7695]              assume DType[msgsender_MSG] != SafeMath;
[L7696]              assume DType[msgsender_MSG] != Roles;
[L7697]              assume DType[msgsender_MSG] != MinterRole;
[L7698]              assume DType[msgsender_MSG] != IERC20;
[L7699]              assume DType[msgsender_MSG] != ERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7701]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7702]              assume DType[msgsender_MSG] != ERC20Capped;
[L7703]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7704]              assume DType[msgsender_MSG] != KOCToken;
[L7705]              Alloc[msgsender_MSG] := true;
[L7706]  COND FALSE  !(choice == 13)
[L7713]  COND FALSE  !(choice == 12)
[L7720]  COND FALSE  !(choice == 11)
[L7727]  COND FALSE  !(choice == 10)
[L7733]  COND FALSE  !(choice == 9)
[L7739]  COND TRUE   choice == 8
[L7740]              gas := gas - 21000;
[L7741]  COND TRUE   gas >= 0
[L7742]              assume msgvalue_MSG == 0;
[L7743]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_ERC20[this][owner_s439][spender_s439] >= 0 && _allowed_ERC20[this][owner_s439][spender_s439] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L798]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L3597]              __ret_0_ := _allowed_ERC20[this][owner_s439][spender_s439];
[L798]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L799]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _allowed_ERC20[this][owner_s439][spender_s439] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L7743]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L7809]  RET         call CorralChoice_KOCToken(this);

Loop:
[L7809]  CALL        call CorralChoice_KOCToken(this);
[L7654]              havoc msgsender_MSG;
[L7655]              havoc msgvalue_MSG;
[L7656]              havoc choice;
[L7657]              havoc to_s458;
[L7658]              havoc value_s458;
[L7659]              havoc __ret_0_transfer;
[L7660]              havoc spender_s477;
[L7661]              havoc value_s477;
[L7662]              havoc __ret_0_approve;
[L7663]              havoc from_s512;
[L7664]              havoc to_s512;
[L7665]              havoc value_s512;
[L7666]              havoc __ret_0_transferFrom;
[L7667]              havoc __ret_0_totalSupply;
[L7668]              havoc owner_s423;
[L7669]              havoc __ret_0_balanceOf;
[L7670]              havoc owner_s439;
[L7671]              havoc spender_s439;
[L7672]              havoc __ret_0_allowance;
[L7673]              havoc spender_s539;
[L7674]              havoc addedValue_s539;
[L7675]              havoc __ret_0_increaseAllowance;
[L7676]              havoc spender_s566;
[L7677]              havoc subtractedValue_s566;
[L7678]              havoc __ret_0_decreaseAllowance;
[L7679]              havoc name_s795;
[L7680]              havoc symbol_s795;
[L7681]              havoc decimals_s795;
[L7682]              havoc __ret_0_name;
[L7683]              havoc __ret_0_symbol;
[L7684]              havoc __ret_0_decimals;
[L7685]              havoc value_s912;
[L7686]              havoc from_s925;
[L7687]              havoc value_s925;
[L7688]              havoc tmpNow;
[L7689]              havoc gas;
[L7690]              assume gas > 4000000 && gas <= 8000000;
[L7691]              tmpNow := now;
[L7692]              havoc now;
[L7693]              assume now > tmpNow;
[L7694]              assume msgsender_MSG != null;
[L7695]              assume DType[msgsender_MSG] != SafeMath;
[L7696]              assume DType[msgsender_MSG] != Roles;
[L7697]              assume DType[msgsender_MSG] != MinterRole;
[L7698]              assume DType[msgsender_MSG] != IERC20;
[L7699]              assume DType[msgsender_MSG] != ERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7701]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7702]              assume DType[msgsender_MSG] != ERC20Capped;
[L7703]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7704]              assume DType[msgsender_MSG] != KOCToken;
[L7705]              Alloc[msgsender_MSG] := true;
[L7706]  COND FALSE  !(choice == 13)
[L7713]  COND FALSE  !(choice == 12)
[L7720]  COND FALSE  !(choice == 11)
[L7727]  COND FALSE  !(choice == 10)
[L7733]  COND FALSE  !(choice == 9)
[L7739]  COND TRUE   choice == 8
[L7740]              gas := gas - 21000;
[L7741]  COND TRUE   gas >= 0
[L7742]              assume msgvalue_MSG == 0;
[L7743]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_ERC20[this][owner_s439][spender_s439] >= 0 && _allowed_ERC20[this][owner_s439][spender_s439] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L798]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L3597]              __ret_0_ := _allowed_ERC20[this][owner_s439][spender_s439];
[L798]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L799]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _allowed_ERC20[this][owner_s439][spender_s439] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L7743]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L7809]  RET         call CorralChoice_KOCToken(this);

[2020-11-24 20:10:53,562 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:10:53,563 INFO  L82        PathProgramCache]: Analyzing trace with hash 1147598222, now seen corresponding path program 1 times
[2020-11-24 20:10:53,563 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:10:53,572 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:10:53,621 INFO  L134       CoverageAnalysis]: Checked inductivity of 119 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 119 trivial. 0 not checked.
[2020-11-24 20:10:53,621 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:10:53,621 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:10:53,622 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:10:53,622 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:10:53,622 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:10:53,622 INFO  L87              Difference]: Start difference. First operand 3390 states and 4236 transitions. cyclomatic complexity: 848 Second operand 3 states.
[2020-11-24 20:10:53,714 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:10:53,714 INFO  L93              Difference]: Finished difference Result 3892 states and 4604 transitions.
[2020-11-24 20:10:53,714 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:10:53,714 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3892 states and 4604 transitions.
[2020-11-24 20:10:53,727 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:10:53,741 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3892 states to 3555 states and 4174 transitions.
[2020-11-24 20:10:53,742 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 935
[2020-11-24 20:10:53,743 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 975
[2020-11-24 20:10:53,743 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3555 states and 4174 transitions.
[2020-11-24 20:10:53,747 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:10:53,747 INFO  L728         BuchiCegarLoop]: Abstraction has 3555 states and 4174 transitions.
[2020-11-24 20:10:53,750 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3555 states and 4174 transitions.
[2020-11-24 20:10:53,782 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3555 to 3266.
[2020-11-24 20:10:53,782 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3266 states.
[2020-11-24 20:10:53,787 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3266 states to 3266 states and 3815 transitions.
[2020-11-24 20:10:53,787 INFO  L751         BuchiCegarLoop]: Abstraction has 3266 states and 3815 transitions.
[2020-11-24 20:10:53,787 INFO  L631         BuchiCegarLoop]: Abstraction has 3266 states and 3815 transitions.
[2020-11-24 20:10:53,787 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 20:10:53,787 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3266 states and 3815 transitions.
[2020-11-24 20:10:53,793 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:10:53,793 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:10:53,793 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:10:53,795 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:10:53,795 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_ERC200 := false;
[L2]                 call_allowance_ERC200 := false;
[L2]     CALL        call main();
[L7799]              assume null == 0;
[L7800]  CALL        call this := FreshRefGenerator__success();
[L2939]              havoc newRef;
[L2940]              assume Alloc[newRef] == false;
[L2941]              Alloc[newRef] := true;
[L2942]              assume newRef != null;
[L7800]  RET         call this := FreshRefGenerator__success();
[L7801]              assume now >= 0;
[L7802]              assume DType[this] == KOCToken;
[L7803]              assume msgvalue_MSG == 0;
[L7804]              gas := gas - 53000;
[L7805]  CALL        call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L1940]              havoc __exception;
[L1941]              revert := false;
[L1942]  COND FALSE  !(__exception)
[L1969]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4870]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L4870]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  COND FALSE  !(revert)
[L4874]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3555]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L3555]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  COND FALSE  !(revert)
[L3559]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3531]              assume msgsender_MSG != null;
[L3532]              Balance[this] := 0;
[L3533]              _balances_ERC20[this] := zeroRefintArr();
[L3534]              sum__balances0[this] := 0;
[L3535]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3536]              sum__allowed1[this] := 0;
[L3537]              _totalSupply_ERC20[this] := 0;
[L3559]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3560]  COND FALSE  !(revert)
[L4874]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4875]  COND FALSE  !(revert)
[L4878]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4389]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L4389]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4390]  COND FALSE  !(revert)
[L4393]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4364]              assume msgsender_MSG != null;
[L4365]              Balance[this] := 0;
[L4366]              _name_ERC20Detailed[this] := 1767506099;
[L4367]              _symbol_ERC20Detailed[this] := 1767506099;
[L4368]              _decimals_ERC20Detailed[this] := 0;
[L4370]              _name_ERC20Detailed[this] := name_s795;
[L4371]              _symbol_ERC20Detailed[this] := symbol_s795;
[L4372]              _decimals_ERC20Detailed[this] := decimals_s795;
[L4393]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4394]  COND FALSE  !(revert)
[L4878]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4879]  COND FALSE  !(revert)
[L4882]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L4721]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4722]  COND FALSE  !(revert)
[L4725]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3555]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L3555]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  COND FALSE  !(revert)
[L3559]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3531]              assume msgsender_MSG != null;
[L3532]              Balance[this] := 0;
[L3533]              _balances_ERC20[this] := zeroRefintArr();
[L3534]              sum__balances0[this] := 0;
[L3535]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3536]              sum__allowed1[this] := 0;
[L3537]              _totalSupply_ERC20[this] := 0;
[L3559]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3560]  COND FALSE  !(revert)
[L4725]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4726]  COND FALSE  !(revert)
[L4729]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4698]              assume msgsender_MSG != null;
[L4699]              Balance[this] := 0;
[L4729]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4730]  COND FALSE  !(revert)
[L4882]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4883]  COND FALSE  !(revert)
[L4886]  CALL        call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4826]              assume msgsender_MSG != null;
[L4827]              Balance[this] := 0;
[L4828]              amount_KOCToken[this] := 10000000;
[L4830]              __var_27 := ConstantToRef(7544919301613266970804652377014389568456575767);
[L4831]  COND TRUE   DType[this] == KOCToken
[L4832]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4109]              __var_15 := null;
[L4110]  COND FALSE  !(!(account_s654 != null))
[L4114]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L3082]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3083]  COND FALSE  !(!(c_s106 >= a_s106))
[L3087]              __ret_0_ := c_s106;
[L4114]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L4115]  COND FALSE  !(revert)
[L4118]              _totalSupply_ERC20[this] := __var_16;
[L4119]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], value_s654);
[L3082]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3083]  COND FALSE  !(!(c_s106 >= a_s106))
[L3087]              __ret_0_ := c_s106;
[L4119]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], value_s654);
[L4120]  COND FALSE  !(revert)
[L4123]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s654];
[L4124]              _balances_ERC20[this][account_s654] := __var_17;
[L4125]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s654];
[L4126]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4832]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4833]  COND FALSE  !(revert)
[L4839]              assert { :EventEmitted "CreateTokenSuccess_KOCToken" } true;
[L4886]  RET         call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4887]  COND FALSE  !(revert)
[L1969]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1970]              assume !revert && gas >= 0;
[L7805]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L7806]              assume !revert && gas >= 0;
[L7809]  CALL        call CorralChoice_KOCToken(this);
[L7654]              havoc msgsender_MSG;
[L7655]              havoc msgvalue_MSG;
[L7656]              havoc choice;
[L7657]              havoc to_s458;
[L7658]              havoc value_s458;
[L7659]              havoc __ret_0_transfer;
[L7660]              havoc spender_s477;
[L7661]              havoc value_s477;
[L7662]              havoc __ret_0_approve;
[L7663]              havoc from_s512;
[L7664]              havoc to_s512;
[L7665]              havoc value_s512;
[L7666]              havoc __ret_0_transferFrom;
[L7667]              havoc __ret_0_totalSupply;
[L7668]              havoc owner_s423;
[L7669]              havoc __ret_0_balanceOf;
[L7670]              havoc owner_s439;
[L7671]              havoc spender_s439;
[L7672]              havoc __ret_0_allowance;
[L7673]              havoc spender_s539;
[L7674]              havoc addedValue_s539;
[L7675]              havoc __ret_0_increaseAllowance;
[L7676]              havoc spender_s566;
[L7677]              havoc subtractedValue_s566;
[L7678]              havoc __ret_0_decreaseAllowance;
[L7679]              havoc name_s795;
[L7680]              havoc symbol_s795;
[L7681]              havoc decimals_s795;
[L7682]              havoc __ret_0_name;
[L7683]              havoc __ret_0_symbol;
[L7684]              havoc __ret_0_decimals;
[L7685]              havoc value_s912;
[L7686]              havoc from_s925;
[L7687]              havoc value_s925;
[L7688]              havoc tmpNow;
[L7689]              havoc gas;
[L7690]              assume gas > 4000000 && gas <= 8000000;
[L7691]              tmpNow := now;
[L7692]              havoc now;
[L7693]              assume now > tmpNow;
[L7694]              assume msgsender_MSG != null;
[L7695]              assume DType[msgsender_MSG] != SafeMath;
[L7696]              assume DType[msgsender_MSG] != Roles;
[L7697]              assume DType[msgsender_MSG] != MinterRole;
[L7698]              assume DType[msgsender_MSG] != IERC20;
[L7699]              assume DType[msgsender_MSG] != ERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7701]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7702]              assume DType[msgsender_MSG] != ERC20Capped;
[L7703]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7704]              assume DType[msgsender_MSG] != KOCToken;
[L7705]              Alloc[msgsender_MSG] := true;
[L7706]  COND FALSE  !(choice == 13)
[L7713]  COND FALSE  !(choice == 12)
[L7720]  COND FALSE  !(choice == 11)
[L7727]  COND FALSE  !(choice == 10)
[L7733]  COND FALSE  !(choice == 9)
[L7739]  COND TRUE   choice == 8
[L7740]              gas := gas - 21000;
[L7741]  COND TRUE   gas >= 0
[L7742]              assume msgvalue_MSG == 0;
[L7743]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_ERC20[this][owner_s439][spender_s439] >= 0 && _allowed_ERC20[this][owner_s439][spender_s439] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L798]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L3597]              __ret_0_ := _allowed_ERC20[this][owner_s439][spender_s439];
[L798]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L799]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _allowed_ERC20[this][owner_s439][spender_s439] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L7743]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L7809]  RET         call CorralChoice_KOCToken(this);

Loop:
[L7809]  CALL        call CorralChoice_KOCToken(this);
[L7654]              havoc msgsender_MSG;
[L7655]              havoc msgvalue_MSG;
[L7656]              havoc choice;
[L7657]              havoc to_s458;
[L7658]              havoc value_s458;
[L7659]              havoc __ret_0_transfer;
[L7660]              havoc spender_s477;
[L7661]              havoc value_s477;
[L7662]              havoc __ret_0_approve;
[L7663]              havoc from_s512;
[L7664]              havoc to_s512;
[L7665]              havoc value_s512;
[L7666]              havoc __ret_0_transferFrom;
[L7667]              havoc __ret_0_totalSupply;
[L7668]              havoc owner_s423;
[L7669]              havoc __ret_0_balanceOf;
[L7670]              havoc owner_s439;
[L7671]              havoc spender_s439;
[L7672]              havoc __ret_0_allowance;
[L7673]              havoc spender_s539;
[L7674]              havoc addedValue_s539;
[L7675]              havoc __ret_0_increaseAllowance;
[L7676]              havoc spender_s566;
[L7677]              havoc subtractedValue_s566;
[L7678]              havoc __ret_0_decreaseAllowance;
[L7679]              havoc name_s795;
[L7680]              havoc symbol_s795;
[L7681]              havoc decimals_s795;
[L7682]              havoc __ret_0_name;
[L7683]              havoc __ret_0_symbol;
[L7684]              havoc __ret_0_decimals;
[L7685]              havoc value_s912;
[L7686]              havoc from_s925;
[L7687]              havoc value_s925;
[L7688]              havoc tmpNow;
[L7689]              havoc gas;
[L7690]              assume gas > 4000000 && gas <= 8000000;
[L7691]              tmpNow := now;
[L7692]              havoc now;
[L7693]              assume now > tmpNow;
[L7694]              assume msgsender_MSG != null;
[L7695]              assume DType[msgsender_MSG] != SafeMath;
[L7696]              assume DType[msgsender_MSG] != Roles;
[L7697]              assume DType[msgsender_MSG] != MinterRole;
[L7698]              assume DType[msgsender_MSG] != IERC20;
[L7699]              assume DType[msgsender_MSG] != ERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7701]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7702]              assume DType[msgsender_MSG] != ERC20Capped;
[L7703]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7704]              assume DType[msgsender_MSG] != KOCToken;
[L7705]              Alloc[msgsender_MSG] := true;
[L7706]  COND FALSE  !(choice == 13)
[L7713]  COND FALSE  !(choice == 12)
[L7720]  COND FALSE  !(choice == 11)
[L7727]  COND FALSE  !(choice == 10)
[L7733]  COND FALSE  !(choice == 9)
[L7739]  COND TRUE   choice == 8
[L7740]              gas := gas - 21000;
[L7741]  COND TRUE   gas >= 0
[L7742]              assume msgvalue_MSG == 0;
[L7743]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_ERC20[this][owner_s439][spender_s439] >= 0 && _allowed_ERC20[this][owner_s439][spender_s439] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L798]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L3597]              __ret_0_ := _allowed_ERC20[this][owner_s439][spender_s439];
[L798]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L799]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == _allowed_ERC20[this][owner_s439][spender_s439] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L7743]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L7809]  RET         call CorralChoice_KOCToken(this);

[2020-11-24 20:10:53,798 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:10:53,798 INFO  L82        PathProgramCache]: Analyzing trace with hash 1796453250, now seen corresponding path program 1 times
[2020-11-24 20:10:53,799 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:10:53,813 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:10:53,889 INFO  L134       CoverageAnalysis]: Checked inductivity of 124 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 124 trivial. 0 not checked.
[2020-11-24 20:10:53,889 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:10:53,889 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:10:53,889 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:10:53,889 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:10:53,889 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:10:53,890 INFO  L87              Difference]: Start difference. First operand 3266 states and 3815 transitions. cyclomatic complexity: 551 Second operand 4 states.
[2020-11-24 20:10:53,930 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:10:53,931 INFO  L93              Difference]: Finished difference Result 3267 states and 3814 transitions.
[2020-11-24 20:10:53,931 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:10:53,931 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3267 states and 3814 transitions.
[2020-11-24 20:10:53,937 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:10:53,944 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3267 states to 3257 states and 3804 transitions.
[2020-11-24 20:10:53,944 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 928
[2020-11-24 20:10:53,945 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 928
[2020-11-24 20:10:53,945 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3257 states and 3804 transitions.
[2020-11-24 20:10:53,948 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:10:53,948 INFO  L728         BuchiCegarLoop]: Abstraction has 3257 states and 3804 transitions.
[2020-11-24 20:10:53,950 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3257 states and 3804 transitions.
[2020-11-24 20:10:53,967 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3257 to 3255.
[2020-11-24 20:10:53,968 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3255 states.
[2020-11-24 20:10:53,970 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3255 states to 3255 states and 3802 transitions.
[2020-11-24 20:10:53,971 INFO  L751         BuchiCegarLoop]: Abstraction has 3255 states and 3802 transitions.
[2020-11-24 20:10:53,971 INFO  L631         BuchiCegarLoop]: Abstraction has 3255 states and 3802 transitions.
[2020-11-24 20:10:53,971 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 20:10:53,971 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3255 states and 3802 transitions.
[2020-11-24 20:10:53,974 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:10:53,975 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:10:53,975 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:10:53,976 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:10:53,976 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_ERC200 := false;
[L2]                 call_allowance_ERC200 := false;
[L2]     CALL        call main();
[L7799]              assume null == 0;
[L7800]  CALL        call this := FreshRefGenerator__success();
[L2939]              havoc newRef;
[L2940]              assume Alloc[newRef] == false;
[L2941]              Alloc[newRef] := true;
[L2942]              assume newRef != null;
[L7800]  RET         call this := FreshRefGenerator__success();
[L7801]              assume now >= 0;
[L7802]              assume DType[this] == KOCToken;
[L7803]              assume msgvalue_MSG == 0;
[L7804]              gas := gas - 53000;
[L7805]  CALL        call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L1940]              havoc __exception;
[L1941]              revert := false;
[L1942]  COND FALSE  !(__exception)
[L1969]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4870]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L4870]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  COND FALSE  !(revert)
[L4874]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3555]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L3555]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  COND FALSE  !(revert)
[L3559]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3531]              assume msgsender_MSG != null;
[L3532]              Balance[this] := 0;
[L3533]              _balances_ERC20[this] := zeroRefintArr();
[L3534]              sum__balances0[this] := 0;
[L3535]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3536]              sum__allowed1[this] := 0;
[L3537]              _totalSupply_ERC20[this] := 0;
[L3559]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3560]  COND FALSE  !(revert)
[L4874]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4875]  COND FALSE  !(revert)
[L4878]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4389]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L4389]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4390]  COND FALSE  !(revert)
[L4393]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4364]              assume msgsender_MSG != null;
[L4365]              Balance[this] := 0;
[L4366]              _name_ERC20Detailed[this] := 1767506099;
[L4367]              _symbol_ERC20Detailed[this] := 1767506099;
[L4368]              _decimals_ERC20Detailed[this] := 0;
[L4370]              _name_ERC20Detailed[this] := name_s795;
[L4371]              _symbol_ERC20Detailed[this] := symbol_s795;
[L4372]              _decimals_ERC20Detailed[this] := decimals_s795;
[L4393]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4394]  COND FALSE  !(revert)
[L4878]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4879]  COND FALSE  !(revert)
[L4882]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L4721]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4722]  COND FALSE  !(revert)
[L4725]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3555]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3509]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3494]              assume msgsender_MSG != null;
[L3495]              Balance[this] := 0;
[L3509]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  COND FALSE  !(revert)
[L3555]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  COND FALSE  !(revert)
[L3559]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3531]              assume msgsender_MSG != null;
[L3532]              Balance[this] := 0;
[L3533]              _balances_ERC20[this] := zeroRefintArr();
[L3534]              sum__balances0[this] := 0;
[L3535]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3536]              sum__allowed1[this] := 0;
[L3537]              _totalSupply_ERC20[this] := 0;
[L3559]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3560]  COND FALSE  !(revert)
[L4725]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4726]  COND FALSE  !(revert)
[L4729]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4698]              assume msgsender_MSG != null;
[L4699]              Balance[this] := 0;
[L4729]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4730]  COND FALSE  !(revert)
[L4882]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4883]  COND FALSE  !(revert)
[L4886]  CALL        call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4826]              assume msgsender_MSG != null;
[L4827]              Balance[this] := 0;
[L4828]              amount_KOCToken[this] := 10000000;
[L4830]              __var_27 := ConstantToRef(7544919301613266970804652377014389568456575767);
[L4831]  COND TRUE   DType[this] == KOCToken
[L4832]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4109]              __var_15 := null;
[L4110]  COND FALSE  !(!(account_s654 != null))
[L4114]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L3082]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3083]  COND FALSE  !(!(c_s106 >= a_s106))
[L3087]              __ret_0_ := c_s106;
[L4114]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L4115]  COND FALSE  !(revert)
[L4118]              _totalSupply_ERC20[this] := __var_16;
[L4119]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], value_s654);
[L3082]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3083]  COND FALSE  !(!(c_s106 >= a_s106))
[L3087]              __ret_0_ := c_s106;
[L4119]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], value_s654);
[L4120]  COND FALSE  !(revert)
[L4123]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s654];
[L4124]              _balances_ERC20[this][account_s654] := __var_17;
[L4125]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s654];
[L4126]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4832]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4833]  COND FALSE  !(revert)
[L4839]              assert { :EventEmitted "CreateTokenSuccess_KOCToken" } true;
[L4886]  RET         call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4887]  COND FALSE  !(revert)
[L1969]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1970]              assume !revert && gas >= 0;
[L7805]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L7806]              assume !revert && gas >= 0;
[L7809]  CALL        call CorralChoice_KOCToken(this);
[L7654]              havoc msgsender_MSG;
[L7655]              havoc msgvalue_MSG;
[L7656]              havoc choice;
[L7657]              havoc to_s458;
[L7658]              havoc value_s458;
[L7659]              havoc __ret_0_transfer;
[L7660]              havoc spender_s477;
[L7661]              havoc value_s477;
[L7662]              havoc __ret_0_approve;
[L7663]              havoc from_s512;
[L7664]              havoc to_s512;
[L7665]              havoc value_s512;
[L7666]              havoc __ret_0_transferFrom;
[L7667]              havoc __ret_0_totalSupply;
[L7668]              havoc owner_s423;
[L7669]              havoc __ret_0_balanceOf;
[L7670]              havoc owner_s439;
[L7671]              havoc spender_s439;
[L7672]              havoc __ret_0_allowance;
[L7673]              havoc spender_s539;
[L7674]              havoc addedValue_s539;
[L7675]              havoc __ret_0_increaseAllowance;
[L7676]              havoc spender_s566;
[L7677]              havoc subtractedValue_s566;
[L7678]              havoc __ret_0_decreaseAllowance;
[L7679]              havoc name_s795;
[L7680]              havoc symbol_s795;
[L7681]              havoc decimals_s795;
[L7682]              havoc __ret_0_name;
[L7683]              havoc __ret_0_symbol;
[L7684]              havoc __ret_0_decimals;
[L7685]              havoc value_s912;
[L7686]              havoc from_s925;
[L7687]              havoc value_s925;
[L7688]              havoc tmpNow;
[L7689]              havoc gas;
[L7690]              assume gas > 4000000 && gas <= 8000000;
[L7691]              tmpNow := now;
[L7692]              havoc now;
[L7693]              assume now > tmpNow;
[L7694]              assume msgsender_MSG != null;
[L7695]              assume DType[msgsender_MSG] != SafeMath;
[L7696]              assume DType[msgsender_MSG] != Roles;
[L7697]              assume DType[msgsender_MSG] != MinterRole;
[L7698]              assume DType[msgsender_MSG] != IERC20;
[L7699]              assume DType[msgsender_MSG] != ERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7701]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7702]              assume DType[msgsender_MSG] != ERC20Capped;
[L7703]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7704]              assume DType[msgsender_MSG] != KOCToken;
[L7705]              Alloc[msgsender_MSG] := true;
[L7706]  COND FALSE  !(choice == 13)
[L7713]  COND FALSE  !(choice == 12)
[L7720]  COND FALSE  !(choice == 11)
[L7727]  COND FALSE  !(choice == 10)
[L7733]  COND FALSE  !(choice == 9)
[L7739]  COND TRUE   choice == 8
[L7740]              gas := gas - 21000;
[L7741]  COND TRUE   gas >= 0
[L7742]              assume msgvalue_MSG == 0;
[L7743]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_ERC20[this][owner_s439][spender_s439] >= 0 && _allowed_ERC20[this][owner_s439][spender_s439] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND TRUE   __exception
[L772]               __tmp__Balance := Balance;
[L773]               __tmp__DType := DType;
[L774]               __tmp__Alloc := Alloc;
[L775]               __tmp__balance_ADDR := balance_ADDR;
[L776]               __tmp__M_Ref_bool := M_Ref_bool;
[L777]               __tmp__sum := sum;
[L778]               __tmp__M_Ref_int := M_Ref_int;
[L779]               __tmp__sum__balances0 := sum__balances0;
[L780]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L781]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L782]               __tmp__sum__allowed1 := sum__allowed1;
[L783]               __tmp__Length := Length;
[L784]               __tmp__now := now;
[L785]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L786]               __tmp___minters_MinterRole := _minters_MinterRole;
[L787]               __tmp___balances_ERC20 := _balances_ERC20;
[L788]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L789]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L790]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L791]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L792]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L793]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L794]               __tmp__amount_KOCToken := amount_KOCToken;
[L795]   CALL        call __ret_0_ := allowance~address~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L3591]              __ret_0_ := __tmp___allowed_ERC20[this][owner_s439][spender_s439];
[L795]   RET         call __ret_0_ := allowance~address~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L796]               assume revert || gas < 0;
[L7743]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L7809]  RET         call CorralChoice_KOCToken(this);

Loop:
[L7809]  CALL        call CorralChoice_KOCToken(this);
[L7654]              havoc msgsender_MSG;
[L7655]              havoc msgvalue_MSG;
[L7656]              havoc choice;
[L7657]              havoc to_s458;
[L7658]              havoc value_s458;
[L7659]              havoc __ret_0_transfer;
[L7660]              havoc spender_s477;
[L7661]              havoc value_s477;
[L7662]              havoc __ret_0_approve;
[L7663]              havoc from_s512;
[L7664]              havoc to_s512;
[L7665]              havoc value_s512;
[L7666]              havoc __ret_0_transferFrom;
[L7667]              havoc __ret_0_totalSupply;
[L7668]              havoc owner_s423;
[L7669]              havoc __ret_0_balanceOf;
[L7670]              havoc owner_s439;
[L7671]              havoc spender_s439;
[L7672]              havoc __ret_0_allowance;
[L7673]              havoc spender_s539;
[L7674]              havoc addedValue_s539;
[L7675]              havoc __ret_0_increaseAllowance;
[L7676]              havoc spender_s566;
[L7677]              havoc subtractedValue_s566;
[L7678]              havoc __ret_0_decreaseAllowance;
[L7679]              havoc name_s795;
[L7680]              havoc symbol_s795;
[L7681]              havoc decimals_s795;
[L7682]              havoc __ret_0_name;
[L7683]              havoc __ret_0_symbol;
[L7684]              havoc __ret_0_decimals;
[L7685]              havoc value_s912;
[L7686]              havoc from_s925;
[L7687]              havoc value_s925;
[L7688]              havoc tmpNow;
[L7689]              havoc gas;
[L7690]              assume gas > 4000000 && gas <= 8000000;
[L7691]              tmpNow := now;
[L7692]              havoc now;
[L7693]              assume now > tmpNow;
[L7694]              assume msgsender_MSG != null;
[L7695]              assume DType[msgsender_MSG] != SafeMath;
[L7696]              assume DType[msgsender_MSG] != Roles;
[L7697]              assume DType[msgsender_MSG] != MinterRole;
[L7698]              assume DType[msgsender_MSG] != IERC20;
[L7699]              assume DType[msgsender_MSG] != ERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7701]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7702]              assume DType[msgsender_MSG] != ERC20Capped;
[L7703]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7704]              assume DType[msgsender_MSG] != KOCToken;
[L7705]              Alloc[msgsender_MSG] := true;
[L7706]  COND FALSE  !(choice == 13)
[L7713]  COND FALSE  !(choice == 12)
[L7720]  COND FALSE  !(choice == 11)
[L7727]  COND FALSE  !(choice == 10)
[L7733]  COND FALSE  !(choice == 9)
[L7739]  COND TRUE   choice == 8
[L7740]              gas := gas - 21000;
[L7741]  COND TRUE   gas >= 0
[L7742]              assume msgvalue_MSG == 0;
[L7743]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowed_ERC20[this][owner_s439][spender_s439] >= 0 && _allowed_ERC20[this][owner_s439][spender_s439] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND TRUE   __exception
[L772]               __tmp__Balance := Balance;
[L773]               __tmp__DType := DType;
[L774]               __tmp__Alloc := Alloc;
[L775]               __tmp__balance_ADDR := balance_ADDR;
[L776]               __tmp__M_Ref_bool := M_Ref_bool;
[L777]               __tmp__sum := sum;
[L778]               __tmp__M_Ref_int := M_Ref_int;
[L779]               __tmp__sum__balances0 := sum__balances0;
[L780]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L781]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L782]               __tmp__sum__allowed1 := sum__allowed1;
[L783]               __tmp__Length := Length;
[L784]               __tmp__now := now;
[L785]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L786]               __tmp___minters_MinterRole := _minters_MinterRole;
[L787]               __tmp___balances_ERC20 := _balances_ERC20;
[L788]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L789]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L790]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L791]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L792]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L793]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L794]               __tmp__amount_KOCToken := amount_KOCToken;
[L795]   CALL        call __ret_0_ := allowance~address~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L3591]              __ret_0_ := __tmp___allowed_ERC20[this][owner_s439][spender_s439];
[L795]   RET         call __ret_0_ := allowance~address~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L796]               assume revert || gas < 0;
[L7743]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s439, spender_s439);
[L7809]  RET         call CorralChoice_KOCToken(this);

[2020-11-24 20:10:53,980 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:10:53,980 INFO  L82        PathProgramCache]: Analyzing trace with hash -470218640, now seen corresponding path program 1 times
[2020-11-24 20:10:53,980 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:10:53,990 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:10:54,028 INFO  L134       CoverageAnalysis]: Checked inductivity of 124 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 124 trivial. 0 not checked.
[2020-11-24 20:10:54,028 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:10:54,028 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 20:10:54,029 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:10:54,029 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 20:10:54,029 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 20:10:54,029 INFO  L87              Difference]: Start difference. First operand 3255 states and 3802 transitions. cyclomatic complexity: 549 Second operand 5 states.
[2020-11-24 20:10:54,272 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:10:54,272 INFO  L93              Difference]: Finished difference Result 2058 states and 2361 transitions.
[2020-11-24 20:10:54,273 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 20:10:54,273 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2058 states and 2361 transitions.
[2020-11-24 20:10:54,277 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 20:10:54,277 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2058 states to 0 states and 0 transitions.
[2020-11-24 20:10:54,277 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 20:10:54,277 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 20:10:54,277 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 20:10:54,277 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:10:54,277 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:10:54,277 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:10:54,278 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:10:54,278 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 20:10:54,278 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 20:10:54,278 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 20:10:54,278 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 20:10:54,281 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:10:54 BasicIcfg
[2020-11-24 20:10:54,281 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 20:10:54,281 INFO  L168              Benchmark]: Toolchain (without parser) took 6221.83 ms. Allocated memory was 1.0 GB in the beginning and 1.7 GB in the end (delta: 667.4 MB). Free memory was 929.8 MB in the beginning and 1.1 GB in the end (delta: -192.0 MB). Peak memory consumption was 475.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:10:54,282 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:10:54,282 INFO  L168              Benchmark]: Boogie Preprocessor took 128.51 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-24 20:10:54,282 INFO  L168              Benchmark]: UtopiaSpecLang took 71.51 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 903.0 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:10:54,283 INFO  L168              Benchmark]: Boogie Printer took 21.92 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 897.5 MB in the end (delta: 5.5 MB). Peak memory consumption was 5.5 MB. Max. memory is 15.3 GB.
[2020-11-24 20:10:54,283 INFO  L168              Benchmark]: RCFGBuilder took 1247.65 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 74.4 MB). Free memory was 897.5 MB in the beginning and 944.9 MB in the end (delta: -47.4 MB). Peak memory consumption was 185.2 MB. Max. memory is 15.3 GB.
[2020-11-24 20:10:54,283 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.94 ms. Allocated memory is still 1.1 GB. Free memory was 944.9 MB in the beginning and 941.4 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 20:10:54,284 INFO  L168              Benchmark]: BÃ¼chi Program Product took 2182.82 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 149.9 MB). Free memory was 941.4 MB in the beginning and 621.8 MB in the end (delta: 319.6 MB). Peak memory consumption was 498.9 MB. Max. memory is 15.3 GB.
[2020-11-24 20:10:54,284 INFO  L168              Benchmark]: BlockEncodingV2 took 245.03 ms. Allocated memory was 1.3 GB in the beginning and 1.3 GB in the end (delta: 29.4 MB). Free memory was 621.8 MB in the beginning and 1.0 GB in the end (delta: -410.7 MB). Peak memory consumption was 29.5 MB. Max. memory is 15.3 GB.
[2020-11-24 20:10:54,284 INFO  L168              Benchmark]: BuchiAutomizer took 2280.44 ms. Allocated memory was 1.3 GB in the beginning and 1.7 GB in the end (delta: 413.7 MB). Free memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: -89.4 MB). Peak memory consumption was 324.3 MB. Max. memory is 15.3 GB.
[2020-11-24 20:10:54,287 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    7214 locations, 13510 edges
  - StatisticsResult: Encoded RCFG
    7084 locations, 13155 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 128.51 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 71.51 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 903.0 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 21.92 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 897.5 MB in the end (delta: 5.5 MB). Peak memory consumption was 5.5 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1247.65 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 74.4 MB). Free memory was 897.5 MB in the beginning and 944.9 MB in the end (delta: -47.4 MB). Peak memory consumption was 185.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.94 ms. Allocated memory is still 1.1 GB. Free memory was 944.9 MB in the beginning and 941.4 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 2182.82 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 149.9 MB). Free memory was 941.4 MB in the beginning and 621.8 MB in the end (delta: 319.6 MB). Peak memory consumption was 498.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 245.03 ms. Allocated memory was 1.3 GB in the beginning and 1.3 GB in the end (delta: 29.4 MB). Free memory was 621.8 MB in the beginning and 1.0 GB in the end (delta: -410.7 MB). Peak memory consumption was 29.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2280.44 ms. Allocated memory was 1.3 GB in the beginning and 1.7 GB in the end (delta: 413.7 MB). Free memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: -89.4 MB). Peak memory consumption was 324.3 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2791 locations, 4111 edges
  - StatisticsResult: BuchiProgram size
    7214 locations, 13510 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.2s and 7 iterations.  TraceHistogramMax:5. Analysis of lassos took 0.6s. Construction of modules took 0.6s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 5 MinimizatonAttempts, 799 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3391 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 20500 SDtfs, 14456 SDslu, 22942 SDs, 0 SdLazy, 2930 SolverSat, 2845 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.6s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_allowance_ERC200) ==> ( <>(success_allowance_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
