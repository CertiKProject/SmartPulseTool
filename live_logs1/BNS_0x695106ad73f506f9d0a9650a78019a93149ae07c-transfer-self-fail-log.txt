This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 01:14:21,539 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 01:14:21,540 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 01:14:21,547 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 01:14:21,548 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 01:14:21,548 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 01:14:21,549 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 01:14:21,550 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 01:14:21,551 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 01:14:21,551 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 01:14:21,552 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 01:14:21,552 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 01:14:21,552 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 01:14:21,553 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 01:14:21,554 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 01:14:21,554 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 01:14:21,555 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 01:14:21,556 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 01:14:21,557 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 01:14:21,558 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 01:14:21,559 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 01:14:21,560 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 01:14:21,562 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 01:14:21,562 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 01:14:21,562 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 01:14:21,563 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 01:14:21,563 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 01:14:21,564 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 01:14:21,564 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 01:14:21,564 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 01:14:21,564 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 01:14:21,564 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 01:14:21,565 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 01:14:21,565 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 01:14:21,566 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 01:14:21,566 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 01:14:21,566 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 01:14:21,566 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 01:14:21,566 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 01:14:21,567 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 01:14:21,567 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 01:14:21,567 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 01:14:21,573 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 01:14:21,573 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 01:14:21,573 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 01:14:21,573 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 01:14:21,574 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 01:14:21,574 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 01:14:21,574 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 01:14:21,574 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 01:14:21,574 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 01:14:21,574 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 01:14:21,574 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 01:14:21,574 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 01:14:21,574 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 01:14:21,574 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 01:14:21,574 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 01:14:21,574 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 01:14:21,574 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 01:14:21,575 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 01:14:21,575 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 01:14:21,575 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 01:14:21,575 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 01:14:21,575 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 01:14:21,575 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 01:14:21,575 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 01:14:21,575 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 01:14:21,575 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 01:14:21,592 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 01:14:21,604 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 01:14:21,607 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 01:14:21,608 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 01:14:21,608 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 01:14:21,609 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl
[2020-11-25 01:14:21,609 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl'
[2020-11-25 01:14:21,696 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 01:14:21,699 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 01:14:21,700 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 01:14:21,700 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 01:14:21,700 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 01:14:21,711 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:21" (1/1) ...
[2020-11-25 01:14:21,712 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:21" (1/1) ...
[2020-11-25 01:14:21,739 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:21" (1/1) ...
[2020-11-25 01:14:21,739 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:21" (1/1) ...
[2020-11-25 01:14:21,758 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:21" (1/1) ...
[2020-11-25 01:14:21,767 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:21" (1/1) ...
[2020-11-25 01:14:21,772 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:21" (1/1) ...
[2020-11-25 01:14:21,781 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 01:14:21,782 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 01:14:21,782 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 01:14:21,784 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 01:14:21,788 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:21" (1/1) ...
[2020-11-25 01:14:21,806 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), msg.sender == to && value > _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 01:14:21,812 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), msg.sender == to && value > _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 01:14:21,819 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), msg.sender == to && value > _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 01:14:21,825 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==to_s268 && value_s268>_balances_ERC20[this][msg.sender] ) && value_s268>=0 ) && value_s268<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s268]>=0 ) && _balances_ERC20[this][to_s268]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[to_s268,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[COMPGT,IdentifierExpression[value_s268,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s268,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s268,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s268,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s268,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 01:14:21,831 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), msg.sender == to && value > _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 01:14:21,831 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(fail_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 01:14:21,839 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:14:21 PropertyContainer
[2020-11-25 01:14:21,840 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 01:14:21,840 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 01:14:21,840 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 01:14:21,840 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 01:14:21,841 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:21" (1/2) ...
[2020-11-25 01:14:21,841 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 01:14:21,841 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 01:14:21,856 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:14:21" (2/2) ...
[2020-11-25 01:14:21,856 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 01:14:21,856 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 01:14:21,856 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 01:14:21,856 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 01:14:21,857 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:21" (1/2) ...
[2020-11-25 01:14:21,906 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 01:14:21,907 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 01:14:21,907 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 01:14:21,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 01:14:21,907 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 01:14:21,907 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 01:14:21,907 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 01:14:21,907 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 01:14:21,907 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 01:14:21,907 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 01:14:21,907 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:14:21,908 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 01:14:21,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 01:14:21,908 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 01:14:21,908 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 01:14:21,908 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 01:14:21,908 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 01:14:21,908 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 01:14:21,908 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 01:14:21,908 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 01:14:21,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 01:14:21,909 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 01:14:21,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 01:14:21,909 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 01:14:21,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 01:14:21,909 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 01:14:21,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 01:14:21,909 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 01:14:21,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 01:14:21,909 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 01:14:21,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 01:14:21,909 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 01:14:21,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 01:14:21,909 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 01:14:21,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 01:14:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 01:14:21,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 01:14:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 01:14:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 01:14:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 01:14:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 01:14:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 01:14:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 01:14:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 01:14:21,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 01:14:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 01:14:21,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 01:14:21,911 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 01:14:21,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 01:14:21,911 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 01:14:21,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 01:14:21,911 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-25 01:14:21,911 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable
[2020-11-25 01:14:21,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable
[2020-11-25 01:14:21,911 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable
[2020-11-25 01:14:21,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable
[2020-11-25 01:14:21,911 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-25 01:14:21,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-25 01:14:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS_NoBaseCtor__success
[2020-11-25 01:14:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS
[2020-11-25 01:14:21,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS
[2020-11-25 01:14:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 01:14:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 01:14:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 01:14:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 01:14:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 01:14:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 01:14:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 01:14:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 01:14:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 01:14:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 01:14:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 01:14:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-25 01:14:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-25 01:14:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BNS
[2020-11-25 01:14:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 01:14:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 01:14:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 01:14:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 01:14:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 01:14:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:14:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 01:14:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 01:14:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:21,915 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 01:14:21,915 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 01:14:21,915 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 01:14:21,915 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 01:14:21,915 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 01:14:21,915 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 01:14:21,915 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 01:14:21,915 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 01:14:21,915 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 01:14:21,915 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 01:14:21,916 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 01:14:21,916 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 01:14:21,916 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 01:14:21,916 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 01:14:21,916 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 01:14:21,916 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:14:21,916 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:14:21,916 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:14:21,916 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:14:21,916 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 01:14:21,916 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 01:14:21,917 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 01:14:21,917 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 01:14:21,917 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 01:14:21,917 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 01:14:21,917 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 01:14:21,917 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 01:14:21,917 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 01:14:21,917 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 01:14:21,917 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 01:14:21,918 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 01:14:21,918 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 01:14:21,918 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 01:14:21,918 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-25 01:14:21,918 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-25 01:14:21,918 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-25 01:14:21,918 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__success
[2020-11-25 01:14:21,918 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__fail
[2020-11-25 01:14:21,918 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-25 01:14:21,918 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-25 01:14:21,918 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS_NoBaseCtor__fail
[2020-11-25 01:14:21,919 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS__success
[2020-11-25 01:14:21,919 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS__fail
[2020-11-25 01:14:21,919 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 01:14:21,919 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 01:14:21,919 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 01:14:21,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 01:14:21,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 01:14:21,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 01:14:21,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 01:14:21,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 01:14:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 01:14:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:14:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:14:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 01:14:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 01:14:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 01:14:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 01:14:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 01:14:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 01:14:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 01:14:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 01:14:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 01:14:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 01:14:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 01:14:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 01:14:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 01:14:21,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 01:14:21,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 01:14:21,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 01:14:21,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 01:14:21,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 01:14:21,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 01:14:21,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 01:14:21,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 01:14:21,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 01:14:21,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 01:14:21,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:14:21,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:14:21,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:14:21,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:14:21,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 01:14:21,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 01:14:21,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 01:14:21,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 01:14:21,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 01:14:21,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 01:14:21,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 01:14:21,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 01:14:21,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 01:14:21,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 01:14:21,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 01:14:21,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 01:14:21,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 01:14:21,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 01:14:21,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 01:14:21,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 01:14:21,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 01:14:21,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 01:14:21,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 01:14:21,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 01:14:21,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-25 01:14:21,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-25 01:14:21,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-25 01:14:21,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-25 01:14:21,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__fail
[2020-11-25 01:14:21,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__success
[2020-11-25 01:14:21,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-25 01:14:21,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-25 01:14:21,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS_NoBaseCtor__fail
[2020-11-25 01:14:21,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS_NoBaseCtor__success
[2020-11-25 01:14:21,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS__fail
[2020-11-25 01:14:21,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS__success
[2020-11-25 01:14:21,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 01:14:21,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 01:14:21,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 01:14:21,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 01:14:21,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 01:14:21,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 01:14:21,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 01:14:21,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 01:14:21,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 01:14:21,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 01:14:21,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 01:14:21,926 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 01:14:21,927 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 01:14:21,927 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 01:14:21,927 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-25 01:14:21,927 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-25 01:14:21,927 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BNS
[2020-11-25 01:14:21,927 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 01:14:21,927 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 01:14:21,927 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 01:14:22,110 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:14:22,110 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:14:22,631 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 01:14:22,632 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 01:14:22,634 INFO  L202        PluginConnector]: Adding new model BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:14:22 BoogieIcfgContainer
[2020-11-25 01:14:22,634 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:14:21" (2/2) ...
[2020-11-25 01:14:22,634 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 01:14:22,634 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@5274b7b5 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:14:22, skipping insertion in model container
[2020-11-25 01:14:22,634 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 01:14:22,635 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 01:14:22,635 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 01:14:22,636 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 01:14:22,636 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:21" (1/3) ...
[2020-11-25 01:14:22,637 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2e71d27 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:14:22, skipping insertion in model container
[2020-11-25 01:14:22,637 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:14:21" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 01:14:22,674 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:14:22 NWAContainer
[2020-11-25 01:14:22,674 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 01:14:22,674 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 01:14:22,674 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 01:14:22,675 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 01:14:22,676 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:14:22" (3/4) ...
[2020-11-25 01:14:22,677 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@585d3bd0 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:14:22, skipping insertion in model container
[2020-11-25 01:14:22,677 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:14:22" (4/4) ...
[2020-11-25 01:14:22,679 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 01:14:22,683 INFO  L110   BuchiProductObserver]: Initial RCFG 1603 locations, 2303 edges
[2020-11-25 01:14:22,683 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 01:14:22,697 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 01:14:24,047 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 01:14:24,053 INFO  L110   BuchiProductObserver]: BuchiProgram size 4100 locations, 7564 edges
[2020-11-25 01:14:24,053 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:14:24 BoogieIcfgContainer
[2020-11-25 01:14:24,053 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 01:14:24,054 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 01:14:24,054 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 01:14:24,055 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 01:14:24,055 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:14:24" (1/1) ...
[2020-11-25 01:14:24,149 INFO  L313           BlockEncoder]: Initial Icfg 4100 locations, 7564 edges
[2020-11-25 01:14:24,149 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 01:14:24,150 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 01:14:24,150 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 01:14:24,150 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 01:14:24,162 INFO  L70    emoveInfeasibleEdges]: Removed 123 edges and 16 locations because of local infeasibility
[2020-11-25 01:14:24,172 INFO  L70        RemoveSinkStates]: Removed 146 edges and 84 locations by removing sink states
[2020-11-25 01:14:24,183 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 01:14:24,186 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 01:14:24,189 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 01:14:24,190 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 01:14:24,196 INFO  L313           BlockEncoder]: Encoded RCFG 3980 locations, 7266 edges
[2020-11-25 01:14:24,196 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:14:24 BasicIcfg
[2020-11-25 01:14:24,196 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 01:14:24,197 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 01:14:24,197 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 01:14:24,200 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 01:14:24,201 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:14:24,201 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:21" (1/6) ...
[2020-11-25 01:14:24,204 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1eb5680c and model type BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:14:24, skipping insertion in model container
[2020-11-25 01:14:24,204 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:14:24,204 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:14:21" (2/6) ...
[2020-11-25 01:14:24,204 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1eb5680c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:14:24, skipping insertion in model container
[2020-11-25 01:14:24,205 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:14:24,205 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:14:22" (3/6) ...
[2020-11-25 01:14:24,205 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1eb5680c and model type BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:14:24, skipping insertion in model container
[2020-11-25 01:14:24,205 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:14:24,205 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:14:22" (4/6) ...
[2020-11-25 01:14:24,206 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1eb5680c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:14:24, skipping insertion in model container
[2020-11-25 01:14:24,206 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:14:24,206 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:14:24" (5/6) ...
[2020-11-25 01:14:24,207 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1eb5680c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:14:24, skipping insertion in model container
[2020-11-25 01:14:24,207 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:14:24,207 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:14:24" (6/6) ...
[2020-11-25 01:14:24,209 INFO  L404   chiAutomizerObserver]: Analyzing ICFG BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transfer-self-fail.bpl_BEv2
[2020-11-25 01:14:24,244 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 01:14:24,244 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 01:14:24,244 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 01:14:24,244 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 01:14:24,244 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 01:14:24,244 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 01:14:24,244 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 01:14:24,244 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 01:14:24,244 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 01:14:24,274 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3980 states.
[2020-11-25 01:14:24,333 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:24,333 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:14:24,333 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:14:24,342 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:24,342 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:24,342 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 01:14:24,342 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3980 states.
[2020-11-25 01:14:24,364 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:24,364 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:14:24,364 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:14:24,366 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:24,366 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L4556]              assume null == 0;
[L4557]  CALL        call this := FreshRefGenerator__success();
[L1661]              havoc newRef;
[L1662]              assume Alloc[newRef] == false;
[L1663]              Alloc[newRef] := true;
[L1664]              assume newRef != null;
[L4557]  RET         call this := FreshRefGenerator__success();
[L4558]              assume now >= 0;
[L4559]              assume DType[this] == BNS;
[L4560]              assume msgvalue_MSG == 0;
[L4561]              gas := gas - 53000;
[L4562]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1082]              havoc __exception;
[L1083]              revert := false;
[L1084]  COND FALSE  !(__exception)
[L1105]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND TRUE   revert
[L1105]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1106]              assume !revert && gas >= 0;
[L4562]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4563]              assume !revert && gas >= 0;

Loop:
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND TRUE   choice == 13
[L4464]              gas := gas - 21000;
[L4465]  COND FALSE  !(gas >= 0)
[L4566]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:14:24,383 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:24,383 INFO  L82        PathProgramCache]: Analyzing trace with hash -285443842, now seen corresponding path program 1 times
[2020-11-25 01:14:24,388 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:24,406 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:14:24,439 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:14:24,441 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:14:24,441 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:14:24,444 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:14:24,675 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:14:24,675 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:14:24,676 INFO  L87              Difference]: Start difference. First operand 3980 states. Second operand 4 states.
[2020-11-25 01:14:25,038 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:14:25,038 INFO  L93              Difference]: Finished difference Result 2294 states and 2752 transitions.
[2020-11-25 01:14:25,038 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:14:25,040 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2294 states and 2752 transitions.
[2020-11-25 01:14:25,052 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:25,073 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2294 states to 2294 states and 2752 transitions.
[2020-11-25 01:14:25,074 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 01:14:25,076 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 600
[2020-11-25 01:14:25,076 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2294 states and 2752 transitions.
[2020-11-25 01:14:25,083 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:14:25,083 INFO  L728         BuchiCegarLoop]: Abstraction has 2294 states and 2752 transitions.
[2020-11-25 01:14:25,096 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2294 states and 2752 transitions.
[2020-11-25 01:14:25,138 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2294 to 2294.
[2020-11-25 01:14:25,139 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2294 states.
[2020-11-25 01:14:25,144 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2294 states to 2294 states and 2752 transitions.
[2020-11-25 01:14:25,145 INFO  L751         BuchiCegarLoop]: Abstraction has 2294 states and 2752 transitions.
[2020-11-25 01:14:25,145 INFO  L631         BuchiCegarLoop]: Abstraction has 2294 states and 2752 transitions.
[2020-11-25 01:14:25,146 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 01:14:25,146 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2294 states and 2752 transitions.
[2020-11-25 01:14:25,151 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:25,152 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:14:25,152 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:14:25,153 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:25,153 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L4556]              assume null == 0;
[L4557]  CALL        call this := FreshRefGenerator__success();
[L1661]              havoc newRef;
[L1662]              assume Alloc[newRef] == false;
[L1663]              Alloc[newRef] := true;
[L1664]              assume newRef != null;
[L4557]  RET         call this := FreshRefGenerator__success();
[L4558]              assume now >= 0;
[L4559]              assume DType[this] == BNS;
[L4560]              assume msgvalue_MSG == 0;
[L4561]              gas := gas - 53000;
[L4562]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1082]              havoc __exception;
[L1083]              revert := false;
[L1084]  COND FALSE  !(__exception)
[L1105]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND TRUE   revert
[L1105]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1106]              assume !revert && gas >= 0;
[L4562]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4563]              assume !revert && gas >= 0;
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND TRUE   choice == 13
[L4464]              gas := gas - 21000;
[L4465]  COND TRUE   gas >= 0
[L4466]              assume value_s268 >= 0 && value_s268 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4467]              assume msgvalue_MSG == 0;
[L4468]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s268 && value_s268 > _balances_ERC20[this][msgsender_MSG]) && value_s268 >= 0) && value_s268 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s268] >= 0) && _balances_ERC20[this][to_s268] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L404]               havoc __exception;
[L405]               revert := false;
[L406]   COND FALSE  !(__exception)
[L427]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L1967]  COND TRUE   DType[this] == BNS
[L1968]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s268, value_s268);
[L2278]              __var_4 := null;
[L2279]  COND TRUE   !(to_s422 != null)
[L2280]              revert := true;
[L1968]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s268, value_s268);
[L1969]  COND TRUE   revert
[L427]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L428]               assume !revert && gas >= 0;
[L4468]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L4566]  RET         call CorralChoice_BNS(this);

Loop:
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND TRUE   choice == 13
[L4464]              gas := gas - 21000;
[L4465]  COND TRUE   gas >= 0
[L4466]              assume value_s268 >= 0 && value_s268 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4467]              assume msgvalue_MSG == 0;
[L4468]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s268 && value_s268 > _balances_ERC20[this][msgsender_MSG]) && value_s268 >= 0) && value_s268 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s268] >= 0) && _balances_ERC20[this][to_s268] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L404]               havoc __exception;
[L405]               revert := false;
[L406]   COND FALSE  !(__exception)
[L427]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L1967]  COND TRUE   DType[this] == BNS
[L1968]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s268, value_s268);
[L2278]              __var_4 := null;
[L2279]  COND TRUE   !(to_s422 != null)
[L2280]              revert := true;
[L1968]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s268, value_s268);
[L1969]  COND TRUE   revert
[L427]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L428]               assume !revert && gas >= 0;
[L4468]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L4566]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:14:25,157 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:25,157 INFO  L82        PathProgramCache]: Analyzing trace with hash 450691316, now seen corresponding path program 1 times
[2020-11-25 01:14:25,158 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:25,166 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:14:25,186 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:14:25,186 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:14:25,186 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:14:25,188 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:14:25,188 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:14:25,188 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:14:25,188 INFO  L87              Difference]: Start difference. First operand 2294 states and 2752 transitions. cyclomatic complexity: 460 Second operand 3 states.
[2020-11-25 01:14:25,261 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:14:25,261 INFO  L93              Difference]: Finished difference Result 3110 states and 3753 transitions.
[2020-11-25 01:14:25,262 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:14:25,262 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3110 states and 3753 transitions.
[2020-11-25 01:14:25,274 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:14:25,287 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3110 states to 3110 states and 3753 transitions.
[2020-11-25 01:14:25,287 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 825
[2020-11-25 01:14:25,288 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 825
[2020-11-25 01:14:25,288 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3110 states and 3753 transitions.
[2020-11-25 01:14:25,293 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:14:25,293 INFO  L728         BuchiCegarLoop]: Abstraction has 3110 states and 3753 transitions.
[2020-11-25 01:14:25,296 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3110 states and 3753 transitions.
[2020-11-25 01:14:25,328 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3110 to 2756.
[2020-11-25 01:14:25,328 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2756 states.
[2020-11-25 01:14:25,337 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2756 states to 2756 states and 3331 transitions.
[2020-11-25 01:14:25,337 INFO  L751         BuchiCegarLoop]: Abstraction has 2756 states and 3331 transitions.
[2020-11-25 01:14:25,337 INFO  L631         BuchiCegarLoop]: Abstraction has 2756 states and 3331 transitions.
[2020-11-25 01:14:25,337 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 01:14:25,337 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2756 states and 3331 transitions.
[2020-11-25 01:14:25,345 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:14:25,345 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:14:25,345 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:14:25,348 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:25,348 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L4556]              assume null == 0;
[L4557]  CALL        call this := FreshRefGenerator__success();
[L1661]              havoc newRef;
[L1662]              assume Alloc[newRef] == false;
[L1663]              Alloc[newRef] := true;
[L1664]              assume newRef != null;
[L4557]  RET         call this := FreshRefGenerator__success();
[L4558]              assume now >= 0;
[L4559]              assume DType[this] == BNS;
[L4560]              assume msgvalue_MSG == 0;
[L4561]              gas := gas - 53000;
[L4562]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1082]              havoc __exception;
[L1083]              revert := false;
[L1084]  COND FALSE  !(__exception)
[L1105]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2799]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L1895]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1899]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1871]              assume msgsender_MSG != null;
[L1872]              Balance[this] := 0;
[L1873]              _balances_ERC20[this] := zeroRefintArr();
[L1874]              sum__balances0[this] := 0;
[L1875]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1876]              sum__allowed1[this] := 0;
[L1877]              _totalSupply_ERC20[this] := 0;
[L1899]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1900]  COND FALSE  !(revert)
[L2799]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2800]  COND FALSE  !(revert)
[L2803]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2569]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2569]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2570]  COND FALSE  !(revert)
[L2573]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2544]              assume msgsender_MSG != null;
[L2545]              Balance[this] := 0;
[L2546]              _name_ERC20Detailed[this] := -2028290499;
[L2547]              _symbol_ERC20Detailed[this] := -2028290499;
[L2548]              _decimals_ERC20Detailed[this] := 0;
[L2550]              _name_ERC20Detailed[this] := name_s606;
[L2551]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2552]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2573]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2574]  COND FALSE  !(revert)
[L2803]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2804]  COND FALSE  !(revert)
[L2807]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2649]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2649]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  COND FALSE  !(revert)
[L2653]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L1895]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1899]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1871]              assume msgsender_MSG != null;
[L1872]              Balance[this] := 0;
[L1873]              _balances_ERC20[this] := zeroRefintArr();
[L1874]              sum__balances0[this] := 0;
[L1875]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1876]              sum__allowed1[this] := 0;
[L1877]              _totalSupply_ERC20[this] := 0;
[L1899]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1900]  COND FALSE  !(revert)
[L2653]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L2657]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2657]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2658]  COND FALSE  !(revert)
[L2807]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2808]  COND FALSE  !(revert)
[L2811]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2753]              assume msgsender_MSG != null;
[L2754]              Balance[this] := 0;
[L2756]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2757]  COND TRUE   DType[this] == BNS
[L2758]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2329]              __var_7 := null;
[L2330]  COND TRUE   !(account_s464 != null)
[L2331]              revert := true;
[L2758]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2759]  COND TRUE   revert
[L2811]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2812]  COND FALSE  !(revert)
[L1105]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1106]              assume !revert && gas >= 0;
[L4562]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4563]              assume !revert && gas >= 0;
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND TRUE   choice == 13
[L4464]              gas := gas - 21000;
[L4465]  COND TRUE   gas >= 0
[L4466]              assume value_s268 >= 0 && value_s268 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4467]              assume msgvalue_MSG == 0;
[L4468]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s268 && value_s268 > _balances_ERC20[this][msgsender_MSG]) && value_s268 >= 0) && value_s268 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s268] >= 0) && _balances_ERC20[this][to_s268] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L404]               havoc __exception;
[L405]               revert := false;
[L406]   COND FALSE  !(__exception)
[L427]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L1967]  COND TRUE   DType[this] == BNS
[L1968]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s268, value_s268);
[L2278]              __var_4 := null;
[L2279]  COND TRUE   !(to_s422 != null)
[L2280]              revert := true;
[L1968]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s268, value_s268);
[L1969]  COND TRUE   revert
[L427]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L428]               assume !revert && gas >= 0;
[L4468]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L4566]  RET         call CorralChoice_BNS(this);

Loop:
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND TRUE   choice == 13
[L4464]              gas := gas - 21000;
[L4465]  COND TRUE   gas >= 0
[L4466]              assume value_s268 >= 0 && value_s268 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4467]              assume msgvalue_MSG == 0;
[L4468]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s268 && value_s268 > _balances_ERC20[this][msgsender_MSG]) && value_s268 >= 0) && value_s268 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s268] >= 0) && _balances_ERC20[this][to_s268] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L404]               havoc __exception;
[L405]               revert := false;
[L406]   COND FALSE  !(__exception)
[L427]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L1967]  COND TRUE   DType[this] == BNS
[L1968]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s268, value_s268);
[L2278]              __var_4 := null;
[L2279]  COND TRUE   !(to_s422 != null)
[L2280]              revert := true;
[L1968]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s268, value_s268);
[L1969]  COND TRUE   revert
[L427]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L428]               assume !revert && gas >= 0;
[L4468]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L4566]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:14:25,353 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:25,353 INFO  L82        PathProgramCache]: Analyzing trace with hash -951142649, now seen corresponding path program 1 times
[2020-11-25 01:14:25,354 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:25,369 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:14:25,436 INFO  L134       CoverageAnalysis]: Checked inductivity of 119 backedges. 0 proven. 28 refuted. 0 times theorem prover too weak. 91 trivial. 0 not checked.
[2020-11-25 01:14:25,436 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 01:14:25,436 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 01:14:25,437 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:14:25,437 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 01:14:25,437 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 01:14:25,437 INFO  L87              Difference]: Start difference. First operand 2756 states and 3331 transitions. cyclomatic complexity: 577 Second operand 7 states.
[2020-11-25 01:14:25,493 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:14:25,493 INFO  L93              Difference]: Finished difference Result 2764 states and 3338 transitions.
[2020-11-25 01:14:25,493 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 01:14:25,493 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2764 states and 3338 transitions.
[2020-11-25 01:14:25,502 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:14:25,512 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2764 states to 2755 states and 3329 transitions.
[2020-11-25 01:14:25,512 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 755
[2020-11-25 01:14:25,513 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 755
[2020-11-25 01:14:25,513 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2755 states and 3329 transitions.
[2020-11-25 01:14:25,515 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:14:25,515 INFO  L728         BuchiCegarLoop]: Abstraction has 2755 states and 3329 transitions.
[2020-11-25 01:14:25,518 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2755 states and 3329 transitions.
[2020-11-25 01:14:25,543 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2755 to 2755.
[2020-11-25 01:14:25,543 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2755 states.
[2020-11-25 01:14:25,547 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2755 states to 2755 states and 3329 transitions.
[2020-11-25 01:14:25,547 INFO  L751         BuchiCegarLoop]: Abstraction has 2755 states and 3329 transitions.
[2020-11-25 01:14:25,547 INFO  L631         BuchiCegarLoop]: Abstraction has 2755 states and 3329 transitions.
[2020-11-25 01:14:25,547 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 01:14:25,547 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2755 states and 3329 transitions.
[2020-11-25 01:14:25,554 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:14:25,554 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:14:25,554 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:14:25,556 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:25,556 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L4556]              assume null == 0;
[L4557]  CALL        call this := FreshRefGenerator__success();
[L1661]              havoc newRef;
[L1662]              assume Alloc[newRef] == false;
[L1663]              Alloc[newRef] := true;
[L1664]              assume newRef != null;
[L4557]  RET         call this := FreshRefGenerator__success();
[L4558]              assume now >= 0;
[L4559]              assume DType[this] == BNS;
[L4560]              assume msgvalue_MSG == 0;
[L4561]              gas := gas - 53000;
[L4562]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1082]              havoc __exception;
[L1083]              revert := false;
[L1084]  COND FALSE  !(__exception)
[L1105]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2799]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L1895]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1899]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1871]              assume msgsender_MSG != null;
[L1872]              Balance[this] := 0;
[L1873]              _balances_ERC20[this] := zeroRefintArr();
[L1874]              sum__balances0[this] := 0;
[L1875]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1876]              sum__allowed1[this] := 0;
[L1877]              _totalSupply_ERC20[this] := 0;
[L1899]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1900]  COND FALSE  !(revert)
[L2799]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2800]  COND FALSE  !(revert)
[L2803]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2569]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2569]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2570]  COND FALSE  !(revert)
[L2573]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2544]              assume msgsender_MSG != null;
[L2545]              Balance[this] := 0;
[L2546]              _name_ERC20Detailed[this] := -2028290499;
[L2547]              _symbol_ERC20Detailed[this] := -2028290499;
[L2548]              _decimals_ERC20Detailed[this] := 0;
[L2550]              _name_ERC20Detailed[this] := name_s606;
[L2551]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2552]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2573]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2574]  COND FALSE  !(revert)
[L2803]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2804]  COND FALSE  !(revert)
[L2807]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2649]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2649]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  COND FALSE  !(revert)
[L2653]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L1895]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1899]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1871]              assume msgsender_MSG != null;
[L1872]              Balance[this] := 0;
[L1873]              _balances_ERC20[this] := zeroRefintArr();
[L1874]              sum__balances0[this] := 0;
[L1875]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1876]              sum__allowed1[this] := 0;
[L1877]              _totalSupply_ERC20[this] := 0;
[L1899]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1900]  COND FALSE  !(revert)
[L2653]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L2657]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2657]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2658]  COND FALSE  !(revert)
[L2807]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2808]  COND FALSE  !(revert)
[L2811]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2753]              assume msgsender_MSG != null;
[L2754]              Balance[this] := 0;
[L2756]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2757]  COND TRUE   DType[this] == BNS
[L2758]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2329]              __var_7 := null;
[L2330]  COND FALSE  !(!(account_s464 != null))
[L2334]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1826]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1827]  COND TRUE   !(c_s174 >= a_s174)
[L1828]              revert := true;
[L2334]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2335]  COND TRUE   revert
[L2758]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2759]  COND TRUE   revert
[L2811]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2812]  COND FALSE  !(revert)
[L1105]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1106]              assume !revert && gas >= 0;
[L4562]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4563]              assume !revert && gas >= 0;
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND TRUE   choice == 13
[L4464]              gas := gas - 21000;
[L4465]  COND TRUE   gas >= 0
[L4466]              assume value_s268 >= 0 && value_s268 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4467]              assume msgvalue_MSG == 0;
[L4468]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s268 && value_s268 > _balances_ERC20[this][msgsender_MSG]) && value_s268 >= 0) && value_s268 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s268] >= 0) && _balances_ERC20[this][to_s268] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L404]               havoc __exception;
[L405]               revert := false;
[L406]   COND FALSE  !(__exception)
[L427]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L1967]  COND TRUE   DType[this] == BNS
[L1968]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s268, value_s268);
[L2278]              __var_4 := null;
[L2279]  COND TRUE   !(to_s422 != null)
[L2280]              revert := true;
[L1968]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s268, value_s268);
[L1969]  COND TRUE   revert
[L427]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L428]               assume !revert && gas >= 0;
[L4468]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L4566]  RET         call CorralChoice_BNS(this);

Loop:
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND TRUE   choice == 13
[L4464]              gas := gas - 21000;
[L4465]  COND TRUE   gas >= 0
[L4466]              assume value_s268 >= 0 && value_s268 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4467]              assume msgvalue_MSG == 0;
[L4468]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s268 && value_s268 > _balances_ERC20[this][msgsender_MSG]) && value_s268 >= 0) && value_s268 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s268] >= 0) && _balances_ERC20[this][to_s268] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L404]               havoc __exception;
[L405]               revert := false;
[L406]   COND FALSE  !(__exception)
[L427]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L1967]  COND TRUE   DType[this] == BNS
[L1968]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s268, value_s268);
[L2278]              __var_4 := null;
[L2279]  COND TRUE   !(to_s422 != null)
[L2280]              revert := true;
[L1968]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s268, value_s268);
[L1969]  COND TRUE   revert
[L427]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L428]               assume !revert && gas >= 0;
[L4468]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L4566]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:14:25,559 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:25,560 INFO  L82        PathProgramCache]: Analyzing trace with hash -294708384, now seen corresponding path program 1 times
[2020-11-25 01:14:25,560 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:25,570 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:14:25,636 INFO  L134       CoverageAnalysis]: Checked inductivity of 119 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 119 trivial. 0 not checked.
[2020-11-25 01:14:25,637 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:14:25,637 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:14:25,637 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:14:25,637 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:14:25,637 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:14:25,638 INFO  L87              Difference]: Start difference. First operand 2755 states and 3329 transitions. cyclomatic complexity: 576 Second operand 3 states.
[2020-11-25 01:14:25,692 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:14:25,692 INFO  L93              Difference]: Finished difference Result 3112 states and 3599 transitions.
[2020-11-25 01:14:25,692 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:14:25,692 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3112 states and 3599 transitions.
[2020-11-25 01:14:25,700 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:14:25,709 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3112 states to 2839 states and 3265 transitions.
[2020-11-25 01:14:25,709 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 739
[2020-11-25 01:14:25,709 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 755
[2020-11-25 01:14:25,710 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2839 states and 3265 transitions.
[2020-11-25 01:14:25,712 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:14:25,712 INFO  L728         BuchiCegarLoop]: Abstraction has 2839 states and 3265 transitions.
[2020-11-25 01:14:25,714 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2839 states and 3265 transitions.
[2020-11-25 01:14:25,733 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2839 to 2554.
[2020-11-25 01:14:25,733 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2554 states.
[2020-11-25 01:14:25,736 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2554 states to 2554 states and 2912 transitions.
[2020-11-25 01:14:25,736 INFO  L751         BuchiCegarLoop]: Abstraction has 2554 states and 2912 transitions.
[2020-11-25 01:14:25,736 INFO  L631         BuchiCegarLoop]: Abstraction has 2554 states and 2912 transitions.
[2020-11-25 01:14:25,736 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 01:14:25,736 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2554 states and 2912 transitions.
[2020-11-25 01:14:25,739 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:14:25,739 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:14:25,739 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:14:25,740 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:25,740 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L4556]              assume null == 0;
[L4557]  CALL        call this := FreshRefGenerator__success();
[L1661]              havoc newRef;
[L1662]              assume Alloc[newRef] == false;
[L1663]              Alloc[newRef] := true;
[L1664]              assume newRef != null;
[L4557]  RET         call this := FreshRefGenerator__success();
[L4558]              assume now >= 0;
[L4559]              assume DType[this] == BNS;
[L4560]              assume msgvalue_MSG == 0;
[L4561]              gas := gas - 53000;
[L4562]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1082]              havoc __exception;
[L1083]              revert := false;
[L1084]  COND FALSE  !(__exception)
[L1105]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2799]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L1895]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1899]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1871]              assume msgsender_MSG != null;
[L1872]              Balance[this] := 0;
[L1873]              _balances_ERC20[this] := zeroRefintArr();
[L1874]              sum__balances0[this] := 0;
[L1875]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1876]              sum__allowed1[this] := 0;
[L1877]              _totalSupply_ERC20[this] := 0;
[L1899]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1900]  COND FALSE  !(revert)
[L2799]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2800]  COND FALSE  !(revert)
[L2803]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2569]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2569]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2570]  COND FALSE  !(revert)
[L2573]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2544]              assume msgsender_MSG != null;
[L2545]              Balance[this] := 0;
[L2546]              _name_ERC20Detailed[this] := -2028290499;
[L2547]              _symbol_ERC20Detailed[this] := -2028290499;
[L2548]              _decimals_ERC20Detailed[this] := 0;
[L2550]              _name_ERC20Detailed[this] := name_s606;
[L2551]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2552]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2573]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2574]  COND FALSE  !(revert)
[L2803]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2804]  COND FALSE  !(revert)
[L2807]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2649]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2649]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  COND FALSE  !(revert)
[L2653]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L1895]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1899]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1871]              assume msgsender_MSG != null;
[L1872]              Balance[this] := 0;
[L1873]              _balances_ERC20[this] := zeroRefintArr();
[L1874]              sum__balances0[this] := 0;
[L1875]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1876]              sum__allowed1[this] := 0;
[L1877]              _totalSupply_ERC20[this] := 0;
[L1899]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1900]  COND FALSE  !(revert)
[L2653]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L2657]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2657]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2658]  COND FALSE  !(revert)
[L2807]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2808]  COND FALSE  !(revert)
[L2811]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2753]              assume msgsender_MSG != null;
[L2754]              Balance[this] := 0;
[L2756]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2757]  COND TRUE   DType[this] == BNS
[L2758]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2329]              __var_7 := null;
[L2330]  COND FALSE  !(!(account_s464 != null))
[L2334]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1826]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1827]  COND FALSE  !(!(c_s174 >= a_s174))
[L1831]              __ret_0_ := c_s174;
[L2334]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2335]  COND FALSE  !(revert)
[L2338]              _totalSupply_ERC20[this] := __var_8;
[L2339]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L1826]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1827]  COND FALSE  !(!(c_s174 >= a_s174))
[L1831]              __ret_0_ := c_s174;
[L2339]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L2340]  COND FALSE  !(revert)
[L2343]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s464];
[L2344]              _balances_ERC20[this][account_s464] := __var_9;
[L2345]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s464];
[L2346]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2758]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2759]  COND FALSE  !(revert)
[L2811]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2812]  COND FALSE  !(revert)
[L1105]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1106]              assume !revert && gas >= 0;
[L4562]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4563]              assume !revert && gas >= 0;
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND TRUE   choice == 13
[L4464]              gas := gas - 21000;
[L4465]  COND TRUE   gas >= 0
[L4466]              assume value_s268 >= 0 && value_s268 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4467]              assume msgvalue_MSG == 0;
[L4468]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s268 && value_s268 > _balances_ERC20[this][msgsender_MSG]) && value_s268 >= 0) && value_s268 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s268] >= 0) && _balances_ERC20[this][to_s268] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L404]               havoc __exception;
[L405]               revert := false;
[L406]   COND FALSE  !(__exception)
[L427]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L1967]  COND TRUE   DType[this] == BNS
[L1968]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s268, value_s268);
[L2278]              __var_4 := null;
[L2279]  COND FALSE  !(!(to_s422 != null))
[L2283]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s422], value_s422);
[L1802]  COND FALSE  !(!(b_s150 <= a_s150))
[L1806]              c_s150 := (a_s150 - b_s150) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1807]              __ret_0_ := c_s150;
[L2283]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s422], value_s422);
[L2284]  COND FALSE  !(revert)
[L2287]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s422];
[L2288]              _balances_ERC20[this][from_s422] := __var_5;
[L2289]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s422];
[L2290]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s422], value_s422);
[L1826]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1827]  COND FALSE  !(!(c_s174 >= a_s174))
[L1831]              __ret_0_ := c_s174;
[L2290]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s422], value_s422);
[L2291]  COND FALSE  !(revert)
[L2294]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s422];
[L2295]              _balances_ERC20[this][to_s422] := __var_6;
[L2296]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s422];
[L2297]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1968]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s268, value_s268);
[L1969]  COND FALSE  !(revert)
[L1985]              __ret_0_ := true;
[L427]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L428]               assume !revert && gas >= 0;
[L4468]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L4566]  RET         call CorralChoice_BNS(this);

Loop:
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND TRUE   choice == 13
[L4464]              gas := gas - 21000;
[L4465]  COND TRUE   gas >= 0
[L4466]              assume value_s268 >= 0 && value_s268 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4467]              assume msgvalue_MSG == 0;
[L4468]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s268 && value_s268 > _balances_ERC20[this][msgsender_MSG]) && value_s268 >= 0) && value_s268 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s268] >= 0) && _balances_ERC20[this][to_s268] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L404]               havoc __exception;
[L405]               revert := false;
[L406]   COND FALSE  !(__exception)
[L427]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L1967]  COND TRUE   DType[this] == BNS
[L1968]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s268, value_s268);
[L2278]              __var_4 := null;
[L2279]  COND FALSE  !(!(to_s422 != null))
[L2283]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s422], value_s422);
[L1802]  COND FALSE  !(!(b_s150 <= a_s150))
[L1806]              c_s150 := (a_s150 - b_s150) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1807]              __ret_0_ := c_s150;
[L2283]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s422], value_s422);
[L2284]  COND FALSE  !(revert)
[L2287]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s422];
[L2288]              _balances_ERC20[this][from_s422] := __var_5;
[L2289]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s422];
[L2290]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s422], value_s422);
[L1826]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1827]  COND FALSE  !(!(c_s174 >= a_s174))
[L1831]              __ret_0_ := c_s174;
[L2290]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s422], value_s422);
[L2291]  COND FALSE  !(revert)
[L2294]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s422];
[L2295]              _balances_ERC20[this][to_s422] := __var_6;
[L2296]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s422];
[L2297]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1968]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s268, value_s268);
[L1969]  COND FALSE  !(revert)
[L1985]              __ret_0_ := true;
[L427]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L428]               assume !revert && gas >= 0;
[L4468]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s268, value_s268);
[L4566]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:14:25,744 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:25,744 INFO  L82        PathProgramCache]: Analyzing trace with hash 1931177693, now seen corresponding path program 1 times
[2020-11-25 01:14:25,744 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:25,758 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:14:25,832 INFO  L134       CoverageAnalysis]: Checked inductivity of 124 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 124 trivial. 0 not checked.
[2020-11-25 01:14:25,832 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:14:25,832 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-25 01:14:25,833 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:14:25,833 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-25 01:14:25,833 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=15, Invalid=41, Unknown=0, NotChecked=0, Total=56
[2020-11-25 01:14:25,833 INFO  L87              Difference]: Start difference. First operand 2554 states and 2912 transitions. cyclomatic complexity: 360 Second operand 8 states.
[2020-11-25 01:14:26,381 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:14:26,381 INFO  L93              Difference]: Finished difference Result 1539 states and 1733 transitions.
[2020-11-25 01:14:26,382 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 01:14:26,382 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1539 states and 1733 transitions.
[2020-11-25 01:14:26,385 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 01:14:26,385 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1539 states to 0 states and 0 transitions.
[2020-11-25 01:14:26,385 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 01:14:26,385 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 01:14:26,385 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 01:14:26,385 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:14:26,385 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:14:26,386 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:14:26,386 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:14:26,386 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 01:14:26,386 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 01:14:26,386 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 01:14:26,386 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 01:14:26,389 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:14:26 BasicIcfg
[2020-11-25 01:14:26,389 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 01:14:26,390 INFO  L168              Benchmark]: Toolchain (without parser) took 4692.81 ms. Allocated memory was 1.0 GB in the beginning and 1.4 GB in the end (delta: 403.2 MB). Free memory was 935.2 MB in the beginning and 881.5 MB in the end (delta: 53.7 MB). Peak memory consumption was 456.9 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:26,391 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:14:26,391 INFO  L168              Benchmark]: Boogie Preprocessor took 82.10 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:26,391 INFO  L168              Benchmark]: UtopiaSpecLang took 57.74 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:26,391 INFO  L168              Benchmark]: Boogie Printer took 16.24 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:26,392 INFO  L168              Benchmark]: RCFGBuilder took 778.13 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 790.2 MB in the end (delta: 123.5 MB). Peak memory consumption was 123.5 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:26,392 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.65 ms. Allocated memory is still 1.0 GB. Free memory was 790.2 MB in the beginning and 786.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:26,392 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1379.06 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 210.2 MB). Free memory was 786.6 MB in the beginning and 956.3 MB in the end (delta: -169.7 MB). Peak memory consumption was 176.9 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:26,393 INFO  L168              Benchmark]: BlockEncodingV2 took 142.67 ms. Allocated memory is still 1.2 GB. Free memory was 956.3 MB in the beginning and 878.8 MB in the end (delta: 77.6 MB). Peak memory consumption was 77.6 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:26,393 INFO  L168              Benchmark]: BuchiAutomizer took 2192.85 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 192.9 MB). Free memory was 878.8 MB in the beginning and 881.5 MB in the end (delta: -2.8 MB). Peak memory consumption was 190.2 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:26,395 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4100 locations, 7564 edges
  - StatisticsResult: Encoded RCFG
    3980 locations, 7266 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 82.10 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 57.74 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.24 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 778.13 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 790.2 MB in the end (delta: 123.5 MB). Peak memory consumption was 123.5 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.65 ms. Allocated memory is still 1.0 GB. Free memory was 790.2 MB in the beginning and 786.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1379.06 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 210.2 MB). Free memory was 786.6 MB in the beginning and 956.3 MB in the end (delta: -169.7 MB). Peak memory consumption was 176.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 142.67 ms. Allocated memory is still 1.2 GB. Free memory was 956.3 MB in the beginning and 878.8 MB in the end (delta: 77.6 MB). Peak memory consumption was 77.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2192.85 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 192.9 MB). Free memory was 878.8 MB in the beginning and 881.5 MB in the end (delta: -2.8 MB). Peak memory consumption was 190.2 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1603 locations, 2303 edges
  - StatisticsResult: BuchiProgram size
    4100 locations, 7564 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 8 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.1s and 6 iterations.  TraceHistogramMax:5. Analysis of lassos took 0.3s. Construction of modules took 0.6s. BÃ¼chi inclusion checks took 0.6s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 639 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2756 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 13044 SDtfs, 7238 SDslu, 21979 SDs, 0 SdLazy, 6846 SolverSat, 1858 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.6s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_ERC200) ==> ( <>(fail_transfer_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
