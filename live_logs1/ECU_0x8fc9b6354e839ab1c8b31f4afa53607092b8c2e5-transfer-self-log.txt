This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 15:01:06,484 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 15:01:06,485 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 15:01:06,496 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 15:01:06,497 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 15:01:06,497 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 15:01:06,498 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 15:01:06,500 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 15:01:06,501 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 15:01:06,502 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 15:01:06,502 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 15:01:06,503 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 15:01:06,503 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 15:01:06,504 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 15:01:06,505 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 15:01:06,506 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 15:01:06,506 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 15:01:06,507 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 15:01:06,508 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 15:01:06,509 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 15:01:06,510 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 15:01:06,511 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 15:01:06,513 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 15:01:06,513 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 15:01:06,513 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 15:01:06,513 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 15:01:06,514 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 15:01:06,514 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 15:01:06,514 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 15:01:06,515 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 15:01:06,515 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 15:01:06,516 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 15:01:06,516 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 15:01:06,516 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 15:01:06,517 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 15:01:06,517 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 15:01:06,518 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 15:01:06,518 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 15:01:06,518 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 15:01:06,519 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 15:01:06,519 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 15:01:06,520 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 15:01:06,527 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 15:01:06,527 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 15:01:06,528 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 15:01:06,528 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 15:01:06,528 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 15:01:06,529 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 15:01:06,529 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 15:01:06,529 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 15:01:06,529 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 15:01:06,529 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 15:01:06,529 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 15:01:06,529 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 15:01:06,529 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 15:01:06,530 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 15:01:06,530 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 15:01:06,530 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 15:01:06,530 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 15:01:06,530 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 15:01:06,530 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 15:01:06,530 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 15:01:06,530 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 15:01:06,530 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 15:01:06,531 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 15:01:06,531 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 15:01:06,531 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 15:01:06,531 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 15:01:06,553 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 15:01:06,567 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 15:01:06,569 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 15:01:06,570 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 15:01:06,571 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 15:01:06,571 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl
[2020-11-25 15:01:06,571 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl'
[2020-11-25 15:01:06,669 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 15:01:06,671 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 15:01:06,671 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 15:01:06,671 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 15:01:06,671 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 15:01:06,687 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:06" (1/1) ...
[2020-11-25 15:01:06,689 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:06" (1/1) ...
[2020-11-25 15:01:06,722 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:06" (1/1) ...
[2020-11-25 15:01:06,723 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:06" (1/1) ...
[2020-11-25 15:01:06,747 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:06" (1/1) ...
[2020-11-25 15:01:06,760 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:06" (1/1) ...
[2020-11-25 15:01:06,770 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:06" (1/1) ...
[2020-11-25 15:01:06,783 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 15:01:06,784 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 15:01:06,785 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 15:01:06,788 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 15:01:06,794 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:06" (1/1) ...
[2020-11-25 15:01:06,815 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(BasicToken.transfer(to, value), msg.sender == to && value <= balances_BasicToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.transfer(to, value), return == true && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this]) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this]) && locked_BasicToken[this] == old(locked_BasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 15:01:06,820 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(BasicToken.transfer(to, value), msg.sender == to && value <= balances_BasicToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.transfer(to, value), return == true && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this]) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this]) && locked_BasicToken[this] == old(locked_BasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 15:01:06,827 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(BasicToken.transfer(to, value), msg.sender == to && value <= balances_BasicToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.transfer(to, value), return == true && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this]) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this]) && locked_BasicToken[this] == old(locked_BasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 15:01:06,834 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==_to_s340 && _value_s340<=balances_BasicToken[this][msg.sender] ) && _value_s340>=0 ) && _value_s340<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][_to_s340]>=0 ) && balances_BasicToken[this][_to_s340]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][msg.sender]>=0 ) && balances_BasicToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>],IdentifierExpression[_to_s340,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s340,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s340,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s340,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[_to_s340,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[_to_s340,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 15:01:06,837 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && totalSupply_ERC20Basic[this]==( old(totalSupply_ERC20Basic[this]) ) ) && balances_BasicToken[this]==( old(balances_BasicToken[this]) ) ) && allowed_StandardToken[this]==( old(allowed_StandardToken[this]) ) ) && allowedAddresses_BasicToken[this]==( old(allowedAddresses_BasicToken[this]) ) ) && lockedAddresses_BasicToken[this]==( old(lockedAddresses_BasicToken[this]) ) ) && locked_BasicToken[this]==( old(locked_BasicToken[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_BasicToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_ERC20Basic,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_ERC20Basic,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowedAddresses_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowedAddresses_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[lockedAddresses_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[lockedAddresses_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[locked_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[locked_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BasicToken>]]]]]]
[2020-11-25 15:01:06,844 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(BasicToken.transfer(to, value), msg.sender == to && value <= balances_BasicToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.transfer(to, value), return == true && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this]) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this]) && locked_BasicToken[this] == old(locked_BasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 15:01:06,844 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_BasicToken0) ==> ( <>AP(success_transfer_BasicToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 15:01:06,857 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:01:06 PropertyContainer
[2020-11-25 15:01:06,857 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 15:01:06,857 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 15:01:06,858 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 15:01:06,858 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 15:01:06,859 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:06" (1/2) ...
[2020-11-25 15:01:06,859 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 15:01:06,859 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 15:01:06,879 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:01:06" (2/2) ...
[2020-11-25 15:01:06,879 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 15:01:06,879 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 15:01:06,879 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 15:01:06,879 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 15:01:06,880 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:06" (1/2) ...
[2020-11-25 15:01:06,938 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 15:01:06,938 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:01:06,938 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 15:01:06,938 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 15:01:06,938 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:01:06,938 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 15:01:06,938 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 15:01:06,938 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:01:06,938 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 15:01:06,938 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 15:01:06,939 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 15:01:06,939 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 15:01:06,939 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 15:01:06,939 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 15:01:06,939 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 15:01:06,939 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 15:01:06,939 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-25 15:01:06,939 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-25 15:01:06,939 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-25 15:01:06,940 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-25 15:01:06,940 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-25 15:01:06,940 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20Basic
[2020-11-25 15:01:06,940 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 15:01:06,940 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-25 15:01:06,940 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-25 15:01:06,940 INFO  L130     BoogieDeclarations]: Found specification of procedure allowAddress~address~bool_BasicToken
[2020-11-25 15:01:06,940 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowAddress~address~bool_BasicToken
[2020-11-25 15:01:06,940 INFO  L130     BoogieDeclarations]: Found specification of procedure lockAddress~address~bool_BasicToken
[2020-11-25 15:01:06,940 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockAddress~address~bool_BasicToken
[2020-11-25 15:01:06,941 INFO  L130     BoogieDeclarations]: Found specification of procedure setLocked~bool_BasicToken
[2020-11-25 15:01:06,941 INFO  L138     BoogieDeclarations]: Found implementation of procedure setLocked~bool_BasicToken
[2020-11-25 15:01:06,941 INFO  L130     BoogieDeclarations]: Found specification of procedure canTransfer~address_BasicToken
[2020-11-25 15:01:06,941 INFO  L138     BoogieDeclarations]: Found implementation of procedure canTransfer~address_BasicToken
[2020-11-25 15:01:06,941 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-25 15:01:06,941 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-25 15:01:06,941 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-25 15:01:06,941 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-25 15:01:06,941 INFO  L130     BoogieDeclarations]: Found specification of procedure allowedAddresses~address_BasicToken
[2020-11-25 15:01:06,941 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowedAddresses~address_BasicToken
[2020-11-25 15:01:06,941 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAddresses~address_BasicToken
[2020-11-25 15:01:06,942 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAddresses~address_BasicToken
[2020-11-25 15:01:06,942 INFO  L130     BoogieDeclarations]: Found specification of procedure locked_BasicToken
[2020-11-25 15:01:06,942 INFO  L138     BoogieDeclarations]: Found implementation of procedure locked_BasicToken
[2020-11-25 15:01:06,942 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:01:06,942 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 15:01:06,942 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 15:01:06,942 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 15:01:06,942 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 15:01:06,942 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 15:01:06,942 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 15:01:06,943 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-25 15:01:06,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-25 15:01:06,943 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 15:01:06,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 15:01:06,943 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-25 15:01:06,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-25 15:01:06,943 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-25 15:01:06,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-25 15:01:06,943 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 15:01:06,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 15:01:06,944 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 15:01:06,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 15:01:06,944 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-25 15:01:06,944 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken
[2020-11-25 15:01:06,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken
[2020-11-25 15:01:06,944 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken
[2020-11-25 15:01:06,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken
[2020-11-25 15:01:06,944 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU_NoBaseCtor__success
[2020-11-25 15:01:06,944 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU
[2020-11-25 15:01:06,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU
[2020-11-25 15:01:06,945 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ECU
[2020-11-25 15:01:06,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ECU
[2020-11-25 15:01:06,945 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ECU
[2020-11-25 15:01:06,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ECU
[2020-11-25 15:01:06,945 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ECU
[2020-11-25 15:01:06,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ECU
[2020-11-25 15:01:06,945 INFO  L130     BoogieDeclarations]: Found specification of procedure initialSupply_ECU
[2020-11-25 15:01:06,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure initialSupply_ECU
[2020-11-25 15:01:06,945 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 15:01:06,945 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 15:01:06,946 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 15:01:06,946 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 15:01:06,946 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 15:01:06,946 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 15:01:06,946 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 15:01:06,946 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 15:01:06,946 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-25 15:01:06,946 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-25 15:01:06,946 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-25 15:01:06,946 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-25 15:01:06,946 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 15:01:06,947 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 15:01:06,947 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-25 15:01:06,947 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-25 15:01:06,947 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BurnableToken
[2020-11-25 15:01:06,947 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BurnableToken
[2020-11-25 15:01:06,947 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ECU
[2020-11-25 15:01:06,947 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 15:01:06,947 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 15:01:06,947 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:01:06,947 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 15:01:06,948 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 15:01:06,948 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:06,948 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:06,948 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:06,948 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:06,948 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 15:01:06,948 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 15:01:06,948 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 15:01:06,948 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 15:01:06,948 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 15:01:06,949 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 15:01:06,949 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 15:01:06,949 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 15:01:06,949 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 15:01:06,949 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 15:01:06,949 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic__success
[2020-11-25 15:01:06,949 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic__fail
[2020-11-25 15:01:06,949 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 15:01:06,949 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-25 15:01:06,949 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-25 15:01:06,950 INFO  L130     BoogieDeclarations]: Found specification of procedure allowAddress~address~bool_BasicToken__success
[2020-11-25 15:01:06,950 INFO  L130     BoogieDeclarations]: Found specification of procedure allowAddress~address~bool_BasicToken__fail
[2020-11-25 15:01:06,950 INFO  L130     BoogieDeclarations]: Found specification of procedure lockAddress~address~bool_BasicToken__success
[2020-11-25 15:01:06,950 INFO  L130     BoogieDeclarations]: Found specification of procedure lockAddress~address~bool_BasicToken__fail
[2020-11-25 15:01:06,950 INFO  L130     BoogieDeclarations]: Found specification of procedure setLocked~bool_BasicToken__success
[2020-11-25 15:01:06,950 INFO  L130     BoogieDeclarations]: Found specification of procedure setLocked~bool_BasicToken__fail
[2020-11-25 15:01:06,950 INFO  L130     BoogieDeclarations]: Found specification of procedure canTransfer~address_BasicToken__success
[2020-11-25 15:01:06,950 INFO  L130     BoogieDeclarations]: Found specification of procedure canTransfer~address_BasicToken__fail
[2020-11-25 15:01:06,950 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 15:01:06,950 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 15:01:06,950 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-25 15:01:06,951 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-25 15:01:06,951 INFO  L130     BoogieDeclarations]: Found specification of procedure allowedAddresses~address_BasicToken__success
[2020-11-25 15:01:06,951 INFO  L130     BoogieDeclarations]: Found specification of procedure allowedAddresses~address_BasicToken__fail
[2020-11-25 15:01:06,951 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAddresses~address_BasicToken__success
[2020-11-25 15:01:06,951 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAddresses~address_BasicToken__fail
[2020-11-25 15:01:06,951 INFO  L130     BoogieDeclarations]: Found specification of procedure locked_BasicToken__success
[2020-11-25 15:01:06,951 INFO  L130     BoogieDeclarations]: Found specification of procedure locked_BasicToken__fail
[2020-11-25 15:01:06,951 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:01:06,951 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 15:01:06,951 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 15:01:06,952 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 15:01:06,952 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-25 15:01:06,952 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-25 15:01:06,952 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 15:01:06,952 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 15:01:06,952 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-25 15:01:06,952 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 15:01:06,952 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-25 15:01:06,953 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-25 15:01:06,953 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 15:01:06,953 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 15:01:06,953 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 15:01:06,953 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 15:01:06,953 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-25 15:01:06,953 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__success
[2020-11-25 15:01:06,953 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__fail
[2020-11-25 15:01:06,953 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__success
[2020-11-25 15:01:06,953 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__fail
[2020-11-25 15:01:06,953 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU_NoBaseCtor__fail
[2020-11-25 15:01:06,954 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU__success
[2020-11-25 15:01:06,954 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU__fail
[2020-11-25 15:01:06,954 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ECU__success
[2020-11-25 15:01:06,954 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ECU__fail
[2020-11-25 15:01:06,954 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ECU__success
[2020-11-25 15:01:06,954 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ECU__fail
[2020-11-25 15:01:06,954 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ECU__success
[2020-11-25 15:01:06,954 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ECU__fail
[2020-11-25 15:01:06,954 INFO  L130     BoogieDeclarations]: Found specification of procedure initialSupply_ECU__success
[2020-11-25 15:01:06,954 INFO  L130     BoogieDeclarations]: Found specification of procedure initialSupply_ECU__fail
[2020-11-25 15:01:06,955 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 15:01:06,955 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 15:01:06,955 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 15:01:06,955 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 15:01:06,955 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 15:01:06,955 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 15:01:06,955 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:01:06,955 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:01:06,955 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 15:01:06,955 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 15:01:06,955 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:06,955 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:01:06,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:06,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 15:01:06,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:06,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 15:01:06,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:01:06,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:01:06,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 15:01:06,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 15:01:06,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 15:01:06,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 15:01:06,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 15:01:06,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 15:01:06,956 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 15:01:06,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 15:01:06,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 15:01:06,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 15:01:06,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 15:01:06,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 15:01:06,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20Basic__fail
[2020-11-25 15:01:06,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20Basic__success
[2020-11-25 15:01:06,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 15:01:06,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 15:01:06,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-25 15:01:06,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-25 15:01:06,957 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowAddress~address~bool_BasicToken__fail
[2020-11-25 15:01:06,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowAddress~address~bool_BasicToken__success
[2020-11-25 15:01:06,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockAddress~address~bool_BasicToken__fail
[2020-11-25 15:01:06,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockAddress~address~bool_BasicToken__success
[2020-11-25 15:01:06,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure setLocked~bool_BasicToken__fail
[2020-11-25 15:01:06,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure setLocked~bool_BasicToken__success
[2020-11-25 15:01:06,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure canTransfer~address_BasicToken__fail
[2020-11-25 15:01:06,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure canTransfer~address_BasicToken__success
[2020-11-25 15:01:06,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 15:01:06,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 15:01:06,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-25 15:01:06,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-25 15:01:06,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowedAddresses~address_BasicToken__fail
[2020-11-25 15:01:06,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowedAddresses~address_BasicToken__success
[2020-11-25 15:01:06,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAddresses~address_BasicToken__fail
[2020-11-25 15:01:06,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAddresses~address_BasicToken__success
[2020-11-25 15:01:06,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure locked_BasicToken__fail
[2020-11-25 15:01:06,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure locked_BasicToken__success
[2020-11-25 15:01:06,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:01:06,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:01:06,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 15:01:06,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 15:01:06,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 15:01:06,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 15:01:06,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-25 15:01:06,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-25 15:01:06,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 15:01:06,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 15:01:06,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 15:01:06,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-25 15:01:06,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-25 15:01:06,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-25 15:01:06,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 15:01:06,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 15:01:06,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 15:01:06,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 15:01:06,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-25 15:01:06,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-25 15:01:06,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__fail
[2020-11-25 15:01:06,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__success
[2020-11-25 15:01:06,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__fail
[2020-11-25 15:01:06,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__success
[2020-11-25 15:01:06,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU_NoBaseCtor__fail
[2020-11-25 15:01:06,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU_NoBaseCtor__success
[2020-11-25 15:01:06,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU__fail
[2020-11-25 15:01:06,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU__success
[2020-11-25 15:01:06,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ECU__fail
[2020-11-25 15:01:06,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ECU__success
[2020-11-25 15:01:06,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ECU__fail
[2020-11-25 15:01:06,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ECU__success
[2020-11-25 15:01:06,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ECU__fail
[2020-11-25 15:01:06,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ECU__success
[2020-11-25 15:01:06,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure initialSupply_ECU__fail
[2020-11-25 15:01:06,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure initialSupply_ECU__success
[2020-11-25 15:01:06,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 15:01:06,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 15:01:06,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 15:01:06,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 15:01:06,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 15:01:06,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 15:01:06,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 15:01:06,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 15:01:06,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 15:01:06,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 15:01:06,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 15:01:06,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 15:01:06,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-25 15:01:06,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-25 15:01:06,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-25 15:01:06,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-25 15:01:06,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 15:01:06,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 15:01:06,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-25 15:01:06,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-25 15:01:06,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BurnableToken
[2020-11-25 15:01:06,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BurnableToken
[2020-11-25 15:01:06,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ECU
[2020-11-25 15:01:06,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 15:01:06,964 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 15:01:06,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 15:01:07,534 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:01:07,534 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:01:07,535 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:01:07,928 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 15:01:07,928 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-25 15:01:07,931 INFO  L202        PluginConnector]: Adding new model ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:01:07 BoogieIcfgContainer
[2020-11-25 15:01:07,931 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:01:06" (2/2) ...
[2020-11-25 15:01:07,931 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 15:01:07,931 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@75e85fc6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:01:07, skipping insertion in model container
[2020-11-25 15:01:07,931 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 15:01:07,932 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 15:01:07,932 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 15:01:07,933 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 15:01:07,933 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:06" (1/3) ...
[2020-11-25 15:01:07,933 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@301d7e27 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:01:07, skipping insertion in model container
[2020-11-25 15:01:07,934 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:01:06" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 15:01:07,966 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:01:07 NWAContainer
[2020-11-25 15:01:07,966 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 15:01:07,967 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 15:01:07,967 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 15:01:07,967 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 15:01:07,968 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:01:07" (3/4) ...
[2020-11-25 15:01:07,969 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@5c7ac498 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:01:07, skipping insertion in model container
[2020-11-25 15:01:07,969 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:01:07" (4/4) ...
[2020-11-25 15:01:07,972 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 15:01:07,976 INFO  L110   BuchiProductObserver]: Initial RCFG 2505 locations, 3476 edges
[2020-11-25 15:01:07,977 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 15:01:07,988 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 15:01:09,921 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 15:01:09,929 INFO  L110   BuchiProductObserver]: BuchiProgram size 6260 locations, 11462 edges
[2020-11-25 15:01:09,929 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:01:09 BoogieIcfgContainer
[2020-11-25 15:01:09,929 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 15:01:09,929 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 15:01:09,929 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 15:01:09,931 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 15:01:09,931 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:01:09" (1/1) ...
[2020-11-25 15:01:10,059 INFO  L313           BlockEncoder]: Initial Icfg 6260 locations, 11462 edges
[2020-11-25 15:01:10,059 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 15:01:10,060 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 15:01:10,060 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 15:01:10,060 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 15:01:10,075 INFO  L70    emoveInfeasibleEdges]: Removed 93 edges and 19 locations because of local infeasibility
[2020-11-25 15:01:10,088 INFO  L70        RemoveSinkStates]: Removed 14 edges and 9 locations by removing sink states
[2020-11-25 15:01:10,105 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 15:01:10,111 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 15:01:10,116 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 15:01:10,116 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 15:01:10,120 INFO  L313           BlockEncoder]: Encoded RCFG 6198 locations, 11305 edges
[2020-11-25 15:01:10,121 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:01:10 BasicIcfg
[2020-11-25 15:01:10,121 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 15:01:10,121 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 15:01:10,121 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 15:01:10,123 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 15:01:10,123 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:01:10,123 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:01:06" (1/6) ...
[2020-11-25 15:01:10,124 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@78dc101b and model type ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:01:10, skipping insertion in model container
[2020-11-25 15:01:10,124 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:01:10,125 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:01:06" (2/6) ...
[2020-11-25 15:01:10,125 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@78dc101b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:01:10, skipping insertion in model container
[2020-11-25 15:01:10,125 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:01:10,125 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:01:07" (3/6) ...
[2020-11-25 15:01:10,125 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@78dc101b and model type ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:01:10, skipping insertion in model container
[2020-11-25 15:01:10,125 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:01:10,125 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:01:07" (4/6) ...
[2020-11-25 15:01:10,125 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@78dc101b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:01:10, skipping insertion in model container
[2020-11-25 15:01:10,125 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:01:10,125 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:01:09" (5/6) ...
[2020-11-25 15:01:10,126 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@78dc101b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 03:01:10, skipping insertion in model container
[2020-11-25 15:01:10,126 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:01:10,126 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:01:10" (6/6) ...
[2020-11-25 15:01:10,127 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_transfer-self.bpl_BEv2
[2020-11-25 15:01:10,157 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 15:01:10,157 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 15:01:10,157 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 15:01:10,157 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 15:01:10,157 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 15:01:10,157 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 15:01:10,157 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 15:01:10,157 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 15:01:10,158 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 15:01:10,207 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6198 states.
[2020-11-25 15:01:10,260 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:01:10,260 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:01:10,260 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:01:10,267 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:01:10,267 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:01:10,267 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 15:01:10,268 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6198 states.
[2020-11-25 15:01:10,293 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:01:10,293 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:01:10,293 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:01:10,295 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:01:10,295 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_BasicToken0 := false;
[L2]                 call_transfer_BasicToken0 := false;
[L2]     CALL        call main();
[L7234]              assume null == 0;
[L7235]  CALL        call this := FreshRefGenerator__success();
[L3065]              havoc newRef;
[L3066]              assume Alloc[newRef] == false;
[L3067]              Alloc[newRef] := true;
[L3068]              assume newRef != null;
[L7235]  RET         call this := FreshRefGenerator__success();
[L7236]              assume now >= 0;
[L7237]              assume DType[this] == ECU;
[L7238]              assume msgvalue_MSG == 0;
[L7239]              gas := gas - 53000;
[L7240]  CALL        call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L1849]              havoc __exception;
[L1850]              revert := false;
[L1851]  COND FALSE  !(__exception)
[L1880]  CALL        call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L4151]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L4151]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  COND TRUE   revert
[L1880]  RET         call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]              assume !revert && gas >= 0;
[L7240]  RET         call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L7241]              assume !revert && gas >= 0;

Loop:
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND TRUE   choice == 22
[L7089]              gas := gas - 21000;
[L7090]  COND FALSE  !(gas >= 0)
[L7244]  RET         call CorralChoice_ECU(this);

[2020-11-25 15:01:10,309 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:01:10,309 INFO  L82        PathProgramCache]: Analyzing trace with hash -481790552, now seen corresponding path program 1 times
[2020-11-25 15:01:10,313 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:01:10,334 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:01:10,374 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:01:10,376 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:01:10,376 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:01:10,806 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:01:10,815 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:01:10,816 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:01:10,818 INFO  L87              Difference]: Start difference. First operand 6198 states. Second operand 4 states.
[2020-11-25 15:01:11,309 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:01:11,309 INFO  L93              Difference]: Finished difference Result 3448 states and 3889 transitions.
[2020-11-25 15:01:11,309 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:01:11,310 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3448 states and 3889 transitions.
[2020-11-25 15:01:11,335 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:01:11,359 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3448 states to 3444 states and 3881 transitions.
[2020-11-25 15:01:11,360 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 15:01:11,362 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1027
[2020-11-25 15:01:11,362 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3444 states and 3881 transitions.
[2020-11-25 15:01:11,370 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:01:11,370 INFO  L728         BuchiCegarLoop]: Abstraction has 3444 states and 3881 transitions.
[2020-11-25 15:01:11,391 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3444 states and 3881 transitions.
[2020-11-25 15:01:11,447 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3444 to 3444.
[2020-11-25 15:01:11,447 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3444 states.
[2020-11-25 15:01:11,452 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3444 states to 3444 states and 3881 transitions.
[2020-11-25 15:01:11,453 INFO  L751         BuchiCegarLoop]: Abstraction has 3444 states and 3881 transitions.
[2020-11-25 15:01:11,453 INFO  L631         BuchiCegarLoop]: Abstraction has 3444 states and 3881 transitions.
[2020-11-25 15:01:11,453 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 15:01:11,453 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3444 states and 3881 transitions.
[2020-11-25 15:01:11,462 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:01:11,462 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:01:11,462 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:01:11,464 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:01:11,464 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_BasicToken0 := false;
[L2]                 call_transfer_BasicToken0 := false;
[L2]     CALL        call main();
[L7234]              assume null == 0;
[L7235]  CALL        call this := FreshRefGenerator__success();
[L3065]              havoc newRef;
[L3066]              assume Alloc[newRef] == false;
[L3067]              Alloc[newRef] := true;
[L3068]              assume newRef != null;
[L7235]  RET         call this := FreshRefGenerator__success();
[L7236]              assume now >= 0;
[L7237]              assume DType[this] == ECU;
[L7238]              assume msgvalue_MSG == 0;
[L7239]              gas := gas - 53000;
[L7240]  CALL        call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L1849]              havoc __exception;
[L1850]              revert := false;
[L1851]  COND FALSE  !(__exception)
[L1880]  CALL        call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L4151]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND TRUE   revert
[L4151]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  COND TRUE   revert
[L1880]  RET         call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]              assume !revert && gas >= 0;
[L7240]  RET         call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L7241]              assume !revert && gas >= 0;
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND FALSE  !(choice == 22)
[L7094]  COND FALSE  !(choice == 21)
[L7100]  COND FALSE  !(choice == 20)
[L7106]  COND FALSE  !(choice == 19)
[L7112]  COND TRUE   choice == 18
[L7113]              gas := gas - 21000;
[L7114]  COND TRUE   gas >= 0
[L7115]              assume _value_s340 >= 0 && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7116]              assume msgvalue_MSG == 0;
[L7117]  CALL        call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s340 && _value_s340 <= balances_BasicToken[this][msgsender_MSG]) && _value_s340 >= 0) && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s340] >= 0) && balances_BasicToken[this][_to_s340] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BasicToken0 := true;
[L2]                 call_transfer_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND FALSE  !(__exception)
[L881]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L3511]              __var_2 := null;
[L3512]  COND TRUE   !(_to_s340 != null)
[L3513]              revert := true;
[L881]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L882]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == true && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this])) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this])) && locked_BasicToken[this] == old(locked_BasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L7117]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L7244]  RET         call CorralChoice_ECU(this);

Loop:
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND FALSE  !(choice == 22)
[L7094]  COND FALSE  !(choice == 21)
[L7100]  COND FALSE  !(choice == 20)
[L7106]  COND FALSE  !(choice == 19)
[L7112]  COND TRUE   choice == 18
[L7113]              gas := gas - 21000;
[L7114]  COND TRUE   gas >= 0
[L7115]              assume _value_s340 >= 0 && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7116]              assume msgvalue_MSG == 0;
[L7117]  CALL        call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s340 && _value_s340 <= balances_BasicToken[this][msgsender_MSG]) && _value_s340 >= 0) && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s340] >= 0) && balances_BasicToken[this][_to_s340] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BasicToken0 := true;
[L2]                 call_transfer_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND FALSE  !(__exception)
[L881]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L3511]              __var_2 := null;
[L3512]  COND TRUE   !(_to_s340 != null)
[L3513]              revert := true;
[L881]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L882]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == true && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this])) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this])) && locked_BasicToken[this] == old(locked_BasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L7117]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L7244]  RET         call CorralChoice_ECU(this);

[2020-11-25 15:01:11,468 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:01:11,468 INFO  L82        PathProgramCache]: Analyzing trace with hash 197602769, now seen corresponding path program 1 times
[2020-11-25 15:01:11,469 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:01:11,480 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:01:11,500 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:01:11,501 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:01:11,501 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:01:11,502 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:01:11,502 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:01:11,502 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:01:11,502 INFO  L87              Difference]: Start difference. First operand 3444 states and 3881 transitions. cyclomatic complexity: 439 Second operand 4 states.
[2020-11-25 15:01:12,150 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:01:12,150 INFO  L93              Difference]: Finished difference Result 4632 states and 5261 transitions.
[2020-11-25 15:01:12,150 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:01:12,151 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4632 states and 5261 transitions.
[2020-11-25 15:01:12,166 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 15:01:12,186 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4632 states to 4536 states and 5153 transitions.
[2020-11-25 15:01:12,186 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1337
[2020-11-25 15:01:12,187 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1337
[2020-11-25 15:01:12,188 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4536 states and 5153 transitions.
[2020-11-25 15:01:12,195 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:01:12,195 INFO  L728         BuchiCegarLoop]: Abstraction has 4536 states and 5153 transitions.
[2020-11-25 15:01:12,199 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4536 states and 5153 transitions.
[2020-11-25 15:01:12,231 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4536 to 3444.
[2020-11-25 15:01:12,231 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3444 states.
[2020-11-25 15:01:12,235 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3444 states to 3444 states and 3737 transitions.
[2020-11-25 15:01:12,235 INFO  L751         BuchiCegarLoop]: Abstraction has 3444 states and 3737 transitions.
[2020-11-25 15:01:12,235 INFO  L631         BuchiCegarLoop]: Abstraction has 3444 states and 3737 transitions.
[2020-11-25 15:01:12,235 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 15:01:12,235 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3444 states and 3737 transitions.
[2020-11-25 15:01:12,241 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:01:12,241 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:01:12,241 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:01:12,245 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:01:12,245 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_BasicToken0 := false;
[L2]                 call_transfer_BasicToken0 := false;
[L2]     CALL        call main();
[L7234]              assume null == 0;
[L7235]  CALL        call this := FreshRefGenerator__success();
[L3065]              havoc newRef;
[L3066]              assume Alloc[newRef] == false;
[L3067]              Alloc[newRef] := true;
[L3068]              assume newRef != null;
[L7235]  RET         call this := FreshRefGenerator__success();
[L7236]              assume now >= 0;
[L7237]              assume DType[this] == ECU;
[L7238]              assume msgvalue_MSG == 0;
[L7239]              gas := gas - 53000;
[L7240]  CALL        call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L1849]              havoc __exception;
[L1850]              revert := false;
[L1851]  COND FALSE  !(__exception)
[L1880]  CALL        call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L4151]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L4151]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  COND FALSE  !(revert)
[L4155]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L4155]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4156]  COND FALSE  !(revert)
[L4159]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L4159]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4160]  COND FALSE  !(revert)
[L4163]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L4163]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4164]  COND FALSE  !(revert)
[L4167]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3696]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3697]  COND FALSE  !(revert)
[L3700]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3700]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3701]  COND FALSE  !(revert)
[L3704]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3704]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3705]  COND FALSE  !(revert)
[L3708]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L3708]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  COND FALSE  !(revert)
[L3712]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]              assume msgsender_MSG != null;
[L3664]              Balance[this] := 0;
[L3665]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3666]              sum_allowed3[this] := 0;
[L3712]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3713]  COND FALSE  !(revert)
[L4167]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4168]  COND FALSE  !(revert)
[L4171]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3992]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3992]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3993]  COND FALSE  !(revert)
[L3996]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3996]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]  COND FALSE  !(revert)
[L4000]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L4000]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4001]  COND FALSE  !(revert)
[L4004]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L4004]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4005]  COND FALSE  !(revert)
[L4008]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3696]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3697]  COND FALSE  !(revert)
[L3700]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3700]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3701]  COND FALSE  !(revert)
[L3704]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3704]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3705]  COND FALSE  !(revert)
[L3708]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L3708]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  COND FALSE  !(revert)
[L3712]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]              assume msgsender_MSG != null;
[L3664]              Balance[this] := 0;
[L3665]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3666]              sum_allowed3[this] := 0;
[L3712]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3713]  COND FALSE  !(revert)
[L4008]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4009]  COND FALSE  !(revert)
[L4012]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3957]              assume msgsender_MSG != null;
[L3958]              Balance[this] := 0;
[L4012]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4013]  COND FALSE  !(revert)
[L4171]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]  COND FALSE  !(revert)
[L4175]  CALL        call ECU_ECU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4099]              assume msgsender_MSG != null;
[L4100]              Balance[this] := 0;
[L4101]              name_ECU[this] := -2027621617;
[L4102]              symbol_ECU[this] := 1342424742;
[L4103]              decimals_ECU[this] := 18;
[L4104]              __var_15 := decimals_ECU[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4105]              initialSupply_ECU[this] := 1000000000 * (nonlinearPow(10, decimals_ECU[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4107]              totalSupply_ERC20Basic[this] := initialSupply_ECU[this];
[L4108]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][19781008330533595146085782002824322930726574509];
[L4109]              balances_BasicToken[this][19781008330533595146085782002824322930726574509] := initialSupply_ECU[this];
[L4110]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][19781008330533595146085782002824322930726574509];
[L4111]              assert { :EventEmitted "Transfer_ECU" } true;
[L4112]              allowedAddresses_BasicToken[this][owner_Ownable[this]] := true;
[L4175]  RET         call ECU_ECU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4176]  COND FALSE  !(revert)
[L1880]  RET         call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]              assume !revert && gas >= 0;
[L7240]  RET         call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L7241]              assume !revert && gas >= 0;
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND FALSE  !(choice == 22)
[L7094]  COND FALSE  !(choice == 21)
[L7100]  COND FALSE  !(choice == 20)
[L7106]  COND FALSE  !(choice == 19)
[L7112]  COND TRUE   choice == 18
[L7113]              gas := gas - 21000;
[L7114]  COND TRUE   gas >= 0
[L7115]              assume _value_s340 >= 0 && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7116]              assume msgvalue_MSG == 0;
[L7117]  CALL        call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s340 && _value_s340 <= balances_BasicToken[this][msgsender_MSG]) && _value_s340 >= 0) && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s340] >= 0) && balances_BasicToken[this][_to_s340] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BasicToken0 := true;
[L2]                 call_transfer_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND TRUE   __exception
[L853]               __tmp__Balance := Balance;
[L854]               __tmp__DType := DType;
[L855]               __tmp__Alloc := Alloc;
[L856]               __tmp__balance_ADDR := balance_ADDR;
[L857]               __tmp__M_Ref_int := M_Ref_int;
[L858]               __tmp__sum_balances0 := sum_balances0;
[L859]               __tmp__M_Ref_bool := M_Ref_bool;
[L860]               __tmp__sum_allowedAddresses1 := sum_allowedAddresses1;
[L861]               __tmp__sum_lockedAddresses2 := sum_lockedAddresses2;
[L862]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L863]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L864]               __tmp__sum_allowed3 := sum_allowed3;
[L865]               __tmp__Length := Length;
[L866]               __tmp__now := now;
[L867]               __tmp__owner_Ownable := owner_Ownable;
[L868]               __tmp__totalSupply_ERC20Basic := totalSupply_ERC20Basic;
[L869]               __tmp__balances_BasicToken := balances_BasicToken;
[L870]               __tmp__allowedAddresses_BasicToken := allowedAddresses_BasicToken;
[L871]               __tmp__lockedAddresses_BasicToken := lockedAddresses_BasicToken;
[L872]               __tmp__locked_BasicToken := locked_BasicToken;
[L873]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L874]               __tmp__name_ECU := name_ECU;
[L875]               __tmp__symbol_ECU := symbol_ECU;
[L876]               __tmp__decimals_ECU := decimals_ECU;
[L877]               __tmp__initialSupply_ECU := initialSupply_ECU;
[L878]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L3455]              __var_2 := null;
[L3456]  COND TRUE   !(_to_s340 != null)
[L3457]              revert := true;
[L878]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L879]               assume revert || gas < 0;
[L7117]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L7244]  RET         call CorralChoice_ECU(this);

Loop:
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND FALSE  !(choice == 22)
[L7094]  COND FALSE  !(choice == 21)
[L7100]  COND FALSE  !(choice == 20)
[L7106]  COND FALSE  !(choice == 19)
[L7112]  COND TRUE   choice == 18
[L7113]              gas := gas - 21000;
[L7114]  COND TRUE   gas >= 0
[L7115]              assume _value_s340 >= 0 && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7116]              assume msgvalue_MSG == 0;
[L7117]  CALL        call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s340 && _value_s340 <= balances_BasicToken[this][msgsender_MSG]) && _value_s340 >= 0) && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s340] >= 0) && balances_BasicToken[this][_to_s340] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BasicToken0 := true;
[L2]                 call_transfer_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND TRUE   __exception
[L853]               __tmp__Balance := Balance;
[L854]               __tmp__DType := DType;
[L855]               __tmp__Alloc := Alloc;
[L856]               __tmp__balance_ADDR := balance_ADDR;
[L857]               __tmp__M_Ref_int := M_Ref_int;
[L858]               __tmp__sum_balances0 := sum_balances0;
[L859]               __tmp__M_Ref_bool := M_Ref_bool;
[L860]               __tmp__sum_allowedAddresses1 := sum_allowedAddresses1;
[L861]               __tmp__sum_lockedAddresses2 := sum_lockedAddresses2;
[L862]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L863]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L864]               __tmp__sum_allowed3 := sum_allowed3;
[L865]               __tmp__Length := Length;
[L866]               __tmp__now := now;
[L867]               __tmp__owner_Ownable := owner_Ownable;
[L868]               __tmp__totalSupply_ERC20Basic := totalSupply_ERC20Basic;
[L869]               __tmp__balances_BasicToken := balances_BasicToken;
[L870]               __tmp__allowedAddresses_BasicToken := allowedAddresses_BasicToken;
[L871]               __tmp__lockedAddresses_BasicToken := lockedAddresses_BasicToken;
[L872]               __tmp__locked_BasicToken := locked_BasicToken;
[L873]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L874]               __tmp__name_ECU := name_ECU;
[L875]               __tmp__symbol_ECU := symbol_ECU;
[L876]               __tmp__decimals_ECU := decimals_ECU;
[L877]               __tmp__initialSupply_ECU := initialSupply_ECU;
[L878]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L3455]              __var_2 := null;
[L3456]  COND TRUE   !(_to_s340 != null)
[L3457]              revert := true;
[L878]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L879]               assume revert || gas < 0;
[L7117]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L7244]  RET         call CorralChoice_ECU(this);

[2020-11-25 15:01:12,251 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:01:12,251 INFO  L82        PathProgramCache]: Analyzing trace with hash 940114450, now seen corresponding path program 1 times
[2020-11-25 15:01:12,252 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:01:12,275 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:01:12,439 INFO  L134       CoverageAnalysis]: Checked inductivity of 1312 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 1312 trivial. 0 not checked.
[2020-11-25 15:01:12,439 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:01:12,439 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 15:01:12,440 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:01:12,440 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 15:01:12,440 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 15:01:12,441 INFO  L87              Difference]: Start difference. First operand 3444 states and 3737 transitions. cyclomatic complexity: 295 Second operand 6 states.
[2020-11-25 15:01:12,521 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:01:12,522 INFO  L93              Difference]: Finished difference Result 3540 states and 3840 transitions.
[2020-11-25 15:01:12,522 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-25 15:01:12,522 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3540 states and 3840 transitions.
[2020-11-25 15:01:12,530 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:01:12,541 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3540 states to 3532 states and 3832 transitions.
[2020-11-25 15:01:12,541 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1040
[2020-11-25 15:01:12,541 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1040
[2020-11-25 15:01:12,541 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3532 states and 3832 transitions.
[2020-11-25 15:01:12,544 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:01:12,545 INFO  L728         BuchiCegarLoop]: Abstraction has 3532 states and 3832 transitions.
[2020-11-25 15:01:12,547 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3532 states and 3832 transitions.
[2020-11-25 15:01:12,573 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3532 to 3519.
[2020-11-25 15:01:12,574 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3519 states.
[2020-11-25 15:01:12,578 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3519 states to 3519 states and 3817 transitions.
[2020-11-25 15:01:12,578 INFO  L751         BuchiCegarLoop]: Abstraction has 3519 states and 3817 transitions.
[2020-11-25 15:01:12,579 INFO  L631         BuchiCegarLoop]: Abstraction has 3519 states and 3817 transitions.
[2020-11-25 15:01:12,579 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 15:01:12,579 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3519 states and 3817 transitions.
[2020-11-25 15:01:12,583 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:01:12,583 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:01:12,583 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:01:12,586 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:01:12,586 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_BasicToken0 := false;
[L2]                 call_transfer_BasicToken0 := false;
[L2]     CALL        call main();
[L7234]              assume null == 0;
[L7235]  CALL        call this := FreshRefGenerator__success();
[L3065]              havoc newRef;
[L3066]              assume Alloc[newRef] == false;
[L3067]              Alloc[newRef] := true;
[L3068]              assume newRef != null;
[L7235]  RET         call this := FreshRefGenerator__success();
[L7236]              assume now >= 0;
[L7237]              assume DType[this] == ECU;
[L7238]              assume msgvalue_MSG == 0;
[L7239]              gas := gas - 53000;
[L7240]  CALL        call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L1849]              havoc __exception;
[L1850]              revert := false;
[L1851]  COND FALSE  !(__exception)
[L1880]  CALL        call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L4151]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L4151]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  COND FALSE  !(revert)
[L4155]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L4155]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4156]  COND FALSE  !(revert)
[L4159]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L4159]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4160]  COND FALSE  !(revert)
[L4163]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L4163]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4164]  COND FALSE  !(revert)
[L4167]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3696]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3697]  COND FALSE  !(revert)
[L3700]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3700]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3701]  COND FALSE  !(revert)
[L3704]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3704]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3705]  COND FALSE  !(revert)
[L3708]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L3708]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  COND FALSE  !(revert)
[L3712]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]              assume msgsender_MSG != null;
[L3664]              Balance[this] := 0;
[L3665]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3666]              sum_allowed3[this] := 0;
[L3712]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3713]  COND FALSE  !(revert)
[L4167]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4168]  COND FALSE  !(revert)
[L4171]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3992]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3992]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3993]  COND FALSE  !(revert)
[L3996]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3996]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]  COND FALSE  !(revert)
[L4000]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L4000]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4001]  COND FALSE  !(revert)
[L4004]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L4004]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4005]  COND FALSE  !(revert)
[L4008]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3696]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3697]  COND FALSE  !(revert)
[L3700]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3700]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3701]  COND FALSE  !(revert)
[L3704]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3704]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3705]  COND FALSE  !(revert)
[L3708]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L3708]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  COND FALSE  !(revert)
[L3712]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]              assume msgsender_MSG != null;
[L3664]              Balance[this] := 0;
[L3665]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3666]              sum_allowed3[this] := 0;
[L3712]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3713]  COND FALSE  !(revert)
[L4008]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4009]  COND FALSE  !(revert)
[L4012]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3957]              assume msgsender_MSG != null;
[L3958]              Balance[this] := 0;
[L4012]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4013]  COND FALSE  !(revert)
[L4171]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]  COND FALSE  !(revert)
[L4175]  CALL        call ECU_ECU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4099]              assume msgsender_MSG != null;
[L4100]              Balance[this] := 0;
[L4101]              name_ECU[this] := -2027621617;
[L4102]              symbol_ECU[this] := 1342424742;
[L4103]              decimals_ECU[this] := 18;
[L4104]              __var_15 := decimals_ECU[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4105]              initialSupply_ECU[this] := 1000000000 * (nonlinearPow(10, decimals_ECU[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4107]              totalSupply_ERC20Basic[this] := initialSupply_ECU[this];
[L4108]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][19781008330533595146085782002824322930726574509];
[L4109]              balances_BasicToken[this][19781008330533595146085782002824322930726574509] := initialSupply_ECU[this];
[L4110]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][19781008330533595146085782002824322930726574509];
[L4111]              assert { :EventEmitted "Transfer_ECU" } true;
[L4112]              allowedAddresses_BasicToken[this][owner_Ownable[this]] := true;
[L4175]  RET         call ECU_ECU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4176]  COND FALSE  !(revert)
[L1880]  RET         call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]              assume !revert && gas >= 0;
[L7240]  RET         call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L7241]              assume !revert && gas >= 0;
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND FALSE  !(choice == 22)
[L7094]  COND FALSE  !(choice == 21)
[L7100]  COND FALSE  !(choice == 20)
[L7106]  COND FALSE  !(choice == 19)
[L7112]  COND TRUE   choice == 18
[L7113]              gas := gas - 21000;
[L7114]  COND TRUE   gas >= 0
[L7115]              assume _value_s340 >= 0 && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7116]              assume msgvalue_MSG == 0;
[L7117]  CALL        call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s340 && _value_s340 <= balances_BasicToken[this][msgsender_MSG]) && _value_s340 >= 0) && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s340] >= 0) && balances_BasicToken[this][_to_s340] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BasicToken0 := true;
[L2]                 call_transfer_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND TRUE   __exception
[L853]               __tmp__Balance := Balance;
[L854]               __tmp__DType := DType;
[L855]               __tmp__Alloc := Alloc;
[L856]               __tmp__balance_ADDR := balance_ADDR;
[L857]               __tmp__M_Ref_int := M_Ref_int;
[L858]               __tmp__sum_balances0 := sum_balances0;
[L859]               __tmp__M_Ref_bool := M_Ref_bool;
[L860]               __tmp__sum_allowedAddresses1 := sum_allowedAddresses1;
[L861]               __tmp__sum_lockedAddresses2 := sum_lockedAddresses2;
[L862]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L863]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L864]               __tmp__sum_allowed3 := sum_allowed3;
[L865]               __tmp__Length := Length;
[L866]               __tmp__now := now;
[L867]               __tmp__owner_Ownable := owner_Ownable;
[L868]               __tmp__totalSupply_ERC20Basic := totalSupply_ERC20Basic;
[L869]               __tmp__balances_BasicToken := balances_BasicToken;
[L870]               __tmp__allowedAddresses_BasicToken := allowedAddresses_BasicToken;
[L871]               __tmp__lockedAddresses_BasicToken := lockedAddresses_BasicToken;
[L872]               __tmp__locked_BasicToken := locked_BasicToken;
[L873]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L874]               __tmp__name_ECU := name_ECU;
[L875]               __tmp__symbol_ECU := symbol_ECU;
[L876]               __tmp__decimals_ECU := decimals_ECU;
[L877]               __tmp__initialSupply_ECU := initialSupply_ECU;
[L878]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L3455]              __var_2 := null;
[L3456]  COND FALSE  !(!(_to_s340 != null))
[L3460]  COND TRUE   __tmp__DType[this] == ECU
[L3461]  CALL        call __var_3 := canTransfer~address_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3421]  COND TRUE   __tmp__locked_BasicToken[this]
[L3422]  COND TRUE   !__tmp__allowedAddresses_BasicToken[this][_addr_s282] && _addr_s282 != __tmp__owner_Ownable[this]
[L3423]              __ret_0_ := false;
[L3461]  RET         call __var_3 := canTransfer~address_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3462]  COND FALSE  !(revert)
[L3483]  COND TRUE   !__var_3
[L3484]              revert := true;
[L878]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L879]               assume revert || gas < 0;
[L7117]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L7244]  RET         call CorralChoice_ECU(this);

Loop:
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND FALSE  !(choice == 22)
[L7094]  COND FALSE  !(choice == 21)
[L7100]  COND FALSE  !(choice == 20)
[L7106]  COND FALSE  !(choice == 19)
[L7112]  COND TRUE   choice == 18
[L7113]              gas := gas - 21000;
[L7114]  COND TRUE   gas >= 0
[L7115]              assume _value_s340 >= 0 && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7116]              assume msgvalue_MSG == 0;
[L7117]  CALL        call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s340 && _value_s340 <= balances_BasicToken[this][msgsender_MSG]) && _value_s340 >= 0) && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s340] >= 0) && balances_BasicToken[this][_to_s340] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BasicToken0 := true;
[L2]                 call_transfer_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND TRUE   __exception
[L853]               __tmp__Balance := Balance;
[L854]               __tmp__DType := DType;
[L855]               __tmp__Alloc := Alloc;
[L856]               __tmp__balance_ADDR := balance_ADDR;
[L857]               __tmp__M_Ref_int := M_Ref_int;
[L858]               __tmp__sum_balances0 := sum_balances0;
[L859]               __tmp__M_Ref_bool := M_Ref_bool;
[L860]               __tmp__sum_allowedAddresses1 := sum_allowedAddresses1;
[L861]               __tmp__sum_lockedAddresses2 := sum_lockedAddresses2;
[L862]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L863]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L864]               __tmp__sum_allowed3 := sum_allowed3;
[L865]               __tmp__Length := Length;
[L866]               __tmp__now := now;
[L867]               __tmp__owner_Ownable := owner_Ownable;
[L868]               __tmp__totalSupply_ERC20Basic := totalSupply_ERC20Basic;
[L869]               __tmp__balances_BasicToken := balances_BasicToken;
[L870]               __tmp__allowedAddresses_BasicToken := allowedAddresses_BasicToken;
[L871]               __tmp__lockedAddresses_BasicToken := lockedAddresses_BasicToken;
[L872]               __tmp__locked_BasicToken := locked_BasicToken;
[L873]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L874]               __tmp__name_ECU := name_ECU;
[L875]               __tmp__symbol_ECU := symbol_ECU;
[L876]               __tmp__decimals_ECU := decimals_ECU;
[L877]               __tmp__initialSupply_ECU := initialSupply_ECU;
[L878]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L3455]              __var_2 := null;
[L3456]  COND FALSE  !(!(_to_s340 != null))
[L3460]  COND TRUE   __tmp__DType[this] == ECU
[L3461]  CALL        call __var_3 := canTransfer~address_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3421]  COND TRUE   __tmp__locked_BasicToken[this]
[L3422]  COND TRUE   !__tmp__allowedAddresses_BasicToken[this][_addr_s282] && _addr_s282 != __tmp__owner_Ownable[this]
[L3423]              __ret_0_ := false;
[L3461]  RET         call __var_3 := canTransfer~address_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3462]  COND FALSE  !(revert)
[L3483]  COND TRUE   !__var_3
[L3484]              revert := true;
[L878]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L879]               assume revert || gas < 0;
[L7117]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L7244]  RET         call CorralChoice_ECU(this);

[2020-11-25 15:01:12,592 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:01:12,592 INFO  L82        PathProgramCache]: Analyzing trace with hash -486399142, now seen corresponding path program 1 times
[2020-11-25 15:01:12,593 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:01:12,639 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:01:12,680 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:01:12,858 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:01:12,859 INFO  L82        PathProgramCache]: Analyzing trace with hash -1686990171, now seen corresponding path program 1 times
[2020-11-25 15:01:12,860 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:01:12,867 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:01:12,876 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:01:12,892 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:01:12,892 INFO  L82        PathProgramCache]: Analyzing trace with hash 140652268, now seen corresponding path program 1 times
[2020-11-25 15:01:12,893 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:01:12,940 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:01:13,036 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 15:01:13,363 WARN  L188               SmtUtils]: Spent 133.00 ms on a formula simplification. DAG size of input: 165 DAG size of output: 156
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3137 to 6271
[2020-11-25 15:01:13,502 WARN  L188               SmtUtils]: Spent 117.00 ms on a formula simplification. DAG size of input: 117 DAG size of output: 113
[2020-11-25 15:01:13,680 WARN  L188               SmtUtils]: Spent 175.00 ms on a formula simplification that was a NOOP. DAG size: 283
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3517 to 7027
[2020-11-25 15:01:13,860 WARN  L188               SmtUtils]: Spent 168.00 ms on a formula simplification that was a NOOP. DAG size: 225
[2020-11-25 15:01:14,286 WARN  L188               SmtUtils]: Spent 423.00 ms on a formula simplification. DAG size of input: 289 DAG size of output: 271
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 6271 to 12541
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 4027 to 8053
[2020-11-25 15:01:14,533 WARN  L188               SmtUtils]: Spent 126.00 ms on a formula simplification that was a NOOP. DAG size: 355
Garbage collection #1: 149 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.003s total
Resizing node table from 9181 to 18353
[2020-11-25 15:01:14,682 WARN  L188               SmtUtils]: Spent 135.00 ms on a formula simplification that was a NOOP. DAG size: 286
[2020-11-25 15:01:14,820 WARN  L188               SmtUtils]: Spent 136.00 ms on a formula simplification that was a NOOP. DAG size: 286
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 15:01:14,899 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
[2020-11-25 15:01:15,589 WARN  L188               SmtUtils]: Spent 126.00 ms on a formula simplification. DAG size of input: 197 DAG size of output: 187
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-25 15:01:16,339 WARN  L188               SmtUtils]: Spent 645.00 ms on a formula simplification. DAG size of input: 326 DAG size of output: 314
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-25 15:01:16,592 WARN  L188               SmtUtils]: Spent 115.00 ms on a formula simplification that was a NOOP. DAG size: 290
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 15:01:17,045 WARN  L188               SmtUtils]: Spent 129.00 ms on a formula simplification that was a NOOP. DAG size: 226
[2020-11-25 15:01:17,557 WARN  L188               SmtUtils]: Spent 509.00 ms on a formula simplification. DAG size of input: 289 DAG size of output: 272
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-25 15:01:17,719 WARN  L188               SmtUtils]: Spent 146.00 ms on a formula simplification. DAG size of input: 165 DAG size of output: 161
[2020-11-25 15:01:17,919 WARN  L188               SmtUtils]: Spent 198.00 ms on a formula simplification that was a NOOP. DAG size: 356
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
[2020-11-25 15:01:18,070 WARN  L188               SmtUtils]: Spent 147.00 ms on a formula simplification that was a NOOP. DAG size: 287
[2020-11-25 15:01:19,181 WARN  L188               SmtUtils]: Spent 1.11 s on a formula simplification. DAG size of input: 520 DAG size of output: 509
Garbage collection #1: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #2: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #3: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #4: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #5: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #6: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 15:01:19,359 WARN  L188               SmtUtils]: Spent 167.00 ms on a formula simplification. DAG size of input: 217 DAG size of output: 214
[2020-11-25 15:01:19,536 WARN  L188               SmtUtils]: Spent 156.00 ms on a formula simplification that was a NOOP. DAG size: 334
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 15:01:19,909 WARN  L188               SmtUtils]: Spent 298.00 ms on a formula simplification. DAG size of input: 336 DAG size of output: 335
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 15:01:20,075 WARN  L188               SmtUtils]: Spent 163.00 ms on a formula simplification that was a NOOP. DAG size: 331
[2020-11-25 15:01:20,098 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:01:20,128 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:01:20,141 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:01:20 BasicIcfg
[2020-11-25 15:01:20,142 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 15:01:20,142 INFO  L168              Benchmark]: Toolchain (without parser) took 13472.18 ms. Allocated memory was 1.0 GB in the beginning and 2.2 GB in the end (delta: 1.1 GB). Free memory was 929.8 MB in the beginning and 1.8 GB in the end (delta: -906.5 MB). Peak memory consumption was 1.0 GB. Max. memory is 15.3 GB.
[2020-11-25 15:01:20,142 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:01:20,143 INFO  L168              Benchmark]: Boogie Preprocessor took 112.69 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 15:01:20,143 INFO  L168              Benchmark]: UtopiaSpecLang took 73.25 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:01:20,143 INFO  L168              Benchmark]: Boogie Printer took 21.51 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:01:20,143 INFO  L168              Benchmark]: RCFGBuilder took 1052.18 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 64.0 MB). Free memory was 903.0 MB in the beginning and 987.7 MB in the end (delta: -84.7 MB). Peak memory consumption was 192.1 MB. Max. memory is 15.3 GB.
[2020-11-25 15:01:20,144 INFO  L168              Benchmark]: UtopiaLTL2Aut took 34.89 ms. Allocated memory is still 1.1 GB. Free memory was 987.7 MB in the beginning and 980.8 MB in the end (delta: 6.9 MB). Peak memory consumption was 6.9 MB. Max. memory is 15.3 GB.
[2020-11-25 15:01:20,144 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1962.59 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 160.4 MB). Free memory was 980.8 MB in the beginning and 814.6 MB in the end (delta: 166.3 MB). Peak memory consumption was 489.0 MB. Max. memory is 15.3 GB.
[2020-11-25 15:01:20,144 INFO  L168              Benchmark]: BlockEncodingV2 took 191.29 ms. Allocated memory is still 1.3 GB. Free memory was 814.6 MB in the beginning and 718.5 MB in the end (delta: 96.1 MB). Peak memory consumption was 96.1 MB. Max. memory is 15.3 GB.
[2020-11-25 15:01:20,145 INFO  L168              Benchmark]: BuchiAutomizer took 10020.64 ms. Allocated memory was 1.3 GB in the beginning and 2.2 GB in the end (delta: 910.7 MB). Free memory was 718.5 MB in the beginning and 1.8 GB in the end (delta: -1.1 GB). Peak memory consumption was 612.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:01:20,147 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    6260 locations, 11462 edges
  - StatisticsResult: Encoded RCFG
    6198 locations, 11305 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 112.69 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 73.25 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 21.51 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1052.18 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 64.0 MB). Free memory was 903.0 MB in the beginning and 987.7 MB in the end (delta: -84.7 MB). Peak memory consumption was 192.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 34.89 ms. Allocated memory is still 1.1 GB. Free memory was 987.7 MB in the beginning and 980.8 MB in the end (delta: 6.9 MB). Peak memory consumption was 6.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1962.59 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 160.4 MB). Free memory was 980.8 MB in the beginning and 814.6 MB in the end (delta: 166.3 MB). Peak memory consumption was 489.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 191.29 ms. Allocated memory is still 1.3 GB. Free memory was 814.6 MB in the beginning and 718.5 MB in the end (delta: 96.1 MB). Peak memory consumption was 96.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 10020.64 ms. Allocated memory was 1.3 GB in the beginning and 2.2 GB in the end (delta: 910.7 MB). Free memory was 718.5 MB in the beginning and 1.8 GB in the end (delta: -1.1 GB). Peak memory consumption was 612.4 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2505 locations, 3476 edges
  - StatisticsResult: BuchiProgram size
    6260 locations, 11462 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 6 locations. The remainder module has 3519 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 9.9s and 4 iterations.  TraceHistogramMax:12. Analysis of lassos took 8.2s. Construction of modules took 0.9s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 1105 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3519 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 12050 SDtfs, 8758 SDslu, 21687 SDs, 0 SdLazy, 2103 SolverSat, 2008 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.9s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(19781008330533595146085782002824322930726574517) = (new ECU)({from : 19781008330533595146085782002824322930726574511});
[L1849]              havoc __exception;
[L1850]              revert := false;
[L1851]  COND FALSE  !(__exception)
[L1880]  CALL        call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L4151]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L4151]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  COND FALSE  !(revert)
[L4155]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L4155]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4156]  COND FALSE  !(revert)
[L4159]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L4159]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4160]  COND FALSE  !(revert)
[L4163]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L4163]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4164]  COND FALSE  !(revert)
[L4167]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3696]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3697]  COND FALSE  !(revert)
[L3700]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3700]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3701]  COND FALSE  !(revert)
[L3704]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3704]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3705]  COND FALSE  !(revert)
[L3708]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L3708]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  COND FALSE  !(revert)
[L3712]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]              assume msgsender_MSG != null;
[L3664]              Balance[this] := 0;
[L3665]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3666]              sum_allowed3[this] := 0;
[L3712]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3713]  COND FALSE  !(revert)
[L4167]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4168]  COND FALSE  !(revert)
[L4171]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3992]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3992]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3993]  COND FALSE  !(revert)
[L3996]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3996]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]  COND FALSE  !(revert)
[L4000]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L4000]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4001]  COND FALSE  !(revert)
[L4004]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L4004]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4005]  COND FALSE  !(revert)
[L4008]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3696]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3697]  COND FALSE  !(revert)
[L3700]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3700]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3701]  COND FALSE  !(revert)
[L3704]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3704]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3705]  COND FALSE  !(revert)
[L3708]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L3708]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  COND FALSE  !(revert)
[L3712]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]              assume msgsender_MSG != null;
[L3664]              Balance[this] := 0;
[L3665]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3666]              sum_allowed3[this] := 0;
[L3712]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3713]  COND FALSE  !(revert)
[L4008]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4009]  COND FALSE  !(revert)
[L4012]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3957]              assume msgsender_MSG != null;
[L3958]              Balance[this] := 0;
[L4012]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4013]  COND FALSE  !(revert)
[L4171]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]  COND FALSE  !(revert)
[L4175]  CALL        call ECU_ECU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4099]              assume msgsender_MSG != null;
[L4100]              Balance[this] := 0;
[L4101]              name_ECU[this] := -2027621617;
[L4102]              symbol_ECU[this] := 1342424742;
[L4103]              decimals_ECU[this] := 18;
[L4104]              __var_15 := decimals_ECU[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4105]              initialSupply_ECU[this] := 1000000000 * (nonlinearPow(10, decimals_ECU[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4107]              totalSupply_ERC20Basic[this] := initialSupply_ECU[this];
[L4108]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][19781008330533595146085782002824322930726574509];
[L4109]              balances_BasicToken[this][19781008330533595146085782002824322930726574509] := initialSupply_ECU[this];
[L4110]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][19781008330533595146085782002824322930726574509];
[L4111]              assert { :EventEmitted "Transfer_ECU" } true;
[L4112]              allowedAddresses_BasicToken[this][owner_Ownable[this]] := true;
[L4175]  RET         call ECU_ECU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4176]  COND FALSE  !(revert)
[L1880]  RET         call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]              assume !revert && gas >= 0;
[L7240]  RET         call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
BasicToken(19781008330533595146085782002824322930726574517).transfer~address~uint256.gas(3979002)({from : 19781008330533595146085782002824322930726574518, _to : 19781008330533595146085782002824322930726574518, _value : 0});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s340 && _value_s340 <= balances_BasicToken[this][msgsender_MSG]) && _value_s340 >= 0) && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s340] >= 0) && balances_BasicToken[this][_to_s340] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BasicToken0 := true;
[L2]                 call_transfer_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND TRUE   __exception
[L853]               __tmp__Balance := Balance;
[L854]               __tmp__DType := DType;
[L855]               __tmp__Alloc := Alloc;
[L856]               __tmp__balance_ADDR := balance_ADDR;
[L857]               __tmp__M_Ref_int := M_Ref_int;
[L858]               __tmp__sum_balances0 := sum_balances0;
[L859]               __tmp__M_Ref_bool := M_Ref_bool;
[L860]               __tmp__sum_allowedAddresses1 := sum_allowedAddresses1;
[L861]               __tmp__sum_lockedAddresses2 := sum_lockedAddresses2;
[L862]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L863]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L864]               __tmp__sum_allowed3 := sum_allowed3;
[L865]               __tmp__Length := Length;
[L866]               __tmp__now := now;
[L867]               __tmp__owner_Ownable := owner_Ownable;
[L868]               __tmp__totalSupply_ERC20Basic := totalSupply_ERC20Basic;
[L869]               __tmp__balances_BasicToken := balances_BasicToken;
[L870]               __tmp__allowedAddresses_BasicToken := allowedAddresses_BasicToken;
[L871]               __tmp__lockedAddresses_BasicToken := lockedAddresses_BasicToken;
[L872]               __tmp__locked_BasicToken := locked_BasicToken;
[L873]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L874]               __tmp__name_ECU := name_ECU;
[L875]               __tmp__symbol_ECU := symbol_ECU;
[L876]               __tmp__decimals_ECU := decimals_ECU;
[L877]               __tmp__initialSupply_ECU := initialSupply_ECU;
[L878]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L3455]              __var_2 := null;
[L3456]  COND FALSE  !(!(_to_s340 != null))
[L3460]  COND TRUE   __tmp__DType[this] == ECU
[L3461]  CALL        call __var_3 := canTransfer~address_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3421]  COND TRUE   __tmp__locked_BasicToken[this]
[L3422]  COND TRUE   !__tmp__allowedAddresses_BasicToken[this][_addr_s282] && _addr_s282 != __tmp__owner_Ownable[this]
[L3423]              __ret_0_ := false;
[L3461]  RET         call __var_3 := canTransfer~address_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3462]  COND FALSE  !(revert)
[L3483]  COND TRUE   !__var_3
[L3484]              revert := true;
[L878]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L879]               assume revert || gas < 0;
[L7117]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);

Loop:
BasicToken(19781008330533595146085782002824322930726574517).transfer~address~uint256.gas(3979001)({from : 19781008330533595146085782002824322930726574512, _to : 19781008330533595146085782002824322930726574512, _value : 0});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s340 && _value_s340 <= balances_BasicToken[this][msgsender_MSG]) && _value_s340 >= 0) && _value_s340 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s340] >= 0) && balances_BasicToken[this][_to_s340] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BasicToken0 := true;
[L2]                 call_transfer_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L850]               havoc __exception;
[L851]               revert := false;
[L852]   COND TRUE   __exception
[L853]               __tmp__Balance := Balance;
[L854]               __tmp__DType := DType;
[L855]               __tmp__Alloc := Alloc;
[L856]               __tmp__balance_ADDR := balance_ADDR;
[L857]               __tmp__M_Ref_int := M_Ref_int;
[L858]               __tmp__sum_balances0 := sum_balances0;
[L859]               __tmp__M_Ref_bool := M_Ref_bool;
[L860]               __tmp__sum_allowedAddresses1 := sum_allowedAddresses1;
[L861]               __tmp__sum_lockedAddresses2 := sum_lockedAddresses2;
[L862]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L863]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L864]               __tmp__sum_allowed3 := sum_allowed3;
[L865]               __tmp__Length := Length;
[L866]               __tmp__now := now;
[L867]               __tmp__owner_Ownable := owner_Ownable;
[L868]               __tmp__totalSupply_ERC20Basic := totalSupply_ERC20Basic;
[L869]               __tmp__balances_BasicToken := balances_BasicToken;
[L870]               __tmp__allowedAddresses_BasicToken := allowedAddresses_BasicToken;
[L871]               __tmp__lockedAddresses_BasicToken := lockedAddresses_BasicToken;
[L872]               __tmp__locked_BasicToken := locked_BasicToken;
[L873]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L874]               __tmp__name_ECU := name_ECU;
[L875]               __tmp__symbol_ECU := symbol_ECU;
[L876]               __tmp__decimals_ECU := decimals_ECU;
[L877]               __tmp__initialSupply_ECU := initialSupply_ECU;
[L878]   CALL        call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L3455]              __var_2 := null;
[L3456]  COND FALSE  !(!(_to_s340 != null))
[L3460]  COND TRUE   __tmp__DType[this] == ECU
[L3461]  CALL        call __var_3 := canTransfer~address_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3421]  COND TRUE   __tmp__locked_BasicToken[this]
[L3422]  COND TRUE   !__tmp__allowedAddresses_BasicToken[this][_addr_s282] && _addr_s282 != __tmp__owner_Ownable[this]
[L3423]              __ret_0_ := false;
[L3461]  RET         call __var_3 := canTransfer~address_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3462]  COND FALSE  !(revert)
[L3483]  COND TRUE   !__var_3
[L3484]              revert := true;
[L878]   RET         call __ret_0_ := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);
[L879]               assume revert || gas < 0;
[L7117]  RET         call __ret_0_transfer := transfer~address~uint256_BasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s340, _value_s340);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
