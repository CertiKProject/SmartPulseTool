This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 15:00:32,604 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 15:00:32,606 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 15:00:32,616 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 15:00:32,616 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 15:00:32,617 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 15:00:32,618 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 15:00:32,619 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 15:00:32,621 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 15:00:32,621 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 15:00:32,622 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 15:00:32,622 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 15:00:32,623 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 15:00:32,624 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 15:00:32,624 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 15:00:32,625 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 15:00:32,625 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 15:00:32,627 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 15:00:32,628 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 15:00:32,629 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 15:00:32,630 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 15:00:32,630 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 15:00:32,632 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 15:00:32,632 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 15:00:32,633 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 15:00:32,633 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 15:00:32,633 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 15:00:32,634 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 15:00:32,634 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 15:00:32,634 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 15:00:32,635 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 15:00:32,635 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 15:00:32,636 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 15:00:32,636 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 15:00:32,637 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 15:00:32,637 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 15:00:32,637 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 15:00:32,638 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 15:00:32,638 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 15:00:32,638 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 15:00:32,639 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 15:00:32,639 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 15:00:32,647 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 15:00:32,647 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 15:00:32,648 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 15:00:32,648 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 15:00:32,648 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 15:00:32,648 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 15:00:32,648 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 15:00:32,648 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 15:00:32,648 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 15:00:32,649 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 15:00:32,649 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 15:00:32,649 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 15:00:32,649 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 15:00:32,649 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 15:00:32,649 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 15:00:32,649 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 15:00:32,649 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 15:00:32,649 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 15:00:32,650 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 15:00:32,650 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 15:00:32,650 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 15:00:32,650 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 15:00:32,650 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 15:00:32,650 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 15:00:32,650 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 15:00:32,650 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 15:00:32,675 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 15:00:32,687 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 15:00:32,690 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 15:00:32,692 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 15:00:32,693 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 15:00:32,693 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl
[2020-11-25 15:00:32,694 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl'
[2020-11-25 15:00:32,793 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 15:00:32,794 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 15:00:32,794 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 15:00:32,794 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 15:00:32,794 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 15:00:32,811 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:00:32" (1/1) ...
[2020-11-25 15:00:32,812 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:00:32" (1/1) ...
[2020-11-25 15:00:32,850 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:00:32" (1/1) ...
[2020-11-25 15:00:32,850 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:00:32" (1/1) ...
[2020-11-25 15:00:32,878 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:00:32" (1/1) ...
[2020-11-25 15:00:32,893 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:00:32" (1/1) ...
[2020-11-25 15:00:32,905 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:00:32" (1/1) ...
[2020-11-25 15:00:32,918 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 15:00:32,919 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 15:00:32,919 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 15:00:32,921 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 15:00:32,924 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:00:32" (1/1) ...
[2020-11-25 15:00:32,943 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(StandardToken.allowance(owner, spender), allowed_StandardToken[this][owner][spender] >= 0 && allowed_StandardToken[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.allowance(owner, spender), return == allowed_StandardToken[this][owner][spender] &&  totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this]) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this]) && locked_BasicToken[this] == old(locked_BasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 15:00:32,948 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(StandardToken.allowance(owner, spender), allowed_StandardToken[this][owner][spender] >= 0 && allowed_StandardToken[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.allowance(owner, spender), return == allowed_StandardToken[this][owner][spender] &&  totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this]) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this]) && locked_BasicToken[this] == old(locked_BasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 15:00:32,956 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(StandardToken.allowance(owner, spender), allowed_StandardToken[this][owner][spender] >= 0 && allowed_StandardToken[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.allowance(owner, spender), return == allowed_StandardToken[this][owner][spender] &&  totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this]) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this]) && locked_BasicToken[this] == old(locked_BasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 15:00:32,963 INFO  L636   opiaSpecLangObserver]: Parsed ( allowed_StandardToken[this][_owner_s525][_spender_s525]>=0 && allowed_StandardToken[this][_owner_s525][_spender_s525]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],[IdentifierExpression[_owner_s525,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],[IdentifierExpression[_spender_s525,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],[IdentifierExpression[_owner_s525,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],[IdentifierExpression[_spender_s525,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 15:00:32,966 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( remaining_s525==allowed_StandardToken[this][_owner_s525][_spender_s525] && totalSupply_ERC20Basic[this]==( old(totalSupply_ERC20Basic[this]) ) ) && balances_BasicToken[this]==( old(balances_BasicToken[this]) ) ) && allowed_StandardToken[this]==( old(allowed_StandardToken[this]) ) ) && allowedAddresses_BasicToken[this]==( old(allowedAddresses_BasicToken[this]) ) ) && lockedAddresses_BasicToken[this]==( old(lockedAddresses_BasicToken[this]) ) ) && locked_BasicToken[this]==( old(locked_BasicToken[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[remaining_s525,<IMPLEMENTATION_OUTPARAM,allowance~address~address_StandardToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],[IdentifierExpression[_owner_s525,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],[IdentifierExpression[_spender_s525,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_ERC20Basic,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_ERC20Basic,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowedAddresses_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowedAddresses_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[lockedAddresses_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[lockedAddresses_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[locked_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[locked_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]]
[2020-11-25 15:00:32,972 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(StandardToken.allowance(owner, spender), allowed_StandardToken[this][owner][spender] >= 0 && allowed_StandardToken[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.allowance(owner, spender), return == allowed_StandardToken[this][owner][spender] &&  totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this]) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this]) && locked_BasicToken[this] == old(locked_BasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 15:00:32,972 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_allowance_StandardToken0) ==> ( <>AP(success_allowance_StandardToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 15:00:32,987 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:00:32 PropertyContainer
[2020-11-25 15:00:32,987 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 15:00:32,988 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 15:00:32,988 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 15:00:32,988 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 15:00:32,989 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:00:32" (1/2) ...
[2020-11-25 15:00:32,990 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 15:00:32,990 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 15:00:33,009 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:00:32" (2/2) ...
[2020-11-25 15:00:33,010 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 15:00:33,010 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 15:00:33,010 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 15:00:33,010 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 15:00:33,011 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:00:32" (1/2) ...
[2020-11-25 15:00:33,063 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 15:00:33,064 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:00:33,064 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 15:00:33,064 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 15:00:33,064 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:00:33,064 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 15:00:33,064 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 15:00:33,064 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:00:33,064 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 15:00:33,064 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 15:00:33,065 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 15:00:33,065 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 15:00:33,065 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 15:00:33,065 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 15:00:33,065 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 15:00:33,065 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 15:00:33,065 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-25 15:00:33,065 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-25 15:00:33,066 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-25 15:00:33,066 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-25 15:00:33,066 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-25 15:00:33,066 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20Basic
[2020-11-25 15:00:33,066 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 15:00:33,066 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-25 15:00:33,066 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-25 15:00:33,066 INFO  L130     BoogieDeclarations]: Found specification of procedure allowAddress~address~bool_BasicToken
[2020-11-25 15:00:33,066 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowAddress~address~bool_BasicToken
[2020-11-25 15:00:33,066 INFO  L130     BoogieDeclarations]: Found specification of procedure lockAddress~address~bool_BasicToken
[2020-11-25 15:00:33,066 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockAddress~address~bool_BasicToken
[2020-11-25 15:00:33,067 INFO  L130     BoogieDeclarations]: Found specification of procedure setLocked~bool_BasicToken
[2020-11-25 15:00:33,067 INFO  L138     BoogieDeclarations]: Found implementation of procedure setLocked~bool_BasicToken
[2020-11-25 15:00:33,067 INFO  L130     BoogieDeclarations]: Found specification of procedure canTransfer~address_BasicToken
[2020-11-25 15:00:33,067 INFO  L138     BoogieDeclarations]: Found implementation of procedure canTransfer~address_BasicToken
[2020-11-25 15:00:33,067 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-25 15:00:33,067 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-25 15:00:33,067 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-25 15:00:33,067 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-25 15:00:33,067 INFO  L130     BoogieDeclarations]: Found specification of procedure allowedAddresses~address_BasicToken
[2020-11-25 15:00:33,067 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowedAddresses~address_BasicToken
[2020-11-25 15:00:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAddresses~address_BasicToken
[2020-11-25 15:00:33,068 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAddresses~address_BasicToken
[2020-11-25 15:00:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure locked_BasicToken
[2020-11-25 15:00:33,068 INFO  L138     BoogieDeclarations]: Found implementation of procedure locked_BasicToken
[2020-11-25 15:00:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:00:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 15:00:33,068 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 15:00:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 15:00:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 15:00:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 15:00:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 15:00:33,069 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-25 15:00:33,069 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-25 15:00:33,069 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 15:00:33,069 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 15:00:33,069 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-25 15:00:33,069 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-25 15:00:33,069 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-25 15:00:33,069 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-25 15:00:33,069 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 15:00:33,069 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 15:00:33,070 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 15:00:33,070 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 15:00:33,070 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-25 15:00:33,070 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken
[2020-11-25 15:00:33,070 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken
[2020-11-25 15:00:33,070 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken
[2020-11-25 15:00:33,070 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken
[2020-11-25 15:00:33,070 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU_NoBaseCtor__success
[2020-11-25 15:00:33,070 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU
[2020-11-25 15:00:33,071 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU
[2020-11-25 15:00:33,071 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ECU
[2020-11-25 15:00:33,071 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ECU
[2020-11-25 15:00:33,071 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ECU
[2020-11-25 15:00:33,071 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ECU
[2020-11-25 15:00:33,071 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ECU
[2020-11-25 15:00:33,071 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ECU
[2020-11-25 15:00:33,071 INFO  L130     BoogieDeclarations]: Found specification of procedure initialSupply_ECU
[2020-11-25 15:00:33,071 INFO  L138     BoogieDeclarations]: Found implementation of procedure initialSupply_ECU
[2020-11-25 15:00:33,071 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 15:00:33,071 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 15:00:33,072 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 15:00:33,072 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 15:00:33,072 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 15:00:33,072 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 15:00:33,072 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 15:00:33,072 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 15:00:33,072 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-25 15:00:33,072 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-25 15:00:33,072 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-25 15:00:33,072 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-25 15:00:33,073 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 15:00:33,073 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 15:00:33,073 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-25 15:00:33,073 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-25 15:00:33,073 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BurnableToken
[2020-11-25 15:00:33,073 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BurnableToken
[2020-11-25 15:00:33,073 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ECU
[2020-11-25 15:00:33,073 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 15:00:33,073 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 15:00:33,073 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:00:33,073 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 15:00:33,074 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 15:00:33,074 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:00:33,074 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 15:00:33,074 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 15:00:33,074 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:00:33,074 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 15:00:33,074 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 15:00:33,074 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 15:00:33,074 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 15:00:33,074 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 15:00:33,075 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 15:00:33,075 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 15:00:33,075 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 15:00:33,075 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 15:00:33,075 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 15:00:33,075 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic__success
[2020-11-25 15:00:33,075 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic__fail
[2020-11-25 15:00:33,075 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 15:00:33,075 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-25 15:00:33,075 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-25 15:00:33,076 INFO  L130     BoogieDeclarations]: Found specification of procedure allowAddress~address~bool_BasicToken__success
[2020-11-25 15:00:33,076 INFO  L130     BoogieDeclarations]: Found specification of procedure allowAddress~address~bool_BasicToken__fail
[2020-11-25 15:00:33,076 INFO  L130     BoogieDeclarations]: Found specification of procedure lockAddress~address~bool_BasicToken__success
[2020-11-25 15:00:33,076 INFO  L130     BoogieDeclarations]: Found specification of procedure lockAddress~address~bool_BasicToken__fail
[2020-11-25 15:00:33,076 INFO  L130     BoogieDeclarations]: Found specification of procedure setLocked~bool_BasicToken__success
[2020-11-25 15:00:33,076 INFO  L130     BoogieDeclarations]: Found specification of procedure setLocked~bool_BasicToken__fail
[2020-11-25 15:00:33,076 INFO  L130     BoogieDeclarations]: Found specification of procedure canTransfer~address_BasicToken__success
[2020-11-25 15:00:33,076 INFO  L130     BoogieDeclarations]: Found specification of procedure canTransfer~address_BasicToken__fail
[2020-11-25 15:00:33,076 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 15:00:33,076 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 15:00:33,077 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-25 15:00:33,077 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-25 15:00:33,077 INFO  L130     BoogieDeclarations]: Found specification of procedure allowedAddresses~address_BasicToken__success
[2020-11-25 15:00:33,077 INFO  L130     BoogieDeclarations]: Found specification of procedure allowedAddresses~address_BasicToken__fail
[2020-11-25 15:00:33,077 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAddresses~address_BasicToken__success
[2020-11-25 15:00:33,077 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAddresses~address_BasicToken__fail
[2020-11-25 15:00:33,077 INFO  L130     BoogieDeclarations]: Found specification of procedure locked_BasicToken__success
[2020-11-25 15:00:33,077 INFO  L130     BoogieDeclarations]: Found specification of procedure locked_BasicToken__fail
[2020-11-25 15:00:33,077 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:00:33,078 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 15:00:33,078 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 15:00:33,078 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 15:00:33,078 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-25 15:00:33,078 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-25 15:00:33,078 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 15:00:33,078 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 15:00:33,078 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-25 15:00:33,078 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 15:00:33,078 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-25 15:00:33,079 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-25 15:00:33,079 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 15:00:33,079 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 15:00:33,079 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 15:00:33,079 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 15:00:33,079 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-25 15:00:33,079 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__success
[2020-11-25 15:00:33,079 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__fail
[2020-11-25 15:00:33,079 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__success
[2020-11-25 15:00:33,079 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__fail
[2020-11-25 15:00:33,079 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU_NoBaseCtor__fail
[2020-11-25 15:00:33,080 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU__success
[2020-11-25 15:00:33,080 INFO  L130     BoogieDeclarations]: Found specification of procedure ECU_ECU__fail
[2020-11-25 15:00:33,080 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ECU__success
[2020-11-25 15:00:33,080 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ECU__fail
[2020-11-25 15:00:33,080 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ECU__success
[2020-11-25 15:00:33,080 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ECU__fail
[2020-11-25 15:00:33,080 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ECU__success
[2020-11-25 15:00:33,080 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ECU__fail
[2020-11-25 15:00:33,080 INFO  L130     BoogieDeclarations]: Found specification of procedure initialSupply_ECU__success
[2020-11-25 15:00:33,080 INFO  L130     BoogieDeclarations]: Found specification of procedure initialSupply_ECU__fail
[2020-11-25 15:00:33,080 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 15:00:33,081 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 15:00:33,081 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 15:00:33,081 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 15:00:33,081 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 15:00:33,081 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 15:00:33,081 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:00:33,081 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:00:33,081 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 15:00:33,081 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 15:00:33,081 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:00:33,081 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:00:33,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 15:00:33,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 15:00:33,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 15:00:33,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 15:00:33,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:00:33,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:00:33,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 15:00:33,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 15:00:33,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 15:00:33,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 15:00:33,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 15:00:33,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 15:00:33,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 15:00:33,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 15:00:33,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 15:00:33,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 15:00:33,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 15:00:33,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 15:00:33,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20Basic__fail
[2020-11-25 15:00:33,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20Basic__success
[2020-11-25 15:00:33,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 15:00:33,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 15:00:33,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-25 15:00:33,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-25 15:00:33,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowAddress~address~bool_BasicToken__fail
[2020-11-25 15:00:33,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowAddress~address~bool_BasicToken__success
[2020-11-25 15:00:33,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockAddress~address~bool_BasicToken__fail
[2020-11-25 15:00:33,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockAddress~address~bool_BasicToken__success
[2020-11-25 15:00:33,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure setLocked~bool_BasicToken__fail
[2020-11-25 15:00:33,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure setLocked~bool_BasicToken__success
[2020-11-25 15:00:33,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure canTransfer~address_BasicToken__fail
[2020-11-25 15:00:33,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure canTransfer~address_BasicToken__success
[2020-11-25 15:00:33,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 15:00:33,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 15:00:33,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-25 15:00:33,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-25 15:00:33,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowedAddresses~address_BasicToken__fail
[2020-11-25 15:00:33,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowedAddresses~address_BasicToken__success
[2020-11-25 15:00:33,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAddresses~address_BasicToken__fail
[2020-11-25 15:00:33,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAddresses~address_BasicToken__success
[2020-11-25 15:00:33,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure locked_BasicToken__fail
[2020-11-25 15:00:33,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure locked_BasicToken__success
[2020-11-25 15:00:33,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:00:33,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:00:33,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 15:00:33,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 15:00:33,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 15:00:33,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 15:00:33,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-25 15:00:33,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-25 15:00:33,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 15:00:33,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 15:00:33,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 15:00:33,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-25 15:00:33,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-25 15:00:33,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-25 15:00:33,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 15:00:33,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 15:00:33,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 15:00:33,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 15:00:33,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-25 15:00:33,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-25 15:00:33,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__fail
[2020-11-25 15:00:33,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__success
[2020-11-25 15:00:33,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__fail
[2020-11-25 15:00:33,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__success
[2020-11-25 15:00:33,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU_NoBaseCtor__fail
[2020-11-25 15:00:33,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU_NoBaseCtor__success
[2020-11-25 15:00:33,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU__fail
[2020-11-25 15:00:33,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure ECU_ECU__success
[2020-11-25 15:00:33,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ECU__fail
[2020-11-25 15:00:33,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ECU__success
[2020-11-25 15:00:33,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ECU__fail
[2020-11-25 15:00:33,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ECU__success
[2020-11-25 15:00:33,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ECU__fail
[2020-11-25 15:00:33,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ECU__success
[2020-11-25 15:00:33,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure initialSupply_ECU__fail
[2020-11-25 15:00:33,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure initialSupply_ECU__success
[2020-11-25 15:00:33,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 15:00:33,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 15:00:33,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 15:00:33,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 15:00:33,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 15:00:33,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 15:00:33,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 15:00:33,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 15:00:33,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 15:00:33,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 15:00:33,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 15:00:33,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 15:00:33,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-25 15:00:33,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-25 15:00:33,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-25 15:00:33,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-25 15:00:33,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 15:00:33,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 15:00:33,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-25 15:00:33,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-25 15:00:33,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BurnableToken
[2020-11-25 15:00:33,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BurnableToken
[2020-11-25 15:00:33,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ECU
[2020-11-25 15:00:33,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 15:00:33,090 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 15:00:33,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 15:00:33,531 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:00:33,531 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:00:33,531 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:00:34,025 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 15:00:34,025 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-25 15:00:34,028 INFO  L202        PluginConnector]: Adding new model ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:00:34 BoogieIcfgContainer
[2020-11-25 15:00:34,028 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:00:32" (2/2) ...
[2020-11-25 15:00:34,028 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 15:00:34,028 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@61251a6c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:00:34, skipping insertion in model container
[2020-11-25 15:00:34,028 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 15:00:34,029 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 15:00:34,029 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 15:00:34,030 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 15:00:34,030 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:00:32" (1/3) ...
[2020-11-25 15:00:34,030 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2a6a1ad2 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:00:34, skipping insertion in model container
[2020-11-25 15:00:34,030 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:00:32" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 15:00:34,066 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:00:34 NWAContainer
[2020-11-25 15:00:34,066 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 15:00:34,066 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 15:00:34,066 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 15:00:34,067 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 15:00:34,068 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:00:34" (3/4) ...
[2020-11-25 15:00:34,068 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@6c9ae46a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:00:34, skipping insertion in model container
[2020-11-25 15:00:34,069 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:00:34" (4/4) ...
[2020-11-25 15:00:34,071 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 15:00:34,076 INFO  L110   BuchiProductObserver]: Initial RCFG 2505 locations, 3476 edges
[2020-11-25 15:00:34,076 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 15:00:34,088 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 15:00:35,934 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 15:00:35,942 INFO  L110   BuchiProductObserver]: BuchiProgram size 6260 locations, 11462 edges
[2020-11-25 15:00:35,942 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:00:35 BoogieIcfgContainer
[2020-11-25 15:00:35,942 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 15:00:35,943 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 15:00:35,943 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 15:00:35,944 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 15:00:35,944 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:00:35" (1/1) ...
[2020-11-25 15:00:36,072 INFO  L313           BlockEncoder]: Initial Icfg 6260 locations, 11462 edges
[2020-11-25 15:00:36,072 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 15:00:36,072 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 15:00:36,073 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 15:00:36,073 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 15:00:36,087 INFO  L70    emoveInfeasibleEdges]: Removed 93 edges and 19 locations because of local infeasibility
[2020-11-25 15:00:36,099 INFO  L70        RemoveSinkStates]: Removed 14 edges and 9 locations by removing sink states
[2020-11-25 15:00:36,113 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 15:00:36,117 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 15:00:36,122 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 15:00:36,123 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 15:00:36,127 INFO  L313           BlockEncoder]: Encoded RCFG 6198 locations, 11305 edges
[2020-11-25 15:00:36,127 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:00:36 BasicIcfg
[2020-11-25 15:00:36,127 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 15:00:36,128 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 15:00:36,128 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 15:00:36,129 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 15:00:36,130 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:00:36,130 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:00:32" (1/6) ...
[2020-11-25 15:00:36,131 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@70ecfa36 and model type ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:00:36, skipping insertion in model container
[2020-11-25 15:00:36,131 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:00:36,131 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:00:32" (2/6) ...
[2020-11-25 15:00:36,131 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@70ecfa36 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:00:36, skipping insertion in model container
[2020-11-25 15:00:36,131 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:00:36,131 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:00:34" (3/6) ...
[2020-11-25 15:00:36,131 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@70ecfa36 and model type ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:00:36, skipping insertion in model container
[2020-11-25 15:00:36,132 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:00:36,132 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:00:34" (4/6) ...
[2020-11-25 15:00:36,132 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@70ecfa36 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:00:36, skipping insertion in model container
[2020-11-25 15:00:36,132 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:00:36,132 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:00:35" (5/6) ...
[2020-11-25 15:00:36,132 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@70ecfa36 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 03:00:36, skipping insertion in model container
[2020-11-25 15:00:36,132 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:00:36,132 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:00:36" (6/6) ...
[2020-11-25 15:00:36,133 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ECU_0x8fc9b6354e839ab1c8b31f4afa53607092b8c2e5_allowance.bpl_BEv2
[2020-11-25 15:00:36,159 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 15:00:36,159 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 15:00:36,159 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 15:00:36,159 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 15:00:36,160 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 15:00:36,160 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 15:00:36,160 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 15:00:36,160 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 15:00:36,160 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 15:00:36,206 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6198 states.
[2020-11-25 15:00:36,256 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:00:36,256 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:00:36,256 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:00:36,263 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:00:36,264 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:00:36,264 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 15:00:36,264 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6198 states.
[2020-11-25 15:00:36,286 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:00:36,286 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:00:36,286 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:00:36,288 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:00:36,288 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_StandardToken0 := false;
[L2]                 call_allowance_StandardToken0 := false;
[L2]     CALL        call main();
[L7234]              assume null == 0;
[L7235]  CALL        call this := FreshRefGenerator__success();
[L3065]              havoc newRef;
[L3066]              assume Alloc[newRef] == false;
[L3067]              Alloc[newRef] := true;
[L3068]              assume newRef != null;
[L7235]  RET         call this := FreshRefGenerator__success();
[L7236]              assume now >= 0;
[L7237]              assume DType[this] == ECU;
[L7238]              assume msgvalue_MSG == 0;
[L7239]              gas := gas - 53000;
[L7240]  CALL        call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L1849]              havoc __exception;
[L1850]              revert := false;
[L1851]  COND FALSE  !(__exception)
[L1880]  CALL        call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L4151]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L4151]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  COND TRUE   revert
[L1880]  RET         call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]              assume !revert && gas >= 0;
[L7240]  RET         call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L7241]              assume !revert && gas >= 0;

Loop:
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND TRUE   choice == 22
[L7089]              gas := gas - 21000;
[L7090]  COND FALSE  !(gas >= 0)
[L7244]  RET         call CorralChoice_ECU(this);

[2020-11-25 15:00:36,301 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:00:36,302 INFO  L82        PathProgramCache]: Analyzing trace with hash -325388907, now seen corresponding path program 1 times
[2020-11-25 15:00:36,305 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:00:36,322 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:00:36,353 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:00:36,355 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:00:36,355 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:00:36,819 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:00:36,829 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:00:36,829 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:00:36,831 INFO  L87              Difference]: Start difference. First operand 6198 states. Second operand 4 states.
[2020-11-25 15:00:37,334 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:00:37,334 INFO  L93              Difference]: Finished difference Result 3448 states and 3889 transitions.
[2020-11-25 15:00:37,334 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:00:37,336 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3448 states and 3889 transitions.
[2020-11-25 15:00:37,354 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:00:37,377 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3448 states to 3444 states and 3881 transitions.
[2020-11-25 15:00:37,379 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 15:00:37,385 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1021
[2020-11-25 15:00:37,386 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3444 states and 3881 transitions.
[2020-11-25 15:00:37,402 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:00:37,402 INFO  L728         BuchiCegarLoop]: Abstraction has 3444 states and 3881 transitions.
[2020-11-25 15:00:37,420 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3444 states and 3881 transitions.
[2020-11-25 15:00:37,476 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3444 to 3444.
[2020-11-25 15:00:37,477 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3444 states.
[2020-11-25 15:00:37,484 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3444 states to 3444 states and 3881 transitions.
[2020-11-25 15:00:37,485 INFO  L751         BuchiCegarLoop]: Abstraction has 3444 states and 3881 transitions.
[2020-11-25 15:00:37,485 INFO  L631         BuchiCegarLoop]: Abstraction has 3444 states and 3881 transitions.
[2020-11-25 15:00:37,485 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 15:00:37,485 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3444 states and 3881 transitions.
[2020-11-25 15:00:37,496 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:00:37,496 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:00:37,496 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:00:37,499 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:00:37,499 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_StandardToken0 := false;
[L2]                 call_allowance_StandardToken0 := false;
[L2]     CALL        call main();
[L7234]              assume null == 0;
[L7235]  CALL        call this := FreshRefGenerator__success();
[L3065]              havoc newRef;
[L3066]              assume Alloc[newRef] == false;
[L3067]              Alloc[newRef] := true;
[L3068]              assume newRef != null;
[L7235]  RET         call this := FreshRefGenerator__success();
[L7236]              assume now >= 0;
[L7237]              assume DType[this] == ECU;
[L7238]              assume msgvalue_MSG == 0;
[L7239]              gas := gas - 53000;
[L7240]  CALL        call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L1849]              havoc __exception;
[L1850]              revert := false;
[L1851]  COND FALSE  !(__exception)
[L1880]  CALL        call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L4151]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L4151]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  COND TRUE   revert
[L1880]  RET         call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]              assume !revert && gas >= 0;
[L7240]  RET         call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L7241]              assume !revert && gas >= 0;
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND FALSE  !(choice == 22)
[L7094]  COND FALSE  !(choice == 21)
[L7100]  COND FALSE  !(choice == 20)
[L7106]  COND FALSE  !(choice == 19)
[L7112]  COND FALSE  !(choice == 18)
[L7119]  COND FALSE  !(choice == 17)
[L7125]  COND FALSE  !(choice == 16)
[L7131]  COND FALSE  !(choice == 15)
[L7137]  COND FALSE  !(choice == 14)
[L7143]  COND FALSE  !(choice == 13)
[L7149]  COND FALSE  !(choice == 12)
[L7155]  COND FALSE  !(choice == 11)
[L7161]  COND TRUE   choice == 10
[L7162]              gas := gas - 21000;
[L7163]  COND TRUE   gas >= 0
[L7164]              assume msgvalue_MSG == 0;
[L7165]  CALL        call remaining_s525 := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StandardToken[this][_owner_s525][_spender_s525] >= 0 && allowed_StandardToken[this][_owner_s525][_spender_s525] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StandardToken0 := true;
[L2]                 call_allowance_StandardToken0 := false;
[L2]                 revert := revert_hold;
[L1472]              havoc __exception;
[L1473]              revert := false;
[L1474]  COND FALSE  !(__exception)
[L1503]  CALL        call remaining_s525 := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L3868]              remaining_s525 := allowed_StandardToken[this][_owner_s525][_spender_s525];
[L1503]  RET         call remaining_s525 := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L1504]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((remaining_s525 == allowed_StandardToken[this][_owner_s525][_spender_s525] && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this])) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this])) && locked_BasicToken[this] == old(locked_BasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L7165]  RET         call remaining_s525 := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L7244]  RET         call CorralChoice_ECU(this);

Loop:
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND FALSE  !(choice == 22)
[L7094]  COND FALSE  !(choice == 21)
[L7100]  COND FALSE  !(choice == 20)
[L7106]  COND FALSE  !(choice == 19)
[L7112]  COND FALSE  !(choice == 18)
[L7119]  COND FALSE  !(choice == 17)
[L7125]  COND FALSE  !(choice == 16)
[L7131]  COND FALSE  !(choice == 15)
[L7137]  COND FALSE  !(choice == 14)
[L7143]  COND FALSE  !(choice == 13)
[L7149]  COND FALSE  !(choice == 12)
[L7155]  COND FALSE  !(choice == 11)
[L7161]  COND TRUE   choice == 10
[L7162]              gas := gas - 21000;
[L7163]  COND TRUE   gas >= 0
[L7164]              assume msgvalue_MSG == 0;
[L7165]  CALL        call remaining_s525 := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StandardToken[this][_owner_s525][_spender_s525] >= 0 && allowed_StandardToken[this][_owner_s525][_spender_s525] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StandardToken0 := true;
[L2]                 call_allowance_StandardToken0 := false;
[L2]                 revert := revert_hold;
[L1472]              havoc __exception;
[L1473]              revert := false;
[L1474]  COND FALSE  !(__exception)
[L1503]  CALL        call remaining_s525 := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L3868]              remaining_s525 := allowed_StandardToken[this][_owner_s525][_spender_s525];
[L1503]  RET         call remaining_s525 := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L1504]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((remaining_s525 == allowed_StandardToken[this][_owner_s525][_spender_s525] && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this])) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this])) && locked_BasicToken[this] == old(locked_BasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L7165]  RET         call remaining_s525 := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L7244]  RET         call CorralChoice_ECU(this);

[2020-11-25 15:00:37,504 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:00:37,504 INFO  L82        PathProgramCache]: Analyzing trace with hash 929984659, now seen corresponding path program 1 times
[2020-11-25 15:00:37,505 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:00:37,516 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:00:37,544 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:00:37,544 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:00:37,544 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:00:37,546 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:00:37,546 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:00:37,546 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:00:37,546 INFO  L87              Difference]: Start difference. First operand 3444 states and 3881 transitions. cyclomatic complexity: 439 Second operand 4 states.
[2020-11-25 15:00:38,249 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:00:38,249 INFO  L93              Difference]: Finished difference Result 4632 states and 5255 transitions.
[2020-11-25 15:00:38,250 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:00:38,250 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4632 states and 5255 transitions.
[2020-11-25 15:00:38,265 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 15:00:38,283 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4632 states to 4536 states and 5147 transitions.
[2020-11-25 15:00:38,283 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1315
[2020-11-25 15:00:38,284 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1315
[2020-11-25 15:00:38,285 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4536 states and 5147 transitions.
[2020-11-25 15:00:38,292 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:00:38,292 INFO  L728         BuchiCegarLoop]: Abstraction has 4536 states and 5147 transitions.
[2020-11-25 15:00:38,296 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4536 states and 5147 transitions.
[2020-11-25 15:00:38,331 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4536 to 3624.
[2020-11-25 15:00:38,331 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3624 states.
[2020-11-25 15:00:38,335 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3624 states to 3624 states and 3963 transitions.
[2020-11-25 15:00:38,335 INFO  L751         BuchiCegarLoop]: Abstraction has 3624 states and 3963 transitions.
[2020-11-25 15:00:38,335 INFO  L631         BuchiCegarLoop]: Abstraction has 3624 states and 3963 transitions.
[2020-11-25 15:00:38,335 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 15:00:38,335 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3624 states and 3963 transitions.
[2020-11-25 15:00:38,341 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:00:38,341 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:00:38,341 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:00:38,345 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:00:38,345 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_StandardToken0 := false;
[L2]                 call_allowance_StandardToken0 := false;
[L2]     CALL        call main();
[L7234]              assume null == 0;
[L7235]  CALL        call this := FreshRefGenerator__success();
[L3065]              havoc newRef;
[L3066]              assume Alloc[newRef] == false;
[L3067]              Alloc[newRef] := true;
[L3068]              assume newRef != null;
[L7235]  RET         call this := FreshRefGenerator__success();
[L7236]              assume now >= 0;
[L7237]              assume DType[this] == ECU;
[L7238]              assume msgvalue_MSG == 0;
[L7239]              gas := gas - 53000;
[L7240]  CALL        call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L1849]              havoc __exception;
[L1850]              revert := false;
[L1851]  COND FALSE  !(__exception)
[L1880]  CALL        call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L4151]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L4151]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  COND FALSE  !(revert)
[L4155]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L4155]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4156]  COND FALSE  !(revert)
[L4159]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L4159]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4160]  COND FALSE  !(revert)
[L4163]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L4163]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4164]  COND FALSE  !(revert)
[L4167]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3696]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3697]  COND FALSE  !(revert)
[L3700]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3700]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3701]  COND FALSE  !(revert)
[L3704]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3704]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3705]  COND FALSE  !(revert)
[L3708]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L3708]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  COND FALSE  !(revert)
[L3712]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]              assume msgsender_MSG != null;
[L3664]              Balance[this] := 0;
[L3665]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3666]              sum_allowed3[this] := 0;
[L3712]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3713]  COND FALSE  !(revert)
[L4167]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4168]  COND FALSE  !(revert)
[L4171]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3992]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3992]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3993]  COND FALSE  !(revert)
[L3996]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3996]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]  COND FALSE  !(revert)
[L4000]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L4000]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4001]  COND FALSE  !(revert)
[L4004]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L4004]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4005]  COND FALSE  !(revert)
[L4008]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3696]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3697]  COND FALSE  !(revert)
[L3700]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3700]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3701]  COND FALSE  !(revert)
[L3704]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3704]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3705]  COND FALSE  !(revert)
[L3708]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L3708]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  COND FALSE  !(revert)
[L3712]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]              assume msgsender_MSG != null;
[L3664]              Balance[this] := 0;
[L3665]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3666]              sum_allowed3[this] := 0;
[L3712]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3713]  COND FALSE  !(revert)
[L4008]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4009]  COND FALSE  !(revert)
[L4012]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3957]              assume msgsender_MSG != null;
[L3958]              Balance[this] := 0;
[L4012]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4013]  COND FALSE  !(revert)
[L4171]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]  COND FALSE  !(revert)
[L4175]  CALL        call ECU_ECU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4099]              assume msgsender_MSG != null;
[L4100]              Balance[this] := 0;
[L4101]              name_ECU[this] := -2027621617;
[L4102]              symbol_ECU[this] := 1342424742;
[L4103]              decimals_ECU[this] := 18;
[L4104]              __var_15 := decimals_ECU[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4105]              initialSupply_ECU[this] := 1000000000 * (nonlinearPow(10, decimals_ECU[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4107]              totalSupply_ERC20Basic[this] := initialSupply_ECU[this];
[L4108]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][19781008330533595146085782002824322930726574509];
[L4109]              balances_BasicToken[this][19781008330533595146085782002824322930726574509] := initialSupply_ECU[this];
[L4110]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][19781008330533595146085782002824322930726574509];
[L4111]              assert { :EventEmitted "Transfer_ECU" } true;
[L4112]              allowedAddresses_BasicToken[this][owner_Ownable[this]] := true;
[L4175]  RET         call ECU_ECU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4176]  COND FALSE  !(revert)
[L1880]  RET         call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]              assume !revert && gas >= 0;
[L7240]  RET         call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L7241]              assume !revert && gas >= 0;
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND FALSE  !(choice == 22)
[L7094]  COND FALSE  !(choice == 21)
[L7100]  COND FALSE  !(choice == 20)
[L7106]  COND FALSE  !(choice == 19)
[L7112]  COND FALSE  !(choice == 18)
[L7119]  COND FALSE  !(choice == 17)
[L7125]  COND FALSE  !(choice == 16)
[L7131]  COND FALSE  !(choice == 15)
[L7137]  COND FALSE  !(choice == 14)
[L7143]  COND FALSE  !(choice == 13)
[L7149]  COND FALSE  !(choice == 12)
[L7155]  COND FALSE  !(choice == 11)
[L7161]  COND TRUE   choice == 10
[L7162]              gas := gas - 21000;
[L7163]  COND TRUE   gas >= 0
[L7164]              assume msgvalue_MSG == 0;
[L7165]  CALL        call remaining_s525 := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StandardToken[this][_owner_s525][_spender_s525] >= 0 && allowed_StandardToken[this][_owner_s525][_spender_s525] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StandardToken0 := true;
[L2]                 call_allowance_StandardToken0 := false;
[L2]                 revert := revert_hold;
[L1472]              havoc __exception;
[L1473]              revert := false;
[L1474]  COND FALSE  !(__exception)
[L1503]  CALL        call remaining_s525 := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L3868]              remaining_s525 := allowed_StandardToken[this][_owner_s525][_spender_s525];
[L1503]  RET         call remaining_s525 := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L1504]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((remaining_s525 == allowed_StandardToken[this][_owner_s525][_spender_s525] && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this])) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this])) && locked_BasicToken[this] == old(locked_BasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L7165]  RET         call remaining_s525 := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L7244]  RET         call CorralChoice_ECU(this);

Loop:
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND FALSE  !(choice == 22)
[L7094]  COND FALSE  !(choice == 21)
[L7100]  COND FALSE  !(choice == 20)
[L7106]  COND FALSE  !(choice == 19)
[L7112]  COND FALSE  !(choice == 18)
[L7119]  COND FALSE  !(choice == 17)
[L7125]  COND FALSE  !(choice == 16)
[L7131]  COND FALSE  !(choice == 15)
[L7137]  COND FALSE  !(choice == 14)
[L7143]  COND FALSE  !(choice == 13)
[L7149]  COND FALSE  !(choice == 12)
[L7155]  COND FALSE  !(choice == 11)
[L7161]  COND TRUE   choice == 10
[L7162]              gas := gas - 21000;
[L7163]  COND TRUE   gas >= 0
[L7164]              assume msgvalue_MSG == 0;
[L7165]  CALL        call remaining_s525 := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StandardToken[this][_owner_s525][_spender_s525] >= 0 && allowed_StandardToken[this][_owner_s525][_spender_s525] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StandardToken0 := true;
[L2]                 call_allowance_StandardToken0 := false;
[L2]                 revert := revert_hold;
[L1472]              havoc __exception;
[L1473]              revert := false;
[L1474]  COND FALSE  !(__exception)
[L1503]  CALL        call remaining_s525 := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L3868]              remaining_s525 := allowed_StandardToken[this][_owner_s525][_spender_s525];
[L1503]  RET         call remaining_s525 := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L1504]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((remaining_s525 == allowed_StandardToken[this][_owner_s525][_spender_s525] && totalSupply_ERC20Basic[this] == old(totalSupply_ERC20Basic[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && allowedAddresses_BasicToken[this] == old(allowedAddresses_BasicToken[this])) && lockedAddresses_BasicToken[this] == old(lockedAddresses_BasicToken[this])) && locked_BasicToken[this] == old(locked_BasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L7165]  RET         call remaining_s525 := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L7244]  RET         call CorralChoice_ECU(this);

[2020-11-25 15:00:38,351 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:00:38,351 INFO  L82        PathProgramCache]: Analyzing trace with hash 700025640, now seen corresponding path program 1 times
[2020-11-25 15:00:38,352 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:00:38,375 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:00:38,554 INFO  L134       CoverageAnalysis]: Checked inductivity of 1312 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 1312 trivial. 0 not checked.
[2020-11-25 15:00:38,554 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:00:38,554 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:00:38,555 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:00:38,555 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:00:38,555 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:00:38,555 INFO  L87              Difference]: Start difference. First operand 3624 states and 3963 transitions. cyclomatic complexity: 341 Second operand 4 states.
[2020-11-25 15:00:38,623 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:00:38,623 INFO  L93              Difference]: Finished difference Result 3625 states and 3962 transitions.
[2020-11-25 15:00:38,623 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:00:38,623 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3625 states and 3962 transitions.
[2020-11-25 15:00:38,630 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:00:38,639 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3625 states to 3615 states and 3952 transitions.
[2020-11-25 15:00:38,639 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1099
[2020-11-25 15:00:38,640 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1099
[2020-11-25 15:00:38,640 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3615 states and 3952 transitions.
[2020-11-25 15:00:38,642 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:00:38,642 INFO  L728         BuchiCegarLoop]: Abstraction has 3615 states and 3952 transitions.
[2020-11-25 15:00:38,645 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3615 states and 3952 transitions.
[2020-11-25 15:00:38,669 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3615 to 3613.
[2020-11-25 15:00:38,670 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3613 states.
[2020-11-25 15:00:38,673 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3613 states to 3613 states and 3950 transitions.
[2020-11-25 15:00:38,673 INFO  L751         BuchiCegarLoop]: Abstraction has 3613 states and 3950 transitions.
[2020-11-25 15:00:38,673 INFO  L631         BuchiCegarLoop]: Abstraction has 3613 states and 3950 transitions.
[2020-11-25 15:00:38,673 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 15:00:38,673 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3613 states and 3950 transitions.
[2020-11-25 15:00:38,678 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:00:38,678 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:00:38,678 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:00:38,680 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:00:38,680 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_StandardToken0 := false;
[L2]                 call_allowance_StandardToken0 := false;
[L2]     CALL        call main();
[L7234]              assume null == 0;
[L7235]  CALL        call this := FreshRefGenerator__success();
[L3065]              havoc newRef;
[L3066]              assume Alloc[newRef] == false;
[L3067]              Alloc[newRef] := true;
[L3068]              assume newRef != null;
[L7235]  RET         call this := FreshRefGenerator__success();
[L7236]              assume now >= 0;
[L7237]              assume DType[this] == ECU;
[L7238]              assume msgvalue_MSG == 0;
[L7239]              gas := gas - 53000;
[L7240]  CALL        call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L1849]              havoc __exception;
[L1850]              revert := false;
[L1851]  COND FALSE  !(__exception)
[L1880]  CALL        call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L4151]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L4151]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  COND FALSE  !(revert)
[L4155]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L4155]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4156]  COND FALSE  !(revert)
[L4159]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L4159]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4160]  COND FALSE  !(revert)
[L4163]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L4163]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4164]  COND FALSE  !(revert)
[L4167]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3696]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3697]  COND FALSE  !(revert)
[L3700]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3700]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3701]  COND FALSE  !(revert)
[L3704]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3704]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3705]  COND FALSE  !(revert)
[L3708]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L3708]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  COND FALSE  !(revert)
[L3712]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]              assume msgsender_MSG != null;
[L3664]              Balance[this] := 0;
[L3665]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3666]              sum_allowed3[this] := 0;
[L3712]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3713]  COND FALSE  !(revert)
[L4167]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4168]  COND FALSE  !(revert)
[L4171]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3992]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3992]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3993]  COND FALSE  !(revert)
[L3996]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3996]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]  COND FALSE  !(revert)
[L4000]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L4000]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4001]  COND FALSE  !(revert)
[L4004]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L4004]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4005]  COND FALSE  !(revert)
[L4008]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3696]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3696]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3697]  COND FALSE  !(revert)
[L3700]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3640]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3640]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND FALSE  !(revert)
[L3644]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]              assume msgsender_MSG != null;
[L3622]              Balance[this] := 0;
[L3644]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3645]  COND FALSE  !(revert)
[L3700]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3701]  COND FALSE  !(revert)
[L3704]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3704]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3705]  COND FALSE  !(revert)
[L3708]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3335]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3273]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3257]              assume msgsender_MSG != null;
[L3258]              Balance[this] := 0;
[L3259]              totalSupply_ERC20Basic[this] := 0;
[L3273]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3274]  COND FALSE  !(revert)
[L3335]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]  COND FALSE  !(revert)
[L3339]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3196]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3179]              assume msgsender_MSG != null;
[L3180]              Balance[this] := 0;
[L3181]              owner_Ownable[this] := null;
[L3183]              owner_Ownable[this] := 19781008330533595146085782002824322930726574509;
[L3196]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3197]  COND FALSE  !(revert)
[L3339]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3340]  COND FALSE  !(revert)
[L3343]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3307]              assume msgsender_MSG != null;
[L3308]              Balance[this] := 0;
[L3309]              balances_BasicToken[this] := zeroRefintArr();
[L3310]              sum_balances0[this] := 0;
[L3311]              allowedAddresses_BasicToken[this] := zeroRefboolArr();
[L3312]              lockedAddresses_BasicToken[this] := zeroRefboolArr();
[L3313]              locked_BasicToken[this] := true;
[L3343]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3344]  COND FALSE  !(revert)
[L3708]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  COND FALSE  !(revert)
[L3712]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]              assume msgsender_MSG != null;
[L3664]              Balance[this] := 0;
[L3665]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3666]              sum_allowed3[this] := 0;
[L3712]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3713]  COND FALSE  !(revert)
[L4008]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4009]  COND FALSE  !(revert)
[L4012]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3957]              assume msgsender_MSG != null;
[L3958]              Balance[this] := 0;
[L4012]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4013]  COND FALSE  !(revert)
[L4171]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]  COND FALSE  !(revert)
[L4175]  CALL        call ECU_ECU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4099]              assume msgsender_MSG != null;
[L4100]              Balance[this] := 0;
[L4101]              name_ECU[this] := -2027621617;
[L4102]              symbol_ECU[this] := 1342424742;
[L4103]              decimals_ECU[this] := 18;
[L4104]              __var_15 := decimals_ECU[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4105]              initialSupply_ECU[this] := 1000000000 * (nonlinearPow(10, decimals_ECU[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4107]              totalSupply_ERC20Basic[this] := initialSupply_ECU[this];
[L4108]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][19781008330533595146085782002824322930726574509];
[L4109]              balances_BasicToken[this][19781008330533595146085782002824322930726574509] := initialSupply_ECU[this];
[L4110]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][19781008330533595146085782002824322930726574509];
[L4111]              assert { :EventEmitted "Transfer_ECU" } true;
[L4112]              allowedAddresses_BasicToken[this][owner_Ownable[this]] := true;
[L4175]  RET         call ECU_ECU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4176]  COND FALSE  !(revert)
[L1880]  RET         call ECU_ECU__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]              assume !revert && gas >= 0;
[L7240]  RET         call ECU_ECU(this, msgsender_MSG, msgvalue_MSG);
[L7241]              assume !revert && gas >= 0;
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND FALSE  !(choice == 22)
[L7094]  COND FALSE  !(choice == 21)
[L7100]  COND FALSE  !(choice == 20)
[L7106]  COND FALSE  !(choice == 19)
[L7112]  COND FALSE  !(choice == 18)
[L7119]  COND FALSE  !(choice == 17)
[L7125]  COND FALSE  !(choice == 16)
[L7131]  COND FALSE  !(choice == 15)
[L7137]  COND FALSE  !(choice == 14)
[L7143]  COND FALSE  !(choice == 13)
[L7149]  COND FALSE  !(choice == 12)
[L7155]  COND FALSE  !(choice == 11)
[L7161]  COND TRUE   choice == 10
[L7162]              gas := gas - 21000;
[L7163]  COND TRUE   gas >= 0
[L7164]              assume msgvalue_MSG == 0;
[L7165]  CALL        call remaining_s525 := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StandardToken[this][_owner_s525][_spender_s525] >= 0 && allowed_StandardToken[this][_owner_s525][_spender_s525] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StandardToken0 := true;
[L2]                 call_allowance_StandardToken0 := false;
[L2]                 revert := revert_hold;
[L1472]              havoc __exception;
[L1473]              revert := false;
[L1474]  COND TRUE   __exception
[L1475]              __tmp__Balance := Balance;
[L1476]              __tmp__DType := DType;
[L1477]              __tmp__Alloc := Alloc;
[L1478]              __tmp__balance_ADDR := balance_ADDR;
[L1479]              __tmp__M_Ref_int := M_Ref_int;
[L1480]              __tmp__sum_balances0 := sum_balances0;
[L1481]              __tmp__M_Ref_bool := M_Ref_bool;
[L1482]              __tmp__sum_allowedAddresses1 := sum_allowedAddresses1;
[L1483]              __tmp__sum_lockedAddresses2 := sum_lockedAddresses2;
[L1484]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1485]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1486]              __tmp__sum_allowed3 := sum_allowed3;
[L1487]              __tmp__Length := Length;
[L1488]              __tmp__now := now;
[L1489]              __tmp__owner_Ownable := owner_Ownable;
[L1490]              __tmp__totalSupply_ERC20Basic := totalSupply_ERC20Basic;
[L1491]              __tmp__balances_BasicToken := balances_BasicToken;
[L1492]              __tmp__allowedAddresses_BasicToken := allowedAddresses_BasicToken;
[L1493]              __tmp__lockedAddresses_BasicToken := lockedAddresses_BasicToken;
[L1494]              __tmp__locked_BasicToken := locked_BasicToken;
[L1495]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L1496]              __tmp__name_ECU := name_ECU;
[L1497]              __tmp__symbol_ECU := symbol_ECU;
[L1498]              __tmp__decimals_ECU := decimals_ECU;
[L1499]              __tmp__initialSupply_ECU := initialSupply_ECU;
[L1500]  CALL        call remaining_s525 := allowance~address~address_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L3862]              remaining_s525 := __tmp__allowed_StandardToken[this][_owner_s525][_spender_s525];
[L1500]  RET         call remaining_s525 := allowance~address~address_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L1501]              assume revert || gas < 0;
[L7165]  RET         call remaining_s525 := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L7244]  RET         call CorralChoice_ECU(this);

Loop:
[L7244]  CALL        call CorralChoice_ECU(this);
[L7028]              havoc msgsender_MSG;
[L7029]              havoc msgvalue_MSG;
[L7030]              havoc choice;
[L7031]              havoc __ret_0_owner;
[L7032]              havoc newOwner_s146;
[L7033]              havoc __ret_0_totalSupply;
[L7034]              havoc _owner_s352;
[L7035]              havoc balance_s352;
[L7036]              havoc _to_s340;
[L7037]              havoc _value_s340;
[L7038]              havoc __ret_0_transfer;
[L7039]              havoc arg745_s0;
[L7040]              havoc __ret_0_allowedAddresses;
[L7041]              havoc arg746_s0;
[L7042]              havoc __ret_0_lockedAddresses;
[L7043]              havoc __ret_0_locked;
[L7044]              havoc _addr_s218;
[L7045]              havoc _allowed_s218;
[L7046]              havoc _addr_s240;
[L7047]              havoc _locked_s240;
[L7048]              havoc _locked_s252;
[L7049]              havoc _addr_s282;
[L7050]              havoc __ret_0_canTransfer;
[L7051]              havoc _owner_s525;
[L7052]              havoc _spender_s525;
[L7053]              havoc remaining_s525;
[L7054]              havoc _from_s481;
[L7055]              havoc _to_s481;
[L7056]              havoc _value_s481;
[L7057]              havoc __ret_0_transferFrom;
[L7058]              havoc _spender_s509;
[L7059]              havoc _value_s509;
[L7060]              havoc __ret_0_approve;
[L7061]              havoc _spender_s566;
[L7062]              havoc _addedValue_s566;
[L7063]              havoc success_s566;
[L7064]              havoc _spender_s626;
[L7065]              havoc _subtractedValue_s626;
[L7066]              havoc success_s626;
[L7067]              havoc _value_s692;
[L7068]              havoc __ret_0_name;
[L7069]              havoc __ret_0_symbol;
[L7070]              havoc __ret_0_decimals;
[L7071]              havoc __ret_0_initialSupply;
[L7072]              havoc tmpNow;
[L7073]              havoc gas;
[L7074]              assume gas > 4000000 && gas <= 8000000;
[L7075]              tmpNow := now;
[L7076]              havoc now;
[L7077]              assume now > tmpNow;
[L7078]              assume msgsender_MSG != null;
[L7079]              assume DType[msgsender_MSG] != SafeMath;
[L7080]              assume DType[msgsender_MSG] != Ownable;
[L7081]              assume DType[msgsender_MSG] != ERC20Basic;
[L7082]              assume DType[msgsender_MSG] != BasicToken;
[L7083]              assume DType[msgsender_MSG] != ERC20;
[L7084]              assume DType[msgsender_MSG] != StandardToken;
[L7085]              assume DType[msgsender_MSG] != BurnableToken;
[L7086]              assume DType[msgsender_MSG] != ECU;
[L7087]              Alloc[msgsender_MSG] := true;
[L7088]  COND FALSE  !(choice == 22)
[L7094]  COND FALSE  !(choice == 21)
[L7100]  COND FALSE  !(choice == 20)
[L7106]  COND FALSE  !(choice == 19)
[L7112]  COND FALSE  !(choice == 18)
[L7119]  COND FALSE  !(choice == 17)
[L7125]  COND FALSE  !(choice == 16)
[L7131]  COND FALSE  !(choice == 15)
[L7137]  COND FALSE  !(choice == 14)
[L7143]  COND FALSE  !(choice == 13)
[L7149]  COND FALSE  !(choice == 12)
[L7155]  COND FALSE  !(choice == 11)
[L7161]  COND TRUE   choice == 10
[L7162]              gas := gas - 21000;
[L7163]  COND TRUE   gas >= 0
[L7164]              assume msgvalue_MSG == 0;
[L7165]  CALL        call remaining_s525 := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StandardToken[this][_owner_s525][_spender_s525] >= 0 && allowed_StandardToken[this][_owner_s525][_spender_s525] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StandardToken0 := true;
[L2]                 call_allowance_StandardToken0 := false;
[L2]                 revert := revert_hold;
[L1472]              havoc __exception;
[L1473]              revert := false;
[L1474]  COND TRUE   __exception
[L1475]              __tmp__Balance := Balance;
[L1476]              __tmp__DType := DType;
[L1477]              __tmp__Alloc := Alloc;
[L1478]              __tmp__balance_ADDR := balance_ADDR;
[L1479]              __tmp__M_Ref_int := M_Ref_int;
[L1480]              __tmp__sum_balances0 := sum_balances0;
[L1481]              __tmp__M_Ref_bool := M_Ref_bool;
[L1482]              __tmp__sum_allowedAddresses1 := sum_allowedAddresses1;
[L1483]              __tmp__sum_lockedAddresses2 := sum_lockedAddresses2;
[L1484]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1485]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1486]              __tmp__sum_allowed3 := sum_allowed3;
[L1487]              __tmp__Length := Length;
[L1488]              __tmp__now := now;
[L1489]              __tmp__owner_Ownable := owner_Ownable;
[L1490]              __tmp__totalSupply_ERC20Basic := totalSupply_ERC20Basic;
[L1491]              __tmp__balances_BasicToken := balances_BasicToken;
[L1492]              __tmp__allowedAddresses_BasicToken := allowedAddresses_BasicToken;
[L1493]              __tmp__lockedAddresses_BasicToken := lockedAddresses_BasicToken;
[L1494]              __tmp__locked_BasicToken := locked_BasicToken;
[L1495]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L1496]              __tmp__name_ECU := name_ECU;
[L1497]              __tmp__symbol_ECU := symbol_ECU;
[L1498]              __tmp__decimals_ECU := decimals_ECU;
[L1499]              __tmp__initialSupply_ECU := initialSupply_ECU;
[L1500]  CALL        call remaining_s525 := allowance~address~address_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L3862]              remaining_s525 := __tmp__allowed_StandardToken[this][_owner_s525][_spender_s525];
[L1500]  RET         call remaining_s525 := allowance~address~address_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L1501]              assume revert || gas < 0;
[L7165]  RET         call remaining_s525 := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s525, _spender_s525);
[L7244]  RET         call CorralChoice_ECU(this);

[2020-11-25 15:00:38,685 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:00:38,685 INFO  L82        PathProgramCache]: Analyzing trace with hash -1156133631, now seen corresponding path program 1 times
[2020-11-25 15:00:38,686 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:00:38,706 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:00:38,863 INFO  L134       CoverageAnalysis]: Checked inductivity of 1312 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 1312 trivial. 0 not checked.
[2020-11-25 15:00:38,863 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:00:38,864 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 15:00:38,864 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:00:38,864 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 15:00:38,864 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 15:00:38,864 INFO  L87              Difference]: Start difference. First operand 3613 states and 3950 transitions. cyclomatic complexity: 339 Second operand 5 states.
[2020-11-25 15:00:39,037 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:00:39,037 INFO  L93              Difference]: Finished difference Result 2354 states and 2569 transitions.
[2020-11-25 15:00:39,037 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 15:00:39,037 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2354 states and 2569 transitions.
[2020-11-25 15:00:39,041 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 15:00:39,041 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2354 states to 0 states and 0 transitions.
[2020-11-25 15:00:39,041 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 15:00:39,041 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 15:00:39,041 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 15:00:39,042 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:00:39,042 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 15:00:39,042 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 15:00:39,042 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 15:00:39,042 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 15:00:39,042 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 15:00:39,042 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 15:00:39,042 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 15:00:39,045 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:00:39 BasicIcfg
[2020-11-25 15:00:39,045 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 15:00:39,045 INFO  L168              Benchmark]: Toolchain (without parser) took 6252.46 ms. Allocated memory was 1.0 GB in the beginning and 1.7 GB in the end (delta: 697.3 MB). Free memory was 935.2 MB in the beginning and 1.2 GB in the end (delta: -216.0 MB). Peak memory consumption was 481.3 MB. Max. memory is 15.3 GB.
[2020-11-25 15:00:39,046 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.22 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:00:39,046 INFO  L168              Benchmark]: Boogie Preprocessor took 124.13 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 913.7 MB in the end (delta: 21.5 MB). Peak memory consumption was 21.5 MB. Max. memory is 15.3 GB.
[2020-11-25 15:00:39,047 INFO  L168              Benchmark]: UtopiaSpecLang took 68.89 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.3 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:00:39,047 INFO  L168              Benchmark]: Boogie Printer took 22.07 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:00:39,047 INFO  L168              Benchmark]: RCFGBuilder took 1018.35 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 74.4 MB). Free memory was 903.0 MB in the beginning and 999.4 MB in the end (delta: -96.4 MB). Peak memory consumption was 192.2 MB. Max. memory is 15.3 GB.
[2020-11-25 15:00:39,048 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.73 ms. Allocated memory is still 1.1 GB. Free memory was 999.4 MB in the beginning and 992.3 MB in the end (delta: 7.1 MB). Peak memory consumption was 7.1 MB. Max. memory is 15.3 GB.
[2020-11-25 15:00:39,048 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1876.00 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 149.9 MB). Free memory was 992.3 MB in the beginning and 846.5 MB in the end (delta: 145.8 MB). Peak memory consumption was 523.6 MB. Max. memory is 15.3 GB.
[2020-11-25 15:00:39,048 INFO  L168              Benchmark]: BlockEncodingV2 took 184.88 ms. Allocated memory is still 1.3 GB. Free memory was 846.5 MB in the beginning and 756.5 MB in the end (delta: 90.0 MB). Peak memory consumption was 90.0 MB. Max. memory is 15.3 GB.
[2020-11-25 15:00:39,049 INFO  L168              Benchmark]: BuchiAutomizer took 2917.43 ms. Allocated memory was 1.3 GB in the beginning and 1.7 GB in the end (delta: 472.9 MB). Free memory was 756.5 MB in the beginning and 1.2 GB in the end (delta: -394.7 MB). Peak memory consumption was 78.2 MB. Max. memory is 15.3 GB.
[2020-11-25 15:00:39,051 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    6260 locations, 11462 edges
  - StatisticsResult: Encoded RCFG
    6198 locations, 11305 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.22 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 124.13 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 913.7 MB in the end (delta: 21.5 MB). Peak memory consumption was 21.5 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 68.89 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.3 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 22.07 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1018.35 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 74.4 MB). Free memory was 903.0 MB in the beginning and 999.4 MB in the end (delta: -96.4 MB). Peak memory consumption was 192.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.73 ms. Allocated memory is still 1.1 GB. Free memory was 999.4 MB in the beginning and 992.3 MB in the end (delta: 7.1 MB). Peak memory consumption was 7.1 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1876.00 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 149.9 MB). Free memory was 992.3 MB in the beginning and 846.5 MB in the end (delta: 145.8 MB). Peak memory consumption was 523.6 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 184.88 ms. Allocated memory is still 1.3 GB. Free memory was 846.5 MB in the beginning and 756.5 MB in the end (delta: 90.0 MB). Peak memory consumption was 90.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2917.43 ms. Allocated memory was 1.3 GB in the beginning and 1.7 GB in the end (delta: 472.9 MB). Free memory was 756.5 MB in the beginning and 1.2 GB in the end (delta: -394.7 MB). Peak memory consumption was 78.2 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2505 locations, 3476 edges
  - StatisticsResult: BuchiProgram size
    6260 locations, 11462 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.8s and 5 iterations.  TraceHistogramMax:12. Analysis of lassos took 0.9s. Construction of modules took 1.0s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 914 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 3624 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 14343 SDtfs, 11941 SDslu, 17391 SDs, 0 SdLazy, 2926 SolverSat, 2600 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.0s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_allowance_StandardToken0) ==> ( <>(success_allowance_StandardToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
